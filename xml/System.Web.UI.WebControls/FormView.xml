<Type Name="FormView" FullName="System.Web.UI.WebControls.FormView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b079858ce055429e370514f22fb069c6222943f9" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34311478" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormView" />
  <TypeSignature Language="VB.NET" Value="Public Class FormView&#xA;Inherits CompositeDataBoundControl&#xA;Implements IDataBoundItemControl, IDataItemContainer, IPostBackContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IDataBoundItemControl, System::Web::UI::WebControls::IPostBackContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Affiche les valeurs d’un enregistrement unique d’une source de données à l’aide de modèles définis par l’utilisateur. Le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> vous permet de modifier, supprimer et insérer des enregistrements.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans cette rubrique :  
  
-   [Introduction](#introduction)  
  
-   [Modèles](#templates)  
  
-   [Liaison de données](#binding_to_data)  
  
-   [Opérations de données](#data_operations)  
  
-   [Personnalisation de l’Interface utilisateur](#customizing_the_user_interface)  
  
-   [Événements](#events)  
  
-   [Accessibilité](#accessibility)  
  
-   [Application de Styles CSS](#applying_styles)  
  
-   [Syntaxe déclarative](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduction  
 Le <xref:System.Web.UI.WebControls.FormView> contrôle est utilisé pour afficher un enregistrement unique d’une source de données. Il est similaire à la <xref:System.Web.UI.WebControls.DetailsView> contrôler, mais il affiche des modèles définis par l’utilisateur au lieu de champs de ligne. Création de vos propres modèles, vous donne plus de souplesse pour contrôler la façon dont les données sont affichées. Le <xref:System.Web.UI.WebControls.FormView> contrôle prend en charge les fonctionnalités suivantes :  
  
-   Liaison aux contrôles de source de données, telle que <xref:System.Web.UI.WebControls.SqlDataSource> et <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
-   Fonctionnalités intégrées d’insertion.  
  
-   Intégré à jour et suppression de capacités.  
  
-   Fonctionnalités intégrées de pagination.  
  
-   Accès par programmation à le <xref:System.Web.UI.WebControls.FormView> modèle objet pour définir les propriétés dynamiquement, gérer les événements et ainsi de suite.  
  
-   Apparence personnalisable grâce aux modèles définis par l’utilisateur, les thèmes et styles.  
  
<a name="templates"></a>   
## <a name="templates"></a>Modèles  
 Pour le <xref:System.Web.UI.WebControls.FormView> pour afficher le contenu de contrôle, vous devez créer des modèles pour les différentes parties du contrôle. La plupart des modèles sont facultatifs ; Toutefois, vous devez créer un modèle pour le mode dans lequel le contrôle est configuré. Par exemple, un <xref:System.Web.UI.WebControls.FormView> contrôle qui prend en charge l’insertion d’enregistrements doit disposer d’un modèle d’élément insert défini. Le tableau suivant répertorie les différents modèles que vous pouvez créer.  
  
|Type de modèle|Description |  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|Définit le contenu pour les données de ligne lorsque la <xref:System.Web.UI.WebControls.FormView> contrôle est en mode édition. Ce modèle contient généralement des contrôles d’entrée et des boutons de commande avec lequel l’utilisateur peut modifier un enregistrement existant.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|Définit le contenu de la ligne de données vide affichée lorsque la <xref:System.Web.UI.WebControls.FormView> contrôle est lié à une source de données qui ne contient-elle pas d’enregistrements. Ce modèle contient généralement le contenu pour avertir l’utilisateur que la source de données ne contient pas d’enregistrements.|  
|<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|Définit le contenu de la ligne de pied de page. Ce modèle contient généralement le contenu supplémentaire que vous souhaitez afficher dans la ligne de pied de page. **Remarque :** en guise d’alternative, vous pouvez simplement spécifier le texte à afficher dans la ligne de pied de page en définissant le <xref:System.Web.UI.WebControls.FormView.FooterText%2A> propriété.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|Définit le contenu de la ligne d’en-tête. Ce modèle contient généralement le contenu supplémentaire que vous souhaitez afficher dans la ligne d’en-tête. **Remarque :** en guise d’alternative, vous pouvez simplement spécifier le texte à afficher dans la ligne d’en-tête en définissant le <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> propriété.|  
|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|Définit le contenu pour les données de ligne lorsque la <xref:System.Web.UI.WebControls.FormView> contrôle est en mode lecture seule. Ce modèle contient généralement le contenu à afficher les valeurs d’un enregistrement existant.|  
|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|Définit le contenu pour les données de ligne lorsque la <xref:System.Web.UI.WebControls.FormView> contrôle est en mode insertion. Ce modèle contient généralement des contrôles d’entrée et des boutons de commande avec lequel l’utilisateur peut ajouter un nouvel enregistrement.|  
|<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|Définit le contenu de la ligne du pagineur affichée lorsque la fonctionnalité de pagination est activée (lorsque le <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> est définie sur `true`). Ce modèle contient généralement des contrôles avec lequel l’utilisateur d’accéder à un autre enregistrement. **Remarque :** le <xref:System.Web.UI.WebControls.FormView> contrôle a une radiomessagerie intégrés ligne interface utilisateur (). Vous devez créer un modèle de pagineur uniquement si vous souhaitez créer votre propre ligne de pagineur personnalisée.|  
  
 Pour afficher la valeur d’un champ dans un modèle d’élément, utilisez une expression de liaison de données. Pour plus d’informations sur les expressions de liaison de données, consultez [syntaxe d’Expression de liaison de données](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca).  
  
 Les contrôles d’entrée dans le modèle d’élément de modification et le modèle d’élément insert peuvent être liés aux champs d’une source de données à l’aide d’une expression de liaison bidirectionnelle. Cela permet la <xref:System.Web.UI.WebControls.FormView> contrôle à extraire automatiquement les valeurs du contrôle d’entrée pour une mise à jour ou opération d’insertion. Expressions de liaison bidirectionnelles permettent également des contrôles d’entrée dans un modèle d’élément de modification pour afficher automatiquement les valeurs de champ d’origine. Pour plus d’informations sur les expressions de liaison bidirectionnelle, consultez [liaison aux bases de données](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Liaison de données  
 Le <xref:System.Web.UI.WebControls.FormView> contrôle peut être lié à un contrôle de source de données (tel que <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.ObjectDataSource>, ou <xref:System.Web.UI.WebControls.AccessDataSource>) ou à toute source de données qui implémente le <xref:System.Collections.IEnumerable?displayProperty=nameWithType> d’interface, tel que <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, ou d’autres types de collection. Utilisez une des méthodes suivantes pour lier le <xref:System.Web.UI.WebControls.FormView> contrôle pour le type de source de données approprié :  
  
-   Pour lier à un contrôle de source de données, définissez la <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> propriété de la <xref:System.Web.UI.WebControls.FormView> le contrôle à la <xref:System.Web.UI.Control.ID%2A> la valeur du contrôle de source de données. Le <xref:System.Web.UI.WebControls.FormView> contrôle automatiquement lie au contrôle de source de données spécifié et peut tirer parti de la source de données des fonctionnalités de contrôle pour effectuer une insertion, mise à jour, suppression et la fonctionnalité de pagination. Il s’agit de la méthode recommandée pour lier aux données.  
  
-   Pour lier à une source de données qui implémente le <xref:System.Collections.IEnumerable?displayProperty=nameWithType> interface, définir par programme le <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> propriété de la <xref:System.Web.UI.WebControls.FormView> le contrôle à la source de données, puis appelez le <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> (méthode). Lorsque vous utilisez cette méthode, le <xref:System.Web.UI.WebControls.FormView> contrôle ne fournit pas intégrées d’insertion, mise à jour, suppression et la fonctionnalité de pagination. Vous devez fournir cette fonctionnalité à l’aide de l’événement approprié.  
  
 Pour plus d’informations sur la liaison de données, consultez [ASP.NET Data Access Content Map](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2).  
  
> [!NOTE]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Chaque fois que possible, il est fortement recommandé que les valeurs sont encodées en HTML avant qu’elles sont affichées dans ce contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Contrôles serveur de validation sont également fournis pour valider l’entrée d’utilisateur. Pour plus d’informations, consultez [Introduction aux contrôles de Validation](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190).  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>Opérations de données  
 Le <xref:System.Web.UI.WebControls.FormView> contrôle fournit plusieurs fonctionnalités intégrées qui permettent à l’utilisateur à mettre à jour, supprimer, insérer et parcourir les éléments dans le contrôle. Lorsque le <xref:System.Web.UI.WebControls.FormView> contrôle est lié à un contrôle de source de données, le <xref:System.Web.UI.WebControls.FormView> contrôle peut tirer parti de la source de données de fonctionnalités du contrôle et fournir des mises à jour automatiques, la suppression, insertion et la fonctionnalité de pagination.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.FormView> contrôle peut fournir la prise en charge pour la mise à jour, delete, insert et les opérations de pagination avec d’autres types de sources de données ; Toutefois, vous devez fournir un gestionnaire d’événements approprié avec l’implémentation de ces opérations.  
  
 Étant donné que le <xref:System.Web.UI.WebControls.FormView> contrôle utilise des modèles, il ne fournit pas un moyen de générer automatiquement des boutons de commande pour effectuer la mise à jour, la suppression ou l’insertion d’opérations. Vous devez inclure manuellement ces boutons de commande dans le modèle approprié. Le <xref:System.Web.UI.WebControls.FormView> contrôle reconnaît certains boutons qui ont leur `CommandName` propriétés définies sur des valeurs spécifiques. Le tableau suivant répertorie les boutons de commande qui le <xref:System.Web.UI.WebControls.FormView> contrôle reconnaît.  
  
|Bouton|Valeur de CommandName|Description |  
|------------|-----------------------|-----------------|  
|Annuler|« Annuler »|Utilisé dans la mise à jour ou d’opérations d’insertion pour annuler l’opération et ignorer les valeurs entrées par l’utilisateur. Le <xref:System.Web.UI.WebControls.FormView> contrôle retourne ensuite au mode spécifié par le <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriété.|  
|Supprimer|"Delete"|Utilisé dans les opérations de suppression pour supprimer l’enregistrement affiché à partir de la source de données. Déclenche la <xref:System.Web.UI.WebControls.FormView.ItemDeleting> et <xref:System.Web.UI.WebControls.FormView.ItemDeleted> les événements.|  
|Modifier|« Modifier »|Utilisé dans les opérations de mise à jour pour mettre le <xref:System.Web.UI.WebControls.FormView> contrôle en mode édition. Le contenu spécifié dans le <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> propriété s’affiche pour la ligne de données.|  
|Insert|« Insertion »|Utilisé dans les opérations d’insertion pour tenter d’insérer un nouvel enregistrement dans la source de données à l’aide des valeurs fournies par l’utilisateur. Déclenche la <xref:System.Web.UI.WebControls.FormView.ItemInserting> et <xref:System.Web.UI.WebControls.FormView.ItemInserted> les événements.|  
|Nouveau|« Nouveau »|Utilisé dans les opérations d’insertion pour placer le <xref:System.Web.UI.WebControls.FormView> contrôle en mode insertion. Le contenu spécifié dans le <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> propriété s’affiche pour la ligne de données.|  
|Page|« Page »|Utilisé dans les opérations de pagination pour représenter un bouton dans la ligne du pagineur qui effectue la pagination. Pour spécifier l’opération de pagination, définissez la `CommandArgument` propriété du bouton « Suivant », « Précédent », « First », « Dernier » ou l’index de la page vers laquelle naviguer. Déclenche la <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> et <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> les événements. **Remarque :** ce type de bouton est généralement utilisé uniquement dans le modèle de récepteur de radiomessagerie.|  
|Mise à jour|« Update »|Utilisé dans les opérations de mise à jour pour tenter de mettre à jour l’enregistrement affiché dans la source de données avec les valeurs fournies par l’utilisateur. Déclenche la <xref:System.Web.UI.WebControls.FormView.ItemUpdating> et <xref:System.Web.UI.WebControls.FormView.ItemUpdated> les événements.|  
  
 Contrairement au bouton Supprimer (qui supprime l’enregistrement affiché immédiatement), lorsque l’utilisateur clique sur le bouton Modifier ou nouveau, le <xref:System.Web.UI.WebControls.FormView> contrôle passe en mode édition ou insertion, respectivement. En mode édition, le contenu de la <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> propriété s’affiche pour l’élément de données actuel. En règle générale, le modèle d’élément de modification est défini tel que le bouton Modifier est remplacé par une mise à jour et un bouton Annuler. Les contrôles qui sont appropriées pour le type de données du champ d’entrée (comme un <xref:System.Web.UI.WebControls.TextBox> ou un <xref:System.Web.UI.WebControls.CheckBox> contrôle) sont également généralement affichés avec la valeur d’un champ pour l’utilisateur de modifier. En cliquant sur le bouton de mise à jour met à jour l’enregistrement dans la source de données, alors que le bouton Annuler abandonne toutes les modifications.  
  
 De même, le contenu de la <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> propriété s’affiche pour l’élément de données lorsque le contrôle est en mode insertion. Le modèle d’élément insert est généralement défini telles que le bouton Nouveau est remplacé par une instruction Insert et un bouton Annuler, et les contrôles d’entrée vides sont affichés pour l’utilisateur à entrer les valeurs pour le nouvel enregistrement. En cliquant sur le bouton Insérer d’insère l’enregistrement dans la source de données, alors que le bouton Annuler abandonne toutes les modifications.  
  
 Le <xref:System.Web.UI.WebControls.FormView> contrôle fournit une fonctionnalité de pagination qui permet à l’utilisateur accéder à d’autres enregistrements dans la source de données. Lorsque activé, une ligne de pagineur est affichée dans le <xref:System.Web.UI.WebControls.FormView> contrôle qui contient les contrôles de navigation de page. Pour activer la pagination, définissez la <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> propriété `true`. Vous pouvez personnaliser la ligne du pagineur en définissant les propriétés des objets contenus dans le <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> et <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> propriété. Au lieu d’utiliser l’interface utilisateur de la ligne de pagineur intégrés, vous pouvez créer votre propre interface utilisateur à l’aide de la <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> propriété.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Personnalisation de l’Interface utilisateur  
 Vous pouvez personnaliser l’apparence de la <xref:System.Web.UI.WebControls.FormView> contrôle en définissant les propriétés de style pour les différentes parties du contrôle. Le tableau suivant répertorie les propriétés de style différent.  
  
|Propriété de style|Description |  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|Les paramètres de style pour les données de ligne lorsque la <xref:System.Web.UI.WebControls.FormView> contrôle est en mode édition.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|Les paramètres de style pour la ligne de données vide affichée dans le <xref:System.Web.UI.WebControls.FormView> contrôle lorsque la source de données ne contient pas d’enregistrements.|  
|<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|Les paramètres de style pour la ligne de pied de page de la <xref:System.Web.UI.WebControls.FormView> contrôle.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|Les paramètres de style pour la ligne d’en-tête de la <xref:System.Web.UI.WebControls.FormView> contrôle.|  
|<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|Les paramètres de style pour les données de ligne lorsque la <xref:System.Web.UI.WebControls.FormView> contrôle est en mode insertion.|  
|<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|Les paramètres de style pour la ligne du pagineur affichés dans le <xref:System.Web.UI.WebControls.FormView> contrôle lorsque la fonctionnalité de pagination est activée.|  
|<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|Les paramètres de style pour les données de ligne lorsque la <xref:System.Web.UI.WebControls.FormView> contrôle est en mode lecture seule.|  
  
<a name="events"></a>   
## <a name="events"></a>Événements  
 Le <xref:System.Web.UI.WebControls.FormView> contrôle fournit plusieurs événements que vous pouvez programmer. Cela vous permet de vous permet d’exécuter une routine personnalisée chaque fois qu’un événement se produit. Le tableau suivant répertorie les événements pris en charge par le <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
|événement|Description |  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ItemCommand>|Se produit lorsqu'un clic est effectué sur un bouton du contrôle <xref:System.Web.UI.WebControls.FormView>. Cet événement est souvent utilisé pour effectuer une tâche lorsqu’un clic est effectué dans le contrôle.|  
|<xref:System.Web.UI.WebControls.FormView.ItemCreated>|Se produit une fois toutes les <xref:System.Web.UI.WebControls.FormViewRow> objets sont créés dans le <xref:System.Web.UI.WebControls.FormView> contrôle. Cet événement est souvent utilisé pour modifier les valeurs d’un enregistrement avant son affichage.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|Se produit lorsqu’un bouton Supprimer (un bouton avec son `CommandName` propriété la valeur « Delete ») est activé, mais après que le <xref:System.Web.UI.WebControls.FormView> contrôle supprime l’enregistrement de la source de données. Cet événement est souvent utilisé pour vérifier les résultats de l’opération de suppression.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|Se produit lorsqu’un utilisateur clique sur un bouton Supprimer, mais avant que le <xref:System.Web.UI.WebControls.FormView> contrôle supprime l’enregistrement de la source de données. Cet événement est souvent utilisé pour annuler l’opération de suppression.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserted>|Se produit lorsqu’un bouton Insérer (un bouton avec son `CommandName` propriété la valeur « Insert ») est activé, mais après que le <xref:System.Web.UI.WebControls.FormView> contrôle insère l’enregistrement. Cet événement est souvent utilisé pour vérifier les résultats de l’opération d’insertion.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserting>|Se produit lorsqu’un utilisateur clique sur un bouton Insérer, mais avant que le <xref:System.Web.UI.WebControls.FormView> contrôle insère l’enregistrement. Cet événement est souvent utilisé pour annuler l’opération d’insertion.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|Se produit lorsqu’un bouton de mise à jour (un bouton avec son `CommandName` propriété la valeur « Update ») est activé, mais après que le <xref:System.Web.UI.WebControls.FormView> contrôle met à jour la ligne. Cet événement est souvent utilisé pour vérifier les résultats de l’opération de mise à jour.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|Se produit lorsqu’un utilisateur clique sur un bouton de mise à jour, mais avant que le <xref:System.Web.UI.WebControls.FormView> contrôle met à jour l’enregistrement. Cet événement est souvent utilisé pour annuler l’opération de mise à jour.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Se produit après la <xref:System.Web.UI.WebControls.FormView> contrôle modifie des modes (pour le mode édition, insert ou en lecture seule). Cet événement est souvent utilisé pour effectuer une tâche lorsque le <xref:System.Web.UI.WebControls.FormView> contrôle modifie des modes.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Se produit avant le <xref:System.Web.UI.WebControls.FormView> contrôle modifie des modes (pour le mode édition, insert ou en lecture seule). Cet événement est souvent utilisé pour annuler un changement de mode.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Se produit lorsqu'un clic est effectué sur un des boutons de pagineur, mais une fois que le contrôle <xref:System.Web.UI.WebControls.FormView> a géré l'opération de pagination. Cet événement est couramment utilisé lorsque vous avez besoin effectuer une tâche une fois que l’utilisateur navigue vers un autre enregistrement dans le contrôle.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Se produit lorsqu'un clic est effectué sur des boutons du pagineur et avant que le contrôle <xref:System.Web.UI.WebControls.FormView> n'ait géré l'opération de pagination. Cet événement est souvent utilisé pour annuler l’opération de pagination.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Accessibilité  
 Pour plus d’informations sur la configuration de ce contrôle afin qu’il génère un balisage qui est conforme aux normes d’accessibilité, consultez [accessibilité dans Visual Studio et ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) et [contrôles ASP.NET et l’accessibilité](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>Application de Styles CSS  
 Le <xref:System.Web.UI.WebControls.FormView> contrôle vous permet de spécifier des règles de style CSS dans le balisage. Si vous utilisez des modèles pour personnaliser l’apparence de la <xref:System.Web.UI.WebControls.FormView> (contrôle), vous pouvez spécifier des styles CSS dans le balisage dans les modèles. Dans ce cas, aucune table externe supplémentaire est requise. Vous pouvez empêcher la table d’être restitués en définissant le <xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A> propriété `false`.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Syntaxe déclarative  
  
```  
<asp:FormView  
    AccessKey="string"  
    AllowPaging="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DefaultMode="ReadOnly|Edit|Insert"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    FooterText="string"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    HeaderText="string"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLoad="Load event handler"  
    OnModeChanged="ModeChanged event handler"  
    OnModeChanging="ModeChanging event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    RenderTable="True|False"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <InsertRowStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
</asp:FormView>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser un <xref:System.Web.UI.WebControls.FormView> contrôle pour afficher les valeurs d’un <xref:System.Web.UI.WebControls.SqlDataSource> contrôle.  
  
 [!code-aspx-csharp[FormViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSimple/CS/formviewsimplecs.aspx#1)]
 [!code-aspx-vb[FormViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSimple/VB/formviewsimplevb.aspx#1)]  
  
 L’exemple suivant montre comment utiliser un <xref:System.Web.UI.WebControls.FormView> contrôle à modifier les enregistrements existants.  
  
> [!IMPORTANT]
>  Le contrôle dans cet exemple comporte une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 L’exemple suivant montre comment utiliser un <xref:System.Web.UI.WebControls.FormView> contrôle à insérer de nouveaux enregistrements.  
  
> [!IMPORTANT]
>  Le contrôle dans cet exemple comporte une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.FormView> classe. Pour ajouter dynamiquement un <xref:System.Web.UI.WebControls.FormView> le contrôle à une page, créez un <xref:System.Web.UI.WebControls.FormView> de l’objet, définissez ses propriétés, puis ajoutez-le à la <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> collection d’un conteneur de contrôle, telles que <xref:System.Web.UI.WebControls.PlaceHolder>.  
  
   
  
## Examples  
 L’exemple suivant montre comment ajouter dynamiquement un <xref:System.Web.UI.WebControls.FormView> contrôle à une page.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si la fonctionnalité de pagination est activée.</summary>
        <value>
          <see langword="true" /> pour activer la fonctionnalité de pagination ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView> contrôle possède des fonctionnalités de pagination intégrées qui permettent à un utilisateur accéder à un autre enregistrement dans la source de données. La fonctionnalité de pagination peut être utilisée avec n’importe quel objet de source de données qui prend en charge la <xref:System.Collections.ICollection?displayProperty=nameWithType> interface ou une source de données qui prend en charge la fonctionnalité de pagination.  
  
 Pour activer la fonctionnalité de pagination, définissez la <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> propriété `true`. Vous pouvez déterminer le nombre total d’éléments dans la source de données sous-jacente en utilisant le <xref:System.Web.UI.WebControls.FormView.PageCount%2A> propriété. Pour déterminer l’index de l’élément actuellement affiché, utilisez la <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriété.  
  
 Lorsque la pagination est activée, une ligne supplémentaire appelée ligne de pagineur est automatiquement affichée dans le <xref:System.Web.UI.WebControls.FormView> contrôle. La ligne du pagineur contient les contrôles de navigation de page et peut être affichée en haut, bas, ou haut et bas du contrôle. La ligne du pagineur a pagineur intégrés quatre modes d’affichage. Le tableau suivant décrit les quatre modes.  
  
|Mode|Description |  
|----------|-----------------|  
|`PagerButton.NextPrevious`|Un ensemble de contrôles de pagination comprenant les boutons précédents et suivant.|  
|`PagerButton.NextPreviousFirstLast`|Ensemble de contrôles de pagination comprenant précédente, ensuite, boutons premier et dernier.|  
|`PagerButton.Numeric`|Ensemble de contrôles de pagination comprenant des boutons de lien numéroté permettant d'accéder directement aux pages. Il s’agit du mode par défaut.|  
|`PagerButton.NumericFirstLast`|Un ensemble de contrôles de pagination comprenant les boutons de lien numéroté, premier et dernier.|  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.FormView> contrôle masque automatiquement la ligne du pagineur lorsque la source de données contient moins de deux enregistrements.  
  
 Vous pouvez contrôler les paramètres de la ligne du pagineur (tels que le mode d’affichage du pagineur, le nombre de liens de page à afficher à la fois, étiquette de texte du contrôle pager) en utilisant le <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> propriété. Pour contrôler l’apparence de la ligne du pagineur (y compris sa couleur d’arrière-plan et la couleur de police), utilisez le <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> propriété. Le <xref:System.Web.UI.WebControls.FormView> contrôle vous permet également de définir un modèle personnalisé pour la ligne du pagineur. Pour plus d’informations sur la création d’un modèle de ligne de pagineur personnalisée, consultez <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>.  
  
 Le <xref:System.Web.UI.WebControls.FormView> contrôle fournit plusieurs événements que vous pouvez utiliser pour effectuer une action personnalisée lorsque la pagination se produit. Le tableau suivant répertorie les événements disponibles.  
  
|événement|Description |  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Se produit lorsqu'un clic est effectué sur un des boutons de pagineur, mais une fois que le contrôle <xref:System.Web.UI.WebControls.FormView> a géré l'opération de pagination. Cet événement est couramment utilisé lorsque vous avez besoin effectuer une tâche une fois que l’utilisateur navigue vers un autre enregistrement dans le contrôle.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Se produit lorsqu'un clic est effectué sur des boutons du pagineur et avant que le contrôle <xref:System.Web.UI.WebControls.FormView> n'ait géré l'opération de pagination. Cet événement est souvent utilisé pour annuler l’opération de pagination.|  
  
> [!NOTE]
>  Ces événements ne sont pas déclenchés lorsque vous modifiez le <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriété par programmation.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> propriété pour activer la fonctionnalité de pagination dans un <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'URL d'une image à afficher à l'arrière-plan d'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>URL d'une image à afficher à l'arrière-plan du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />. La valeur par défaut est une chaîne vide (""), ce qui signifie que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> propriété pour spécifier l’URL vers une image à afficher dans l’arrière-plan d’un <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
> [!NOTE]
>  Si l’image spécifiée est inférieure à la <xref:System.Web.UI.WebControls.FormView> (contrôle), l’image est affichée en mosaïque pour remplir l’arrière-plan. Si l’image est plus grande que le contrôle, l’image est rognée.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> propriété pour afficher une image personnalisée à l’arrière-plan d’un <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 [!code-aspx-csharp[FormViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewBackImageUrl/CS/formviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[FormViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewBackImageUrl/VB/formviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ BottomPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Web.UI.WebControls.FormViewRow" /> qui représente la ligne de pagineur affichée en bas du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Objet <see cref="T:System.Web.UI.WebControls.FormViewRow" /> qui représente la ligne du bas du pagineur d'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque la pagination est activée (lorsque le <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> est définie sur `true`), une ligne supplémentaire appelée ligne de pagineur est automatiquement affichée dans le <xref:System.Web.UI.WebControls.FormView> contrôle. La ligne du pagineur contient des contrôles qui permettent à l’utilisateur accéder à d’autres enregistrements et peuvent être affichées en haut, bas, ou haut et bas du contrôle. Utilisez le <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> propriété pour accéder par programme le <xref:System.Web.UI.WebControls.FormViewRow> objet qui représente la ligne du pagineur en bas de la <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> propriété est disponible uniquement après que le <xref:System.Web.UI.WebControls.FormView> contrôle crée la ligne du pagineur en bas de la <xref:System.Web.UI.WebControls.FormView.ItemCreated> événement.  
  
 Cette propriété est généralement utilisée lorsque vous avez besoin manipuler par programme la ligne inférieure du pagineur, par exemple lors de l’ajout de contenu personnalisé. Toute modification apportée à la <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> propriété doit être effectuée après la <xref:System.Web.UI.WebControls.FormViewRow> objet qui représente la ligne du pagineur bas a été créé ; sinon, le <xref:System.Web.UI.WebControls.FormView> contrôle remplace toutes les modifications.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> propriété pour accéder à la ligne du pagineur affichée en bas d’un <xref:System.Web.UI.WebControls.FormView> contrôle. La ligne du pagineur est ensuite mis à jour avec du contenu supplémentaire.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte à afficher dans un élément de légende HTML d'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />. Cette propriété est fournie pour rendre le contrôle plus accessible aux utilisateurs d'appareils de technologie d'assistance.</summary>
        <value>Chaîne qui représente le texte à afficher dans un élément de légende HTML d'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.Caption%2A> propriété pour spécifier le texte à afficher dans un élément de légende HTML dans un <xref:System.Web.UI.WebControls.FormView> contrôle. Le texte que vous spécifiez fournit des périphériques de technologie d’assistance avec une description de la table qui peut être utilisée pour rendre le contrôle plus accessible.  
  
 Prise en charge d’accessibilité supplémentaires pour le <xref:System.Web.UI.WebControls.FormView> contrôle est fournie par le <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> propriété. Utilisez le <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> propriété pour spécifier l’alignement de l’élément de légende HTML dans un <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 La valeur de cette propriété, si la valeur, peut être enregistrée automatiquement dans un fichier de ressources à l’aide d’un outil de conception. Pour plus d’informations, consultez <xref:System.ComponentModel.LocalizableAttribute> et [globalisation et localisation](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.Caption%2A> propriété pour spécifier le texte de l’élément de légende HTML affichée dans un <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la position horizontale ou verticale de l'élément de légende HTML dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />. Cette propriété est fournie pour rendre le contrôle plus accessible aux utilisateurs d'appareils de technologie d'assistance.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />. La valeur par défaut est <see langword="TableCaptionAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> propriété pour spécifier la position horizontale ou verticale de l’élément de légende HTML dans un <xref:System.Web.UI.WebControls.FormView> contrôle. Cette propriété est fournie pour rendre le contrôle plus accessible aux utilisateurs d'appareils de technologie d'assistance.  
  
 Cette propriété est définie à l’aide d’un de le <xref:System.Web.UI.WebControls.TableCaptionAlign> valeurs d’énumération. Le tableau suivant répertorie les valeurs possibles.  
  
|Value|Description |  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|L'élément de légende s'aligne sur le bas du tableau.|  
|`TableCaptionAlign.Left`|L'élément de légende s'aligne sur le côté gauche du tableau.|  
|`TableCaptionAlign.NotSet`|Alignement de l’élément de légende n’est pas définie.|  
|`TableCaptionAlign.Right`|L'élément de légende s'aligne sur le côté droit du tableau.|  
|`TableCaptionAlign.Top`|L'élément de légende s'aligne sur le haut du tableau.|  
  
> [!NOTE]
>  Lorsque cette propriété a la valeur `TableCaptionAlign.NotSet`, la valeur par défaut du navigateur est utilisée.  
  
 Prise en charge d’accessibilité supplémentaires pour le <xref:System.Web.UI.WebControls.FormView> contrôle est fournie par le <xref:System.Web.UI.WebControls.FormView.Caption%2A> propriété. Utilisez le <xref:System.Web.UI.WebControls.FormView.Caption%2A> propriété pour spécifier le texte à afficher dans un élément de légende HTML dans un <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> propriété pour indiquer que le code HTML élément de légende dans un <xref:System.Web.UI.WebControls.FormView> contrôle doit être affiché sur le côté gauche du contrôle.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée n'est pas l'une des valeurs d'énumération <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'espace entre le contenu d'une cellule et la bordure de celle-ci.</summary>
        <value>Espace, en pixels, entre le contenu d'une cellule et sa bordure. La valeur par défaut est -1, laquelle indique que la propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> propriété pour contrôler l’espacement entre le contenu d’une cellule et la bordure de celle-ci. La marge intérieure spécifiée est ajoutée aux quatre côtés de la cellule.  
  
 Toutes les cellules de la même colonne d’un <xref:System.Web.UI.WebControls.FormView> contrôle ont la même largeur. La marge intérieure est appliquée à la cellule la plus large et toutes les autres cellules de la colonne sont ajustées à la largeur de la cellule. De même, toutes les cellules de la même ligne ont la même hauteur. La marge intérieure est appliquée à la cellule la plus haute dans la ligne et toutes les autres cellules de la ligne sont ajustées à la hauteur de cellule. Les tailles de cellule ne peut pas être spécifiés.  
  
 Pour ajuster l’espacement entre les cellules, utilisez le <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> propriété.  
  
> [!NOTE]
>  Lorsque cette propriété n’est pas définie, la valeur par défaut du navigateur est utilisée.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> propriété pour spécifier la quantité d’espace entre le contenu d’une cellule et la bordure de celle-ci.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'espace entre les cellules.</summary>
        <value>Espace (en pixels) entre les cellules. La valeur par défaut est 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> propriété pour contrôler l’espacement entre les cellules adjacentes dans la <xref:System.Web.UI.WebControls.FormView> contrôle. Cet espacement est appliqué verticalement et horizontalement. L’espacement des cellules est uniforme pour l’ensemble du contrôle. Espacement des cellules individuelles entre les lignes ou colonnes ne peut pas être spécifié.  
  
> [!NOTE]
>  Si vous affectez à cette propriété une valeur supérieure à 0, puis définissez le <xref:System.Web.UI.WebControls.FormView.GridLines%2A> propriété une valeur qui affiche les bordures de cellule, un espace est affiché entre les bordures de cellules adjacentes. Dans ce cas, le <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> propriété contrôle la taille de l’écart.  
  
 Pour ajuster l’espacement entre le contenu d’une cellule et la bordure de celle-ci, utilisez le <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> propriété pour spécifier la quantité d’espace entre les cellules adjacentes.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.FormViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMode (newMode As FormViewMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMode(System::Web::UI::WebControls::FormViewMode newMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.FormViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode">Une des valeurs d'énumération <see cref="T:System.Web.UI.WebControls.FormViewMode" />.</param>
        <summary>Bascule le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> en mode d'entrée des données spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> méthode pour passer par programme le <xref:System.Web.UI.WebControls.FormView> contrôle entre le mode édition, insertion et en lecture seule. Cette méthode met également à jour le <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> propriété avec le mode spécifié. Le tableau suivant répertorie les valeurs des différents modes.  
  
|Mode|Description |  
|----------|-----------------|  
|`FormViewMode.Edit`|Le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode édition, ce qui permet à l’utilisateur à mettre à jour les valeurs d’un enregistrement.|  
|`FormViewMode.Insert`|Le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode insertion, ce qui permet à l’utilisateur Ajouter un nouvel enregistrement à la source de données.|  
|`FormView.ReadOnly`|Le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode lecture seule, ce qui est le mode d’affichage normal.|  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.FormView.ModeChanged> et <xref:System.Web.UI.WebControls.FormView.ModeChanging> événements ne sont pas déclenchés lorsque cette méthode est appelée.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> méthode pour retourner le <xref:System.Web.UI.WebControls.FormView> contrôle en mode lecture seule chaque fois que l’utilisateur navigue vers un autre enregistrement.  
  
 [!code-aspx-csharp[FormViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewChangeMode/CS/formviewchangemodecs.aspx#1)]
 [!code-aspx-vb[FormViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewChangeMode/VB/formviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <see cref="T:System.Collections.IEnumerable" /> qui représente la source de données utilisée pour créer la hiérarchie des contrôles.</param>
        <param name="dataBinding">
          <see langword="true" /> pour indiquer que la hiérarchie des contrôles est créée directement à partir de la source de données ; <see langword="false" /> pour indiquer que la hiérarchie des contrôles est créée à partir de l'état d'affichage.</param>
        <summary>Crée la hiérarchie des contrôles utilisée pour rendre le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> à l'aide de la source de données spécifiée.</summary>
        <returns>Nombre d'éléments créés à partir de la source de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.CreateChildControls%28System.Collections.IEnumerable%2CSystem.Boolean%29> méthode est une méthode d’assistance appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle pour créer la hiérarchie des contrôles pour le <xref:System.Web.UI.WebControls.FormView> contrôle. Lorsque le `dataBinding` paramètre est `true`, liaison de données est effectuée avant la création de la hiérarchie des contrôles.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.DataSourceView" /> de <see cref="T:System.Web.UI.IDataSource" /> auquel est lié le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> est <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), vous pouvez substituer cette méthode pour créer votre propre hiérarchie de contrôle.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un objet de style de tableau par défaut pour le contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.Style" /> qui contient le style de tableau par défaut du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.CreateControlStyle%2A> méthode est une méthode d’assistance appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle pour créer son objet de style de table par défaut. En plus de définir le style par défaut d’un <xref:System.Web.UI.WebControls.TableStyle> de l’objet, cette méthode définit également le <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> 0 à la propriété.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), vous pouvez substituer cette méthode pour créer votre propre style par défaut.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée l'objet <see cref="T:System.Web.UI.DataSourceSelectArguments" /> qui contient les arguments passés à la source de données pour être traités.</summary>
        <returns>
          <see cref="T:System.Web.UI.DataSourceSelectArguments" /> qui contient les arguments passés à la source de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments%2A> méthode est une méthode d’assistance appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle à créer le <xref:System.Web.UI.DataSourceSelectArguments> objet qui contient les arguments passés à la source de données. Dans cette implémentation, le <xref:System.Web.UI.DataSourceSelectArguments> objet contient les arguments pour les opérations de pagination.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), vous pouvez substituer cette méthode pour spécifier vos propres valeurs qui sont passées à la source de données.</para>
        </block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.FormViewRow CreateRow(int32 itemIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (itemIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::FormViewRow ^ CreateRow(int itemIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Index de base zéro de l'élément de données à afficher.</param>
        <param name="rowType">Une des valeurs d'énumération <see cref="T:System.Web.UI.WebControls.DataControlRowType" />.</param>
        <param name="rowState">Combinaison d'opérations de bits des valeurs d'énumération <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <summary>Crée un objet <see cref="T:System.Web.UI.WebControls.FormViewRow" /> à l'aide de l'index de l'élément, du type de ligne et de l'état de ligne spécifiés.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.FormViewRow" /> avec l'index de l'élément, le type de ligne et l'état de ligne spécifiés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.CreateRow%2A> méthode est une méthode d’assistance appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle pour créer un <xref:System.Web.UI.WebControls.FormViewRow> objet utilisé pour représenter une ligne dans le contrôle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), vous pouvez substituer cette méthode pour retourner un <see cref="T:System.Web.UI.WebControls.FormViewRow" /> objet avec des paramètres personnalisés.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée la table conteneur pour le contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.Table" /> qui représente la table conteneur pour le contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.CreateTable%2A> méthode est une méthode d’assistance appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle pour créer une table qui agit comme conteneur pour le contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FormViewMode CurrentMode { System::Web::UI::WebControls::FormViewMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le mode d'entrée des données actuel du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.FormViewMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> propriété pour déterminer si le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode édition, insert ou en lecture seule. Le tableau suivant répertorie les valeurs des différents modes.  
  
|Mode|Description |  
|----------|-----------------|  
|`FormViewMode.Edit`|Le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode édition, ce qui permet à l’utilisateur à mettre à jour les valeurs d’un enregistrement.|  
|`FormViewMode.Insert`|Le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode insertion, ce qui permet à l’utilisateur Ajouter un nouvel enregistrement à la source de données.|  
|`FormView.ReadOnly`|Le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode lecture seule, ce qui est le mode d’affichage normal.|  
  
 Cette valeur est normalement automatiquement définie par le <xref:System.Web.UI.WebControls.FormView> contrôle lorsque l’utilisateur clique sur le bouton de commande Nouveau, Update, Insert, Delete ou annuler. Lorsque la <xref:System.Web.UI.WebControls.FormView> contrôle modifie des modes en réponse à une action, les événements dans le tableau suivant sont déclenchés. Cela vous permet de créer un gestionnaire d’événements personnalisé qui exécute la routine appropriée lorsque l’événement se produit.  
  
|événement|Description |  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Se produit lorsque le <xref:System.Web.UI.WebControls.FormView> contrôle modifie des modes, mais après le changement de mode. Cet événement est généralement utilisé pour effectuer une tâche chaque fois que le <xref:System.Web.UI.WebControls.FormView> contrôle modifie des modes.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Se produit lorsque le <xref:System.Web.UI.WebControls.FormView> contrôle modifie des modes, mais avant le changement de mode. Cet événement est couramment utilisé pour annuler le changement de mode.|  
  
 **Remarque** ces événements ne sont pas déclenchés lorsque vous modifiez le mode par programme à l’aide de la <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> propriété pour déterminer si le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode édition, insert ou en lecture seule. Si l’utilisateur tente d’accéder à un autre enregistrement pendant que le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode édition, l’opération de pagination est annulée.  
  
 [!code-aspx-csharp[FormViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCurrentMode/CS/formviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[FormViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCurrentMode/VB/formviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lie la source de données au contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.DataBind> méthode pour lier des données à partir d’une source de données à le <xref:System.Web.UI.WebControls.FormView> contrôle. Cette méthode résout toutes les expressions de liaison de données dans le modèle actif du contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'élément de données lié au contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>
          <see cref="T:System.Object" /> qui représente un élément de données lié au contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.DataItem%2A> propriété pour accéder à l’élément de données liée à la <xref:System.Web.UI.WebControls.FormView> contrôle. L’élément de données est souvent utilisé pour accéder directement aux valeurs de champ de l’enregistrement actif. Le type de la <xref:System.Object> retourné par cette propriété varie en fonction de la source de données. Par exemple, lorsqu’un <xref:System.Web.UI.WebControls.SqlDataSource> contrôle est lié à la <xref:System.Web.UI.WebControls.FormView> (contrôle), un <xref:System.Data.DataRowView> est retourné.  
  
> [!NOTE]
>  Cette propriété est disponible uniquement après que la liaison de données s’est produite. Avant que les données liaison se produit, cette propriété retourne `null`. Cette propriété est également pas applicable lorsque les <xref:System.Web.UI.WebControls.FormView> contrôle est en mode insertion et retourne `null`.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.DataItem%2A> propriété pour déterminer la valeur d’un champ dans l’élément de données.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="Overload:System.Web.UI.DataBinder.Eval" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataItemCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre d'éléments de données dans la source de données.</summary>
        <value>Nombre d'éléments de données dans la source de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.DataItemCount%2A> propriété pour déterminer le nombre d’éléments de données contenus dans la source de données. Cette propriété contient la même valeur que le <xref:System.Web.UI.WebControls.FormView.PageCount%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataItemIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'index de l'élément de données lié au contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> de la source de données.</summary>
        <value>Index de l'élément de données lié au contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> de la source de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> propriété pour déterminer l’index de l’élément de données liée à la <xref:System.Web.UI.WebControls.FormView> contrôle à partir de la source de données. Cette propriété contient la même valeur que le <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriété.  
  
> [!NOTE]
>  Cette propriété n’est pas applicable lorsque le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode insertion. Lorsque le contrôle est en mode insertion, la <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> propriété retourne -1.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet <see cref="T:System.Web.UI.WebControls.DataKey" /> qui représente la clé primaire de l'enregistrement affiché.</summary>
        <value>Objet <see cref="T:System.Web.UI.WebControls.DataKey" /> qui représente la clé primaire de l'enregistrement affiché.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriété est définie, le <xref:System.Web.UI.WebControls.FormView> contrôle crée automatiquement un <xref:System.Web.UI.WebControls.DataKey> objet qui contient les paires clé/valeur du champ ou de champs répertoriés dans le <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriété pour l’enregistrement actif. Utilisez le <xref:System.Web.UI.WebControls.FormView.DataKey%2A> propriété à obtenir cela <xref:System.Web.UI.WebControls.DataKey> objet. Cette propriété est couramment utilisée pour obtenir les clés et leurs valeurs correspondantes pour les champs spécifiés dans le <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriété.  
  
> [!NOTE]
>  Comme raccourci, vous pouvez également utiliser le <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> propriété pour déterminer la valeur du premier champ clé répertorié dans le <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.DataKey%2A> propriété pour déterminer la valeur du champ clé.  
  
 [!code-aspx-csharp[FormViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDataKey/CS/formviewdatakeycs.aspx#1)]
 [!code-aspx-vb[FormViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDataKey/VB/formviewdatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un tableau qui contient les noms des champs clés pour la source de données.</summary>
        <value>Tableau qui contient les noms des champs clés pour la source de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriété pour spécifier une liste séparée par des virgules de noms de champs qui représentent la clé primaire de la source de données. Lorsque le <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriété est définie, le <xref:System.Web.UI.WebControls.FormView> contrôle crée automatiquement un <xref:System.Web.UI.WebControls.DataKey> objet qui contient les paires clé/valeur du champ ou de champs répertoriés dans le <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriété pour l’enregistrement actif. Le <xref:System.Web.UI.WebControls.DataKey> objet est ensuite stocké dans le <xref:System.Web.UI.WebControls.FormView.DataKey%2A> propriété.  
  
> [!NOTE]
>  Vous devez définir le <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriété pour la mise à jour intégrée, suppression et insertion de fonctionnalités de la <xref:System.Web.UI.WebControls.FormView> contrôle fonctionne.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriété pour spécifier le champ clé de la source de données liée à la <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewMode DefaultMode { System::Web::UI::WebControls::FormViewMode get(); void set(System::Web::UI::WebControls::FormViewMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le mode d'entrée des données dans lequel le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> retourne après une opération de mise à jour, d'insertion ou d'annulation.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.FormViewMode" />. La valeur par défaut est <see langword="FormViewMode.ReadOnly" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriété pour spécifier si le <xref:System.Web.UI.WebControls.FormView> contrôle retourne au mode édition, insert ou en lecture seule après une mise à jour, insertion ou l’opération d’annulation est effectuée. Par défaut, le <xref:System.Web.UI.WebControls.FormView> contrôle retourne en mode lecture seule ; toutefois, vous pouvez conserver le <xref:System.Web.UI.WebControls.FormView> contrôle en cours de modification ou le mode d’insertion en définissant cette propriété la valeur appropriée. Le tableau suivant répertorie les valeurs des différents modes.  
  
|Mode|Description |  
|----------|-----------------|  
|`FormViewMode.Edit`|Le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode édition, ce qui permet à l’utilisateur à mettre à jour les valeurs d’un enregistrement.|  
|`FormViewMode.Insert`|Le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode insertion, ce qui permet à l’utilisateur Ajouter un nouvel enregistrement à la source de données.|  
|`FormViewMode.ReadOnly`|Le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode lecture seule, ce qui est le mode d’affichage normal.|  
  
 Cette propriété est généralement utilisée lorsque la <xref:System.Web.UI.WebControls.FormView> contrôle a une seule fonction, comme uniquement pour insérer ou modifier des enregistrements.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriété pour conserver un <xref:System.Web.UI.WebControls.FormView> contrôle en mode édition après une opération de mise à jour.  
  
 [!code-aspx-csharp[FormViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDefaultMode/CS/formviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[FormViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDefaultMode/VB/formviewdefaultmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée n'est pas l'une des valeurs d'énumération <see cref="T:System.Web.UI.WebControls.FormViewMode" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime l'enregistrement actif dans le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> de la source de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> méthode pour supprimer par programme l’enregistrement actif dans le <xref:System.Web.UI.WebControls.FormView> contrôle à partir de la source de données. Cette méthode est couramment utilisée lorsque vous devez supprimer l’enregistrement actuel à partir d’en dehors de la <xref:System.Web.UI.WebControls.FormView> contrôler, à partir d’un autre contrôle dans la page. Appel de cette méthode lève également le <xref:System.Web.UI.WebControls.FormView.ItemDeleted> et <xref:System.Web.UI.WebControls.FormView.ItemDeleting> les événements.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> méthode pour supprimer par programme l’enregistrement actif dans un <xref:System.Web.UI.WebControls.FormView> contrôle à partir de la source de données.  
  
 [!code-aspx-csharp[FormViewDeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteItem/CS/formviewdeleteitemcs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteItem/VB/formviewdeleteitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de la méthode dans la page appelée lorsque le contrôle effectue une opération de suppression.</summary>
        <value>Nom de la méthode dans la page appelée lorsque le contrôle effectue une opération de suppression.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une série de didacticiels sur l’utilisation de la liaison de modèle avec Web Forms, consultez [liaison de modèle et les Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le contenu personnalisé d'un élément en mode édition.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> qui contient le contenu personnalisé de la ligne de données lorsque le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> est en mode édition. La valeur par défaut est null, ce qui signifie que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView> contrôle restitue un modèle différent pour la ligne de données en fonction du mode actuel du contrôle (spécifié par le <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> propriété). Le tableau suivant montre le modèle utilisé pour chaque mode.  
  
|Mode|Modèle de rendu|  
|----------|-----------------------|  
|Modifier|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Propriétés en lecture seule|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> propriété pour définir votre propre interface utilisateur (IU) pour les données de ligne lorsque la <xref:System.Web.UI.WebControls.FormView> contrôle est en mode édition. Le modèle de modification d’élément contient généralement les contrôles d’entrée pour l’utilisateur à mettre à jour les valeurs d’un enregistrement existant, ainsi que les boutons de commande pour mettre à jour l’enregistrement et annuler l’opération de mise à jour.  
  
 Pour spécifier le modèle personnalisé, placez d’abord `<EditItemTemplate>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.FormView> contrôle. Vous pouvez ensuite répertorier le contenu du modèle entre les balises `<EditItemTemplate>` balises. En utilisant une expression de liaison bidirectionnelle, vous pouvez associer un champ avec un contrôle d’entrée. Cela permet la <xref:System.Web.UI.WebControls.FormView> contrôle pour afficher automatiquement la valeur du champ d’origine dans le contrôle d’entrée associé en mode édition. Lorsqu’un enregistrement est mis à jour, la <xref:System.Web.UI.WebControls.FormView> contrôle extrait automatiquement la valeur du champ mis à jour à partir du contrôle d’entrée associé. Pour plus d’informations sur les expressions de liaison bidirectionnelle, consultez [liaison aux bases de données](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Pour créer des boutons de commande qui exécutent les opérations de mise à jour et l’intégrées d’annulation, ajoutez un contrôle de bouton de commande au modèle avec son `CommandName` propriété définie sur une des valeurs répertoriées dans le tableau suivant.  
  
|Type de bouton de commande|Valeur de CommandName|  
|-------------------------|-----------------------|  
|Annuler|« Annuler »|  
|Mise à jour|« Update »|  
  
 Vous pouvez contrôler l’apparence du modèle d’élément à l’aide de la <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment définir un modèle personnalisé pour une ligne de données en mode édition.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à l'objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui vous permet de définir l'apparence de la ligne de données lorsqu'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> est en mode édition.</summary>
        <value>Référence à <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui représente le style de la ligne de données lorsqu'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> est en mode édition.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> propriété pour contrôler l’apparence des données en ligne lorsqu’une <xref:System.Web.UI.WebControls.FormView> contrôle est en mode édition. Lorsque le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode édition, la ligne de données affiche le contenu défini par l’utilisateur spécifié par le <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> propriété. Cette propriété est en lecture seule ; Toutefois, vous pouvez définir les propriétés de la <xref:System.Web.UI.WebControls.TableItemStyle> , elle retourne l’objet. Les propriétés peuvent être définies de façon déclarative à l’aide d’une des méthodes suivantes :  
  
-   Placez un attribut dans la balise d’ouverture de la <xref:System.Web.UI.WebControls.FormView> contrôle sous la forme `Property-Subproperty`, où `Subproperty` est une propriété de la <xref:System.Web.UI.WebControls.TableItemStyle> objet (par exemple, `EditRowStyle-ForeColor`).  
  
-   Imbriquer une `<EditRowStyle>` élément entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 Les propriétés peuvent également être définies par programme sous la forme `Property.Subproperty` (par exemple, `EditRowStyle.ForeColor`). Paramètres courants incluent généralement des propriétés de police, couleur de premier plan et une couleur d’arrière-plan personnalisée.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> propriété pour spécifier un style personnalisé pour des données en ligne lorsqu’une <xref:System.Web.UI.WebControls.FormView> contrôle est en mode édition.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à l'objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui vous permet de définir l'apparence de la ligne de données vide affichée lorsque la source de données liée à un contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> ne contient pas d'enregistrements.</summary>
        <value>Référence à <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui vous permet de définir l'apparence de la ligne de données vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> propriété pour contrôler l’apparence de la ligne de données vide dans un <xref:System.Web.UI.WebControls.FormView> contrôle. La ligne de données vide s’affiche lorsque la source de données qui est liée au contrôle ne contient pas d’enregistrements. Cette propriété est en lecture seule ; Toutefois, vous pouvez définir les propriétés de la <xref:System.Web.UI.WebControls.TableItemStyle> , elle retourne l’objet. Les propriétés peuvent être définies de façon déclarative à l’aide d’une des méthodes suivantes :  
  
-   Placez un attribut dans la balise d’ouverture de la <xref:System.Web.UI.WebControls.FormView> contrôle sous la forme `Property-Subproperty`, où `Subproperty` est une propriété de la <xref:System.Web.UI.WebControls.TableItemStyle> objet (par exemple, `EmptyDataRowStyle-ForeColor`).  
  
-   Imbriquer une `<EmptyDataRowStyle>` élément entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 Les propriétés peuvent également être définies par programme sous la forme `Property.Subproperty` (par exemple, `EmptyDataRowStyle.ForeColor`). Paramètres courants incluent généralement des propriétés de police, couleur de premier plan et une couleur d’arrière-plan personnalisée.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> propriété pour spécifier un style personnalisé pour la ligne de données vide affichée lorsqu’un <xref:System.Web.UI.WebControls.FormView> contrôle est lié à une source de données qui ne contient-elle pas d’enregistrements.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le contenu défini par l'utilisateur de la ligne de données vide rendue lorsqu'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> est lié à une source de données qui ne contient pas d'enregistrements.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> qui contient le contenu personnalisé de la ligne de données vide. La valeur par défaut, <see langword="null" />, indique que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ligne de données vide s’affiche dans un <xref:System.Web.UI.WebControls.FormView> contrôle lorsque la source de données qui est liée au contrôle ne contient pas d’enregistrements. Vous pouvez définir votre propre interface utilisateur personnalisée (interface utilisateur) pour la ligne de données vide à l’aide de la <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriété. Pour spécifier un modèle personnalisé pour la ligne de données vide, placez d’abord `<EmptyDataTemplate>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.FormView> contrôle. Vous pouvez ensuite répertorier le contenu du modèle entre les balises `<EmptyDataTemplate>` balises. Pour contrôler le style de la ligne de données vide, utilisez le <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> propriété. Vous pouvez également utiliser l’interface utilisateur intégrée pour la ligne de données vide en définissant le <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> propriété au lieu de cette propriété.  
  
> [!NOTE]
>  Si les deux le <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> et <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriétés sont définies, le <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriété est prioritaire.  
  
   
  
## Examples  
 L’exemple suivant montre comment définir un modèle personnalisé pour la ligne de données vide affichée lorsqu’un <xref:System.Web.UI.WebControls.FormView> contrôle est lié à une source de données qui ne contient-elle pas d’enregistrements.  
  
 [!code-aspx-csharp[FormViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataTemplate/CS/formviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataTemplate/VB/formviewemptydatatemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte à afficher dans la ligne de données vide rendue lorsqu'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> est lié à une source de données qui ne contient pas d'enregistrements.</summary>
        <value>Texte à afficher dans la ligne de données vide. La valeur par défaut est une chaîne vide (""), ce qui signifie que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ligne de données vide s’affiche dans un <xref:System.Web.UI.WebControls.FormView> contrôle lorsque la source de données qui est liée au contrôle ne contient pas d’enregistrements. Utilisez le <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> propriété pour spécifier le texte à afficher dans la ligne de données vide. Pour contrôler le style de la ligne de données vide, utilisez le <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> propriété. Vous pouvez également définir votre propre interface utilisateur personnalisée (interface utilisateur) pour la ligne de données vide en définissant le <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriété au lieu de cette propriété.  
  
> [!NOTE]
>  Si les deux le <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> et <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriétés sont définies, le <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriété est prioritaire.  
  
 La valeur de cette propriété, si la valeur, peut être enregistrée automatiquement dans un fichier de ressources à l’aide d’un outil de conception. Pour plus d’informations, consultez <xref:System.ComponentModel.LocalizableAttribute> et [globalisation et localisation](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> propriété pour spécifier le texte à afficher dans la ligne de données vide.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si un contrôle de validateur doit gérer les exceptions susceptibles de se produire lors des opérations d'insertion ou de mise à jour.</summary>
        <value>
          <see langword="true" /> si un contrôle de validateur doit gérer les exceptions susceptibles de se produire lors des opérations d'insertion ou de mise à jour ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>S'assure que le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> est lié aux données lorsque cela s'avère nécessaire.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> méthode est une méthode d’assistance utilisée par le <xref:System.Web.UI.WebControls.FormView> classe pour garantir que le <xref:System.Web.UI.WebControls.FormView> contrôle est lié aux données lorsque cela est approprié. Le <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> méthode est généralement appelée pendant la <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> méthode pour lier le contrôle à la source de données lorsque le contrôle lié aux données n’est pas encore lié, mais requiert la liaison de données. Cette version de la méthode a été substituée pour empêcher la liaison de données de se produire lorsque le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode insertion.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, includeKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, bool includeKeys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> utilisé pour stocker les valeurs de champ de l'élément de données actuel.</param>
        <param name="includeKeys">
          <see langword="true" /> pour inclure des champs clés ; sinon, <see langword="false" />.</param>
        <summary>Récupère les valeurs de chaque champ déclarées dans la ligne de données spécifiée et les stocke dans l'objet <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> méthode est une méthode d’assistance appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle à récupérer les valeurs de chaque champ déclarées dans la ligne de données. Étant donné que la ligne de données affiche un autre modèle basé sur le mode actuel, cette méthode récupère uniquement les valeurs de champ déclarées dans le modèle qui correspond au mode actuel. Le tableau suivant montre les modes disponibles et les modèles correspondants.  
  
|Mode|Modèle|  
|----------|--------------|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Modifier|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Propriétés en lecture seule|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Vous pouvez spécifier si les valeurs extraites incluent l’ou les champs clés à l’aide de le `includeKeys` paramètre.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), vous pouvez substituer cette méthode pour créer votre propre routine pour récupérer les valeurs de champ.</para>
        </block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ FooterRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Web.UI.WebControls.FormViewRow" /> qui représente la ligne de pied de page dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.FormViewRow" /> qui représente la ligne de pied de page dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ligne de pied de page s’affiche en bas de la <xref:System.Web.UI.WebControls.FormView> contrôle lorsque le <xref:System.Web.UI.WebControls.FormView.FooterText%2A> ou <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> est définie. Utilisez le <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> propriété pour accéder par programme le <xref:System.Web.UI.WebControls.FormViewRow> objet qui représente la ligne de pied de page.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> propriété est disponible uniquement après que le <xref:System.Web.UI.WebControls.FormView> contrôle crée la ligne de pied de page dans le <xref:System.Web.UI.WebControls.FormView.ItemCreated> événement.  
  
 Cette propriété est généralement utilisée lorsque vous avez besoin manipuler par programme la ligne de pied de page, par exemple lors de l’ajout de contenu personnalisé. Toute modification apportée à la <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> propriété doit être effectuée après la <xref:System.Web.UI.WebControls.FormView> contrôle a été restitué ; sinon, le <xref:System.Web.UI.WebControls.FormView> contrôle remplace toutes les modifications.  
  
 Pour contrôler le style de la ligne de pied de page, utilisez le <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> propriété pour modifier par programme les propriétés de la ligne de pied de page pendant le <xref:System.Web.UI.WebControls.FormView.ItemCreated> événement.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à l'objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vous permettant de définir l'apparence de la ligne de pied de page dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Référence à <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui représente le style de la ligne de pied de page dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ligne de pied de page s’affiche en bas de la <xref:System.Web.UI.WebControls.FormView> contrôle lorsque le <xref:System.Web.UI.WebControls.FormView.FooterText%2A> ou <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> est définie. Utilisez le <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> propriété pour contrôler l’apparence de la ligne de pied de page dans un <xref:System.Web.UI.WebControls.FormView> contrôle. Cette propriété est en lecture seule ; Toutefois, vous pouvez définir les propriétés de la <xref:System.Web.UI.WebControls.TableItemStyle> , elle retourne l’objet. Les propriétés peuvent être définies de façon déclarative à l’aide d’une des méthodes suivantes :  
  
-   Placez un attribut dans la balise d’ouverture de la <xref:System.Web.UI.WebControls.FormView> contrôle sous la forme `Property-Subproperty`, où `Subproperty` est une propriété de la <xref:System.Web.UI.WebControls.TableItemStyle> objet (par exemple, `FooterStyle-ForeColor`).  
  
-   Imbriquer un `<FooterStyle>` élément entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 Les propriétés peuvent également être définies par programme sous la forme `Property.Subproperty` (par exemple, `FooterStyle.ForeColor`). Paramètres courants incluent généralement des propriétés de police, couleur de premier plan et une couleur d’arrière-plan personnalisée.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> propriété pour spécifier un style personnalisé pour la ligne de pied de page.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le contenu défini par l'utilisateur pour la ligne de pied de page dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> qui contient le contenu personnalisé de la ligne de pied de page. La valeur par défaut, <see langword="null" />, indique que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ligne de pied de page s’affiche en bas de la <xref:System.Web.UI.WebControls.FormView> contrôle lorsque le <xref:System.Web.UI.WebControls.FormView.FooterText%2A> ou <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> est définie. Vous pouvez définir votre propre interface utilisateur personnalisée (interface utilisateur) pour la ligne de pied de page à l’aide de la <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriété. Pour spécifier un modèle personnalisé pour la ligne de pied de page, placez d’abord `<FooterTemplate>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.FormView> contrôle. Vous pouvez ensuite répertorier le contenu du modèle entre les balises `<FooterTemplate>` balises. Pour contrôler le style de la ligne de pied de page, utilisez le <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> propriété. Vous pouvez également afficher simplement le texte dans la ligne de pied de page en définissant le <xref:System.Web.UI.WebControls.FormView.FooterText%2A> propriété au lieu de cette propriété.  
  
> [!NOTE]
>  Si les deux le <xref:System.Web.UI.WebControls.FormView.FooterText%2A> et <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriétés sont définies, le <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriété est prioritaire.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriété pour définir un modèle personnalisé à restituer pour la ligne de pied de page.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FooterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte à afficher dans la ligne de pied de page d'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Texte à afficher dans la ligne de pied de page. La valeur par défaut est une chaîne vide (""), ce qui signifie que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ligne de pied de page s’affiche en bas de la <xref:System.Web.UI.WebControls.FormView> contrôle lorsque le <xref:System.Web.UI.WebControls.FormView.FooterText%2A> ou <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> est définie. Utilisez le <xref:System.Web.UI.WebControls.FormView.FooterText%2A> propriété pour spécifier le texte à afficher dans la ligne de pied de page. Pour contrôler le style de la ligne de pied de page, utilisez le <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> propriété. Vous pouvez également définir votre propre interface utilisateur personnalisée (IU) de la ligne de pied de page en définissant le <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriété au lieu de cette propriété.  
  
> [!NOTE]
>  Si les deux le <xref:System.Web.UI.WebControls.FormView.FooterText%2A> et <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriétés sont définies, le <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriété est prioritaire.  
  
 La valeur de cette propriété, si la valeur, peut être enregistrée automatiquement dans un fichier de ressources à l’aide d’un outil de conception. Pour plus d’informations, consultez <xref:System.ComponentModel.LocalizableAttribute> et [globalisation et localisation](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.FooterText%2A> propriété pour spécifier le texte à afficher dans la ligne de pied de page.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le style de quadrillage d'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.GridLines" />. La valeur par défaut est <see langword="GridLines.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.GridLines%2A> propriété pour spécifier le style du quadrillage pour un <xref:System.Web.UI.WebControls.FormView> contrôle. Le tableau suivant répertorie les styles disponibles.  
  
|Style|Description |  
|-----------|-----------------|  
|`GridLines.None`|Aucun quadrillage n’est affichés.|  
|`GridLines.Horizontal`|Affiche le quadrillage horizontal uniquement.|  
|`GridLines.Vertical`|Affiche le quadrillage vertical uniquement.|  
|`GridLines.Both`|Affiche le quadrillage horizontal et vertical.|  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.GridLines%2A> propriété pour afficher le quadrillage horizontal et vertical.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ HeaderRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Web.UI.WebControls.FormViewRow" /> qui représente la ligne d'en-tête dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.FormViewRow" /> qui représente la ligne d'en-tête dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ligne d’en-tête s’affiche en haut de la <xref:System.Web.UI.WebControls.FormView> contrôle lorsque le <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> ou <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> est définie. Utilisez le <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> propriété pour accéder par programme le <xref:System.Web.UI.WebControls.FormViewRow> objet qui représente la ligne d’en-tête.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> propriété est disponible uniquement après que le <xref:System.Web.UI.WebControls.FormView> contrôle crée la ligne d’en-tête dans le <xref:System.Web.UI.WebControls.FormView.ItemCreated> événement.  
  
 Cette propriété est généralement utilisée lorsque vous avez besoin manipuler par programme la ligne d’en-tête, par exemple, lors de l’ajout de contenu personnalisé. Toute modification apportée à la <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> propriété doit être effectuée après la <xref:System.Web.UI.WebControls.FormView> contrôle a été restitué ; sinon, le <xref:System.Web.UI.WebControls.FormView> contrôle remplace toutes les modifications.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> propriété pour modifier par programme les propriétés de la ligne d’en-tête au cours de la <xref:System.Web.UI.WebControls.FormView.ItemCreated> événement.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à l'objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vous permettant de définir l'apparence de la ligne d'en-tête dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Référence à <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui représente le style de la ligne d'en-tête dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ligne d’en-tête s’affiche en haut de la <xref:System.Web.UI.WebControls.FormView> contrôle lorsque le <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> ou <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> est définie. Utilisez le <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> propriété pour contrôler l’apparence de la ligne d’en-tête dans un <xref:System.Web.UI.WebControls.FormView> contrôle. Cette propriété est en lecture seule ; Toutefois, vous pouvez définir les propriétés de la <xref:System.Web.UI.WebControls.TableItemStyle> , elle retourne l’objet. Les propriétés peuvent être définies de façon déclarative à l’aide d’une des méthodes suivantes :  
  
-   Placez un attribut dans la balise d’ouverture de la <xref:System.Web.UI.WebControls.FormView> contrôle sous la forme `Property-Subproperty`, où `Subproperty` est une propriété de la <xref:System.Web.UI.WebControls.TableItemStyle> objet (par exemple, `HeaderStyle-ForeColor`).  
  
-   Imbriquer un `<HeaderStyle>` élément entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 Les propriétés peuvent également être définies par programme sous la forme `Property.Subproperty` (par exemple, `HeaderStyle.ForeColor`). Paramètres courants incluent généralement des propriétés de police, couleur de premier plan et une couleur d’arrière-plan personnalisée.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> propriété pour spécifier un style personnalisé pour la ligne d’en-tête.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le contenu défini par l'utilisateur pour la ligne d'en-tête dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> qui comprend le contenu personnalisé de la ligne d'en-tête. La valeur par défaut, <see langword="null" />, indique que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ligne d’en-tête s’affiche en haut de la <xref:System.Web.UI.WebControls.FormView> contrôle lorsque le <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> ou <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> est définie. Vous pouvez définir votre propre interface utilisateur personnalisée (interface utilisateur) pour la ligne d’en-tête à l’aide de la <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriété. Pour spécifier un modèle personnalisé pour la ligne d’en-tête, placez d’abord `<HeaderTemplate>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.FormView> contrôle. Vous pouvez ensuite répertorier le contenu du modèle entre les balises `<HeaderTemplate>` balises. Pour contrôler le style de la ligne d’en-tête, utilisez la <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> propriété. Vous pouvez également afficher simplement le texte dans la ligne d’en-tête en définissant le <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> propriété au lieu de cette propriété.  
  
> [!NOTE]
>  Si les deux le <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> et <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriétés sont définies, le <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriété est prioritaire.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriété à définir un modèle personnalisé pour le rendu de la ligne d’en-tête.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte à afficher dans la ligne d'en-tête d'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Texte à afficher dans la ligne d'en-tête. La valeur par défaut est une chaîne vide (""), ce qui signifie que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ligne d’en-tête s’affiche en haut de la <xref:System.Web.UI.WebControls.FormView> contrôle lorsque le <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> ou <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> est définie. Utilisez le <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> propriété pour spécifier le texte à afficher dans la ligne d’en-tête. Pour contrôler le style de la ligne d’en-tête, utilisez la <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> propriété. Vous pouvez également définir votre propre interface utilisateur personnalisée (interface utilisateur) pour la ligne d’en-tête en définissant le <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriété au lieu de cette propriété.  
  
> [!NOTE]
>  Si les deux le <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> et <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriétés sont définies, le <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriété est prioritaire.  
  
 La valeur de cette propriété, si la valeur, peut être enregistrée automatiquement dans un fichier de ressources à l’aide d’un outil de conception. Pour plus d’informations, consultez <xref:System.ComponentModel.LocalizableAttribute> et [globalisation et localisation](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> propriété pour spécifier le texte à afficher dans la ligne d’en-tête.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'alignement horizontal d'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> sur la page.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.HorizontalAlign" />. La valeur par défaut est <see langword="HorizontalAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> propriété pour spécifier l’alignement horizontal d’un <xref:System.Web.UI.WebControls.FormView> contrôle dans la page. Le tableau suivant répertorie les styles d’alignement horizontal différent.  
  
|Valeur HorizontalAlign|Description |  
|---------------------------|-----------------|  
|`HorizontalAlign.NotSet`|L’alignement horizontal de la <xref:System.Web.UI.WebControls.FormView> contrôle n’a pas été définie.|  
|`HorizontalAlign.Left`|Le <xref:System.Web.UI.WebControls.FormView> contrôle est aligné à gauche sur la page.|  
|`HorizontalAlign.Center`|Le <xref:System.Web.UI.WebControls.FormView> contrôle est centré sur la page.|  
|`HorizontalAlign.Right`|Le <xref:System.Web.UI.WebControls.FormView> contrôle est aligné à droite sur la page.|  
|`HorizontalAlign.Justify`|Le <xref:System.Web.UI.WebControls.FormView> contrôle est aligné avec les marges gauche et droite de la page.|  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> propriété pour spécifier qu’un <xref:System.Web.UI.WebControls.FormView> contrôle doit être centrée sur la page.  
  
 [!code-aspx-csharp[FormViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHorizontalAlign/CS/formviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[FormViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHorizontalAlign/VB/formviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.FormViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::FormViewRow ^ row, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">
          <see cref="T:System.Web.UI.WebControls.FormViewRow" /> qui contient la ligne de pagineur.</param>
        <param name="pagedDataSource">
          <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> qui contient les données pour la page en cours.</param>
        <summary>Crée la ligne de pagineur pour le contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> méthode est une méthode d’assistance appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle à créer la ligne du pagineur. Il crée un <xref:System.Web.UI.WebControls.TableCell> objet qui contient les contrôles de navigation en utilisant les propriétés de la <xref:System.Web.UI.WebControls.PagedDataSource> objet contenu dans le `pagedDataSource` paramètre. La cellule est ensuite ajoutée à la ligne spécifiée par la `row` paramètre.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), vous pouvez substituer cette méthode pour créer votre propre ligne de pagineur.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.FormViewRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As FormViewRow)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::FormViewRow ^ row);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
      </Parameters>
      <Docs>
        <param name="row">Objet <see cref="T:System.Web.UI.WebControls.FormViewRow" /> à initialiser.</param>
        <summary>Initialise l'objet <see cref="T:System.Web.UI.WebControls.FormViewRow" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.InitializeRow%2A> méthode est une méthode d’assistance appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle initialisation spécifié <xref:System.Web.UI.WebControls.FormViewRow> objet. Le <xref:System.Web.UI.WebControls.FormViewRow> objet est initialisé selon le type de ligne et l’état de ligne spécifié par son <xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> et <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> propriétés, respectivement. Le contenu approprié est ensuite ajouté à la <xref:System.Web.UI.WebControls.FormViewRow> objet. Le tableau suivant décrit la façon dont chaque type de ligne est initialisé.  
  
|Type de ligne|Description |  
|--------------|-----------------|  
|Ligne de données|Le contenu de la <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>, ou <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> propriété sont ajoutés à la <xref:System.Web.UI.WebControls.FormViewRow> objet, selon la valeur de la <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> propriété.|  
|Ligne de données vide|La valeur de la <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> propriété ou le contenu de la <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriété est ajoutée à la <xref:System.Web.UI.WebControls.FormViewRow> objet, en fonction de laquelle la propriété est définie. Si les deux propriétés sont définies, le <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> propriété est prioritaire.|  
|Ligne de pied de page|La valeur de la <xref:System.Web.UI.WebControls.FormView.FooterText%2A> propriété ou le contenu de la <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriété est ajoutée à la <xref:System.Web.UI.WebControls.FormViewRow> objet, en fonction de laquelle la propriété est définie. Si les deux propriétés sont définies, le <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> propriété est prioritaire.|  
|Ligne d’en-tête|La valeur de la <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> propriété ou le contenu de la <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriété est ajoutée à la <xref:System.Web.UI.WebControls.FormViewRow> objet, en fonction de laquelle la propriété est définie. Si les deux propriétés sont définies, le <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> propriété est prioritaire.|  
  
> [!NOTE]
>  Cette méthode n’initialise pas la ligne du pagineur. Pour créer la ligne du pagineur, utilisez la <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), vous pouvez substituer cette méthode pour créer votre propre ligne personnalisée.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertItem(bool causesValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" /> pour exécuter la validation de la page lorsque la méthode est appelée ; sinon, <see langword="false" />.</param>
        <summary>Insère l'enregistrement actif dans la source de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode insertion, utilisez la <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> méthode pour insérer par programme l’enregistrement actif dans la source de données. Cette méthode est couramment utilisée lorsque vous devez insérer l’enregistrement actif à partir d’en dehors de la <xref:System.Web.UI.WebControls.FormView> contrôler, à partir d’un autre contrôle dans la page.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.FormView> contrôle doit être en mode insertion lorsque cette méthode est appelée ; sinon, un <xref:System.Web.HttpException> est levée.  
  
 Pour spécifier si la validation de la page est effectuée avant l’opération d’insertion, utilisez la `causesValidation` paramètre. Appel de cette méthode lève également le <xref:System.Web.UI.WebControls.FormView.ItemInserted> et <xref:System.Web.UI.WebControls.FormView.ItemInserting> les événements.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> méthode pour insérer par programme l’enregistrement actif dans un <xref:System.Web.UI.WebControls.FormView> contrôle dans la source de données.  
  
 [!code-aspx-csharp[FormViewInsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItem/CS/formviewinsertitemcs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItem/VB/formviewinsertitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Cette méthode est appelée lorsque le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> n'est pas en mode insertion.  -ou- L’objet <see cref="T:System.Web.UI.DataSourceView" /> associé au contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> est null.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le contenu personnalisé d'un élément en mode insertion.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> qui contient le contenu personnalisé de la ligne de données lorsque le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> est en mode insertion. La valeur par défaut est null, ce qui signifie que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView> contrôle restitue un modèle différent pour la ligne de données en fonction du mode actuel du contrôle (spécifié par le <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> propriété). Le tableau suivant montre le modèle utilisé pour chaque mode.  
  
|Mode|Modèle de rendu|  
|----------|-----------------------|  
|Modifier|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Propriétés en lecture seule|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> propriété pour définir votre propre interface utilisateur (IU) pour les données de ligne lorsque la <xref:System.Web.UI.WebControls.FormView> contrôle est en mode insertion. Le modèle d’élément insert contient généralement les contrôles d’entrée pour l’utilisateur à entrer les valeurs pour le nouvel enregistrement, ainsi que des boutons de commande pour insérer l’enregistrement et d’annuler l’opération d’insertion.  
  
 Pour spécifier le modèle personnalisé, placez d’abord `<InsertItemTemplate>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.FormView> contrôle. Vous pouvez ensuite répertorier le contenu du modèle entre les balises `<InsertItemTemplate>` balises. En utilisant une expression de liaison bidirectionnelle, vous pouvez associer un champ avec un contrôle d’entrée. Lorsqu’un enregistrement est inséré, le <xref:System.Web.UI.WebControls.FormView> contrôle extrait automatiquement la valeur du champ à partir du contrôle d’entrée associé. Pour plus d’informations sur les expressions de liaison bidirectionnelle, consultez [liaison aux bases de données](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Pour créer des boutons de commande qui effectuer l’annulation intégrée et les opérations d’insertion, ajoutez un contrôle de bouton de commande au modèle avec son `CommandName` propriété définie sur une des valeurs répertoriées dans le tableau suivant.  
  
|Type de bouton de commande|Valeur de CommandName|  
|-------------------------|-----------------------|  
|Annuler|« Annuler »|  
|Insert|« Insertion »|  
  
 Vous pouvez contrôler l’apparence du modèle d’élément à l’aide de la <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment définir un modèle personnalisé pour une ligne de données en mode insertion.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de la méthode dans la page appelée lorsque le contrôle effectue une opération d'insertion.</summary>
        <value>Nom de la méthode dans la page appelée lorsque le contrôle effectue une opération d'insertion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une série de didacticiels sur l’utilisation de la liaison de modèle avec Web Forms, consultez [liaison de modèle et les Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InsertRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à l'objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui vous permet de définir l'apparence de la ligne de données dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> lorsque le contrôle est en mode insertion.</summary>
        <value>Référence à <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui représente le style de la ligne de données dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> lorsque le contrôle est en mode insertion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> propriété pour contrôler l’apparence des données en ligne lorsqu’une <xref:System.Web.UI.WebControls.FormView> contrôle est en mode insertion. Lorsque le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode insertion, la ligne de données affiche le contenu défini par l’utilisateur spécifié par le <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> propriété. Cette propriété est en lecture seule ; Toutefois, vous pouvez définir les propriétés de la <xref:System.Web.UI.WebControls.TableItemStyle> , elle retourne l’objet.  
  
 Les propriétés peuvent être définies de façon déclarative à l’aide d’une des méthodes suivantes :  
  
-   Placez un attribut dans la balise d’ouverture de la <xref:System.Web.UI.WebControls.FormView> contrôle sous la forme `Property-Subproperty`, où `Subproperty` est une propriété de la <xref:System.Web.UI.WebControls.TableItemStyle> objet (par exemple, `InsertRowStyle-ForeColor`).  
  
-   Imbriquer une `<InsertRowStyle>` élément entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 Les propriétés peuvent également être définies par programme sous la forme `Property.Subproperty` (par exemple, `InsertRowStyle.ForeColor`). Paramètres courants incluent généralement des propriétés de police, couleur de premier plan et une couleur d’arrière-plan personnalisée.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> propriété pour spécifier un style personnalisé pour des données en ligne lorsqu’une <xref:System.Web.UI.WebControls.FormView> contrôle est en mode insertion.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> représentant le type de données à vérifier.</param>
        <summary>Détermine si le type de données spécifié peut être lié à un champ dans le contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>
          <see langword="true" /> si le type de données spécifié peut être lié à un champ dans le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.IsBindableType%2A> méthode est une méthode d’assistance appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle afin de déterminer si le type de données spécifié peut être lié à un champ dans le contrôle. Le <xref:System.Web.UI.WebControls.FormView> contrôle prend en charge les types de données suivants :  
  
-   Types de toutes les données primitifs, tels que <xref:System.Boolean>, <xref:System.Byte>, <xref:System.Int32>, et ainsi de suite.  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Guid>  
  
-   <xref:System.String>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), vous pouvez substituer cette méthode pour ajouter ou restreindre les types de données qui peuvent être utilisés dans un <see cref="T:System.Web.UI.WebControls.FormView" /> contrôle.</para>
        </block>
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As FormViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewCommandEventHandler ^ ItemCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un clic est effectué sur un bouton du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.ItemCommand> événement est déclenché lorsqu’un bouton dans le <xref:System.Web.UI.WebControls.FormView> un clic sur le contrôle. Cela vous permet de fournir une méthode de gestion d’événements qui exécute une routine personnalisée chaque fois que cet événement se produit.  
  
 Boutons d’un <xref:System.Web.UI.WebControls.FormView> contrôle peut aussi appeler quelques-unes des fonctionnalités intégrées du contrôle. Pour effectuer une de ces opérations, définissez la `CommandName` propriété d’un bouton à une des valeurs dans le tableau suivant.  
  
|Valeur de CommandName|Description |  
|-----------------------|-----------------|  
|« Annuler »|Annule une opération de modification ou d’insertion et retourne le <xref:System.Web.UI.WebControls.FormView> contrôle le mode spécifié par le <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriété. Déclenche la <xref:System.Web.UI.WebControls.FormView.ModeChanged> et <xref:System.Web.UI.WebControls.FormView.ModeChanging> les événements.|  
|"Delete"|Supprime l’enregistrement actif. Déclenche la <xref:System.Web.UI.WebControls.FormView.ItemDeleted> et <xref:System.Web.UI.WebControls.FormView.ItemDeleting> les événements.|  
|« Modifier »|Place le <xref:System.Web.UI.WebControls.FormView> contrôle en mode édition. Déclenche la <xref:System.Web.UI.WebControls.FormView.ModeChanged> et <xref:System.Web.UI.WebControls.FormView.ModeChanging> les événements.|  
|« Insertion »|Insère l'enregistrement actif dans la source de données. Déclenche la <xref:System.Web.UI.WebControls.FormView.ItemInserted> et <xref:System.Web.UI.WebControls.FormView.ItemInserting> les événements.|  
|« Nouveau »|Place le <xref:System.Web.UI.WebControls.FormView> contrôle en mode insertion. Déclenche la <xref:System.Web.UI.WebControls.FormView.ModeChanged> et <xref:System.Web.UI.WebControls.FormView.ModeChanging> les événements.|  
|« Page »|Effectue une opération de pagination. Définir le `CommandArgument` propriété du bouton de la « Première », « dernier », « Suivant », « Précédent » ou un numéro de page pour spécifier le type d’opération de pagination à effectuer. Déclenche la <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> et <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> les événements.|  
|« Update »|Met à jour l'enregistrement en cours dans la source de données. Déclenche la <xref:System.Web.UI.WebControls.FormView.ItemUpdated> et <xref:System.Web.UI.WebControls.FormView.ItemUpdating> les événements.|  
  
 Bien que le <xref:System.Web.UI.WebControls.FormView.ItemCommand> événement est déclenché lorsque l’utilisateur clique sur un bouton répertorié dans le tableau précédent, il est recommandé d’utiliser les événements répertoriés dans le tableau pour l’opération.  
  
 A <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> objet est passé à la méthode de gestion d’événements, ce qui vous permet de déterminer le nom de la commande et l’argument de commande du bouton cliqué. Pour déterminer le nom de la commande et l’argument de commande, utilisez le <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> et <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> propriétés, respectivement. Vous pouvez également accéder au contrôle qui a déclenché l’événement à l’aide de la <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> propriété.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.ItemCommand> événement à gérer un clic de bouton dans un <xref:System.Web.UI.WebControls.FormView> contrôle. Lorsque l’utilisateur clique sur le bouton Ajouter, l’élément actuellement affiché est ajouté à un <xref:System.Web.UI.WebControls.ListBox> contrôle.  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit une fois que toutes les lignes sont créées dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.ItemCreated> événement est déclenché une fois que toutes les lignes sont créées dans un <xref:System.Web.UI.WebControls.FormView> contrôle. Cela peut se produire lorsque le contrôle est restitué en premier, ou lorsque l’utilisateur navigue vers un autre enregistrement. Vous pouvez utiliser cet événement pour fournir une méthode de gestion d’événements qui exécute une routine personnalisée, par exemple l’ajout ou la modification du contenu d’une ligne, chaque fois que cet événement se produit.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.FormView.ItemCreated> événement se produit avant le <xref:System.Web.UI.WebControls.FormView> contrôle est lié aux données. Pour modifier la valeur d’un champ lié, utilisez la <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> événement.  
  
 Vous pouvez accéder à des lignes par radiomessagerie en-tête et pied de page dans le <xref:System.Web.UI.WebControls.FormView> contrôle à l’aide de la <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>, <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>, ou <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> propriétés, respectivement. Pour accéder à la ligne de données, utilisez le <xref:System.Web.UI.WebControls.FormView.Row%2A> propriété.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.ItemCreated> événement pour mettre à jour le texte d’un <xref:System.Web.UI.WebControls.Label> contrôle contenu dans la ligne du pagineur.  
  
 [!code-aspx-csharp[FormViewItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCreated/CS/formviewitemcreatedcs.aspx#1)]
 [!code-aspx-vb[FormViewItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCreated/VB/formviewitemcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Row" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As FormViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeletedEventHandler ^ ItemDeleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un clic est effectué sur un bouton Supprimer d'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />, mais après l'opération de suppression.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView> incrémente le <xref:System.Web.UI.WebControls.FormView.ItemDeleted> événement lorsqu’un bouton Supprimer (un bouton avec son `CommandName` propriété la valeur « Delete ») dans le contrôle est activé, mais après que le <xref:System.Web.UI.WebControls.FormView> contrôle supprime l’enregistrement. Cela vous permet de fournir une méthode de gestion d’événements qui exécute une routine personnalisée, telles que la vérification des résultats d’une opération de suppression, chaque fois que cet événement se produit.  
  
 A <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> objet est passé à la méthode de gestion des événements, ce qui vous permet de déterminer le nombre d’enregistrements affectés et toutes les exceptions qui se sont produites. Pour déterminer le nombre d’enregistrements affectés par l’opération de suppression, utilisez le <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> propriété. Utilisez le <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> propriété pour déterminer si des exceptions se sont produites. Vous pouvez également indiquer si l’exception a été gérée dans la méthode de gestion d’événements en définissant le <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> propriété. Si vous souhaitez accéder aux paires nom/valeur des champs clés et des champs de l’enregistrement supprimé, utilisez le <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> et <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> propriétés, respectivement.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.ItemDeleted> événement pour déterminer si une exception s’est produite pendant une opération de suppression.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As FormViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeleteEventHandler ^ ItemDeleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un clic est effectué sur un bouton Supprimer d'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />, mais avant l'opération de suppression.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView> incrémente le <xref:System.Web.UI.WebControls.FormView.ItemDeleting> événement lorsqu’un bouton Supprimer (un bouton avec son `CommandName` propriété la valeur « Delete ») dans le contrôle est activé, mais avant que le <xref:System.Web.UI.WebControls.FormView> contrôle supprime l’enregistrement. Cela vous permet de fournir une méthode de gestion d’événements qui exécute une routine personnalisée, telles que la vérification d’un enregistrement avant sa suppression, chaque fois que cet événement se produit.  
  
 A <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> objet est passé à la méthode de gestion des événements, ce qui vous permet de déterminer l’index de l’enregistrement en cours de suppression et d’indiquer que l’opération de suppression doit être annulée. Pour déterminer l’index d’un enregistrement, utilisez la <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> propriété. Pour annuler l’opération de suppression, affectez le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété `true`. Vous pouvez également accéder à champs clés et des champs à l’aide de la <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A> et <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> propriétés, respectivement.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.ItemDeleting> événement pour annuler une opération de suppression.  
  
 [!code-aspx-csharp[FormViewDeleteEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteEventArgs/CS/formviewdeleteeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteEventArgs/VB/formviewdeleteeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As FormViewInsertedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertedEventHandler ^ ItemInserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un clic est effectué sur un bouton Insérer dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />, mais après l'opération d'insertion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView> incrémente le <xref:System.Web.UI.WebControls.FormView.ItemInserted> événement lorsqu’un bouton Insérer (un bouton avec son `CommandName` propriété la valeur « Insert ») dans le contrôle est activé, mais après que le <xref:System.Web.UI.WebControls.FormView> contrôle insère l’enregistrement. Cela vous permet de fournir une méthode de gestion d’événements qui exécute une routine personnalisée, telles que la vérification des résultats d’une opération d’insertion, chaque fois que cet événement se produit.  
  
 A <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> objet est passé à la méthode de gestion des événements, ce qui vous permet de déterminer le nombre d’enregistrements affectés et toutes les exceptions qui se sont produites. Pour déterminer le nombre d’enregistrements affectés par l’opération d’insertion, utilisez le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> propriété. Utilisez le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> propriété pour déterminer si des exceptions se sont produites. Vous pouvez également indiquer si l’exception a été gérée dans la méthode de gestion d’événements en définissant le <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> propriété. Si vous devez accéder aux valeurs de l’enregistrement inséré, utilisez la <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> propriété.  
  
 Par défaut, le <xref:System.Web.UI.WebControls.FormView> contrôle retourne au mode spécifié par le <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriété après une opération d’insertion. Pour conserver le <xref:System.Web.UI.WebControls.FormView> en mode insertion, affectez la <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> propriété `true`.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.ItemInserted> événement pour déterminer si une exception s’est produite pendant une opération d’insertion.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As FormViewInsertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertEventHandler ^ ItemInserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un clic est effectué sur un bouton Insérer dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />, mais avant l'opération d'insertion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView> incrémente le <xref:System.Web.UI.WebControls.FormView.ItemInserting> événement lorsqu’un bouton Insérer (un bouton avec son `CommandName` propriété la valeur « Insert ») dans le contrôle est activé, mais avant que le <xref:System.Web.UI.WebControls.FormView> contrôle insère l’enregistrement. Cela vous permet de fournir une méthode de gestion d’événements qui exécute une routine personnalisée, comme le codage HTML des valeurs d’un enregistrement avant l’insertion dans la source de données, chaque fois que cet événement se produit.  
  
 A <xref:System.Web.UI.WebControls.FormViewInsertEventArgs> objet est passé à la méthode de gestion d’événements, ce qui vous permet de déterminer la valeur d’un argument de commande facultatif envoyé à la <xref:System.Web.UI.WebControls.FormView> contrôle et pour indiquer que l’opération d’insertion doit être annulée. La valeur d’argument de commande correspond à la `CommandArgument` propriété du bouton Insérer. Lorsque le `CommandArgument` du bouton Insérer est définie, utilisez la <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> propriété pour déterminer la valeur de l’argument de commande. Pour annuler l’opération d’insertion, affectez la <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété `true`. Vous pouvez également lire ou modifier les valeurs de champ pour le nouvel enregistrement à l’aide de la <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A> propriété.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.ItemInserting> événement pour annuler une opération d’insertion.  
  
 [!code-aspx-csharp[FormViewInsertEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertEventArgs/CS/formviewinserteventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertEventArgs/VB/formviewinserteventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le contenu personnalisé pour la ligne de données dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> lorsque le contrôle est en mode lecture seule.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> qui contient le contenu personnalisé de la ligne de données lorsque le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> est en mode lecture seule. La valeur par défaut est null, ce qui signifie que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView> contrôle restitue un modèle différent pour la ligne de données en fonction du mode actuel du contrôle (spécifié par le <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> propriété). Le tableau suivant montre le modèle utilisé pour chaque mode.  
  
|Mode|Modèle de rendu|  
|----------|-----------------------|  
|Modifier|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Propriétés en lecture seule|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> propriété pour définir votre propre interface utilisateur (IU) pour les données de ligne lorsque la <xref:System.Web.UI.WebControls.FormView> contrôle est en mode lecture seule. Le modèle d’élément contient généralement des contrôles pour afficher les valeurs de champ d’un enregistrement, ainsi que des boutons de commande pour modifier, insérer et supprimer un enregistrement.  
  
 Pour spécifier le modèle personnalisé, placez d’abord `<ItemTemplate>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.FormView> contrôle. Vous pouvez ensuite répertorier le contenu du modèle entre les balises `<ItemTemplate>` balises. Pour afficher les valeurs de champ de la source de données liée au contrôle, utilisez une expression de liaison de données. Pour plus d’informations sur les expressions de liaison de données, consultez [syntaxe d’Expression de liaison de données](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca). Pour créer des boutons de commande qui exécutent les intégrées de suppression, les modifier et les nouvelles opérations d’enregistrement, ajoutez un contrôle de bouton de commande au modèle avec son `CommandName` propriété définie sur une des valeurs répertoriées dans le tableau suivant.  
  
|Type de bouton de commande|Valeur de CommandName|  
|-------------------------|-----------------------|  
|Supprimer|"Delete"|  
|Modifier|« Modifier »|  
|Nouveau|« Nouveau »|  
  
 Vous pouvez contrôler l’apparence du modèle d’élément à l’aide de la <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment définir un modèle personnalisé pour une ligne de données en mode lecture seule.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As FormViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdatedEventHandler ^ ItemUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un clic est effectué sur un bouton Mettre à jour dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />, mais après l'opération de mise à jour.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView> incrémente le <xref:System.Web.UI.WebControls.FormView.ItemUpdated> événement lorsqu’un bouton de mise à jour (un bouton avec son `CommandName` propriété la valeur « Update ») dans le contrôle est activé, mais après que le <xref:System.Web.UI.WebControls.FormView> contrôle met à jour l’enregistrement. Cela vous permet de fournir une méthode de gestion d’événements qui exécute une routine personnalisée, telles que la vérification des résultats d’une opération de mise à jour, chaque fois que cet événement se produit.  
  
 A <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> objet est passé à la méthode de gestion des événements, ce qui vous permet de déterminer le nombre d’enregistrements affectés et toutes les exceptions qui se sont produites. Pour déterminer le nombre d’enregistrements affectés par l’opération de mise à jour, utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> propriété. Utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> propriété pour déterminer si des exceptions se sont produites. Vous pouvez également indiquer si l’exception a été gérée dans la méthode de gestion d’événements en définissant le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> propriété. Si vous devez accéder aux valeurs de champ clé pour l’enregistrement mis à jour, utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> propriété. Les valeurs d’origine et mis à jour le champ non clés sont accessibles à l’aide de la <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> et <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> propriétés, respectivement.  
  
 Par défaut, le <xref:System.Web.UI.WebControls.FormView> contrôle retourne au mode spécifié par le <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriété après une opération de mise à jour. Pour conserver le <xref:System.Web.UI.WebControls.FormView> en mode édition, affectez la <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> propriété `true`.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.ItemUpdated> événement pour déterminer si une exception s’est produite lors d’une opération de mise à jour.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As FormViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdateEventHandler ^ ItemUpdating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un clic est effectué sur un bouton Mettre à jour dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />, mais avant l'opération de mise à jour.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView> incrémente le <xref:System.Web.UI.WebControls.FormView.ItemUpdating> événement lorsqu’un bouton de mise à jour (un bouton avec son `CommandName` propriété la valeur « Update ») dans le contrôle est activé, mais avant que le <xref:System.Web.UI.WebControls.FormView> contrôle met à jour l’enregistrement. Cela vous permet de fournir une méthode de gestion d’événements qui exécute une routine personnalisée, comme le codage HTML des valeurs d’un enregistrement avant la mise à jour dans la source de données, chaque fois que cet événement se produit.  
  
 A <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> objet est passé à la méthode de gestion d’événements, ce qui vous permet de déterminer la valeur d’un argument de commande facultatif envoyé à la <xref:System.Web.UI.WebControls.FormView> contrôle et pour indiquer que l’opération de mise à jour doit être annulée. La valeur d’argument de commande correspond à la `CommandArgument` propriété du bouton de mise à jour. Lorsque le `CommandArgument` du bouton de mise à jour est définie, utilisez la <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> propriété pour déterminer la valeur de l’argument de commande. Pour annuler l’opération de mise à jour, affectez la <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété `true`. Vous pouvez également lire ou modifier les nouvelles valeurs entrées par l’utilisateur à l’aide de la <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> et <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propriétés. Le <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propriété contient les champs clés, alors que le <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propriété contient les champs non-clé. Si vous devez accéder aux valeurs de champ non clé d’origine, utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> propriété.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.ItemUpdating> événement pour annuler une opération de mise à jour.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> qui représente l'état du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</param>
        <summary>Charge l'état des propriétés du contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> à faire persister, même lorsque la propriété <see cref="P:System.Web.UI.Control.EnableViewState" /> a la valeur <see langword="false" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.LoadControlState%2A> méthode est utilisée pour charger l’état de la <xref:System.Web.UI.WebControls.FormView> propriétés de contrôle qui doivent être persistants, même lorsque le <xref:System.Web.UI.Control.EnableViewState%2A> est définie sur `false`.  
  
> [!NOTE]
>  Cette méthode est utilisée principalement par les développeurs de contrôles pour étendre le <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> qui représente l'état du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</param>
        <summary>Charge l'état d'affichage enregistré précédemment du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.LoadViewState%2A> méthode est utilisée pour charger l’état d’affichage précédemment enregistré de le <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
> [!NOTE]
>  Cette méthode est utilisée principalement par les développeurs de contrôles pour étendre le <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> bascule entre les modes édition, insertion et lecture seule, mais après le changement de mode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.ModeChanged> événement est déclenché quand un <xref:System.Web.UI.WebControls.FormView> contrôle tente de basculer entre les modifier, insérer et en lecture seule, mais une fois que le mode ne change réellement. Cela vous permet de fournir une méthode de gestion d’événements qui exécute une routine personnalisée, telles que la synchronisation du <xref:System.Web.UI.WebControls.FormView> contrôle avec un autre contrôle, chaque fois que cet événement se produit.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.ModeChanged> événement afin d’afficher le mode actuel dans la ligne d’en-tête d’un <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 [!code-aspx-csharp[FormViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeChanged/CS/formviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[FormViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeChanged/VB/formviewmodechangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanging As FormViewModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewModeEventHandler ^ ModeChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> bascule entre les modes édition, insertion et lecture seule, mais avant le changement de mode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.ModeChanging> événement est déclenché quand un <xref:System.Web.UI.WebControls.FormView> contrôle tente de basculer entre les modifier, insérer et en lecture seule, mais avant que le mode change réellement. Cela vous permet de fournir une méthode de gestion d’événements qui exécute une routine personnalisée, telles que la configuration du <xref:System.Web.UI.WebControls.FormView> de contrôle pour un mode spécifique ou l’annulation de la modification du mode, chaque fois que cet événement se produit.  
  
 A <xref:System.Web.UI.WebControls.FormViewModeEventArgs> objet est passé à la méthode de gestion d’événements, ce qui vous permet de déterminer le mode vers lequel le <xref:System.Web.UI.WebControls.FormView> contrôle bascule, pour déterminer si le <xref:System.Web.UI.WebControls.FormView.ModeChanging> événement a été déclenché suite à l’utilisateur de l’annulation d’une opération de modification, ou pour indiquer qu’une opération d’insertion doit être annulée. Pour déterminer le nouveau mode, utilisez le <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> propriété. Vous pouvez également utiliser le <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> pour basculer vers un autre mode en lui affectant une des propriétés du <xref:System.Web.UI.WebControls.FormViewMode> valeurs d’énumération. Utilisez le <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> propriété pour déterminer si l’utilisateur a annulé une opération de modification. Pour annuler une opération d’insertion, affectez la <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété `true`.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.ModeChanging> événements pour masquer le pagineur ligne lorsque la <xref:System.Web.UI.WebControls.FormView> contrôle bascule en mode édition.  
  
 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedOuterTableStylePropertyName">
      <MemberSignature Language="C#" Value="protected internal virtual string ModifiedOuterTableStylePropertyName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string ModifiedOuterTableStylePropertyName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ModifiedOuterTableStylePropertyName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ ModifiedOuterTableStylePropertyName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Détermine si les règles de style CSS spécifiques à la table associées au contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> ont pour valeur leurs valeurs par défaut.</summary>
        <returns>Règles de style CSS par défaut associées au contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les règles de style CSS spécifique d’une table sont définies à leurs valeurs par défaut à l’aide de la <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>, <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>, <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>, <xref:System.Web.UI.WebControls.FormView.GridLines%2A>, <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> et <xref:System.Web.UI.WebControls.Style.Font%2A> propriétés.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Source de l'événement.</param>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Gère un événement remonté dans la hiérarchie des contrôles.</summary>
        <returns>
          <see langword="true" /> pour indiquer que l'événement doit être remonté plus haut dans la hiérarchie des contrôles ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> méthode est utilisée par le contrôle pour gérer les événements transmis à travers la hiérarchie des contrôles par éventuellement le <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> (méthode). Elle détermine s’il faut gérer un événement en examinant les propriétés de la <xref:System.EventArgs> objet contenu dans le `e` paramètre. Lorsqu’un événement doit être gérée, la méthode exécute l’action appropriée. Autres événements sont ignorés et passés dans la hiérarchie de contrôle. Cette méthode indique s’il faut passer l’événement le plus haut dans la hiérarchie de contrôle par sa valeur de retour.  
  
 Le <xref:System.Web.UI.WebControls.FormView> contrôle substitue l’implémentation de base de cette méthode pour exécuter l’action appropriée lorsqu’un des boutons reconnu par le contrôle est activé. Le tableau suivant répertorie les boutons de commande qui le <xref:System.Web.UI.WebControls.FormView> contrôle reconnaît.  
  
|Bouton|Valeur de CommandName|Description |  
|------------|-----------------------|-----------------|  
|Annuler|« Annuler »|Utilisé dans la mise à jour ou d’opérations d’insertion pour annuler l’opération et ignorer les valeurs entrées par l’utilisateur. Le <xref:System.Web.UI.WebControls.FormView> contrôle retourne ensuite au mode spécifié par le <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriété.|  
|Supprimer|"Delete"|Utilisé dans les opérations de suppression pour supprimer l’enregistrement affiché à partir de la source de données. Déclenche la <xref:System.Web.UI.WebControls.FormView.ItemDeleting> et <xref:System.Web.UI.WebControls.FormView.ItemDeleted> les événements.|  
|Modifier|« Modifier »|Utilisé dans les opérations de mise à jour pour mettre le <xref:System.Web.UI.WebControls.FormView> contrôle en mode édition. Le contenu spécifié dans le <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> propriété s’affiche pour la ligne de données.|  
|Insert|« Insertion »|Utilisé dans les opérations d’insertion pour tenter d’insérer un nouvel enregistrement dans la source de données avec les valeurs fournies par l’utilisateur. Déclenche la <xref:System.Web.UI.WebControls.FormView.ItemInserting> et <xref:System.Web.UI.WebControls.FormView.ItemInserted> les événements.|  
|Nouveau|« Nouveau »|Utilisé dans les opérations d’insertion pour placer le <xref:System.Web.UI.WebControls.FormView> contrôle en mode insertion. Le contenu spécifié dans le <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> propriété s’affiche pour la ligne de données.|  
|Page|« Page »|Utilisé dans les opérations de pagination pour représenter un bouton dans la ligne du pagineur qui effectue la pagination. Pour spécifier l’opération de pagination, définissez la `CommandArgument` propriété du bouton « Suivant », « Précédent », « First », « Dernier » ou l’index de la page vers laquelle naviguer. Déclenche la <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> et <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> les événements. **Remarque :** ce type de bouton est généralement utilisé uniquement dans le modèle de récepteur de radiomessagerie.|  
|Mise à jour|« Update »|Utilisé dans les opérations de mise à jour pour tenter de mettre à jour l’enregistrement affiché dans la source de données avec les valeurs fournies par l’utilisateur. Déclenche la <xref:System.Web.UI.WebControls.FormView.ItemUpdating> et <xref:System.Web.UI.WebControls.FormView.ItemUpdated> les événements.|  
  
 Cette version de la méthode retourne `true` lorsque un de ces boutons est géré. Pour plus d’informations sur la propagation d’événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.FormView" /> (classe), vous pouvez substituer cette méthode pour gérer vos propres événements. Veillez à utiliser la valeur de retour pour indiquer si l’événement doit être transmis plu haut dans la hiérarchie des contrôles.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.OnInit%2A> méthode est appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle de déclencher la <xref:System.Web.UI.Control.Init> événement. Elle est généralement utilisée par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.FormView.OnInit%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.FormViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As FormViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::FormViewCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> méthode est appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle de déclencher la <xref:System.Web.UI.WebControls.FormView.ItemCommand> événement. Elle est généralement utilisée par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> méthode est appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle de déclencher la <xref:System.Web.UI.WebControls.FormView.ItemCreated> événement. Elle est généralement utilisée par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.FormViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As FormViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::FormViewDeletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> méthode est appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle de déclencher la <xref:System.Web.UI.WebControls.FormView.ItemDeleted> événement. Elle est généralement utilisée par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.FormViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As FormViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::FormViewDeleteEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> méthode est appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle de déclencher la <xref:System.Web.UI.WebControls.FormView.ItemDeleting> événement. Elle est généralement utilisée par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Cette méthode est appelée lorsque le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> n'est pas lié à un contrôle de source de données, que l'utilisateur n'a pas annulé l'opération de suppression et qu'aucun gestionnaire d'événements n'est enregistré pour l'événement.</exception>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.FormViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As FormViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::FormViewInsertedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> méthode est appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle de déclencher la <xref:System.Web.UI.WebControls.FormView.ItemInserted> événement. Elle est généralement utilisée par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.FormViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As FormViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::FormViewInsertEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> méthode est appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle de déclencher la <xref:System.Web.UI.WebControls.FormView.ItemInserting> événement. Elle est généralement utilisée par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Cette méthode est appelée lorsque le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> n'est pas lié à un contrôle de source de données, que l'utilisateur n'a pas annulé l'opération d'insertion et qu'aucun gestionnaire d'événements n'est enregistré pour l'événement.</exception>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.FormViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As FormViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::FormViewUpdatedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> méthode est appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle de déclencher la <xref:System.Web.UI.WebControls.FormView.ItemUpdated> événement. Elle est généralement utilisée par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.FormViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As FormViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::FormViewUpdateEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> méthode est appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle de déclencher la <xref:System.Web.UI.WebControls.FormView.ItemUpdating> événement. Elle est généralement utilisée par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Cette méthode est appelée lorsque le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> n'est pas lié à un contrôle de source de données, que l'utilisateur n'a pas annulé l'opération de mise à jour et qu'aucun gestionnaire d'événements n'est enregistré pour l'événement.</exception>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> méthode est appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle de déclencher la <xref:System.Web.UI.WebControls.FormView.ModeChanged> événement. Elle est généralement utilisée par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.FormViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanging (e As FormViewModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanging(System::Web::UI::WebControls::FormViewModeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> méthode est appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle de déclencher la <xref:System.Web.UI.WebControls.FormView.ModeChanging> événement. Elle est généralement utilisée par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Cette méthode est appelée lorsque le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> n'est pas lié à un contrôle de source de données, que le changement de mode n'a pas été annulé et qu'aucun gestionnaire d'événements n'est enregistré pour l'événement.</exception>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> méthode est appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle de déclencher la <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> événement. Elle est généralement utilisée par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.FormViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As FormViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::FormViewPageEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> méthode est appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle de déclencher la <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> événement. Elle est généralement utilisée par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.FormView> classe.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Cette méthode est appelée lorsque le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> n'est pas lié à un contrôle de source de données, que l'opération de pagination n'a pas été annulée et qu'aucun gestionnaire d'événements n'est enregistré pour l'événement.</exception>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre total de pages requises pour afficher tous les enregistrements de la source de données.</summary>
        <value>Nombre d'éléments dans la source de données sous-jacente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque la fonctionnalité de pagination est activée (lorsque le <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> est définie sur `true`), utilisez le <xref:System.Web.UI.WebControls.FormView.PageCount%2A> propriété pour déterminer le nombre total d’enregistrements dans la source de données sous-jacente.  
  
> [!NOTE]
>  Étant donné que le <xref:System.Web.UI.WebControls.FormView> contrôle affiche un seul enregistrement à la fois, cette valeur correspond au nombre total de pages requises pour afficher tous les enregistrements dans la source de données. Cette valeur n’est pas exacte tant qu’après la liaison de données.  
  
 Pour déterminer l’index de l’enregistrement actif de la source de données sous-jacente, utilisez la <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.PageCount%2A> propriété pour déterminer le nombre total d’enregistrements affichés dans le contrôle.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'index de la page affichée.</summary>
        <value>L'index de base zéro de l'élément de données qui est affiché dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> provenant de la source de données sous-jacente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque la fonctionnalité de pagination est activée (lorsque le <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> est définie sur `true`), utilisez le <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriété pour déterminer l’index de l’enregistrement actuellement affiché. Vous pouvez également utiliser cette propriété pour modifier par programme l’enregistrement affiché.  
  
> [!NOTE]
>  Lorsque la fonctionnalité de pagination est activée, vous pouvez également utiliser cette propriété pour déterminer le numéro de page de l’enregistrement affiché ; Toutefois, sachez que cette propriété est de base zéro.  
  
 Pour déterminer le nombre total d’éléments dans la source de données, utilisez le <xref:System.Web.UI.WebControls.FormView.PageCount%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriété pour déterminer l’index de page de l’enregistrement affiché.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée est inférieure à -1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la valeur de la propriété <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> change après une opération de pagination.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView> incrémente le <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> événement lorsqu’un bouton du pagineur (un bouton avec son `CommandName` propriété définie sur « Page ») dans le contrôle est activé, mais après que le <xref:System.Web.UI.WebControls.FormView> contrôle gère l’opération de pagination. Cela vous permet de fournir une méthode de gestion d’événements qui exécute une routine personnalisée chaque fois que cet événement se produit.  
  
> [!NOTE]
>  Cet événement n’est pas déclenché lorsque vous définissez par programmation la <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriété.  
  
 Boutons de pagineur se trouvent généralement dans la ligne de pagineur un <xref:System.Web.UI.WebControls.FormView> contrôle. Cet événement est souvent utilisé pour synchroniser un <xref:System.Web.UI.WebControls.FormView> contrôler avec un <xref:System.Web.UI.WebControls.GridView> contrôle ou pour définir le comportement de la <xref:System.Web.UI.WebControls.FormView> contrôle après une opération de pagination.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> événement pour retourner le <xref:System.Web.UI.WebControls.FormView> en mode lecture seule lorsque l’utilisateur navigue vers un autre enregistrement.  
  
 [!code-aspx-csharp[FormViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageIndexChanged/CS/formviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[FormViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageIndexChanged/VB/formviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As FormViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewPageEventHandler ^ PageIndexChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la valeur de la propriété <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> change avant une opération de pagination.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView> incrémente le <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> événement lorsqu’un bouton du pagineur (un bouton avec son `CommandName` propriété définie sur « Page ») dans le contrôle est activé, mais avant que le <xref:System.Web.UI.WebControls.FormView> contrôle gère l’opération de pagination. Cela vous permet de fournir une méthode de gestion d’événements qui exécute une routine personnalisée, par exemple l’annulation de l’opération de pagination lorsque cet événement se produit.  
  
> [!NOTE]
>  Cet événement n’est pas déclenché lorsque vous définissez par programmation la <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> propriété.  
  
 Boutons de pagineur se trouvent généralement dans la ligne de pagineur un <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 A <xref:System.Web.UI.WebControls.FormViewPageEventArgs> objet est passé à la méthode de gestion des événements, ce qui vous permet de déterminer l’index de la page sélectionnée par l’utilisateur et d’indiquer que l’opération de pagination doit être annulée. Pour déterminer l’index de la page sélectionnée par l’utilisateur, utilisez le <xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> propriété. Pour annuler l’opération de pagination, affectez la <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété de la <xref:System.Web.UI.WebControls.FormViewPageEventArgs> objet `true`.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> événement pour annuler une opération de pagination.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewPageEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewPageEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à l'objet <see cref="T:System.Web.UI.WebControls.PagerSettings" /> vous permettant de définir les propriétés des boutons du pagineur dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Référence à l'objet <see cref="T:System.Web.UI.WebControls.PagerSettings" /> vous permettant de définir les propriétés des boutons du pagineur dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> propriété pour contrôler les paramètres de la ligne du pagineur dans un <xref:System.Web.UI.WebControls.FormView> contrôle. La ligne du pagineur est affichée lorsque la fonctionnalité de pagination est activée (lorsque le <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> est définie sur `true`) et contient les contrôles qui permettent à l’utilisateur de naviguer vers les différents enregistrements dans le contrôle. Cette propriété est en lecture seule ; Toutefois, vous pouvez définir les propriétés de la <xref:System.Web.UI.WebControls.PagerSettings> , elle retourne l’objet. Les propriétés peuvent être définies de manière déclarative sous la forme `Property-Subproperty`, où `Subproperty` est une propriété de la <xref:System.Web.UI.WebControls.PagerSettings> objet (par exemple, `PagerSettings-Mode`). Les propriétés peuvent également être définies par programme sous la forme `Property.Subproperty` (par exemple, `PagerSettings.Mode`). Paramètres courants incluent généralement le mode d’affichage de la ligne du pagineur et de texte personnalisé ou d’images pour les contrôles de navigation.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> propriété pour spécifier les propriétés de la ligne du pagineur.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à l'objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vous permettant de définir l'apparence de la ligne de pagineur dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Référence au <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui représente le style de la ligne de pagineur dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> propriété pour contrôler l’apparence de la ligne du pagineur dans un <xref:System.Web.UI.WebControls.FormView> contrôle. La ligne du pagineur est affichée lorsque la fonctionnalité de pagination est activée (lorsque le <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> est définie sur `true`) et contient les contrôles qui permettent à l’utilisateur de naviguer vers les différentes pages dans le contrôle. Cette propriété est en lecture seule ; Toutefois, vous pouvez définir les propriétés de la <xref:System.Web.UI.WebControls.TableItemStyle> , elle retourne l’objet. Les propriétés peuvent être définies de façon déclarative à l’aide d’une des méthodes suivantes :  
  
-   Placez un attribut dans la balise d’ouverture de la <xref:System.Web.UI.WebControls.FormView> contrôle sous la forme `Property-Subproperty`, où `Subproperty` est une propriété de la <xref:System.Web.UI.WebControls.TableItemStyle> objet (par exemple, `PagerStyle-ForeColor`).  
  
-   Imbriquer un `<PagerRowStyle>` élément entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 Les propriétés peuvent également être définies par programme sous la forme `Property.Subproperty` (par exemple, `PagerStyle.ForeColor`). Paramètres courants incluent généralement des propriétés de police, couleur de premier plan et une couleur d’arrière-plan personnalisée.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> propriété pour spécifier les paramètres de style pour la ligne du pagineur.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le contenu personnalisé de la ligne de pagineur dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> qui contient le contenu personnalisé de la ligne de pagineur. La valeur par défaut est null, ce qui signifie que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une ligne de pagineur est affichée dans un <xref:System.Web.UI.WebControls.FormView> contrôle lorsque la fonctionnalité de pagination est activée (lorsque le <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> est définie sur true). La ligne du pagineur contient les contrôles qui permettent à l’utilisateur de naviguer vers les différentes pages dans le contrôle. Au lieu d’utiliser l’interface utilisateur du ligne pagineur intégrés (UI), vous pouvez définir votre propre interface utilisateur à l’aide de la <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> propriété.  
  
> [!NOTE]
>  Lorsque le <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> propriété a la valeur se substitue à l’interface utilisateur de la ligne de pagineur intégrés.  
  
 Pour spécifier un modèle personnalisé pour la ligne du pagineur, placez d’abord `<PagerTemplate>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.FormView> contrôle. Vous pouvez ensuite répertorier le contenu du modèle entre les balises `<PagerTemplate>` balises. Pour contrôler l’apparence de la ligne du pagineur, utilisez la <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> propriété.  
  
 En règle générale, les contrôles de bouton sont ajoutés au modèle du pagineur pour effectuer les opérations de pagination. Le <xref:System.Web.UI.WebControls.FormView> contrôle effectue une opération de pagination lorsqu’un contrôle bouton avec son `CommandName` un clic sur « Page » la valeur de propriété. Du bouton `CommandArgument` propriété détermine le type d’opération de pagination à effectuer. Le tableau suivant répertorie les valeurs d’argument de commande prises en charge par le <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
|Valeur CommandArgument|Description |  
|---------------------------|-----------------|  
|« Suivant »|Navigue vers la page suivante.|  
|« Précédent »|Navigue vers la page précédente.|  
|« Première »|Accède à la première page.|  
|« Dernier »|Accède à la dernière page.|  
|Valeur entière|Navigue vers le numéro de page spécifié.|  
  
   
  
## Examples  
 L’exemple suivant montre comment définir un modèle de pagineur personnalisé.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IEnumerable" /> représentant la source de données.</param>
        <summary>Lie la source de données spécifiée au contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.PerformDataBinding%2A> méthode est une méthode d’assistance appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle à lier la source de données spécifiée au contrôle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Étant donné que la <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> méthode est sealed, vous devez substituer cette méthode si vous avez besoin effectuer des tâches supplémentaires lors de la liaison de données.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Définit la hiérarchie des contrôles du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.PrepareControlHierarchy%2A> méthode est une méthode d’assistance appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle pour configurer la hiérarchie des contrôles dans le <xref:System.Web.UI.WebControls.FormView> contrôler avant que le contrôle est restitué.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument d'événement à partir duquel créer un <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> pour l'événement ou les événements déclenchés.</param>
        <summary>Déclenche les événements appropriés pour le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> lors de la publication sur le serveur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La page appelle le <xref:System.Web.UI.WebControls.FormView.RaisePostBackEvent%2A> méthode lorsqu’un événement de publication (postback) produit, qui déclenche les événements appropriés pour un <xref:System.Web.UI.WebControls.FormView> contrôle. Cet appel se produit dans le cycle de vie de page après le chargement et la modification de la notification, mais avant le pré-rendu. Cette méthode a été implémentée pour créer un <xref:System.Web.UI.WebControls.CommandEventArgs> objet pour les événements qui sont déclenchés.  
  
> [!NOTE]
>  Cette méthode est utilisée principalement par les développeurs de contrôles pour étendre le <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> qui contient le flux de sortie à rendre sur le client.</param>
        <summary>Affiche le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> sur le client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.Render%2A> méthode est utilisée pour restituer le contenu du contrôle serveur pour le navigateur du client à l’aide de la <xref:System.Web.UI.HtmlTextWriter> objet.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IRenderOuterTableControl.RenderOuterTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le contrôle intègre le HTML restitué dans un élément <see langword="table" /> pour lui appliquer des styles intralignes.</summary>
        <value>
          <see langword="true" /> si le contrôle intègre le HTML restitué dans un élément <see langword="table" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour rendre les propriétés de style intraligne comme <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> s’appliquent à l’ensemble du code HTML est rendu pour le contrôle, ASP.NET place le rendu HTML dans un `table` élément. Si vous ne souhaitez pas externe `table` élément doit être restitué, définissez cette propriété sur `false`. Dans ce cas, si vous essayez de définir des propriétés de style qui s’appliquent à l’ensemble du contrôle inline, une exception est levée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow Row" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Row" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Row As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ Row { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Web.UI.WebControls.FormViewRow" /> qui représente la ligne de données dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.FormViewRow" /> qui représente la ligne de données dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.Row%2A> propriété pour accéder par programme le <xref:System.Web.UI.WebControls.FormViewRow> objet qui représente la ligne de données. La ligne de données contient un contenu différent selon le modèle de rendu pour le mode actuel (spécifié par le <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> propriété). Vous pouvez uniquement accéder au contenu du modèle pour le mode actuel. Le tableau suivant montre le modèle utilisé pour chaque mode.  
  
|Mode|Modèle de rendu|  
|----------|-----------------------|  
|Modifier|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Propriétés en lecture seule|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.FormView.Row%2A> propriété est disponible uniquement après que le <xref:System.Web.UI.WebControls.FormView> contrôle crée la ligne de données dans le <xref:System.Web.UI.WebControls.FormView.ItemCreated> événement.  
  
 Cette propriété est généralement utilisée lorsque vous avez besoin manipuler par programme la ligne de données, par exemple lors de l’ajout de contenu personnalisé. Toute modification apportée à la <xref:System.Web.UI.WebControls.FormView.Row%2A> propriété doit être effectuée après la <xref:System.Web.UI.WebControls.FormView> contrôle a été lié aux données ; sinon, le <xref:System.Web.UI.WebControls.FormView> contrôle remplace toutes les modifications.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.Row%2A> propriété pour accéder aux propriétés de la ligne de données pendant la <xref:System.Web.UI.WebControls.FormView.ItemCreated> événement.  
  
 [!code-aspx-csharp[FormViewRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewRow/CS/formviewrowcs.aspx#1)]
 [!code-aspx-vb[FormViewRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewRow/VB/formviewrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à l'objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui vous permet de définir l'apparence de la ligne de données dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> lorsque le contrôle est en mode lecture seule.</summary>
        <value>Référence à <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui représente le style de la ligne de données dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> lorsque le contrôle est en mode lecture seule.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> propriété pour contrôler l’apparence des données en ligne lorsqu’une <xref:System.Web.UI.WebControls.FormView> contrôle est en mode lecture seule (affichage). Lorsque le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode lecture seule, la ligne de données affiche le contenu défini par l’utilisateur spécifié par le <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> propriété. Cette propriété est en lecture seule ; Toutefois, vous pouvez définir les propriétés de la <xref:System.Web.UI.WebControls.TableItemStyle> , elle retourne l’objet. Les propriétés peuvent être définies de façon déclarative à l’aide d’une des méthodes suivantes :  
  
-   Placez un attribut dans la balise d’ouverture de la <xref:System.Web.UI.WebControls.FormView> contrôle sous la forme `Property-Subproperty`, où `Subproperty` est une propriété de la <xref:System.Web.UI.WebControls.TableItemStyle> objet (par exemple, `RowStyle-ForeColor`).  
  
-   Imbriquer une `<RowStyle>` élément entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 Les propriétés peuvent également être définies par programme sous la forme `Property.Subproperty` (par exemple, `RowStyle.ForeColor`). Paramètres courants incluent généralement des propriétés de police, couleur de premier plan et une couleur d’arrière-plan personnalisée.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> propriété pour spécifier un style personnalisé pour des données en ligne lorsqu’une <xref:System.Web.UI.WebControls.FormView> contrôle est en mode lecture seule.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre l'état des propriétés du contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> à faire persister, même lorsque la propriété <see cref="P:System.Web.UI.Control.EnableViewState" /> a la valeur <see langword="false" />.</summary>
        <returns>Retourne l’état d’affichage actuel du contrôle serveur. Si aucun état d’affichage n’est associé au contrôle, cette méthode retourne <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée pour enregistrer l’état de la <xref:System.Web.UI.WebControls.FormView> propriétés de contrôle qui doivent être persistants, même lorsque le <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> est définie sur `false`.  
  
> [!NOTE]
>  Cette méthode est utilisée principalement par les développeurs de contrôles pour étendre le <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre l'état d'affichage actuel du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>
          <see cref="T:System.Object" /> qui contient l'état enregistré du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.SaveViewState%2A> méthode est une méthode d’assistance appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle pour enregistrer l’état du contrôle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur de clés des données de l'enregistrement en cours dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Valeur de clés des données de l'enregistrement en cours dans un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriété est définie, le <xref:System.Web.UI.WebControls.FormView> contrôle crée automatiquement un <xref:System.Web.UI.WebControls.DataKey> objet qui contient les paires clé/valeur du champ ou de champs répertoriés dans le <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriété pour l’enregistrement actif. Le <xref:System.Web.UI.WebControls.DataKey> objet représente le champ de clé primaire ou les champs de l’enregistrement en cours et est stocké dans le <xref:System.Web.UI.WebControls.FormView.DataKey%2A> propriété. Au lieu d’utiliser le <xref:System.Web.UI.WebControls.FormView.DataKey%2A> propriété pour accéder à la valeur de clé de données, vous pouvez utiliser le <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> propriété comme un raccourci.  
  
> [!NOTE]
>  Lorsque le <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriété répertorie plusieurs champs, cette propriété retourne la valeur du premier champ répertorié.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> propriété pour déterminer la valeur du champ clé.  
  
 [!code-aspx-csharp[FormViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSelectedValue/CS/formviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[FormViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSelectedValue/VB/formviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index à définir.</param>
        <summary>Définit l'index de la page actuellement affichée dans le contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataItemIndex As Integer Implements IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.IDataItemContainer.DataItemIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />.</summary>
        <value>Objet qui représente l'index d'affichage.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.FormView> est castée en interface <xref:System.Web.UI.IDataItemContainer>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayIndex As Integer Implements IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.IDataItemContainer.DisplayIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DisplayIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />.</summary>
        <value>Retourne toujours 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.FormView> est castée en interface <xref:System.Web.UI.IDataItemContainer>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument pour l'événement.</param>
        <summary>Déclenche des événements pour le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> pendant la publication sur le serveur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La page appelle le <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> méthode lorsqu’un événement de publication se produit. Cet appel se produit dans le cycle de vie de page après le chargement et la modification de la notification, mais avant le rendu de la page.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un tableau qui contient les noms des champs clé primaire des éléments qui sont affichés dans le contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Tableau qui contient les noms des champs clé primaire des éléments affichés dans le contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.FormView> est castée en interface <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de la liste des éléments de données auquel le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> se lie lorsque la source de données contient plusieurs listes d'éléments de données.</summary>
        <value>Nom de la liste d'éléments de données à laquelle le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> se lie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.FormView> est castée en interface <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Web.UI.WebControls.IDataBoundControl.DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'objet qui contient la liste des données que le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> récupère.</summary>
        <value>Objet qui contient la liste des données que le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> récupère.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.FormView> est castée en interface <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'ID du contrôle de source de données qui contient la liste des éléments de données que le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> récupère.</summary>
        <value>ID du contrôle de source de données qui contient la liste des éléments de données que le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> récupère.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.FormView> est castée en interface <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet source de données qui contient la liste des éléments de données que le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> récupère.</summary>
        <value>Objet source de données qui contient la liste des éléments de données que le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> récupère.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.FormView> est castée en interface <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKey As DataKey Implements IDataBoundItemControl.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System.Web.UI.WebControls.IDataBoundItemControl.DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet qui représente la valeur de clés des données de la ligne dans le contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Objet qui représente la valeur de clés des données de la ligne dans le contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.FormView> est castée en interface <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Mode As DataBoundControlMode Implements IDataBoundItemControl.Mode" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { System::Web::UI::WebControls::DataBoundControlMode get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.Mode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le mode actuel du <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Mode actuel du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.FormView> est castée en interface <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">Contrôle bouton qui a publié la page sur le serveur.</param>
        <summary>Détermine les options d'événement de publication (postback) du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>Options d'événement de publication (postback) du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23WebControls%23IPostBackContainer%23GetPostBackOptions%2A> méthode est une méthode d’assistance qui est appelée par le <xref:System.Web.UI.WebControls.FormView> contrôle pour créer un <xref:System.Web.UI.PostBackOptions> objet qui contient les options d’événement de publication pour le contrôle. Le <xref:System.Web.UI.PostBackOptions> objet est généralement utilisé en tant que paramètre pour le <xref:System.Web.UI.Page.GetPostBackEventReference%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'objet contenu dans le paramètre <paramref name="buttonControl" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" /> de <paramref name="buttonControl" /> a la valeur <see langword="true" />.</exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur <see cref="T:System.Web.UI.HtmlTextWriterTag" /> du contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Retourne toujours <see langword="HtmlTextWriterTag.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.TagKey%2A> propriété permet d’écrire le balisage HTML approprié pour le flux de sortie la <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Vous pouvez substituer cette propriété pour spécifier <see cref="T:System.Web.UI.HtmlTextWriterTag" /> valeur à utiliser pour votre contrôle dérivé.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ TopPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Web.UI.WebControls.FormViewRow" /> qui représente la ligne de pagineur affichée en haut d'un contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.FormViewRow" /> qui représente la ligne du haut du pagineur dans le contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque la pagination est activée (lorsque le <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> est définie sur `true`), une ligne supplémentaire appelée ligne de pagineur est automatiquement affichée dans le <xref:System.Web.UI.WebControls.FormView> contrôle. La ligne du pagineur contient des contrôles qui permettent à l’utilisateur accéder à d’autres enregistrements et peuvent être affichées en haut, bas, ou haut et bas du contrôle. Utilisez le <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> propriété pour accéder par programme le <xref:System.Web.UI.WebControls.FormViewRow> objet qui représente la ligne du haut du pagineur dans le <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> propriété est disponible uniquement après que le <xref:System.Web.UI.WebControls.FormView> contrôle crée la ligne du haut du pagineur dans le <xref:System.Web.UI.WebControls.FormView.ItemCreated> événement.  
  
 Cette propriété est généralement utilisée lorsque vous avez besoin manipuler par programme la ligne du haut du pagineur, par exemple lors de l’ajout de contenu personnalisé. Toute modification apportée à la <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> propriété doit être effectuée après la <xref:System.Web.UI.WebControls.FormView> contrôle a été lié aux données ; sinon, le <xref:System.Web.UI.WebControls.FormView> contrôle remplace toutes les modifications.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> propriété pour accéder à la ligne du pagineur affichée en haut d’un <xref:System.Web.UI.WebControls.FormView> contrôle. La ligne du pagineur est ensuite mis à jour avec du contenu supplémentaire.  
  
 [!code-aspx-csharp[FormViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewTopPagerRow/CS/formviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[FormViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewTopPagerRow/VB/formviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Marque le point de départ du suivi et de l'enregistrement des modifications d'état d'affichage apportées au contrôle <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est substituée pour marquer le point de départ à partir duquel commencer le suivi et l’enregistrement des modifications apportées au contrôle dans le cadre de l’état d’affichage du contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(bool causesValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" /> pour exécuter la validation de la page lorsque la méthode est appelée ; sinon, <see langword="false" />.</param>
        <summary>Met à jour l'enregistrement en cours dans la source de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Web.UI.WebControls.FormView> contrôle est en mode édition, utilisez le <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> pour mettre à jour par programme de l’enregistrement actif dans la source de données. Cette méthode est couramment utilisée lorsque vous avez besoin mettre à jour l’enregistrement en cours à partir d’en dehors de la <xref:System.Web.UI.WebControls.FormView> contrôler, à partir d’un autre contrôle dans la page.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.FormView> contrôle doit être en mode édition lorsque cette méthode est appelée ; sinon, un <xref:System.Web.HttpException> est levée.  
  
 Pour spécifier si la validation de la page est effectuée avant l’opération de mise à jour, utilisez le `causesValidation` paramètre. Appel de cette méthode lève également le <xref:System.Web.UI.WebControls.FormView.ItemUpdated> et <xref:System.Web.UI.WebControls.FormView.ItemUpdating> les événements.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> pour mettre à jour par programme de l’enregistrement actif dans un <xref:System.Web.UI.WebControls.FormView> contrôle dans la source de données.  
  
 [!code-aspx-csharp[FormViewUpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateItem/CS/formviewupdateitemcs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateItem/VB/formviewupdateitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Cette méthode est appelée lorsque le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> n'est pas en mode édition.  -ou- L’objet <see cref="T:System.Web.UI.DataSourceView" /> associé au contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> est null.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de la méthode dans la page appelée lorsque le contrôle effectue une opération de mise à jour.</summary>
        <value>Nom de la méthode dans la page appelée lorsque le contrôle effectue une opération de mise à jour.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une série de didacticiels sur l’utilisation de la liaison de modèle avec Web Forms, consultez [liaison de modèle et les Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>