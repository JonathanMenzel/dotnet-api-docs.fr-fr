<Type Name="ObjectDataSourceEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c891053b9ebea58a48c66b57ca93f983675b5d1a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37591388" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour les événements <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" /> et <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" /> du contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> classe est utilisée dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> et <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> méthodes pour fournir l’accès à l’instance d’objet métier avant toute opération de données qui utilisent le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle et l’objet métier sont effectuées. L’objet métier est défini et sont accessibles via le <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> propriété. En ajoutant un délégué de gestionnaire d’événements pour gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> événement, vous pouvez créer une instance de l’objet métier dans du code personnalisé au lieu du <xref:System.Web.UI.WebControls.ObjectDataSource> exécute l’instanciation. Cela est utile lorsque vous souhaitez une instance par défaut de votre objet métier ou d’appeler un constructeur non défini par défaut pour créer l’instance ; le <xref:System.Web.UI.WebControls.ObjectDataSource> appelle toujours le constructeur par défaut pour créer une instance de l’objet métier qu’il fonctionne avec. Vous pouvez également ajouter un délégué de gestionnaire d’événements pour gérer le <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> événement, ce qui vous permet d’accéder aux publiquement exposés des membres de l’objet métier pour effectuer toute initialisation ou travail supplémentaire.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> et <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> méthodes ne sont pas appelées par le <xref:System.Web.UI.WebControls.ObjectDataSource> du contrôle, si la méthode d’objet métier qui effectue les opérations de données `static`.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle expose plusieurs événements que vous pouvez gérer pour travailler avec l’objet métier sous-jacent à différents moments dans son cycle de vie. Le tableau suivant répertorie les événements et associé <xref:System.EventArgs> classes et les délégués de gestionnaire d’événements.  
  
|événement|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> Se produit immédiatement avant la création de l’instance de l’objet métier.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> Se produit immédiatement après la création de l’instance de l’objet métier.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> Se produit avant que les données sont récupérées.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> et <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.<br /><br /> Se produit avant une insertion, mise à jour ou opération de suppression est effectuée.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.<br /><br /> Se produit une fois que les données sont récupérées.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> Se produit après l’insertion, mise à jour ou opération de suppression est terminée.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> Se produit avant la destruction d’un objet métier.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 Cette section contient deux exemples de code. Le premier exemple de code montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.GridView> contrôle pour récupérer et afficher des informations. Le deuxième exemple de code fournit l’exemple d’objet métier de base qui utilise le premier exemple de code.  
  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.GridView> contrôle pour récupérer et afficher des informations. Dans cet exemple, comme dans nombreux scénarios réels, il peut être possible ni approprié d’utiliser une instance par défaut de l’objet métier avec le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle. Dans cet exemple, le <xref:System.Web.UI.WebControls.ObjectDataSource> ne peut pas appeler le constructeur par défaut, car il lève une exception. Dans certains cas, le constructeur par défaut peut être protégé et dans d’autres cas il ne peut pas initialiser l’objet métier à l’état souhaité. Quelle que soit la raison, vous pouvez créer une instance de l’objet métier vous-même et définir l’instance la <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> propriété de la <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> objet qui est passé au gestionnaire. C’est l’objet métier qui instance le <xref:System.Web.UI.WebControls.ObjectDataSource> utilisera pour effectuer son travail.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/objds15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/objds15vb.aspx#1)]  
  
 L’exemple de code suivant montre l’exemple d’objet métier de base qui utilise l’exemple de code précédent.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/northwindemployee15.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/northwindemployee15.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceEventArgs (object objectInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object objectInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (objectInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceEventArgs(System::Object ^ objectInstance);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceEventArgs : obj -&gt; System.Web.UI.WebControls.ObjectDataSourceEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceEventArgs objectInstance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="objectInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectInstance">L'objet métier avec lequel <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> interagit pour exécuter des opérations de données.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" /> à l'aide de l'objet spécifié.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectInstance { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectInstance : obj with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un objet qui représente l'objet métier avec lequel le contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> exécute des opérations de données.</summary>
        <value>L'objet métier que <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> utilise pour effectuer des opérations de données ; sinon, <see langword="null" />, si <see langword="null" /> est passé à <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Cette section contient deux exemples de code. Le premier exemple de code montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.GridView> contrôle pour récupérer et afficher des informations. Le deuxième exemple de code fournit l’exemple d’objet métier de base qui utilise le premier exemple de code.  
  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.GridView> contrôle pour récupérer et afficher des informations. Dans cet exemple, comme dans nombreux scénarios réels, il peut être possible ni approprié d’utiliser une instance par défaut de l’objet métier avec le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle. Dans cet exemple, le <xref:System.Web.UI.WebControls.ObjectDataSource> ne peut pas appeler le constructeur par défaut, car il lève une exception. Dans certains cas, le constructeur par défaut peut être protégé et dans d’autres cas il ne peut pas initialiser l’objet métier à l’état souhaité. Quelle que soit la raison, vous pouvez créer une instance de l’objet métier vous-même et définir l’instance la <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> propriété de la <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> objet qui est passé au gestionnaire. C’est l’objet métier qui instance le <xref:System.Web.UI.WebControls.ObjectDataSource> utilisera pour effectuer son travail.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/objds15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/objds15vb.aspx#1)]  
  
 L’exemple de code suivant montre l’exemple d’objet métier de base qui utilise l’exemple de code précédent.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/northwindemployee15.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/northwindemployee15.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      </Docs>
    </Member>
  </Members>
</Type>