<Type Name="MultiView" FullName="System.Web.UI.WebControls.MultiView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b65ea0fdaf1679fe3b007d1b88047aa0dd92969f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600213" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MultiView : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MultiView extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.MultiView" />
  <TypeSignature Language="VB.NET" Value="Public Class MultiView&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiView : System::Web::UI::Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ActiveViewChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MultiViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.MultiViewControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(typeof(System.Web.UI.WebControls.View))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:MultiView runat="server"&gt;&lt;/{0}:MultiView&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente un contrôle servant de conteneur pour un groupe de contrôles <see cref="T:System.Web.UI.WebControls.View" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans cette rubrique :  
  
-   [Introduction](#introduction)  
  
-   [Syntaxe déclarative](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduction  
 Le <xref:System.Web.UI.WebControls.MultiView> contrôle est un conteneur pour un groupe de <xref:System.Web.UI.WebControls.View> contrôles. Il vous permet de définir un groupe de <xref:System.Web.UI.WebControls.View> contrôles, où chaque <xref:System.Web.UI.WebControls.View> contrôle contienne des contrôles enfants. Votre application peut rendre ensuite un spécifique <xref:System.Web.UI.WebControls.View> contrôle au client en fonction de critères tels que l’identité de l’utilisateur, les préférences utilisateur et les informations passées dans un paramètre de chaîne de requête. Vous pouvez également utiliser le <xref:System.Web.UI.WebControls.MultiView> contrôle pour créer des Assistants. Dans ce scénario, chaque <xref:System.Web.UI.WebControls.View> contrôle contenu dans un <xref:System.Web.UI.WebControls.MultiView> contrôle représente une autre étape ou une page de l’Assistant. Vous devez également utiliser ce contrôle pour développer des applications de plusieurs écrans pour les appareils mobiles. Ce contrôle fournit les mêmes fonctionnalités que mobile ASP.NET <xref:System.Web.UI.MobileControls.Form> contrôle dans .NET Framework version 1.1.  
  
 Seul <xref:System.Web.UI.WebControls.View> contrôle à la fois peut être défini en tant que la vue active dans un <xref:System.Web.UI.WebControls.MultiView> contrôle. Lorsqu’un <xref:System.Web.UI.WebControls.View> contrôle est défini comme étant la vue active, les contrôles enfants qu’il contient sont rendus au client. Vous pouvez utiliser la <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété ou le <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> méthode pour définir la vue active. Si le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété est vide, le <xref:System.Web.UI.WebControls.MultiView> contrôle ne rend pas de contenu au client. Si la vue active est définie sur une <xref:System.Web.UI.WebControls.View> qui n’existe pas dans le <xref:System.Web.UI.WebControls.MultiView> (contrôle), un <xref:System.ArgumentOutOfRangeException> est déclenché au moment de l’exécution.  
  
 Vous pouvez définir la vue active de manière déclarative ou par programme. Définissant le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété de manière déclarative lorsque vous définissez le <xref:System.Web.UI.WebControls.MultiView> contrôler causes le <xref:System.Web.UI.WebControls.View> contrôle qui est défini comme étant la vue active à restituer dans la client la première fois le <xref:System.Web.UI.WebControls.MultiView> contrôle est appelée. L’exemple de code suivant montre comment définir le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété de façon déclarative.  
  
```  
<asp:MultiView id="MultiView1" ActiveViewIndex=0 runat="Server">   
```  
  
 Définition de la <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété par programme, ou en appelant le <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> (méthode), permet à l’application déterminer les <xref:System.Web.UI.WebControls.View> contrôle soit restitué au client au moment de l’exécution en fonction de critères tels que l’identité d’un utilisateur ou les préférences.  
  
 Pour permettre aux utilisateurs de naviguer parmi les <xref:System.Web.UI.WebControls.View> des contrôles dans un <xref:System.Web.UI.WebControls.MultiView> (contrôle), vous pouvez ajouter un <xref:System.Web.UI.WebControls.LinkButton> ou <xref:System.Web.UI.WebControls.Button> le contrôle à chaque <xref:System.Web.UI.WebControls.View> contrôle. Pour tirer parti de la <xref:System.Web.UI.WebControls.MultiView> du contrôle mise à jour automatique de l’actif <xref:System.Web.UI.WebControls.View>, définissez le `CommandName` propriété sur le bouton ou lien à la valeur de l’un des champs de nom de commande suivants qui correspond à l’élément comportement de navigation : <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName>, <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName>, <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName>, ou <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName>.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Syntaxe déclarative  
  
```  
<asp:MultiView  
    ActiveViewIndex="integer"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnActiveViewChanged="ActiveViewChanged event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
>  
            <asp:TemplatedWizardStep  
                AllowReturn="True|False"  
                ContentTemplateContainer="string"  
                EnableTheming="True|False"  
                EnableViewState="True|False"  
                ID="string"  
                OnActivate="Activate event handler"  
                OnDataBinding="DataBinding event handler"  
                OnDeactivate="Deactivate event handler"  
                OnDisposed="Disposed event handler"  
                OnInit="Init event handler"  
                OnLoad="Load event handler"  
                OnPreRender="PreRender event handler"  
                OnUnload="Unload event handler"  
                runat="server"  
                SkinID="string"  
                StepType="Auto|Complete|Finish|Start|Step"  
                Title="string"  
                Visible="True|False"  
>  
                        <ContentTemplate>  
                            <!-- child controls -->  
                        </ContentTemplate>  
                        <CustomNavigationTemplate>  
                            <!-- child controls -->  
                        </CustomNavigationTemplate>  
            </asp:TemplatedWizardStep>  
            <asp:View  
                EnableTheming="True|False"  
                EnableViewState="True|False"  
                ID="string"  
                OnActivate="Activate event handler"  
                OnDataBinding="DataBinding event handler"  
                OnDeactivate="Deactivate event handler"  
                OnDisposed="Disposed event handler"  
                OnInit="Init event handler"  
                OnLoad="Load event handler"  
                OnPreRender="PreRender event handler"  
                OnUnload="Unload event handler"  
                runat="server"  
                SkinID="string"  
                Visible="True|False"  
            />  
            <asp:WizardStep  
                AllowReturn="True|False"  
                EnableTheming="True|False"  
                EnableViewState="True|False"  
                ID="string"  
                OnActivate="Activate event handler"  
                OnDataBinding="DataBinding event handler"  
                OnDeactivate="Deactivate event handler"  
                OnDisposed="Disposed event handler"  
                OnInit="Init event handler"  
                OnLoad="Load event handler"  
                OnPreRender="PreRender event handler"  
                OnUnload="Unload event handler"  
                runat="server"  
                SkinID="string"  
                StepType="Auto|Complete|Finish|Start|Step"  
                Title="string"  
                Visible="True|False"  
            />  
</asp:MultiView>  
```  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.MultiView> contrôle pour créer une enquête de base. Chaque <xref:System.Web.UI.WebControls.View> contrôle est une question d’enquête distincte. Lorsque l’utilisateur clique sur le **précédent** bouton sur la page, le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété est décrémentée pour accéder à la précédente <xref:System.Web.UI.WebControls.View> contrôle. Lorsque l’utilisateur clique sur le **suivant** bouton sur la page, le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété est incrémentée pour naviguer vers la prochaine <xref:System.Web.UI.WebControls.View> contrôle.  
  
> [!NOTE]
>  Les exemples de code suivant utilisent le modèle de code de fichier unique et peut ne pas fonctionneront correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.ActiveViewIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewIndex Example/cs/multiviewactiveviewindexcs.aspx#1)]
 [!code-aspx-vb[MultiView.ActiveViewIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewIndex Example/VB/multiviewactiveviewindexvb.aspx#1)]  
  
 L’exemple de code suivant montre comment créer un base <xref:System.Web.UI.WebControls.MultiView> contrôle qui contient trois <xref:System.Web.UI.WebControls.View> contrôles. La vue de l’utilisateur sélectionne dans la zone de liste est définie sur la vue active et affichée à l’utilisateur. Pour obtenir un exemple plus détaillé de la <xref:System.Web.UI.WebControls.MultiView> du contrôle, consultez les autres exemples de code fournis dans cette rubrique.  
  
 [!code-aspx-vb[MultiView Class Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView Class Example 2/VB/multiviewclass2vb.aspx#1)]  
  
 L’exemple de code suivant montre comment créer un <xref:System.Web.UI.WebControls.MultiView> contrôle qui contient trois <xref:System.Web.UI.WebControls.View> contrôles. A <xref:System.Web.UI.WebControls.View> contrôle n’a pas de toutes les propriétés de style. Par conséquent, chaque <xref:System.Web.UI.WebControls.View> contrôle contient un <xref:System.Web.UI.WebControls.Panel> contrôle pour permettre des styles à définir sur le <xref:System.Web.UI.WebControls.View> contrôle. La première fois que la page est chargée, la `DefaultView` est défini comme étant la vue active à l’aide de la <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> (méthode). Chaque <xref:System.Web.UI.WebControls.View> contrôle contient des boutons de liaison pour permettre à l’utilisateur accéder à différentes vues.  
  
 [!code-aspx-vb[MultiView Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView Class Example/VB/multiviewclass1vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.View" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultiView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour créer et initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.MultiView> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ActiveViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ActiveViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.MultiView.ActiveViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ActiveViewChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le contrôle <see cref="T:System.Web.UI.WebControls.View" /> actif d'un contrôle <see cref="T:System.Web.UI.WebControls.MultiView" /> change d'une publication à une autre sur le serveur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> événement est déclenché lorsque actif <xref:System.Web.UI.WebControls.View> contrôler dans un <xref:System.Web.UI.WebControls.MultiView> contrôle change entre des publications sur le serveur.  
  
 Pour plus d’informations sur la gestion des événements, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 L’exemple suivant montre comment spécifier et coder un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> événements d’un <xref:System.Web.UI.WebControls.MultiView> contrôle. Lorsque la vue active change, un message s’affiche dans un <xref:System.Web.UI.WebControls.Label> contrôle sur la page.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.ActiveViewChanged Event Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/cs/multiviewactiveviewchangedeventcs.aspx#1)]
 [!code-aspx-vb[MultiView.ActiveViewChanged Event Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/VB/multiviewactiveviewchangedeventvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActiveViewIndex">
      <MemberSignature Language="C#" Value="public virtual int ActiveViewIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveViewIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MultiView.ActiveViewIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ActiveViewIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ActiveViewIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'index du contrôle <see cref="T:System.Web.UI.WebControls.View" /> actif dans un contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <value>Index de base zéro du contrôle <see cref="T:System.Web.UI.WebControls.View" /> actif dans un contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />. La valeur par défaut est -1, indiquant qu'aucune vue n'est définie comme étant active.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété à définir un <xref:System.Web.UI.WebControls.View> contrôler dans un <xref:System.Web.UI.WebControls.MultiView> contrôle en tant que la vue active. Vous pouvez également utiliser cette propriété pour retourner l’index de la <xref:System.Web.UI.WebControls.View> contrôle qui est actuellement défini comme la vue active. L’index d’un <xref:System.Web.UI.WebControls.View> contrôle est déterminé par l’ordre dans lequel il est déclaré dans un <xref:System.Web.UI.WebControls.MultiView> contrôle. Par exemple, la première <xref:System.Web.UI.WebControls.View> contrôle déclaré dans un <xref:System.Web.UI.WebControls.MultiView> contrôle a un index de 0.  
  
 Seul <xref:System.Web.UI.WebControls.View> contrôle à la fois peut être défini comme étant actif dans un <xref:System.Web.UI.WebControls.MultiView> contrôle. Le <xref:System.Web.UI.WebControls.View> contrôle qui est défini pour le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété sera restituée au client. Si le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> est définie sur une <xref:System.Web.UI.WebControls.View> qui n’existe pas dans le <xref:System.Web.UI.WebControls.MultiView> (contrôle), un <xref:System.ArgumentOutOfRangeException> est déclenché au moment de l’exécution. Si la propriété est vide, le <xref:System.Web.UI.WebControls.MultiView> contrôle ne rend pas de contenu au client.  
  
 Vous pouvez définir le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété de manière déclarative au moment du développement ou par programme au moment de l’exécution. Définissant le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété de manière déclarative lorsque vous définissez le <xref:System.Web.UI.WebControls.MultiView> contrôler causes le <xref:System.Web.UI.WebControls.View> contrôle qui est défini comme étant la vue active à restituer dans la client la première fois le <xref:System.Web.UI.WebControls.MultiView> contrôle est appelée. Définition de la <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété par programme permet à l’application déterminer quelle <xref:System.Web.UI.WebControls.View> contrôle soit restitué au client au moment de l’exécution en fonction de critères tels que l’identité d’un utilisateur ou de leurs préférences.  
  
 Vous pouvez également utiliser le <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> et <xref:System.Web.UI.WebControls.MultiView.GetActiveView%2A> méthodes pour définir ou obtenir la vue active dans le <xref:System.Web.UI.WebControls.MultiView> contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.MultiView> contrôle pour créer une enquête de base. Chaque <xref:System.Web.UI.WebControls.View> contrôle est une question d’enquête distincte. Lorsque l’utilisateur clique sur le **précédent** bouton sur la page, le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété est décrémentée pour accéder à la précédente <xref:System.Web.UI.WebControls.View> contrôle. Lorsque l’utilisateur clique sur le **suivant** bouton sur la page, le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété est incrémentée pour naviguer vers la prochaine <xref:System.Web.UI.WebControls.View> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.ActiveViewIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewIndex Example/cs/multiviewactiveviewindexcs.aspx#1)]
 [!code-aspx-vb[MultiView.ActiveViewIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewIndex Example/VB/multiviewactiveviewindexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur affectée à l'index spécifié est inférieure à -1, ou supérieure ou égale au nombre d'éléments de la liste.</exception>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="M:System.Web.UI.WebControls.MultiView.SetActiveView(System.Web.UI.WebControls.View)" />
        <altmember cref="M:System.Web.UI.WebControls.MultiView.GetActiveView" />
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> qui représente l’élément analysé.</param>
        <summary>Avertit le contrôle <see cref="T:System.Web.UI.WebControls.MultiView" /> qu'un élément XML ou HTML a été analysé et ajoute l'élément à la collection <see cref="T:System.Web.UI.WebControls.ViewCollection" /> du contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode substitue l’implémentation de classe de base pour autoriser uniquement <xref:System.Web.UI.WebControls.View> contrôles à ajouter à la <xref:System.Web.UI.WebControls.ViewCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Le <see cref="T:System.Object" /> spécifié n'est pas un contrôle <see cref="T:System.Web.UI.WebControls.View" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un <see cref="T:System.Web.UI.ControlCollection" /> pour contenir les contrôles enfants du contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.ViewCollection" /> pour contenir les contrôles <see cref="T:System.Web.UI.WebControls.View" /> du contrôle <see cref="T:System.Web.UI.WebControls.MultiView" /> actuel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode substitue l’implémentation de base pour toujours retourner un <xref:System.Web.UI.WebControls.ViewCollection> pour contenir le <xref:System.Web.UI.WebControls.View> contrôles actuelles <xref:System.Web.UI.WebControls.MultiView> contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="T:System.Web.UI.WebControls.ViewCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MultiView.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si les thèmes s'appliquent au contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <value>
          <see langword="true" /> si des thèmes doivent être utilisés ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> propriété indique si les thèmes sont activés pour le <xref:System.Web.UI.WebControls.MultiView> contrôle. Le <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> propriété détermine également si les thèmes sont activés pour les contrôles contenus dans ses <xref:System.Web.UI.Control.Controls%2A> collection. Lorsque le <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> propriété est `true`, le répertoire de thème de l’application est recherché apparences de contrôle à appliquer. Si aucune apparence pour le contrôle particulier n’existe dans le répertoire du thème, aucune apparence n’est pas appliquée. Lorsque le <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> propriété est `false`, le répertoire de thème n’est pas examiné et le contenu de la <xref:System.Web.UI.Control.SkinID%2A> propriété ne sont pas utilisés.  
  
 Un contrôle peut substituer la <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> : valeur définie par son contrôle parent ou la page qui le contient. Par exemple, si un <xref:System.Web.UI.WebControls.MultiView> contrôle a <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> la valeur `false`, vous pouvez appliquer de manière sélective des thèmes à personne <xref:System.Web.UI.WebControls.View> contrôles contenus dans le <xref:System.Web.UI.WebControls.MultiView> contrôle en définissant le <xref:System.Web.UI.Control.EnableTheming%2A> propriété `true`sur les contrôles enfants individuels.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveView">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.View GetActiveView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.View GetActiveView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.GetActiveView" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActiveView () As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::View ^ GetActiveView();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.View</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne le contrôle <see cref="T:System.Web.UI.WebControls.View" /> actif actuel d'un contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <returns>Contrôle <see cref="T:System.Web.UI.WebControls.View" /> qui représente la vue active d'un contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour retourner le <xref:System.Web.UI.WebControls.View> contrôler dans un <xref:System.Web.UI.WebControls.MultiView> contrôle qui est actuellement défini comme la vue active. Cette méthode retourne un <xref:System.Web.UI.WebControls.View> contrôler et par conséquent peut être utilisé pour accéder aux propriétés de la vue active. Par exemple, `MultiView1.GetActiveView.ID` retourne la valeur de la <xref:System.Web.UI.Control.ID%2A> la propriété de la vue active actuelle dans MultiView1.  
  
 Vous pouvez également utiliser le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété à obtenir ou définir l’index de base zéro de la vue active actuelle dans un <xref:System.Web.UI.WebControls.MultiView> contrôle. Cette propriété est accessible de manière déclarative ou par programme.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer un <xref:System.Web.UI.WebControls.MultiView> contrôle qui contient trois <xref:System.Web.UI.WebControls.View> contrôles. Lorsque le <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> événement est déclenché, le <xref:System.Web.UI.WebControls.MultiView.GetActiveView%2A> méthode est utilisée pour retourner la vue active actuelle et l’afficher dans un <xref:System.Web.UI.WebControls.Label> contrôle sur la page.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.ActiveViewChanged Event Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/cs/multiviewactiveviewchangedeventcs.aspx#1)]
 [!code-aspx-vb[MultiView.ActiveViewChanged Event Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/VB/multiviewactiveviewchangedeventvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">La propriété <see cref="P:System.Web.UI.WebControls.MultiView.ActiveViewIndex" /> n'est pas affectée à un contrôle <see cref="T:System.Web.UI.WebControls.View" /> valide dans le contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="M:System.Web.UI.WebControls.MultiView.SetActiveView(System.Web.UI.WebControls.View)" />
        <altmember cref="P:System.Web.UI.WebControls.MultiView.ActiveViewIndex" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Object" /> qui représente l'état du contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</param>
        <summary>Charge l'état actuel du contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextViewCommandName">
      <MemberSignature Language="C#" Value="public static readonly string NextViewCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string NextViewCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.MultiView.NextViewCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NextViewCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ NextViewCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente le nom de commande associé au contrôle <see cref="T:System.Web.UI.WebControls.View" /> suivant à afficher dans un contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />. Ce champ est en lecture seule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> champ pour représenter le nom de la commande « NextView ».  
  
 Vous pouvez utiliser la valeur de ce champ pour tirer parti de la <xref:System.Web.UI.WebControls.MultiView> du contrôle mise à jour automatique de l’actif <xref:System.Web.UI.WebControls.View> contrôle. Par exemple, si un <xref:System.Web.UI.WebControls.View> contrôle contient un <xref:System.Web.UI.WebControls.Button> contrôle qui accède à la précédente <xref:System.Web.UI.WebControls.View>, vous pouvez définir le <xref:System.Web.UI.WebControls.Button.CommandName%2A> à la valeur de propriété le <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> champ, qui est « NextView ». Cela entraîne le <xref:System.Web.UI.WebControls.MultiView> contrôle décrémente automatiquement la valeur de la <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété lorsque le bouton est activé.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.MultiView> contrôle pour créer une enquête de base. Chaque <xref:System.Web.UI.WebControls.View> contrôle est une question d’enquête distincte. Le <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> et <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> champs sont utilisés pour fournir une navigation automatique entre précédent et suivant <xref:System.Web.UI.WebControls.View> contrôles de l’enquête.  
  
 [!code-aspx-csharp[MultiView.NextViewCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.NextViewCommandName/CS/multiview.nextviewcommandnamecs.aspx#1)]
 [!code-aspx-vb[MultiView.NextViewCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.NextViewCommandName/VB/multiview.nextviewcommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.PreviousViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName" />
      </Docs>
    </Member>
    <Member MemberName="OnActiveViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActiveViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActiveViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActiveViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActiveViewChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.MultiView.ActiveViewChanged" /> d'un contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> événement est déclenché lorsque actif <xref:System.Web.UI.WebControls.View> contrôler dans un <xref:System.Web.UI.WebControls.MultiView> contrôle change entre des publications sur le serveur, et vous pouvez fournir un gestionnaire personnalisé pour cet événement.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 La méthode <xref:System.Web.UI.WebControls.MultiView.OnActiveViewChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple suivant montre comment spécifier et coder un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> événements d’un <xref:System.Web.UI.WebControls.MultiView> contrôle. Lorsque la vue active change, un message s’affiche dans un <xref:System.Web.UI.WebControls.Label> contrôle sur la page.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.ActiveViewChanged Event Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/cs/multiviewactiveviewchangedeventcs.aspx#1)]
 [!code-aspx-vb[MultiView.ActiveViewChanged Event Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/VB/multiviewactiveviewchangedeventvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution de <see cref="M:System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.MultiView.ActiveViewChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Source de l'événement.</param>
        <param name="e">Objet <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Détermine si l'événement du contrôle <see cref="T:System.Web.UI.WebControls.MultiView" /> est passé dans la hiérarchie des contrôles serveur de l'interface utilisateur de la page.</summary>
        <returns>
          <see langword="true" /> si l'événement a été annulé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.MultiView> contrôle contient <xref:System.Web.UI.WebControls.View> les contrôles qui déclenchent des événements. Cette méthode substitue l’implémentation de base pour gérer la navigation entre <xref:System.Web.UI.WebControls.View> contrôles.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Le contrôle <see cref="T:System.Web.UI.WebControls.MultiView" /> ne peut pas trouver le <see cref="T:System.Web.UI.WebControls.View" /> spécifié dans la propriété <see cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" /> de <paramref name="e" />.</exception>
        <exception cref="T:System.FormatException">La propriété <see cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" /> de <paramref name="e" /> ne peut pas être analysée comme un entier.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lors de la notification par cette méthode, une <xref:System.Web.UI.WebControls.MultiView> contrôle doit effectuer les étapes d’initialisation qui sont nécessaires pour créer et configurer une instance. Dans cette étape du cycle de vie du contrôle serveur, l’état d’affichage doit encore être rempli. Vous ne peut pas accéder à un autre contrôle serveur lorsque cette méthode est appelée, même s’il s’agit d’un enfant ou un parent de ce contrôle. Autres contrôles serveur ne sont pas certains créé et prêt pour l’accès.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousViewCommandName">
      <MemberSignature Language="C#" Value="public static readonly string PreviousViewCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string PreviousViewCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.MultiView.PreviousViewCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviousViewCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ PreviousViewCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente le nom de commande associé au contrôle <see cref="T:System.Web.UI.WebControls.View" /> précédent à afficher dans un contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />. Ce champ est en lecture seule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> champ pour représenter le nom de la commande « PrevView ».  
  
 Vous pouvez utiliser la valeur de ce champ pour tirer parti de la <xref:System.Web.UI.WebControls.MultiView> du contrôle mise à jour automatique de l’actif <xref:System.Web.UI.WebControls.View> contrôle. Par exemple, si un <xref:System.Web.UI.WebControls.View> contrôle contient un <xref:System.Web.UI.WebControls.Button> contrôle qui accède à la prochaine <xref:System.Web.UI.WebControls.View>, vous pouvez définir le <xref:System.Web.UI.WebControls.Button.CommandName%2A> valeur à la propriété de la <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> champ, qui est « PrevView ». Cela entraîne le <xref:System.Web.UI.WebControls.MultiView> contrôler incrémenter automatiquement la valeur de la <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété lorsque le bouton est activé.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.MultiView> contrôle pour créer une enquête de base. Chaque <xref:System.Web.UI.WebControls.View> contrôle est une question d’enquête distincte. Le <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> et <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> champs sont utilisés pour fournir une navigation automatique entre précédent et suivant <xref:System.Web.UI.WebControls.View> contrôles de l’enquête.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.NextViewCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.NextViewCommandName/CS/multiview.nextviewcommandnamecs.aspx#1)]
 [!code-aspx-vb[MultiView.NextViewCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.NextViewCommandName/VB/multiview.nextviewcommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.NextViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName" />
      </Docs>
    </Member>
    <Member MemberName="RemovedControl">
      <MemberSignature Language="C#" Value="protected internal override void RemovedControl (System.Web.UI.Control ctl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RemovedControl(class System.Web.UI.Control ctl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.RemovedControl(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RemovedControl (ctl As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RemovedControl(System::Web::UI::Control ^ ctl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="ctl">Contrôle <see cref="T:System.Web.UI.WebControls.View" /> supprimé.</param>
        <summary>Appelée après la suppression d'un contrôle <see cref="T:System.Web.UI.WebControls.View" /> de la collection <see cref="P:System.Web.UI.Control.Controls" /> d'un contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Control.RemovedControl%2A> méthode est appelée immédiatement après un <xref:System.Web.UI.WebControls.View> contrôle est supprimé de la <xref:System.Web.UI.Control.Controls%2A> collection d’un <xref:System.Web.UI.WebControls.MultiView> contrôle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> qui représente le flux de sortie pour le rendu du contenu HTML sur le client.</param>
        <summary>Écrit le contenu du contrôle <see cref="T:System.Web.UI.WebControls.MultiView" /> dans l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> spécifié pour qu'il s'affiche sur le client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.MultiView.Render%2A> méthode est utilisée principalement par les développeurs de contrôles lors de la dérivation d’une classe personnalisée à partir de la <xref:System.Web.UI.WebControls.MultiView> contrôle.  
  
 Le <xref:System.Web.UI.WebControls.MultiView.Render%2A> méthode écrit le contenu affiché de la vue active le client à l’aide de l’élément <xref:System.Web.UI.HtmlTextWriter>. Vous pouvez définir la vue active dans un <xref:System.Web.UI.WebControls.MultiView> contrôler à l’aide du <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> méthode ou le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété. Vous pouvez déterminer lequel de la <xref:System.Web.UI.WebControls.View> des contrôles dans le <xref:System.Web.UI.WebControls.MultiView.Views%2A> collection est la vue active, si elle existe, à l’aide de la <xref:System.Web.UI.WebControls.MultiView.GetActiveView%2A> (méthode) ou le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété.  
  
 Si une vue active est définie pour le <xref:System.Web.UI.WebControls.MultiView> contrôler, actif <xref:System.Web.UI.WebControls.View> contrôle est utilisé pour restituer le contenu de cet affichage et ses contrôles enfants. Si une vue active n’est pas définie pour le <xref:System.Web.UI.WebControls.MultiView> contrôle, aucun contenu n’est affiché à la <xref:System.Web.UI.HtmlTextWriter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre l'état actuel du contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <returns>
          <see cref="T:System.Object" /> qui représente l'état du contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />. Si aucun état n'est associé au contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />, cette méthode retourne la valeur <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetActiveView">
      <MemberSignature Language="C#" Value="public void SetActiveView (System.Web.UI.WebControls.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetActiveView(class System.Web.UI.WebControls.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.SetActiveView(System.Web.UI.WebControls.View)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetActiveView(System::Web::UI::WebControls::View ^ view);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Web.UI.WebControls.View" />
      </Parameters>
      <Docs>
        <param name="view">Contrôle <see cref="T:System.Web.UI.WebControls.View" /> à définir comme étant la vue active d'un contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</param>
        <summary>Affecte le contrôle <see cref="T:System.Web.UI.WebControls.View" /> spécifié à la vue active dans un contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour définir un <xref:System.Web.UI.WebControls.View> contrôler dans un <xref:System.Web.UI.WebControls.MultiView> contrôle en tant que la vue active. Seul <xref:System.Web.UI.WebControls.View> contrôle à la fois peut être défini comme étant actif dans un <xref:System.Web.UI.WebControls.MultiView> contrôle. Le <xref:System.Web.UI.WebControls.View> contrôle qui est défini comme la vue active est restituée au client. Si un <xref:System.Web.UI.WebControls.View> contrôle qui n’existe pas dans le <xref:System.Web.UI.WebControls.MultiView> contrôle est défini comme étant actif, une exception est levée au moment de l’exécution. Si aucun <xref:System.Web.UI.WebControls.View> contrôle est défini comme étant la vue active, le <xref:System.Web.UI.WebControls.MultiView> contrôle ne rend pas de contenu au client.  
  
 À l’aide de la <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> méthode pour définir la vue active par programme permet à l’application déterminer quelle <xref:System.Web.UI.WebControls.View> contrôle soit restitué au client au moment de l’exécution en fonction de critères tels que l’identité et les préférences d’un utilisateur.  
  
 Vous pouvez également utiliser le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propriété à obtenir ou définir l’index de base zéro de la vue active actuelle dans un <xref:System.Web.UI.WebControls.MultiView> contrôle. Cette propriété est accessible de manière déclarative ou par programme.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer un <xref:System.Web.UI.WebControls.MultiView> contrôle qui contient trois <xref:System.Web.UI.WebControls.View> contrôles. La première fois que la page est chargée, la `DefaultView` est défini comme étant la vue active à l’aide de la <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> (méthode). Chaque <xref:System.Web.UI.WebControls.View> contrôle contient des boutons de liaison pour permettre à l’utilisateur accéder à différentes vues.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-vb[MultiView Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView Class Example/VB/multiviewclass1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">La valeur de paramètre <paramref name="view" /> spécifiée n'a pas été contenue dans le contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.MultiView.ActiveViewIndex" />
        <altmember cref="M:System.Web.UI.WebControls.MultiView.GetActiveView" />
        <altmember cref="T:System.Web.UI.WebControls.View" />
      </Docs>
    </Member>
    <Member MemberName="SwitchViewByIDCommandName">
      <MemberSignature Language="C#" Value="public static readonly string SwitchViewByIDCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SwitchViewByIDCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SwitchViewByIDCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ SwitchViewByIDCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente le nom de commande associé à la modification du contrôle <see cref="T:System.Web.UI.WebControls.View" /> actif dans un contrôle <see cref="T:System.Web.UI.WebControls.MultiView" /> en fonction d'un ID <see cref="T:System.Web.UI.WebControls.View" /> spécifié. Ce champ est en lecture seule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName> champ pour représenter le nom de la commande « SwitchViewByID ».  
  
 Vous pouvez utiliser la valeur de ce champ pour tirer parti de la <xref:System.Web.UI.WebControls.MultiView> du contrôle mise à jour automatique de l’actif <xref:System.Web.UI.WebControls.View> contrôle. Par exemple, si un <xref:System.Web.UI.WebControls.View> contrôle contient un <xref:System.Web.UI.WebControls.Button> contrôle qui accède à la première <xref:System.Web.UI.WebControls.View> lorsque vous cliquez dessus, vous pouvez définir le <xref:System.Web.UI.WebControls.Button.CommandName%2A> valeur à la propriété de la <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName> champ, qui est « SwitchViewByID ». Définir le <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> à l’ID de la première propriété <xref:System.Web.UI.WebControls.View> dans le <xref:System.Web.UI.WebControls.MultiView> contrôle, tels que « Page 1 ». Cela entraîne le <xref:System.Web.UI.WebControls.MultiView> contrôle pour définir automatiquement la page « 1 » active <xref:System.Web.UI.WebControls.View> lorsque le bouton est activé.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.MultiView> contrôle pour créer une enquête de base. Chaque <xref:System.Web.UI.WebControls.View> contrôle est une question d’enquête distincte. Le <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> et <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> champs sont utilisés pour fournir une navigation automatique entre précédent et suivant <xref:System.Web.UI.WebControls.View> contrôles de l’enquête. Si l’utilisateur clique sur le **repasser une enquête** bouton dans le dernier <xref:System.Web.UI.WebControls.View> de l’enquête, les <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName> champ est utilisé avec un argument de commande de page « 1 » pour rediriger l’utilisateur vers le premier <xref:System.Web.UI.WebControls.View> de l’enquête.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.NextViewCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.NextViewCommandName/CS/multiview.nextviewcommandnamecs.aspx#1)]
 [!code-aspx-vb[MultiView.NextViewCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.NextViewCommandName/VB/multiview.nextviewcommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.PreviousViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.NextViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName" />
      </Docs>
    </Member>
    <Member MemberName="SwitchViewByIndexCommandName">
      <MemberSignature Language="C#" Value="public static readonly string SwitchViewByIndexCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SwitchViewByIndexCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SwitchViewByIndexCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ SwitchViewByIndexCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente le nom de commande associé à la modification du contrôle <see cref="T:System.Web.UI.WebControls.View" /> actif dans un contrôle <see cref="T:System.Web.UI.WebControls.MultiView" /> en fonction d'un index <see cref="T:System.Web.UI.WebControls.View" /> spécifié. Ce champ est en lecture seule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName> champ pour représenter le nom de la commande « SwitchViewByIndex ».  
  
 Vous pouvez utiliser la valeur de ce champ pour tirer parti de la <xref:System.Web.UI.WebControls.MultiView> du contrôle mise à jour automatique de l’actif <xref:System.Web.UI.WebControls.View> contrôle. Par exemple, si un <xref:System.Web.UI.WebControls.View> contrôle contient un <xref:System.Web.UI.WebControls.Button> contrôle qui accède à la première <xref:System.Web.UI.WebControls.View> lorsque vous cliquez dessus, vous pouvez définir le <xref:System.Web.UI.WebControls.Button.CommandName%2A> valeur à la propriété de la <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName> champ, qui est « SwitchViewByIndex ». Définir le <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> à l’index de la première propriété <xref:System.Web.UI.WebControls.View> dans le <xref:System.Web.UI.WebControls.MultiView> contrôle, qui est 0. Cela entraîne le <xref:System.Web.UI.WebControls.MultiView> contrôle pour définir automatiquement le <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> 0 en cas de clic sur le bouton à la propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.MultiView> contrôle pour créer une enquête de base. Chaque <xref:System.Web.UI.WebControls.View> contrôle est une question d’enquête distincte. Le <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> et <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> champs sont utilisés pour fournir une navigation automatique entre précédent et suivant <xref:System.Web.UI.WebControls.View> contrôles de l’enquête. Si l’utilisateur clique sur le **repasser une enquête** bouton dans le dernier <xref:System.Web.UI.WebControls.View> de l’enquête, les <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName> champ est utilisé avec un argument de commande de 0 pour rediriger l’utilisateur vers le premier <xref:System.Web.UI.WebControls.View> de l’enquête.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.SwitchViewByIndexCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.SwitchViewByIndexCommandName/CS/multiview.switchviewbyindexcommandnamecs.aspx#1)]
 [!code-aspx-vb[MultiView.SwitchViewByIndexCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.SwitchViewByIndexCommandName/VB/multiview.switchviewbyindexcommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.PreviousViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.NextViewCommandName" />
      </Docs>
    </Member>
    <Member MemberName="Views">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ViewCollection Views { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ViewCollection Views" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MultiView.Views" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Views As ViewCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ViewCollection ^ Views { System::Web::UI::WebControls::ViewCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ViewCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de contrôles <see cref="T:System.Web.UI.WebControls.View" /> dans le contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ViewCollection" /> qui représente une collection de contrôles <see cref="T:System.Web.UI.WebControls.View" /> dans un contrôle <see cref="T:System.Web.UI.WebControls.MultiView" />. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété permet de gérer par programmation la <xref:System.Web.UI.WebControls.View> des contrôles dans un <xref:System.Web.UI.WebControls.MultiView> contrôle.  
  
   
  
## Examples  
 L’exemple suivant montre comment ajouter par programmation <xref:System.Web.UI.WebControls.View> des contrôles à un <xref:System.Web.UI.WebControls.MultiView> contrôle. Après chaque <xref:System.Web.UI.WebControls.View> contrôle est créé, le `MultiView.Views.Add()` syntaxe permet d’ajouter le <xref:System.Web.UI.WebControls.View> le contrôle à la <xref:System.Web.UI.WebControls.ViewCollection> collection de la <xref:System.Web.UI.WebControls.MultiView> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-vb[MultiView.Views Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.Views Example/VB/multiviewviewsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ViewCollection" />
      </Docs>
    </Member>
  </Members>
</Type>