<Type Name="ObjectDataSourceMethodEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3c93b0ac3706db712b239f358c2ee8cb15e88888" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36580193" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceMethodEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceMethodEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceMethodEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceMethodEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceMethodEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour les événements <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" /> et <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" /> du contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> classe est utilisée dans les <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>, et <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> méthodes pour accéder aux paramètres d’entrée qui sont passés à la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>et <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>méthodes de la <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle. Ces paramètres sont accessibles à l’aide de la <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propriété. En ajoutant un délégué pour gérer les <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, ou <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> événement, vous pouvez examiner et manipuler les valeurs des paramètres et effectuer tout prétraitement supplémentaire est requise. Les modifications apportées aux paramètres dans ce dictionnaire affectera quelle surcharge de méthode est appelée pour l’opération. Lorsque le <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriété de la <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle est défini, vous pouvez modifier uniquement les propriétés d’objet de données pour les éléments de ce dictionnaire ; vous ne pouvez pas ajouter ou supprimer des paramètres. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle expose de nombreux événements que vous pouvez gérer pour travailler avec l’objet métier sous-jacent à divers stades de son cycle de vie. Le tableau suivant répertorie les événements et associés <xref:System.EventArgs> classes et délégués de gestionnaires d’événements.  
  
|événement|Classe `EventArgs`|Délégué EventHandler|  
|-----------|-----------------------|---------------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> Se produit immédiatement avant la création de l’instance de l’objet métier.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> Se produit immédiatement après la création de l’instance de l’objet métier.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> se produit avant la récupération des données.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> et <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.<br /><br /> Se produit avant l’exécution d’un insert, update ou opération de suppression.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.<br /><br /> Se produit une fois que les données sont récupérées.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> et <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> Se produit après l’insertion, mise à jour ou opération de suppression est terminée.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> Se produit avant la destruction d’un objet métier.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 Cette section contient deux exemples de code. Le premier exemple de code montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour insérer des données. Le deuxième exemple de code fournit un exemple d’objet métier de couche intermédiaire qui est utilisé par le premier exemple de code.  
  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour insérer des données. Le <xref:System.Web.UI.WebControls.DetailsView> affiche initialement un nouvel `NorthwindEmployee` enregistrements, ainsi que générée automatiquement **insérer** bouton. Une fois que vous entrez des données dans les champs de la <xref:System.Web.UI.WebControls.DetailsView> contrôler, cliquez sur le **insérer** bouton et le <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriété identifiera la méthode qui exécute la <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> action.  
  
 Dans cet exemple, le `UpdateEmployeeInfo` méthode est utilisée pour effectuer une insertion ; Toutefois, il requiert un `NorthwindEmployee` paramètre pour insérer les données. Pour cette raison, la collection de chaînes qui le <xref:System.Web.UI.WebControls.DetailsView> contrôle passe automatiquement n’est pas suffisant. Le `NorthwindEmployeeInserting` délégué est un <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> objet qui gère la <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> événement et vous permet de manipuler les paramètres d’entrée avant la <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> opération continue. Étant donné que la `UpdateEmployeeInfo` méthode requiert un `NorthwindEmployee` de l’objet en tant que paramètre, un est créé à l’aide de la collection de chaînes et est ajouté à la <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 L’exemple de code suivant fournit un exemple d’objet métier de couche intermédiaire qui utilise de l’exemple de code précédent. La liste suivante décrit les deux classes principales qui sont définies dans l’exemple de code :  
  
-   Le `EmployeeLogic` (classe), qui est une classe sans état qui encapsule la logique métier.  
  
-   Le `NorthwindEmployee` (classe), qui est une classe de modèle qui contient uniquement les fonctionnalités de base requises pour charger et rendre persistantes des données de la couche données.  
  
 En outre, un `NorthwindDataException` classe est fournie pour des raisons pratiques.  
  
 Cet ensemble d’exemples de classes utilise la base de données Northwind Traders, qui est une base de données exemple disponible avec Microsoft SQL Server et Microsoft Access. Pour obtenir un exemple complet, utilisez ces classes en les plaçant dans le répertoire App_Code sous la racine de l’application ou en compilant et en plaçant la DLL résultante dans le répertoire Bin. Le `UpdateEmployeeInfo` méthode n’est pas complètement implémentée, afin de vous ne serez pas insérer des données dans la base de données Northwind Traders, lorsque vous testez cet exemple.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceMethodEventArgs (System.Collections.Specialized.IOrderedDictionary inputParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.IOrderedDictionary inputParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.#ctor(System.Collections.Specialized.IOrderedDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inputParameters As IOrderedDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceMethodEventArgs(System::Collections::Specialized::IOrderedDictionary ^ inputParameters);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs : System.Collections.Specialized.IOrderedDictionary -&gt; System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs inputParameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputParameters" Type="System.Collections.Specialized.IOrderedDictionary" />
      </Parameters>
      <Docs>
        <param name="inputParameters">
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> d'objets <see cref="T:System.Web.UI.WebControls.Parameter" /> qui représentent les noms des paramètres de la méthode de l'objet métier et leurs valeurs associées.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" /> à l'aide de la collection de paramètres d'entrée spécifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary InputParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary InputParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputParameters As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ InputParameters { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputParameters : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection qui contient les paramètres de la méthode de l'objet métier et leurs valeurs.</summary>
        <value>
          <see cref="T:System.Collections.IDictionary" /> des paires nom/valeur qui représentent les paramètres de la méthode de l'objet métier et leurs valeurs correspondantes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Paramètres peuvent être passés à la méthode d’objet métier par référence ou par valeur. Si vous utilisez un <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> objet pour gérer les <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>, ou <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> des événements, vous pouvez accéder et manipuler ces paramètres à l’aide de la <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propriété. Les modifications apportées aux paramètres dans ce dictionnaire affectera quelle surcharge de méthode est appelée pour l’opération.  Lorsque le <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriété de la <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle est défini, vous pouvez modifier uniquement les propriétés d’objet données pour les éléments de ce dictionnaire ; vous ne pouvez pas ajouter ou supprimer des paramètres. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>.  
  
 Les paramètres qui sont passés par référence sont retournés dans le <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> propriété de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objet.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.DropDownList> (contrôle), <xref:System.Web.UI.WebControls.TextBox> contrôles et plusieurs <xref:System.Web.UI.WebControls.ObjectDataSource> contrôles pour mettre à jour des données. Le <xref:System.Web.UI.WebControls.DropDownList> affiche le nom d’un employé de Northwind, tandis que le <xref:System.Web.UI.WebControls.TextBox> contrôles sont utilisés pour entrer et mettre à jour les informations d’adresse. Étant donné que la <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> propriété contient un <xref:System.Web.UI.WebControls.ControlParameter> objet qui est lié à la valeur sélectionnée de la <xref:System.Web.UI.WebControls.DropDownList> contrôler, le bouton qui déclenche le <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> (méthode) est activée uniquement après sélection d’un employé.  
  
 Dans cet exemple, le `NorthwindEmployeeUpdating` méthode est appelée avant la <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> méthode pour ajouter les paramètres et valeurs corrects pour le <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection. Vous pouvez ajouter les paramètres et valeurs dynamiquement, comme illustré, ou de façon déclarative.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>