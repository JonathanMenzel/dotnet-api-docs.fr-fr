<Type Name="ButtonColumn" FullName="System.Web.UI.WebControls.ButtonColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e590333490ec58890a122c520df4253fe29bae25" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51891956" /></Metadata><TypeSignature Language="C#" Value="public class ButtonColumn : System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonColumn extends System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonColumn&#xA;Inherits DataGridColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonColumn : System::Web::UI::WebControls::DataGridColumn" />
  <TypeSignature Language="F#" Value="type ButtonColumn = class&#xA;    inherit DataGridColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataGridColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Type de colonne pour le contrôle <see cref="T:System.Web.UI.WebControls.DataGrid" /> qui contient un bouton défini par l’utilisateur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.ButtonColumn> classe dans un <xref:System.Web.UI.WebControls.DataGrid> contrôle pour créer un bouton qui correspond à chaque ligne dans le <xref:System.Web.UI.WebControls.DataGrid> contrôle. Spécifiez la légende qui est affichée dans les boutons en définissant le <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> propriété. Si vous définissez la <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> propriété, tous les boutons dans la <xref:System.Web.UI.WebControls.ButtonColumn> objet partagent la même légende. Vous pouvez également lier le <xref:System.Web.UI.WebControls.ButtonColumn> boutons à un champ dans une source de données. Cela vous permet d’afficher différentes légendes pour chaque bouton. Les valeurs dans le champ spécifié sont utilisées pour la légende de texte. Définir le <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> propriété à lier le <xref:System.Web.UI.WebControls.ButtonColumn> à un champ dans une source de données.  
  
 Vous pouvez mettre en forme les légendes affichées dans les boutons en définissant le <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> propriété avec une chaîne mise en forme.  
  
 En cliquant sur les boutons dans la <xref:System.Web.UI.WebControls.ButtonColumn> déclenche le <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> événement. Vous pouvez contrôler par programme l’action effectuée lorsqu’un clic sur le bouton en fournissant un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> événement.  
  
 Par défaut, la validation de la page n’est pas effectuée quand un bouton dans le <xref:System.Web.UI.WebControls.ButtonColumn> est cliqué. Validation de la page détermine si les contrôles d’entrée qui sont associés à une validation de contrôlent sur la page que passent toutes les règles de validation qui sont spécifiées par le contrôle de validation. Pour effectuer la validation de la page lorsque l’utilisateur clique sur un bouton, définissez la <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> propriété `true`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser <xref:System.Web.UI.WebControls.ButtonColumn> classe dans un <xref:System.Web.UI.WebControls.DataGrid> contrôle à créer **ajouter** boutons.  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
    <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
    <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
    <altmember cref="T:System.Web.UI.WebControls.Button" />
    <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.ButtonColumn" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.ButtonColumn.%23ctor%2A> constructeur pour créer et initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.ButtonColumn> classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer et initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.ButtonColumn> classe et l’ajouter à la <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> collection.  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonColumnType ButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.ButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ButtonType As ButtonColumnType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonColumnType ButtonType { System::Web::UI::WebControls::ButtonColumnType get(); void set(System::Web::UI::WebControls::ButtonColumnType value); };" />
      <MemberSignature Language="F#" Value="member this.ButtonType : System.Web.UI.WebControls.ButtonColumnType with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.ButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The type of button contained within the column.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonColumnType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le type de bouton à afficher dans l'objet <see cref="T:System.Web.UI.WebControls.ButtonColumn" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.ButtonColumnType" />. La valeur par défaut est <see langword="LinkButton" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.ButtonColumn.ButtonType%2A> propriété pour spécifier si les boutons dans la <xref:System.Web.UI.WebControls.ButtonColumn> objet sont affichés sous forme de lien ou boutons de commande. Le tableau suivant répertorie les paramètres possibles.  
  
|Type de bouton|Afficher|  
|-----------------|-------------|  
|<xref:System.Web.UI.WebControls.ButtonColumnType.LinkButton>|Un lien.|  
|<xref:System.Web.UI.WebControls.ButtonColumnType.PushButton>|Contrôle bouton.|  
  
 En cliquant sur les boutons dans la <xref:System.Web.UI.WebControls.ButtonColumn> déclenche le <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> événement. Vous pouvez contrôler par programme l’action effectuée lorsqu’un clic sur le bouton en fournissant un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> événement.  
  
 La valeur de cette propriété est stockée dans l’état d’affichage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.ButtonColumn.ButtonType%2A> propriété pour spécifier que les boutons dans la <xref:System.Web.UI.WebControls.ButtonColumn> objet sont affichés sous forme de boutons de commande.  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le type de colonne spécifié n'est pas l'une des valeurs <see cref="T:System.Web.UI.WebControls.ButtonColumnType" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ButtonColumnType" />
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si une validation est effectuée suite à un clic sur le bouton dans l'objet <see cref="T:System.Web.UI.WebControls.ButtonColumn" />.</summary>
        <value><see langword="true" /> si la validation est effectuée lors d'un clic sur le bouton dans <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, la validation de la page n’est pas effectuée quand un bouton dans le <xref:System.Web.UI.WebControls.ButtonColumn> clic sur l’objet. Validation de la page détermine si les contrôles d’entrée qui sont associés à une validation de contrôlent sur la page que passent toutes les règles de validation qui sont spécifiées par le contrôle de validation. Pour effectuer la validation de la page quand un bouton dans le <xref:System.Web.UI.WebControls.ButtonColumn> est activé, définissez la <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> propriété `true`.  
  
 Lorsque la valeur de la <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> propriété est `true`, vous pouvez également utiliser le <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> propriété pour spécifier le nom du groupe de validation pour lequel le <xref:System.Web.UI.WebControls.ButtonColumn> provoque la validation.  
  
 La valeur de cette propriété est stockée dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The command associated with the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne qui représente la commande à effectuer lorsqu'un clic a été effectué sur le bouton dans l'objet <see cref="T:System.Web.UI.WebControls.ButtonColumn" />.</summary>
        <value>Chaîne qui représente la commande à effectuer lorsqu'un clic a été effectué sur le bouton dans <see cref="T:System.Web.UI.WebControls.ButtonColumn" />. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> propriété à associer un nom de commande, tel que `Add` ou `Remove`, avec un bouton. Vous pouvez définir le <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> propriété à n’importe quelle chaîne qui identifie l’action à effectuer lorsqu’un bouton dans le <xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=nameWithType> clic sur l’objet. Ensuite, vous pouvez déterminer par programme le nom de commande dans le Gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> événements et effectuer les actions appropriées.  
  
 La valeur de cette propriété est stockée dans l’état d’affichage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> propriété à associer un nom de commande à un bouton. Ensuite, le nom de commande du bouton concerné est déterminé par programmation dans le Gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> événement et l’action appropriée est effectuée.  
  
 [!code-aspx-csharp[ButtonColumnCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnCommandName/CS/ButtonColumnCommandNameCS.aspx#1)]
 [!code-aspx-vb[ButtonColumnCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnCommandName/VB/ButtonColumnCommandNameVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The field bound to the text property of the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de champ issu d'une source de données à lier à l'objet <see cref="T:System.Web.UI.WebControls.ButtonColumn" />.</summary>
        <value>Nom du champ à lier à la colonne <see cref="T:System.Web.UI.WebControls.ButtonColumn" />. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> propriété pour spécifier le nom du champ à partir de la source de données à lier à la <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> propriété des boutons dans la <xref:System.Web.UI.WebControls.ButtonColumn> objet.  
  
 Liaison de la colonne à un champ au lieu de définir directement la <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> propriété vous permet d’afficher différentes légendes pour les boutons dans la <xref:System.Web.UI.WebControls.ButtonColumn> en utilisant les valeurs dans le champ spécifié.  
  
 La valeur de cette propriété est stockée dans l’état d’affichage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> propriété à lier le <xref:System.Web.UI.WebControls.ButtonColumn> objet à un champ dans une source de données.  
  
 [!code-aspx-csharp[ButtonColumnDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnDataTextField/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ButtonColumnDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnDataTextField/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The formatting applied to the value bound to the Text property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne qui spécifie le format d'affichage de la légende dans chaque bouton.</summary>
        <value>Chaîne qui spécifie le format d'affichage de la légende dans chaque bouton. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> propriété afin de fournir un format d’affichage personnalisé pour la légende des boutons dans la <xref:System.Web.UI.WebControls.ButtonColumn> objet.  
  
 La chaîne de format de données se compose de deux parties, séparées par un signe deux-points, sous la forme `{A:Bxx}`. Par exemple, la chaîne mise en forme `{0:F2}` met en forme la cellule pour afficher un nombre à deux décimales à virgule fixe.  
  
> [!NOTE]
>  La chaîne entière doit être placée entre accolades pour indiquer qu’il s’agit d’une chaîne de format et pas une chaîne littérale. N’importe quel texte en dehors des accolades est affichée comme texte littéral.  
  
 La valeur avant le signe deux-points (`A` dans l’exemple général) spécifie l’index de paramètre dans une liste de paramètres de base zéro.  
  
> [!NOTE]
>  Cette valeur peut être définie uniquement sur 0, étant donné qu’une seule valeur dans chaque cellule.  
  
 Le caractère situé après le signe deux-points (`B` dans l’exemple général) spécifie le format pour l’affichage de la valeur. Le tableau suivant répertorie les formats courants.  
  
|Caractère de format|Affiche les valeurs numériques dans|  
|----------------------|--------------------------------|  
|`C`|Format monétaire.|  
|`D`|Format décimal.|  
|`E`|Format scientifique (exponentiel) de l’environnement.|  
|`F`|Format fixe.|  
|`G`|Format général.|  
|`N`|Format de nombre.|  
|`X`|Format hexadécimal.|  
  
> [!NOTE]
>  Le caractère de format n’est pas la casse, à l’exception de `X`, qui affiche les caractères hexadécimaux dans le cas spécifié.  
  
 La valeur après le caractère de format (`xx` dans l’exemple général) spécifie le nombre de chiffres significatifs ou de décimales à afficher.  
  
 La valeur de cette propriété est stockée dans l’état d’affichage.  
  
 Pour plus d’informations sur la mise en forme des chaînes, consultez [Mise en forme des types](~/docs/standard/base-types/formatting-types.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> propriété pour afficher la légende de chaque bouton dans le <xref:System.Web.UI.WebControls.ButtonColumn> objet au format monétaire.  
  
 [!code-aspx-csharp[ButtonColumnDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnDataTextField/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ButtonColumnDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnDataTextField/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Mettre en forme des types dans .NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataTextValue : obj -&gt; string&#xA;override this.FormatDataTextValue : obj -&gt; string" Usage="buttonColumn.FormatDataTextValue dataTextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">Valeur à mettre en forme.</param>
        <summary>Convertit la valeur spécifiée au format indiqué par la propriété <see cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />.</summary>
        <returns><paramref name="dataTextValue" /> converti au format indiqué par <see cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue%2A> méthode pour convertir la valeur spécifiée au format indiqué par la <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> propriété.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue%2A> méthode retourne la chaîne équivalente de la valeur, si le <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> propriété n’est pas définie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="buttonColumn.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rétablit l'objet <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> à son état initial.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.ButtonColumn.Initialize%2A> méthode pour réinitialiser le <xref:System.Web.UI.WebControls.ButtonColumn> objet à son état initial.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.TableCell cell, int32 columnIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As TableCell, columnIndex As Integer, itemType As ListItemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::TableCell ^ cell, int columnIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.TableCell * int * System.Web.UI.WebControls.ListItemType -&gt; unit" Usage="buttonColumn.InitializeCell (cell, columnIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="cell"><see cref="T:System.Web.UI.WebControls.TableCell" /> représentant la cellule à réinitialiser.</param>
        <param name="columnIndex">Numéro de la colonne dans laquelle la cellule se trouve.</param>
        <param name="itemType">Une des valeurs de <see cref="T:System.Web.UI.WebControls.ListItemType" />.</param>
        <summary>Rétablit l'état initial d'une cellule figurant dans l'objet <see cref="T:System.Web.UI.WebControls.ButtonColumn" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ButtonColumn.InitializeCell%2A> méthode réinitialise la cellule spécifiée dans le <xref:System.Web.UI.WebControls.ButtonColumn> objet à son état initial.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ButtonColumn.Initialize" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The text used for the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la légende affichée dans les boutons de l'objet <see cref="T:System.Web.UI.WebControls.ButtonColumn" />.</summary>
        <value>Légende affichée dans les boutons de <see cref="T:System.Web.UI.WebControls.ButtonColumn" />. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> propriété pour spécifier ou déterminer la légende qui est affichée dans les boutons de la <xref:System.Web.UI.WebControls.ButtonColumn> objet.  
  
> [!NOTE]
>  Si vous définissez la <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> propriété, tous les boutons dans la <xref:System.Web.UI.WebControls.ButtonColumn> partagent la même légende.  
  
 Vous pouvez également lier le <xref:System.Web.UI.WebControls.ButtonColumn> à un champ dans une source de données. Cela vous permet d’afficher différentes légendes pour les boutons dans la colonne en utilisant les valeurs dans le champ spécifié. Définir le <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> propriété à lier le <xref:System.Web.UI.WebControls.ButtonColumn> à un champ dans une source de données.  
  
 La valeur de cette propriété est stockée dans l’état d’affichage.  
  
 La valeur de cette propriété, quand elle est définie, peut être enregistrée automatiquement dans un fichier de ressources à l’aide d’un outil de concepteur. Pour plus d’informations, consultez <xref:System.ComponentModel.LocalizableAttribute> et [globalisation et localisation](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> propriété pour spécifier la légende pour les boutons dans la <xref:System.Web.UI.WebControls.ButtonColumn> objet.  
  
 [!code-aspx-csharp[Classic ButtonColumn.ButtonType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ButtonColumn.ButtonType Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ButtonColumn.ButtonType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ButtonColumn.ButtonType Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextField" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le groupe de contrôles de validation pour lequel l'objet <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> provoque la validation lors de la publication sur le serveur.</summary>
        <value>Groupe de validation de contrôles pour lequel le contrôle l'objet <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> provoque la validation lors de la publication sur le serveur. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Groupes de contrôle permettent d’affecter des contrôles de validation sur une page à une catégorie spécifique. Chaque groupe de validation peut être validé indépendamment des autres groupes de validation de la page. Utilisez le <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> propriété pour spécifier le nom du groupe de validation pour lequel le <xref:System.Web.UI.WebControls.ButtonColumn> objet provoque la validation lors de la publication sur le serveur.  
  
 Le <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> propriété a un effet uniquement lorsque la valeur de la <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> propriété est définie sur `true`. Lorsque vous spécifiez une valeur pour le <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> propriété, seuls les contrôles de validation qui font partie du groupe spécifié sont validés lorsque le <xref:System.Web.UI.WebControls.ButtonColumn> effectue une publication sur le serveur. Si vous ne spécifiez pas une valeur pour le <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> propriété et la <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> propriété est définie sur `true`, tous les contrôles de validation sur la page qui ne sont pas affectés à un groupe de validation sont validées lorsque le <xref:System.Web.UI.WebControls.ButtonColumn> effectue une publication sur le serveur.  
  
 La valeur de cette propriété est stockée dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>