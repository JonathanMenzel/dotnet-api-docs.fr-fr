<Type Name="ServerValidateEventArgs" FullName="System.Web.UI.WebControls.ServerValidateEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed094b8adda91d76632871b6c7ea6b445da8de74" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39760797" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServerValidateEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServerValidateEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ServerValidateEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ServerValidateEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServerValidateEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ServerValidateEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour l'événement <see cref="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" /> du contrôle <see cref="T:System.Web.UI.WebControls.CustomValidator" />. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.ServerValidateEventArgs> est passé à la <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> Gestionnaire d’événements pour fournir des données d’événement au gestionnaire. Le <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> événement est déclenché lorsque la validation est effectuée sur le serveur. Cela vous permet d’effectuer une routine de validation personnalisée côté serveur sur la valeur d’un contrôle d’entrée (avec un <xref:System.Web.UI.WebControls.CustomValidator> contrôle associé) dans le Gestionnaire d’événements.  
  
 La valeur à valider est déterminée à l’aide de la <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> propriété. Une fois que votre code a déterminé si la valeur est valide, stocker les résultats de la validation dans le <xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A> propriété.  
  
 Pour obtenir la liste des valeurs initiales des propriétés d’une instance de <xref:System.Web.UI.WebControls.ServerValidateEventArgs>, consultez le <xref:System.Web.UI.WebControls.ServerValidateEventArgs.%23ctor%2A> constructeur.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser un <xref:System.Web.UI.WebControls.ServerValidateEventArgs> à passer des données d’événement à un gestionnaire d’événements personnalisé pour le <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> événement. Notez que le <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> propriété de la <xref:System.Web.UI.WebControls.ServerValidateEventArgs> est utilisée pour déterminer la valeur à valider, alors que le <xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A> propriété est utilisée pour stocker les résultats de la validation.  
  
 [!code-aspx-csharp[CustomValidatorServerValidate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomValidatorServerValidate/CS/customvalidatorservervalidatecs.aspx#1)]
 [!code-aspx-vb[CustomValidatorServerValidate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomValidatorServerValidate/VB/customvalidatorservervalidatevb.aspx#1)]  
  
 [!code-aspx-csharp[CustomValidatorServerValidate2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomValidatorServerValidate2/CS/customvalidatorservervalidate2cs.aspx#1)]
 [!code-aspx-vb[CustomValidatorServerValidate2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomValidatorServerValidate2/VB/customvalidatorservervalidate2vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ServerValidateEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.CustomValidator" />
    <altmember cref="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServerValidateEventArgs (string value, bool isValid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value, bool isValid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ServerValidateEventArgs.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String, isValid As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServerValidateEventArgs(System::String ^ value, bool isValid);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ServerValidateEventArgs : string * bool -&gt; System.Web.UI.WebControls.ServerValidateEventArgs" Usage="new System.Web.UI.WebControls.ServerValidateEventArgs (value, isValid)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="isValid" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Valeur à valider.</param>
        <param name="isValid">
          <see langword="true" /> pour indiquer que la valeur a été validée ; sinon, <see langword="false" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.ServerValidateEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour créer et initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.ServerValidateEventArgs> classe.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d’une instance de <xref:System.Web.UI.WebControls.ServerValidateEventArgs>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|`Value`|Valeur du paramètre `value`.|  
|`IsValid`|Valeur du paramètre `isValid`.|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ServerValidateEventArgs.Value" />
        <altmember cref="P:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool with get, set" Usage="System.Web.UI.WebControls.ServerValidateEventArgs.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une indication précisant si la valeur spécifiée par la propriété <see cref="P:System.Web.UI.WebControls.ServerValidateEventArgs.Value" /> a été validée.</summary>
        <value>
          <see langword="true" /> pour indiquer que la valeur spécifiée par la propriété <see cref="P:System.Web.UI.WebControls.ServerValidateEventArgs.Value" /> a été validée ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une fois votre routine de validation terminée, utilisez le <xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A> propriété pour indiquer si la valeur spécifiée par la <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> ont réussi la validation de propriété. Cette valeur détermine si le contrôle d’entrée associé à le <xref:System.Web.UI.WebControls.CustomValidator> contrôle réussi la validation.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A> propriété pour stocker les résultats de la validation.  
  
 [!code-aspx-csharp[CustomValidatorServerValidate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomValidatorServerValidate/CS/customvalidatorservervalidatecs.aspx#1)]
 [!code-aspx-vb[CustomValidatorServerValidate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomValidatorServerValidate/VB/customvalidatorservervalidatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ServerValidateEventArgs.Value" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ServerValidateEventArgs.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Web.UI.WebControls.ServerValidateEventArgs.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur à valider dans le gestionnaire d'événements personnalisé pour l'événement <see cref="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" />.</summary>
        <value>Valeur à valider dans le gestionnaire d'événements personnalisé pour l'événement <see cref="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> propriété déterminer la valeur à valider dans le Gestionnaire d’événements personnalisé pour le <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> événement. Notez que vous ne pouvez pas modifier par programmation de cette valeur.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> propriété afin de déterminer la valeur à valider.  
  
 [!code-aspx-csharp[CustomValidatorServerValidate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomValidatorServerValidate/CS/customvalidatorservervalidatecs.aspx#1)]
 [!code-aspx-vb[CustomValidatorServerValidate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomValidatorServerValidate/VB/customvalidatorservervalidatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid" />
      </Docs>
    </Member>
  </Members>
</Type>