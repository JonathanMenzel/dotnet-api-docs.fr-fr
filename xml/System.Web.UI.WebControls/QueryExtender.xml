<Type Name="QueryExtender" FullName="System.Web.UI.WebControls.QueryExtender">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37f0a5ae95bbaee1e8c931a6b72efc409ff5d00f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36379977" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class QueryExtender : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryExtender extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.QueryExtender" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryExtender&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryExtender : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type QueryExtender = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TargetControlID")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.QueryExtenderDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.QueryExtender), "QueryExtender.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Expressions")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.TargetControlType(typeof(System.Web.UI.WebControls.IQueryableDataSource))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Active les données d'une source de données à filtrer sans clause <see langword="Where" /> explicite dans la source de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans cette rubrique :  
  
-   [Introduction](#Introduction)  
  
-   [Arrière-plan](#background)  
  
-   [Options de filtre](#filter_options)  
  
-   [Tâches](#Tasks)  
  
-   [Syntaxe déclarative](#declarative_syntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>Introduction  
 Le <xref:System.Web.UI.WebControls.QueryExtender> contrôle permet de créer des filtres pour les données extraites d’une source de données, sans utilisation explicite `Where` clause dans la source de données. Le <xref:System.Web.UI.WebControls.QueryExtender> contrôle peut être utilisé pour spécifier un filtrage à l’aide de la syntaxe déclarative.  
  
<a name="background"></a>   
## <a name="background"></a>Présentation  
 Exclut le filtrage des données à partir d’une source de données en affichant uniquement les enregistrements qui répondent aux critères spécifiés. Le filtrage vous permet de présenter des vues différentes des données qui est dans un jeu de données sans affecter les données dans le jeu de données.  
  
 Le filtrage nécessite généralement que vous créez un `Where` clause à appliquer à la commande qui interroge la source de données. Toutefois, le `Where` propriété du contrôle de source de données peut ne pas expose les fonctionnalités complètes qui est disponible. Par exemple, le contrôle QueryExtender vous permet d’interroger une table en recherchant des chaînes au début, fin, ou n’importe où dans le champ.  
  
 Pour exposer l’ensemble des fonctionnalités qui sont disponibles dans LINQ et à faciliter le filtrage des données [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] fournit le <xref:System.Web.UI.WebControls.QueryExtender> contrôle. Le <xref:System.Web.UI.WebControls.QueryExtender> contrôle présente les avantages suivants :  
  
-   Il fournit une expérience plus riche de filtrage à l’écriture un `Where` clause. Par exemple, vous pouvez rechercher une table de produits pour les valeurs booléennes à l’aide de la <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> filtre sans écrire une requête.  
  
-   Il vous permet de spécifier des filtres à l’aide de la même syntaxe pour le <xref:System.Web.UI.WebControls.LinqDataSource> et <xref:System.Web.UI.WebControls.EntityDataSource> contrôles et pour toute autre source de données des contrôles que vous pouvez utiliser.  
  
-   Il peut être utilisé avec <xref:System.Web.UI.WebControls.LinqDataSource> (contrôle), avec un <xref:System.Web.UI.WebControls.EntityDataSource> (contrôle), ou avec des sources de données tiers.  
  
<a name="filter_options"></a>   
## <a name="filter-options"></a>Options du filtre  
 Le <xref:System.Web.UI.WebControls.QueryExtender> contrôle prend en charge une variété d’options que vous pouvez utiliser pour filtrer les données. Le contrôle vous permet de rechercher des chaînes, rechercher des valeurs numériques dans une plage spécifiée et comparer une valeur de propriété dans une table à une valeur spécifiée. Le contrôle vous permet également de trier les données et fournir des requêtes personnalisées.  
  
 Ces options sont fournies comme expressions LINQ dans le <xref:System.Web.UI.WebControls.QueryExtender> contrôle. Le <xref:System.Web.UI.WebControls.QueryExtender> contrôle prend également en charge les expressions qui sont spécifiques à [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applications Dynamic Data.  
  
 Le tableau suivant répertorie les options que vous pouvez utiliser pour filtrer les données dans le <xref:System.Web.UI.WebControls.QueryExtender> contrôle.  
  
|Expression|Description |  
|----------------|-----------------|  
|<xref:System.Web.DynamicData.ControlFilterExpression>|(Uniquement pour les données dynamiques) Crée une requête de base de données à l’aide de la clé de données est sélectionnée dans un contrôle lié aux données de source.<br /><br /> Pour plus d’informations sur l’utilisation de cette option de filtre, consultez [Comment : filtre de lignes à l’aide de valeurs de Table dans une Table parente dans Dynamic Data](http://msdn.microsoft.com/library/a5566986-7c30-4e71-b4a4-81cd16095749).|  
|<xref:System.Web.UI.WebControls.Expressions.CustomExpression>|Spécifie une expression définie par l’utilisateur pour une source de données. L’expression LINQ personnalisée peut être appelée dans un gestionnaire d’événements.|  
|<xref:System.Web.DynamicData.DynamicFilterExpression>|(Uniquement pour les données dynamiques) Crée une requête de base de données en utilisant le <xref:System.Web.DynamicData.DynamicFilter> contrôle.<br /><br /> Pour plus d’informations sur l’utilisation de cette option de filtre, consultez [Comment : filtre de lignes à l’aide de clé étrangère de Table dans Dynamic Data](http://msdn.microsoft.com/library/b774e56a-a5b9-41b7-b114-699313ef2056).|  
|<xref:System.Web.UI.WebControls.Expressions.MethodExpression>|Spécifie une expression LINQ définie par l’utilisateur pour une source de données. L’expression est appelée dans une méthode.|  
|<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>|Applique une expression de tri à un <xref:System.Linq.IQueryable> objet source de données. Après avoir appliqué le <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> valeur, vous pouvez appliquer des opérations de tri supplémentaires en spécifiant un <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> valeur.|  
|<xref:System.Web.UI.WebControls.Expressions.PropertyExpression>|Compare les propriétés des valeurs de champs et de propriétés sont spécifiés dans le <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.|  
|<xref:System.Web.UI.WebControls.Expressions.RangeExpression>|Détermine si une valeur est supérieure ou inférieure à la valeur spécifiée, ou si une valeur est comprise entre deux valeurs.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchExpression>|Compare des valeurs dans un ou plusieurs champs à une valeur de chaîne spécifiée.|  
  
 Vous pouvez utiliser ces <xref:System.Web.UI.WebControls.QueryExtender> options individuellement ou vous pouvez combiner pour fournir un filtrage complexe dans une page Web. Pour plus d’informations, consultez [vue d’ensemble du contrôle serveur Web QueryExtender](http://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702). [Procédure pas à pas : Filtrage des données dans une Page Web à l’aide de la syntaxe déclarative](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)  
  
<a name="Tasks"></a>   
## <a name="tasks"></a>Tâches  
 Le tableau suivant répertorie les tâches qui indiquent comment utiliser le <xref:System.Web.UI.WebControls.QueryExtender> contrôle pour filtrer les données.  
  
|Document|Tâche|  
|--------------|----------|  
|[Procédure pas à pas : Filtrage des données dans une Page Web à l’aide de la syntaxe déclarative](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)|Montre comment utiliser le filtre d’options qui le <xref:System.Web.UI.WebControls.QueryExtender> fournit du contrôle.|  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Syntaxe déclarative  
  
```  
<asp:QueryExtender   
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBiding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="UnLoad event hadler"  
    Runat="server"  
    TargetControlID="string"  
    Visible="True|False"  
>  
        <asp:ControlFilterExpression   
            ControlD="string"  
            Column="string">   
        </asp:ControlFilterExpression>  
        <asp:DynamicFilterExpression  
            ControlD="string"  
        </asp:DynamicFilterExpression>  
        <asp:CustomExpression="string"  
            OnQuerying="OnQerying event handler">  
        </asp:CustomExpression>  
        <asp:OrderByExpression="string"  
            DataField="string"  
            Direction="string">  
            <asp:ThenByExpression  
                 DataField="string"  
                 Direction="string"  
            </asp:ThenBy>  
        </asp:OrderByExpression>  
        <asp:PropertyExpression="string">  
                <!-- child controls -->  
        </asp:PropertyExpression  
        >  
        <asp:RangeExpression="integer"  
            Datafield="string"  
            MaxType="Exclusive|Inclusive|None"  
            MinType="Exclusive|Inclusive|None">  
                <!--child controls-->  
        </asp:RangeExpression>  
        <asp:SearchExpression="string"  
            ComparisonType="CurrentCulture|CurrentCultureIgnoreCase|  
                InavariantCulture|InvariantCultureIgnoreCase|  
                Ordinal|OrdinalIgnoreCase"  
            DataField="string"  
            SearchType="Contains|EndsWith|StartsWith">  
                <!--child controls-->  
        </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser la <xref:System.Web.UI.WebControls.QueryExtender> contrôle pour fournir une fonction de recherche dans une page Web. Le <xref:System.Web.UI.WebControls.QueryExtender> contrôle utilise le texte entré dans le `TextBoxSearch` contrôle pour rechercher du contenu dans les colonnes ProductName et Supplier.CompanyName d’une table de produits dans les données qui sont retournées à partir de la <xref:System.Web.UI.WebControls.LinqDataSource> contrôle. Le <xref:System.Web.UI.WebControls.Expressions.SearchExpression> objet est utilisé pour effectuer la recherche. Le <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> propriété spécifie les champs de données à rechercher. Le <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> propriété spécifie le type de recherche à effectuer. Le <xref:System.Web.UI.WebControls.ControlParameter> élément spécifie le contrôle qui contient le texte à utiliser pour la recherche. Cet exemple de code fait partie d’un exemple plus complet fourni dans [procédure pas à pas : filtrage des données dans une Page Web à l’aide de la syntaxe déclarative](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:SearchExpression DataFields="ProductName, Supplier.CompanyName"   
        SearchType="StartsWith">  
    <asp:ControlParameter ControlID="TextBoxSearch" />  
  </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
 L’exemple suivant montre comment utiliser la <xref:System.Web.UI.WebControls.QueryExtender> contrôle pour rechercher une page Web pour les valeurs dans une plage spécifiée. Le <xref:System.Web.UI.WebControls.QueryExtender> contrôle utilise les valeurs entrées dans le `TextBoxFrom` et `TextBoxTo` pour rechercher des valeurs dans les colonnes ProductName et Supplier.CompanyName d’une table de produits dans les données qui sont retournées à partir de la <xref:System.Web.UI.WebControls.LinqDataSource> contrôle . Le <xref:System.Web.UI.WebControls.ControlParameter> élément spécifie les contrôles de zone de texte qui contiennent les valeurs minimales et maximales à utiliser pour la recherche de la plage. Le <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> et <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> propriétés spécifient que les valeurs minimales et maximale doivent être inclus dans les données qui sont retournées. Cet exemple de code fait partie d’un exemple plus complet fourni dans [procédure pas à pas : filtrage des données dans une Page Web à l’aide de la syntaxe déclarative](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:RangeExpression DataField="UnitPrice" MinType="Inclusive"   
        MaxType="Inclusive">  
    <asp:ControlParameter ControlID="TextBoxFrom" />  
    <asp:ControlParameter ControlID="TexBoxTo" />  
  </asp:RangeExpression>  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Expressions.QueryExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.SearchType" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryExtender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryExtender();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.QueryExtender" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.IQueryableDataSource DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.IQueryableDataSource DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataSource As IQueryableDataSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::IQueryableDataSource ^ DataSource { System::Web::UI::WebControls::IQueryableDataSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : System.Web.UI.WebControls.IQueryableDataSource" Usage="System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.IQueryableDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le contrôle de source de données (<see cref="T:System.Web.UI.IDataSource" />) à utiliser pour la requête.</summary>
        <value>Contrôle de source de données à utiliser pour la requête.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.QueryExtender> contrôle prend en charge la <xref:System.Web.UI.WebControls.LinqDataSource> et <xref:System.Web.UI.WebControls.EntityDataSource> contrôles.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Web.UI.WebControls.QueryExtender.DataSource" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Expressions">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expressions As DataSourceExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ Expressions { System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expressions : System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" Usage="System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection des expressions appliquées au contrôle <see cref="T:System.Web.UI.IDataSource" />.</summary>
        <value>Collection des expressions appliquées au contrôle de source de données.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="queryExtender.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Objet qui représente l'état du contrôle <see cref="T:System.Web.UI.WebControls.QueryExtender" />.</param>
        <summary>Charge l'état des valeurs du contrôle <see cref="T:System.Web.UI.WebControls.QueryExtender" /> qui doivent être persistantes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInit : EventArgs -&gt; unit&#xA;override this.OnInit : EventArgs -&gt; unit" Usage="queryExtender.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Données d'événement.</param>
        <summary>Se produit lorsqu'une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.QueryExtender" /> est initialisée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="queryExtender.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre l'état d'affichage actuel du contrôle <see cref="T:System.Web.UI.WebControls.QueryExtender" />.</summary>
        <returns>Objet qui contient l'état enregistré du contrôle <see cref="T:System.Web.UI.WebControls.QueryExtender" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetControlID">
      <MemberSignature Language="C#" Value="public virtual string TargetControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TargetControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TargetControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetControlID : string with get, set" Usage="System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'ID du contrôle <see cref="T:System.Web.UI.IDataSource" /> à utiliser pour la requête.</summary>
        <value>ID du contrôle de source de données à utiliser pour la requête.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="queryExtender.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Suit les modifications d'état d'affichage apportées au contrôle <see cref="T:System.Web.UI.WebControls.QueryExtender" /> afin que les modifications puissent être stockées dans l'objet <see cref="T:System.Web.UI.StateBag" /> du contrôle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>