<Type Name="SqlDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35c362341828a3398efd2c97fc42dc3ecc6b2294" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36578841" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour un événement qui est déclenché par le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> après la fin d'une opération de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> classe est utilisée dans les <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, et <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> événements pour passer des informations relatives à une opération de base de données après qu’il est effectué par les données de contrôle de code source. Ces informations incluent le nombre de lignes affectées par l’opération, le <xref:System.Data.Common.DbCommand> objet de la source de données utilisée pour effectuer l’opération et toutes les informations d’exception qui a généré. En ajoutant un délégué de gestionnaire d’événements pour gérer les <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> ou <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> des événements, vous pouvez examiner ces données et effectuer les opérations post-traitement supplémentaires requises.  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle expose de nombreux événements que vous pouvez gérer pour travailler avec les objets de données sous-jacents pendant le déroulement d’une opération de données. Le tableau suivant répertorie les événements et associés <xref:System.EventArgs> et les classes de gestionnaire d’événements, pour mieux vous guider vers les divers événements qui correspondent au cycle de vie d’une opération de données à l’aide de la <xref:System.Web.UI.WebControls.SqlDataSource> contrôle.  
  
|événement|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> se produit avant la récupération des données.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> se produisent avant une instruction insert, update ou delete opération est effectuée.|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> se produisent après la récupération des données, d’insertion, mise à jour ou les opérations de suppression est terminée.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> classe pour examiner la valeur de retour et les valeurs des paramètres de sortie qui sont retournés lorsque vous utilisez un <xref:System.Web.UI.WebControls.SqlDataSource> contrôle avec une procédure stockée pour remplir un <xref:System.Web.UI.WebControls.GridView> contrôle. La procédure stockée sélectionne des données qui s’affiche dans le <xref:System.Web.UI.WebControls.GridView>, mais retourne également d’autres informations à l’appelant, comme un paramètre de sortie entier et une valeur de retour. Les paramètres qui le <xref:System.Web.UI.WebControls.SqlDataSource> utilise pour la procédure stockée est contenus dans le <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection et sont constitués de paramètres qui passent des informations du formulaire Web à la procédure stockée ainsi que les paramètres qui passent des informations de sauvegarde pour le formulaire. Le <xref:System.Web.UI.WebControls.Parameter.Direction%2A> de ces paramètres est définie sur <xref:System.Data.ParameterDirection.Output> et <xref:System.Data.ParameterDirection.ReturnValue>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command, int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceStatusEventArgs(System::Data::Common::DbCommand ^ command, int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs : System.Data.Common.DbCommand * int * Exception -&gt; System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs (command, affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.Common.DbCommand" /> qui représente la requête de base de données, la commande ou la procédure stockée qui est envoyée à la base de données par le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</param>
        <param name="affectedRows">Nombre de lignes affecté par l'opération de base de données, le cas échéant.</param>
        <param name="exception">
          <see cref="T:System.Exception" /> levé par l'opération de base de données, le cas échéant.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />, à l'aide des paramètres de sortie spécifiés, de la valeur de retour et du nombre de lignes affecté par l'opération de base de données.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de lignes affectées par une opération de base de données.</summary>
        <value>Nombre de lignes affectées par une opération de base de données. La valeur par défaut est -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Toutes les opérations retournent le nombre de lignes affectées par l’opération. Le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows%2A> propriété a la même valeur que la valeur de retour de la <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>, et <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> méthodes.  
  
 Lorsque le <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> méthode est appelée et la source de données a la valeur <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> mode, la valeur de retour est 0 dans tous les cas.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la commande de base de données envoyée à la base de données.</summary>
        <value>Objet <see cref="T:System.Data.Common.DbCommand" /> qui représente la commande de base de données soumise à la base de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez gérer le <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, ou <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> événements pour examiner et manipuler les propriétés de la <xref:System.Data.Common.DbCommand> une fois que ce dernier est envoyé par le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle à la base de données. Le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command%2A> propriété permet d’accéder aux valeurs de retour et les valeurs dans les paramètres de sortie une fois l’opération de base de données est effectuée via son <xref:System.Data.Common.DbCommand.Parameters%2A> propriété, ainsi que le <xref:System.Data.Common.DbCommand.CommandText%2A> propriété, qui représente la requête SQL, commande, ou nom de la procédure stockée qui a été soumise à la base de données.  
  
 Les paramètres de sortie sont spécifiquement de paramètres qui ont une <xref:System.Data.ParameterDirection.InputOutput> ou <xref:System.Data.ParameterDirection.Output> la valeur pour le <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propriété de la <xref:System.Web.UI.WebControls.Parameter> objet. Une valeur de retour est d’un paramètre qui a un <xref:System.Data.ParameterDirection.ReturnValue> valeur.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment examiner les valeurs des paramètres de sortie lorsque vous utilisez un <xref:System.Web.UI.WebControls.SqlDataSource> contrôle avec une procédure stockée. Le <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection contient les paramètres qui le <xref:System.Web.UI.WebControls.SqlDataSource> utilise pour la procédure stockée et se compose de paramètres qui passent des informations du formulaire Web à la procédure stockée, ainsi que des paramètres qui passent des informations au formulaire. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un wrapper pour toutes les exceptions levées par la base de données pendant une opération de données.</summary>
        <value>
          <see cref="T:System.Exception" /> qui encapsule toutes les exceptions levées par la base de données dans sa propriété <see cref="P:System.Exception.InnerException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Exception> propriété ne représente pas l’exception réelle levée par l’opération de base de données. Vous pouvez accéder à l’exception levée à l’aide de la <xref:System.Exception.InnerException%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si une exception levée par la base de données a été gérée.</summary>
        <value>
          <see langword="true" /> si une exception levée par la base de données a été gérée et ne doit pas être levée par le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la base de données lève une exception, le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> est définie sur `false` et l’exception est encapsulée par la <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A> propriété. Si vous utilisez un <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>, vous pouvez vérifier le <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> propriété et gérer l’exception. Si vous gérez l’exception, affectez le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> propriété `true` ou <xref:System.Web.UI.WebControls.SqlDataSource> contrôle lève une exception.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>