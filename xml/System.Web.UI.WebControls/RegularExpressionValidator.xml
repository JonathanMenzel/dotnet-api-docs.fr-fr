<Type Name="RegularExpressionValidator" FullName="System.Web.UI.WebControls.RegularExpressionValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="809e7cb9bd9697e3d28a889198e7aa1a507a905e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598403" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegularExpressionValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegularExpressionValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.RegularExpressionValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RegularExpressionValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegularExpressionValidator : System::Web::UI::WebControls::BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:RegularExpressionValidator runat="server" ErrorMessage="RegularExpressionValidator"&gt;&lt;/{0}:RegularExpressionValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e64ff-101">Valide si la valeur d’un contrôle d’entrée associé correspond au modèle spécifié par une expression régulière.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e64ff-101">Validates whether the value of an associated input control matches the pattern specified by a regular expression.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e64ff-102">Le <xref:System.Web.UI.WebControls.RegularExpressionValidator> contrôle vérifie si la valeur d’un contrôle d’entrée correspond à un modèle défini par une expression régulière.</span><span class="sxs-lookup"><span data-stu-id="e64ff-102">The <xref:System.Web.UI.WebControls.RegularExpressionValidator> control checks whether the value of an input control matches a pattern defined by a regular expression.</span></span> <span data-ttu-id="e64ff-103">Ce type de validation vous permet de vérifier des séquences de caractères, tels que ceux dans les adresses de messagerie, les numéros de téléphone et les codes postaux prévisibles.</span><span class="sxs-lookup"><span data-stu-id="e64ff-103">This type of validation allows you to check for predictable sequences of characters, such as those in email addresses, telephone numbers, and postal codes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e64ff-104">La validation réussit si le contrôle d’entrée est vide.</span><span class="sxs-lookup"><span data-stu-id="e64ff-104">Validation succeeds if the input control is empty.</span></span> <span data-ttu-id="e64ff-105">Si une valeur est requise pour le contrôle d’entrée associé, utilisez un <xref:System.Web.UI.WebControls.RequiredFieldValidator> contrôler à la <xref:System.Web.UI.WebControls.RegularExpressionValidator> contrôle.</span><span class="sxs-lookup"><span data-stu-id="e64ff-105">If a value is required for the associated input control, use a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control in addition to the <xref:System.Web.UI.WebControls.RegularExpressionValidator> control.</span></span>  
  
 <span data-ttu-id="e64ff-106">La validation côté serveur et côté client sont effectuées, sauf si le navigateur ne prend pas en charge la validation côté client ou la validation côté client est explicitement désactivée (en définissant le <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> propriété `false`).</span><span class="sxs-lookup"><span data-stu-id="e64ff-106">Both server-side and client-side validation are performed unless the browser does not support client-side validation or client-side validation is explicitly disabled (by setting the <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> property to `false`).</span></span>  
  
 <span data-ttu-id="e64ff-107">L’implémentation de la validation de l’expression régulière est légèrement différente sur le client et sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="e64ff-107">The regular-expression validation implementation is slightly different on the client than on the server.</span></span> <span data-ttu-id="e64ff-108">Sur le client, la syntaxe d’expression régulière JScript est utilisée.</span><span class="sxs-lookup"><span data-stu-id="e64ff-108">On the client, JScript regular-expression syntax is used.</span></span> <span data-ttu-id="e64ff-109">Sur le serveur, <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> la syntaxe est utilisée.</span><span class="sxs-lookup"><span data-stu-id="e64ff-109">On the server, <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> syntax is used.</span></span> <span data-ttu-id="e64ff-110">Depuis JScript syntaxe d’expression régulière est un sous-ensemble de <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> syntaxe, il est recommandé que la syntaxe des expressions régulières JScript servir afin d’obtenir les mêmes résultats sur le client et le serveur.</span><span class="sxs-lookup"><span data-stu-id="e64ff-110">Since JScript regular expression syntax is a subset of <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> syntax, it is recommended that JScript regular-expression syntax be used in order to yield the same results on both the client and the server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e64ff-111">Lorsque vous utilisez la <xref:System.Web.UI.WebControls.RegularExpressionValidator> de contrôle à l’intérieur d’un <xref:System.Web.UI.UpdatePanel> contrôler, assurez-vous que le contrôle du programme de validation et le contrôle auquel il est associé se trouvent dans le même volet.</span><span class="sxs-lookup"><span data-stu-id="e64ff-111">When you use the <xref:System.Web.UI.WebControls.RegularExpressionValidator> control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel.</span></span> <span data-ttu-id="e64ff-112">Pour plus d’informations sur l’utilisation de la <xref:System.Web.UI.UpdatePanel> du contrôle des mises à jour de page partielle, consultez [vue d’ensemble du rendu de Page partiel](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span><span class="sxs-lookup"><span data-stu-id="e64ff-112">For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span></span>  
  
 <span data-ttu-id="e64ff-113">Pour plus d’informations sur les contrôles de validation, consultez <xref:System.Web.UI.WebControls.BaseValidator>.</span><span class="sxs-lookup"><span data-stu-id="e64ff-113">For additional information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>.</span></span> <span data-ttu-id="e64ff-114">Pour plus d’informations sur les expressions régulières, consultez [Expressions régulières .NET Framework](~/docs/standard/base-types/regular-expressions.md).</span><span class="sxs-lookup"><span data-stu-id="e64ff-114">For more information on regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md).</span></span>  
  
## <a name="accessibility"></a><span data-ttu-id="e64ff-115">Accessibilité</span><span class="sxs-lookup"><span data-stu-id="e64ff-115">Accessibility</span></span>  
 <span data-ttu-id="e64ff-116">Pour plus d’informations sur la configuration de ce contrôle afin qu’il génère un balisage qui est conforme aux normes d’accessibilité, consultez [accessibilité dans Visual Studio et ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) et [contrôles ASP.NET et l’accessibilité](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).</span><span class="sxs-lookup"><span data-stu-id="e64ff-116">For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) and [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e64ff-117">L’exemple suivant montre comment utiliser la <xref:System.Web.UI.WebControls.RegularExpressionValidator> contrôle à valider un code postal à cinq chiffres.</span><span class="sxs-lookup"><span data-stu-id="e64ff-117">The following example demonstrates how to use the <xref:System.Web.UI.WebControls.RegularExpressionValidator> control to validate a five-digit postal code.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e64ff-118">Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité.</span><span class="sxs-lookup"><span data-stu-id="e64ff-118">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="e64ff-119">Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML.</span><span class="sxs-lookup"><span data-stu-id="e64ff-119">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="e64ff-120">Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="e64ff-120">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[Classic RegularExpressionValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic RegularExpressionValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
    <altmember cref="T:System.Text.RegularExpressions.Regex" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegularExpressionValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RegularExpressionValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegularExpressionValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e64ff-121">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e64ff-121">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="e64ff-122">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> qui représente le flux de sortie pour le rendu du contenu HTML sur le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e64ff-122">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e64ff-123">Ajoute des attributs et des styles HTML qui doivent être rendus pour le contrôle à l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e64ff-123">Adds to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object the HTML attributes and styles that need to be rendered for the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e64ff-124">L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender%2A> méthode dans un contrôle serveur personnalisé afin que le <xref:System.Web.UI.WebControls.RegularExpressionValidator> message d’erreur s’affiche toujours en gras.</span><span class="sxs-lookup"><span data-stu-id="e64ff-124">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender%2A> method in a custom server control so that the <xref:System.Web.UI.WebControls.RegularExpressionValidator> error message always displays as bold.</span></span>  
  
 [!code-csharp[CustomRegularExpressionValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/CS/custom_regularexpressionvalidator_addattributestorender.cs#2)]
 [!code-vb[CustomRegularExpressionValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/VB/custom_regularexpressionvalidator_addattributestorender.vb#2)]  
  
 <span data-ttu-id="e64ff-125">L’exemple de code suivant illustre l’utilisation de l’utilisation du `CustomRegularExpressionValidatorAddAttributesToRender` contrôle, défini dans l’exemple précédent, sur une page Web Forms.</span><span class="sxs-lookup"><span data-stu-id="e64ff-125">The following code example demonstrates how to use the use the `CustomRegularExpressionValidatorAddAttributesToRender` control, defined in the preceding example, on a Web Forms page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e64ff-126">Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité.</span><span class="sxs-lookup"><span data-stu-id="e64ff-126">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="e64ff-127">Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML.</span><span class="sxs-lookup"><span data-stu-id="e64ff-127">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="e64ff-128">Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="e64ff-128">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[CustomRegularExpressionValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/CS/custom_regularexpressionvalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomRegularExpressionValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/VB/custom_regularexpressionvalidator_addattributestorendervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e64ff-129">Indique si la valeur contenue dans le contrôle d'entrée est valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e64ff-129">Indicates whether the value in the input control is valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e64ff-130">
            <see langword="true" /> si la valeur dans le contrôle d’entrée est valide ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e64ff-130">
              <see langword="true" /> if the value in the input control is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e64ff-131">L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid%2A> contrôler la méthode dans un serveur personnalisé afin qu’elle vérifie toujours la valeur par rapport à l’expression pour une correspondance dans un <xref:System.Web.UI.WebControls.RegularExpressionValidator>.</span><span class="sxs-lookup"><span data-stu-id="e64ff-131">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid%2A> method in a custom server control so that it always checks the value against the expression for a match in a <xref:System.Web.UI.WebControls.RegularExpressionValidator>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e64ff-132">Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité.</span><span class="sxs-lookup"><span data-stu-id="e64ff-132">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="e64ff-133">Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML.</span><span class="sxs-lookup"><span data-stu-id="e64ff-133">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="e64ff-134">Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="e64ff-134">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[CustomRegularExpressionValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/CS/custom_regularexpressionvalidator_evaluateisvalid.cs#2)]
 [!code-vb[CustomRegularExpressionValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/VB/custom_regularexpressionvalidator_evaluateisvalid.vb#2)]  
  
 <span data-ttu-id="e64ff-135">L’exemple de code suivant montre comment utiliser la `CustomRegularExpressionValidatorEvaluateIsValid` contrôle, défini dans l’exemple précédent, sur une page Web Forms.</span><span class="sxs-lookup"><span data-stu-id="e64ff-135">The following code example demonstrates how to use the `CustomRegularExpressionValidatorEvaluateIsValid` control, defined in the preceding example, on a Web Forms page.</span></span>  
  
 [!code-aspx-csharp[CustomRegularExpressionValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/CS/custom_regularexpressionvalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomRegularExpressionValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/VB/custom_regularexpressionvalidator_evaluateisvalidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; MatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RegularExpressionValidator.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeout As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; MatchTimeout { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e64ff-136">Obtient ou définit l'intervalle de temps maximal pour exécuter une seule opération de correspondance avant l'expiration de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e64ff-136">Gets or set the maximum time interval to execute a single matching operation before the operation times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e64ff-137">Intervalle de temps maximal pour exécuter une seule opération de correspondance avant l'expiration de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e64ff-137">The maximum time interval to execute a single matching operation before the operation times out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationExpression">
      <MemberSignature Language="C#" Value="public string ValidationExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.RegexTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e64ff-138">Obtient ou définit l'expression régulière qui détermine le modèle utilisé pour valider un champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e64ff-138">Gets or sets the regular expression that determines the pattern used to validate a field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e64ff-139">Chaîne qui spécifie l'expression régulière utilisée pour valider la mise en forme d'un champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e64ff-139">A string that specifies the regular expression used to validate a field for format.</span>
          </span>
          <span data-ttu-id="e64ff-140">La valeur par défaut est <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e64ff-140">The default is <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e64ff-141">Utilisez cette propriété pour spécifier le modèle utilisé pour rechercher les séquences de caractères, tels que ceux dans les numéros de sécurité sociale, les adresses de messagerie, les numéros de téléphone et les codes postaux prévisibles.</span><span class="sxs-lookup"><span data-stu-id="e64ff-141">Use this property to specify the pattern used to check for predictable sequences of characters, such as those in social security numbers, email addresses, telephone numbers, and postal codes.</span></span>  
  
 <span data-ttu-id="e64ff-142">Le <xref:System.Web.UI.WebControls.RegularExpressionValidator> n'exécute pas la validation sur une chaîne vide.</span><span class="sxs-lookup"><span data-stu-id="e64ff-142">The <xref:System.Web.UI.WebControls.RegularExpressionValidator> does not perform validation on an empty string.</span></span> <span data-ttu-id="e64ff-143">Si la chaîne que vous testez peut être vide, utilisez la <xref:System.Web.UI.WebControls.RequiredFieldValidator> , ainsi que les <xref:System.Web.UI.WebControls.RegularExpressionValidator>.</span><span class="sxs-lookup"><span data-stu-id="e64ff-143">If the string you are testing might be empty, use the <xref:System.Web.UI.WebControls.RequiredFieldValidator> as well as the <xref:System.Web.UI.WebControls.RegularExpressionValidator>.</span></span>  
  
 <span data-ttu-id="e64ff-144">Pour plus d’informations sur les expressions régulières, consultez [Expressions régulières .NET Framework](~/docs/standard/base-types/regular-expressions.md).</span><span class="sxs-lookup"><span data-stu-id="e64ff-144">For more information on regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e64ff-145">Si vous rencontrez des problèmes avec les constructions de correspondance de modèle, essayez d’encapsuler l’expression avec « ^ $( » et ») ».</span><span class="sxs-lookup"><span data-stu-id="e64ff-145">If you experience problems with pattern matching constructs, try wrapping the expression with "^(" and ")$".</span></span> <span data-ttu-id="e64ff-146">Par exemple, « un&#124;ab » devient « ^ (un&#124;ab) $».</span><span class="sxs-lookup"><span data-stu-id="e64ff-146">For example, "a&#124;ab" becomes "^(a&#124;ab)$".</span></span>  
  
 <span data-ttu-id="e64ff-147">Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style.</span><span class="sxs-lookup"><span data-stu-id="e64ff-147">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="e64ff-148">Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span><span class="sxs-lookup"><span data-stu-id="e64ff-148">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e64ff-149">L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression%2A> propriété pour valider un champ comportant cinq chiffres numériques.</span><span class="sxs-lookup"><span data-stu-id="e64ff-149">The following example demonstrates how to use the <xref:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression%2A> property to validate a field with five numeric digits.</span></span> <span data-ttu-id="e64ff-150">Lorsque le <xref:System.Web.UI.WebControls.Button> clic sur le contrôle, résultant <xref:System.Web.UI.WebControls.Button.OnClick%2A> vérifications de gestionnaire d’événements le <xref:System.Web.UI.Page.IsValid%2A> propriété de la <xref:System.Web.UI.Page> pour déterminer si le texte dans le <xref:System.Web.UI.WebControls.TextBox> correspond à l’expression régulière.</span><span class="sxs-lookup"><span data-stu-id="e64ff-150">When the <xref:System.Web.UI.WebControls.Button> control is clicked, the resulting <xref:System.Web.UI.WebControls.Button.OnClick%2A> event handler checks the <xref:System.Web.UI.Page.IsValid%2A> property of the <xref:System.Web.UI.Page> to determine whether the text in the <xref:System.Web.UI.WebControls.TextBox> satisfies the regular expression.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e64ff-151">Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité.</span><span class="sxs-lookup"><span data-stu-id="e64ff-151">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="e64ff-152">Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML.</span><span class="sxs-lookup"><span data-stu-id="e64ff-152">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="e64ff-153">Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="e64ff-153">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[Classic RegularExpressionValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic RegularExpressionValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="e64ff-154">L'expression régulière est mal formée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e64ff-154">The regular expression is not properly formed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>