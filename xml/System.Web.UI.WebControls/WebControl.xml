<Type Name="WebControl" FullName="System.Web.UI.WebControls.WebControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d2877d13b80f97665b6a10e426edcd8b97067ff0" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55376202" /></Metadata><TypeSignature Language="C#" Value="public class WebControl : System.Web.UI.Control, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebControl extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="VB.NET" Value="Public Class WebControl&#xA;Inherits Control&#xA;Implements IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebControl : System::Web::UI::Control, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type WebControl = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Sert de classe de base qui définit les méthodes, propriétés et événements communs à tous les contrôles dans l’espace de noms <see cref="N:System.Web.UI.WebControls" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebControl> classe fournit des propriétés, méthodes et événements communs à tous les contrôles de serveur Web. Vous pouvez contrôler l’apparence et le comportement d’un contrôle serveur Web en définissant les propriétés définies dans cette classe. Par exemple, la couleur d’arrière-plan et la couleur de police d’un contrôle sont contrôlées à l’aide de la <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> et <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> propriétés, respectivement. Sur les contrôles qui peuvent afficher une bordure, vous pouvez contrôler la largeur de bordure, le style de bordure et la couleur de bordure en définissant le <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>, <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>, et <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> propriétés. La taille d’un contrôle serveur Web peut être spécifiée à l’aide de la <xref:System.Web.UI.WebControls.WebControl.Height%2A> et <xref:System.Web.UI.WebControls.WebControl.Width%2A> propriétés.  
  
 Le comportement du contrôle peut être spécifié en définissant certaines propriétés. Vous pouvez activer et désactiver un contrôle en définissant le <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propriété. L’emplacement du contrôle dans l’ordre de tabulation est contrôlé en définissant le <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> propriété. Vous pouvez spécifier une info-bulle pour le contrôle en définissant le <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> propriété.  
  
> [!NOTE]
>  Pas tous les contrôles prennent en charge chaque propriété définie dans cette classe. Pour obtenir des informations spécifiques sur si une propriété est pris en charge, consultez la documentation pour le contrôle spécifique.  
  
> [!NOTE]
>  Certaines propriétés de cette classe rendu différemment, selon le navigateur. Certaines propriétés ne s’affichent pas du tout, tandis que d’autres restituer, mais n’ont aucun effet. Le <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> propriété de la <xref:System.Web.HttpBrowserCapabilities> objet détermine comment un contrôle serveur Web est rendu. Pour les navigateurs qui prennent en charge HTML 4.0, la <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> propriété contiendra une expression régulière <xref:System.Web.HttpBrowserCapabilities> objet et la plupart des propriétés sont rendus à l’aide des attributs de style HTML 4.0. Les navigateurs qui ne prennent pas en charge HTML 4.0 utilisent le <xref:System.Web.UI.Html32TextWriter> objet. Cela permet de mapper automatiquement les attributs de style pour les attributs de balise HTML 3.2 pertinents. Dans certains cas, comme avec la <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> propriété, les attributs de style passera en balises supplémentaires, telles que `<font>` balises. Dans certains cas, il n’y aura aucun mappage effectué. Pour obtenir des informations spécifiques sur la façon dont une propriété est rendue dans différents navigateurs, consultez la documentation pour la propriété spécifique.  
  
 Pour obtenir la liste des valeurs initiales des propriétés d’une instance de <xref:System.Web.UI.WebControls.WebControl>, consultez le <xref:System.Web.UI.WebControls.WebControl.%23ctor%2A> constructeur.  
  
   
  
## Examples  
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BackColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Height" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.TabIndex" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ToolTip" />
    <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">Contrôles serveur ASP.NET et les fonctionnalités du navigateur</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.WebControl" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.WebControl" /> qui représente une balise HTML <see langword="Span" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est utilisé pour initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.WebControl> classe qui représente un `Span` élément HTML.  
  
 Le tableau suivant affiche la valeur de propriété initiales d’une instance de <xref:System.Web.UI.WebControls.WebControl>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|`TagKey`|Valeur de l'énumération <xref:System.Web.UI.HtmlTextWriterTag.Span>.|  
  
> [!NOTE]
>  Ce constructeur n’est pas appelé directement. Au lieu de cela, elle est souvent appelée par le constructeur d’une classe dérivée pour initialiser la <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> propriété le <xref:System.Web.UI.HtmlTextWriterTag.Span> valeur d’énumération.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebControl : string -&gt; System.Web.UI.WebControls.WebControl" Usage="new System.Web.UI.WebControls.WebControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">Balise HTML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.WebControl" /> en utilisant la balise HTML spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour créer et initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.WebControl> classe à l’aide de la balise HTML spécifiée.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d’une instance de <xref:System.Web.UI.WebControls.WebControl>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|`TagKey`|Valeur de l'énumération <xref:System.Web.UI.HtmlTextWriterTag.Unknown>.|  
|`TagName`|Valeur du paramètre `tag`.|  
  
> [!NOTE]
>  Ce constructeur n’est pas appelé directement. Au lieu de cela, elle est souvent appelée par le constructeur d’une classe dérivée pour initialiser la <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> et <xref:System.Web.UI.WebControls.WebControl.TagName%2A> propriétés.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagName" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebControl (System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebControl(System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebControl : System.Web.UI.HtmlTextWriterTag -&gt; System.Web.UI.WebControls.WebControl" Usage="new System.Web.UI.WebControls.WebControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tag">Une des valeurs de <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.WebControl" /> en utilisant la balise HTML spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour créer et initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.WebControl> à l’aide de l’élément spécifié de la classe <xref:System.Web.UI.HtmlTextWriterTag?displayProperty=nameWithType> valeur.  
  
 Le tableau suivant affiche la valeur de propriété initiales d’une instance de <xref:System.Web.UI.WebControls.WebControl>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|`TagKey`|Le <xref:System.Web.UI.HtmlTextWriterTag> valeur d’énumération spécifiée par le `tag` paramètre.|  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le constructeur pour le <xref:System.Web.UI.WebControls.WebControl> classe pour créer un `TextArea` élément HTML et l’afficher dans la page Web Forms.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si directement copiées dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension de nom de fichier .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.WebControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.WebControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.WebControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.WebControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public virtual string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AccessKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessKey : string with get, set" Usage="System.Web.UI.WebControls.WebControl.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la touche d'accès rapide qui vous permet de naviguer rapidement vers le contrôle serveur Web.</summary>
        <value>Touche d'accès rapide pour la navigation rapide vers le contrôle serveur Web. La valeur par défaut, <see cref="F:System.String.Empty" />, indique que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> propriété pour spécifier le raccourci clavier pour le contrôle serveur Web. Cela vous permet de naviguer rapidement au contrôle en appuyant sur la touche ALT et la touche de caractère spécifiée sur le clavier. Par exemple, si la clé d’accès d’un contrôle à la chaîne `"D"` indique que l’utilisateur peut accéder au contrôle en appuyant sur ALT + D.  
  
 Uniquement une chaîne de caractère unique est autorisée pour le <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> propriété. Si vous essayez de définir cette propriété sur une valeur qui n’est ni `null`, <xref:System.String.Empty>, ni une chaîne de caractères unique, une exception est levée.  
  
> [!NOTE]
>  Cette propriété est prise en charge uniquement dans Internet Explorer 4.0 et versions ultérieures.  
  
   
  
## Examples  
 L’exemple suivant illustre comment définir et utiliser le <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> propriété d’un <xref:System.Web.UI.WebControls.TextBox> contrôle.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.AccessKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.AccessKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La touche d'accès rapide spécifiée n'est ni <see langword="null" />, ni <see cref="F:System.String.Empty" />, ni une chaîne à un seul caractère.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">Contrôles serveur ASP.NET et les fonctionnalités du navigateur</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> qui représente le flux de sortie utilisé pour restituer le contenu HTML sur le client.</param>
        <summary>Ajoute des attributs et des styles HTML qui doivent être rendus au <see cref="T:System.Web.UI.HtmlTextWriterTag" /> spécifié. Cette méthode est principalement utilisée par des développeurs de contrôles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour rendre des attributs et des styles pour un contrôle serveur Web sur le client, vous appelez généralement la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> et <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> méthodes pour insérer chaque attribut et le style individuellement à la <xref:System.Web.UI.HtmlTextWriter> flux de sortie. Pour simplifier le processus, cette méthode encapsule tous les appels à la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType> et <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> méthodes pour chaque attribut et un style associé au contrôle de serveur Web. Tous les attributs et les styles sont insérées dans la <xref:System.Web.UI.HtmlTextWriter> des flux de sortie dans un seul appel de méthode. Cette méthode est généralement substituée par les développeurs de contrôles dans les classes dérivées pour insérer les attributs appropriés et styles pour le <xref:System.Web.UI.HtmlTextWriter> des flux de sortie pour la classe.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> méthode ne peut pas être utilisée pour insérer un script client. Pour utiliser le script client, consultez la <xref:System.Web.UI.ClientScriptManager> classe.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer une classe qui dérive de la <xref:System.Web.UI.WebControls.WebControl> classe. L’implémentation de base de la <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> méthode est substituée pour ajouter les attributs appropriés à la classe dérivée dans la <xref:System.Web.UI.HtmlTextWriter> flux de sortie.  
  
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="ApplyStyle">
      <MemberSignature Language="C#" Value="public void ApplyStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberSignature Language="F#" Value="member this.ApplyStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="webControl.ApplyStyle s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s"><see cref="T:System.Web.UI.WebControls.Style" /> qui représente le style à copier.</param>
        <summary>Copie tous les éléments non vides du style spécifié vers le contrôle Web, en remplaçant les éléments de style existants du contrôle. Cette méthode est principalement utilisée par des développeurs de contrôles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> méthode pour appliquer un style à un <xref:System.Web.UI.WebControls.DataGrid> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si directement copiées dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide ayant une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[WebControlApplyStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlApplyStyle/CS/webcontrolapplystylecs.aspx#1)]
 [!code-aspx-vb[WebControlApplyStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlApplyStyle/VB/webcontrolapplystylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.WebControls.WebControl.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection d'attributs arbitraires (pour le rendu uniquement) qui ne correspondent pas à des propriétés du contrôle.</summary>
        <value><see cref="T:System.Web.UI.AttributeCollection" /> de paires nom-valeur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> collection contient une collection de tous les attributs déclarés dans la balise d’ouverture d’un contrôle serveur Web. Cela vous permet de contrôler par programme les attributs associés à un contrôle serveur Web. Vous pouvez ajouter des attributs à la collection ou supprimer des attributs de la collection.  
  
> [!NOTE]
>  Cette propriété est rendue avec tous les attributs dans la collection dans la balise d’ouverture du contrôle, quels que soient les paramètres de navigateur. Pas tous les navigateurs prennent en charge chaque attribut est rendu. Les attributs non pris en charge sont généralement ignorées par le navigateur.  
  
> [!NOTE]
>  Vous ne pouvez pas ajouter un script côté client à un <xref:System.Web.UI.WebControls.WebControl> à l’aide de l’instance du <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> collection. Pour ajouter un script côté client, utilisez le <xref:System.Web.UI.Page.ClientScript%2A> propriété sur le <xref:System.Web.UI.Page> contrôle.  
  
   
  
## Examples  
 L’exemple suivant illustre comment la <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> propriété d’un <xref:System.Web.UI.WebControls.WebControl> peut être utilisé pour exécuter un script JavaScript commande lorsque le <xref:System.Web.UI.WebControls.TextBox> contrôle perd le focus.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si directement copiées dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide ayant une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.Attributes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Attributes Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Attributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Attributes Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.AttributeCollection" />
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la couleur d'arrière-plan du contrôle serveur Web.</summary>
        <value><see cref="T:System.Drawing.Color" /> qui représente la couleur d'arrière-plan du contrôle. La valeur par défaut, <see cref="F:System.Drawing.Color.Empty" />, indique que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> propriété pour spécifier la couleur d’arrière-plan du contrôle serveur Web. Cette propriété est définie à l’aide un <xref:System.Drawing.Color?displayProperty=nameWithType> objet.  
  
> [!NOTE]
>  Cette propriété est rendue que pour certains contrôles. Par exemple, <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, et <xref:System.Web.UI.WebControls.ValidationSummary> affichera cette propriété. Elle fonctionne également pour <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> et <xref:System.Web.UI.WebControls.DataList> si leur `RepeatLayout` propriété est `RepeatLayout.Table`, et non `RepeatLayout.Flow`.  
  
 En règle générale, seuls les contrôles qui sont restituées comme un `<table>` balise peut afficher une couleur d’arrière-plan dans HTML 3.2, alors qu’il est possible de presque n’importe quel contrôle dans HTML 4.0.  
  
 Pour les contrôles qui sont rendus sous un `<span>` balise (y compris <xref:System.Web.UI.WebControls.Label>, tous les contrôles de validation et contrôles de liste avec leurs `RepeatLayout` propriété définie sur `RepeatLayout.Flow`), cette propriété fonctionne dans Microsoft Internet Explorer version 5 et versions ultérieure, mais pas dans Microsoft Internet Explorer version 4.  
  
   
  
## Examples  
 L’exemple suivant illustre comment définir le <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> propriété de la <xref:System.Web.UI.WebControls.Table> contrôle, qui est hérité de la <xref:System.Web.UI.WebControls.WebControl> classe de base.  
  
 [!code-aspx-csharp[Classic WebControl.BackColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BackColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BackColor Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">Contrôles serveur ASP.NET et les fonctionnalités du navigateur</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la couleur de bordure du contrôle Web.</summary>
        <value><see cref="T:System.Drawing.Color" /> qui représente la couleur de bordure du contrôle. La valeur par défaut, <see cref="F:System.Drawing.Color.Empty" />, indique que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> propriété pour spécifier la couleur de bordure du contrôle serveur Web. Cette propriété est définie à l’aide un <xref:System.Drawing.Color> objet.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> propriété affichera uniquement pour certains contrôles. Par exemple, le <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, et <xref:System.Web.UI.WebControls.ValidationSummary> contrôles rendent cette propriété. Elle fonctionne également pour le <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList>, et <xref:System.Web.UI.WebControls.DataList> des contrôles, si leurs `RepeatLayout` propriété est définie sur `RepeatLayout.Table`, et non `RepeatLayout.Flow`. Toutefois, il est rendu en tant que le `bordercolor` attribut, qui ne fait pas partie de la norme HTML 3.2. Le `bordercolor` attribut travaille pour Microsoft Internet Explorer version 3.0 ou version ultérieure, mais pas la plupart des autres navigateurs.  
  
 Lorsque le <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> propriété n’est pas définie, le navigateur utilisera sa couleur de bordure par défaut. Reportez-vous à votre navigateur pour déterminer son modèle de couleurs par défaut.  
  
   
  
## Examples  
 L’exemple suivant illustre comment définir le <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> propriété de la <xref:System.Web.UI.WebControls.Table> contrôle, qui est hérité de la <xref:System.Web.UI.WebControls.WebControl> classe de base.  
  
 [!code-aspx-csharp[Classic WebControl.BorderColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si directement copiées dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide ayant une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">Contrôles serveur ASP.NET et les fonctionnalités du navigateur</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Web.UI.WebControls.BorderStyle with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le style de bordure du contrôle serveur Web.</summary>
        <value>Une des valeurs d'énumération <see cref="T:System.Web.UI.WebControls.BorderStyle" />. La valeur par défaut est <see langword="NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> propriété pour spécifier le style de bordure pour le contrôle serveur Web. Cette propriété est définie à l’aide d’une de la <xref:System.Web.UI.WebControls.BorderStyle> valeurs d’énumération. Le tableau suivant répertorie les valeurs possibles.  
  
|Style de bordure|Description |  
|------------------|-----------------|  
|`NotSet`|Le style de bordure n’est pas défini.|  
|`None`|Aucune bordure|  
|`Dotted`|Bordure en pointillés.|  
|`Dashed`|Bordure discontinue.|  
|`Solid`|Bordure pleine.|  
|`Double`|Une bordure double pleine.|  
|`Groove`|Bordure rainurée pour un aspect de bordure enfoncée.|  
|`Ridge`|Bordure striée pour un aspect de bordure en relief.|  
|`Inset`|Bordure incrustée pour un aspect de contrôle enfoncé.|  
|`Outset`|Bordure sortante pour un aspect de contrôle en relief.|  
  
> [!NOTE]
>  Cette propriété n’est pas rendue dans les navigateurs antérieurs à Microsoft Internet Explorer 4 pour n’importe quel contrôle de serveur Web. Il n’existe pas d’équivalent dans HTML 3.2.  
  
   
  
## Examples  
 L’exemple suivant illustre comment définir le <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> propriété de la <xref:System.Web.UI.WebControls.Table> contrôle, qui est hérité de la <xref:System.Web.UI.WebControls.WebControl> classe de base.  
  
 [!code-aspx-csharp[Classic WebControl.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si directement copiées dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide ayant une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.BorderStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">Contrôles serveur ASP.NET et les fonctionnalités du navigateur</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la largeur de bordure du contrôle serveur Web.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Unit" /> qui représente la largeur de bordure d'un contrôle serveur Web. La valeur par défaut, <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, indique que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> propriété pour spécifier la largeur de bordure d’un contrôle.  
  
> [!NOTE]
>  Cette propriété ne fonctionne pas avec tous les contrôles de serveur Web. Il s’applique uniquement aux contrôles qui affichent un tableau, tel que <xref:System.Web.UI.WebControls.Table> et <xref:System.Web.UI.WebControls.DataGrid>.  
  
 Cette propriété est définie avec un <xref:System.Web.UI.WebControls.Unit> objet. Si le <xref:System.Web.UI.WebControls.Unit.Value%2A> propriété de la <xref:System.Web.UI.WebControls.Unit> contient un nombre négatif, une exception est levée.  
  
> [!NOTE]
>  La largeur de bordure peut être exprimée qu’en pixels pour les navigateurs antérieurs à Microsoft Internet Explorer version 5. Tous les types d’unité sont pris en charge dans Microsoft Internet Explorer version 5 et versions ultérieure. Reportez-vous au contrôle spécifique pour plus d’informations.  
  
   
  
## Examples  
 L’exemple suivant illustre comment définir le <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> propriété de la <xref:System.Web.UI.WebControls.Table> contrôle, hérité de la <xref:System.Web.UI.WebControls.WebControl> classe de base.  
  
 [!code-aspx-csharp[Classic WebControl.BorderWidth Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderWidth Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si directement copiées dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide ayant une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La largeur de bordure spécifiée est une valeur négative.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">Contrôles serveur ASP.NET et les fonctionnalités du navigateur</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="ControlStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ControlStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ControlStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ ControlStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebControl.ControlStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le style d'un contrôle serveur Web. Cette propriété est principalement utilisée par des développeurs de contrôles.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Style" /> qui encapsule les propriétés d'apparence du contrôle serveur Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriété encapsule toutes les propriétés de la <xref:System.Web.UI.WebControls.WebControl> classe qui spécifient l’apparence du contrôle, tel que <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> et <xref:System.Web.UI.WebControls.WebControl.Font%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="ControlStyleCreated">
      <MemberSignature Language="C#" Value="public bool ControlStyleCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlStyleCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyleCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlStyleCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlStyleCreated : bool" Usage="System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si un objet <see cref="T:System.Web.UI.WebControls.Style" /> a été créé pour la propriété <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />. Cette propriété est principalement utilisée par des développeurs de contrôles.</summary>
        <value><see langword="true" /> si un objet <see cref="T:System.Web.UI.WebControls.Style" /> a été créé pour la propriété <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" /> ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="CopyBaseAttributes">
      <MemberSignature Language="C#" Value="public void CopyBaseAttributes (System.Web.UI.WebControls.WebControl controlSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyBaseAttributes(class System.Web.UI.WebControls.WebControl controlSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyBaseAttributes (controlSrc As WebControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyBaseAttributes(System::Web::UI::WebControls::WebControl ^ controlSrc);" />
      <MemberSignature Language="F#" Value="member this.CopyBaseAttributes : System.Web.UI.WebControls.WebControl -&gt; unit" Usage="webControl.CopyBaseAttributes controlSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlSrc" Type="System.Web.UI.WebControls.WebControl" />
      </Parameters>
      <Docs>
        <param name="controlSrc"><see cref="T:System.Web.UI.WebControls.WebControl" /> qui représente le contrôle de code source possédant les propriétés à copier vers le contrôle serveur Web à partir duquel cette méthode est appelée.</param>
        <summary>Copie les propriétés non encapsulées par l'objet <see cref="P:System.Web.UI.WebControls.WebControl.Style" /> du contrôle serveur Web spécifié vers le contrôle serveur Web à partir duquel cette méthode est appelée. Cette méthode est principalement utilisée par des développeurs de contrôles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebControl.CopyBaseAttributes%2A> méthode copie le <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>, <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>, <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>, <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>, et <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> propriétés à partir du contrôle de serveur Web spécifié vers le contrôle serveur Web que cette méthode est appelée à partir de. Elle est couramment utilisée dans les cas où un contrôle serveur Web fonctionne en créant dynamiquement des nouveaux contrôles pendant qu’il est rendu et l’utilisation des contrôles. Cette méthode est utile dans ce cas parce qu’elle copie toutes les propriétés des contrôles de serveur Web non encapsulées par le <xref:System.Web.UI.WebControls.Style> donc ils peuvent être placés sur le contrôle le plus extérieur d’une balise qui est rendue de l’objet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="controlSrc" /> est <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style&#xA;override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="webControl.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée l'objet de style qui est utilisé de manière interne par la classe <see cref="T:System.Web.UI.WebControls.WebControl" /> pour implémenter toutes les propriétés associées au style. Cette méthode est principalement utilisée par des développeurs de contrôles.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Style" /> qui est utilisé pour implémenter toutes les propriétés associées au style du contrôle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebControl.CreateControlStyle%2A> méthode est utilisée pour créer le style relatives à l’objet qui est utilisée en interne pour implémenter le style de toutes les propriétés. Classes dérivées peuvent substituer cette méthode pour créer un style qui convient à la classe. Cette méthode est principalement utilisée par des développeurs de contrôles.  
  
 **Remarque** développeurs de contrôles doivent retourner un <xref:System.Web.UI.WebControls.Style> qui dérive de la <xref:System.Web.UI.WebControls.Style> qui retourne le contrôle de base. Il ne peut pas être supposé que le <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> est d’un type de Style particulier dans la mesure où un contrôle dérivé peut retourner un type différent.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public virtual string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CssClass : string with get, set" Usage="System.Web.UI.WebControls.WebControl.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la classe de feuille de style en cascade (CSS, Cascading Style Sheet) rendue par le contrôle serveur Web sur le client.</summary>
        <value>Classe CSS rendue par le contrôle serveur Web sur le client. La valeur par défaut est <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propriété pour spécifier la classe CSS à rendre sur le client pour le contrôle serveur Web. Cette propriété est rendue dans les navigateurs pour tous les contrôles. Elle sera toujours rendue en tant que l’attribut de classe, quel que soit le navigateur.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 Par exemple, supposons que vous avez la déclaration de contrôle serveur Web suivante :  
  
```  
<asp:TextBox id="TextBox1" ForeColor="Red" CssClass="class1" />  
```  
  
 Le code HTML suivant est rendu sur le client pour la déclaration de contrôle serveur Web précédente :  
  
```  
<input type=text class="class1" style="ForeColor:red">  
```  
  
 Si vous utilisez des feuilles de style en cascade (CSS) pour personnaliser l’apparence d’un contrôle, utilisez des styles intralignes ou un fichier CSS distinct, mais pas les deux. À l’aide de styles intralignes et un fichier CSS distinct peut entraîner des résultats inattendus.  
  
> [!NOTE]
>  Dans les navigateurs qui ne prennent pas en charge CSS, la définition du <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propriété n’a aucun effet.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propriété à modifier le style d’un <xref:System.Web.UI.WebControls.HyperLink> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si directement copiées dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide ayant une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.CssClass Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.CssClass Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.CssClass Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.CssClass Example/VB/sourcevb.aspx#1)]
 [!code-xml[Classic WebControl.CssClass Example#1](~/samples/snippets/common/VS_Snippets_WebNet/Classic WebControl.CssClass Example/Common/source.xml#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">Contrôles serveur ASP.NET et les fonctionnalités du navigateur</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="DisabledCssClass">
      <MemberSignature Language="C#" Value="public static string DisabledCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DisabledCssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DisabledCssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DisabledCssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisabledCssClass : string with get, set" Usage="System.Web.UI.WebControls.WebControl.DisabledCssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la classe CSS à appliquer à l'élément HTML restitué lorsque le contrôle est désactivé.</summary>
        <value>Classe CSS qui doit être appliquée à l'élément HTML restitué lorsque le contrôle est désactivé. La valeur par défaut est "aspNetDisabled".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété peut être utilisée pour modifier le nom qui est restitué pour la <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> propriété des contrôles Web individuels. Par défaut, cette propriété retourne « aspNetDisabled ».  
  
 Lorsque <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> est substituée dans une classe dérivée pour retourner `false`, la valeur de la <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> propriété est restituée sous forme de la valeur de la `class` attribut de l’élément HTML pour le contrôle. Dans ce cas, s’il existe une valeur dans le <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propriété, les deux classes CSS seront appliquées à l’élément HTML restitué. Le `class` attribut se compose de la valeur de la <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> propriété suivie de la valeur de la <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propriété, séparée par un espace.  
  
 Cette propriété est statique, ce qui signifie que vous pouvez le définir uniquement pour la <xref:System.Web.UI.WebControls.WebControl> classe. La valeur que vous affectez la valeur est utilisée pour tous les contrôles dans une application Web. Vous ne pouvez pas spécifier des valeurs différentes pour des contrôles individuels.  
  
 Si vous souhaitez utiliser un nom de classe différent de la valeur par défaut de « aspNetDisabled », vous placez en général, le code pour ce faire le `Application_Start` méthode du fichier Global.asax, comme indiqué dans l’exemple suivant :  
  
```vb  
Private Sub Application_Start(  
    ByVal sender As Object, ByVal e As EventArgs)  
    WebControl.DisabledCssClass = "customDisabledClassName"  
End Sub  
```  
  
```csharp  
void Application_Start(object sender, EventArgs e)  
{  
    WebControl.DisabledCssClass = "customDisabledClassName";  
}  
```  
  
   
  
## Examples  
 L’exemple suivant montre le rendu HTML pour désactivé <xref:System.Web.UI.WebControls.Label> contrôler quand le <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> propriété est `false`, lorsque le <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> propriété a sa valeur par défaut et à quel moment le <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propriété est vide.  
  
 `<span id="Label1" class="aspNetDisabled">Test</span>`  
  
 L’exemple suivant montre HTML restitué dans les mêmes conditions sauf que le <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propriété a la valeur « SampleStyle »`:`  
  
 `<span id="Label1" class="aspNetDisabled SampleStyle">Test</span>`  
  
 Pour plus d'informations, consultez la propriété <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.WebControls.WebControl.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le contrôle serveur Web est activé.</summary>
        <value><see langword="true" /> si le contrôle est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propriété d’un contrôle est définie sur `false`, généralement estompé. Si le contrôle est un élément d’entrée, le navigateur empêche l’utilisateur d’activant ou en tapant qu’il contient. Les éléments HTML restitués pour un contrôle serveur sont marqués comme désactivés en définissant leur `disabled` attribut ou leur CSS `class` attribut. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> et <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.  
  
 Cette propriété se propage vers le bas de la hiérarchie des contrôles. Si vous désactivez un contrôle conteneur, les contrôles enfants dans ce conteneur sont également désactivées. Pour plus d'informations, consultez la propriété <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>.  
  
> [!NOTE]
>  Dans un contrôle composite personnalisé, ce comportement d’héritage ne s’applique pas aux contrôles qui le n'ont pas encore créé leurs contrôles enfants. Vous devez définir l’état activé de l’enfant contrôles lorsqu’ils sont créés, ou remplaceront le <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propriété pour appeler le <xref:System.Web.UI.Control.EnsureChildControls%2A> (méthode).  
  
> [!NOTE]
>  Désactivation d’un contrôle empêche uniquement l’interaction avec le contrôle par l’utilisateur via l’interface utilisateur du navigateur. Il est possible pour un utilisateur de créer une demande qui envoie une publication (postback) qui est traitée par la page même si les contrôles sur la page sont désactivées. Avant de traiter une demande de publication, vérifiez que le contrôle est activée et visible.  
  
 Pas tous les contrôles prennent en charge cette propriété. Consultez les contrôles pour plus d’informations.  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [thèmes ASP.NET et des apparences](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 L’exemple suivant montre comment activer et désactiver un <xref:System.Web.UI.WebControls.TextBox> contrôle, hérité de la <xref:System.Web.UI.WebControls.WebControl> classe de base, en définissant son <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propriété par programmation.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si directement copiées dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide ayant une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Enabled Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Enabled Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.EnsureChildControls" />
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">Contrôles serveur ASP.NET et les fonctionnalités du navigateur</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebControl.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si les thèmes s'appliquent à ce contrôle.</summary>
        <value><see langword="true" /> pour utiliser les thèmes ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> propriété indique si les thèmes sont activés pour un contrôle spécifié. Lorsque le <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> propriété est `true`, le répertoire de thème de l’application est recherché des apparences de contrôle à appliquer. Si aucune apparence pour le contrôle particulier n’existe dans le répertoire du thème, les apparences ne sont pas appliquées.  
  
 Lorsque le <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> propriété est `false`, le répertoire de thème n’est pas recherché et le contenu de la <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> propriété n’est pas utilisée.  
  
 Un contrôle peut substituer le <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> : valeur définie par son contrôle parent ou la page contenante. Par exemple, si un contrôle parent a la <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> propriété définie sur `false`, vous pouvez appliquer de manière sélective des thèmes aux contrôles enfants qui sont contenus dans le parent en définissant le <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> propriété `true` sur les enfants individuels contrôles.  
  
 Thèmes peuvent être activés à la page, le conteneur ou le niveau de contrôle. Lorsque les thèmes sont désactivés au niveau de la page ou du conteneur, les thèmes sont désactivés pour tous les contrôles qui sont contenus par la page ou le conteneur.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SkinID" />
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3(v=vs.100)">Vue d’ensemble des thèmes ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Web.UI.WebControls.FontInfo" Usage="System.Web.UI.WebControls.WebControl.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les propriétés de police associées au contrôle serveur Web.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FontInfo" /> qui représente les propriétés de police du contrôle serveur Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.Font%2A> propriété pour spécifier les propriétés de police du contrôle serveur Web. Cette propriété comprend des sous-propriétés qui sont accessibles de manière déclarative sous la forme de `Property-Subproperty` (par exemple `Font-Bold`) ou par programme sous la forme de `Property.Subproperty` (par exemple `Font.Bold`).  
  
 Alors que les autres sous-propriétés seront affiche dans les navigateurs avant Microsoft Internet Explorer version 4 pour tous les contrôles. Ils sont : <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>, <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>, <xref:System.Web.UI.WebControls.FontInfo.Name%2A>, <xref:System.Web.UI.WebControls.FontInfo.Names%2A>, <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>, <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>, et <xref:System.Web.UI.WebControls.FontInfo.Size%2A> (mais uniquement nommé telles que les tailles de police, `Small`, `Smaller`, et ainsi de suite, fonctionneront).  
  
> [!NOTE]
>  Bien que ces sous-propriétés soient rendues dans les navigateurs avant Microsoft Internet Explorer version 4, le code HTML qui est rendu est différent de celui des navigateurs plus récents. Au lieu du rendu en tant qu’attributs de style, ces sous-propriétés sont rendues en tant qu’éléments HTML, tels que `<b>` et `<font>`.  
  
 Est la seule sous-propriété qui n’est pas rendue dans les navigateurs de versions antérieures pour tous les contrôles <xref:System.Web.UI.WebControls.FontInfo.Overline%2A>.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WebControl.Font%2A> propriété pour recueillir des informations de police à partir d’un <xref:System.Web.UI.WebControls.Label> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si directement copiées dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide ayant une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.Font Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Font Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Font Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Font Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.FontInfo" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">Contrôles serveur ASP.NET et les fonctionnalités du navigateur</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la couleur de premier plan (généralement la couleur du texte) du contrôle serveur Web.</summary>
        <value><see cref="T:System.Drawing.Color" /> qui représente la couleur de premier plan du contrôle. La valeur par défaut est <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> propriété pour spécifier la couleur de premier plan du contrôle serveur Web. La couleur de premier plan est généralement la couleur du texte. Cette propriété est rendue dans les navigateurs antérieurs à Microsoft Internet Explorer version 4 pour tous les contrôles, sauf le <xref:System.Web.UI.WebControls.Image>, <xref:System.Web.UI.WebControls.AdRotator>, <xref:System.Web.UI.WebControls.HyperLink> et <xref:System.Web.UI.WebControls.LinkButton>.  
  
> [!NOTE]
>  Sur les navigateurs antérieurs à Microsoft Internet Explorer version 4, cette propriété est rendue en tant que `<font>` balises.  
  
   
  
## Examples  
 L’exemple suivant illustre comment définir le <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> propriété de la <xref:System.Web.UI.WebControls.Table> contrôle, hérité de la <xref:System.Web.UI.WebControls.WebControl> classe de base.  
  
 [!code-aspx-csharp[Classic WebControl.ForeColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Drawing.Color" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">Contrôles serveur ASP.NET et les fonctionnalités du navigateur</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Web.UI.WebControls.WebControl.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le contrôle a des attributs définis.</summary>
        <value><see langword="true" /> si le contrôle a des attributs définis ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebControl.HasAttributes%2A> retourne de la propriété `true` lorsque le <xref:System.Web.UI.WebControls.WebControl> instance a des paires nom/valeur d’attribut. Les paires d’attribut peuvent être définies dans la propriété ou dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Height : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la hauteur du contrôle serveur Web.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Unit" /> qui représente la hauteur du contrôle. La valeur par défaut est <see cref="F:System.Web.UI.WebControls.Unit.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.Height%2A> propriété pour spécifier la hauteur du contrôle serveur Web.  
  
> [!NOTE]
>  Cette propriété ne rend pas pour tous les contrôles dans les navigateurs antérieurs à Microsoft Internet Explorer version 4. Les contrôles qui ne rendent pas cette propriété dans les anciens navigateurs incluent <xref:System.Web.UI.WebControls.Label>, <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>et des contrôles de validation. Le <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> et <xref:System.Web.UI.WebControls.DataList> ne s’affichent également pas cette propriété dans les anciens navigateurs lorsque leurs `RepeatLayout` propriété est définie sur `RepeatLayout.Flow`. En outre, seuls les types d’unités de `Pixel` et `Percentage` sont pris en charge dans les anciens navigateurs.  
  
 Étant donné que cette propriété est du code HTML standard, les contrôles serveur Web qui s’affichent en tant que table, tel que <xref:System.Web.UI.WebControls.Table> et <xref:System.Web.UI.WebControls.DataGrid>, ne pas prennent en charge cette propriété dans les navigateurs antérieurs à Microsoft Internet Explorer version 4.  
  
> [!NOTE]
>  Pour définir le <xref:System.Web.UI.WebControls.WebControl.Height%2A> propriété à une unité de type autre que la valeur par défaut de `Pixel`, vous devez créer un nouveau type d’unité spécifique au type d’unité souhaité. Par exemple, pour définir d’un contrôle <xref:System.Web.UI.WebControls.WebControl.Height%2A> propriété une valeur de pourcentage de 100, vous pouvez procédez comme suit :  
>   
>  `myWebControl.Width = Unit.Percentage(100);`  
>   
>  Pour plus d’informations sur les types d’unités disponibles pour le <xref:System.Web.UI.WebControls.WebControl.Height%2A> propriété, consultez la <xref:System.Web.UI.WebControls.Unit> classe.  
  
   
  
## Examples  
 L’exemple suivant montre comment définir de façon déclarative le <xref:System.Web.UI.WebControls.WebControl.Height%2A> propriété de la <xref:System.Web.UI.WebControls.Table> contrôle, hérité de la <xref:System.Web.UI.WebControls.WebControl> classe de base.  
  
 [!code-aspx-csharp[Classic WebControl.Height Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Height Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Height Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Height Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Une valeur négative a été affectée à la hauteur. </exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Label" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLink" />
        <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">Contrôles serveur ASP.NET et les fonctionnalités du navigateur</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="protected internal bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Web.UI.WebControls.WebControl.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le contrôle est activé.</summary>
        <value><see langword="true" /> si l'objet <see cref="T:System.Web.UI.WebControls.WebControl" /> est activé ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est en lecture seule. Si vous souhaitez désactiver un contrôle, vous définissez son <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propriété `false`.  
  
 Si un contrôle n’est pas contenu par un autre contrôle, la valeur de la <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> propriété est toujours la même que la valeur de la <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propriété.  
  
 Le <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> propriété a une valeur différente de la <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propriété si un contrôle est un enfant d’un autre contrôle et si toutes les conditions suivantes sont remplies :  
  
-   La valeur de la <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propriété ou le <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> propriété du contrôle parent est `false`.  
  
-   Le <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propriété du contrôle enfant est définie sur `true`.  
  
 Dans ce cas, le contrôle enfant hérite de l’état désactivé du contrôle parent. Le <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> propriété du contrôle enfant retourne `false` pour indiquer que le contrôle est désactivé même si le contrôle enfant n’a pas été explicitement désactivé en définissant son <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propriété `false`. Le contrôle parent lui-même peut avoir son <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propriété définie sur `true` mais peut hériter de l’état désactivé de son parent et ainsi de suite.  
  
 Lorsque ASP.NET restitue des éléments HTML pour un contrôle serveur, il marque les éléments comme étant désactivés en définissant leur `disabled` attribut ou leur CSS `class` attribut. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> et <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="webControl.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Objet représentant l'état du contrôle à restaurer.</param>
        <summary>Restaure les informations d'état d'affichage à partir d'une précédente requête enregistrées avec la méthode <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est principalement utilisée par l’infrastructure .NET Framework et n’est pas destinée à être utilisée directement depuis votre code. Toutefois, les développeurs de contrôles peuvent substituer cette méthode pour spécifier comment un contrôle serveur personnalisé restaure son état d’affichage. Pour plus d’informations, consultez [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 Le <xref:System.Web.UI.WebControls.WebControl.LoadViewState%2A> méthode restaure les informations d’état d’affichage qui a été enregistrées lors d’une précédente <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> demande. Le <xref:System.Web.UI.WebControls.WebControl> classe substitue à la base de <xref:System.Web.UI.Control.LoadViewState%2A> méthode pour gérer la <xref:System.Web.UI.Control.ViewState%2A>, <xref:System.Web.UI.WebControls.WebControl.Style%2A>, et <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> propriétés.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">État du contrôle vs. Exemple de l’état d’affichage</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Vue d’ensemble de gestion de l’état de ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Introduction au Cycle de vie de Page ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="MergeStyle">
      <MemberSignature Language="C#" Value="public void MergeStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberSignature Language="F#" Value="member this.MergeStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="webControl.MergeStyle s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s"><see cref="T:System.Web.UI.WebControls.Style" /> qui représente le style à copier.</param>
        <summary>Copie tous les éléments non vides du style spécifié vers le contrôle Web, mais ne remplace aucun élément de style existant du contrôle. Cette méthode est principalement utilisée par des développeurs de contrôles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> méthode pour fusionner un style avec le style d’un <xref:System.Web.UI.WebControls.DataGrid> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si directement copiées dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide ayant une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[WebControlMergeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlMergeStyle/CS/webcontrolmergestylecs.aspx#1)]
 [!code-aspx-vb[WebControlMergeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlMergeStyle/VB/webcontrolmergestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objet <see cref="T:System.Web.UI.HtmlTextWriter" /> qui reçoit le contenu du contrôle.</param>
        <summary>Génère le rendu du contrôle via le writer HTML spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebControl.Render%2A> méthode est principalement utilisée par les développeurs de contrôles.  
  
 Le <xref:System.Web.UI.WebControls.WebControl.Render%2A> méthode envoie le contrôle Web spécifié <xref:System.Web.UI.HtmlTextWriter> instance. Substituez cette méthode pour envoyer votre contrôle serveur personnalisé au client.  
  
 Le <xref:System.Web.UI.WebControls.WebControl.Render%2A> méthode appelle d’abord la <xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A> (méthode), puis le <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> (méthode) et enfin la <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A> méthode pour envoyer le contrôle au client.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> qui représente le flux de sortie utilisé pour restituer le contenu HTML sur le client.</param>
        <summary>Génère le rendu de la balise d'ouverture HTML du contrôle via le writer spécifié. Cette méthode est principalement utilisée par des développeurs de contrôles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ceci est rendu public pour d’autres contrôles peuvent rendre plusieurs contrôles entre les balises d’ouverture et fermeture d’un contrôle serveur Web.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> qui représente le flux de sortie utilisé pour restituer le contenu HTML sur le client.</param>
        <summary>Génère le rendu du contenu du contrôle via le writer spécifié. Cette méthode est principalement utilisée par des développeurs de contrôles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Remplacer le <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> méthode pour restituer le contenu du contrôle entre les balises de début et de fin. L’implémentation par défaut de cette méthode restitue les enfants de contrôles.  
  
 Si votre contrôle a des contrôles enfants, vous devez appeler la base de <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> méthode ou appelez le <xref:System.Web.UI.Control.RenderChildren%2A> au point où vous souhaitez que les contrôles enfants doivent être rendus au writer de texte.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> qui représente le flux de sortie utilisé pour restituer le contenu HTML sur le client.</param>
        <summary>Génère le rendu de la balise de fermeture HTML du contrôle via le writer spécifié. Cette méthode est principalement utilisée par des développeurs de contrôles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ceci est rendu public pour d’autres contrôles peuvent rendre plusieurs contrôles entre les balises d’ouverture et fermeture d’un contrôle serveur Web.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="webControl.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre les états qui ont été modifiés après l’appel de la méthode <see cref="M:System.Web.UI.WebControls.Style.TrackViewState" />.</summary>
        <returns>Objet qui contient l’état d’affichage actuel du contrôle ; sinon, si aucun état d’affichage n’est associé au contrôle, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> méthode est principalement utilisée par les développeurs de contrôles.  
  
 État d’affichage est les valeurs cumulées des propriétés d’un contrôle serveur. Ces valeurs sont automatiquement placées dans le <xref:System.Web.UI.Control.ViewState%2A> propriété pour le contrôle serveur, qui est une instance de la <xref:System.Web.UI.StateBag> classe. Le <xref:System.Web.UI.Control.ViewState%2A> valeur de propriété est ensuite conservée dans un objet string après l’enregistrement phase du cycle de vie pour le contrôle serveur. Pour plus d’informations, consultez [vue d’ensemble du Cycle de vie de Page ASP.NET](https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 Lorsque l’état d’affichage est enregistré, cet objet de chaîne est retourné au client en tant que variable qui est stockée dans un HTML masqué `input` élément. Lorsque vous créez des contrôles serveur personnalisés, vous pouvez améliorer l’efficacité en substituant la <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> (méthode) et la modification de la <xref:System.Web.UI.Control.ViewState%2A> propriété de votre contrôle serveur. Pour plus d’informations, consultez [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">État du contrôle vs. Exemple de l’état d’affichage</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Vue d’ensemble de gestion de l’état de ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Introduction au Cycle de vie de Page ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebControl.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’apparence à appliquer au contrôle.</summary>
        <value>Nom de l’apparence à appliquer au contrôle. La valeur par défaut est <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les apparences disponibles pour un contrôle sont contenus dans un ou plusieurs fichiers d’apparence dans un répertoire de thème. Le <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> propriété spécifie les apparences à appliquer au contrôle. Une apparence est spécifique à un contrôle particulier ; Vous ne pouvez pas partager le paramètre apparence entre les contrôles de types différents.  
  
 Si vous ne définissez pas le <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> propriété, un contrôle utilise l’apparence par défaut si elle a été définie. Par exemple, si une apparence sans ID est définie pour un <xref:System.Web.UI.WebControls.Image> contrôler, puis elle s’applique à tous les <xref:System.Web.UI.WebControls.Image> contrôles qui ne référencent pas explicitement une apparence par ID et qui ne sont pas définies pour désactiver les thèmes. Si une apparence avec ID est définie pour un <xref:System.Web.UI.WebControls.Image> contrôler, puis cette apparence s’applique uniquement à <xref:System.Web.UI.WebControls.Image> contrôles dont <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> est défini à cet ID.  
  
 Si les fichiers d’apparence dans un répertoire de thème ne contiennent pas d’apparence avec spécifié <xref:System.Web.UI.WebControls.WebControl.SkinID%2A>, un <xref:System.ArgumentException> exception est levée lors de l’exécution.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'apparence spécifiée dans la propriété <see cref="P:System.Web.UI.WebControls.WebControl.SkinID" /> n'existe pas dans le thème.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3">Présentation des thèmes ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CssStyleCollection Style" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Style" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Style As CssStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CssStyleCollection ^ Style { System::Web::UI::CssStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Web.UI.CssStyleCollection" Usage="System.Web.UI.WebControls.WebControl.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection d'attributs de texte qui sont rendus en tant qu'attribut de style sur la balise extérieure d'un contrôle serveur Web.</summary>
        <value><see cref="T:System.Web.UI.CssStyleCollection" /> qui contient les attributs de style HTML à rendre sur la balise extérieure du contrôle serveur Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.Style%2A> regroupement à gérer les attributs de style rendus dans la balise extérieure du contrôle serveur Web. Cette propriété est rendue sur tous les navigateurs pour tous les contrôles.  
  
> [!NOTE]
>  Les navigateurs qui ne prennent pas en charge les attributs de style ignorent le code HTML restitué.  
  
 Les valeurs de style définies via les propriétés de style fortement typées (par exemple, `BackColor="Red"`) remplacera automatiquement une valeur correspondante dans cette collection.  
  
 Les valeurs définies dans cette collection ne sont pas automatiquement répercutées par les propriétés de style fortement typées.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WebControl.Style%2A> propriété pour afficher ou masquer un <xref:System.Web.UI.WebControls.Label> contrôle sur une page.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si directement copiées dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide ayant une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.Style Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Style Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Style Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDisabledAttribute : bool" Usage="System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le contrôle doit définir l'attribut <see langword="disabled" /> de l'élément HTML rendu avec la valeur « disabled » quand la propriété <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> du contrôle a la valeur <see langword="false" />.</summary>
        <value>Toujours <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans les classes dérivées, cette propriété indique comment ASP.NET doit restituer HTML pour un contrôle lorsque le contrôle est désactivé.  
  
## <a name="disabling-aspnet-web-controls"></a>Contrôles Web d’ASP.NET en désactivant la  
 Lorsque le <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propriété d’un contrôle ASP.NET est définie sur `false` (autrement dit, lorsque le contrôle est désactivé), l’objectif est que ASP.NET doit restituer le contrôle dans la page, mais afficher dans un état désactivé (généralement estompé). Si un contrôle parent est désactivé, les enfants de ce contrôle sont également affichés comme étant désactivés. Dans de ce cas, le contrôle enfant <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> propriété est définie sur `false`, même si son <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propriété peut être définie sur `true`.  
  
 Dans ASP.NET 3.5 et versions antérieures, lors d’un contrôle <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> propriété est `false`, ASP.NET définit les `disabled` l’attribut « disabled » dans l’élément HTML qu’elle affiche pour le contrôle. Toutefois, la norme HTML 4.01 autorise le `disabled` attribut uniquement sur certains éléments qui sont utilisés pour l’entrée utilisateur. Par exemple, le `disabled` attribut est autorisé pour `input` éléments, mais pas pour `span` éléments.  
  
 La plupart des navigateurs prennent en charge une apparence désactivée par défaut pour afficher uniquement les éléments qui ont `disabled` attributs. Toutefois, afin de respecter les normes HTML, par défaut, ASP.NET 4 omet les attributs non valides.  
  
## <a name="how-the-supportsdisabledattribute-property-is-used"></a>Utilisation de la propriété SupportsDisabledAttribute  
 Si le <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> propriété est `true`, ASP.NET restitue un `disabled` attribut lorsque le contrôle est désactivé. Si cette propriété est `false`, ASP.NET restitue un `class` attribut lorsque le contrôle est désactivé.  
  
 Les classes dérivées remplacer cette propriété pour retourner `false` si toutes les conditions suivantes sont remplies :  
  
-   Le contrôle restitue un élément HTML qui ne prend pas en charge la `disabled` attribut.  
  
-   Le <xref:System.Web.UI.Control.RenderingCompatibility%2A> propriété indique un numéro de version d’ASP.NET inférieur à 4.0.  
  
 Le <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> propriété n’indique pas nécessairement si l’élément HTML restitué pour un contrôle prend en charge (autorise) le `disabled` attribut. Si un contrôle <xref:System.Web.UI.Control.RenderingCompatibility%2A> propriété indique un numéro de version d’ASP.NET inférieur à 4.0, la valeur du contrôle <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> propriété peut retourner `true` même si le rendu HTML ne prend pas en charge la `disabled` attribut.  
  
## <a name="backward-compatibility-for-disabled-controls"></a>Compatibilité descendante pour les contrôles désactivés  
 Lorsque vous utilisez Visual Studio pour mettre à niveau un projet Web vers ASP.NET 4 à partir d’une version antérieure, Visual Studio définit automatiquement le `controlRenderingCompatibilityVersion` attribut dans le fichier Web.config (qui affecte le <xref:System.Web.UI.Control.RenderingCompatibility%2A> propriété) au numéro de version antérieur. Étant donné que le <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> propriété retourne toujours `true` lorsque le <xref:System.Web.UI.Control.RenderingCompatibility%2A> propriété est inférieure à 4.0, les contrôles Web pour le rendu HTML pour les contrôles désactivés comme ils le faisaient dans la version antérieure. Si vous souhaitez un site Web mis à niveau pour le rendu HTML à l’aide de l’algorithme introduit dans ASP.NET 4, vous pouvez modifier ou supprimer la `controlRenderingCompatibilityVersion` attribut. Pour plus d'informations, consultez la propriété <xref:System.Web.UI.Control.RenderingCompatibility%2A>.  
  
## <a name="setting-a-disabled-appearance-by-using-css"></a>Définition d’une apparence désactivée à l’aide de CSS  
 Si le <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> propriété d’un contrôle est `false` et le contrôle est désactivé, ASP.NET définit les `class` attribut de l’élément HTML restitué à la valeur de la <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> propriété. La valeur par défaut de la <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> propriété est « aspNetDisabled ».  
  
 Pour fournir une apparence désactivée pour les contrôles désactivés, vous devez définir une règle CSS pour la classe qui est représentée par la valeur de la <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> propriété.  
  
 L’élément HTML restitué pour un contrôle peut avoir plusieurs valeurs son `class` attribut s’il existe une valeur dans sa <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propriété. Pour plus d'informations, consultez la propriété <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>.  
  
   
  
## Examples  
 L’exemple suivant présente le balisage pour désactivé <xref:System.Web.UI.WebControls.Label> contrôle :  
  
 `<asp:Label id="Label1" runat="server" Text="Test" Enabled="false"/>`  
  
 Dans ASP.NET 3.5 et versions antérieures, ce balisage restitue le code HTML suivant :  
  
 `<span id="Label1" disabled="disabled">Test</span>`  
  
 Dans ASP.NET 4, si la valeur de la <xref:System.Web.UI.Control.RenderingCompatibility%2A> propriété est 4.0 ou ultérieure et si le <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> propriété est définie sur sa valeur par défaut, le même balisage restitue le code HTML suivant :  
  
 `<span id="Label1" class="aspNetDisabled">Test</span>`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (name As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ name) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l'attribut.</param>
        <summary>Obtient un attribut du contrôle Web avec le nom spécifié.</summary>
        <returns>Valeur de l'attribut.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23GetAttribute%2A> méthode est une implémentation de membre d’interface explicite. Il peut être utilisé uniquement lorsque l’instance de la <xref:System.Web.UI.WebControls.WebControl> classe est castée en un <xref:System.Web.UI.IAttributeAccessor> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (name As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ name, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Composant de nom de la paire nom-valeur d'attribut.</param>
        <param name="value">Composant de valeur de la paire nom-valeur d'attribut.</param>
        <summary>Affecte au nom et à la valeur spécifiés un attribut du contrôle Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23SetAttribute%2A> méthode est une implémentation de membre d’interface explicite. Il peut être utilisé uniquement lorsque l’instance de la <xref:System.Web.UI.WebControls.WebControl> classe est castée en un <xref:System.Web.UI.IAttributeAccessor> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public virtual short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TabIndex As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property short TabIndex { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int16 with get, set" Usage="System.Web.UI.WebControls.WebControl.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'index de tabulation du contrôle serveur Web.</summary>
        <value>Index de tabulation du contrôle serveur Web. La valeur par défaut, <see langword="0" />, indique que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> propriété pour spécifier ou déterminer l’index de tabulation d’un contrôle de serveur Web sur la page Web Forms. Quand vous appuyez sur la `Tab` clé, l’ordre dans lequel les contrôles serveur Web recevoir le focus est déterminé par le <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> propriété de chaque contrôle. Lorsqu’une page est initialement chargée, le premier élément qui reçoit le focus lorsque la `Tab` touche est enfoncée est la barre d’adresses. Ensuite, les contrôles sur la page Web Forms sont Selectable dans l’ordre croissant, basé sur la valeur de la <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> propriété de chaque contrôle, en commençant par la plus petite valeur différente de zéro valeur positive. Si plusieurs contrôles partagent le même index de tabulation, les contrôles reçoivent le focus dans l’ordre qu’ils sont déclarés dans la page Web Forms. Enfin, les contrôles qui ont un index de tabulation égal à zéro sont Selectable dans l’ordre qu’ils sont déclarés.  
  
> [!NOTE]
>  Seuls les contrôles avec un index de tabulation différent de zéro rendent la `tabindex` attribut.  
  
 Vous pouvez supprimer un contrôle serveur Web à partir de l’ordre de tabulation en définissant le <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> propriété à une valeur négative.  
  
> [!NOTE]
>  Cette propriété est prise en charge uniquement dans Internet Explorer 4 et versions ultérieures.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> propriété de la <xref:System.Web.UI.WebControls.WebControl> pour définir l’ordre de tabulation des contrôles sur la page.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si directement copiées dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide ayant une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.TabIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.TabIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'index de tabulation spécifié n'est pas compris entre -32768 et 32767.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">Contrôles serveur ASP.NET et les fonctionnalités du navigateur</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.WebControl.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur <see cref="T:System.Web.UI.HtmlTextWriterTag" /> qui correspond à ce contrôle serveur Web. Cette propriété est principalement utilisée par des développeurs de contrôles.</summary>
        <value>Une des valeurs d'énumération <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> propriété afin de déterminer la <xref:System.Web.UI.HtmlTextWriterTag> valeur qui est associée au contrôle serveur Web. Cette propriété est principalement utilisée par des développeurs de contrôles.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected virtual string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ TagName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string" Usage="System.Web.UI.WebControls.WebControl.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de la balise du contrôle. Cette propriété est principalement utilisée par des développeurs de contrôles.</summary>
        <value>Nom de la balise de contrôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.TagName%2A> propriété afin de déterminer le nom de la balise du contrôle associé à ce contrôle de serveur Web. Cette propriété est principalement utilisée par des développeurs de contrôles.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public virtual string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.WebControl.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte affiché quand le pointeur de la souris est positionné sur le contrôle serveur Web.</summary>
        <value>Texte affiché quand le pointeur de la souris est positionné sur le contrôle serveur Web. La valeur par défaut est <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> propriété pour spécifier le texte personnalisé qui s’affiche lorsque le pointeur de la souris pointe sur le contrôle serveur Web.  
  
> [!NOTE]
>  Cette propriété est rendue pour tous les navigateurs. Toutefois, Microsoft Internet Explorer affiche cette propriété comme une info-bulle. Tous les autres navigateurs ignore cette propriété.  
  
 La valeur de cette propriété, quand elle est définie, peut être enregistrée automatiquement dans un fichier de ressources à l’aide d’un outil de concepteur. Pour plus d’informations, consultez <xref:System.ComponentModel.LocalizableAttribute> et [globalisation et localisation](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 L’exemple suivant illustre comment définir le <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> propriété sur le <xref:System.Web.UI.WebControls.Button> contrôle, qui est hérité de la <xref:System.Web.UI.WebControls.WebControl> classe de base.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si directement copiées dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide ayant une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">Contrôles serveur ASP.NET et les fonctionnalités du navigateur</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="webControl.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Force le contrôle à suivre les modifications apportées à son état d’affichage afin qu’elles puissent être stockées dans la propriété <see cref="P:System.Web.UI.Control.ViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> méthode est principalement utilisée par les développeurs de contrôles.  
  
 Le <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> marque le point de départ commencer le suivi et l’enregistrement des modifications apportées à l’état d’affichage pour le contrôle. Le <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> méthode est appelée automatiquement par ASP.NET lorsqu’un contrôle serveur est initialisé.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">État du contrôle vs. Exemple de l’état d’affichage</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Vue d’ensemble de gestion de l’état de ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Introduction au Cycle de vie de Page ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Width : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la largeur du contrôle serveur web.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Unit" /> qui représente la largeur du contrôle. La valeur par défaut est <see cref="F:System.Web.UI.WebControls.Unit.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebControl.Width%2A> propriété pour spécifier la largeur du contrôle serveur Web.  
  
> [!NOTE]
>  Cette propriété ne rend pas pour tous les contrôles dans les navigateurs antérieurs à Microsoft Internet Explorer version 4. Les contrôles qui ne rendent pas cette propriété dans les anciens navigateurs incluent <xref:System.Web.UI.WebControls.Label>, <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>et des contrôles de validation. Le <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> et <xref:System.Web.UI.WebControls.DataList> ne s’affichent également pas cette propriété dans les anciens navigateurs lorsque leurs `RepeatLayout` propriété est définie sur `RepeatLayout.Flow`. En outre, seuls les types d’unités de `Pixel` et `Percentage` sont pris en charge dans les anciens navigateurs.  
  
 Étant donné que cette propriété est du code HTML standard, les contrôles serveur Web qui s’affichent en tant que table, tel que <xref:System.Web.UI.WebControls.Table> et <xref:System.Web.UI.WebControls.DataGrid>, ne pas prennent en charge cette propriété dans les navigateurs antérieurs à Microsoft Internet Explorer version 4.  
  
> [!NOTE]
>  Pour définir le <xref:System.Web.UI.WebControls.WebControl.Width%2A> propriété de façon déclarative à une unité de type autre que la valeur par défaut de `Pixel`, vous devez créer un nouveau type d’unité spécifique au type d’unité souhaité. Par exemple, pour définir d’un contrôle <xref:System.Web.UI.WebControls.WebControl.Width%2A> propriété une valeur de pourcentage de 100, vous pouvez procédez comme suit :  
>   
>  `myWebControl.width = Unit.Percentage(100);`  
>   
>  Pour plus d’informations sur les types d’unités disponibles pour le <xref:System.Web.UI.WebControls.WebControl.Width%2A> propriété, consultez la <xref:System.Web.UI.WebControls.Unit> classe.  
  
   
  
## Examples  
 L’exemple suivant montre comment définir de façon déclarative le <xref:System.Web.UI.WebControls.WebControl.Width%2A> propriété de la <xref:System.Web.UI.WebControls.Table> contrôle, hérité de la <xref:System.Web.UI.WebControls.WebControl> classe de base.  
  
 [!code-aspx-csharp[Classic WebControl.Width Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Width Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Width Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Width Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Une valeur négative a été affectée à la largeur du contrôle serveur Web.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">Contrôles serveur ASP.NET et les fonctionnalités du navigateur</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Développement de contrôles serveur ASP.NET personnalisés</related>
      </Docs>
    </Member>
  </Members>
</Type>