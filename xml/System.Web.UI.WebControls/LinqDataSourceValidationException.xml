<Type Name="LinqDataSourceValidationException" FullName="System.Web.UI.WebControls.LinqDataSourceValidationException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5dd649cdde12ee01daca4e48606f3bd1727715c6" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37592461" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceValidationException : Exception, System.Web.DynamicData.IDynamicValidatorException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit LinqDataSourceValidationException extends System.Exception implements class System.Runtime.Serialization.ISerializable, class System.Web.DynamicData.IDynamicValidatorException" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceValidationException" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceValidationException&#xA;Inherits Exception&#xA;Implements IDynamicValidatorException" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceValidationException : Exception, System::Web::DynamicData::IDynamicValidatorException" />
  <TypeSignature Language="F#" Value="type LinqDataSourceValidationException = class&#xA;    inherit Exception&#xA;    interface IDynamicValidatorException&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IDynamicValidatorException</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c9f3d-101">Décrit une exception qui s'est produite durant la validation de valeurs nouvelles ou modifiées avant que des valeurs ne soient insérées, mises à jour ou supprimées par un contrôle <see cref="T:System.Web.UI.WebControls.LinqDataSource" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c9f3d-101">Describes an exception that occurred during validation of new or modified values before values are inserted, updated, or deleted by a <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f3d-102">Le <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> classe contient des exceptions de type conversion et la propriété d’accesseur Set.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-102">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class contains type conversion and property setter exceptions.</span></span> <span data-ttu-id="c9f3d-103">Toutes les exceptions levées pendant la validation sont contenues dans le <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-103">All of the exceptions that are thrown during validation are contained in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.</span></span> <span data-ttu-id="c9f3d-104">Vous pouvez récupérer chaque exception de validation en effectuant une itération via la <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-104">You can retrieve each validation exception by iterating through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.</span></span>  
  
 <span data-ttu-id="c9f3d-105">En général, gérer des exceptions dans le <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, et <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> événements.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-105">You typically handle exceptions in the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, and <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> events.</span></span> <span data-ttu-id="c9f3d-106">Si une exception de validation est levée, le `Exception` propriété de la <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, ou <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> objet contient un <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> objet.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-106">If a validation exception is thrown, the `Exception` property of the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, or <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> object.</span></span> <span data-ttu-id="c9f3d-107">Si aucune exception n’est levée, le `Exception` contient de la propriété `null`.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-107">If no exception is thrown, the `Exception` property contains `null`.</span></span>  
  
 <span data-ttu-id="c9f3d-108">Pour gérer les exceptions de validation, créez un gestionnaire pour le <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, ou <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> événement.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-108">To handle validation exceptions, create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="c9f3d-109">Dans le Gestionnaire d’événements, vérifiez si le `Exception` de la classe d’argument d’événement contient une valeur autre que `null`.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-109">In the event handler, check whether the `Exception` property of the event argument class contains a value other than `null`.</span></span> <span data-ttu-id="c9f3d-110">Si le `Exception` propriété n’est pas null, une ou plusieurs exceptions de validation ont été levées et vous pouvez récupérer chaque exception de validation dans le <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-110">If the `Exception` property is not null, one or more validation exceptions were thrown and you can retrieve each validation exception in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span>  
  
 <span data-ttu-id="c9f3d-111">Une exception de validation peut se produire si une valeur ne correspond pas au type de la propriété.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-111">A validation exception can occur if a value does not match the type of the property.</span></span> <span data-ttu-id="c9f3d-112">Par exemple, la mise à jour d’une propriété entière à l’aide des caractères non numériques provoque une exception de validation.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-112">For example, trying to update an integer property by using non-numeric characters causes a validation exception.</span></span> <span data-ttu-id="c9f3d-113">Une classe LINQ to SQL peut également contenir des critères de validation personnalisés qui vous assurer que la propriété contient une valeur qui se trouve dans une plage attendue ou le modèle.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-113">A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f3d-114">L’exemple suivant montre un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.LinqDataSource.Updating> événement.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-114">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="c9f3d-115">Il affiche les messages d’exception de validation en utilisant un <xref:System.Web.UI.WebControls.Label> contrôle.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-115">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c9f3d-116">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9f3d-117">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> avec un message système qui décrit l'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-117">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a system-supplied message that describes the error.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f3d-118">Le message fourni par le système qui décrit l’erreur prend en compte la culture système actuelle.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-118">The system-supplied message that describes the error takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="c9f3d-119">Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-119">The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span>  
  
|<span data-ttu-id="c9f3d-120">Property</span><span class="sxs-lookup"><span data-stu-id="c9f3d-120">Property</span></span>|<span data-ttu-id="c9f3d-121">Value</span><span class="sxs-lookup"><span data-stu-id="c9f3d-121">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="c9f3d-122">`null`.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-122">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="c9f3d-123">Description localisée fournie par le système.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-123">A system-supplied localized description.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceValidationException : string -&gt; System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="new System.Web.UI.WebControls.LinqDataSourceValidationException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c9f3d-124">Message décrivant l'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-124">The message that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9f3d-125">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> avec un message spécifié décrivant l'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-125">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified message that describes the error.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f3d-126">Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-126">The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span>  
  
|<span data-ttu-id="c9f3d-127">Property</span><span class="sxs-lookup"><span data-stu-id="c9f3d-127">Property</span></span>|<span data-ttu-id="c9f3d-128">Value</span><span class="sxs-lookup"><span data-stu-id="c9f3d-128">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="c9f3d-129">`null`.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-129">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="c9f3d-130">Chaîne de message d'erreur spécifiée dans `message`.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-130">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LinqDataSourceValidationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LinqDataSourceValidationException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceValidationException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="new System.Web.UI.WebControls.LinqDataSourceValidationException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="c9f3d-131">Objet qui contient les données sérialisées de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-131">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c9f3d-132">Informations contextuelles sur la source ou la destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-132">Context information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9f3d-133">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> avec des données sérialisées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-133">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f3d-134">Ce constructeur est appelé pendant la désérialisation pour reconstituer l’objet exception transmis sur un flux de données.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-134">This constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message, System.Collections.Generic.IDictionary&lt;string,Exception&gt; innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Collections.Generic.IDictionary`2&lt;string, class System.Exception&gt; innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerExceptions As IDictionary(Of String, Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message, System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ innerExceptions);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceValidationException : string * System.Collections.Generic.IDictionary&lt;string, Exception&gt; -&gt; System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="new System.Web.UI.WebControls.LinqDataSourceValidationException (message, innerExceptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerExceptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c9f3d-135">Message décrivant l'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-135">The message that describes the error.</span>
          </span>
        </param>
        <param name="innerExceptions">
          <span data-ttu-id="c9f3d-136">Collection d'exceptions de validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-136">The collection of validation exceptions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9f3d-137">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> avec un message spécifié décrivant l'erreur et une collection de références aux exceptions internes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-137">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified message that describes the error, and a collection of references to inner exceptions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceValidationException : string * Exception -&gt; System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="new System.Web.UI.WebControls.LinqDataSourceValidationException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c9f3d-138">Message décrivant l'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-138">The message that describes the error.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="c9f3d-139">Exception ayant provoqué l'exception actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-139">The exception that is the cause of the current exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9f3d-140">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> avec un message d'erreur spécifié et une référence à l'exception interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-140">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified error message and a reference to the inner exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f3d-141">Vous utiliserez pas en général ce constructeur, car les exceptions de validation sont stockées dans le <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> propriété, pas le <xref:System.Exception.InnerException%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-141">You typically will not use this constructor because validation exceptions are stored in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property, not the <xref:System.Exception.InnerException%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="linqDataSourceValidationException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="c9f3d-142">Objet qui contient les données d'objet sérialisées pour l'exception levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-142">The object that holds the serialized object data for the exception that is being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c9f3d-143">Informations contextuelles sur la source ou la destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-143">Context information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9f3d-144">Obtient des informations sur l'exception et les ajoute à l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-144">Gets information about the exception and adds it to the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f3d-145">Le <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A> méthode ajoute des informations sur l’exception à la <xref:System.Runtime.Serialization.SerializationInfo> objet qui est ciblé pour la sérialisation.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-145">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization.</span></span> <span data-ttu-id="c9f3d-146">Pendant la désérialisation, l’exception est reconstituée à partir de la <xref:System.Runtime.Serialization.SerializationInfo> qui est transmis au flux.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-146">During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerExceptions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Exception&gt; InnerExceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Exception&gt; InnerExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerExceptions As IDictionary(Of String, Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ InnerExceptions { System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerExceptions : System.Collections.Generic.IDictionary&lt;string, Exception&gt;" Usage="System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicValidatorException.InnerExceptions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9f3d-147">Obtient une ou plusieurs exceptions qui se sont produites lors de la validation de données nouvelles ou modifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-147">Gets one or more exceptions that occurred when new or modified data was being validated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9f3d-148">Collection qui contient les exceptions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9f3d-148">A collection that contains the exceptions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9f3d-149">Le <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection contient toutes les exceptions de validation qui ont été levées pendant la validation des données avant une mise à jour, insérer ou supprimer l’opération.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-149">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection contains all the validation exceptions that were thrown during data validation before an update, insert, or delete operation.</span></span> <span data-ttu-id="c9f3d-150">Une exception de validation peut se produire si une valeur ne correspond pas au type de la propriété.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-150">A validation exception can occur if a value does not match the type of the property.</span></span> <span data-ttu-id="c9f3d-151">Par exemple, si vous essayez de mettre à jour une propriété d’entier à l’aide des caractères non numériques, une exception de validation est levée.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-151">For example, if you try to update an integer property by using non-numeric characters, a validation exception is thrown.</span></span> <span data-ttu-id="c9f3d-152">Une classe LINQ to SQL peut également contenir des critères de validation personnalisés qui vous assurer que la propriété contient une valeur qui se trouve dans une plage attendue ou le modèle.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-152">A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9f3d-153">L’exemple suivant montre un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.LinqDataSource.Updating> événement.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-153">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="c9f3d-154">Il affiche les messages d’exception de validation en utilisant un <xref:System.Web.UI.WebControls.Label> contrôle.</span><span class="sxs-lookup"><span data-stu-id="c9f3d-154">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
                In e.Exception.InnerExceptions  
          Label1.Text &= innerException.Key & ": " & _   
                  innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)   
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
            e.Exception.InnerExceptions)  
        {  
            Label1.Text += innerException.Key + ": " +   
                innerException.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>