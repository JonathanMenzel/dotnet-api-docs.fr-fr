<Type Name="DataList" FullName="System.Web.UI.WebControls.DataList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b116d8116ba258dcd86984d872680f1c4b3a5f6" />
    <Meta Name="ms.sourcegitcommit" Value="e7865e39826e7aaf54da4c7042975153813a31c7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/16/2018" />
    <Meta Name="ms.locfileid" Value="31043824" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataList : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataList extends System.Web.UI.WebControls.BaseDataList implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataList" />
  <TypeSignature Language="VB.NET" Value="Public Class DataList&#xA;Inherits BaseDataList&#xA;Implements INamingContainer, IRepeatInfoUser" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataList : System::Web::UI::WebControls::BaseDataList, System::Web::UI::INamingContainer, System::Web::UI::WebControls::IRepeatInfoUser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IRepeatInfoUser</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contrôle de liste lié aux données qui affiche des éléments à l’aide de modèles.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans cette rubrique :  
  
-   [Introduction](#introduction)  
  
-   [Modèles](#templates)  
  
-   [Personnalisation de l’apparence du contrôle DataList](#customizing_the_appearance_of_the_datalist_control)  
  
-   [Direction de l’affichage et la disposition](#display_direction_and_layout)  
  
-   [Sécurité](#security)  
  
-   [Syntaxe déclarative](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduction  
 Utilisez le <xref:System.Web.UI.WebControls.DataList> liste liée de contrôle pour afficher un définie par le modèle de données. Le <xref:System.Web.UI.WebControls.DataList> contrôle prend en charge la sélection et la modification.  
  
<a name="templates"></a>   
## <a name="templates"></a>Modèles  
 Le contenu de la <xref:System.Web.UI.WebControls.DataList> contrôle peut être manipulée à l’aide de modèles. Le tableau suivant répertorie les modèles pris en charge.  
  
|Nom du modèle|Description |  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>|S’il est défini, fournit le contenu et la disposition des éléments alternés dans le <xref:System.Web.UI.WebControls.DataList>. Si non défini, `ItemTemplate` est utilisé.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>|S’il est défini, il fournit le contenu et la disposition pour l’élément en cours de modification dans le <xref:System.Web.UI.WebControls.DataList>. Si non défini, `ItemTemplate` est utilisé.|  
|<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>|S’il est défini, fournit le contenu et la disposition de la section de pied de page de la <xref:System.Web.UI.WebControls.DataList>. Si ne pas défini, une section de pied de page ne sera pas affichera.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>|S’il est défini, fournit le contenu et la disposition de la section d’en-tête de la <xref:System.Web.UI.WebControls.DataList>. Si ne pas défini, une section d’en-tête ne sera pas affichera.|  
|<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>|Modèle requis qui fournit le contenu et la disposition des éléments dans le <xref:System.Web.UI.WebControls.DataList>.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>|S’il est défini, il fournit le contenu et la disposition pour l’élément actuellement sélectionné dans le <xref:System.Web.UI.WebControls.DataList>. Si non défini, <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> est utilisé.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>|S’il est défini, il fournit le contenu et la disposition pour le séparateur entre les éléments de la <xref:System.Web.UI.WebControls.DataList>. Si non défini, un séparateur ne s’affichera pas.|  
  
 Au minimum, le <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> doit être défini pour afficher les éléments dans le <xref:System.Web.UI.WebControls.DataList> contrôle. Les modèles supplémentaires peuvent être utilisés pour fournir une apparence personnalisée à le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
<a name="customizing_the_appearance_of_the_datalist_control"></a>   
## <a name="customizing-the-appearance-of-the-datalist-control"></a>Personnalisation de l’apparence du contrôle DataList  
 L’apparence de la <xref:System.Web.UI.WebControls.DataList> contrôle peut-être être personnalisé en définissant les propriétés de style pour les différentes parties du contrôle. Le tableau suivant répertorie les propriétés de style différent.  
  
|Propriété de style|Description |  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|Spécifie le style des éléments de remplacement dans le <xref:System.Web.UI.WebControls.DataList> contrôle.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|Spécifie le style de l’élément en cours de modification dans le <xref:System.Web.UI.WebControls.DataList> contrôle.|  
|<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>|Spécifie le style du pied de page dans le <xref:System.Web.UI.WebControls.DataList> contrôle.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>|Spécifie le style de l’en-tête dans la <xref:System.Web.UI.WebControls.DataList> contrôle.|  
|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|Spécifie le style pour les éléments de la <xref:System.Web.UI.WebControls.DataList> contrôle.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|Spécifie le style de l’élément sélectionné dans le <xref:System.Web.UI.WebControls.DataList> contrôle.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>|Spécifie le style pour le séparateur entre les éléments de la <xref:System.Web.UI.WebControls.DataList> contrôle.|  
  
 Vous pouvez également afficher ou masquer des parties différentes du contrôle. Le tableau suivant répertorie les propriétés qui contrôlent les parties sont affichés ou masqués.  
  
|Property|Description |  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>|Affiche ou masque la section de pied de page de la <xref:System.Web.UI.WebControls.DataList> contrôle.|  
|<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>|Affiche ou masque la section d’en-tête de la <xref:System.Web.UI.WebControls.DataList> contrôle.|  
  
<a name="display_direction_and_layout"></a>   
## <a name="display-direction-and-layout"></a>Direction de l’affichage et la disposition  
 La direction de l’affichage d’un <xref:System.Web.UI.WebControls.DataList> contrôle peut être vertical ou horizontal. Définir le <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> propriété pour spécifier la direction de l’affichage.  
  
 La disposition de la <xref:System.Web.UI.WebControls.DataList> est contrôlé par le <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> propriété. Si cette propriété `RepeatLayout.Table` affichera la <xref:System.Web.UI.WebControls.DataList> dans un format de table, tandis que `RepeatLayout.Flow` affiche le <xref:System.Web.UI.WebControls.DataList> sans une structure de table.  
  
<a name="security"></a>   
## <a name="security"></a>Sécurité  
 Le `DataList` contrôle peut contenir des contrôles qui permettent aux utilisateurs d’entrer des informations.  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur.  
  
 Pour plus d’informations sur la sécurité, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [ Validation des entrées d’utilisateur dans les Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Syntaxe déclarative  
  
```  
<asp:DataList  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyField="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditItemIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExtractTemplateRows="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnCancelCommand="CancelCommand event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleteCommand="DeleteCommand event handler"  
    OnDisposed="Disposed event handler"  
    OnEditCommand="EditCommand event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnUnload="Unload event handler"  
    OnUpdateCommand="UpdateCommand event handler"  
    RepeatColumns="integer"  
    RepeatDirection="Horizontal|Vertical"  
    RepeatLayout="Table|Flow"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingItemStyle />  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <EditItemStyle />  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <ItemStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <SelectedItemStyle />  
        <SelectedItemTemplate>  
            <!-- child controls -->  
        </SelectedItemTemplate>  
        <SeparatorStyle />  
        <SeparatorTemplate>  
            <!-- child controls -->  
        </SeparatorTemplate>  
</asp:DataList>  
```  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.DataList> contrôle pour afficher une liste d’éléments à partir d’une source de données.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataList/CS/datalistcs.aspx#1)]
 [!code-aspx-vb[DataList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataList/VB/datalistvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseDataList" />
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour créer et initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.DataList> classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer et initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.DataList> classe.  
  
 [!code-csharp[Classic DataList.DataList Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.DataList Example/CS/source.cs#1)]
 [!code-vb[Classic DataList.DataList Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.DataList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlternatingItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ AlternatingItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les propriétés de style des éléments de remplacement dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui représente les propriétés de style pour les éléments de remplacement dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut est un objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> les éléments de propriété afin de fournir un style personnalisé pour le remplacement dans la <xref:System.Web.UI.WebControls.DataList> contrôle. Les attributs de style courants qui peuvent être ajustés incluent l’alignement du contenu dans la cellule, la couleur d’arrière-plan, police et couleur de premier plan. Fournissez un style différent améliore l’apparence de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Propriétés de style dans la <xref:System.Web.UI.WebControls.DataList> contrôle sont héritées à partir de la propriété de style d’un élément à une autre dans une hiérarchie. Propriétés de style d’élément définies plus bas dans la hiérarchie sont héritées par les propriétés de style d’élément dans la hiérarchie. Par exemple, si vous spécifiez une police rouge pour la <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriété, toutes les autres propriétés de style de l’élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle également aura une police rouge. Cela vous permet de fournir une apparence commune pour le contrôle en définissant une propriété de style d’élément unique. Vous pouvez remplacer les paramètres de style hérités d’une propriété de style d’élément qui est plus élevé dans la hiérarchie en définissant ses propriétés de style. Par exemple, vous pouvez spécifier une police bleue pour le <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propriété, en substituant la police rouge spécifiée dans le <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriété. Le tableau suivant répertorie l’ordre hiérarchique du plus élevé au plus bas.  
  
|Priorité|Propriété de style|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Pour spécifier un style personnalisé pour les éléments de remplacement, placez le `<AlternatingItemStyle>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez ensuite répertorier les attributs de style dans l’ouverture `<AlternatingItemStyle>` balise.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propriété pour spécifier une couleur d’arrière-plan différente pour les éléments alternés dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le modèle pour les éléments de remplacement dans <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objet <see cref="T:System.Web.UI.ITemplate" /> qui contient le modèle pour les éléments de remplacement dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> propriété pour contrôler le contenu des éléments alternés dans le <xref:System.Web.UI.WebControls.DataList> contrôle. L’apparence des éléments de remplacement est contrôlée par le <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propriété.  
  
 Pour spécifier un modèle pour les éléments de remplacement, placez le `<AlternatingItemTemplate>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez ensuite répertorier le contenu du modèle entre les balises `<AlternatingItemTemplate>` balises.  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Pour plus d’informations, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [validation des entrées d’utilisateur dans Des Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> propriété pour contrôler le contenu des éléments alternés dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListAlternatingItemTemplate/CS/datalistaltitemtemplatecs.aspx#1)]
 [!code-aspx-vb[DataListAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListAlternatingItemTemplate/VB/datalistaltitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.CancelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ CancelCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un clic est effectué sur le bouton <see langword="Cancel" /> pour un élément dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.CancelCommand> événement est déclenché lorsque la `Cancel` bouton est activé pour un élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Un gestionnaire standard pour le <xref:System.Web.UI.WebControls.DataList.CancelCommand> événement définit le <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriété `-1` (pour désélectionner l’élément), puis relie les données à le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!CAUTION]
>  Texte n’est pas codé en HTML avant son affichage dans le <xref:System.Web.UI.WebControls.DataList> contrôle. Cela rend possible d’incorporer un script dans les balises HTML dans le texte. Si les valeurs du contrôle proviennent de l’entrée d’utilisateur, veillez à valider les valeurs pour réduire les problèmes de sécurité.  
  
 Pour plus d’informations sur la gestion des événements, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Pour plus d’informations, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [validation des entrées d’utilisateur dans Des Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.CancelCommand> événement. Elle annule les modifications apportées à un élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle lorsque le `Cancel` du bouton.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public const string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const CancelCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ CancelCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente le nom de la commande <see langword="Cancel" />. Ce champ est en lecture seule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.CancelCommandName> champ pour représenter le `Cancel` nom de la commande.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateControlHierarchy(bool useDataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">
          <see langword="true" /> pour utiliser la source de données du contrôle ; sinon, <see langword="false" /> pour indiquer que le contrôle est recréé à partir de l'état d'affichage et qu'il ne doit pas être lié aux données.</param>
        <summary>Crée la hiérarchie de contrôles utilisée pour restituer le contrôle de liste de données, avec ou sans la source de données spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> méthode est utilisée principalement par les développeurs de contrôles lors de la dérivation d’une implémentation personnalisée de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Le <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> utilise le <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> et <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> méthodes de création <xref:System.Web.UI.WebControls.DataListItem> les contrôles qui représentent l’en-tête, un pied de page, séparateur et les éléments liés aux données contenues dans la liste de données. Vous pouvez accéder aux éléments liés aux données de la liste de données via le <xref:System.Web.UI.WebControls.DataList.Items%2A> collection. Vous pouvez accéder à tous les types d’éléments, y compris l’en-tête, un pied de page et séparateurs, via le <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> collection.  
  
 Remplacer la <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> méthode pour personnaliser la <xref:System.Web.UI.WebControls.DataListItem> contrôles sont créés ou ajoutés à la <xref:System.Web.UI.WebControls.DataList> contrôle. Remplacer la <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> méthode pour personnaliser des modèles pour un <xref:System.Web.UI.WebControls.DataListItem> contrôle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée l'objet de style par défaut qui est utilisé de manière interne par le contrôle <see cref="T:System.Web.UI.WebControls.DataList" /> pour implémenter toutes les propriétés associées au style.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.TableStyle" /> qui contient les propriétés de style par défaut du contrôle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> méthode est utilisée principalement par les développeurs de contrôles lors de la dérivation d’une implémentation personnalisée de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> contrôler la méthode dans un serveur personnalisé afin qu’elle affiche toujours le quadrillage horizontal sans espacement des cellules dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 [!code-aspx-csharp[CustomDataListCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomDataListCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomDataListCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstyle.cs#2)]
[!code-vb[CustomDataListCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DataListItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataListItem CreateItem(int32 itemIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemIndex As Integer, itemType As ListItemType) As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::DataListItem ^ CreateItem(int itemIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Emplacement spécifié dans <see cref="T:System.Web.UI.WebControls.DataList" /> où placer l'élément créé.</param>
        <param name="itemType">
          <see cref="T:System.Web.UI.WebControls.ListItemType" /> représentant le type spécifié de l'élément à créer.</param>
        <summary>Crée un objet <see cref="T:System.Web.UI.WebControls.DataListItem" />.</summary>
        <returns>Nouveau <see cref="T:System.Web.UI.WebControls.DataListItem" /> créé avec le type d'élément de liste spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> méthode est utilisée principalement par les développeurs de contrôles pour la création d’une implémentation personnalisée de la <xref:System.Web.UI.WebControls.DataList> contrôle. Le <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> méthode est fonctionnellement équivalente à l’appel du <xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A> constructeur pour un <xref:System.Web.UI.WebControls.DataListItem>. Le <xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A> et <xref:System.Web.UI.WebControls.DataListItem.ItemType%2A> les propriétés sont initialisées pour le nouveau <xref:System.Web.UI.WebControls.DataListItem> en utilisant les valeurs spécifiées, mais l’élément n’est pas inséré dans le <xref:System.Web.UI.WebControls.DataList>.  
  
 Le <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> utilise le <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> et <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> méthodes de création <xref:System.Web.UI.WebControls.DataListItem> les contrôles qui représentent l’en-tête, un pied de page, séparateur et les éléments liés aux données contenues dans la liste de données. Vous pouvez accéder aux éléments liés aux données de la liste de données via le <xref:System.Web.UI.WebControls.DataList.Items%2A> collection. Vous pouvez accéder à tous les types d’éléments, y compris l’en-tête, un pied de page et séparateurs, via le <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> collection.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Substituez cette méthode pour créer votre propre dérivée <see cref="T:System.Web.UI.WebControls.DataListItem" /> type, ou pour définir les propriétés de membre supplémentaires lorsqu’un <see cref="T:System.Web.UI.WebControls.DataListItem" /> est créé.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DeleteCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ DeleteCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un clic est effectué sur le bouton <see langword="Delete" /> pour un élément dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.DeleteCommand> événement est déclenché lorsque la `Delete` bouton est activé pour un élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Un gestionnaire standard pour le <xref:System.Web.UI.WebControls.DataList.DeleteCommand> événement supprime l’élément sélectionné à partir de la source de données et puis relie les données à le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Pour plus d’informations sur la gestion des événements, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.DeleteCommand> événement. Il supprime l’élément sélectionné dans le <xref:System.Web.UI.WebControls.DataList> contrôle lorsque le `Delete` bouton est activé.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandName">
      <MemberSignature Language="C#" Value="public const string DeleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const DeleteCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DeleteCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente le nom de la commande <see langword="Delete" />. Ce champ est en lecture seule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.DeleteCommandName> champ pour représenter le `Delete` nom de la commande.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler EditCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler EditCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.EditCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ EditCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un clic est effectué sur le bouton <see langword="Edit" /> pour un élément dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.EditCommand> événement est déclenché lorsque la `Edit` bouton est activé pour un élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Un gestionnaire standard pour le <xref:System.Web.UI.WebControls.DataList.EditCommand> événement définit le <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriété à la ligne sélectionnée, puis relie les données à le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!CAUTION]
>  Texte n’est pas codé en HTML avant son affichage dans le <xref:System.Web.UI.WebControls.DataList> contrôle. Cela rend possible d’incorporer un script dans les balises HTML dans le texte. Si les valeurs du contrôle proviennent de l’entrée d’utilisateur, veillez à valider les valeurs pour réduire les problèmes de sécurité.  
  
 Pour plus d’informations sur la gestion des événements, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Pour plus d’informations, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [validation des entrées d’utilisateur dans Des Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.EditCommand> événement. Il permet de modifier l’élément sélectionné dans le <xref:System.Web.UI.WebControls.DataList> contrôle lorsque le `Edit` bouton est activé.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="EditCommandName">
      <MemberSignature Language="C#" Value="public const string EditCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EditCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const EditCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EditCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente le nom de la commande <see langword="Edit" />. Ce champ est en lecture seule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.EditCommandName> champ pour représenter le `Edit` nom de la commande.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditItemIndex">
      <MemberSignature Language="C#" Value="public virtual int EditItemIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditItemIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le numéro d'index de l'élément sélectionné dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" /> à modifier.</summary>
        <value>Le numéro d'index de l'élément sélectionné dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" /> à modifier.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriété pour spécifier par programme l’élément à modifier. Vous pouvez également utiliser cette propriété pour déterminer l’index de l’élément sélectionné pour la modification.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriété est de base zéro.  
  
 Pour désélectionner un élément, affectez le <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriété `-1`.  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Pour plus d’informations, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [validation des entrées d’utilisateur dans Des Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Le <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriété est stockée dans l’état du contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriété pour spécifier l’élément sélectionné par l’utilisateur à modifier.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée est inférieure à <see langword="0" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ EditItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les propriétés de style pour l'élément sélectionné à modifier dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui contient les propriétés de style pour l'élément sélectionné à modifier dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut est un objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> propriété afin de fournir un style personnalisé pour l’élément sélectionné à modifier dans le <xref:System.Web.UI.WebControls.DataList> contrôle. Les attributs de style courants qui peuvent être ajustés incluent l’alignement du contenu dans la cellule, la couleur d’arrière-plan, police et couleur de premier plan. Fournissez un style différent améliore l’apparence de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Propriétés de style dans la <xref:System.Web.UI.WebControls.DataList> contrôle sont héritées à partir de la propriété de style d’un élément à une autre dans une hiérarchie. Propriétés de style d’élément définies plus bas dans la hiérarchie sont héritées par les propriétés de style d’élément dans la hiérarchie. Par exemple, si vous spécifiez une police rouge pour la <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriété, toutes les autres propriétés de style de l’élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle également aura une police rouge. Cela vous permet de fournir une apparence commune pour le contrôle en définissant une propriété de style d’élément unique. Vous pouvez remplacer les paramètres de style hérités d’une propriété de style d’élément qui est plus élevé dans la hiérarchie en définissant ses propriétés de style. Par exemple, vous pouvez spécifier une police bleue pour le <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propriété, en substituant la police rouge spécifiée dans le <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriété. Le tableau suivant répertorie l’ordre hiérarchique du plus élevé au plus bas.  
  
|Priorité|Propriété de style|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Pour spécifier un style personnalisé pour l’élément sélectionné à modifier, placez le `<EditItemStyle>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez ensuite répertorier les attributs de style dans l’ouverture `<EditItemStyle>` balise.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> propriété pour spécifier une apparence différente pour l’élément sélectionné par l’utilisateur à modifier.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le modèle pour l'élément sélectionné à modifier dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objet <see cref="T:System.Web.UI.ITemplate" /> qui contient le modèle pour l'élément sélectionné à modifier dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> propriété pour contrôler le contenu de l’élément sélectionné pour la modifier dans le <xref:System.Web.UI.WebControls.DataList> contrôle. L’apparence de l’élément sélectionné à modifier est contrôlée par le <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> propriété.  
  
 Pour spécifier un modèle pour l’élément sélectionné à modifier, placez le `<EditItemTemplate>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez ensuite répertorier le contenu du modèle entre les balises `<EditItemTemplate>` balises.  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Pour plus d’informations, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [validation des entrées d’utilisateur dans Des Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> propriété pour contrôler le contenu de l’élément sélectionné par l’utilisateur à modifier.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractTemplateRows">
      <MemberSignature Language="C#" Value="public virtual bool ExtractTemplateRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractTemplateRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExtractTemplateRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ExtractTemplateRows { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si les lignes d'un contrôle <see cref="T:System.Web.UI.WebControls.Table" />, définies dans chaque modèle d'un contrôle <see cref="T:System.Web.UI.WebControls.DataList" />, sont extraites et affichées.</summary>
        <value>
          <see langword="true" /> si les lignes d'un contrôle <see cref="T:System.Web.UI.WebControls.Table" />, définies dans chaque modèle d'un contrôle <see cref="T:System.Web.UI.WebControls.DataList" />, sont extraites et affichées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le contenu de la <xref:System.Web.UI.WebControls.DataList> contrôle sont spécifiés à l’aide de modèles. En règle générale, vous répertoriez les contrôles que vous souhaitez afficher dans les modèles. Vous pouvez également placer un <xref:System.Web.UI.WebControls.Table> dans un modèle de contrôle et d’afficher les lignes de la table.  
  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> propriété pour spécifier si les lignes d’un <xref:System.Web.UI.WebControls.Table> contrôle définie dans chaque modèle d’un <xref:System.Web.UI.WebControls.DataList> contrôle sont extraites et affichées. Toutes les lignes extraites des modèles de la <xref:System.Web.UI.WebControls.DataList> contrôle sont affichés dans une table unique. Cela vous permet de créer une table unique à partir d’autres tableaux plus petits et de conserver les fonctionnalités de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  Lorsque cette propriété a la valeur `true`, vous devez fournir un bien formé <xref:System.Web.UI.WebControls.Table> contrôle pour chaque modèle que vous souhaitez inclure dans le <xref:System.Web.UI.WebControls.DataList> contrôle. Seules les lignes des tables seront affichera. Tous les autres contenus dans le modèle sera ignoré. Vous devez utiliser un <xref:System.Web.UI.WebControls.Table> contrôle pour cette fonctionnalité fonctionne correctement. Le <xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=nameWithType> contrôle n’est pas compatible avec cette propriété.  
  
 Lorsque vous créez une cellule pour un <xref:System.Web.UI.WebControls.Table> contrôle dans un modèle, vous pouvez utiliser la <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> propriété de la <xref:System.Web.UI.WebControls.TableCell> objet pour contrôler le nombre de colonnes s’étend la cellule. Vous pouvez également utiliser le <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> propriété pour contrôler le nombre de lignes s’étend la cellule.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>, <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>, et <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> propriétés affectent l’apparence de la <xref:System.Web.UI.WebControls.DataList> contrôle lorsque cette propriété a la valeur `true`.  
  
   
  
## Examples  
 L’exemple de code suivants montrent comment utiliser le <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> propriété à extraire et afficher les lignes de <xref:System.Web.UI.WebControls.Table> contrôles définis dans les modèles de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les propriétés de style du pied de page du contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui contient les propriétés de style du pied de page du contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut est un objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour fournir un style personnalisé pour la section de pied de page de la <xref:System.Web.UI.WebControls.DataList> contrôle. Les attributs de style courants qui peuvent être ajustés incluent l’alignement du contenu dans la cellule, la couleur d’arrière-plan, police et couleur de premier plan. Fournissez un style différent améliore l’apparence de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Le <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propriété de la <xref:System.Web.UI.WebControls.DataList> contrôle hérite les paramètres de style de la <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriété. Par exemple, si vous spécifiez une police rouge pour la <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriété, le <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propriété a également une police rouge. Cela vous permet de fournir une apparence commune pour le contrôle en définissant une propriété de style unique. Vous pouvez remplacer les paramètres de style hérités en définissant le <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propriété. Par exemple, vous pouvez spécifier une police bleue pour le <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propriété, en substituant la police rouge spécifiée dans le <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriété.  
  
 Pour spécifier un style personnalisé pour la section de pied de page, placez le `<FooterStyle>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez ensuite répertorier les attributs de style dans l’ouverture `<FooterStyle>` balise.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> propriété doit être définie sur `true` pour cette propriété soit visible.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propriété pour spécifier une couleur d’arrière-plan personnalisée pour la section de pied de page de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le modèle pour le pied de page du contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objet <see cref="T:System.Web.UI.ITemplate" /> qui contient le modèle pour le pied de page du contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> propriété pour contrôler le contenu de la section de pied de page. L’apparence de la section de pied de page est contrôlée par le <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propriété.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> propriété doit être définie sur `true` pour cette propriété soit visible.  
  
 Le <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propriété de la <xref:System.Web.UI.WebControls.DataList> contrôle hérite les paramètres de style de la <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriété. Par exemple, si vous spécifiez une police rouge pour la <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriété, le <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propriété a également une police rouge. Cela vous permet de fournir une apparence commune pour le contrôle en définissant une propriété de style unique. Vous pouvez remplacer les paramètres de style hérités en définissant le <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propriété. Par exemple, vous pouvez spécifier une police bleue pour le <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propriété, en substituant la police rouge spécifiée dans le <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriété.  
  
 Pour spécifier un modèle pour la section de pied de page, placez le `<FooterTemplate>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez ensuite répertorier le contenu du modèle entre les balises `<FooterTemplate>` balises.  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Pour plus d’informations, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [validation des entrées d’utilisateur dans Des Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> propriété pour contrôler le contenu de la section de pied de page de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowFooter" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le style du quadrillage du contrôle <see cref="T:System.Web.UI.WebControls.DataList" /> lorsque <see langword="RepeatLayout.Table" /> est affecté à la propriété <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />.</summary>
        <value>Une des valeurs d'énumération <see cref="T:System.Web.UI.WebControls.GridLines" />. La valeur par défaut est <see langword="None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.GridLines%2A> propriété pour spécifier le style du quadrillage pour le <xref:System.Web.UI.WebControls.DataList> contrôle. Le tableau suivant répertorie les styles possibles.  
  
|Style|Description |  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridLines.None>|Aucune ligne de la grille.|  
|<xref:System.Web.UI.WebControls.GridLines.Horizontal>|Affiche les lignes du quadrillage horizontal.|  
|<xref:System.Web.UI.WebControls.GridLines.Vertical>|Affiche le quadrillage vertical.|  
|<xref:System.Web.UI.WebControls.GridLines.Both>|Affiche à la fois les lignes du quadrillage horizontal et vertical.|  
  
> [!NOTE]
>  Cette propriété s’applique uniquement si le <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> est définie sur `RepeatLayout.Table`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.GridLines%2A> propriété pour afficher le quadrillage horizontal et vertical de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les propriétés de style pour l'en-tête du contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui contient les propriétés de style de l'en-tête du contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut est un objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour fournir un style personnalisé pour l’en-tête de la <xref:System.Web.UI.WebControls.DataList> contrôle. Les attributs de style courants qui peuvent être ajustés incluent l’alignement du contenu dans la cellule, la couleur d’arrière-plan, police et couleur de premier plan. Fournissez un style différent améliore l’apparence de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Pour spécifier un style personnalisé pour la section d’en-tête, placez le `<HeaderStyle>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez ensuite répertorier les attributs de style dans l’ouverture `<HeaderStyle>` balise.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> propriété doit être définie sur `true` pour cette propriété soit visible.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propriété pour spécifier une couleur d’arrière-plan personnalisée pour l’en-tête de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le modèle pour l'en-tête du contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> qui contient le modèle pour l'en-tête du contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> propriété pour contrôler le contenu de la section d’en-tête. L’apparence de la section d’en-tête est contrôlée par le <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propriété.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> propriété doit être définie sur `true` pour cette propriété soit visible.  
  
 Pour spécifier un modèle pour l’en-tête, placez le `<HeaderTemplate>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez ensuite répertorier le contenu du modèle entre les balises `<HeaderTemplate>` balises.  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Pour plus d’informations, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [validation des entrées d’utilisateur dans Des Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> propriété pour contrôler le contenu de l’en-tête de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.DataListItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.DataListItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As DataListItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::DataListItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataListItem" />
      </Parameters>
      <Docs>
        <param name="item">Objet <see cref="T:System.Web.UI.WebControls.DataListItem" /> à initialiser.</param>
        <summary>Initialise un objet <see cref="T:System.Web.UI.WebControls.DataListItem" /> en fonction des modèles et des styles spécifiés pour le type d'élément de liste.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> méthode est utilisée principalement par les développeurs de contrôles pour étendre le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Le <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> utilise le <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> et <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> méthodes de création <xref:System.Web.UI.WebControls.DataListItem> les contrôles qui représentent l’en-tête, un pied de page, séparateur et les éléments liés aux données contenues dans la liste de données. Vous pouvez accéder aux éléments liés aux données de la liste de données via le <xref:System.Web.UI.WebControls.DataList.Items%2A> collection. Vous pouvez accéder à tous les types d’éléments, y compris l’en-tête, un pied de page et séparateurs, via le <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> collection.  
  
 Remplacer la <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> méthode pour personnaliser la <xref:System.Web.UI.WebControls.DataListItem> contrôles sont créés ou ajoutés à la <xref:System.Web.UI.WebControls.DataList> contrôle. Remplacer la <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> méthode pour personnaliser des modèles pour un <xref:System.Web.UI.WebControls.DataListItem> contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemType" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ ItemCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un clic est effectué sur n'importe quel bouton dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.ItemCommand> événement est déclenché lorsque l’utilisateur clique sur un bouton dans le <xref:System.Web.UI.WebControls.DataList> de contrôle et est couramment utilisé lorsque vous avez un contrôle bouton avec un personnalisé `CommandName` valeur.  
  
 Pour plus d’informations sur la gestion des événements, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.ItemCommand> événement afin de sélectionner un élément à partir de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit sur le serveur lors de la création d'un élément dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.ItemCreated> événement est déclenché lorsqu’un élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle est créé, à la fois au cours d’allers-retours et au moment où les données sont liées au contrôle.  
  
 Le <xref:System.Web.UI.WebControls.DataList.ItemCreated> événement est généralement utilisé pour contrôler le contenu et l’apparence d’une ligne dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Pour plus d’informations sur la gestion des événements, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.ItemCreated> événement afin d’afficher l’ordre dans lequel les éléments dans le <xref:System.Web.UI.WebControls.DataList> contrôle sont créés.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemDataBound;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un élément est lié aux données du contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.ItemDataBound> événement est déclenché après un élément est lié aux données le <xref:System.Web.UI.WebControls.DataList> contrôle. Cet événement vous offre la possibilité d’accéder à l’élément de données avant qu’il s’affiche sur le client. Une fois que cet événement est déclenché, l’élément de données n’est plus disponible.  
  
 Pour plus d’informations sur la gestion des événements, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.ItemDataBound> événement afin d’afficher l’ordre dans lequel les éléments dans le <xref:System.Web.UI.WebControls.DataList> contrôle sont liés au contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As DataListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItemCollection ^ Items { System::Web::UI::WebControls::DataListItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection d'objets <see cref="T:System.Web.UI.WebControls.DataListItem" /> représentant les éléments contenus dans le contrôle.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.DataListItemCollection" /> qui contient une collection d'objets <see cref="T:System.Web.UI.WebControls.DataListItem" /> représentant les éléments individuels dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.Items%2A> collection pour contrôler par programme les éléments dans le <xref:System.Web.UI.WebControls.DataList> contrôle. Le <xref:System.Web.UI.WebControls.DataList.Items%2A> collection ne fournit pas de méthode pour ajouter ou supprimer des éléments dans la collection. Toutefois, vous pouvez contrôler le contenu d’un élément en fournissant un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.ItemCreated> événement.  
  
> [!NOTE]
>  Seuls les éléments liés à la source de données sont contenues dans le <xref:System.Web.UI.WebControls.DataList.Items%2A> collection. L’en-tête, le pied de page et le séparateur ne sont pas inclus dans la collection.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.Items%2A> collection pour afficher les éléments dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.Items Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.Items Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.Items Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.Items Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ ItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les propriétés de style pour les éléments dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui contient les propriétés de style pour les éléments dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut est un objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour fournir un style personnalisé pour les éléments de la <xref:System.Web.UI.WebControls.DataList> contrôle. Les attributs de style courants qui peuvent être ajustés incluent l’alignement du contenu dans la cellule, la couleur d’arrière-plan, police et couleur de premier plan. Fournissez un style différent améliore l’apparence de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Propriétés de style dans la <xref:System.Web.UI.WebControls.DataList> contrôle sont héritées à partir de la propriété de style d’un élément à une autre dans une hiérarchie. Propriétés de style d’élément définies plus bas dans la hiérarchie sont héritées par les propriétés de style d’élément dans la hiérarchie. Par exemple, si vous spécifiez une police rouge pour la <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriété, toutes les autres propriétés de style de l’élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle également aura une police rouge. Cela vous permet de fournir une apparence commune pour le contrôle en définissant une propriété de style d’élément unique. Vous pouvez remplacer les paramètres de style hérités d’une propriété de style d’élément qui est plus élevé dans la hiérarchie en définissant ses propriétés de style. Par exemple, vous pouvez spécifier une police bleue pour le <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propriété, en substituant la police rouge spécifiée dans le <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriété. Le tableau suivant répertorie l’ordre hiérarchique du plus élevé au plus bas.  
  
|Priorité|Propriété de style|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Pour spécifier un style personnalisé pour les éléments de la <xref:System.Web.UI.WebControls.DataList> contrôler, placez le `<ItemStyle>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez ensuite répertorier les attributs de style dans l’ouverture `<ItemStyle>` balise.  
  
 Vous pouvez également utiliser le <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> les éléments de propriété afin de fournir une apparence différente pour le remplacement dans la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriété pour spécifier une couleur d’arrière-plan différente pour les éléments de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.ItemTemplate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le modèle pour les éléments dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> qui contient le modèle pour les éléments dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> propriété pour contrôler le contenu des éléments dans le <xref:System.Web.UI.WebControls.DataList> contrôle. L’apparence des éléments dans le <xref:System.Web.UI.WebControls.DataList> est contrôlé par le <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriété.  
  
 Pour spécifier un modèle pour les éléments de la <xref:System.Web.UI.WebControls.DataList> contrôler, placez le `<ItemTemplate>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez ensuite répertorier le contenu du modèle entre les balises `<ItemTemplate>` balises.  
  
 Vous pouvez éventuellement utiliser le <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> les éléments de propriété afin de fournir une apparence différente pour le remplacement dans la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Pour plus d’informations, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [validation des entrées d’utilisateur dans Des Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> propriété pour contrôler le contenu des éléments dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Objet qui représente l'état de <see cref="T:System.Web.UI.WebControls.DataList" />.</param>
        <summary>Charge l'état d'affichage enregistré précédemment du contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est principalement utilisée par l’infrastructure .NET Framework et n’est pas destinée à être utilisée directement depuis votre code.  Toutefois, les développeurs de contrôles peuvent substituer cette méthode pour spécifier la manière dont un contrôle serveur personnalisé restaure son état d’affichage. Pour plus d’informations, consultez [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Le <xref:System.Web.UI.WebControls.DataList.LoadViewState%2A> méthode restaure les informations d’état d’affichage pour le <xref:System.Web.UI.WebControls.DataList> contrôle à partir d’une demande de page précédente enregistrée par le <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Source de l'événement.</param>
        <param name="e">Données d'événement.</param>
        <summary>Détermine si l’événement du contrôle serveur est passé dans la hiérarchie des contrôles serveur de l’interface utilisateur de la page.</summary>
        <returns>
          <see langword="true" /> si l'événement a été annulé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />. Cela vous permet de fournir un gestionnaire personnalisé à l'événement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> méthode pour fournir un gestionnaire personnalisé pour le <xref:System.Web.UI.WebControls.DataList.CancelCommand> événement.  
  
 Le <xref:System.Web.UI.WebControls.DataList.CancelCommand> événement est déclenché lorsque la `Cancel` bouton est activé pour un élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Un gestionnaire standard pour le <xref:System.Web.UI.WebControls.DataList.CancelCommand> événement définit le <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriété `-1` (pour désélectionner l’élément), puis relie les données à le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Pour plus d’informations, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [validation des entrées d’utilisateur dans Des Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 La méthode <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.CancelCommand> événement. Elle annule les modifications apportées à un élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle lorsque le `Cancel` du bouton.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution de <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleteCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleteCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleteCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />. Cela vous permet de fournir un gestionnaire personnalisé à l'événement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> méthode pour fournir un gestionnaire personnalisé pour le <xref:System.Web.UI.WebControls.DataList.DeleteCommand> événement.  
  
 Le <xref:System.Web.UI.WebControls.DataList.DeleteCommand> événement est déclenché lorsque la `Delete` bouton est activé pour un élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Un gestionnaire standard pour le <xref:System.Web.UI.WebControls.DataList.DeleteCommand> événement supprime l’élément sélectionné à partir de la source de données et puis relie les données à le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 La méthode <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.DeleteCommand> événement. Il supprime l’élément sélectionné dans le <xref:System.Web.UI.WebControls.DataList> contrôle lorsque le `Delete` bouton est activé.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution de <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEditCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEditCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.DataList.EditCommand" />. Cela vous permet de fournir un gestionnaire personnalisé à l'événement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> méthode pour fournir un gestionnaire personnalisé pour le <xref:System.Web.UI.WebControls.DataList.EditCommand> événement.  
  
 Le <xref:System.Web.UI.WebControls.DataList.EditCommand> événement est déclenché lorsque la `Edit` bouton est activé pour un élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Un gestionnaire standard pour le <xref:System.Web.UI.WebControls.DataList.EditCommand> événement définit le <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriété à la ligne sélectionnée, puis relie les données à le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Pour plus d’informations, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [validation des entrées d’utilisateur dans Des Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 La méthode <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.EditCommand> événement. Il permet de modifier l’élément sélectionné dans le <xref:System.Web.UI.WebControls.DataList> contrôle lorsque le `Edit` bouton est activé.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution de <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Control.Init" /> pour le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.OnInit%2A> méthode notifie le <xref:System.Web.UI.WebControls.DataList> contrôle pour effectuer les étapes d’initialisation qui sont nécessaires pour créer et configurer une instance.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />. Cela vous permet de fournir un gestionnaire personnalisé à l'événement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> méthode pour fournir un gestionnaire personnalisé pour le <xref:System.Web.UI.WebControls.DataList.ItemCommand> événement.  
  
 Le <xref:System.Web.UI.WebControls.DataList.ItemCommand> événement est déclenché lorsque l’utilisateur clique sur un bouton dans le <xref:System.Web.UI.WebControls.DataList> de contrôle et est couramment utilisé lorsque vous avez un contrôle bouton avec un personnalisé `CommandName` de valeurs, tels que `Add`, dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 La méthode <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.ItemCommand> événement afin de sélectionner un élément à partir de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution de <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />. Cela vous permet de fournir un gestionnaire personnalisé à l'événement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> méthode pour fournir un gestionnaire personnalisé pour le <xref:System.Web.UI.WebControls.DataList.ItemCreated> événement.  
  
 Le <xref:System.Web.UI.WebControls.DataList.ItemCreated> événement est déclenché lorsqu’un élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle est créé, à la fois au cours d’allers-retours et au moment où les données sont liées au contrôle.  
  
 Le <xref:System.Web.UI.WebControls.DataList.ItemCreated> événement est généralement utilisé pour contrôler le contenu et l’apparence d’une ligne dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 La méthode <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.ItemCreated> événement afin d’afficher l’ordre dans lequel les éléments dans le <xref:System.Web.UI.WebControls.DataList> contrôle sont créés.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution de <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />. Cela vous permet de fournir un gestionnaire personnalisé à l'événement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> méthode pour fournir un gestionnaire personnalisé pour le <xref:System.Web.UI.WebControls.DataList.ItemDataBound> événement.  
  
 Le <xref:System.Web.UI.WebControls.DataList.ItemDataBound> événement est déclenché après un élément est lié aux données le <xref:System.Web.UI.WebControls.DataList> contrôle. Cet événement vous offre la possibilité d’accéder à l’élément de données avant qu’il s’affiche sur le client. Une fois que cet événement est déclenché, l’élément de données n’est plus disponible.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 La méthode <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.ItemDataBound> événement afin d’afficher l’ordre dans lequel les éléments dans le <xref:System.Web.UI.WebControls.DataList> contrôle sont liés au contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution de <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />. Cela vous permet de fournir un gestionnaire personnalisé à l'événement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> méthode pour fournir un gestionnaire personnalisé pour le <xref:System.Web.UI.WebControls.DataList.UpdateCommand> événement.  
  
 Le <xref:System.Web.UI.WebControls.DataList.UpdateCommand> événement est déclenché lorsque la `Update` bouton pour l’utilisateur clique sur un élément.  
  
 Un gestionnaire par défaut pour le <xref:System.Web.UI.WebControls.DataList.UpdateCommand> événement met à jour les données, les jeux de la <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriété `-1` (pour désélectionner l’élément), puis relie les données à la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Pour plus d’informations, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [validation des entrées d’utilisateur dans Des Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 La méthode <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.UpdateCommand> événement. Il vous permet de mettre à jour l’élément sélectionné dans le <xref:System.Web.UI.WebControls.DataList> contrôle avec les nouvelles valeurs entrées par l’utilisateur lorsque le `Update` bouton est activé.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution de <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal override void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PrepareControlHierarchy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prépare la hiérarchie de contrôles à restituer dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> méthode est utilisée principalement par les développeurs de contrôles lors de la dérivation d’un contrôle personnalisé à partir de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Le <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> prépare la hiérarchie des contrôles et définit les styles contenus <xref:System.Web.UI.WebControls.DataListItem> contrôle avant que les contrôles enfants sont rendus.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Remplacer la <see cref="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" /> méthode pour personnaliser les styles des contrôles contenus dans le <see cref="T:System.Web.UI.WebControls.DataList" /> avant d’être restitués.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> qui représente le flux de sortie utilisé pour restituer le contenu HTML sur le client.</param>
        <summary>Génère le rendu des éléments de liste dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> méthode est utilisée principalement par les développeurs de contrôles lors de la dérivation d’un contrôle personnalisé à partir de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Le <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> méthode restitue le contenu interne de la <xref:System.Web.UI.WebControls.DataList> contrôle, y compris la relation contenant-contenu <xref:System.Web.UI.WebControls.DataListItem> contrôles.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> contrôler la méthode dans un serveur personnalisé afin que du texte précède le <xref:System.Web.UI.WebControls.DataList> objet.  
  
 [!code-aspx-csharp[CustomDataListRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomDataListRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontentsvb.aspx#1)]  
[!code-csharp[CustomDataListRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontents.cs#2)]
[!code-vb[CustomDataListRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatColumns">
      <MemberSignature Language="C#" Value="public virtual int RepeatColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RepeatColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatColumns As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RepeatColumns { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nombre de colonnes à afficher dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Nombre de colonnes à afficher dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut, <see langword="0" />, indique que les éléments figurant dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" /> s'affichent dans une seule ligne ou colonne, en fonction de la valeur de la propriété <see cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour spécifier le nombre de colonnes qui affichent des éléments dans le <xref:System.Web.UI.WebControls.DataList> contrôle. Par exemple, si vous définissez cette propriété sur `5`, le <xref:System.Web.UI.WebControls.DataList> contrôle affiche ses éléments dans cinq colonnes.  
  
> [!NOTE]
>  Si cette propriété est définie sur `0`, le <xref:System.Web.UI.WebControls.DataList> contrôle affiche ses éléments dans une seule ligne ou colonne, en fonction de la valeur de la <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> propriété. Si le <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> est définie sur `RepeatDirection.Horizontal`, les éléments sont affichés dans une seule ligne. Si le <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> est définie sur `RepeatDirection.Vertical`, les éléments sont affichés dans une colonne unique.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> propriété pour spécifier le nombre de colonnes à afficher dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le nombre de colonnes spécifié est une valeur négative.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="RepeatDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatDirection RepeatDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatDirection As RepeatDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatDirection RepeatDirection { System::Web::UI::WebControls::RepeatDirection get(); void set(System::Web::UI::WebControls::RepeatDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit si le contrôle <see cref="T:System.Web.UI.WebControls.DataList" /> s'affiche verticalement ou horizontalement.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.RepeatDirection" />. La valeur par défaut est <see langword="Vertical" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> propriété pour spécifier la direction de l’affichage de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  Le nombre de colonnes affichées est toujours déterminé par la <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> propriété.  
  
 Si cette propriété est définie sur `RepeatDirection.Vertical`, les éléments dans la liste sont affichées dans les colonnes remplies de haut en bas, puis de gauche à droite, jusqu'à ce que tous les éléments sont affichés. Par exemple, si le <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> est définie sur `3`, les éléments de la <xref:System.Web.UI.WebControls.DataList> contrôle sont affichés dans trois colonnes, comme dans le tableau suivant.  
  
||||  
|-|-|-|  
|1|4|7|  
|2|5|8|  
|3|6|9|  
  
 Si cette propriété est définie sur `RepeatDirection.Horizontal`, les éléments dans la liste sont affichés dans les lignes de chargement de gauche à droite, puis de haut en bas, jusqu'à ce que tous les éléments sont affichés. Par exemple, si le <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> est définie sur `3`, les éléments de la <xref:System.Web.UI.WebControls.DataList> contrôle sont affichés dans les lignes de trois éléments chacune, comme dans le tableau suivant.  
  
||||  
|-|-|-|  
|1|2|3|  
|4|5|6|  
|7|8|9|  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> propriété pour spécifier la direction dans laquelle la <xref:System.Web.UI.WebControls.DataList> contrôle s’affiche.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée n'est pas l'une des valeurs <see cref="T:System.Web.UI.WebControls.RepeatDirection" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="RepeatLayout">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatLayout RepeatLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatLayout As RepeatLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatLayout RepeatLayout { System::Web::UI::WebControls::RepeatLayout get(); void set(System::Web::UI::WebControls::RepeatLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit si le contrôle s'affiche dans une mise en page tableau ou fluide.</summary>
        <value>Valeur qui spécifie si le contrôle est affiché dans un tableau ou dans une mise en page fluide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> propriété pour spécifier si les éléments de la <xref:System.Web.UI.WebControls.DataList> contrôle sont affichés dans une table. La seule <xref:System.Web.UI.WebControls.RepeatLayout> les valeurs qui sont pris en charge par le <xref:System.Web.UI.WebControls.DataList> contrôle sont <xref:System.Web.UI.WebControls.RepeatLayout.Table> et <xref:System.Web.UI.WebControls.RepeatLayout.Flow>.  
  
 Si cette propriété est définie sur `RepeatLayout.Table`, les éléments dans la liste sont affichés dans une table. Si cette propriété est définie sur `RepeatLayout.Flow`, les éléments dans la liste sont affichés sans une structure de table.  
  
 Lorsque le <xref:System.Web.UI.WebControls.DataList> contrôle est affiché dans une table, vous pouvez utiliser le <xref:System.Web.UI.WebControls.DataList.GridLines%2A> propriété pour spécifier un style de ligne de grille.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> propriété pour spécifier le style de disposition du <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée n'est pas l'une des valeurs <see cref="T:System.Web.UI.WebControls.RepeatLayout" /> prises en charge.</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre les modifications apportées à l'état d'affichage du contrôle depuis la publication de la page sur le serveur.</summary>
        <returns>Objet qui contient les modifications de l'état d'affichage <see cref="T:System.Web.UI.WebControls.DataList" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> méthode est utilisée principalement par les développeurs de contrôles.  
  
 État d’affichage est l’accumulation des valeurs de propriétés d’un contrôle serveur. Ces valeurs sont automatiquement placées dans le contrôle de serveur <xref:System.Web.UI.Control.ViewState%2A> propriété, qui est une instance de la <xref:System.Web.UI.StateBag> classe. Le <xref:System.Web.UI.Control.ViewState%2A> valeur de la propriété est ensuite rendue persistante dans un objet chaîne après l’étape d’enregistrement de l’état du cycle de vie du contrôle serveur. Pour plus d’informations, consultez [vue d’ensemble du Cycle de vie de Page ASP.NET](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 Lorsque l’état d’affichage est enregistré, cet objet chaîne est retourné au client en tant que variable qui est stockée dans un élément input HTML masqué. Lorsque vous créez des contrôles serveur personnalisés, vous pouvez améliorer l’efficacité en substituant la <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> (méthode) et la modification de la <xref:System.Web.UI.Control.ViewState%2A> propriété de votre contrôle serveur. Pour plus d’informations, consultez [développement de contrôles serveur ASP.NET personnalisés](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef) et [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandName">
      <MemberSignature Language="C#" Value="public const string SelectCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelectCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const SelectCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelectCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente le nom de la commande <see langword="Select" />. Ce champ est en lecture seule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.SelectCommandName> champ pour représenter le `Select` nom de la commande.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.SelectedIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'index de l'élément sélectionné dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Index de l'élément sélectionné dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propriété pour spécifier par programme l’élément sélectionné dans le <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez également utiliser cette propriété pour déterminer l’index de l’élément sélectionné.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propriété est de base zéro.  
  
 Pour désélectionner un élément, affectez le <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propriété `-1`.  
  
 Le <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propriété est stockée dans l’état du contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propriété pour spécifier l’élément sélectionné dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée est inférieure à <see langword="-1" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItem As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItem ^ SelectedItem { System::Web::UI::WebControls::DataListItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'élément sélectionné dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.DataListItem" /> qui représente l'élément sélectionné dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> propriété à obtenir un <xref:System.Web.UI.WebControls.DataListItem> objet qui représente l’élément sélectionné dans le <xref:System.Web.UI.WebControls.DataList> contrôle. Cet objet peut ensuite être utilisé pour accéder aux propriétés de l’élément sélectionné.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> propriété pour afficher le contenu de l’élément sélectionné dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.SelectedItem Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.SelectedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SelectedItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les propriétés de style pour l'élément sélectionné dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui contient les propriétés de style pour l'élément sélectionné dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut est un objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour fournir un style personnalisé pour l’élément sélectionné dans le <xref:System.Web.UI.WebControls.DataList> contrôle. Les attributs de style courants qui peuvent être ajustés incluent l’alignement du contenu dans la cellule, la couleur d’arrière-plan, police et couleur de premier plan. Fournissez un style différent améliore l’apparence de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Propriétés de style dans la <xref:System.Web.UI.WebControls.DataList> contrôle sont héritées à partir de la propriété de style d’un élément à une autre dans une hiérarchie. Propriétés de style d’élément définies plus bas dans la hiérarchie sont héritées par les propriétés de style d’élément dans la hiérarchie. Par exemple, si vous spécifiez une police rouge pour la <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriété, toutes les autres propriétés de style de l’élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle également aura une police rouge. Cela vous permet de fournir une apparence commune pour le contrôle en définissant une propriété de style d’élément unique. Vous pouvez remplacer les paramètres de style hérités d’une propriété de style d’élément qui est plus élevé dans la hiérarchie en définissant ses propriétés de style. Par exemple, vous pouvez spécifier une police bleue pour le <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propriété, en substituant la police rouge spécifiée dans le <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriété. Le tableau suivant répertorie l’ordre hiérarchique du plus élevé au plus bas.  
  
|Priorité|Propriété de style|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Pour spécifier un style personnalisé pour l’élément sélectionné, placez le `<SelectedItemStyle>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez ensuite répertorier les attributs de style dans l’ouverture `<SelectedItemStyle>` balise.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> propriété pour spécifier une couleur d’arrière-plan personnalisée pour l’élément sélectionné dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SelectedItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le modèle pour l'élément sélectionné dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> qui contient le modèle pour l'élément sélectionné dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> propriété pour contrôler le contenu de l’élément sélectionné. L’apparence de l’élément sélectionné est contrôlée par le <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> propriété.  
  
 Pour spécifier un modèle pour l’élément sélectionné, placez le `<SelectedItemTemplate>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez ensuite répertorier le contenu du modèle entre les balises `<SelectedItemTemplate>` balises.  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Pour plus d’informations, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [validation des entrées d’utilisateur dans Des Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> propriété pour contrôler le contenu de l’élément sélectionné dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur du champ clé pour l'élément de liste de données sélectionné.</summary>
        <value>Valeur du champ clé pour l'élément de liste de données sélectionné. La valeur par défaut est <see langword="null" /> pour indiquer qu'aucun élément de liste de données n'est sélectionné actuellement.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" /> n'a pas été définie.</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SeparatorStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SeparatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SeparatorStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SeparatorStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les propriétés de style du séparateur entre chaque élément dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> qui contient les propriétés de style du séparateur entre chaque élément dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut est un objet <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> propriété afin de fournir un style personnalisé pour le séparateur entre chaque élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle. Le séparateur vous permet de placer un élément avec un contenu personnalisé entre chaque élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle. Les attributs de style courants qui peuvent être ajustés incluent l’alignement du contenu dans la cellule, la couleur d’arrière-plan, police et couleur de premier plan. Fournissez un style différent améliore l’apparence de la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Pour spécifier un style personnalisé pour le séparateur, placez le `<SeparatorStyle>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez ensuite répertorier les attributs de style dans l’ouverture `<SeparatorStyle>` balise.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> propriété pour spécifier une couleur d’arrière-plan personnalisée pour le séparateur entre chaque élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le modèle pour le séparateur entre les éléments du contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> qui contient le modèle pour le séparateur entre les éléments dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> propriété pour contrôler le contenu du séparateur entre les éléments de la <xref:System.Web.UI.WebControls.DataList> contrôle. Le séparateur vous permet de placer un élément avec un contenu personnalisé entre chaque élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle. L’apparence du séparateur entre les éléments de la <xref:System.Web.UI.WebControls.DataList> est contrôlé par le <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> propriété.  
  
 Pour spécifier un modèle pour le séparateur, placez le `<SeparatorTemplate>` balises situées entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.WebControls.DataList> contrôle. Vous pouvez ensuite répertorier le contenu du modèle entre les balises `<SeparatorTemplate>` balises.  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Pour plus d’informations, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [validation des entrées d’utilisateur dans Des Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> propriété pour contrôler le contenu du séparateur entre chaque élément dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowFooter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le pied de page s'affiche dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>
          <see langword="true" /> si le pied de page s'affiche ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" /> ; cette propriété n'est toutefois examinée que lorsque la propriété <see cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" /> n'a pas la valeur <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> propriété pour spécifier si la section de pied de page est affichée dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Vous pouvez contrôler l’apparence de la section de pied de page en définissant le <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propriété. Le contenu de la section de pied de page est contrôlé par le <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> propriété pour afficher la section de pied de page dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si l'en-tête s'affiche dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>
          <see langword="true" /> si l'en-tête s'affiche ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" /> ; cette propriété n'est toutefois examinée que lorsque la propriété <see cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" /> n'a pas la valeur <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> propriété pour spécifier si la section d’en-tête est affichée dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
 Vous pouvez contrôler l’apparence de la section d’en-tête en définissant le <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propriété. Le contenu de la section d’en-tête est contrôlé par le <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> propriété pour afficher la section d’en-tête dans le <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.Style IRepeatInfoUser.GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.WebControls.Style System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetItemStyle (itemType As ListItemType, repeatIndex As Integer) As Style Implements IRepeatInfoUser.GetItemStyle" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::WebControls::Style ^ System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex) = System::Web::UI::WebControls::IRepeatInfoUser::GetItemStyle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemType">Une des valeurs d'énumération <see cref="T:System.Web.UI.WebControls.ListItemType" />.</param>
        <param name="repeatIndex">Index de l'élément dans le contrôle de liste.</param>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.Style" /> qui représente le style du type d'élément spécifié au niveau de l'index spécifié dans le contrôle de liste.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.DataList> est castée en interface <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasFooter">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasFooter As Boolean Implements IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.DataList> est castée en interface <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasHeader">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasHeader As Boolean Implements IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut être utilisé uniquement lorsque le <xref:System.Web.UI.WebControls.DataList> instance est effectuée un <xref:System.Web.UI.WebControls.IRepeatInfoUser> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasSeparators As Boolean Implements IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.DataList> est castée en interface <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RenderItem">
      <MemberSignature Language="C#" Value="void IRepeatInfoUser.RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex, class System.Web.UI.WebControls.RepeatInfo repeatInfo, class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex, System::Web::UI::WebControls::RepeatInfo ^ repeatInfo, System::Web::UI::HtmlTextWriter ^ writer) = System::Web::UI::WebControls::IRepeatInfoUser::RenderItem;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
        <Parameter Name="repeatInfo" Type="System.Web.UI.WebControls.RepeatInfo" />
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="itemType">Type de l'élément.</param>
        <param name="repeatIndex">Index de l'élément.</param>
        <param name="repeatInfo">Informations utilisées pour restituer l'élément.</param>
        <param name="writer">Objet <see cref="T:System.Web.UI.HtmlTextWriter" /> à utiliser pour restituer l'élément.</param>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.DataList> est castée en interface <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property RepeatedItemCount As Integer Implements IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.DataList> est castée en interface <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la balise HTML utilisée pour afficher le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Retourne la balise <see cref="F:System.Web.UI.HtmlTextWriterTag.Table" /> si <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> a la valeur <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" /> ; sinon, retourne la balise <see cref="F:System.Web.UI.HtmlTextWriterTag.Span" />. La valeur par défaut est <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.TagKey%2A> propriété pour déterminer le <xref:System.Web.UI.HtmlTextWriterTag> valeur qui est associé à un <xref:System.Web.UI.WebControls.DataList> contrôle. Le <xref:System.Web.UI.WebControls.DataList.TagKey%2A> propriété est principalement utilisée par les développeurs de contrôles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Suit les modifications d'état d'affichage du contrôle <see cref="T:System.Web.UI.WebControls.DataList" /> afin qu'elles puissent être stockées dans la propriété <see cref="P:System.Web.UI.Control.ViewState" /> du contrôle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.TrackViewState%2A> méthode est substituée pour marquer le point de départ commencer le suivi et l’enregistrement des modifications apportées au contrôle dans le cadre de l’état d’affichage du contrôle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ UpdateCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un clic est effectué sur le bouton <see langword="Update" /> pour un élément dans le contrôle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DataList.UpdateCommand> événement est déclenché lorsque la `Update` bouton pour l’utilisateur clique sur un élément.  
  
 Un gestionnaire par défaut pour le <xref:System.Web.UI.WebControls.DataList.UpdateCommand> événement met à jour les données, les jeux de la <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriété `-1` (pour désélectionner l’élément), puis relie les données à la <xref:System.Web.UI.WebControls.DataList> contrôle.  
  
> [!CAUTION]
>  Ce contrôle peut être utilisé pour afficher l’entrée d’utilisateur, ce qui peut inclure un script client malveillant. Vérifiez toutes les informations envoyées par un client de script exécutable, des instructions SQL ou autre code avant de les afficher dans votre application. Vous pouvez utiliser des contrôles de validation pour vérifier l’entrée d’utilisateur avant d’afficher le texte d’entrée dans un contrôle. ASP.NET fournit une fonctionnalité de validation de demande d’entrée pour bloquer les scripts et le HTML dans l’entrée d’utilisateur. Pour plus d’informations, consultez [sécurisation des contrôles Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Comment : protéger contre les attaques de Script dans une Application Web en utilisant l’encodage HTML en chaînes](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), et [validation des entrées d’utilisateur dans Des Pages Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Pour plus d’informations sur la gestion des événements, consultez [Comment : consommer des événements dans une Application Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.WebControls.DataList.UpdateCommand> événement. Il vous permet de mettre à jour l’élément sélectionné dans le <xref:System.Web.UI.WebControls.DataList> contrôle avec les nouvelles valeurs entrées par l’utilisateur lorsque le `Update` bouton est activé.  
  
> [!NOTE]
>  L’exemple de code suivant utilise le modèle de code de fichier unique et peut ne pas fonctionne correctement si copiées directement dans un fichier code-behind. Cet exemple de code doit être copié dans un fichier texte vide qui a une extension .aspx. Pour plus d’informations sur le modèle de code Web Forms, consultez [modèle de Code de Page ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandName">
      <MemberSignature Language="C#" Value="public const string UpdateCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UpdateCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const UpdateCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ UpdateCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente le nom de la commande <see langword="Update" />. Ce champ est en lecture seule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DataList.UpdateCommandName> champ pour représenter le `Update` nom de la commande.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
  </Members>
</Type>