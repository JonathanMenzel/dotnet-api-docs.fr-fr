<Type Name="WizardStepBase" FullName="System.Web.UI.WebControls.WizardStepBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5981e7c18390097f7357c75fda929484a656009d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378232" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WizardStepBase : System.Web.UI.WebControls.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WizardStepBase extends System.Web.UI.WebControls.View" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WizardStepBase&#xA;Inherits View" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepBase abstract : System::Web::UI::WebControls::View" />
  <TypeSignature Language="F#" Value="type WizardStepBase = class&#xA;    inherit View" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implements the basic functionality required by a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas créer directement une instance de la <xref:System.Web.UI.WebControls.WizardStepBase> classe. Au lieu de cela, cette classe est héritée par le <xref:System.Web.UI.WebControls.WizardStep> classe et la <xref:System.Web.UI.WebControls.TemplatedWizardStep> classe afin de fournir les fonctionnalités de base d’une étape dans un contrôle qui agit comme un Assistant.  
  
 Vous pouvez dériver de la <xref:System.Web.UI.WebControls.WizardStepBase> classe pour créer une classe personnalisée qui représente une étape unique dans un contrôle de l’Assistant.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WizardStepBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WizardStepBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReturn">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReturn : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the user is allowed to return to the current step from a subsequent step in a <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</summary>
        <value>
          <see langword="true" /> Si l’utilisateur est autorisé à retourner à l’étape actuelle. dans le cas contraire, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriété peut être utilisée pour appliquer la navigation linéaire dans un <xref:System.Web.UI.WebControls.Wizard> contrôle. Si chaque étape a son <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriété `false`, l’utilisateur ne sera pas en mesure de revenir à une étape une fois qu’elle est terminée. Un scénario dans lequel vous pouvez utiliser cette fonctionnalité est pour ne pas autoriser un utilisateur de revenir à une étape une fois celle-ci terminée, car vous rendez persistantes des données à une base de données en tant que chaque étape est terminée. Si vous enregistrez les données après chaque étape et autoriser l’utilisateur à revenir à une étape et modifier les informations qu’il a été enregistré, les données enregistrées risque d’être endommagées. En définissant le <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriété `false`, une fois que l’utilisateur a terminé une étape, il ou elle pas pourront y revenir et modifier des valeurs.  
  
 Le <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriété détermine comment et quand le **précédent** bouton n’est pas rendu. Le tableau suivant décrit les **précédent** bouton le comportement de rendu.  
  
|Scénario|Comportement|  
|--------------|--------------|  
|Linéaire : Étape 1 a <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> la valeur `false` et action de l’utilisateur passe à l’étape 2.|Étape 2 n’affiche pas les **précédent** bouton.|  
|Non linéaire : Étape 1 a <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> la valeur `false` et action de l’utilisateur passe à l’étape 3.|Étape 3 n’affiche pas les **précédent** bouton.|  
|Boutons de barre latérale : Étape 2 a <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> la valeur `false` , <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> a la valeur `true`, et un utilisateur clique sur le bouton de la barre latérale.|Aucuns boutons ne sont automatiquement désactivés sur la barre latérale lorsque <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> a la valeur `false`. Si un utilisateur clique sur le bouton, l’action est ignorée.|  
|Linéaire et Non linéaire avec le modèle personnalisé : l’étape a un modèle de navigation personnalisé.|Non automatique masquage ou affichage se produit si <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> a la valeur `false` lorsque vous utilisez un modèle de navigation. Le **précédent** bouton doit être facultatif sur le modèle.|  
|À l’aide du concepteur Visual Studio et <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> : le contrôle a 5 étapes, vous travaillez sur l’étape 4, et vous exécutez la page.|Lorsque l’étape 4 est la <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>, puis le **précédent** bouton est restitué. Le **précédent** bouton est uniquement masqué pour <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> la valeur <xref:System.Web.UI.WebControls.WizardStepType.Step> lorsque l’étape précédente dans l’historique a <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> la valeur `false`. Étant donné que l’étape 4 est restituée en premier, ni aucune étape de l’historique, les **précédent** bouton n’est pas masqué.|  
|Étape de départ et Navigation Non linéaire : un utilisateur parcourt l’étape 3 et l’étape 4, puis l’étape 1, qui a <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> la valeur <xref:System.Web.UI.WebControls.WizardStepType.Start>.|L’Assistant n’ajoute pas une **précédent** bouton lorsque le <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> a la valeur <xref:System.Web.UI.WebControls.WizardStepType.Start> , quelle que soit la façon dont l’utilisateur accède à cette étape.|  
|Même étape dans l’historique : Un utilisateur parcourt l’étape 3 où <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> a la valeur <xref:System.Web.UI.WebControls.WizardStepType.Step> et l’utilisateur ne valide pas les actions. Ils puis cliquez sur le bouton précédent à l’étape 3.|Le contrôle de l’Assistant vérifie si le **précédent** étape dans l’historique est l’étape « même » que l’utilisateur est actuellement connecté. Si l’étape est la même, le contrôle de l’Assistant examine à nouveau dans l’historique pour déterminer l’étape « autre » et les bases de l’affichage de la **précédent** bouton et destination en fonction de le « étape différents » dans l’historique.|  
  
> [!NOTE]
>  Lorsque le <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> est définie sur `false`, mais la <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> propriété du contrôle parent de <xref:System.Web.UI.WebControls.WizardStepBase> a la valeur `true`, en cliquant sur un bouton dans la barre latérale n’a aucun effet. La zone de la barre latérale est généralement affichée pour fournir une navigation non linéaire, donc si vous n’utilisez pas les fonctionnalités de navigation non linéaire, il pouvez que vous souhaitez définir la <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> propriété `false`.  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriété empêche l’utilisateur de revenir à une étape dans le <xref:System.Web.UI.WebControls.Wizard> contrôle après qu’il a accédé. Dans l’exemple, le `Step1` étape a son <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriété `false`. Lorsque l’utilisateur quitte le `Step1` étape, bouton précédent n’apparaît sur le `Step2` étape.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/CS/wizardstepbaseallowreturncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/VB/wizardstepbaseallowreturnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether themes apply to this control.</summary>
        <value>
          <see langword="true" /> Pour utiliser les thèmes ; dans le cas contraire, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> propriété indique si les thèmes sont activés pour le <xref:System.Web.UI.WebControls.WizardStepBase> contrôle. Le <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> propriété détermine également si les thèmes sont activés pour les contrôles contenus dans sa collection de contrôles. Lorsque le <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> propriété est `true`, le répertoire de thème de l’application est recherché apparences de contrôle à appliquer. Si aucune apparence pour le contrôle particulier n’existe dans le répertoire du thème, aucune apparence n’est pas appliquée. Lorsque le <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> propriété est `false`, le répertoire de thème n’est pas examiné et la valeur de la <xref:System.Web.UI.Control.SkinID%2A> propriété n’est pas utilisée.  
  
 Un contrôle peut substituer la <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> a de valeur par son contrôle parent ou par la page qui le contient. Par exemple, si un <xref:System.Web.UI.WebControls.WizardStepBase> contrôle a <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> la valeur `false`, vous pouvez appliquer de manière sélective des thèmes aux contrôles enfants contenus dans l’étape de l’Assistant en affectant la <xref:System.Web.UI.Control.EnableTheming%2A> propriété `true` sur les contrôles enfants individuels.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the programmatic identifier assigned to the server control.</summary>
        <value>Identificateur programmatique assigné au contrôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propriété pour identifier et référencer un contrôle particulier Assistant étape dans une page Web Forms. Le <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> valeur devient le nom de l’instance de contrôle dans la page ; cela vous permet d’accéder facilement à une étape particulière dans le code de cette page. Par exemple, si vous définissez la <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propriété d’un <xref:System.Web.UI.WebControls.WizardStepBase> contrôle à l’étape « 1 », vous pouvez référencer les contrôles enfants de l’étape de l’Assistant dans le code de cette page en tant que `Step1.Controls`.  
  
 Le <xref:System.Web.UI.WebControls.WizardStepBase> contrôle garantit que chaque étape dans un <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> contrôle a un identificateur unique valide lorsque des étapes sont ajoutées ou modifiées au moment du design. Par exemple, lorsque vous définissez la <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> pour une étape au moment du design, il ne peut pas correspondre à l’identificateur pour une autre étape contenue dans le <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> contrôle et il ne peut pas correspondre à la <xref:System.Web.UI.Control.ID%2A> du contenant <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant définit trois étapes de l’Assistant pour un <xref:System.Web.UI.WebControls.Wizard> contrôle dans une page Web Forms. Dans le code de la page, les instances d’étapes de l’Assistant sont nommées selon leurs valeurs d’ID, et ils peuvent être référencés dans le code en tant que `WizardStep1`, `WizardStep2`, et `WizardStep3`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The property was set to an invalid identifier string at design time.  -or-  The property was set to the same identifier as the containing <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> control at design time.  -or-  The property was set to the same identifier as another step in the containing <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> control at design time.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="wizardStepBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An <see cref="T:System.Object" /> that represents the that represents the control state to be restored.</param>
        <summary>Restores view-state information from a previous page request that was saved by the <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> method.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name associated with a step in a control that acts as a wizard.</summary>
        <value>Le nom associé à une étape dans un contrôle qui agit comme un Assistant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> propriété retourne une chaîne qui identifie une étape dans un contrôle de l’Assistant. Si une valeur est spécifiée pour le <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propriété, le <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> propriété renvoie cette valeur. Si aucune valeur n’est spécifiée pour le <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propriété, le <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> propriété retourne la valeur de la <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propriété. Si les valeurs ne sont pas spécifiées pour une le <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> ou <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propriété, le <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> propriété renvoie `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="wizardStepBase.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="wizardStepBase.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
        <summary>Outputs the content of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> control's child controls to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered on the client.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WizardStepType StepType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepType As WizardStepType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WizardStepType StepType { System::Web::UI::WebControls::WizardStepType get(); void set(System::Web::UI::WebControls::WizardStepType value); };" />
      <MemberSignature Language="F#" Value="member this.StepType : System.Web.UI.WebControls.WizardStepType with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of navigation user interface (UI) to display for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
        <value>Une des valeurs d'énumération <see cref="T:System.Web.UI.WebControls.WizardStepType" />. La valeur par défaut est <see langword="WizardStepType.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> propriété pour spécifier le type de boutons de navigation à afficher pour une étape dans un <xref:System.Web.UI.WebControls.Wizard> contrôle. Si vous spécifiez une valeur pour cette propriété, toute étape marquée comme <xref:System.Web.UI.WebControls.WizardStepType.Complete> affiche dans un état désactivé dans la barre latérale.  
  
 Si vous ne spécifiez pas une valeur pour cette propriété, la valeur par défaut est `WizardStepType.Auto`.  
  
 Le tableau suivant répertorie les paramètres disponibles pour le <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> propriété et le comportement résultant de l’étape :  
  
 `WizardStepType.Auto`  
 L’interface utilisateur qui est restitué pour l’étape de navigation est déterminée par l’ordre dans lequel l’étape est déclarée.  
  
 `WizardStepType.Complete`  
 L’étape est la dernière à apparaître. Aucun bouton de navigation n’est rendus.  
  
 `WizardStepType.Finish`  
 L’étape est l’étape de collecte de données final. Les boutons terminer et précédent sont rendus pour la navigation.  
  
 `WizardStepType.Start`  
 L’étape est le premier à apparaître. Un bouton précédent n’est pas rendu.  
  
 `WizardStepType.Step`  
 L’étape est n’importe quelle étape entre le début et l’étape finale. Boutons Précédent et suivant sont rendus pour la navigation. Ce type d’étape est utile pour remplacer le <xref:System.Web.UI.WebControls.WizardStepType.Auto> type d’étape.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.WizardStepType" /> enumeration values.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the title to use for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control when the sidebar feature is enabled.</summary>
        <value>Le titre à utiliser pour une étape dans un <see cref="T:System.Web.UI.WebControls.Wizard" /> contrôle lorsque la fonctionnalité de la barre latérale est activée. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propriété pour afficher un titre convivial pour une étape dans un <xref:System.Web.UI.WebControls.Wizard> contrôle lorsque la fonctionnalité de la barre latérale est activée. Si le <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propriété n’est pas définie et la fonctionnalité de la barre latérale est activée, la valeur de la <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propriété s’affiche pour le bouton de la barre latérale.  
  
 La valeur de cette propriété, si la valeur, peut être enregistrée automatiquement dans un fichier de ressources à l’aide d’un outil de conception. Pour plus d’informations, consultez <xref:System.ComponentModel.LocalizableAttribute> et [globalisation et localisation](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propriété pour afficher un titre convivial pour une étape dans le <xref:System.Web.UI.WebControls.Wizard> contrôle. Dans l’exemple, `Step1` n’a pas son <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propriété définie, de sorte qu’il apparaît dans le <xref:System.Web.UI.WebControls.Wizard> contrôle comme « WizardStep1 ». `Step2` a son <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propriété définie, afin qu’elle apparaisse en tant que « Étape 2 ».  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/CS/wizardstepbasetitlecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/VB/wizardstepbasetitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="Wizard">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Wizard Wizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Wizard Wizard" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wizard As Wizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Wizard ^ Wizard { System::Web::UI::WebControls::Wizard ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Wizard : System.Web.UI.WebControls.Wizard" Usage="System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Wizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.UI.WebControls.Wizard" /> control that is the parent of the object derived from <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</summary>
        <value>Le <see cref="T:System.Web.UI.WebControls.Wizard" /> contrôle qui est le parent de l’objet dérivé de <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
  </Members>
</Type>