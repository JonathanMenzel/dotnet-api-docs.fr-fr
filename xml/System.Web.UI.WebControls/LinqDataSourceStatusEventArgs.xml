<Type Name="LinqDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8ef52ad56e9cfa9547b24b47a2d6f4a4e6ee0e40" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36581353" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour les événements <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" /> et <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> classe vous permet d’examiner les résultats des opérations de données qui ont été effectuées par un <xref:System.Web.UI.WebControls.LinqDataSource> contrôle. A <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> objet est passé aux gestionnaires d’événements pour le <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, et <xref:System.Web.UI.WebControls.LinqDataSource.Updated> les événements de la <xref:System.Web.UI.WebControls.LinqDataSource> contrôle.  
  
 Si l’opération de données s’est terminée correctement, l’objet de données résultant est stocké dans le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propriété et la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propriété est `null`. Si l’opération de données a échoué, l’exception s’est produite lors de l’opération de données est stockée dans le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propriété et la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propriété est `null`. Si vous avez géré l’exception représentée par la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propriété, définissez la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> propriété `true` afin que l’exception n’est pas levée.  
  
 Vous récupérez le nombre total d’enregistrements de données retourné par une requête via le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> événement. Dans le Gestionnaire d’événements, si le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propriété `null`, le produit ID est récupéré à partir de l’objet dans le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propriété. Le produit ID est une clé primaire pour la table et est défini par la base de données, par conséquent, la valeur ne connaît pas jusqu'à la fin de l’opération d’insertion. Le message d’exception est enregistré si le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propriété n’est pas égale à `null`. Le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> est ensuite définie sur `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : Exception -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">Erreur survenue lors de l'opération de données.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> à l'aide d'une exception survenue suite à l'opération de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est utilisé lorsqu’une exception est levée pendant l’opération de données. Le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> est automatiquement définie sur `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs result" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="result">Objet qui contient les données résultant d'une opération de données.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> à l'aide d'un objet qui contient les données de l'opération de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est utilisé lors de l’opération de données est terminée sans erreur. Le `result` paramètre contient un objet qui représente le résultat de l’opération de données. Le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> est automatiquement définie sur `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result, int totalRowCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result, int32 totalRowCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object, totalRowCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result, int totalRowCount);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj * int -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs (result, totalRowCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="totalRowCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="result">Objet qui contient les données résultant d'une opération de données.</param>
        <param name="totalRowCount">Nombre de lignes qui ont été retournées par une opération d'extraction de données.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> à l'aide d'un objet qui contient les données de l'opération de données et le nombre de lignes retournées.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'exception levée lors de l'opération de données.</summary>
        <value>Objet <see cref="T:System.Exception" /> qui représente l'exception si une erreur s'est produite ; sinon, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si une exception est levée pendant l’opération de données, elle est stockée dans le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propriété. Vous pouvez créer des gestionnaires d’événements pour le <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, et <xref:System.Web.UI.WebControls.LinqDataSource.Updated> événements et récupérer l’exception, le cas échéant, via le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> événement. Dans le Gestionnaire d’événements, si le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propriété `null`, le produit ID est récupéré à partir de l’objet dans le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propriété. L’ID de produit est une clé primaire pour la table et est définie par la base de données, donc la valeur n’est pas connue jusqu'à la fin de l’opération d’insertion. Le message d’exception est enregistré si le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propriété n’est pas égale à `null`. Le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> est ensuite définie sur `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si l'exception a été gérée et qu'elle ne doit plus être levée.</summary>
        <value>
          <see langword="true" /> si l'exception a été gérée ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez créer des gestionnaires d’événements pour le <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, et <xref:System.Web.UI.WebControls.LinqDataSource.Updated> événements pour examiner toutes les exceptions qui se sont produites lors de ces opérations. Si vous gérez l’exception et que vous ne souhaitez pas qu’il soit plus levée, définissez la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> propriété `true`. Si vous ne définissez pas le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> propriété `true`, l’exception sera propagée au gestionnaire d’événements suivant dans la pile des appels.  
  
   
  
## Examples  
 L’exemple suivant montre un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> événement. Dans le Gestionnaire d’événements, si le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propriété `null`, le produit ID est récupéré à partir de l’objet dans le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propriété. Le produit ID est une clé primaire pour la table et est défini par la base de données, par conséquent, la valeur ne connaît pas jusqu'à la fin de l’opération d’insertion. Le message d’exception est enregistré si le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propriété n’est pas égale à `null`. Le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> est ensuite définie sur `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet qui représente le résultat d'une opération de données.</summary>
        <value>Objet qui contient les données résultant de l'opération de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous utilisez le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propriété pour examiner les valeurs retournées par une opération de données. Vous pouvez récupérer les paramètres de sortie à partir d’une opération de données ou modifier les valeurs retournées par une requête.  
  
 Les données stockées dans le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propriété varie selon le type d’opération de données qui a été effectuée. Lorsque vous supprimez des données, le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propriété contient un objet du type spécifié dans le <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> propriété, avec les valeurs d’origine qui ont été supprimées de la source de données. Lorsque vous insérez ou mettez à jour des données, le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propriété contient un objet du type spécifié dans le <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> propriété, avec les nouvelles valeurs ont été enregistrées dans la source de données. Lorsque vous sélectionnez des données, le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propriété contient les résultats de la requête.  
  
 Si la requête select implique le regroupement des données ou en sélectionnant un sous-ensemble de propriétés à partir du type spécifié dans le <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> propriété, le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propriété contient un objet d’un type créé dynamiquement. Dans le cas contraire, le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propriété contient un objet du type spécifié dans le <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> événement. Dans le Gestionnaire d’événements, si le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propriété `null`, le produit ID est récupéré à partir de l’objet dans le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propriété. Le produit ID est une clé primaire pour la table et est défini par la base de données, par conséquent, la valeur ne connaît pas jusqu'à la fin de l’opération d’insertion. Le message d’exception est enregistré si le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propriété n’est pas égale à `null`. Le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> est ensuite définie sur `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalRowCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalRowCount : int" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Place le nombre total de lignes dans un groupe de données d'une opération d'extraction de données.</summary>
        <value>Nombre total de lignes dans un groupe de données de l'opération d'extraction de données ; -1 si l'objet <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> a été créé pendant une opération de modification de données ; -1 si vous avez activé la pagination personnalisée en affectant <see langword="true" /> à <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> et en affectant <see langword="false" /> à <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous utilisez le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> propriété à obtenir le nombre d’enregistrements dans le jeu de données pendant une opération de récupération de données. En général, vous extrayez cette propriété lorsque vous affichez les pages de données et que vous souhaitez afficher le nombre total d’enregistrements.  
  
 Lorsque les données sont transmise par radiomessagerie, la valeur dans le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> propriété peut être différente du nombre réel de lignes retournées par la requête. Il s’agit, car la requête retourne uniquement le nombre de lignes qui sont nécessaires pour cette page de données.  
  
 Le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> propriété contient le nombre d’enregistrements à partir d’une requête uniquement quand il est accessible dans le Gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.LinqDataSource.Selected> événement. Lorsque la propriété est accessible à partir d’un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, ou <xref:System.Web.UI.WebControls.LinqDataSource.Updated> événement, le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> propriété contient la valeur -1.  
  
 La valeur de la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> dépend de la propriété le <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> propriété de la <xref:System.Web.UI.WebControls.LinqDataSource> (contrôle), puis, dans le `AllowPaging` propriété du contrôle lié aux données. Le tableau suivant récapitule les valeurs possibles pour le <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> propriété.  
  
|Propriété AutoPage du contrôle LinqDataSource|Propriété AllowPaging du contrôle lié aux données|Propriété TotalRowCount|Résultat|  
|-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|  
|`true`|`true`|Nombre d’enregistrements pour une requête.|Données sont automatiquement paginées.|  
|`false`|`false`|Nombre d’enregistrements pour une requête.|Les données ne sont pas paginées.|  
|`true`|`false`|-1|Les données ne sont pas paginées.|  
|`false`|`true`|La valeur que vous avez affecté à la <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> propriété dans le Gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> événement.|Données paginées en fonction des valeurs que vous avez spécifié quand vous avez personnalisé la pagination.|  
  
   
  
## Examples  
 L’exemple suivant montre une page Web avec un <xref:System.Web.UI.WebControls.LinqDataSource> (contrôle), un <xref:System.Web.UI.WebControls.GridView> (contrôle) et un <xref:System.Web.UI.WebControls.Literal> contrôle. Le <xref:System.Web.UI.WebControls.LinqDataSource> contrôle définit un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.LinqDataSource.Selected> événement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx#1)]  
  
 L’exemple suivant montre le code du Gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.LinqDataSource.Selected> événement. La valeur de la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> est affectée à la <xref:System.Web.UI.WebControls.Literal> contrôle.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>