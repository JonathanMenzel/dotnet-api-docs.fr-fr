<Type Name="MenuItemCollection" FullName="System.Web.UI.WebControls.MenuItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="645ea2411a9e3e98aa62e6ab4658859603f42074" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37534302" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MenuItemCollection : System.Collections.ICollection, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MenuItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.MenuItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MenuItemCollection&#xA;Implements ICollection, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItemCollection sealed : System::Collections::ICollection, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type MenuItemCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Représente une collection d'éléments de menu dans un contrôle <see cref="T:System.Web.UI.WebControls.Menu" />. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.MenuItemCollection> classe est utilisée pour stocker et gérer une collection de <xref:System.Web.UI.WebControls.MenuItem> des objets dans le <xref:System.Web.UI.WebControls.Menu> contrôle. Le <xref:System.Web.UI.WebControls.Menu> de contrôles utilise le <xref:System.Web.UI.WebControls.MenuItemCollection> les éléments de classe pour stocker son menu racine dans le <xref:System.Web.UI.WebControls.Menu.Items%2A> propriété. Cette collection est également utilisée pour le <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> propriété d’un <xref:System.Web.UI.WebControls.MenuItem> objet pour stocker les éléments de sous-menu de l’élément de menu (le cas échéant).  
  
 Le <xref:System.Web.UI.WebControls.MenuItemCollection> classe prend en charge plusieurs façons d’accéder aux éléments dans la collection :  
  
-   Utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.Item%2A> indexeur pour extraire directement un <xref:System.Web.UI.WebControls.MenuItem> objet à un index de base zéro spécifique.  
  
-   Utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> méthode pour créer un énumérateur qui peut être utilisé pour itérer la collection.  
  
-   Utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> méthode pour copier le contenu de la collection dans un tableau.  
  
 Vous pouvez gérer par programme un <xref:System.Web.UI.WebControls.MenuItemCollection> objet en ajoutant et supprimant <xref:System.Web.UI.WebControls.MenuItem> objets. Pour ajouter des éléments de menu à la collection, utilisez la <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> ou <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> (méthode). Pour supprimer des nœuds de la collection, utilisez la <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>, le <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>, ou le <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> (méthode).  
  
> [!NOTE]
>  Lorsque le <xref:System.Web.UI.WebControls.Menu> contrôle est lié à une source de données, le <xref:System.Web.UI.WebControls.Menu.Items%2A> et <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> sont remplis automatiquement chaque fois que la liaison se produit. Les modifications apportées aux collections entre deux liaisons seront perdues. Pour conserver ces modifications, mettez à jour la source de données ou régénérer manuellement la collection chaque fois que vous liez.  
  
 Le <xref:System.Web.UI.WebControls.MenuItemCollection> classe contient des propriétés et méthodes qui vous permettent de récupérer des informations sur la collection elle-même. Pour rechercher le nombre d’éléments contenus dans la collection, utilisez la <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A> propriété. Si vous souhaitez déterminer si la collection contient un certain <xref:System.Web.UI.WebControls.MenuItem> de l’objet, utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A> (méthode). Pour obtenir l’index d’un <xref:System.Web.UI.WebControls.MenuItem> objet dans la collection, utilisez la <xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment remplir la <xref:System.Web.UI.WebControls.Menu.Items%2A> et <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> collections à l’aide de la syntaxe déclarative.  
  
 [!code-aspx-csharp[MenuDeclarative#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDeclarative/CS/menudeclarativecs.aspx#1)]
 [!code-aspx-vb[MenuDeclarative#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDeclarative/VB/menudeclarativevb.aspx#1)]  
  
 L’exemple de code suivant montre comment ajouter par programmation un <xref:System.Web.UI.WebControls.MenuItem> de l’objet à le <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> collection d’un élément de menu racine.  
  
 [!code-aspx-csharp[MenuItemCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAdd/CS/menuitemcollectionaddcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAdd/VB/menuitemcollectionaddvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
    <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItemCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItemCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> à l'aide des valeurs par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.MenuItemCollection> classe en utilisant les valeurs par défaut. Ce constructeur est couramment utilisé lors de la création d’une collection de la racine des éléments de menu où un menu parent (ou propriétaire) n’est pas requis.  
  
> [!NOTE]
>  Lorsque vous créez une collection d’enfants des éléments de menu, vous devez utiliser le constructeur surchargé qui prend le `owner` paramètre, au lieu de ce constructeur, pour spécifier l’élément de menu parent.  
  
 Ce constructeur est utilisé principalement par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.Menu> contrôle pour initialiser le <xref:System.Web.UI.WebControls.Menu.Items%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItemCollection (System.Web.UI.WebControls.MenuItem owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.MenuItem owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.#ctor(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItemCollection(System::Web::UI::WebControls::MenuItem ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItemCollection : System.Web.UI.WebControls.MenuItem -&gt; System.Web.UI.WebControls.MenuItemCollection" Usage="new System.Web.UI.WebControls.MenuItemCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="owner">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> qui représente l'élément de menu parent du <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> à l'aide de l'élément de menu parent (ou propriétaire) spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.MenuItemCollection> classe à l’aide de l’élément de menu parent spécifié (ou propriétaire). Ce constructeur est couramment utilisé lors de la création d’une collection d’éléments de menu enfant où vous devez spécifier l’élément de menu parent.  
  
> [!NOTE]
>  Lorsque vous créez une collection de la racine des éléments de menu, envisagez d’utiliser le constructeur par défaut comme éléments de menu racine n’ont pas un élément de menu parent.  
  
 Ce constructeur est utilisé principalement par les développeurs de contrôles lors de l’extension la <xref:System.Web.UI.WebControls.MenuItem> classe pour initialiser le <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.MenuItem child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.MenuItem child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (child As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::MenuItem ^ child);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.MenuItem -&gt; unit" Usage="menuItemCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="child">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> à ajouter à la fin de l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours.</param>
        <summary>Ajoute l'objet <see cref="T:System.Web.UI.WebControls.MenuItem" /> spécifié à la fin de l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> méthode à ajouter spécifié <xref:System.Web.UI.WebControls.MenuItem> objet à la fin de la collection.  
  
> [!NOTE]
>  Vous pouvez ajouter des valeurs null et dupliquer <xref:System.Web.UI.WebControls.MenuItem> objets à la collection.  
  
 Comme alternative, vous pouvez insérer un <xref:System.Web.UI.WebControls.MenuItem> objet dans la collection à un index spécifique à l’aide de la <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> méthode pour ajouter par programmation un <xref:System.Web.UI.WebControls.MenuItem> de l’objet à un <xref:System.Web.UI.WebControls.MenuItemCollection> objet.  
  
 [!code-aspx-csharp[MenuItemCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAdd/CS/menuitemcollectionaddcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAdd/VB/menuitemcollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="child" /> est <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.MenuItem child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.MenuItem child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, child As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::MenuItem ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.MenuItem -&gt; unit" Usage="menuItemCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="index">Position de l'index de base zéro à laquelle insérer <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <param name="child">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> à insérer.</param>
        <summary>Insère l'objet <see cref="T:System.Web.UI.WebControls.MenuItem" /> spécifié dans l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours à l'emplacement d'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> méthode pour insérer le texte spécifié <xref:System.Web.UI.WebControls.MenuItem> objet dans la collection à l’index spécifié.  
  
> [!NOTE]
>  Vous pouvez ajouter des valeurs null et dupliquer <xref:System.Web.UI.WebControls.MenuItem> objets à la collection.  
  
 Comme alternative, vous pouvez également ajouter simplement un <xref:System.Web.UI.WebControls.MenuItem> objet à la fin de la collection à l’aide de la <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> méthode pour insérer par programme un <xref:System.Web.UI.WebControls.MenuItem> de l’objet dans un <xref:System.Web.UI.WebControls.MenuItemCollection> objet à un emplacement d’index spécifié.  
  
 [!code-aspx-csharp[MenuItemCollectionAddAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAddAt/CS/menuitemcollectionaddatcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAddAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAddAt/VB/menuitemcollectionaddatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="menuItemCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime tous les éléments de l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> méthode pour supprimer chaque <xref:System.Web.UI.WebControls.MenuItem> objet à partir du <xref:System.Web.UI.WebControls.MenuItemCollection> objet.  
  
> [!NOTE]
>  Pour supprimer un nœud individuel de la collection, envisagez d’utiliser le <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> ou <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> méthode pour supprimer tous les éléments de la <xref:System.Web.UI.WebControls.Menu.Items%2A> collection d’un <xref:System.Web.UI.WebControls.Menu> contrôle.  
  
 [!code-aspx-csharp[MenuItemCollectionClear#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionClear/CS/menuitemcollectionclearcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionClear#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionClear/VB/menuitemcollectionclearvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.MenuItem c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.MenuItem c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (c As MenuItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::MenuItem ^ c);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.MenuItem -&gt; bool" Usage="menuItemCollection.Contains c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="c">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> à rechercher.</param>
        <summary>Détermine si l'objet <see cref="T:System.Web.UI.WebControls.MenuItem" /> spécifié se trouve dans la collection.</summary>
        <returns>
          <see langword="true" /> si la collection contient l'objet <see cref="T:System.Web.UI.WebControls.MenuItem" /> spécifié ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A> méthode pour déterminer si un <xref:System.Web.UI.WebControls.MenuItem> objet est contenu dans le courant <xref:System.Web.UI.WebControls.MenuItemCollection> objet. Le <xref:System.Web.UI.WebControls.MenuItem> et ses propriétés est comparée à la valeur passée. Cette méthode est couramment utilisée pour tester l’existence d’un <xref:System.Web.UI.WebControls.MenuItem> objet avant d’effectuer une tâche, comme l’ajout ou suppression d’un élément de menu de la collection.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A> méthode pour déterminer si un <xref:System.Web.UI.WebControls.MenuItem> objet est contenu dans un <xref:System.Web.UI.WebControls.MenuItemCollection> objet.  
  
 [!code-aspx-csharp[MenuItemCollectionContains#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionContains/CS/menuitemcollectioncontainscs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionContains#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionContains/VB/menuitemcollectioncontainsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Copie le contenu de l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> actuel.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="menuItemCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <see cref="T:System.Array" /> de base zéro recevant les éléments copiés de l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours.</param>
        <param name="index">Position dans le tableau cible à laquelle commencer la réception du contenu copié.</param>
        <summary>Copie tous les éléments de l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> dans un tableau <see cref="T:System.Array" /> compatible unidimensionnel, en commençant à l'index spécifié dans le tableau cible.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> méthode pour copier le contenu du cours <xref:System.Web.UI.WebControls.MenuItemCollection> objet dans la liste spécifiée de base zéro <xref:System.Array?displayProperty=nameWithType>. Les éléments sont copiés en commençant à l’index spécifié du tableau cible. Avec le <xref:System.Array?displayProperty=nameWithType>, vous pouvez ensuite utiliser la syntaxe de tableau pour accéder aux éléments dans le <xref:System.Web.UI.WebControls.MenuItemCollection> objet.  
  
 Comme alternative, vous pouvez également utiliser le <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> méthode pour créer un énumérateur qui peut être utilisé pour accéder aux éléments dans la collection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> n'est pas un tableau d'objets <see cref="T:System.Web.UI.WebControls.MenuItem" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.MenuItem[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.MenuItem[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As MenuItem(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::MenuItem ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.MenuItem[] * int -&gt; unit" Usage="menuItemCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.MenuItem[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Tableau de base zéro d'objets <see cref="T:System.Web.UI.WebControls.MenuItem" /> qui reçoit les éléments copiés de l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours.</param>
        <param name="index">Position dans le tableau cible à laquelle commencer la réception du contenu copié.</param>
        <summary>Copie tous les éléments de l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> dans un tableau d'objets <see cref="T:System.Web.UI.WebControls.MenuItem" /> compatible unidimensionnel, en commençant à l'index spécifié dans le tableau cible.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> méthode pour copier le contenu du cours <xref:System.Web.UI.WebControls.MenuItemCollection> objet dans le tableau de base zéro spécifié. Les éléments sont copiés en commençant à l’index spécifié du tableau cible. Avec le tableau, vous pouvez ensuite utiliser la syntaxe de tableau pour accéder aux éléments dans le <xref:System.Web.UI.WebControls.MenuItemCollection> objet.  
  
 Comme alternative, vous pouvez également utiliser le <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> méthode pour créer un énumérateur qui peut être utilisé pour accéder aux éléments dans la collection.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> méthode pour copier les éléments dans un <xref:System.Web.UI.WebControls.MenuItemCollection> objet vers un tableau de <xref:System.Web.UI.WebControls.MenuItem> objets.  
  
 [!code-aspx-csharp[MenuItemCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionCopyTo/CS/menuitemcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionCopyTo/VB/menuitemcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.MenuItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre d'éléments de menu contenus dans l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours.</summary>
        <value>Nombre d'éléments de menu contenus dans l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A> propriété afin de déterminer le nombre d’éléments dans un <xref:System.Web.UI.WebControls.MenuItemCollection> objet. Cette propriété est couramment utilisée lors de l’itération dans une collection pour déterminer la limite supérieure de la collection. Le <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A> propriété est généralement utilisée pour déterminer si une collection est vide.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A> propriété afin de déterminer le nombre d’éléments de menu dans un <xref:System.Web.UI.WebControls.MenuItemCollection> objet.  
  
 [!code-aspx-csharp[MenuItemCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionCount/CS/menuitemcollectioncountcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionCount/VB/menuitemcollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="menuItemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein des éléments de l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours.</summary>
        <returns>Énumérateur qui peut être utilisé pour itérer au sein des éléments de l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> méthode pour créer un énumérateur qui peut être facilement itéré pour obtenir chaque élément en cours <xref:System.Web.UI.WebControls.MenuItemCollection> objet. Pour obtenir l’élément actuellement pointé dans l’énumérateur, utilisez le <xref:System.Collections.IEnumerator.Current%2A> propriété. Utilisez le <xref:System.Collections.IEnumerator.MoveNext%2A> méthode pour passer à l’élément suivant. Si vous avez besoin de ramener l’énumérateur vers le début de la collection, utilisez la <xref:System.Collections.IEnumerator.Reset%2A> (méthode).  
  
> [!NOTE]
>  Après avoir créé un énumérateur ou que vous utilisez le <xref:System.Collections.IEnumerator.Reset%2A> (méthode), vous devez appeler la <xref:System.Collections.IEnumerator.MoveNext%2A> (méthode). Sinon, l’élément représenté par le <xref:System.Collections.IEnumerator.Current%2A> propriété n’est pas définie.  
  
 Comme alternative, vous pouvez également utiliser le <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> méthode pour copier les éléments dans la collection dans un tableau. Vous pouvez ensuite utiliser le tableau pour accéder aux éléments dans la collection.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> méthode pour créer un énumérateur qui contient les éléments de sous-menu de le `Music` élément de menu dans un <xref:System.Web.UI.WebControls.Menu> contrôle.  
  
 [!code-aspx-csharp[MenuItemCollectionGetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionGetEnumerator/CS/menuitemcollectiongetenumeratorcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionGetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionGetEnumerator/VB/menuitemcollectiongetenumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.MenuItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.MenuItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As MenuItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::MenuItem ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.MenuItem -&gt; int" Usage="menuItemCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> à rechercher.</param>
        <summary>Détermine l'index de l'objet <see cref="T:System.Web.UI.WebControls.MenuItem" /> spécifié dans la collection.</summary>
        <returns>Index de base zéro de la première occurrence de <paramref name="value" /> dans l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours, s'il existe ; sinon, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A> méthode pour déterminer l’index de l’objet <xref:System.Web.UI.WebControls.MenuItem> objet en cours <xref:System.Web.UI.WebControls.MenuItemCollection> objet. Si l’élément de menu n’est pas dans la collection, la méthode retourne -1.  
  
> [!NOTE]
>  Si l’élément de menu spécifié apparaît plusieurs fois dans la collection, l’index de la première occurrence est retourné.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A> méthode pour déterminer l’index d’un <xref:System.Web.UI.WebControls.MenuItem> au sein de l’objet une <xref:System.Web.UI.WebControls.MenuItemCollection> objet.  
  
 [!code-aspx-csharp[MenuItemCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionIndexOf/CS/menuitemcollectionindexofcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionIndexOf/VB/menuitemcollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.MenuItemCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'accès à l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> est synchronisé (thread-safe).</summary>
        <value>Retourne toujours <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A> propriété est utilisée pour indiquer si l’accès à la <xref:System.Web.UI.WebControls.MenuItemCollection> objet est synchronisé (thread-safe). Cette propriété est dérivée de la <xref:System.Collections.ICollection?displayProperty=nameWithType> classe et est substituée pour toujours retourner `false`.  
  
 Pour plus d’informations sur la <xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A> propriété, consultez le <xref:System.Collections.ICollection.IsSynchronized%2A> propriété de la <xref:System.Collections.ICollection> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ default[int] { System::Web::UI::WebControls::MenuItem ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.MenuItem" Usage="System.Web.UI.WebControls.MenuItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro du <see cref="T:System.Web.UI.WebControls.MenuItem" /> à récupérer.</param>
        <summary>Obtient l'objet <see cref="T:System.Web.UI.WebControls.MenuItem" /> à l'index spécifié dans l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> à l'index spécifié dans l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cet indexeur pour accéder à un <xref:System.Web.UI.WebControls.MenuItem> objet à partir du <xref:System.Web.UI.WebControls.MenuItemCollection> objet à l’index spécifié à l’aide de la notation de tableau. L’indexeur vous permet d’accéder, modifier ou de remplacer un <xref:System.Web.UI.WebControls.MenuItem> objet dans la collection directement.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser l’indexeur pour récupérer l’élément de menu racine à partir de la <xref:System.Web.UI.WebControls.Menu.Items%2A> collection d’un <xref:System.Web.UI.WebControls.Menu> contrôle.  
  
 [!code-aspx-csharp[MenuItemCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAdd/CS/menuitemcollectionaddcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAdd/VB/menuitemcollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.MenuItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.MenuItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::MenuItem ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.MenuItem -&gt; unit" Usage="menuItemCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="value">Objet <see cref="T:System.Web.UI.WebControls.MenuItem" /> à supprimer.</param>
        <summary>Supprime l'objet <see cref="T:System.Web.UI.WebControls.MenuItem" /> spécifié de l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> méthode pour supprimer l’élément de menu spécifié de la collection. Tous les éléments qui suivent cet élément de menu sont ensuite déplacée vers le haut pour remplir la position vide. Les index des éléments déplacés sont également mis à jour.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.MenuItemCollection> objet peut contenir des valeurs null, mais aussi en double <xref:System.Web.UI.WebControls.MenuItem> objets.  
  
 Comme alternative, vous pouvez supprimer un élément de menu à partir d’un index spécifique dans la collection à l’aide de la <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> (méthode). Vous pouvez également supprimer tous les éléments de menu à partir de la collection à l’aide de la <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> méthode pour supprimer par programme un <xref:System.Web.UI.WebControls.MenuItem> de l’objet à partir d’un <xref:System.Web.UI.WebControls.MenuItemCollection> objet.  
  
 [!code-aspx-csharp[MenuItemCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionRemove/CS/menuitemcollectionremovecs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionRemove/VB/menuitemcollectionremovevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> est <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="menuItemCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Emplacement de l'index de base zéro de l'élément de menu à supprimer.</param>
        <summary>Supprime l'objet <see cref="T:System.Web.UI.WebControls.MenuItem" /> à l'emplacement d'index spécifié de l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> méthode pour supprimer le <xref:System.Web.UI.WebControls.MenuItem> objet à l’emplacement d’index spécifié de la collection. Tous les éléments qui suivent cet élément de menu sont ensuite déplacée vers le haut pour remplir la position vide. Les index des éléments déplacés sont également mis à jour.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.MenuItemCollection> objet peut contenir des valeurs null, mais aussi en double <xref:System.Web.UI.WebControls.MenuItem> objets.  
  
 Comme alternative, vous pouvez supprimer un spécifique <xref:System.Web.UI.WebControls.MenuItem> objet à l’aide de la <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> (méthode). Vous pouvez également supprimer tous les éléments de menu à partir de la collection à l’aide de la <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> méthode pour supprimer par programme un <xref:System.Web.UI.WebControls.MenuItem> de l’objet à partir d’un <xref:System.Web.UI.WebControls.MenuItemCollection> objet à un emplacement d’index spécifié.  
  
 [!code-aspx-csharp[MenuItemCollectionRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionRemoveAt/CS/menuitemcollectionremoveatcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionRemoveAt/VB/menuitemcollectionremoveatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.MenuItemCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</summary>
        <value>
          <see cref="T:System.Object" /> pouvant être utilisé pour synchroniser l'accès à <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.MenuItemCollection.SyncRoot%2A> propriété fournit une version synchronisée de la <xref:System.Web.UI.WebControls.MenuItemCollection> objet qui peut être utilisé avec le code de synchronisation (thread).  
  
> [!CAUTION]
>  Le <xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A> propriété de cette classe toujours retourne `false`, ce qui indique que le <xref:System.Web.UI.WebControls.MenuItemCollection> classe n’est pas synchronisée (pas thread-safe).  
  
 Le code de synchronisation doit effectuer les opérations sur le <xref:System.Web.UI.WebControls.MenuItemCollection.SyncRoot%2A> objet de la <xref:System.Web.UI.WebControls.MenuItemCollection> collection, pas directement sur le <xref:System.Web.UI.WebControls.MenuItemCollection> objet lui-même. Cela garantit un bon fonctionnement des collections dérivées d’autres objets. Plus précisément, il maintient une synchronisation correcte avec les autres threads qui pourraient modifier simultanément les <xref:System.Web.UI.WebControls.MenuItemCollection> objet.  
  
> [!NOTE]
>  L’objet retourné dans cette implémentation est la <xref:System.Collections.ArrayList> objet utilisé pour stocker le <xref:System.Web.UI.WebControls.MenuItem> objets dans la collection.  
  
 L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe. Même lorsqu’une collection est synchronisée, les autres threads peuvent toujours modifier la collection, à l’origine de l’énumérateur à lever une exception. Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.  
  
 Pour plus d’informations sur la <xref:System.Web.UI.WebControls.MenuItemCollection.SyncRoot%2A> propriété, consultez le <xref:System.Collections.ICollection.SyncRoot%2A> propriété de la <xref:System.Collections.ICollection> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> enregistre les modifications apportées à son état d'affichage.</summary>
        <value>
          <see langword="true" /> si le contrôle serveur est marqué pour enregistrer son état ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Object" /> qui contient les valeurs d'état d'affichage enregistrées.</param>
        <summary>Charge l'état d'affichage précédemment enregistré de l'objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre les modifications apportées à l'état d'affichage dans <see cref="T:System.Object" />.</summary>
        <returns>
          <see cref="T:System.Object" /> qui contient les changements de l'état d'affichage.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Demande à l’objet <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> d'assurer le suivi des modifications apportées à son état d'affichage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une fois que cette méthode a été appelée sur un contrôle serveur, le <xref:System.Web.UI.Control.IsTrackingViewState%2A> retourne de la propriété `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
  </Members>
</Type>