<Type Name="ButtonField" FullName="System.Web.UI.WebControls.ButtonField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6ac54289b5b10c7a9df4c643ea2e991cf7106be1" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51896259" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonField extends System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonField" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonField&#xA;Inherits ButtonFieldBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonField : System::Web::UI::WebControls::ButtonFieldBase" />
  <TypeSignature Language="F#" Value="type ButtonField = class&#xA;    inherit ButtonFieldBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ButtonFieldBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un champ qui s’affiche en tant que bouton dans un contrôle lié aux données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ButtonField> classe est utilisée par les contrôles liés aux données (tel que <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView>) pour afficher un bouton pour chaque enregistrement s’affiche. Le <xref:System.Web.UI.WebControls.ButtonField> objet est affiché différemment selon le contrôle lié aux données dans lequel il est utilisé. Par exemple, le <xref:System.Web.UI.WebControls.GridView> contrôle qui affiche un <xref:System.Web.UI.WebControls.ButtonField> objet en tant que colonne, tandis que le <xref:System.Web.UI.WebControls.DetailsView> contrôle l’affiche sous la forme d’une ligne.  
  
 En cliquant sur un bouton dans un champ de bouton déclenche l’événement de commande du contrôle lié aux données parent. Vous pouvez fournir une routine personnalisée à exécuter lorsque l’utilisateur clique sur un bouton de commande en fournissant un gestionnaire d’événements pour l’événement de commande.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.GridView> incrémente le <xref:System.Web.UI.WebControls.GridView.RowCommand> événement, tandis que le <xref:System.Web.UI.WebControls.DetailsView> incrémente le <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> événement.  
  
 Pour déterminer l’index de l’enregistrement qui déclenche l’événement de commande, utilisez le <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> propriété de l’argument d’événement qui est passé à l’événement de commande pour le contrôle lié aux données. Le <xref:System.Web.UI.WebControls.ButtonField> classe remplit automatiquement la <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> propriété avec la valeur d’index approprié.  
  
 Pour spécifier le type de bouton à afficher, utilisez le <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> propriété. Lorsque vous affichez un bouton de commande ou de lien, utilisez le <xref:System.Web.UI.WebControls.ButtonField.Text%2A> propriété pour spécifier la légende à afficher dans les boutons.  
  
> [!NOTE]
>  Si vous définissez la <xref:System.Web.UI.WebControls.ButtonField.Text%2A> propriété, tous les boutons dans une <xref:System.Web.UI.WebControls.ButtonField> partagent la même légende.  
  
 Vous pouvez également lier le <xref:System.Web.UI.WebControls.ButtonField> objet à un champ dans une source de données. Cela vous permet d’afficher différentes légendes pour les boutons dans la <xref:System.Web.UI.WebControls.ButtonField> objet. Les valeurs qui se trouvent dans le champ spécifié sont utilisées pour les légendes textuelles des boutons. Définir le <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> propriété à lier un <xref:System.Web.UI.WebControls.ButtonField> objet à un champ dans une source de données.  
  
 Lorsque vous affichez un bouton d’image, utilisez le <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> propriété pour spécifier l’image à afficher pour les boutons dans la <xref:System.Web.UI.WebControls.ButtonField> objet.  
  
> [!NOTE]
>  Tous les boutons dans une <xref:System.Web.UI.WebControls.ButtonField> objet partagent la même image.  
  
 Vous pouvez masquer un <xref:System.Web.UI.WebControls.ButtonField> objet dans un contrôle lié aux données en définissant le <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> propriété `false`.  
  
 Le <xref:System.Web.UI.WebControls.ButtonField> objet vous permet de personnaliser ses sections d’en-tête et pied de page. Pour afficher une légende dans la section d’en-tête ou pied de page, définissez la <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> ou <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> propriétés, respectivement. Au lieu de l’affichage du texte dans la section d’en-tête, vous pouvez afficher une image en définissant le <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> propriété. Pour masquer la section d’en-tête dans un <xref:System.Web.UI.WebControls.ButtonField> de l’objet, définissez le <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> propriété `false`.  
  
> [!NOTE]
>  Certains contrôles liés aux données (tels que le <xref:System.Web.UI.WebControls.GridView> contrôle) peut afficher ou masquer uniquement la section de l’intégralité de l’en-tête du contrôle. Ces contrôles liés aux données ne gèrent pas la <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> propriété pour un champ de bouton. Pour afficher ou masquer l’intégralité de l’en-tête d’un contrôle lié aux données (si disponible), utilisez le `ShowHeader` propriété pour le contrôle.  
  
 Vous pouvez également personnaliser l’apparence de la <xref:System.Web.UI.WebControls.ButtonField> objet (couleur de police, couleur d’arrière-plan et ainsi de suite) en définissant les propriétés de style pour les différentes parties du champ. Le tableau suivant répertorie les différentes propriétés de style.  
  
|Propriété de style|Les paramètres de style|  
|--------------------|----------------------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Les enfants contrôles serveur Web de la <xref:System.Web.UI.WebControls.ButtonField>.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|La section de pied de page de la <xref:System.Web.UI.WebControls.ButtonField>.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|La section d’en-tête de la <xref:System.Web.UI.WebControls.ButtonField>.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Les éléments de données dans le <xref:System.Web.UI.WebControls.ButtonField>.|  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.ButtonField> objet pour afficher une colonne de boutons de commande dans un <xref:System.Web.UI.WebControls.GridView> contrôle.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonFieldBase" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.ButtonField.%23ctor%2A> constructeur pour initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.ButtonField> classe. Ce constructeur est couramment utilisé lorsque vous ajoutez des champs à un contrôle lié aux données créé dynamiquement.  
  
 Pour ajouter un <xref:System.Web.UI.WebControls.ButtonField> objet dynamiquement à un contrôle lié aux données, créez une nouvelle <xref:System.Web.UI.WebControls.ButtonField> de l’objet, définissez ses propriétés, puis ajoutez-le à la collection de champs pour le contrôle lié aux données. Par exemple, si vous utilisez le <xref:System.Web.UI.WebControls.GridView> contrôler, ajoutez le <xref:System.Web.UI.WebControls.ButtonField> de l’objet à le <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.  
  
> [!NOTE]
>  Bien que vous pouvez ajouter les champs dynamiquement à un contrôle lié aux données, les champs doivent être déclarées de manière statique et puis affichées ou masquées, le cas échéant. La déclaration statique de tous vos champs réduit la taille de l’état d’affichage pour le contrôle lié aux données parent.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le constructeur de m pour ajouter un <xref:System.Web.UI.WebControls.ButtonField> objet dynamiquement à un <xref:System.Web.UI.WebControls.GridView> contrôle.  
  
 [!code-aspx-csharp[ButtonFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldCtor/CS/buttonfieldctorcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldCtor/VB/buttonfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne qui représente l'action à effectuer lorsqu'un clic a été effectué sur le bouton dans un objet <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <value>Nom de l'action à exécuter lorsqu'un clic est effectué sur un bouton du <see cref="T:System.Web.UI.WebControls.ButtonField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> propriété à associer un nom de commande, tel que `"Add"` ou `"Remove"`, avec les boutons dans la <xref:System.Web.UI.WebControls.ButtonField> objet. Vous pouvez définir le <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> propriété à n’importe quelle chaîne qui identifie l’action à effectuer lorsque l’utilisateur clique sur le bouton de commande. Vous pouvez ensuite par programmation déterminer le nom de commande dans un gestionnaire d’événements et effectuer les actions appropriées.  
  
> [!NOTE]
>  Tous les boutons dans une <xref:System.Web.UI.WebControls.ButtonField> objet partagent le même nom de commande.  
  
 Des contrôles liés aux données reconnaissent certains noms de commande et déclenchent automatiquement et gérer les événements appropriés pour le contrôle. Les noms de commande suivants sont reconnus :  
  
-   `"Cancel"`  
  
-   `"Delete"`  
  
-   `"Edit"`  
  
-   `"Insert"`  
  
-   `"New"`  
  
-   `"Page"`  
  
-   `"Select"`  
  
-   `"Sort"`  
  
-   `"Update"`  
  
 Pour appeler la pagination, définissez la <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> à `"Page"` et <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> de la relation contenant-contenu <xref:System.Web.UI.WebControls.Button> le contrôle à `"First"`, `"Last"`, `"Prev"`, `"Next"`, ou un numéro de page. Toutefois, étant donné que le <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> pour un <xref:System.Web.UI.WebControls.ButtonField> contrôle est toujours l’index de ligne entier, un <xref:System.Web.UI.WebControls.ButtonField> contrôle n’est pas approprié pour appeler la pagination. De même, tandis que vous pouvez appeler le tri en définissant le <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> à `"Sort"`, le <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> propriété pour un <xref:System.Web.UI.WebControls.ButtonField> contrôle est toujours l’index de ligne entier. Pour cette raison, un <xref:System.Web.UI.WebControls.ButtonField> contrôle n’est pas approprié pour appeler le tri. Pour personnaliser les noms de commandes, telles que `"Add"` et `"Remove"`, vous devez écrire le code d’événement pour vérifier le nom de commande et effectuer une action personnalisée. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.DataControlCommands>.  
  
> [!NOTE]
>  Pas tous les noms de commande sont reconnus par tous les contrôles liés aux données. Par exemple, `"New"` n’est pas reconnu par le <xref:System.Web.UI.WebControls.GridView> contrôle et `"Select"` n’est pas reconnu par le <xref:System.Web.UI.WebControls.DetailsView> contrôle.  
  
 La valeur de cette propriété est stockée dans l’état d’affichage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> propriété pour spécifier un nom de commande pour les boutons dans une <xref:System.Web.UI.WebControls.ButtonField> objet d’un <xref:System.Web.UI.WebControls.GridView> contrôle.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="buttonField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">
          <see cref="T:System.Web.UI.WebControls.DataControlField" /> vers lequel copier les propriétés du <see cref="T:System.Web.UI.WebControls.ButtonField" /> actuel.</param>
        <summary>Copie les propriétés de l'objet <see cref="T:System.Web.UI.WebControls.ButtonField" /> actuel vers l'objet <see cref="T:System.Web.UI.WebControls.DataControlField" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A> méthode est une méthode d’assistance qui est utilisée par le <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> méthode pour copier les propriétés de le <xref:System.Web.UI.WebControls.ButtonFieldBase>-objet dérivé le <xref:System.Web.UI.WebControls.DataControlField> objet qui a été créé par le <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> méthode dans une classe dérivée, appelez le <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> méthode de la classe de base pour vous assurer que toutes les propriétés de l’objet sont copiées.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="buttonField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée et retourne une instance de la classe <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <returns>Nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.ButtonField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ButtonField.CreateField%2A> méthode est une méthode d’assistance qui est utilisée par le <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> méthode de la classe de base pour créer un vide <xref:System.Web.UI.WebControls.ButtonField> objet vers lequel copier les propriétés de le <xref:System.Web.UI.WebControls.ButtonField>-objet dérivé.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Remplacer le <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> méthode pour retourner une nouvelle instance de la classe dérivée. N’appelez pas la <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> méthode de la classe de base.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du champ de données auquel la valeur est liée à la propriété <see cref="P:System.Web.UI.WebControls.Button.Text" /> du contrôle <see cref="T:System.Web.UI.WebControls.Button" /> restitué par l'objet <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <value>Nom du champ à lier au <see cref="T:System.Web.UI.WebControls.ButtonField" />. La valeur par défaut est une chaîne vide (" "), ce qui signifie que la propriété <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" /> n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> propriété d’un <xref:System.Web.UI.WebControls.ButtonField> objet est défini sur le <xref:System.Web.UI.WebControls.ButtonType.Button> ou <xref:System.Web.UI.WebControls.ButtonType.Link> , utilisez le <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> propriété pour spécifier le nom du champ à lier à la <xref:System.Web.UI.WebControls.ButtonField> objet. Les valeurs du champ sont ensuite affichés en tant que le texte pour les boutons dans la <xref:System.Web.UI.WebControls.ButtonField> objet. Si vous le souhaitez, vous pouvez mettre en forme le texte affiché en définissant le <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> propriété.  
  
 Au lieu d’utiliser le <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> propriété à lier un <xref:System.Web.UI.WebControls.ButtonField> de l’objet à un champ à partir d’une source de données, vous pouvez utiliser la <xref:System.Web.UI.WebControls.ButtonField.Text%2A> propriété pour afficher du texte statique pour le texte des boutons de la <xref:System.Web.UI.WebControls.ButtonField> objet. Lorsque le <xref:System.Web.UI.WebControls.ButtonField.Text%2A> propriété est utilisée, chaque bouton partage la même légende.  
  
> [!NOTE]
>  Si le <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> et <xref:System.Web.UI.WebControls.ButtonField.Text%2A> propriétés sont définies, le <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> propriété est prioritaire.  
  
 La valeur de cette propriété est stockée dans l’état d’affichage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> propriété pour spécifier quel champ à afficher dans un <xref:System.Web.UI.WebControls.ButtonField> colonne d’un <xref:System.Web.UI.WebControls.GridView> contrôle.  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne qui spécifie le format d'affichage de la valeur du champ.</summary>
        <value>Chaîne de mise en forme qui spécifie le format d'affichage de la valeur du champ. La valeur par défaut est une chaîne vide (""), qui indique qu'aucune mise en forme spéciale n'est appliquée à la valeur de champ.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> propriété pour spécifier un format d’affichage personnalisé pour les valeurs qui sont affichés dans le <xref:System.Web.UI.WebControls.ButtonField> objet. Si le <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> propriété n’est pas définie, la valeur du champ est affichée sans mise en forme spéciale.  
  
> [!NOTE]
>  La chaîne de format s’applique uniquement lorsque le <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> propriété est définie.  
  
 La chaîne de format peut être n’importe quelle chaîne littérale et inclut généralement un espace réservé pour la valeur du champ. Par exemple, dans la chaîne de format `"Item Value: {0}"`, le `{0}` espace réservé est remplacé par la valeur du champ lorsqu’elle est affichée dans le <xref:System.Web.UI.WebControls.ButtonField> objet. Le reste de la chaîne de format est affiché sous forme de texte littéral.  
  
> [!NOTE]
>  Si la chaîne de format n’inclut pas d’un espace réservé, la valeur du champ à partir de la source de données n’est pas incluse dans le texte final affiché.  
  
 L’espace réservé se compose de deux parties, séparées par un signe deux-points et figurant entre accolades, sous la forme { `A` : `Bxx` }. La valeur avant le signe deux-points (`A` dans l’exemple général) spécifie l’index de la valeur du champ dans une liste de paramètres de base zéro.  
  
> [!NOTE]
>  Cela `A` paramètre fait partie de la syntaxe de mise en forme. Étant donné qu’une seule valeur dans chaque cellule, cette valeur peut uniquement être définie sur 0.  
  
 Le signe deux-points et les valeurs situées après le signe deux-points sont facultatifs. Le caractère situé après le signe deux-points (`B` dans l’exemple général) spécifie le format dans lequel afficher la valeur. Le tableau suivant répertorie les formats courants.  
  
|Caractère de format|Description |  
|----------------------|-----------------|  
|`C`|Affiche les valeurs numériques au format monétaire.|  
|`D`|Affiche les valeurs numériques au format décimal.|  
|`E`|Affiche les valeurs numériques au format scientifique (exponentielle).|  
|`F`|Affiche les valeurs numériques au format fixe.|  
|`G`|Affiche les valeurs numériques au format général.|  
|`N`|Affiche les valeurs numériques au format numérique.|  
|`X`|Affiche les valeurs numériques au format hexadécimal.|  
  
> [!NOTE]
>  À l’exception de `X`, les caractères de format ne respectent pas la casse. Le `X` caractère de format affiche les caractères hexadécimaux dans le cas qui est spécifié.  
  
 La valeur après le caractère de format (`xx` dans l’exemple général) spécifie le nombre de chiffres significatifs ou de décimales à afficher. Par exemple, la chaîne de format `"{0:F2}"` affiche un nombre à virgule fixe avec deux décimales.  
  
 Pour plus d’informations sur la mise en forme des chaînes, consultez [Mise en forme des types](~/docs/standard/base-types/formatting-types.md).  
  
 La valeur de cette propriété est stockée dans l’état d’affichage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> propriété pour spécifier un format d’affichage personnalisé pour les valeurs d’un champ.  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Mettre en forme des types dans .NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataTextValue : obj -&gt; string&#xA;override this.FormatDataTextValue : obj -&gt; string" Usage="buttonField.FormatDataTextValue dataTextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">Valeur de champ à mettre en forme.</param>
        <summary>Met en forme la valeur de champ spécifiée pour une cellule dans l'objet <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <returns>Valeur de champ convertie au format spécifié par la propriété <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ButtonField.FormatDataTextValue%2A> méthode est une méthode d’assistance qui est utilisée pour transformer une valeur de champ au format spécifié par le <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> propriété.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous étendez le <see cref="T:System.Web.UI.WebControls.ButtonField" /> (classe), vous pouvez remplacer le <see cref="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" /> méthode pour effectuer une routine de mise en forme personnalisée.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'image à afficher pour chaque bouton dans l'objet <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <value>Image à afficher pour chaque bouton dans <see cref="T:System.Web.UI.WebControls.ButtonField" />. La valeur par défaut est une chaîne vide (" "), ce qui signifie que la propriété <see cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" /> n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> propriété d’un <xref:System.Web.UI.WebControls.ButtonField> objet est défini sur le <xref:System.Web.UI.WebControls.ButtonType.Image> , utilisez le <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> propriété pour spécifier l’image à afficher pour chaque bouton. Cette image peut être dans n’importe quel format de fichier (.jpg, .gif, .bmp et ainsi de suite), tant que le navigateur client prend en charge ce format.  
  
 La valeur de cette propriété est stockée dans l’état d’affichage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> propriété pour spécifier une image à afficher pour chaque bouton dans le <xref:System.Web.UI.WebControls.ButtonField> objet. Pour cet exemple de code afficher, vous devez fournir votre propre image.  
  
 [!code-aspx-csharp[ButtonFieldImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldImageUrl/CS/buttonfieldimageurlcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldImageUrl/VB/buttonfieldimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool sortingEnabled, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool sortingEnabled, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="buttonField.Initialize (sortingEnabled, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingEnabled" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="sortingEnabled">
          <see langword="true" /> pour permettre le tri ; sinon, <see langword="false" />.</param>
        <param name="control">Contrôle de données auquel appartient <see cref="T:System.Web.UI.WebControls.ButtonField" />.</param>
        <summary>Initialise l'objet <see cref="T:System.Web.UI.WebControls.ButtonField" /> actuel.</summary>
        <returns>
          <see langword="false" /> qui indique que le contrôle ne doit pas être obligatoirement relié aux données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> méthode est appelée par le contrôle de données avec laquelle le <xref:System.Web.UI.WebControls.ButtonField> objet est associé pour effectuer l’initialisation d’objet de base pour les instances du champ, avant que le champ est ajouté à une collection de lignes. Contrôles de données, tels que <xref:System.Web.UI.WebControls.DetailsView> et <xref:System.Web.UI.WebControls.GridView>, appelez le <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> méthode dans leurs `CreateChildControls` méthodes avant les autres méthodes, telles que `CreateRow`, sont appelées pour créer des lignes spécifiques avec des données.  
  
 Appelez le <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> méthode lorsque vous écrivez un contrôle lié aux données personnalisé qui utilise <xref:System.Web.UI.WebControls.TableCell> objets pour effectuer l’initialisation de base pour un <xref:System.Web.UI.WebControls.ButtonField> objet. Implémentez cette méthode si votre <xref:System.Web.UI.WebControls.ButtonField>-type dérivé nécessite une initialisation d’objet avant de remplir <xref:System.Web.UI.WebControls.TableCell> objets avec des données ou des contrôles dans le <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Vous devez substituer la <see cref="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" /> méthode et retournez <see langword="true" />, si le champ nécessite que la liaison de données soit exécutée sur la publication (postback) afin que le champ fonctionne correctement.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="buttonField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">Objet <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> à initialiser.</param>
        <param name="cellType">Valeur <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> qui indique le type de ligne (en-tête, pied de page ou données).</param>
        <param name="rowState">Une des valeurs de <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <param name="rowIndex">Index de base zéro de la ligne.</param>
        <summary>Initialise l'objet <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> spécifié à l'état de ligne spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> méthode crée le type de bouton qui est spécifié par le <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> propriété et l’ajoute à la <xref:System.Web.UI.Control.Controls%2A> collection de la <xref:System.Web.UI.WebControls.DataControlFieldCell> objet. Le <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> propriété de la <xref:System.Web.UI.WebControls.Button> contrôle est défini sur `rowIndex`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la légende statique affichée pour chaque bouton dans l'objet <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <value>Légende affichée pour chaque bouton dans <see cref="T:System.Web.UI.WebControls.ButtonField" />. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> propriété d’un <xref:System.Web.UI.WebControls.ButtonField> objet est défini sur le <xref:System.Web.UI.WebControls.ButtonType.Button> ou <xref:System.Web.UI.WebControls.ButtonType.Link> , utilisez le <xref:System.Web.UI.WebControls.ButtonField.Text%2A> propriété pour afficher du texte statique pour la légende des boutons dans la <xref:System.Web.UI.WebControls.ButtonField>. Chaque bouton partage la même légende.  
  
 Au lieu d’utiliser le <xref:System.Web.UI.WebControls.ButtonField.Text%2A> propriété pour afficher du texte statique dans un <xref:System.Web.UI.WebControls.ButtonField> de l’objet, vous pouvez utiliser la <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> propriété à lier le <xref:System.Web.UI.WebControls.ButtonField> à un champ dans une source de données. Les valeurs du champ sont ensuite affichés comme des boutons de légende.  
  
> [!NOTE]
>  Si le <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> et <xref:System.Web.UI.WebControls.ButtonField.Text%2A> propriétés sont définies, le <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> propriété est prioritaire.  
  
 La valeur de cette propriété est stockée dans l’état d’affichage.  
  
 La valeur de cette propriété, quand elle est définie, peut être enregistrée automatiquement dans un fichier de ressources à l’aide d’un outil de concepteur. Pour plus d’informations, consultez <xref:System.ComponentModel.LocalizableAttribute> et [globalisation et localisation](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.ButtonField.Text%2A> propriété pour spécifier la légende à afficher pour chaque bouton dans un <xref:System.Web.UI.WebControls.ButtonField> objet.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="buttonField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Détermine si les contrôles contenus dans un objet <see cref="T:System.Web.UI.WebControls.ButtonField" /> prennent en charge les rappels.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A> méthode est une méthode d’assistance qui sert à déterminer si les contrôles qui sont contenus dans un <xref:System.Web.UI.WebControls.ButtonField> rappels de prise en charge de l’objet. Cette méthode est implémentée comme une méthode vide (une méthode qui ne contient-elle pas de code) pour indiquer que les rappels sont pris en charge.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A> méthode est principalement utilisée par les développeurs de contrôles.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Les classes qui dérivent de la <see cref="T:System.Web.UI.WebControls.BoundField" /> classe peut substituer le <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> méthode pour indiquer si les contrôles contenus dans le champ prennent en charge les rappels. Pour indiquer que les rappels sont pris en charge, implémentez la <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> méthode comme une méthode vide qui ne lève pas d’exception ; sinon, lève une exception avec un message pertinent décrivant pourquoi les rappels ne sont pas pris en charge.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>