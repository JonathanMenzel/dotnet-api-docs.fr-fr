<Type Name="FormViewCommandEventArgs" FullName="System.Web.UI.WebControls.FormViewCommandEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7ac97bdec1fef4c567a7b60d47de8b4b008afcb3" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37536210" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewCommandEventArgs extends System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewCommandEventArgs&#xA;Inherits CommandEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewCommandEventArgs : System::Web::UI::WebControls::CommandEventArgs" />
  <TypeSignature Language="F#" Value="type FormViewCommandEventArgs = class&#xA;    inherit CommandEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CommandEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour l'événement <see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView.ItemCommand> événement est déclenché lorsqu’un bouton dans le <xref:System.Web.UI.WebControls.FormView> clic sur le contrôle. Cela vous permet de fournir une méthode de gestion d’événements qui exécute une routine personnalisée chaque fois que cet événement se produit.  
  
 Boutons au sein d’un <xref:System.Web.UI.WebControls.FormView> contrôle peut aussi appeler quelques-unes des fonctionnalités intégrées du contrôle. Pour effectuer une de ces opérations, définissez la `CommandName` propriété d’un bouton à une des valeurs dans le tableau suivant.  
  
|Valeur de CommandName|Description |  
|-----------------------|-----------------|  
|« Annuler »|Annule une opération de modification ou d’insertion et retourne le <xref:System.Web.UI.WebControls.FormView> contrôle le mode spécifié par le <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriété. Déclenche la <xref:System.Web.UI.WebControls.FormView.ModeChanged> et <xref:System.Web.UI.WebControls.FormView.ModeChanging> événements.|  
|"Delete"|Supprime l’enregistrement actif. Déclenche la <xref:System.Web.UI.WebControls.FormView.ItemDeleted> et <xref:System.Web.UI.WebControls.FormView.ItemDeleting> événements.|  
|« Modifier »|Place le <xref:System.Web.UI.WebControls.FormView> contrôle en mode édition. Déclenche la <xref:System.Web.UI.WebControls.FormView.ModeChanged> et <xref:System.Web.UI.WebControls.FormView.ModeChanging> événements.|  
|« Insert »|Insère l'enregistrement actif dans la source de données. Déclenche la <xref:System.Web.UI.WebControls.FormView.ItemInserted> et <xref:System.Web.UI.WebControls.FormView.ItemInserting> événements.|  
|« Nouveau »|Place le <xref:System.Web.UI.WebControls.FormView> contrôle en mode insertion. Déclenche la <xref:System.Web.UI.WebControls.FormView.ModeChanged> et <xref:System.Web.UI.WebControls.FormView.ModeChanging> événements.|  
|« Page »|Effectue une opération de pagination. Définir le `CommandArgument` propriété du bouton pour « Premier », « dernier », « Suivant », « Précédent » ou un numéro de page pour spécifier le type d’opération de pagination à effectuer. Déclenche la <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> et <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> événements.|  
|« Update »|Met à jour l'enregistrement en cours dans la source de données. Déclenche la <xref:System.Web.UI.WebControls.FormView.ItemUpdated> et <xref:System.Web.UI.WebControls.FormView.ItemUpdating> événements.|  
  
 Bien que le <xref:System.Web.UI.WebControls.FormView.ItemCommand> événement est déclenché lorsqu’un clic sur un bouton répertorié dans le tableau précédent, il est recommandé d’utiliser les événements répertoriés dans le tableau pour l’opération.  
  
 Un <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> objet est passé à la méthode de gestion d’événements, ce qui vous permet de déterminer le nom de la commande et l’argument de commande du bouton cliqué. Pour déterminer le nom de la commande et l’argument de commande, utilisez le <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> et <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> propriétés, respectivement. Vous pouvez également accéder au contrôle bouton qui a déclenché l’événement à l’aide de la <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> propriété.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Pour obtenir la liste des valeurs de propriété initiales d'une instance de la classe <xref:System.Web.UI.WebControls.FormViewCommandEventArgs>, consultez le constructeur <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.%23ctor%2A>.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> objet passé à la méthode de gestion d’événements pour le <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> événement pour déterminer quel bouton dans un <xref:System.Web.UI.WebControls.FormView> contrôle l’utilisateur a cliqué.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewCommandEventArgs (object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandSource, class System.Web.UI.WebControls.CommandEventArgs originalArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandSource As Object, originalArgs As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewCommandEventArgs(System::Object ^ commandSource, System::Web::UI::WebControls::CommandEventArgs ^ originalArgs);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewCommandEventArgs : obj * System.Web.UI.WebControls.CommandEventArgs -&gt; System.Web.UI.WebControls.FormViewCommandEventArgs" Usage="new System.Web.UI.WebControls.FormViewCommandEventArgs (commandSource, originalArgs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandSource" Type="System.Object" />
        <Parameter Name="originalArgs" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="commandSource">Source de la commande.</param>
        <param name="originalArgs">
          <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> classe.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.Web.UI.WebControls.FormViewCommandEventArgs>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>|La valeur de la <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> propriété de la <xref:System.Web.UI.WebControls.CommandEventArgs> contenus dans le `originalArgs` paramètre.|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>|La valeur de la <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> propriété de la <xref:System.Web.UI.WebControls.CommandEventArgs> contenus dans le `originalArgs` paramètre.|  
|<xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A>|L’objet contenu dans le `commandSource` paramètre.|  
  
> [!NOTE]
>  Ce constructeur est utilisé principalement par les développeurs de contrôles lors du déclenchement d’événements.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CommandSource">
      <MemberSignature Language="C#" Value="public object CommandSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandSource : obj" Usage="System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le contrôle qui a déclenché l'événement.</summary>
        <value>
          <see cref="T:System.Object" /> qui représente le contrôle qui a déclenché l'événement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A> propriété pour accéder aux propriétés du contrôle qui a déclenché l’événement. Dans le cas d’un <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> de l’objet, le contrôle est le bouton qui a été cliqué par l’utilisateur.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A> propriété pour accéder aux propriétés du contrôle bouton qui a déclenché le <xref:System.Web.UI.WebControls.FormView.ItemCommand> événement.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewCommandEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewCommandEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le contrôle a géré l'événement.</summary>
        <value>
          <see langword="true" /> si le code d'événement lié aux données a été ignoré ou est terminé ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définissez cette propriété sur `true` dans le Gestionnaire d’événements pour spécifier que le <xref:System.Web.UI.WebControls.FormView> contrôle ne doit pas gérer l’événement, car vous l’exécutez dans votre code.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>