<Type Name="SqlDataSourceView" FullName="System.Web.UI.WebControls.SqlDataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fb9a08d0ca7ed415573b3989ba13a0ac99547a9" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55314210" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type SqlDataSourceView = class&#xA;    inherit DataSourceView&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Prend en charge le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> et fournit une interface pour les contrôles liés aux données pour effectuer des opérations de données SQL sur des bases de données relationnelles.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView> classe est principalement destinée à être utilisé par des contrôles liés aux données et non comme objet programmable dans le code de la page.  
  
 Les contrôles de source de données ASP.NET contiennent une ou plusieurs listes de données, représentées par les objets de vue de source de données. Le <xref:System.Web.UI.WebControls.SqlDataSourceView> classe étend la <xref:System.Web.UI.DataSourceView> de classe, définit les fonctionnalités de la <xref:System.Web.UI.WebControls.SqlDataSource> contrôle auquel il est associé et implémente les fonctionnalités de base de données pour le contrôle de source de données. Le <xref:System.Web.UI.WebControls.SqlDataSourceView> classe implémente les fonctionnalités de données pour le <xref:System.Web.UI.WebControls.SqlDataSource> contrôler, y compris le <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, et <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operations, tri, filtrage et la gestion des paramètres qui sont conservés dans l’affichage état.  
  
 Bien que le <xref:System.Web.UI.WebControls.SqlDataSourceView> objet n’est pas exposé directement aux développeurs de pages par le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle, la plupart de ses propriétés sont. L’opération la plus fondamentale qui effectue une vue de source de données est la récupération de données de la base de données sous-jacente à l’aide du <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> (méthode), qui Récupère un <xref:System.Collections.IEnumerable> collection d’éléments de données. Le <xref:System.Web.UI.WebControls.SqlDataSourceView> classe implémente la récupération de données de bases de données relationnelles à l’aide de requêtes SQL. Les requêtes SQL peuvent être paramétrées pour plus de souplesse et de sécurité. Les méthodes suivantes de la récupération de données, les propriétés et les événements sont implémentées par le <xref:System.Web.UI.WebControls.SqlDataSourceView> et exposées directement par son <xref:System.Web.UI.WebControls.SqlDataSource> contrôle pour les développeurs de pages et aux autres appelants :  
  
-   La propriété <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>  
  
-   La propriété <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>  
  
-   Le <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> événement  
  
-   Le <xref:System.Web.UI.WebControls.SqlDataSource.Selected> événement  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView> de l’objet prend en charge la mise à jour des données dans une base de données relationnelle à l’aide des commandes SQL. Les commandes SQL peuvent être paramétrées pour plus de souplesse et de sécurité. Contrôles liés aux données, tels que le <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView>, peut être configuré pour effectuer des mises à jour automatiquement à l’aide de la <xref:System.Web.UI.WebControls.SqlDataSourceView>, mais pas les autres contrôles. Les méthodes de mise à jour suivantes, les propriétés et les événements sont implémentées par le <xref:System.Web.UI.WebControls.SqlDataSourceView> et exposées directement par son <xref:System.Web.UI.WebControls.SqlDataSource> contrôle pour les développeurs de pages et aux autres appelants :  
  
-   La propriété <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>  
  
-   La propriété <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>  
  
-   Le <xref:System.Web.UI.WebControls.SqlDataSource.Updating> événement  
  
-   Le <xref:System.Web.UI.WebControls.SqlDataSource.Updated> événement  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView> prend en charge l’insertion de nouvelles lignes de données dans une base de données relationnelle. Les commandes SQL qui sont spécifiées dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> propriété peut être paramétrée pour une plus grande flexibilité et la sécurité. Contrôles liés aux données, tels que le <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView>, peut être configuré pour effectuer des insertions automatiquement à l’aide la <xref:System.Web.UI.WebControls.SqlDataSourceView>, mais pas les autres contrôles. Ce qui suit insérer les méthodes, propriétés et événements sont implémentées par le <xref:System.Web.UI.WebControls.SqlDataSourceView> et exposées directement par son <xref:System.Web.UI.WebControls.SqlDataSource> contrôle pour les développeurs de pages et aux autres appelants :  
  
-   La propriété <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>  
  
-   La propriété <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>  
  
-   Le <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> événement  
  
-   Le <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> événement  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView> objet également prend en charge la suppression de données dans une base de données relationnelle. Comme avec d’autres commandes, les commandes SQL qui sont spécifiées dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> propriété peut être paramétrée pour une plus grande flexibilité et la sécurité. Contrôles liés aux données, tels que le <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView>, peut être configuré pour effectuer des suppressions automatiquement à l’aide de la <xref:System.Web.UI.WebControls.SqlDataSourceView>, mais pas les autres contrôles. Ce qui suit supprimer des méthodes, propriétés et événements sont implémentées par le <xref:System.Web.UI.WebControls.SqlDataSourceView> et exposées directement par son <xref:System.Web.UI.WebControls.SqlDataSource> contrôle pour les développeurs de pages et aux autres appelants :  
  
-   La propriété <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>  
  
-   La propriété <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>  
  
-   Le <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> événement  
  
-   Le <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> événement  
  
 Récupération de données est plus puissante lorsque la clause qui sert à filtrer les données pendant la récupération de données est dynamique. En d’autres termes, une requête SQL avec une ligne statique où clause n’est pas aussi flexible et puissante qu’une requête SQL où les valeurs dans la clause WHERE sont liées aux valeurs qui peuvent changer, telles que les valeurs qui sont affichées dans des contrôles sur une page Web Forms. Au lieu de reconstruire SQL de requête et en définissant le <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriété à chaque chargement de page, vous pouvez utiliser la <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> et <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> propriétés à appliquer le filtrage dynamique à la récupération de données. Ces propriétés sont implémentées par le <xref:System.Web.UI.WebControls.SqlDataSourceView> et exposées directement par son <xref:System.Web.UI.WebControls.SqlDataSource> contrôle pour les contrôles liés aux données et aux autres appelants.  
  
 Vous pouvez trier les données que vous récupérez avec le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle en ajoutant une clause ORDER BY, ce qui provoque la base de données effectuer le classement pour vous lorsque vous récupérez des données ou en triant les données en mémoire après leur récupération. Vous pouvez fournir une expression de tri à la <xref:System.Web.UI.WebControls.SqlDataSourceView> en définissant le <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> propriété de la <xref:System.Web.UI.DataSourceSelectArguments> objet qui est passé à la <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> (méthode). La syntaxe pour le <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> propriété est identique à la syntaxe pour une <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> propriété. Si vous utilisez une procédure stockée pour récupérer des données, vous pouvez également utiliser le <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> propriété pour spécifier un paramètre qui est utilisé spécifiquement pour trier les résultats d’un appel de procédure stockée.  
  
 Lorsque plusieurs utilisateurs peut changer la base de données simultanément, il existe un risque de conflit d’accès concurrentiel. Le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle a le contrôle l’accès concurrentiel via la <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType> propriété. La fonctionnalité est implémentée dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType> propriété.  
  
 Comme de nombreux autres contrôles serveur Web, le <xref:System.Web.UI.WebControls.SqlDataSourceView> implémente le <xref:System.Web.UI.IStateManager> interface et utilise l’affichage état pour suivre son état entre les demandes de page. Les implémentations de la <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> et la propriété et la <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, et <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> méthodes sont fournies pour permettre le suivi d’état de vue pour le contrôle. Pour plus d’informations, consultez [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.SqlDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As SqlDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceView(System::Web::UI::WebControls::SqlDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceView : System.Web.UI.WebControls.SqlDataSource * string * System.Web.HttpContext -&gt; System.Web.UI.WebControls.SqlDataSourceView" Usage="new System.Web.UI.WebControls.SqlDataSourceView (owner, name, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.SqlDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner">Contrôle de source de données auquel <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> est associé.</param>
        <param name="name">Un nom unique pour la vue de source de données, dans la portée du contrôle de source de données qui le possède.</param>
        <param name="context"><see cref="T:System.Web.HttpContext" /> actuel.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> définissant le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> spécifié en tant que propriétaire de l'affichage actuel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A> constructeur est appelé par le <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> méthode pour retourner une nouvelle instance d’une vue de source de données avec la valeur `name` paramètre. Le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle est associé à un seul <xref:System.Web.UI.WebControls.SqlDataSourceView> objet à tout moment et toujours nomme la vue `Table`, bien que cette restriction d’affectation de noms est imposée par le <xref:System.Web.UI.WebControls.SqlDataSource> contrôler, pas le <xref:System.Web.UI.WebControls.SqlDataSourceView>. Vous pouvez remplacer le <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> méthode pour prendre en charge les vues avec une convention d’affectation de noms différente.  
  
 Le <xref:System.Web.HttpContext> objet qui est passé par le `context` paramètre est utilisé par la vue de source de données pour accéder aux objets de paramètre, comme le <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> et <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> propriétés.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelSelectOnNullParameter : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si une opération de récupération de données est annulée lorsque tout paramètre qui est contenu dans la collection <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> est égal à <see langword="null" />.</summary>
        <value><see langword="true" />, si une opération de récupération de données est annulée lorsqu'un paramètre contenu dans la collection <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> est égal à <see langword="null" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> propriété est stockée dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> qui est associé au contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> en cours prend en charge l'opération de suppression.</summary>
        <value><see langword="true" /> si l'opération est prise en charge ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A> retourne de la propriété `true` si le <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> propriété est définie. Une opération de suppression peut encore échouer si toutes les propriétés de données ne sont pas définies ou ne sont pas définies correctement.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> qui est associé au contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> en cours prend en charge l'opération d'insertion.</summary>
        <value><see langword="true" /> si l'opération est prise en charge ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A> retourne de la propriété `true` si le <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> propriété est définie. Une opération d’insertion peut encore échouer si toutes les propriétés de données ne sont pas définies ou ne sont pas définies correctement.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> qui est associé au contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> en cours prend en charge la pagination de données récupérées.</summary>
        <value><see langword="false" /> dans tous les cas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView> objet ne prend pas en charge la pagination.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> qui est associé au contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> en cours prend en charge la récupération du nombre total de lignes en plus du groupe de données.</summary>
        <value><see langword="false" /> dans tous les cas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView> objet ne prend pas en charge la récupération de lignes.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> qui est associé au contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> en cours prend en charge une vue triée sur les données récupérées.</summary>
        <value><see langword="true" /> si le tri est pris en charge ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A> retourne de la propriété `true`, si actuel <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propriété est définie sur le <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valeur et le <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> propriété est définie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> qui est associé au contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> en cours prend en charge l'opération de mise à jour.</summary>
        <value><see langword="true" /> si l'opération est prise en charge ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A> retourne de la propriété `true` si le <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> propriété est définie. Une opération de suppression peut encore échouer si toutes les propriétés de données ne sont pas définies ou ne sont pas définies correctement.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur indiquant comment le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> exécute des mises à jour et des suppressions lorsque des données dans une ligne de la base de données sous-jacente sont modifiées au cours de l'opération.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.ConflictOptions" />. La valeur par défaut est la valeur <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> propriété détermine si les paramètres pour les valeurs anciennes et nouvelles sont appliqués à la `Update` (méthode). Par exemple, si la commande qui est spécifié par le <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriété retourne un <xref:System.Data.DataSet> objet avec les colonnes `Name` et `Number`et le <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> propriété est définie sur le <xref:System.Web.UI.ConflictOptions.OverwriteChanges> , les paramètres sont créés pour `Name` et `Number` pour l’opération de mise à jour. Si le <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> propriété est définie sur le <xref:System.Web.UI.ConflictOptions.CompareAllValues> , les paramètres sont créés pour `Name`, `Number`, `original_Name`, et `original_Number`. (Le nom exact des paramètres pour les valeurs d’origine varie selon le <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.) Ensuite, le <xref:System.Web.UI.WebControls.SqlDataSourceView> objet détermine si la méthode qui est spécifié dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> comporte des paramètres qui correspondent.  
  
 Contrôle d’accès concurrentiel est une technique de magasins de données utilisent pour contrôler la façon dont les données sont lues et modifiées dans les magasins lorsque plusieurs clients accèdent et manipulent les mêmes données. Par exemple, un client lit les données et présente à un utilisateur, tandis que d’un autre client lit les mêmes données et les présente à un autre utilisateur. Si les deux utilisateurs mettre à jour les données et les envoient au stockage des données, un résultat inattendu peut se produire, car les deux clients peuvent mettre à jour des valeurs différentes pour les mêmes données. Cela est considéré comme un conflit. En définissant le <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> propriété le <xref:System.Web.UI.ConflictOptions.CompareAllValues> valeur, l’opération de mise à jour peut alors comparer les anciennes et nouvelles valeurs à la source de données d’origine pour détecter les conflits et les gérer en fonction des besoins.  
  
 La valeur de la <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> propriété est stockée dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée ne fait pas partie des valeurs <see cref="T:System.Web.UI.ConflictOptions" />.</exception>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Présentation du contrôle serveur Web SqlDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> d'objet ou valeurs de clés de ligne pour l'opération <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> à supprimer.</param>
        <param name="oldValues"><see cref="T:System.Collections.IDictionary" /> qui contient les valeurs de ligne qui sont évaluées uniquement si la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> a la valeur <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />.</param>
        <summary>Exécute une opération de suppression à l'aide de la chaîne <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL, de tout paramètre spécifié dans la collection <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> et des valeurs dans les <paramref name="keys" /> et collections <paramref name="oldValues" /> spécifiées.</summary>
        <returns>Une valeur qui représente le nombre de lignes supprimées de la base de données sous-jacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> les appels de méthode le <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> méthode, en passant le `keys` et `oldValues` paramètres.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> ne peut pas établir de connexion avec la source de données sous-jacente.  
  
ou 
La propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> a la valeur <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> et aucun paramètre <paramref name="oldValues" /> n'est passé.</exception>
        <exception cref="T:System.NotSupportedException">La propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> a la valeur <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne SQL que <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> utilise pour supprimer des données de la base de données sous-jacente.</summary>
        <value>Une chaîne SQL que <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> utilise pour supprimer des données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans la mesure où plusieurs produits de base de données utilisent des variétés différentes de SQL, la syntaxe de la chaîne SQL dépend du fournisseur ADO.NET actuellement utilisé, identifié par la propriété <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>.  
  
 Si la chaîne SQL est une requête ou une commande paramétrée, l'espace réservé du paramètre dépend également du fournisseur ADO.NET utilisé. Par exemple, si le fournisseur est le <xref:System.Data.SqlClient?displayProperty=nameWithType>, qui est le fournisseur par défaut pour le <xref:System.Web.UI.WebControls.SqlDataSource> (classe), l’espace réservé du paramètre est `'@parameterName'`. Toutefois, si le fournisseur est défini sur le <xref:System.Data.Odbc?displayProperty=nameWithType> ou <xref:System.Data.OleDb?displayProperty=nameWithType>, l’espace réservé du paramètre est `'?'`. Pour plus d’informations sur les commandes et les requêtes SQL paramétrables, consultez [à l’aide des paramètres avec le contrôle SqlDataSource](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> peut être une chaîne SQL ou le nom d’une procédure stockée, si la base de données sous-jacente prend en charge les procédures stockées.  
  
 La valeur de la <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> propriété est stockée dans l’état d’affichage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir la <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> texte pour supprimer une commande à partir de la table de commandes de base de données Northwind. Données sont récupérées à partir de la table Orders et affichées dans un <xref:System.Web.UI.WebControls.GridView> contrôle. Le <xref:System.Web.UI.WebControls.GridView> restitue un **supprimer** bouton automatiquement lorsque le <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> propriété est définie sur `true` remplit automatiquement les le <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection et appelle le <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> (méthode) lors de la **Supprimer** bouton. Enfin, étant donné que cet exemple supprime des données, un gestionnaire d’événements est ajouté pour tenter de sauvegarder la base de données sur le disque avant l’opération de suppression est exécutée.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le texte de la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> est une instruction SQL ou le nom d'une procédure stockée.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. La valeur par défaut est la valeur <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> propriété est stockée dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée ne fait pas partie des valeurs <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'une opération de suppression est terminée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> événement pour examiner les valeurs des paramètres de sortie après une opération de suppression est terminée. Les paramètres de sortie sont disponibles à partir de la <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objet qui est associé à l’événement.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de paramètres contenant les paramètres qui sont utilisés par la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> qui contient les paramètres utilisés par la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> propriété contient une requête SQL paramétrée, le <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection contient un <xref:System.Web.UI.WebControls.Parameter> des objets qui correspondent aux espaces réservés de paramètre dans la chaîne SQL.  
  
 Les noms de paramètre peuvent être affectés par la <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> propriété ; plus précisément, si le nom identifie une clé primaire, telle qu’une clé qui est spécifié à l’aide de la `DataKeyNames` propriété d’un contrôle lié aux données, ou dans la section supprimer et mettre à jour de scénarios dans lesquels le <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>propriété est définie sur le <xref:System.Web.UI.ConflictOptions.CompareAllValues> et un jeu de `oldValues` est passé à la méthode de données correspondante. Dans ce cas, la chaîne de format est appliquée à chaque nom de paramètre dans le `oldValues` collection.  
  
 Selon le fournisseur ADO.NET, l’ordre des paramètres dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection peut être importante. Le <xref:System.Data.OleDb?displayProperty=nameWithType> et <xref:System.Data.Odbc?displayProperty=nameWithType> fournisseurs associent les paramètres de la collection selon l’ordre dans lequel les paramètres apparaissent dans la requête SQL paramétrable. Le <xref:System.Data.SqlClient?displayProperty=nameWithType> fournisseur, qui est le fournisseur ADO.NET par défaut pour le <xref:System.Web.UI.WebControls.SqlDataSource> contrôler, associe les paramètres de la collection en faisant correspondre le nom du paramètre avec l’espace réservé dans la requête SQL. Pour plus d’informations sur les commandes et les requêtes SQL paramétrables, consultez [à l’aide des paramètres avec le contrôle SqlDataSource](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir la <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> texte pour supprimer une commande à partir de la base de données Northwind. Initialement, les données sont récupérées à partir de la table Orders et affichées dans un <xref:System.Web.UI.WebControls.DropDownList> contrôle. Vous devez déclarer explicitement le <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> propriété et appelez le <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> méthode lors de l’utilisation de contrôles liés aux données, telles que la <xref:System.Web.UI.WebControls.DropDownList> (contrairement aux contrôles, tels que le <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView>, qui remplissent automatiquement le paramètres et appellent le <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> méthode sur un contrôle de source de données). Dans cet exemple, le <xref:System.Web.UI.WebControls.Button.OnClick%2A> événement est délégué à privé <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> Gestionnaire d’événements, qui appelle explicitement la <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> méthode de la <xref:System.Web.UI.WebControls.SqlDataSource> contrôle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant une opération de suppression.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> événement pour effectuer des opérations d’initialisation supplémentaires qui sont spécifiques à votre application, pour valider les valeurs de paramètres ou pour modifier les valeurs de paramètre avant le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle effectue l’opération de suppression.  
  
 La connexion à la source de données sous-jacente n’est pas encore ouverte lorsque le délégué de gestionnaire d’événements est appelé. Par conséquent, vous ne pouvez pas annuler la <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> opération directement en appelant le <xref:System.Data.Common.DbCommand.Cancel%2A> méthode sur le <xref:System.Data.Common.DbCommand> objet exposé par le <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> objet. Vous pouvez, toutefois, annuler l’opération en définissant le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété de la <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> à `true`.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment gérer les <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> événement est déclenché avant qu’une opération de suppression se produit. Étant donné que cet exemple supprime des données à partir de la base de données Northwind, une <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> gestionnaire est ajouté à essayer de sauvegarder la base de données sur le disque avant que l’opération de suppression est effectuée.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> d'objet ou valeurs de clés de ligne pour l'opération <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> à supprimer.</param>
        <param name="oldValues"><see cref="T:System.Collections.IDictionary" /> qui contient les valeurs de ligne qui sont évaluées uniquement si la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> a la valeur <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />.</param>
        <summary>Exécute une opération de suppression à l'aide de la chaîne <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL, de tout paramètre spécifié dans la collection <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> et des valeurs dans les <paramref name="keys" /> et collections <paramref name="oldValues" /> spécifiées.</summary>
        <returns>Une valeur qui représente le nombre de lignes supprimées de la base de données sous-jacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView> classe implémente héritées <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> méthode permet de supprimer des données à partir d’une base de données. Les développeurs de pages et les auteurs de contrôle lié aux données n’appellent pas la <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> méthode directement ; au lieu de cela, utilisez exposés publiquement <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> (méthode).  
  
 Les valeurs qui sont contenus dans le `keys` collection sont évaluées et fusionnées avec toutes les valeurs qui sont contenues par la <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection. Si le <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> propriété est définie sur le <xref:System.Web.UI.ConflictOptions.CompareAllValues> , les valeurs qui sont contenus dans le `oldValues` collection formatés avec le <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> propriété et sont également fusionnés.  
  
 Avant que l’opération de suppression est effectuée, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> événement. Vous pouvez gérer cet événement pour examiner les valeurs des paramètres et effectuer tout prétraitement avant une suppression.  
  
 Pour effectuer une opération de suppression, le <xref:System.Web.UI.WebControls.SqlDataSourceView> builds de l’objet une <xref:System.Data.Common.DbCommand> à l’aide de l’objet le <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> texte et associés <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> propriétés, puis exécute le <xref:System.Data.Common.DbCommand> objet par rapport à la base de données sous-jacente. Une fois l’opération de suppression terminée, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> événement. Vous pouvez gérer cet événement pour examiner les valeurs de retour et les codes d’erreur et effectuer tout traitement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> ne peut pas établir de connexion avec la source de données sous-jacente.  
  
ou 
La propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> a la valeur <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> et aucun paramètre <paramref name="oldValues" /> n'est passé.</exception>
        <exception cref="T:System.Web.HttpException">L'utilisateur actuel ne dispose pas des autorisations appropriées pour accéder à la base de données.  
  
ou 
L'instance du contrôle est un contrôle <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> et l'accès au chemin d'accès spécifié pour la propriété <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> est refusé.</exception>
        <exception cref="T:System.NotSupportedException">La propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> a la valeur <see langword="false" />.  
  
ou 
Un chemin d'accès relatif au moment du design n'a pas été correctement mappé par le concepteur avant l'utilisation d'une instance du contrôle <see cref="T:System.Web.UI.WebControls.AccessDataSource" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values"><see cref="T:System.Collections.IDictionary" /> de valeurs utilisé avec la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> pour exécuter l'opération d'insertion de base de données. S'il n'y a pas de paramètre associé à la requête ou si la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> n'est pas une requête SQL paramétrée, passez <see langword="null" />.</param>
        <summary>Exécute une opération d'insertion à l'aide de la chaîne <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL, de tout paramètre spécifié dans la collection <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> et des valeurs qui se trouvent dans la collection <paramref name="values" /> spécifiée.</summary>
        <returns>Une valeur qui représente le nombre de lignes insérées dans la base de données sous-jacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView> classe implémente héritées <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> méthode pour insérer des données dans une base de données. Les développeurs de pages et les auteurs de contrôle lié aux données n’appellent pas la <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> méthode directement ; au lieu de cela, utilisez exposés publiquement <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> (méthode).  
  
 Avant que l’opération d’insertion est effectuée, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> événement. Vous pouvez gérer cet événement pour examiner les valeurs des paramètres et effectuer tout prétraitement avant une instruction insert.  
  
 Pour effectuer une opération d’insertion, le <xref:System.Web.UI.WebControls.SqlDataSourceView> builds de l’objet une <xref:System.Data.Common.DbCommand> à l’aide de l’objet le <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> texte et associés <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> propriétés, puis exécute le <xref:System.Data.Common.DbCommand> objet par rapport à la base de données sous-jacente. Une fois l’insertion terminée, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> événement. Vous pouvez gérer cet événement pour examiner les valeurs de retour et les codes d’erreur et effectuer tout traitement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> ne peut pas établir de connexion avec la source de données sous-jacente.</exception>
        <exception cref="T:System.Web.HttpException">L'utilisateur actuel n'a pas les autorisations appropriées pour accéder à la base de données.</exception>
        <exception cref="T:System.NotSupportedException">La propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> a la valeur <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Objet <see cref="T:System.Web.UI.DataSourceSelectArguments" /> utilisé pour demander des opérations sur les données, autres que la récupération des données de base.</param>
        <summary>Récupère des données de la base de données sous-jacente à l'aide de la chaîne SQL <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> et des paramètres de la collection <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />.</summary>
        <returns>Liste <see cref="T:System.Collections.IEnumerable" /> de lignes de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView> classe implémente héritées <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> méthode pour récupérer des données à partir d’une base de données. Les développeurs de pages et les auteurs de contrôle lié aux données n’appellent pas la <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> méthode directement ; au lieu de cela, utilisez exposés publiquement <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> (méthode).  
  
 Avant la récupération de données est effectuée, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> événement. Vous pouvez gérer cet événement pour examiner les valeurs des paramètres et effectuer tout prétraitement avant l’extraction des données.  
  
 Pour effectuer l’opération, le <xref:System.Web.UI.WebControls.SqlDataSourceView> objet builds un <xref:System.Data.Common.DbCommand> à l’aide de l’objet le <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texte et associés <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>et l’exécute sur la base de données sous-jacente. Une fois l’opération terminée, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.SqlDataSource.Selected> événement. Vous pouvez gérer cet événement pour examiner les valeurs de retour, des codes d’erreur et effectuer tout traitement.  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> méthode retourne un <xref:System.Data.DataView> si l’objet le <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> a la valeur <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>, ou un <xref:System.Data.IDataReader> si l’objet le <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> est défini sur <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>. Fermer le <xref:System.Data.IDataReader> lorsque vous avez terminé de lire les données de l’objet.  
  
 Si le <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> a la valeur <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> et mise en cache est activée, le <xref:System.Web.UI.WebControls.SqlDataSourceView> récupère les données et enregistre les données dans le cache pendant l’opération de données. Le cache est créé, ignoré ou actualisé selon le comportement de mise en cache spécifié par la combinaison de la <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> et <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propriétés.  
  
> [!IMPORTANT]
>  Lorsque vous utilisez l’emprunt d’identité client sous l’authentification Windows, les données sont mis en cache lorsque le premier utilisateur accède aux données. Si un autre utilisateur demande les mêmes données, les données sont extraite du cache. Les données ne sont pas récupérées en effectuant un autre appel à la base de données pour vérifier l’accès utilisateur aux données. Si vous prévoyez que plusieurs utilisateurs à accéder aux données et que vous souhaitez que chaque récupération de données devant être vérifiées par les configurations de sécurité de la base de données, n’utilisez pas la mise en cache.  
  
 Si le <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> a la valeur <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> et un <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> a été spécifiée, elle est évaluée ainsi que tout fourni <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> et le filtre résultant est appliqué à la liste des données pendant l’opération de récupération de données.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Les <paramref name="arguments" /> passés à la méthode <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> spécifient que la source de données doit exécuter des tâches supplémentaires lors de la récupération des données pour activer la pagination ou trier les données récupérées, mais le contrôle de source de données ne prend pas en charge la fonction demandée.  
  
ou 
La mise en cache est activée, mais la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> de la source de données n'a pas la valeur <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" />.  
  
ou 
La propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" /> est définie, mais <see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /> n'a pas la valeur <see cref="F:System.Data.CommandType.StoredProcedure" />.</exception>
        <exception cref="T:System.InvalidOperationException">La source de données ne peut pas créer de connexion de base de données.  
  
ou 
La mise en cache est activée, mais les types de caches internes et de commandes ne correspondent pas.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> de clés primaires à utiliser avec la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> pour exécuter l'opération de mise à jour de la base de données. S'il n'y a pas de clé associée à la requête ou si la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> n'est pas une requête SQL paramétrée, passez <see langword="null" />.</param>
        <param name="values"><see cref="T:System.Collections.IDictionary" /> de valeurs à utiliser avec la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> pour exécuter l'opération de mise à jour de la base de données. S'il n'y a pas de paramètre associé à la requête ou si la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> n'est pas une requête SQL paramétrée, passez <see langword="null" />.</param>
        <param name="oldValues"><see cref="T:System.Collections.IDictionary" /> qui représente les valeurs d'origine de la base de données. S'il n'y a pas de paramètre associé à la requête ou si la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> n'est pas une requête SQL paramétrée, passez <see langword="null" />.</param>
        <summary>Exécute une opération de mise à jour à l'aide de la chaîne <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL, tout paramètre de la collection <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> ainsi que les valeurs se trouvant dans les collections <paramref name="keys" />, <paramref name="values" /> et <paramref name="oldValues" /> spécifiées.</summary>
        <returns>Une valeur qui représente le nombre de lignes mises à jour dans la base de données sous-jacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView> classe implémente héritées <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> méthode pour mettre à jour des données dans une base de données. Les développeurs de pages et les auteurs de contrôle lié aux données n’appellent pas la <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> méthode directement ; au lieu de cela, utilisez exposés publiquement <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> (méthode).  
  
 Les valeurs contenues dans le `keys` et `values` collections sont évaluées et fusionnées avec toutes les valeurs contenues par la <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection. Si le <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> propriété est définie sur <xref:System.Web.UI.ConflictOptions.CompareAllValues>, les valeurs contenues dans le `oldValues` collection formatés avec le <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> et également fusionnés.  
  
 Avant l’opération de mise à jour est effectuée, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> événement. Vous pouvez gérer cet événement pour examiner les valeurs des paramètres et effectuer tout prétraitement avant une mise à jour.  
  
 Pour effectuer l’opération, le <xref:System.Web.UI.WebControls.SqlDataSourceView> génère une <xref:System.Data.Common.DbCommand> à l’aide de l’objet le <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> texte et associés <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> propriétés, puis exécute le <xref:System.Data.Common.DbCommand> objet par rapport à la base de données sous-jacente. Une fois l’opération terminée, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> événement. Vous pouvez gérer cet événement pour examiner les valeurs de retour et les codes d’erreur et effectuer tout traitement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> ne peut pas établir de connexion avec la source de données sous-jacente.  
  
ou 
La propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> a la valeur <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> et aucun paramètre <paramref name="oldValues" /> n'est passé.</exception>
        <exception cref="T:System.Web.HttpException">L'utilisateur actuel n'a pas les autorisations appropriées pour accéder à la base de données.</exception>
        <exception cref="T:System.NotSupportedException">La propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> a la valeur <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une expression de filtrage appliquée lorsque la méthode <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" /> est appelée.</summary>
        <value>Chaîne qui représente une expression de filtrage appliquée lorsque les données sont récupérées à l’aide de la méthode <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La syntaxe qui est utilisée pour le <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> propriété est une syntaxe de style de la chaîne de format. Vous pouvez inclure des paramètres dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> propriété. Si le type du paramètre est la chaîne ou un caractère, placez le paramètre entre guillemets simples. Guillemets ne sont pas requis, si le paramètre est un type numérique.  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection contient les paramètres qui sont évalués pour les espaces réservés qui sont trouvent dans le <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriété.  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle prend en charge le filtrage des données uniquement lorsque dans `DataSet` mode.  
  
 La valeur de la <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> propriété est stockée dans l’état d’affichage.  
  
> [!IMPORTANT]
>  Vous devez valider toute valeur de paramètre de filtre que vous recevez à partir du client. Le runtime substitue simplement la valeur du paramètre dans l’expression de filtre et s’applique à la <xref:System.Data.DataView> objet qui est retourné par la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> (méthode). Si vous utilisez le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriété en tant que mesure de sécurité pour limiter le nombre d’éléments qui sont retournés, vous devez valider les valeurs de paramètre avant le filtrage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment récupérer des données à partir de la base de données Northwind et les filtrer à l’aide de la <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> et <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriétés. Le <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriété de la <xref:System.Web.UI.WebControls.SqlDataSource> contrôle est appliqué à tout moment le <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> méthode est exécutée pour récupérer des données. Dans cet exemple, le <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriété contient un espace réservé pour un paramètre de filtre, qui est contenu dans le <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. Dans cet exemple, le paramètre de filtre est un <xref:System.Web.UI.WebControls.ControlParameter> objet qui est lié à la <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> propriété de la <xref:System.Web.UI.WebControls.DropDownList> contrôle. Étant donné que le <xref:System.Web.UI.WebControls.DropDownList> contrôle a son <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> propriété définie sur `true`, toute modification du <xref:System.Web.UI.WebControls.DropDownList> sélection entraîne la publication sur le serveur de la page et le <xref:System.Web.UI.WebControls.GridView> contrôle à lier au contrôle de source de données avec le nouveau filtre.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> a été définie lorsque <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> est en mode <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant une opération de filtre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering> événement pour effectuer des opérations de validation sur les valeurs de paramètre de filtre avant du <xref:System.Web.UI.WebControls.SqlDataSourceView> objet effectue une opération de filtre. Vous pouvez annuler la <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> méthode en définissant le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété de la <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> objet `true`. L’événement est déclenché uniquement si le <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> propriété est définie.  
  
> [!IMPORTANT]
>  Vous devez valider toute valeur de paramètre de filtre que vous recevez à partir du client. Le runtime substitue simplement la valeur du paramètre dans l’expression de filtre et s’applique à la <xref:System.Data.DataView> objet qui est retourné par la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> (méthode). Si vous utilisez le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriété en tant que mesure de sécurité pour limiter le nombre d’éléments qui sont retournés, vous devez valider les valeurs de paramètre avant le filtrage.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de paramètres qui sont associés aux espaces réservés des paramètres dans la chaîne <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> qui contient un jeu de paramètres associé à n'importe quel espace réservé de paramètre trouvé dans la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les paramètres dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection sont associés à tous les paramètres qui sont spécifiés dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> propriété. Les espaces réservés de paramètre qui sont spécifiés dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> sont évaluées par ordre et mis en correspondance avec les objets de paramètre dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection lorsque le <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> méthode est appelée.  
  
> [!IMPORTANT]
>  Vous devez valider toute valeur de paramètre de filtre que vous recevez à partir du client. Le runtime substitue simplement la valeur du paramètre dans l’expression de filtre et s’applique à la <xref:System.Data.DataView> objet qui est retourné par la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> (méthode). Si vous utilisez le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriété en tant que mesure de sécurité pour limiter le nombre d’éléments qui sont retournés, vous devez valider les valeurs de paramètre avant le filtrage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment récupérer des données à partir de la base de données Northwind et les filtrer à l’aide de la <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> et <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriétés. Le <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriété de la <xref:System.Web.UI.WebControls.SqlDataSource> contrôle est appliqué à tout moment le <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> méthode est exécutée pour récupérer des données. Dans cet exemple, le <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriété contient un espace réservé pour un paramètre de filtre, qui est contenu dans le <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. En outre, le paramètre de filtre est un <xref:System.Web.UI.WebControls.ControlParameter> objet qui est lié à la <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> propriété de la <xref:System.Web.UI.WebControls.DropDownList> contrôle. Étant donné que le <xref:System.Web.UI.WebControls.DropDownList> contrôle a son <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> propriété définie sur `true`, toute modification du <xref:System.Web.UI.WebControls.DropDownList> sélection, la page à publier des informations sur le serveur et le <xref:System.Web.UI.WebControls.GridView> contrôle à lier au contrôle de source de données avec le nouveau filtre.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.Insert : System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values"><see cref="T:System.Collections.IDictionary" /> de paramètres pour la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> à utiliser pour exécuter l'opération d'insertion de base de données. S'il n'y a pas de paramètre associé à la requête ou si la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> n'est pas une requête SQL paramétrée, passez <see langword="null" />.</param>
        <summary>Exécute une opération d'insertion à l'aide de la chaîne <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL, de tout paramètre spécifié dans la collection <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> et des valeurs qui se trouvent dans la collection <paramref name="values" /> spécifiée.</summary>
        <returns>Une valeur qui représente le nombre de lignes insérées dans la base de données sous-jacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> les appels de méthode le <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> méthode, en passant le `values` paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> ne peut pas établir de connexion avec la source de données sous-jacente.</exception>
        <exception cref="T:System.NotSupportedException">La propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> a la valeur <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne SQL que l'objet <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> utilise pour insérer des données dans la base de données sous-jacente.</summary>
        <value>Chaîne SQL que <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> utilise pour insérer des données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans la mesure où plusieurs produits de base de données utilisent des variétés différentes de SQL, la syntaxe de la chaîne SQL dépend du fournisseur ADO.NET actuellement utilisé, identifié par la propriété <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Si la chaîne SQL est une requête ou une commande paramétrée, l'espace réservé du paramètre dépend également du fournisseur ADO.NET utilisé. Par exemple, si le fournisseur est le <xref:System.Data.SqlClient?displayProperty=nameWithType>, qui est le fournisseur par défaut pour le <xref:System.Web.UI.WebControls.SqlDataSource> (classe), l’espace réservé du paramètre est `'@parameterName'`. Toutefois, si le fournisseur est défini sur le <xref:System.Data.Odbc?displayProperty=nameWithType> ou <xref:System.Data.OleDb?displayProperty=nameWithType>, l’espace réservé du paramètre est `'?'`. Pour plus d’informations sur les commandes et les requêtes SQL paramétrables, consultez [à l’aide des paramètres avec le contrôle SqlDataSource](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> propriété peut être une chaîne SQL ou le nom d’une procédure stockée, si la source de données prend en charge les procédures stockées.  
  
 La valeur de la <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> propriété est stockée dans l’état d’affichage.  
  
   
  
## Examples  
 Cette section contient deux exemples de code. Le premier exemple de code montre comment insérer des données dans une base de données à l’aide de la <xref:System.Web.UI.WebControls.SqlDataSource> contrôle. Le deuxième exemple de code montre comment récupérer des données à partir de Microsoft SQL Server, les afficher dans un <xref:System.Web.UI.WebControls.GridView> contrôler et utiliser un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour afficher les détails d’une ligne sélectionnée dans le <xref:System.Web.UI.WebControls.GridView> et en tant que formulaire pour insérer de nouveaux enregistrements.  
  
 L’exemple de code suivant montre comment insérer des données dans une base de données à l’aide de la <xref:System.Web.UI.WebControls.SqlDataSource> contrôle. Les données actuelles de la table s’affiche dans le <xref:System.Web.UI.WebControls.DropDownList> contrôle. Vous pouvez ajouter de nouveaux enregistrements en entrant des valeurs dans le <xref:System.Web.UI.WebControls.TextBox> contrôles et puis en cliquant sur le **insérer** bouton. Lorsque le **insérer** bouton est activé, les valeurs spécifiées sont insérées dans la base de données et le <xref:System.Web.UI.WebControls.DropDownList> est actualisé.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 L’exemple de code suivant montre comment récupérer des données à partir de SQL Server, les afficher dans un <xref:System.Web.UI.WebControls.GridView> contrôler et utiliser un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour afficher les détails d’une ligne sélectionnée dans le <xref:System.Web.UI.WebControls.GridView> et en tant que formulaire pour insérer de nouveaux enregistrements.  
  
 Initialement, les données sont affichées dans le <xref:System.Web.UI.WebControls.GridView> contrôle et la ligne sélectionnée de la <xref:System.Web.UI.WebControls.GridView> s’affiche également dans le <xref:System.Web.UI.WebControls.DetailsView> contrôle. Le <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView> contrôles utilisent des données différentes des contrôles de source ; celle qui est associé le <xref:System.Web.UI.WebControls.DetailsView> a le <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> et <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriétés, vérifiez que la ligne sélectionnée de la <xref:System.Web.UI.WebControls.GridView> est affiché.  
  
 Si vous cliquez sur généré automatiquement **insérer** bouton de la <xref:System.Web.UI.WebControls.DetailsView> contrôle, la <xref:System.Web.UI.WebControls.DetailsView> affiche une interface utilisateur différente, qui est utilisée pour insérer un nouvel enregistrement. L’exemple utilise une procédure stockée pour insérer des enregistrements et retourne la clé primaire de la ligne insérée. Si vous insérez un enregistrement, le <xref:System.Web.UI.WebControls.DetailsView> remplit automatiquement la <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection avec les valeurs des colonnes dépendantes et appelle le <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> (méthode). Le <xref:System.Web.UI.WebControls.DetailsView> peut déduire les paramètres corrects à partir d’un <xref:System.Web.UI.WebControls.BoundField> objet et un paramètre pour le <xref:System.Web.UI.WebControls.TemplateField> objet lors de la syntaxe de liaison de données bidirectionnelle ASP.NET est utilisée. Dans cet exemple, un paramètre supplémentaire est ajouté dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> Gestionnaire d’événements pour gérer la clé primaire qui est retournée par la procédure stockée.  
  
 Enfin, une fois que les données sont insérées par le <xref:System.Web.UI.WebControls.DetailsView> contrôle dans la base de données, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Gestionnaire d’événements est appelé pour gérer le <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> événement, la valeur de la clé primaire de la ligne insérée est affichée et le <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> de la (méthode)<xref:System.Web.UI.WebControls.GridView> contrôle est appelé explicitement pour actualiser les données.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le texte de la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> est une instruction SQL ou le nom d'une procédure stockée.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. La valeur est <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> propriété est stockée dans l’état d’affichage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment récupérer des données à partir de Microsoft SQL Server, les afficher dans un <xref:System.Web.UI.WebControls.GridView> contrôler et utiliser un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour afficher les détails d’une ligne sélectionnée dans le <xref:System.Web.UI.WebControls.GridView> et en tant que formulaire pour insérer de nouveaux enregistrements.  
  
 Le <xref:System.Web.UI.WebControls.GridView> contrôle affiche un jeu de données et la <xref:System.Web.UI.WebControls.DetailsView> contrôle affiche les détails pour une ligne particulière. Si vous cliquez sur généré automatiquement **insérer** bouton de la <xref:System.Web.UI.WebControls.DetailsView> contrôle, la <xref:System.Web.UI.WebControls.DetailsView> affiche une interface utilisateur différente, qui est utilisée pour insérer un nouvel enregistrement. L’exemple utilise une procédure stockée pour insérer des enregistrements et retourne la clé primaire de la ligne insérée. Le nom de la procédure stockée est défini le <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> propriété et est identifiée comme une procédure stockée en définissant le <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> propriété le <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valeur.  
  
 Enfin, une fois que les données sont insérées par le <xref:System.Web.UI.WebControls.DetailsView> contrôle dans la base de données, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Gestionnaire d’événements est appelé pour gérer le <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> événement, la valeur de la clé primaire de la ligne insérée est affichée et le <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> de la (méthode)<xref:System.Web.UI.WebControls.GridView> contrôle est appelé explicitement pour actualiser les données.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée ne fait pas partie des valeurs <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'une opération d'insertion est terminée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> événement pour examiner les valeurs des paramètres de sortie après une opération d’insertion est terminée. Les paramètres de sortie sont disponibles à partir de la <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objet qui est associé à l’événement.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment récupérer des données à partir de Microsoft SQL Server et l’afficher dans un <xref:System.Web.UI.WebControls.GridView> contrôle. L’exemple utilise également un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour afficher les détails de la ligne sélectionnée dans le <xref:System.Web.UI.WebControls.GridView>et en tant que formulaire pour insérer de nouveaux enregistrements.  
  
 Initialement, les données sont affichées dans le <xref:System.Web.UI.WebControls.GridView> contrôle et la ligne sélectionnée de la <xref:System.Web.UI.WebControls.GridView> s’affiche également dans le <xref:System.Web.UI.WebControls.DetailsView>. Le <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView> contrôles utilisent des données différentes des contrôles de source ; celle qui est associé le <xref:System.Web.UI.WebControls.DetailsView> a le <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> et <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriétés, vérifiez que la ligne sélectionnée de la <xref:System.Web.UI.WebControls.GridView> est affiché.  
  
 Si vous cliquez sur généré automatiquement **insérer** bouton de la <xref:System.Web.UI.WebControls.DetailsView> contrôle, la <xref:System.Web.UI.WebControls.DetailsView> affiche une interface utilisateur différente qui est utilisée pour insérer un nouvel enregistrement. L’exemple utilise une procédure stockée pour insérer des enregistrements et retourne la clé primaire de la ligne insérée. Si vous insérez un enregistrement, le <xref:System.Web.UI.WebControls.DetailsView> remplit automatiquement la <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection avec les valeurs des colonnes dépendantes et appelle le <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> (méthode). Le <xref:System.Web.UI.WebControls.DetailsView> peut déduire les paramètres corrects à partir d’un <xref:System.Web.UI.WebControls.BoundField> objet et un paramètre pour le <xref:System.Web.UI.WebControls.TemplateField> objet lors de la syntaxe de liaison de données bidirectionnelle ASP.NET est utilisée. Dans cet exemple, un paramètre supplémentaire est ajouté dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> Gestionnaire d’événements pour gérer la clé primaire qui est retournée par la procédure stockée.  
  
 Enfin, une fois que les données sont insérées par le <xref:System.Web.UI.WebControls.DetailsView> contrôle dans la base de données, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Gestionnaire d’événements est appelé pour gérer le <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> événement, la valeur de la clé primaire de la ligne insérée est affichée et le <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> de la (méthode)<xref:System.Web.UI.WebControls.GridView> contrôle est appelé explicitement pour actualiser les données.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant une opération d'insertion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> événement pour effectuer des opérations d’initialisation supplémentaires qui sont spécifiques à votre application, pour valider les valeurs de paramètres ou pour modifier les valeurs de paramètre avant le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle effectue l’opération d’insertion.  
  
 La connexion à la source de données sous-jacente n’est pas encore ouverte lorsque le délégué de gestionnaire d’événements est appelé. Par conséquent, vous ne pouvez pas annuler l’opération de base de données directement en appelant le <xref:System.Data.Common.DbCommand.Cancel%2A> méthode sur le <xref:System.Data.Common.DbCommand> objet exposé par le <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> objet. Vous pouvez, toutefois, annuler l’opération de base de données en définissant le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété de la <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> à `true`.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment récupérer des données à partir de Microsoft SQL Server, les afficher dans un <xref:System.Web.UI.WebControls.GridView> contrôle. L’exemple utilise également un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour afficher les détails de la ligne sélectionnée dans le <xref:System.Web.UI.WebControls.GridView>et en tant que formulaire pour insérer de nouveaux enregistrements.  
  
 Initialement, les données sont affichées dans le <xref:System.Web.UI.WebControls.GridView> contrôle et la ligne sélectionnée de la <xref:System.Web.UI.WebControls.GridView> s’affiche également dans le <xref:System.Web.UI.WebControls.DetailsView> contrôle. Le <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView> contrôles utilisent des données différentes des contrôles de source ; celle qui est associé le <xref:System.Web.UI.WebControls.DetailsView> a le <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> et <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriétés, vérifiez que la ligne sélectionnée de la <xref:System.Web.UI.WebControls.GridView> est affiché.  
  
 Si vous cliquez sur généré automatiquement **insérer** bouton de la <xref:System.Web.UI.WebControls.DetailsView> contrôle, la <xref:System.Web.UI.WebControls.DetailsView> affiche une interface utilisateur différente, qui est utilisée pour insérer un nouvel enregistrement. L’exemple utilise une procédure stockée pour insérer des enregistrements et retourne la clé primaire de la ligne insérée. Si vous insérez un enregistrement, le <xref:System.Web.UI.WebControls.DetailsView> remplit automatiquement la <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection avec les valeurs des colonnes dépendantes et appelle le <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> (méthode). Le <xref:System.Web.UI.WebControls.DetailsView> peut déduire les paramètres corrects à partir d’un <xref:System.Web.UI.WebControls.BoundField> objet et un paramètre pour le <xref:System.Web.UI.WebControls.TemplateField> objet lors de la syntaxe de liaison de données bidirectionnelle ASP.NET est utilisée. Dans cet exemple, un paramètre supplémentaire est ajouté dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> Gestionnaire d’événements pour gérer la clé primaire qui est retournée par la procédure stockée.  
  
 Enfin, une fois que les données sont insérées par le <xref:System.Web.UI.WebControls.DetailsView> contrôle dans la base de données, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Gestionnaire d’événements est appelé pour gérer le <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> événement, la valeur de la clé primaire de la ligne insérée est affichée et le <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> de la (méthode)<xref:System.Web.UI.WebControls.GridView> contrôle est appelé explicitement pour actualiser les données.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de paramètres contenant les paramètres qui sont utilisés par la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> qui contient les paramètres utilisés par la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> propriété contient une requête SQL paramétrée, le <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> collection contient un <xref:System.Web.UI.WebControls.Parameter> des objets qui correspondent aux espaces réservés de paramètre dans la chaîne SQL.  
  
 Selon le fournisseur ADO.NET, l’ordre des paramètres dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> collection peut être importante. Le <xref:System.Data.OleDb?displayProperty=nameWithType> et <xref:System.Data.Odbc?displayProperty=nameWithType> fournisseurs associent les paramètres de la collection selon l’ordre dans lequel les paramètres apparaissent dans la requête SQL paramétrable. Le <xref:System.Data.SqlClient?displayProperty=nameWithType> fournisseur, qui est le fournisseur ADO.NET par défaut pour le <xref:System.Web.UI.WebControls.SqlDataSource> contrôler, associe les paramètres de la collection en faisant correspondre le nom du paramètre à un alias d’espace réservé dans la requête SQL. Pour plus d’informations sur les commandes et les requêtes SQL paramétrables, consultez [à l’aide des paramètres avec le contrôle SqlDataSource](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment insérer des données dans une base de données à l’aide de la <xref:System.Web.UI.WebControls.SqlDataSource> contrôle et une page Web Forms simple. Les données actuelles de la table s’affiche dans le <xref:System.Web.UI.WebControls.DropDownList> contrôle. Vous pouvez ajouter de nouveaux enregistrements en entrant des valeurs dans le <xref:System.Web.UI.WebControls.TextBox> contrôles et puis en cliquant sur le **insérer** bouton. Lorsque le **insérer** bouton est activé, les valeurs spécifiées sont insérées dans la base de données et le <xref:System.Web.UI.WebControls.DropDownList> est actualisé.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> enregistre les modifications apportées à son état d'affichage.</summary>
        <value><see langword="true" /> si la vue de source de données est marquée pour enregistrer son état ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="sqlDataSourceView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Objet représentant l'état <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> à restaurer.</param>
        <summary>Restaure l'état d'affichage enregistré précédemment pour la vue de source de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est principalement utilisée par le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] infrastructure et n’est pas destinée à être utilisée directement depuis votre code.  Toutefois, les développeurs de contrôles peuvent substituer cette méthode pour spécifier comment un contrôle serveur personnalisé restaure son état d’affichage. Pour plus d’informations, consultez [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> méthode restaure les informations d’état d’affichage pour le <xref:System.Web.UI.WebControls.SqlDataSourceView> objet à partir d’une demande de page antérieure enregistrée par la <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne de mise en forme à appliquer aux noms de tous les paramètres qui sont passés à la méthode <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> ou <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />.</summary>
        <value>Une chaîne qui représente une chaîne de mise en forme appliquée aux noms de tous les paramètres <paramref name="oldValues" /> passé aux méthodes <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> ou <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />. La valeur par défaut est « {0} »</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> chaîne de format est appliquée aux clés primaires uniquement, tels que ceux qui sont identifiés par le `DataKeyNames` propriété du contrôle lié aux données ou dans la section supprimer et mettre à jour les scénarios où le <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> propriété est définie sur la <xref:System.Web.UI.ConflictOptions.CompareAllValues> valeur et un ensemble de `oldValues` est passé à la méthode de données correspondante. Dans ce cas, la chaîne de format est appliquée à chaque nom de paramètre dans le `oldValues` collection. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType>.  
  
 La valeur de la <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> propriété est stockée dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnDeleted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" /> après que le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> a complété une opération de suppression.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnDeleting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" /> avant que le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> ne tente une opération de suppression.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment gérer les <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> événement, qui est déclenché avant une <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> opération se produit. Étant donné que cet exemple supprime des données à partir de la base de données Northwind, une <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> gestionnaire est ajouté à essayer de sauvegarder la base de données sur le disque avant la suppression est effectuée.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::SqlDataSourceFilteringEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFiltering : System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs -&gt; unit&#xA;override this.OnFiltering : System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs -&gt; unit" Usage="sqlDataSourceView.OnFiltering e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" /> avant que le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> ne filtre les résultats d'une opération de sélection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnInserted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" /> après que le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> a terminé une opération d'insertion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment récupérer des données à partir de Microsoft SQL Server, les afficher dans un <xref:System.Web.UI.WebControls.GridView> contrôler et utiliser un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour afficher les détails d’une ligne sélectionnée dans le <xref:System.Web.UI.WebControls.GridView> et en tant que formulaire pour insérer de nouveaux enregistrements.  
  
 Initialement, les données sont affichées dans le <xref:System.Web.UI.WebControls.GridView> contrôle et la ligne sélectionnée de la <xref:System.Web.UI.WebControls.GridView> s’affiche également dans le <xref:System.Web.UI.WebControls.DetailsView> contrôle. Le <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView> contrôles utilisent des données différentes des contrôles de source ; celle qui est associé le <xref:System.Web.UI.WebControls.DetailsView> a le <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> et <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriétés, vérifiez que la ligne sélectionnée de la <xref:System.Web.UI.WebControls.GridView> est affiché.  
  
 Si vous cliquez sur généré automatiquement **insérer** bouton de la <xref:System.Web.UI.WebControls.DetailsView> contrôle, la <xref:System.Web.UI.WebControls.DetailsView> affiche une interface utilisateur différente, qui est utilisée pour insérer un nouvel enregistrement. L’exemple utilise une procédure stockée pour insérer des enregistrements et retourne la clé primaire de la ligne insérée. Si vous insérez un enregistrement, le <xref:System.Web.UI.WebControls.DetailsView> remplit automatiquement la <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection avec les valeurs des colonnes dépendantes et appelle le <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> (méthode). Le <xref:System.Web.UI.WebControls.DetailsView> peut déduire les paramètres corrects à partir d’un <xref:System.Web.UI.WebControls.BoundField> objet et un paramètre pour le <xref:System.Web.UI.WebControls.TemplateField> objet lors de la syntaxe de liaison de données bidirectionnelle ASP.NET est utilisée. Dans cet exemple, un paramètre supplémentaire est ajouté dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> Gestionnaire d’événements pour gérer la clé primaire qui est retournée par la procédure stockée.  
  
 Enfin, une fois que les données sont insérées par le <xref:System.Web.UI.WebControls.DetailsView> contrôle dans la base de données, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Gestionnaire d’événements est appelé pour gérer le <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> événement, la valeur de la clé primaire de la ligne insérée est affichée et le <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> de la (méthode)<xref:System.Web.UI.WebControls.GridView> contrôle est appelé explicitement pour actualiser les données.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnInserting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" /> avant que le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> ne tente une opération d'insertion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment récupérer des données à partir de Microsoft SQL Server, les afficher dans un <xref:System.Web.UI.WebControls.GridView> contrôler et utiliser un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour afficher les détails d’une ligne sélectionnée dans le <xref:System.Web.UI.WebControls.GridView> et en tant que formulaire pour insérer de nouveaux enregistrements.  
  
 Initialement, les données sont affichées dans le <xref:System.Web.UI.WebControls.GridView> contrôle et la ligne sélectionnée de la <xref:System.Web.UI.WebControls.GridView> s’affiche également dans le <xref:System.Web.UI.WebControls.DetailsView> contrôle. Le <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView> contrôles utilisent des données différentes des contrôles de source ; celle qui est associé le <xref:System.Web.UI.WebControls.DetailsView> a le <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> et <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriétés, vérifiez que la ligne sélectionnée de la <xref:System.Web.UI.WebControls.GridView> est affiché.  
  
 Si vous cliquez sur généré automatiquement **insérer** bouton de la <xref:System.Web.UI.WebControls.DetailsView> contrôle, la <xref:System.Web.UI.WebControls.DetailsView> affiche une interface utilisateur différente, qui est utilisée pour insérer un nouvel enregistrement. L’exemple utilise une procédure stockée pour insérer des enregistrements et retourne la clé primaire de la ligne insérée. Si vous insérez un enregistrement, le <xref:System.Web.UI.WebControls.DetailsView> remplit automatiquement la <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection avec les valeurs des colonnes dépendantes et appelle le <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> (méthode). Le <xref:System.Web.UI.WebControls.DetailsView> peut déduire les paramètres corrects à partir d’un <xref:System.Web.UI.WebControls.BoundField> objet et un paramètre pour le <xref:System.Web.UI.WebControls.TemplateField> objet lors de la syntaxe de liaison de données bidirectionnelle ASP.NET est utilisée. Dans cet exemple, un paramètre supplémentaire est ajouté dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> Gestionnaire d’événements pour gérer la clé primaire qui est retournée par la procédure stockée.  
  
 Enfin, une fois que les données sont insérées par le <xref:System.Web.UI.WebControls.DetailsView> contrôle dans la base de données, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Gestionnaire d’événements est appelé pour gérer le <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> événement, la valeur de la clé primaire de la ligne insérée est affichée et le <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> de la (méthode)<xref:System.Web.UI.WebControls.GridView> contrôle est appelé explicitement pour actualiser les données.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelected : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnSelected : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnSelected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" /> après que le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> a complété une opération de récupération.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::SqlDataSourceSelectingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs -&gt; unit&#xA;override this.OnSelecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs -&gt; unit" Usage="sqlDataSourceView.OnSelecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" /> avant que le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> ne tente une opération de récupération.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdated : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnUpdated : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" /> après que le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> a terminé une opération de mise à jour.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher et mettre à jour des données récupérées à partir d’une base de données ODBC dans un <xref:System.Web.UI.WebControls.GridView> contrôle. Une fois un enregistrement est correctement mis à jour, le <xref:System.Web.UI.WebControls.SqlDataSource.Updated> événement est géré par un gestionnaire d’événements pour effectuer une étape de post-traitement où une notification par message électronique est envoyée.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdating : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnUpdating : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" /> avant que le contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> ne tente une opération de mise à jour.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher les données récupérées à partir d’une base de données Microsoft SQL Server dans un <xref:System.Web.UI.WebControls.DropDownList> contrôler et mettre à jour l’enregistrement à l’aide un <xref:System.Web.UI.WebControls.TextBox> contrôle. L’exemple montre comment vous pouvez utiliser un <xref:System.Data.Common.DbTransaction> objet à ajouter le contexte de transaction lors de l’utilisation du <xref:System.Web.UI.WebControls.SqlDataSource> contrôle pour mettre à jour des données.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ParameterPrefix">
      <MemberSignature Language="C#" Value="protected virtual string ParameterPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParameterPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ParameterPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterPrefix : string" Usage="System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la chaîne qui est utilisée pour préfixer un espace réservé de paramètre dans une requête SQL paramétrée.</summary>
        <value>Chaîne "@".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Commandes et requêtes SQL peuvent être paramétrées, car ils contiennent des espaces réservés pour les valeurs qui sont liés à la requête en cours d’exécution. Selon le fournisseur ADO.NET qui est défini pour le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle, qui est identifié par le <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propriété, les paramètres sont évalués par alias ou par leur classement dans le <xref:System.Web.UI.WebControls.ParameterCollection> objet.  
  
 Si le <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> n’est pas définie ou a la valeur la <xref:System.Data.SqlClient?displayProperty=nameWithType>, les paramètres sont évalués par alias et la <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> propriété est utilisée pour ajouter un préfixe de paramètre à la <xref:System.Web.UI.WebControls.Parameter.Name%2A> propriété de chaque <xref:System.Web.UI.WebControls.Parameter> de l’objet dans un <xref:System.Web.UI.WebControls.ParameterCollection> pendant une données opération de manipulation de données ou de récupération. Si le <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propriété est définie sur le <xref:System.Data.OleDb?displayProperty=nameWithType> ou <xref:System.Data.Odbc?displayProperty=nameWithType>, les paramètres sont évalués par ordre et le <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> et <xref:System.Web.UI.WebControls.Parameter.Name%2A> propriétés sont ignorées.  
  
 Si vous étendez le <xref:System.Web.UI.WebControls.SqlDataSourceView> (classe), vous pouvez remplacer le <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> propriété permettant de fournir un préfixe autre que le `"@"` de chaîne, si nécessaire.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="sqlDataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">Une des valeurs <see cref="T:System.Web.UI.DataSourceCapabilities" /> comparée aux fonctions prises en charge par l'affichage.</param>
        <summary>Compare les fonctions demandées pour une opération <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> avec celles prises en charge par l'affichage et est appelé par la méthode <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A> méthode est utilisée par la vue de source de données pour examiner chacune des fonctions qui sont demandées par un contrôle lié aux données, qui est représentée par le <xref:System.Web.UI.DataSourceSelectArguments> objet qui est passé à la <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> (méthode) et pour comparer ces fonctions les fonctionnalités qui sont prises en charge par la vue de source de données. Pour les fonctions qui sont représentées par le <xref:System.Web.UI.DataSourceSelectArguments> de l’objet et ne sont pas pris en charge par la vue de source de données, un <xref:System.NotSupportedException> exception est levée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Le <paramref name="capability" /> sélectionné n'est pas activé dans la source de données.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="sqlDataSourceView.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre les modifications apportées à l'état d'affichage du contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> depuis la republication de la page sur le serveur.</summary>
        <returns>L'objet qui contient les modifications apportées à l'état d'affichage <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> ; sinon, <see langword="null" /> si aucun état d'affichage n'est associé à l'objet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> méthode est principalement utilisée par les développeurs de contrôles.  
  
 État d’affichage est l’accumulation des valeurs des propriétés d’un contrôle serveur. Ces valeurs sont automatiquement placés dans le <xref:System.Web.UI.Control.ViewState%2A> propriété pour le contrôle serveur, qui est une instance de la <xref:System.Web.UI.StateBag> classe. Le <xref:System.Web.UI.Control.ViewState%2A> valeur pour le contrôle serveur est ensuite conservé dans un objet string après l’enregistrement étape du cycle de vie du contrôle serveur.  
  
 Lorsque l’état d’affichage est enregistré, l’objet de chaîne qui a été rendu persistant après l’enregistrement étape du cycle de vie du contrôle serveur est retourné au client en tant que variable qui est stockée dans le code HTML `Hidden` élément. Lorsque vous créez des contrôles serveur personnalisés, vous pouvez améliorer l’efficacité en substituant la <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> (méthode) et la modification de la `ViewState` propriété de votre contrôle serveur. Pour plus d’informations, consultez [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSourceView.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments"><see cref="T:System.Web.UI.DataSourceSelectArguments" /> utilisé pour demander des opérations sur les données, autres que la récupération des données de base.</param>
        <summary>Récupère des données de la base de données sous-jacente à l'aide de la chaîne SQL <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> et des paramètres de la collection <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />.</summary>
        <returns>Liste <see cref="T:System.Collections.IEnumerable" /> de lignes de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> les appels de méthode le <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> méthode, en passant le `selectArgs` paramètre.  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> méthode retourne un <xref:System.Data.DataView> si l’objet, le <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propriété est définie sur le <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valeur ou si elle retourne un <xref:System.Data.IDataReader> si l’objet, le <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propriété est définie sur la <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valeur. Fermer le <xref:System.Data.IDataReader> lorsque vous avez terminé de lire les données de l’objet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Les <paramref name="selectArgs" /> passés à la méthode <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> spécifient que la source de données doit exécuter des tâches supplémentaires lors de la récupération des données pour activer la pagination ou trier les données récupérées, mais le contrôle de source de données ne prend pas en charge la fonction demandée.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> ne peut pas établir de connexion avec la source de données sous-jacente.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne SQL que l'objet <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> utilise pour récupérer des données de la base de données sous-jacente.</summary>
        <value>Une chaîne SQL que <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> utilise pour récupérer des données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans la mesure où plusieurs produits de base de données utilisent des variétés différentes de SQL, la syntaxe de la chaîne SQL dépend du fournisseur ADO.NET actuellement utilisé, identifié par la propriété <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Si la chaîne SQL est une requête ou une commande paramétrée, l'espace réservé du paramètre dépend également du fournisseur ADO.NET utilisé. Par exemple, si le fournisseur est le <xref:System.Data.SqlClient?displayProperty=nameWithType>, qui est le fournisseur par défaut pour le <xref:System.Web.UI.WebControls.SqlDataSource> (classe), l’espace réservé du paramètre est `'@parameterName'`. Toutefois, si le fournisseur est défini sur le <xref:System.Data.Odbc?displayProperty=nameWithType> ou <xref:System.Data.OleDb?displayProperty=nameWithType>, l’espace réservé du paramètre est `'?'`. Pour plus d’informations sur les commandes et les requêtes SQL paramétrables, consultez [à l’aide des paramètres avec le contrôle SqlDataSource](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriété peut être une chaîne SQL ou le nom d’une procédure stockée, si la source de données prend en charge les procédures stockées.  
  
> [!IMPORTANT]
>  Il est plus sûr d’utiliser une procédure stockée qu’une instruction SQL pour le <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriété.  
  
 La valeur de la <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriété est stockée dans l’état d’affichage.  
  
   
  
## Examples  
 Cette section contient deux exemples de code. Le premier exemple de code montre comment définir le <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texte à une requête SQL de base pour récupérer des données à partir d’une base de données Microsoft SQL Server et les afficher dans un <xref:System.Web.UI.WebControls.DropDownList> contrôle. Le deuxième exemple de code montre comment définir le <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texte pour le nom d’une procédure stockée pour récupérer des données à partir d’une base de données SQL Server et les afficher dans un <xref:System.Web.UI.WebControls.DropDownList>.  
  
 L’exemple de code suivant montre comment définir le <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texte à une requête SQL de base pour récupérer des données à partir d’une base de données SQL Server et les afficher dans un <xref:System.Web.UI.WebControls.DropDownList> contrôle. Le <xref:System.Web.UI.WebControls.Button> et <xref:System.Web.UI.WebControls.TextBox> contrôles sont fournis comme une interface simple pour mettre à jour l’adresse de l’utilisateur sélectionné dans le <xref:System.Web.UI.WebControls.DropDownList>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 L’exemple de code suivant montre comment définir le <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texte pour le nom d’une procédure stockée pour récupérer des données à partir d’une base de données SQL Server et les afficher dans un <xref:System.Web.UI.WebControls.DropDownList> contrôle. Le <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriété peut être une requête SQL ou le nom d’une procédure stockée, si la source de données prend en charge les procédures stockées.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le texte de la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> est une requête SQL ou le nom d'une procédure stockée.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. La valeur par défaut est la valeur <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> propriété est stockée dans l’état d’affichage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texte pour le nom d’une procédure stockée et la <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> propriété le <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valeur pour récupérer des données à partir d’une base de données Microsoft SQL Server et les afficher dans un <xref:System.Web.UI.WebControls.DropDownList>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée ne fait pas partie des valeurs <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'une opération de récupération de données est terminée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.SqlDataSourceView.Selected> événement pour examiner les valeurs des paramètres de sortie après une opération de récupération de données. Les paramètres de sortie sont disponibles à partir de la <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objet qui est associé à l’événement.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant une opération de récupération de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> événement pour effectuer des opérations d’initialisation supplémentaires qui sont spécifiques à votre application, pour valider les valeurs de paramètres ou pour modifier les valeurs de paramètre avant le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle effectue la récupération de données opération.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de paramètres contenant les paramètres qui sont utilisés par la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> qui contient les paramètres utilisés par la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriété contient une requête SQL paramétrée, le <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> collection contient un <xref:System.Web.UI.WebControls.Parameter> des objets qui correspondent aux espaces réservés de paramètre dans la chaîne SQL.  
  
 Selon le fournisseur ADO.NET, l’ordre des paramètres dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> collection peut être importante. Le <xref:System.Data.OleDb?displayProperty=nameWithType> et <xref:System.Data.Odbc?displayProperty=nameWithType> fournisseurs associent les paramètres de la collection selon l’ordre dans lequel les paramètres apparaissent dans la requête SQL paramétrable. Le <xref:System.Data.SqlClient?displayProperty=nameWithType> fournisseur, qui est le fournisseur ADO.NET par défaut pour le <xref:System.Web.UI.WebControls.SqlDataSource> contrôler, associe les paramètres de la collection en faisant correspondre le nom du paramètre à un alias d’espace réservé dans la requête SQL. Pour plus d’informations sur les commandes et les requêtes SQL paramétrables, consultez [à l’aide des paramètres avec le contrôle SqlDataSource](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment récupérer des données à partir de la base de données Northwind dans Microsoft SQL Server en définissant le <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriété à une requête SQL. La requête SQL est paramétrée et l’espace réservé dans le <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriété ne correspond à la <xref:System.Web.UI.WebControls.ControlParameter> objet qui est ajouté à la <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection. De cette façon, le <xref:System.Web.UI.WebControls.DropDownList> contrôle, à laquelle le <xref:System.Web.UI.WebControls.ControlParameter> est lié, agit comme un filtre pour ce qui est affiché dans le <xref:System.Web.UI.WebControls.ListBox> contrôle.  
  
> [!NOTE]
>  Étant donné que le paramètre est utilisé dans une clause WHERE, l’utilisation de la <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> propriété dans cet exemple de code est fonctionnellement équivalente à l’aide des deux le <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> et <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriétés.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom d'un paramètre de procédure stockée qui est utilisé pour trier des données récupérées lorsque la récupération de données est exécutée à l'aide d'une procédure stockée.</summary>
        <value>Le nom d'un paramètre de procédure stockée utilisé pour trier des données récupérées lorsque la récupération de données est exécutée à l'aide d'une procédure stockée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> propriété est évaluée uniquement lorsque la commande SQL qui est contenue par le <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriété correspond au nom d’une procédure stockée. Dans ce cas, si la <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> est définie, elle contient le nom d’un paramètre qui est utilisé pour trier les résultats de la procédure stockée.  
  
 Si le <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> est définie, elle est ajoutée à la <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> propriété.  
  
 La valeur de la <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> propriété est stockée dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
        <value><see langword="true" /> si la vue de source de données est marquée pour enregistrer son état ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut être utilisé uniquement lorsque le <xref:System.Web.UI.WebControls.SqlDataSourceView> instance est convertie dans le <xref:System.Web.UI.IStateManager> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Objet représentant l'état <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> à restaurer.</param>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut être utilisé uniquement lorsque le <xref:System.Web.UI.WebControls.SqlDataSourceView> instance est convertie dans le <xref:System.Web.UI.IStateManager> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Web.UI.IStateManager.SaveViewState" />.</summary>
        <returns>L'objet qui contient les modifications apportées à l'état d'affichage <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> ; sinon, <see langword="null" /> si aucun état d'affichage n'est associé à l'objet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut être utilisé uniquement lorsque le <xref:System.Web.UI.WebControls.SqlDataSourceView> instance est convertie dans le <xref:System.Web.UI.IStateManager> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Web.UI.IStateManager.TrackViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut être utilisé uniquement lorsque le <xref:System.Web.UI.WebControls.SqlDataSourceView> instance est convertie dans le <xref:System.Web.UI.IStateManager> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="sqlDataSourceView.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ainsi, l'objet <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> effectue le suivi des modifications de son état d'affichage afin qu'elles puissent être stockées dans l'objet <see cref="T:System.Web.UI.StateBag" /> du contrôle et être persistantes entre les requêtes de la même page.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> de clés primaires à utiliser avec la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> pour exécuter l'opération de mise à jour de la base de données. S'il n'y a pas de clé associée à la requête ou si <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> n'est pas une requête SQL paramétrée, passez <see langword="null" />.</param>
        <param name="values"><see cref="T:System.Collections.IDictionary" /> de valeurs à utiliser avec la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> pour exécuter l'opération de mise à jour de la base de données. S'il n'y a pas de paramètre associé à la requête ou si la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> n'est pas une requête SQL paramétrée, passez <see langword="null" />.</param>
        <param name="oldValues"><see cref="T:System.Collections.IDictionary" /> qui représente les valeurs d'origine de la base de données. S'il n'y a pas de paramètre associé à la requête ou si la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> n'est pas une requête SQL paramétrée, passez <see langword="null" />.</param>
        <summary>Exécute une opération de mise à jour à l'aide de la chaîne <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL, tout paramètre de la collection <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> ainsi que les valeurs se trouvant dans les collections <paramref name="keys" />, <paramref name="values" /> et <paramref name="oldValues" /> spécifiées.</summary>
        <returns>Une valeur qui représente le nombre de lignes mises à jour dans la base de données sous-jacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> les appels de méthode le <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> méthode, en passant le `keys`, `values`, et `oldValues` paramètres. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.SqlDataSource> contrôle pour afficher des données dans un <xref:System.Web.UI.WebControls.DropDownList> les données de contrôle et de mise à jour lorsque le **envoyer** bouton. Le <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriété est définie avec une instruction SQL paramétrable et deux <xref:System.Web.UI.WebControls.ControlParameter> paramètres sont ajoutés à la <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. Lorsque le **envoyer** bouton est activé, le <xref:System.Web.UI.WebControls.Button.OnClick%2A> événement est géré pour appeler le <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> méthode explicitement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> ne peut pas établir de connexion avec la source de données sous-jacente.</exception>
        <exception cref="T:System.NotSupportedException">La propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> a la valeur <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne SQL que l'objet <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> utilise pour mettre à jour des données de la base de données sous-jacente.</summary>
        <value>Une chaîne SQL que <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> utilise pour mettre à jour des données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans la mesure où plusieurs produits de base de données utilisent des variétés différentes de SQL, la syntaxe de la chaîne SQL dépend du fournisseur ADO.NET actuellement utilisé, identifié par la propriété <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Si la chaîne SQL est une requête ou une commande paramétrée, l'espace réservé du paramètre dépend également du fournisseur ADO.NET utilisé. Par exemple, si le fournisseur est le <xref:System.Data.SqlClient?displayProperty=nameWithType>, qui est le fournisseur par défaut pour le <xref:System.Web.UI.WebControls.SqlDataSource> (classe), l’espace réservé du paramètre est `'@parameterName'`. Toutefois, si le fournisseur est défini sur le <xref:System.Data.Odbc?displayProperty=nameWithType> ou <xref:System.Data.OleDb?displayProperty=nameWithType>, l’espace réservé du paramètre est `'?'`. Pour plus d’informations sur les commandes et les requêtes SQL paramétrables, consultez [à l’aide des paramètres avec le contrôle SqlDataSource](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> propriété peut être une chaîne SQL ou le nom d’une procédure stockée, si la source de données prend en charge les procédures stockées.  
  
 La valeur de la <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> propriété est stockée dans l’état d’affichage.  
  
   
  
## Examples  
 Cette section contient deux exemples de code. Le premier exemple de code montre comment définir le <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriété de la <xref:System.Web.UI.WebControls.SqlDataSource> contrôle et mise à jour des données dans une base de données Microsoft SQL Server à l’aide du <xref:System.Web.UI.WebControls.GridView> contrôle. Le deuxième exemple de code montre comment mettre à jour des données dans une base de données ODBC en utilisant la <xref:System.Web.UI.WebControls.GridView> contrôle.  
  
 L’exemple de code suivant montre comment définir le <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriété de la <xref:System.Web.UI.WebControls.SqlDataSource> contrôle et mise à jour des données dans une base de données SQL Server à l’aide du <xref:System.Web.UI.WebControls.GridView> contrôle. Le <xref:System.Web.UI.WebControls.GridView> contrôle remplit automatiquement la <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, en déduisant les paramètres de la <xref:System.Web.UI.WebControls.BoundField> objets et appelle le <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> (méthode) lorsque le **mise à jour** lien sur le modifiable<xref:System.Web.UI.WebControls.GridView> contrôle est sélectionné. Cet exemple inclut également quelque post-traitement - une fois un enregistrement est mis à jour, une notification par message électronique est envoyée.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 L’exemple de code suivant, qui est fonctionnellement identique à l’exemple de code précédent, montre comment mettre à jour des données dans une base de données ODBC en utilisant la <xref:System.Web.UI.WebControls.GridView> contrôle. Le <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propriété est définie sur le fournisseur ADO.NET pour ODBC, le <xref:System.Data.Odbc?displayProperty=nameWithType>et le <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propriété est définie sur le nom d’un nom de source de données ODBC (DSN).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le texte de la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> est une instruction SQL ou le nom d'une procédure stockée.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. La valeur par défaut est la valeur <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> propriété est stockée dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée ne fait pas partie des valeurs <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'une opération de mise à jour est terminée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> événement pour examiner les valeurs des paramètres de sortie après une opération de mise à jour est terminée. Les paramètres de sortie sont disponibles à partir de la <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objet qui est associé à l’événement.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher et mettre à jour les données sont récupérées à partir d’une base de données ODBC dans un <xref:System.Web.UI.WebControls.GridView> contrôle. Une fois un enregistrement est correctement mis à jour, le <xref:System.Web.UI.WebControls.SqlDataSource.Updated> événement est géré par un gestionnaire d’événements pour effectuer une étape de post-traitement où une notification par message électronique est envoyée.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de paramètres contenant les paramètres qui sont utilisés par la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> qui contient les paramètres utilisés par la propriété <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> propriété contient une requête SQL paramétrée, le <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection contient un <xref:System.Web.UI.WebControls.Parameter> des objets qui correspondent aux espaces réservés de paramètre qui se trouvent dans la chaîne SQL.  
  
 Les noms de paramètre peuvent être affectés par la <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> propriété ; plus précisément, si le nom identifie une clé primaire, telle qu’une clé qui est spécifié à l’aide de la `DataKeyNames` propriété, ou en supprimer et mettre à jour les scénarios où le <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propriété est définie sur le <xref:System.Web.UI.ConflictOptions.CompareAllValues> et un jeu de `oldValues` sont passés à la méthode de données correspondante. Dans ce cas, la chaîne de format est appliquée à chaque nom de paramètre dans le `oldValues` collection.  
  
 Selon le fournisseur ADO.NET, l’ordre des paramètres dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection peut être importante. Le <xref:System.Data.OleDb?displayProperty=nameWithType> et <xref:System.Data.Odbc?displayProperty=nameWithType> fournisseurs associent les paramètres de la collection selon l’ordre dans lequel les paramètres apparaissent dans la requête SQL paramétrable. Le <xref:System.Data.SqlClient?displayProperty=nameWithType> fournisseur, qui est le fournisseur ADO.NET par défaut pour le <xref:System.Web.UI.WebControls.SqlDataSource> contrôler, associe les paramètres de la collection en faisant correspondre le nom du paramètre à un alias d’espace réservé dans la requête SQL. Pour plus d’informations sur les commandes et les requêtes SQL paramétrables, consultez [à l’aide des paramètres avec le contrôle SqlDataSource](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.SqlDataSource> contrôle pour afficher des données dans un <xref:System.Web.UI.WebControls.DropDownList> les données de contrôle et de mise à jour lorsque le **envoyer** bouton. Le <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriété est définie avec une instruction SQL paramétrable et deux <xref:System.Web.UI.WebControls.ControlParameter> paramètres sont ajoutés à la <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. Lorsque le **envoyer** bouton est activé, le <xref:System.Web.UI.WebControls.Button.OnClick%2A> événement est géré pour appeler le <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> méthode explicitement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant une opération de mise à jour.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> événement pour effectuer des opérations d’initialisation supplémentaires qui sont spécifiques à votre application, pour valider les valeurs de paramètres ou pour modifier les valeurs de paramètre avant le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle effectue l’opération de mise à jour.  
  
 La connexion à la source de données sous-jacente n’est pas encore ouverte lorsque le délégué de gestionnaire d’événements est appelé. Par conséquent, vous ne pouvez pas annuler l’opération directement en appelant le <xref:System.Data.Common.DbCommand.Cancel%2A> méthode sur le <xref:System.Data.Common.DbCommand> objet exposé par le <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> objet. Vous pouvez, toutefois, annuler l’opération de base de données en définissant le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété de la <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> à `true`.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher les données récupérées à partir d’une base de données Microsoft SQL Server dans un <xref:System.Web.UI.WebControls.DropDownList> contrôler et mettre à jour l’enregistrement à l’aide un <xref:System.Web.UI.WebControls.TextBox> contrôle. L’exemple montre comment vous pouvez utiliser un <xref:System.Data.Common.DbTransaction> objet à ajouter le contexte de transaction lors de l’utilisation du <xref:System.Web.UI.WebControls.SqlDataSource> contrôle pour mettre à jour des données.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>