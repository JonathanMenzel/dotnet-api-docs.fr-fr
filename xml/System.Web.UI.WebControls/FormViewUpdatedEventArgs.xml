<Type Name="FormViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.FormViewUpdatedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ae8b6d0cbe457000dec5a9e9ea0987ec2b6abd1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36582344" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FormViewUpdatedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour l'événement <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormView> incrémente le <xref:System.Web.UI.WebControls.FormView.ItemUpdated> événement lorsqu’un bouton de mise à jour (un bouton avec son `CommandName` propriété la valeur « Update ») dans le contrôle est activé, mais après que le <xref:System.Web.UI.WebControls.FormView> contrôle met à jour l’enregistrement. Cela vous permet de fournir une méthode de gestion d’événements qui exécute une routine personnalisée, telles que la vérification des résultats d’une opération de mise à jour, chaque fois que cet événement se produit.  
  
 A <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> objet est passé à la méthode de gestion des événements, ce qui vous permet de déterminer le nombre d’enregistrements affectés et toutes les exceptions qui se sont produites. Pour déterminer le nombre d’enregistrements affectés par l’opération de mise à jour, utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> propriété. Utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> propriété pour déterminer si des exceptions se sont produites. Vous pouvez également indiquer si l’exception a été gérée dans la méthode de gestion d’événements en définissant le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> propriété. Si vous devez accéder aux valeurs de champ clé d’origine pour l’enregistrement mis à jour, utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> propriété. Les valeurs de champ non clé d’origine est accessible à l’aide de la <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> propriété. Les valeurs mises à jour (qui incluent des valeurs de champ clé mises à jour, si vous autorisez l’utilisateur à modifier des champs clés) sont accessibles à l’aide de la <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> propriété.  
  
 Par défaut, le <xref:System.Web.UI.WebControls.FormView> contrôle retourne au mode spécifié par le <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriété après une opération de mise à jour. Lors du traitement d’une exception s’est produite lors de l’opération de mise à jour, vous pouvez conserver le <xref:System.Web.UI.WebControls.FormView> contrôle en mode édition en définissant le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> propriété `true`.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Pour obtenir la liste des valeurs de propriété initiales d'une instance de la classe <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>, consultez le constructeur <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.%23ctor%2A>.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> objet passé à la méthode de gestion d’événements pour le <xref:System.Web.UI.WebControls.FormView.ItemUpdated> événement pour déterminer si une exception s’est produite lors d’une opération de mise à jour.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewUpdatedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewUpdatedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.FormViewUpdatedEventArgs" Usage="new System.Web.UI.WebControls.FormViewUpdatedEventArgs (affectedRows, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">Nombre de lignes affectées par l'opération de mise à jour.</param>
        <param name="e">
          <see cref="T:System.Exception" /> qui représente l'exception levée lors de l'opération de mise à jour. Si aucune exception n'est levée, utilisez <see langword="null" /> pour ce paramètre.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> classe.  
  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>|Valeur du paramètre `affectedRows`.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>|Le <xref:System.Exception?displayProperty=nameWithType> objet contenu dans le `e` paramètre.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>|Initialisé à `false`.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>|Initialisé à `false`.|  
  
> [!NOTE]
>  Ce constructeur est utilisé principalement par les développeurs de contrôles lors du déclenchement d’événements.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de lignes affectées par l'opération de mise à jour.</summary>
        <value>Nombre de lignes affectées par l'opération de mise à jour.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> propriété pour déterminer le nombre d’enregistrements affectés par l’opération de mise à jour. Cette propriété est couramment utilisée pour vérifier que le nombre correct d’enregistrements a été mis à jour dans les situations suivantes :  
  
-   Vérifiez qu’un seul enregistrement a été mis à jour. Parfois, une instruction update écrite de manière incorrecte peut mettre à jour plusieurs enregistrements.  
  
-   Vérifiez qu’un enregistrement a été mis à jour lorsqu’une erreur se produit pendant l’opération de mise à jour qui ne lève pas d’exception.  
  
-   Vérifiez qu’un enregistrement a été mis à jour lorsqu’un contrôle de source de données qui prend en charge la détection de conflit (accès concurrentiel optimiste), tel que le <xref:System.Web.UI.WebControls.SqlDataSource> et <xref:System.Web.UI.WebControls.ObjectDataSource> contrôles son <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propriété définie sur la `ConflictOptions.CompareAllValues` valeur d’énumération . Avec ce paramètre, un enregistrement qui a été modifié par un autre utilisateur simultanément ne peut-être pas être actualisé.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> propriété pour vérifier qu’un enregistrement a été mis à jour.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'exception (s'il y en a une) qui a été levée pendant l'opération de mise à jour.</summary>
        <value>Objet <see cref="T:System.Exception" /> qui représente l'exception levée pendant l'opération de mise à jour.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> propriété pour déterminer l’exception (le cas échéant) qui a été levée pendant l’opération de mise à jour. Si aucune exception n'a été levée, cette propriété retourne `null`.  
  
> [!NOTE]
>  Si une exception a été levée et que vous décidez de gérer l’exception dans le Gestionnaire d’événements, veillez à définir le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> propriété `true`; sinon, l’exception est levée à nouveau par la <xref:System.Web.UI.WebControls.FormView> contrôle.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> propriété pour déterminer si une exception s’est produite lors d’une opération de mise à jour.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si une exception levée pendant l'opération de mise à jour a été gérée dans le gestionnaire d'événements.</summary>
        <value>
          <see langword="true" /> si l'exception a été gérée dans le gestionnaire d'événements ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’une exception est levée pendant l’opération de mise à jour, utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> propriété pour indiquer si l’exception a été gérée dans le Gestionnaire d’événements. Lorsque cette propriété a la valeur `true`, l’exception est considérée comme gérée et n’est pas levée à nouveau par la <xref:System.Web.UI.WebControls.FormView> contrôle. Si cette propriété est définie sur `false`, l’exception est levée à nouveau. Pour déterminer quelle exception a été levée, utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> propriété pour indiquer que l’exception a été gérée dans le Gestionnaire d’événements.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le contrôle <see cref="T:System.Web.UI.WebControls.FormView" /> doit rester en mode édition après une opération de mise à jour.</summary>
        <value>
          <see langword="true" /> pour rester en mode édition après une opération de mise à jour ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, le <xref:System.Web.UI.WebControls.FormView> contrôle retourne au mode spécifié par le <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriété après une opération de mise à jour. Utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> propriété pour spécifier si le <xref:System.Web.UI.WebControls.FormView> contrôle doit rester en mode édition. Pour conserver le <xref:System.Web.UI.WebControls.FormView> contrôle en mode édition, définissez cette propriété sur `true`.  
  
> [!NOTE]
>  Cette propriété doit être utilisée uniquement lorsqu’une situation qui se produit (par exemple, une exception est levée) requiert que le contrôle se comporte différemment de la normale. Si le <xref:System.Web.UI.WebControls.FormView> contrôle doit rester en mode d’édition par défaut, définissez le <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propriété à la place.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> propriété pour conserver un <xref:System.Web.UI.WebControls.FormView> contrôle en mode édition lorsqu’une exception se produit.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un dictionnaire qui contient les paires valeur/nom du champ clé d'origine pour l'enregistrement mis à jour.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> qui contient un dictionnaire des paires valeur/nom du champ clé d'origine de l'enregistrement mis à jour.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> propriété contient les valeurs d’origine des champs clés répertoriés dans le <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propriété d’un <xref:System.Web.UI.WebControls.FormView> contrôle. Utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> propriété pour accéder aux valeurs du champ clé pour un enregistrement mis à jour. Par exemple, vous pouvez utiliser ces valeurs pour conserver un journal des enregistrements mis à jour.  
  
> [!NOTE]
>  Si vous autorisez l’utilisateur à mettre à jour les valeurs des champs clés, le <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propriété contient les valeurs de champ clé d’origine. Les valeurs mises à jour sont stockées dans le <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propriété.  
  
 Le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> propriété retourne un <xref:System.Collections.Specialized.OrderedDictionary> objet qui implémente le <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interface. Le <xref:System.Collections.Specialized.OrderedDictionary> objet contient <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> les objets qui représentent les champs de l’enregistrement mis à jour. Pour accéder aux noms de champs, utilisez le <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> propriété de la <xref:System.Collections.Specialized.OrderedDictionary> objet. De même, vous pouvez accéder les valeurs de champ en utilisant le <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> propriété.  
  
> [!NOTE]
>  Comme raccourci, vous pouvez également utiliser l’indexeur de la <xref:System.Collections.Specialized.OrderedDictionary> objet pour accéder au champ valeurs directement. Les contrôles qui s’appuient sur l’ordre des champs de source de données (tel que <xref:System.Web.UI.WebControls.AccessDataSource>) peuvent accéder aux valeurs de champ uniquement par index.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> propriété pour accéder aux valeurs du champ clé pour un enregistrement mis à jour.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un dictionnaire qui contient les nouvelles paires nom-valeur du champ pour l'enregistrement mis à jour.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> qui contient un dictionnaire des nouvelles paires valeur/nom du champ de l'enregistrement mis à jour.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> propriété pour accéder aux nouvelles valeurs de champ pour l’enregistrement mis à jour. Par exemple, vous pouvez utiliser ces valeurs pour conserver un journal des enregistrements mis à jour.  
  
> [!NOTE]
>  Si vous autorisez l’utilisateur à mettre à jour les valeurs des champs clés, le <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propriété contient les valeurs de champ clé d’origine. Les valeurs mises à jour sont stockées dans le <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propriété.  
  
 Le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> propriété retourne un <xref:System.Collections.Specialized.OrderedDictionary> objet qui implémente le <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interface. Le <xref:System.Collections.Specialized.OrderedDictionary> objet contient <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> les objets qui représentent les champs de l’enregistrement mis à jour. Pour accéder aux noms de champs, utilisez le <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> propriété de la <xref:System.Collections.Specialized.OrderedDictionary> objet. De même, vous pouvez accéder les valeurs de champ en utilisant le <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> propriété.  
  
> [!NOTE]
>  Comme raccourci, vous pouvez également utiliser l’indexeur de la <xref:System.Collections.Specialized.OrderedDictionary> objet pour accéder au champ valeurs directement. Les contrôles qui s’appuient sur l’ordre des champs de source de données (tel que <xref:System.Web.UI.WebControls.AccessDataSource>) peuvent accéder aux valeurs de champ uniquement par index.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> propriété pour accéder aux nouvelles valeurs entrées par l’utilisateur pour les champs non clé de l’enregistrement mis à jour.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un dictionnaire qui contient les paires valeur/nom du champ ne correspondant pas à une clé d'origine pour l'enregistrement mis à jour.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> qui contient un dictionnaire des paires valeur/nom de champ d'origine de l'enregistrement mis à jour.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> propriété pour accéder aux valeurs de champ non clé d’origine pour l’enregistrement mis à jour. Par exemple, vous pouvez utiliser ces valeurs pour conserver un journal des enregistrements mis à jour. Un contrôle de source de données qui prend en charge la détection de conflit (accès concurrentiel optimiste), tel que le <xref:System.Web.UI.WebControls.SqlDataSource> et <xref:System.Web.UI.WebControls.ObjectDataSource> contrôles, avec ses <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propriété définie sur la `ConflictOptions.CompareAllValues` compare également ces valeurs d’origine par rapport à la enregistrement dans la base de données avant une opération de mise à jour est effectuée. Si un enregistrement a été modifié par un autre utilisateur simultanément, l’enregistrement n’est pas mis à jour.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> propriété ne contient pas les champs clés. Si vous autorisez l’utilisateur à mettre à jour les valeurs des champs clés, les valeurs de champ clé d’origine sont stockées dans le <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propriété. Les valeurs mises à jour sont stockées dans le <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propriété.  
  
 Le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> propriété retourne un <xref:System.Collections.Specialized.OrderedDictionary> objet qui implémente le <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interface. Le <xref:System.Collections.Specialized.OrderedDictionary> objet contient <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> les objets qui représentent les champs de l’enregistrement mis à jour. Pour accéder aux noms de champs, utilisez le <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> propriété de la <xref:System.Collections.Specialized.OrderedDictionary> objet. De même, vous pouvez accéder les valeurs de champ en utilisant le <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> propriété.  
  
> [!NOTE]
>  Comme raccourci, vous pouvez également utiliser l’indexeur de la <xref:System.Collections.Specialized.OrderedDictionary> objet pour accéder au champ valeurs directement. Les contrôles qui s’appuient sur l’ordre des champs de source de données (tel que <xref:System.Web.UI.WebControls.AccessDataSource>) peuvent accéder aux valeurs de champ uniquement par index.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> propriété pour accéder aux valeurs d’origine des champs ne correspondant pas à une clé pour l’enregistrement mis à jour.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>