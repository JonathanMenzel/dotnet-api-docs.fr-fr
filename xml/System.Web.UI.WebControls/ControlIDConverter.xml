<Type Name="ControlIDConverter" FullName="System.Web.UI.WebControls.ControlIDConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4067319c7c66156fed99df709f3afc05f561dde4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598253" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlIDConverter : System.ComponentModel.StringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlIDConverter extends System.ComponentModel.StringConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ControlIDConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlIDConverter&#xA;Inherits StringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlIDConverter : System::ComponentModel::StringConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.StringConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit un convertisseur de type qui récupère une liste d'ID de contrôle dans le conteneur actuel.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ControlIDConverter> classe dérive de la <xref:System.ComponentModel.StringConverter> classe et fournit une liste d’ID de contrôle à afficher dans un contrôle de grille de propriétés dans les environnements au moment du design. Le <xref:System.Web.UI.WebControls.ControlIDConverter> classe sert également de la classe de base pour le <xref:System.Web.UI.WebControls.AssociatedControlConverter> et <xref:System.Web.UI.WebControls.ValidatedControlConverter> classes, qui sont des convertisseurs de type pour les contrôles Web et les contrôles qui prennent en charge les attributs de propriété de validation, respectivement.  
  
 Pour plus d’informations sur les convertisseurs de type, consultez [Comment : implémenter un convertisseur de Type](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) ou [Conversion de Type généralisée](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.ControlIDConverter> dans une classe qui requiert un <xref:System.ComponentModel.TypeConverter> pour restituer l’ID d’un contrôle. Le `DebugInfoControl` est un contrôle simple qui affiche des informations sur un contrôle de contenu dans le formulaire Web en cours. Son `ControlID` propriété est décorée avec un <xref:System.ComponentModel.TypeConverterAttribute> qui désigne le <xref:System.Web.UI.WebControls.ControlIDConverter> comme le <xref:System.ComponentModel.TypeConverter> à utiliser pour cette propriété. Le `DebugInfoControl` remplace le `Render` méthode pour imprimer des informations sur le contrôle cible dans un <xref:System.Web.UI.WebControls.Label> contrôle.  
  
 [!code-csharp[System.Web.UI.ControlIdConverter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlIdConverter_1/CS/debuginfocontrol.cs#1)]
 [!code-vb[System.Web.UI.ControlIdConverter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlIdConverter_1/VB/debuginfocontrol.vb#1)]  
  
 L’exemple de code suivant montre comment la `DebugInfoControl` peut être utilisé dans un formulaire Web avec un <xref:System.Web.UI.WebControls.AccessDataSource> contrôle pour afficher des informations sur la <xref:System.Web.UI.WebControls.AccessDataSource> contrôle.  
  
 [!code-aspx-csharp[System.Web.UI.ControlIdConverter_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlIdConverter_1/CS/debuginfocs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ControlIdConverter_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlIdConverter_1/VB/debuginfovb.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="T:System.Web.UI.WebControls.AssociatedControlConverter" />
    <altmember cref="T:System.Web.UI.WebControls.ValidatedControlConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlIDConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlIDConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlIDConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.ControlIDConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Vous ne devez jamais accéder directement un convertisseur de type. Au lieu de cela, appelez le convertisseur approprié à l’aide un <xref:System.ComponentModel.TypeDescriptor> objet. Pour plus d’informations, consultez les exemples de <xref:System.ComponentModel.TypeConverter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterControl">
      <MemberSignature Language="C#" Value="protected virtual bool FilterControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool FilterControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlIDConverter.FilterControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool FilterControl(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Instance de contrôle à tester pour l'inclusion dans <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />.</param>
        <summary>Retourne une valeur indiquant si l'ID de contrôle du contrôle spécifié est ajouté au <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> qui est retourné par la méthode <see cref="M:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
        <returns>
          <see langword="true" /> dans tous les cas.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>L’implémentation de la <see cref="M:System.Web.UI.WebControls.ControlIDConverter.FilterControl(System.Web.UI.Control)" /> méthode retourne <see langword="true" /> dans tous les cas. Classes dérivées de la <see cref="T:System.Web.UI.WebControls.ControlIDConverter" /> substituer cette méthode pour fournir leur propre filtrage mécanisme. Par exemple, le <see cref="T:System.Web.UI.WebControls.AssociatedControlConverter" /> substitue le <see cref="M:System.Web.UI.WebControls.ControlIDConverter.FilterControl(System.Web.UI.Control)" /> méthode et retourne <see langword="true" /> uniquement si le contrôle est un contrôle serveur Web.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format qui peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Ce paramètre ou les propriétés de ce paramètre peuvent être <see langword="null" />.</param>
        <summary>Retourne une collection d'ID de contrôle du conteneur dans <see cref="T:System.ComponentModel.Design.IDesignerHost" /> lorsqu'elle est fournie avec un contexte de format.</summary>
        <returns>
          <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> qui contient un jeu des chaînes représentant les ID de contrôle des contrôles du conteneur actuel. Si aucun contrôle n'est actuellement contenu, une collection vide est retournée. Si le contexte est <see langword="null" /> ou qu'il n'existe pas de conteneur actuel, <see langword="null" /> est retourné.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ControlIDConverter.FilterControl%2A> méthode est appelée chaque contrôle trouvé dans le conteneur. Le contrôle de code est ajouté uniquement à la <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> si la méthode retourne `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="M:System.Web.UI.WebControls.ControlIDConverter.FilterControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
        <summary>Retourne une valeur indiquant si la collection de valeurs standard retournée par la méthode <see cref="M:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> est une liste exclusive des valeurs possibles, en utilisant le contexte spécifié.</summary>
        <returns>
          <see langword="false" /> dans tous les cas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comme elle est implémentée dans cette classe, cette méthode retourne toujours `false`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard.  
  
 Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Ce paramètre peut être <see langword="null" />, et les propriétés de l’objet de contexte peuvent retourner <see langword="null" />.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
        <summary>Retourne une valeur indiquant si cet objet prend en charge une série de valeurs d'ID de contrôles standard qui peuvent être sélectionnées dans une liste, à l'aide du contexte spécifié.</summary>
        <returns>
          <see langword="true" /> si <see cref="M:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> doit être appelé pour rechercher un jeu commun de valeurs d’ID de contrôle prises en charge par l’objet ; sinon, <see langword="false" />. Cette implémentation retourne <see langword="true" /> si le contexte n'est pas <see langword="null" /> ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Substituez cette méthode si le type que vous souhaitez convertir prend en charge les valeurs standard.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="M:System.Web.UI.WebControls.ControlIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
  </Members>
</Type>