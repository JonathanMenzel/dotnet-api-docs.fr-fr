<Type Name="Parameter" FullName="System.Web.UI.WebControls.Parameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea4ed75eb36624b8c582ddfcafd428166f682b38" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53499929" /></Metadata><TypeSignature Language="C#" Value="public class Parameter : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Parameter extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="VB.NET" Value="Public Class Parameter&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class Parameter : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type Parameter = class&#xA;    interface ICloneable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("DefaultValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit un mécanisme que les contrôles de source de données utilisent pour créer une liaison à des variables d’application, à des choix et identités utilisateur, ainsi qu’à d’autres données. Sert de classe de base pour tous les types de paramètres ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Parameter> classe représente un paramètre dans une requête SQL paramétrée, une expression de filtrage, ou un appel de méthode d’objet métier que contrôle de code source une données ASP.NET utilise pour sélectionner, filtrer ou modifier des données. Les objets <xref:System.Web.UI.WebControls.Parameter> sont contenus dans un objet <xref:System.Web.UI.WebControls.ParameterCollection>. <xref:System.Web.UI.WebControls.Parameter> les objets sont évaluées au moment de l’exécution, pour lier les valeurs des variables qu’ils représentent à n’importe quelle méthode utilisée par un contrôle de source de données pour interagir avec les données.  
  
 Utiliser des classes qui dérivent <xref:System.Web.UI.WebControls.Parameter> avec la source de données et les contrôles liés aux données pour créer des applications de données basées sur le Web. Ces classes de paramètres sont utilisés par les contrôles de source de données pour lier les types spécifiques de valeurs trouvées dans les applications Web aux espaces réservés dans les chaînes de requête SQL, les paramètres de méthode d’objet métier et bien plus encore. Le tableau suivant répertorie les types de paramètres qui sont inclus dans ASP.NET.  
  
|||  
|-|-|  
|<xref:System.Web.UI.WebControls.ControlParameter>|Lie toute propriété publique d’un contrôle serveur Web.|  
|<xref:System.Web.UI.WebControls.FormParameter>|Lie un champ de formulaire.|  
|<xref:System.Web.UI.WebControls.SessionParameter>|Lie un champ d’état de session.|  
|<xref:System.Web.UI.WebControls.RouteParameter>|Lie un paramètre d’URL de routage.|  
|<xref:System.Web.UI.WebControls.CookieParameter>|Lie un champ de cookie.|  
|<xref:System.Web.UI.WebControls.QueryStringParameter>|Lie un paramètre de chaîne de requête.|  
|<xref:System.Web.UI.WebControls.ProfileParameter>|Lie un champ de profil.|  
  
 Étendre la base de <xref:System.Web.UI.WebControls.Parameter> classe lorsque vous souhaitez implémenter vos propres types de paramètres personnalisés.  
  
 <xref:System.Web.UI.WebControls.Parameter> les objets sont très simples : ils ont un <xref:System.Web.UI.WebControls.Parameter.Name%2A> et un <xref:System.Web.UI.WebControls.Parameter.Type%2A> propriété, peut être représenté de façon déclarative et peut suivre l’état entre plusieurs requêtes HTTP. Tous les paramètres prennent en charge un <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propriété, pour les cas où un paramètre est lié à une valeur, mais la valeur est égale à `null` en cours d’exécution.  
  
 Lorsque vous utilisez une collection de <xref:System.Web.UI.WebControls.Parameter> objets avec un contrôle de source de données, leur ordre dans la collection peut avoir une importance. Pour plus d’informations sur l’utilisation des paramètres, consultez [à l’aide des paramètres avec le contrôle SqlDataSource](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295) et [à l’aide des paramètres avec le contrôle ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser la valeur sélectionnée d’un <xref:System.Web.UI.WebControls.DropDownList> contrôle dans le W`here` clause d’une requête SQL. L’exemple utilise le <xref:System.Web.UI.WebControls.ControlParameter> classe qui dérive de la <xref:System.Web.UI.WebControls.ControlParameter> classe.  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> élément définit la requête avec un paramètre nommé «@Title» où la valeur de `DropDownList1` doit accéder. Le <xref:System.Web.UI.WebControls.ControlParameter> élément spécifie que le «@Title« espace réservé sera remplacé par la valeur de la <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> propriété de la `DropDownList1` contrôle. Le <xref:System.Web.UI.WebControls.ControlParameter> élément est ajouté à la <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection de la <xref:System.Web.UI.WebControls.SqlDataSource> contrôle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 L’exemple suivant est semblable au précédent, mais utilise le code au lieu de balisage. Lorsque la page charge de la première fois, le <xref:System.Web.UI.WebControls.DropDownList> contrôle n’a aucune valeur sélectionnée et le <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propriété de la <xref:System.Web.UI.WebControls.Parameter> objet est utilisé.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx#1)]  
  
 Le code suivant montre la classe code-behind pour la page dans l’exemple précédent.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx.vb#4)]  
  
 L’exemple de code suivant montre comment étendre le <xref:System.Web.UI.WebControls.Parameter> classe pour créer un nouveau type de paramètre qui peut être utilisé par les contrôles de source de données et d’autres contrôles dans les scénarios de liaison de données. Un contrôle de source de données peut utiliser un `StaticParameter` paramètre à lier à la valeur de n’importe quel objet, en général une chaîne, déclarée sur une page Web Forms.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#1)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.RouteParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ParameterCollection" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Utilisation de paramètres avec les contrôles de Source de données</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.Parameter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance par défaut de la classe <see cref="T:System.Web.UI.WebControls.Parameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.Parameter> objet créé avec le <xref:System.Web.UI.WebControls.Parameter.%23ctor> constructeur est initialisé avec les valeurs par défaut pour toutes ses propriétés. Le <xref:System.Web.UI.WebControls.Parameter.Name%2A> propriété est initialisée avec <xref:System.String.Empty?displayProperty=nameWithType>, le <xref:System.Web.UI.WebControls.Parameter.Type%2A> propriété est initialisée avec <xref:System.TypeCode.Object?displayProperty=nameWithType>, le <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propriété est initialisée avec <xref:System.Data.ParameterDirection.Input>et le <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propriété est initialisée avec `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom du paramètre.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.Parameter" /> avec le nom spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.Parameter> objet créé avec le <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%29> constructeur est initialisé avec la valeur `name` et valeurs par défaut pour ses autres propriétés. Le <xref:System.Web.UI.WebControls.Parameter.Type%2A> propriété est initialisée avec <xref:System.TypeCode.Object?displayProperty=nameWithType>, le <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propriété est initialisée avec <xref:System.Data.ParameterDirection.Input>et le <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propriété est initialisée avec `null`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appeler le <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%29> constructeur à partir d’une classe qui étend la <xref:System.Web.UI.WebControls.Parameter> classe pour initialiser le <xref:System.Web.UI.WebControls.Parameter.Name%2A> propriété de l’instance. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.WebControls.Parameter> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Parameter (System.Web.UI.WebControls.Parameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.Parameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As Parameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Parameter(System::Web::UI::WebControls::Parameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : System.Web.UI.WebControls.Parameter -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="original">Instance de <see cref="T:System.Web.UI.WebControls.Parameter" /> à partir de laquelle l'instance actuelle est initialisée.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.Parameter" /> avec les valeurs de l'instance originale spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> constructeur est un `protected` constructeur de copie utilisé pour cloner un <xref:System.Web.UI.WebControls.Parameter> instance. Les valeurs de la <xref:System.Web.UI.WebControls.Parameter.Name%2A>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>, <xref:System.Web.UI.WebControls.Parameter.Direction%2A>, et <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> propriétés sont transférées vers la nouvelle instance.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appeler le <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> constructeur à partir d’une classe qui étend la <xref:System.Web.UI.WebControls.Parameter> classe pour implémenter le comportement de la classe de clonage de l’objet correct. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.WebControls.Parameter> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, System.Data.DbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.Data.DbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, System::Data::DbType dbType);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * System.Data.DbType -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, dbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
      </Parameters>
      <Docs>
        <param name="name">Nom du paramètre.</param>
        <param name="dbType">Type de base de données du paramètre.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.Parameter" /> à l'aide du nom et du type de base de données spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.Parameter> objet créé avec le <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.Data.DbType%29> constructeur est initialisé avec la valeur `name` et `dbType` paramètres et avec les valeurs par défaut pour les autres propriétés. Le <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propriété est initialisée avec <xref:System.Data.ParameterDirection.Input>et le <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propriété est initialisée avec `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, TypeCode type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.TypeCode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, TypeCode type);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * TypeCode -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="name">Nom du paramètre.</param>
        <param name="type"><see cref="T:System.TypeCode" /> qui décrit le type du paramètre.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.Parameter" /> avec le nom et le type spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.Parameter> objet créé avec le <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%29> constructeur est initialisé avec la valeur `name` et `type` paramètres et valeurs par défaut pour les autres propriétés. Le <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propriété est initialisée avec <xref:System.Data.ParameterDirection.Input>et le <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propriété est initialisée avec `null`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appeler le <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%29> constructeur à partir d’une classe qui étend la <xref:System.Web.UI.WebControls.Parameter> classe pour initialiser le <xref:System.Web.UI.WebControls.Parameter.Name%2A> et <xref:System.Web.UI.WebControls.Parameter.Type%2A> propriétés de l’instance. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.WebControls.Parameter> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#3)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, System.Data.DbType dbType, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, System::Data::DbType dbType, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, dbType, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l'instance de <see cref="T:System.Web.UI.WebControls.Parameter" />.</param>
        <param name="dbType">Type de base de données de l'instance <see cref="T:System.Web.UI.WebControls.Parameter" />.</param>
        <param name="defaultValue">Valeur par défaut pour l'instance <see cref="T:System.Web.UI.WebControls.Parameter" />, si <see cref="T:System.Web.UI.WebControls.Parameter" /> est lié à une valeur qui n'est pas encore initialisée lorsque <see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> est appelé.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.Parameter" /> avec le nom, le type de base de données et la valeur spécifiés pour sa propriété <see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propriété de la <xref:System.Web.UI.WebControls.Parameter> instance est initialisée à <xref:System.Data.ParameterDirection.Input>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, TypeCode type, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, defaultValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, TypeCode type, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, type, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom du paramètre.</param>
        <param name="type"><see cref="T:System.TypeCode" /> qui décrit le type du paramètre.</param>
        <param name="defaultValue">Chaîne qui sert de valeur par défaut pour le paramètre, si <see cref="T:System.Web.UI.WebControls.Parameter" /> est lié à une valeur qui n'est pas encore initialisée lorsque <see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> est appelé.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.Parameter" />, avec le nom, le type et la chaîne spécifiés pour sa propriété <see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.Parameter> objet créé avec le <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%2CSystem.String%29> constructeur est initialisé avec la valeur `name` paramètre et `type` paramètre et affecté un <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> valeur de propriété. La propriété <xref:System.Web.UI.WebControls.Parameter.Direction%2A> est initialisée à <xref:System.Data.ParameterDirection.Input>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%2CSystem.String%29> constructeur pour ajouter des objets de paramètre de mise à jour pour le <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection d’un <xref:System.Web.UI.WebControls.AccessDataSource> contrôle avant d’appeler le <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> (méthode).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Web.UI.WebControls.Parameter&#xA;override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="parameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un doublon de l'instance de <see cref="T:System.Web.UI.WebControls.Parameter" /> actuelle.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Parameter" /> qui est un doublon exact de l'objet actuel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Parameter.Clone%2A> les appels de méthode le <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> constructeur de copie pour initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.Parameter> classe avec les valeurs de l’instance actuelle.  
  
 Si vous étendez le <xref:System.Web.UI.WebControls.Parameter> (classe), vous pouvez remplacer le <xref:System.Web.UI.WebControls.Parameter.Clone%2A> méthode pour inclure tout état qui doit être copié vers une nouvelle instance de votre classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appeler le <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> constructeur à partir d’une classe qui étend la <xref:System.Web.UI.WebControls.Parameter> classe pour implémenter le comportement de la classe de clonage de l’objet correct. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.WebControls.Parameter> classe.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertDbTypeToTypeCode">
      <MemberSignature Language="C#" Value="public static TypeCode ConvertDbTypeToTypeCode (System.Data.DbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TypeCode ConvertDbTypeToTypeCode(valuetype System.Data.DbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode(System.Data.DbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TypeCode ConvertDbTypeToTypeCode(System::Data::DbType dbType);" />
      <MemberSignature Language="F#" Value="static member ConvertDbTypeToTypeCode : System.Data.DbType -&gt; TypeCode" Usage="System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode dbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dbType" Type="System.Data.DbType" />
      </Parameters>
      <Docs>
        <param name="dbType">Valeur <see cref="T:System.Data.DbType" /> à convertir en valeur <see cref="T:System.TypeCode" /> équivalente.</param>
        <summary>Convertit une valeur <see cref="T:System.Data.DbType" /> en valeur <see cref="T:System.TypeCode" /> équivalente.</summary>
        <returns>Valeur <see cref="T:System.TypeCode" /> équivalente à la valeur <see cref="T:System.Data.DbType" /> spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne un <xref:System.TypeCode.Object> si aucun équivalent de l’instance du <xref:System.Data.DbType> la valeur est trouvée. Types de base de données sans types équivalents incluent <xref:System.Data.DbType.Guid>, <xref:System.Data.DbType.Binary>, et <xref:System.Data.DbType.DateTimeOffset>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si la valeur à laquelle l'objet <see cref="T:System.Web.UI.WebControls.Parameter" /> est lié doit être convertie en <see langword="null" /> si elle est <see cref="F:System.String.Empty" />.</summary>
        <value><see langword="true" /> si la valeur à laquelle <see cref="T:System.Web.UI.WebControls.Parameter" /> est lié doit être convertie en <see langword="null" /> lorsqu'elle est <see cref="F:System.String.Empty" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> propriété du paramètre est modifiée, le <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> méthode est appelée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypeCodeToDbType">
      <MemberSignature Language="C#" Value="public static System.Data.DbType ConvertTypeCodeToDbType (TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.DbType ConvertTypeCodeToDbType(valuetype System.TypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType(System.TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::DbType ConvertTypeCodeToDbType(TypeCode typeCode);" />
      <MemberSignature Language="F#" Value="static member ConvertTypeCodeToDbType : TypeCode -&gt; System.Data.DbType" Usage="System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType typeCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeCode" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="typeCode">Valeur <see cref="T:System.TypeCode" /> à convertir en valeur <see cref="T:System.Data.DbType" /> équivalente.</param>
        <summary>Convertit une valeur <see cref="T:System.TypeCode" /> en valeur <see cref="T:System.Data.DbType" /> équivalente.</summary>
        <returns>Valeur <see cref="T:System.Data.DbType" /> équivalente à la valeur <see cref="T:System.TypeCode" /> spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne un <xref:System.Data.DbType.Object> instance si aucun équivalent n’est trouvé. Types sans types de base de données équivalents incluent <xref:System.TypeCode.DBNull> et <xref:System.TypeCode.Empty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Web.UI.WebControls.Parameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le type de base de données du paramètre.</summary>
        <value>Type de base de données de l'instance <see cref="T:System.Web.UI.WebControls.Parameter" />. La valeur par défaut est <see cref="F:System.Data.DbType.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le type de base de données peut être utilisé pour créer des paramètres fortement typés, afin que les valeurs sont correctement converties entre votre application Web et sous-jacent code ou les valeurs des tables de base de données.  
  
 Si le type de base de données du paramètre est modifié en définissant le <xref:System.Web.UI.WebControls.Parameter.DbType%2A> propriété, le <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> méthode est appelée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Une tentative a été effectuée pour affecter à cette propriété une valeur qui n'est pas dans l'énumération <see cref="T:System.Data.DbType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public string DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : string with get, set" Usage="System.Web.UI.WebControls.Parameter.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Spécifie une valeur par défaut pour le paramètre, à condition que la valeur à laquelle le paramètre est lié à ne soit pas initialisée lorsque la méthode <see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> est appelée.</summary>
        <value>Chaîne qui sert de valeur par défaut pour <see cref="T:System.Web.UI.WebControls.Parameter" /> lorsque la valeur à laquelle elle est liée ne peut pas être résolue ou n'est pas initialisée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propriété est utilisée dans les scénarios où le paramètre est lié à une valeur, mais la valeur est `null` ou ne peut pas être résolue lorsque le <xref:System.Web.UI.WebControls.Parameter> objet est évalué.  
  
 Si le <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propriété du paramètre est modifiée, le <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> méthode est appelée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment récupérer un enregistrement de données unique à l’aide un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôler et affichez-la dans une <xref:System.Web.UI.WebControls.DetailsView> contrôle. Le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle récupère un enregistrement d’employé spécifique en appelant le `GetEmployee` méthode de la `EmployeeLogic` classe. Le `GetEmployee` méthode requiert un paramètre ID d’employé. Le <xref:System.Web.UI.WebControls.ObjectDataSource> de contrôles utilise un <xref:System.Web.UI.WebControls.QueryStringParameter> de l’objet dans son <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> collection pour passer un ID pour le `GetEmployee` méthode dans cet exemple.  
  
 Pour afficher l’exemple d’implémentation de la `EmployeeLogic` classe et le `GetEmployee` (méthode), consultez le <xref:System.Web.UI.WebControls.ObjectDataSource> vue d’ensemble de la classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Web.UI.WebControls.Parameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique si l'objet <see cref="T:System.Web.UI.WebControls.Parameter" /> est utilisé pour lier une valeur à un contrôle ou si le contrôle peut être utilisé pour modifier la valeur.</summary>
        <value>Une des valeurs de <see cref="T:System.Data.ParameterDirection" />. <see cref="P:System.Web.UI.WebControls.Parameter.Direction" /> a la valeur <see cref="F:System.Data.ParameterDirection.Input" /> par défaut.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propriété n’est pas actuellement utilisée par le <xref:System.Web.UI.WebControls.Parameter> classe et est réservée pour une utilisation ultérieure.  
  
 Le <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propriété décrit la direction du flux de données entre la valeur qui un <xref:System.Web.UI.WebControls.Parameter> instance est liée à et <xref:System.Web.UI.WebControls.Parameter> objet lui-même. La valeur par défaut pour le <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propriété, <xref:System.Data.ParameterDirection.Input>, décrit le scénario le plus courant où le flux de données est toujours dans une seule direction : à partir de la valeur à laquelle le <xref:System.Web.UI.WebControls.Parameter> objet est lié à la <xref:System.Web.UI.WebControls.Parameter> objet. Toute modification apportée à la valeur sous-jacente est reflétées par le <xref:System.Web.UI.WebControls.Parameter> objet, mais les modifications apportées à la <xref:System.Web.UI.WebControls.Parameter> objet ne sont pas reflétées par les données sous-jacentes. Vous pouvez définir le <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propriété <xref:System.Data.ParameterDirection.InputOutput> ou <xref:System.Data.ParameterDirection.Output> lorsque vous travaillez avec des paramètres de sortie, ou <xref:System.Data.ParameterDirection.ReturnValue> lorsque vous travaillez avec une valeur de retour d’une procédure stockée.  
  
 Si le <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propriété du paramètre est modifiée, le <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> méthode est appelée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, et <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propriétés de <xref:System.Web.UI.WebControls.Parameter> objets lors de leur utilisation en tant que paramètres de sortie et les paramètres de valeur de retour avec une procédure stockée. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> vue d’ensemble de la classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal virtual object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj&#xA;override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="parameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Web.HttpContext" /> en cours de la demande.</param>
        <param name="control"><see cref="T:System.Web.UI.Control" /> auquel le paramètre est lié. Si le paramètre n'est pas lié à un contrôle, le paramètre <paramref name="control" /> est ignoré.</param>
        <summary>Met à jour et retourne la valeur de l'objet <see cref="T:System.Web.UI.WebControls.Parameter" />.</summary>
        <returns><see langword="object" /> qui représente la valeur mise à jour et actuelle du paramètre.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation par défaut de la <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> méthode consiste à retourner `null` dans tous les cas. Les classes qui dérivent de la <xref:System.Web.UI.WebControls.Parameter> classe remplacement le <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> méthode pour retourner une valeur de paramètre de mise à jour. Par exemple, le <xref:System.Web.UI.WebControls.ControlParameter> objet retourne la valeur du contrôle auquel il est lié à, tandis que le <xref:System.Web.UI.WebControls.QueryStringParameter> objet récupère la paire nom/valeur actuelle à partir de la <xref:System.Web.HttpRequest> objet.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> méthode pour retourner la valeur correcte dans une classe dérivée de la <xref:System.Web.UI.WebControls.Parameter> classe. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.WebControls.Parameter> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#6)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseType">
      <MemberSignature Language="C#" Value="public System.Data.DbType GetDatabaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.DbType GetDatabaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.GetDatabaseType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDatabaseType () As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DbType GetDatabaseType();" />
      <MemberSignature Language="F#" Value="member this.GetDatabaseType : unit -&gt; System.Data.DbType" Usage="parameter.GetDatabaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient la valeur <see cref="T:System.Data.DbType" /> qui est équivalente au type CLR de l'instance <see cref="T:System.Web.UI.WebControls.Parameter" /> actuelle.</summary>
        <returns>Valeur <see cref="T:System.Data.DbType" /> qui est équivalente au type CLR de l'instance de <see cref="T:System.Web.UI.WebControls.Parameter" /> actuelle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Parameter.DbType%2A> propriété ne doit pas déjà avoir de valeur ou doit être définie sur <xref:System.Data.DbType.Object>. Cette méthode est conçue pour utiliser uniquement lorsque le type CLR est défini mais le <xref:System.Web.UI.WebControls.Parameter.DbType%2A> propriété n’est pas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Web.UI.WebControls.Parameter.DbType" /> a déjà une valeur différente de <see cref="F:System.Data.DbType.Object" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.Parameter" /> enregistre les modifications apportées à son état d'affichage.</summary>
        <value><see langword="true" /> si la vue de source de données est marquée pour enregistrer son état ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="parameter.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" /> qui représente l'état <see cref="T:System.Web.UI.WebControls.Parameter" /> à restaurer.</param>
        <summary>Restaure l'état d'affichage enregistré précédemment pour la vue de source de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est principalement utilisée par l’infrastructure .NET Framework et n’est pas destinée à être utilisée directement depuis votre code. Toutefois, les développeurs de contrôles peuvent substituer cette méthode pour spécifier comment un contrôle serveur personnalisé restaure son état d’affichage. Pour plus d’informations, consultez [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 Cette méthode restaure les informations d’état d’affichage pour le <xref:System.Web.UI.WebControls.Parameter> objet à partir d’une demande de page antérieure enregistrée par la <xref:System.Web.UI.WebControls.Parameter.SaveViewState%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.Parameter.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du paramètre.</summary>
        <value>Nom du paramètre. La valeur par défaut est <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> objets ne sont pas tenus d’avoir un nom ; Toutefois, les contrôles de source de données peuvent utiliser le nom de paramètre pour faire correspondre un <xref:System.Web.UI.WebControls.Parameter> objet dans une collection avec un paramètre dans une signature de méthode de requête ou business SQL. Par exemple, le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle peut utiliser le nom de la <xref:System.Web.UI.WebControls.Parameter> objet pour faire correspondre un espace réservé dans une requête SQL paramétrée. De même, le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle peut utiliser le nom d’un <xref:System.Web.UI.WebControls.Parameter> de l’objet dans le <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection pour correspondre à un espace réservé dans le <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriété. Dans certains cas, le nom n’est pas utilisé et l’ordre dans lequel le <xref:System.Web.UI.WebControls.Parameter> objet est ajouté à un <xref:System.Web.UI.WebControls.ParameterCollection> collection est plus importante. Pour plus d’informations, consultez [à l’aide des paramètres avec le contrôle SqlDataSource](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295) et [à l’aide des paramètres avec le contrôle ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Si le nom du paramètre est modifié, le <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> méthode est appelée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher les données filtrées à l’aide un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle à récupérer des données à partir d’un objet métier de couche intermédiaire et un <xref:System.Web.UI.WebControls.GridView> contrôle pour afficher les résultats. L’exemple de code se compose d’un <xref:System.Web.UI.WebControls.TextBox> contrôle, un <xref:System.Web.UI.WebControls.GridView> contrôle, le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle et un bouton Envoyer. Par défaut, le <xref:System.Web.UI.WebControls.TextBox> contrôle soit rempli avec le nom de l’un de le `Northwind` employés. Le <xref:System.Web.UI.WebControls.GridView> contrôle affiche des informations sur l’employé identifié par le nom dans la <xref:System.Web.UI.WebControls.TextBox> contrôle. Pour récupérer des données sur un autre employé, entrez le nom complet de l’employé dans le <xref:System.Web.UI.WebControls.TextBox> contrôler et cliquez sur le bouton.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriété spécifie une expression utilisée pour filtrer les données récupérées par le <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriété. Il utilise des espaces réservés de paramètre qui sont comparés aux paramètres contenus dans le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection. Dans cet exemple, l’espace réservé de paramètre est limité par des guillemets simples, car le type du paramètre est un type de chaîne qui peut contenir des espaces. Si le type du paramètre est un type numérique ou date, utilisation de guillemets ne sont pas nécessaires.  
  
 Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriété de la <xref:System.Web.UI.WebControls.ObjectDataSource> classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName="OnParameterChanged">
      <MemberSignature Language="C#" Value="protected void OnParameterChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnParameterChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnParameterChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnParameterChanged();" />
      <MemberSignature Language="F#" Value="member this.OnParameterChanged : unit -&gt; unit" Usage="parameter.OnParameterChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Appelle la méthode <see cref="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" /> de la collection <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> qui contient l'objet <see cref="T:System.Web.UI.WebControls.Parameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.UI.WebControls.Parameter> objet n’est pas contenu dans un <xref:System.Web.UI.WebControls.ParameterCollection> collection, en appelant le <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> méthode n’a aucun effet. Si le <xref:System.Web.UI.WebControls.Parameter> objet est contenu par un <xref:System.Web.UI.WebControls.ParameterCollection> collection, <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> déclenche le <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged?displayProperty=nameWithType> événements de la collection.  
  
 Si le <xref:System.Web.UI.WebControls.ParameterCollection> collection est contenue par un contrôle de source de données, le <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged?displayProperty=nameWithType> événement déclenche le contrôle de source de données <xref:System.Web.UI.IDataSource.DataSourceChanged> événement, tous les contrôles liés aux données lier de nouveau.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appeler le <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> méthode pour déclencher le <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged> événement lorsque l’état d’un paramètre change. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.WebControls.Parameter> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#7)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="parameter.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre les modifications apportées à l'état d'affichage de l'objet <see cref="T:System.Web.UI.WebControls.Parameter" /> depuis la publication de la page sur le serveur.</summary>
        <returns><see cref="T:System.Object" /> qui contient les modifications de l'état d'affichage <see cref="T:System.Web.UI.WebControls.Parameter" />. Si aucun état d'affichage n'est associé à l'objet, cette méthode retourne <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est principalement utilisée par des développeurs de contrôles.  
  
 État d’affichage est l’accumulation des valeurs de propriétés d’un contrôle serveur. Ces valeurs sont automatiquement placés dans le contrôle serveur <xref:System.Web.UI.Control.ViewState%2A> propriété, qui est une instance de la <xref:System.Web.UI.StateBag> classe. Valeur de cette propriété est ensuite conservée dans un objet string après l’enregistrement étape du cycle de vie du contrôle serveur.  
  
 Lorsque l’état d’affichage est enregistré, cet objet de chaîne est retourné au client en tant que variable qui est stockée dans le code HTML `hidden` élément. Lorsque vous créez des contrôles serveur personnalisés, vous pouvez améliorer l’efficacité en substituant cette méthode et en modifiant votre contrôle serveur <xref:System.Web.UI.WebControls.Parameter.ViewState%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="protected internal virtual void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetDirty();" />
      <MemberSignature Language="F#" Value="abstract member SetDirty : unit -&gt; unit&#xA;override this.SetDirty : unit -&gt; unit" Usage="parameter.SetDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Marque l'objet <see cref="T:System.Web.UI.WebControls.Parameter" /> afin que son état soit enregistré dans l'état d'affichage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Parameter.SetDirty%2A> méthode est appelée directement par le <xref:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject%2A?displayProperty=nameWithType> (méthode), pour marquer le <xref:System.Web.UI.WebControls.Parameter> afin que son état est enregistré dans l’état d’affichage de l’objet.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Web.UI.WebControls.Parameter.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la taille du paramètre.</summary>
        <value>Valeur du paramètre sous la forme d'un entier.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque la valeur de <xref:System.Web.UI.WebControls.Parameter.Size%2A> est modifié, le <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> méthode est appelée.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un doublon de l'instance de <see cref="T:System.Web.UI.WebControls.Parameter" /> actuelle.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Parameter" /> qui est une copie de l'objet en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Parameter.Clone%2A> les appels de méthode le <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> constructeur pour initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.Parameter> classe avec les valeurs de l’instance actuelle.  
  
 Si vous étendez le <xref:System.Web.UI.WebControls.Parameter> (classe), vous pouvez remplacer le <xref:System.Web.UI.WebControls.Parameter.Clone%2A> méthode pour inclure tout état qui doit être copié vers une nouvelle instance de votre classe dérivée.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.Parameter" /> enregistre les modifications apportées à son état d'affichage.</summary>
        <value><see langword="true" /> si la vue de source de données est marquée pour enregistrer son état ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" /> qui représente l'état <see cref="T:System.Web.UI.WebControls.Parameter" /> à restaurer.</param>
        <summary>Restaure l'état d'affichage enregistré précédemment pour la vue de source de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode restaure les informations d’état d’affichage pour le <xref:System.Web.UI.WebControls.Parameter> objet à partir d’une demande de page antérieure enregistrée par la <xref:System.Web.UI.WebControls.Parameter.SaveViewState%2A> (méthode).  
  
 Cette méthode est principalement utilisée par des développeurs de contrôles. Vous pouvez remplacer cette méthode pour contrôler la manière dont un contrôle serveur personnalisé restaure son état d’affichage.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre les modifications apportées à l'état d'affichage de l'objet <see cref="T:System.Web.UI.WebControls.Parameter" /> depuis la publication de la page sur le serveur.</summary>
        <returns><see cref="T:System.Object" /> qui contient les modifications de l'état d'affichage de l'objet <see cref="T:System.Web.UI.WebControls.Parameter" />. Si aucun état d'affichage n'est associé à l'objet, cette méthode retourne <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est principalement utilisée par des développeurs de contrôles.  
  
 État d’affichage est l’accumulation des valeurs de propriétés d’un contrôle serveur. Ces valeurs sont automatiquement placés dans le contrôle serveur <xref:System.Web.UI.Control.ViewState%2A> propriété, qui est une instance de la <xref:System.Web.UI.StateBag> classe. Valeur de cette propriété est ensuite conservée dans un objet string après l’enregistrement étape du cycle de vie du contrôle serveur.  
  
 Lorsque l’état d’affichage est enregistré, cet objet de chaîne est retourné au client en tant que variable qui est stockée dans le code HTML `hidden` élément. Lorsque vous créez des contrôles serveur personnalisés, vous pouvez améliorer l’efficacité en substituant cette méthode et en modifiant votre contrôle serveur <xref:System.Web.UI.WebControls.Parameter.ViewState%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ainsi, l'objet <see cref="T:System.Web.UI.WebControls.Parameter" /> effectue le suivi des modifications de son état d'affichage afin qu'elles puissent être stockées dans l'objet <see cref="P:System.Web.UI.Control.ViewState" /> du contrôle et être persistantes entre les demandes de la même page.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="parameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Convertit la valeur de cette instance en sa représentation sous forme de chaîne équivalente.</summary>
        <returns>Représentation sous forme de chaîne de la valeur de cette instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Parameter.ToString%2A> méthode retourne le <xref:System.Web.UI.WebControls.Parameter.Name%2A> propriété de la <xref:System.Web.UI.WebControls.Parameter> objet. Si le <xref:System.Web.UI.WebControls.Parameter> objet ne possède pas de nom, <xref:System.Web.UI.WebControls.Parameter.ToString%2A> retourne <xref:System.String.Empty?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder aux différentes propriétés d’un <xref:System.Web.UI.WebControls.Parameter> de l’objet, y compris son <xref:System.Web.UI.WebControls.Parameter.Name%2A> et <xref:System.Web.UI.WebControls.Parameter.Type%2A> propriétés.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter.ToString_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter.ToString_1/CS/parametertostringcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter.ToString_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter.ToString_1/VB/parametertostringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="parameter.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ainsi, l'objet <see cref="T:System.Web.UI.WebControls.Parameter" /> effectue le suivi des modifications de son état d'affichage afin qu'elles puissent être stockées dans l'objet <see cref="P:System.Web.UI.Control.ViewState" /> du contrôle et être persistantes entre les demandes de la même page.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public TypeCode Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TypeCode Type { TypeCode get(); void set(TypeCode value); };" />
      <MemberSignature Language="F#" Value="member this.Type : TypeCode with get, set" Usage="System.Web.UI.WebControls.Parameter.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le type du paramètre.</summary>
        <value>Type de <see cref="T:System.Web.UI.WebControls.Parameter" />. La valeur par défaut est <see cref="F:System.TypeCode.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le type peut être utilisé pour créer des paramètres fortement typés, afin que les valeurs sont correctement converties entre votre application Web et le code sous-jacent.  
  
 Si le type du paramètre est modifié, le <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> méthode est appelée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, et <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propriétés de <xref:System.Web.UI.WebControls.Parameter> objets lors de leur utilisation en tant que paramètres de sortie et les paramètres de valeur de retour avec une procédure stockée. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> vue d’ensemble de la classe.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le type de paramètre n'est pas l'une des valeurs <see cref="T:System.TypeCode" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295">Utilisation de SqlDataSource et AccessDataSource contrôles avec paramètres</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4">Utilisation de paramètres avec le contrôle ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.ViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ViewState As StateBag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::StateBag ^ ViewState { System::Web::UI::StateBag ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : System.Web.UI.StateBag" Usage="System.Web.UI.WebControls.Parameter.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un dictionnaire d'informations d'état qui vous permet d'enregistrer et de restaurer l'état d'affichage d'un objet <see cref="T:System.Web.UI.WebControls.Parameter" /> entre plusieurs demandes de la même page.</summary>
        <value>Instance de <see cref="T:System.Web.UI.StateBag" /> qui contient les informations d'état d'affichage de l'objet <see cref="T:System.Web.UI.WebControls.Parameter" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 État d’affichage d’un paramètre est l’accumulation de toutes ses valeurs de propriété. Pour conserver ces valeurs entre les requêtes HTTP, les contrôles serveur ASP.NET utilisent cette propriété, qui est une instance de la <xref:System.Web.UI.StateBag> (classe), pour stocker les valeurs de propriété. Les valeurs sont ensuite passées en tant que variable en un élément HTML `hidden` élément d’entrée lors du traitement des demandes suivantes. État d’affichage est activé pour tous les contrôles de serveur par défaut.  
  
 Pour plus d’informations sur les dictionnaires et leur utilisation, consultez [Collections et Structures de données](~/docs/standard/collections/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser l’objet de l’état d’affichage pour stocker l’état d’objet de paramètre dans une classe qui étend la <xref:System.Web.UI.WebControls.Parameter> classe. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.WebControls.Parameter> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#5)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      </Docs>
    </Member>
  </Members>
</Type>