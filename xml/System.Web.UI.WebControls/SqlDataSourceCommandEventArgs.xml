<Type Name="SqlDataSourceCommandEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a93f1ccd154b2ab09e32ab504c6a50b023f087df" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39743062" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSourceCommandEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceCommandEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceCommandEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceCommandEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceCommandEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour les événements <see cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />, <see cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" /> et <see cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" /> du contrôle <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En ajoutant un délégué de gestionnaire d’événements pour gérer le <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, ou <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> événements, vous pouvez exécuter tout prétraitement supplémentaire requis ou annuler totalement la commande de base de données.  
  
 Étant donné que le <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> classe est dérivée de la <xref:System.ComponentModel.CancelEventArgs> (classe), vous pouvez annuler une en attente <xref:System.Web.UI.WebControls.SqlDataSource> commande de base de données en définissant le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété `true`. Vous pouvez examiner et manipuler le <xref:System.Data.Common.DbCommand.CommandText%2A>, <xref:System.Data.Common.DbCommand.Parameters%2A> collection et autres propriétés de commande avant d’exécuter la commande en accédant à la <xref:System.Data.Common.DbCommand> objet exposé par le <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A> propriété.  
  
 Le <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> classe est utilisée dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>, et <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> méthodes pour fournir l’accès à un <xref:System.Web.UI.WebControls.SqlDataSource> commande de base de données avant son exécution. Le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle expose plusieurs événements que vous pouvez gérer pour travailler avec les objets de données sous-jacents au cours d’une opération de données. Le tableau suivant répertorie les événements et associées <xref:System.EventArgs> et les classes de gestionnaire d’événements, pour mieux vous guider pour les différents événements qui correspondent au cycle de vie d’une opération de données en utilisant le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle.  
  
|événement|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> Se produit avant que les données sont récupérées.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> se produisent avant une instruction insert, update ou opération de suppression est effectuée.|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> se produisent après la récupération des données, d’insertion, mise à jour, opérations ou de suppression est terminée.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher les données récupérées à partir d’une base de données Microsoft SQL Server dans un <xref:System.Web.UI.WebControls.DropDownList> contrôler et mettre à jour l’enregistrement à l’aide un <xref:System.Web.UI.WebControls.TextBox> contrôle. L’exemple montre comment vous pouvez utiliser un <xref:System.Data.Common.DbTransaction> objet à ajouter le contexte de transaction lors de l’utilisation du <xref:System.Web.UI.WebControls.SqlDataSource> contrôle pour mettre à jour des données.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceCommandEventArgs (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As DbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceCommandEventArgs(System::Data::Common::DbCommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceCommandEventArgs : System.Data.Common.DbCommand -&gt; System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceCommandEventArgs command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command">Un objet <see cref="T:System.Data.Common.DbCommand" /> qui représente la commande <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />, <see cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" /> ou <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> annulable.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> à l'aide de l'objet de commande de base de données spécifié.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la commande de base de données en attente.</summary>
        <value>Un objet <see cref="T:System.Data.Common.DbCommand" /> qui représente la commande de base de données en attente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez gérer le <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, ou <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> événement pour examiner et manipuler les propriétés de la <xref:System.Data.Common.DbCommand> avant qu’il soit exécuté par le <xref:System.Web.UI.WebControls.SqlDataSource> contrôle. La connexion à la source de données sous-jacente n’est pas encore ouverte lorsque le délégué de gestionnaire d’événements est appelé. Par conséquent, vous ne pouvez pas annuler l’opération de base de données en appelant le <xref:System.Data.Common.DbCommand.Cancel%2A> méthode sur le <xref:System.Data.Common.DbCommand> directement l’objet. Toutefois, vous pouvez annuler l’opération de base de données en définissant le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété de la <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> à `true`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment récupérer des données à partir de Microsoft SQL Server et l’afficher dans un <xref:System.Web.UI.WebControls.GridView> contrôle et comment utiliser un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour afficher les détails d’une ligne sélectionnée dans le <xref:System.Web.UI.WebControls.GridView> et en tant que formulaire pour insérer de nouveaux enregistrements.  
  
 Les données s’affiche initialement dans le <xref:System.Web.UI.WebControls.GridView> contrôle et la ligne sélectionnée de la <xref:System.Web.UI.WebControls.GridView> s’affiche également dans le <xref:System.Web.UI.WebControls.DetailsView>. Le <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView> contrôles utilisent des données différentes des contrôles de source ; celle qui est associé à la <xref:System.Web.UI.WebControls.DetailsView> a un <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> et <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> qui garantissent que la ligne sélectionnée de la <xref:System.Web.UI.WebControls.GridView> s’affiche.  
  
 Si vous cliquez sur le bouton Insérer généré automatiquement de la <xref:System.Web.UI.WebControls.DetailsView> contrôle, la <xref:System.Web.UI.WebControls.DetailsView> affiche une interface utilisateur différente, qui est utilisée pour insérer un nouvel enregistrement. L’exemple utilise une procédure stockée pour insérer des enregistrements et retourne la clé primaire de la ligne insérée. Si vous insérez un enregistrement, le <xref:System.Web.UI.WebControls.DetailsView> remplit automatiquement la <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection avec les valeurs des colonnes dépendantes et appelle le <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> (méthode). Le <xref:System.Web.UI.WebControls.DetailsView> peut déduire les paramètres corrects à partir d’un <xref:System.Web.UI.WebControls.BoundField>et un paramètre pour le <xref:System.Web.UI.WebControls.TemplateField> lorsque la syntaxe de liaison de données bidirectionnelle ASP.NET est utilisée. Dans cet exemple, un paramètre supplémentaire est ajouté dans le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> Gestionnaire d’événements pour gérer la clé primaire retournée par la procédure stockée.  
  
 Enfin, une fois que les données sont insérées par le <xref:System.Web.UI.WebControls.DetailsView> dans la base de données, le <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Gestionnaire d’événements est appelé pour gérer le <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> événement, la valeur de la clé primaire de la ligne insérée est affichée et le <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> procédé de la <xref:System.Web.UI.WebControls.GridView>contrôle est appelé explicitement pour actualiser les données.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
  </Members>
</Type>