<Type Name="TableRowCollection" FullName="System.Web.UI.WebControls.TableRowCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9b16ae0622156f7b07d4689b3d80df70ef8b5002" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37590134" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TableRowCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableRowCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TableRowCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableRowCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableRowCollection sealed : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type TableRowCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TableRowsCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Encapsule une collection d'objets <see cref="T:System.Web.UI.WebControls.TableRow" /> représentant une seule ligne dans un contrôle <see cref="T:System.Web.UI.WebControls.Table" />. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette classe pour gérer par programme une collection de <xref:System.Web.UI.WebControls.TableRow> objets. Cette classe est couramment utilisée pour ajouter ou supprimer des lignes à partir d’un <xref:System.Web.UI.WebControls.Table> contrôle.  
  
> [!NOTE]
>  Un <xref:System.Web.UI.WebControls.Table> contrôle contient un <xref:System.Web.UI.WebControls.Table.Rows%2A> collection qui représente une collection de <xref:System.Web.UI.WebControls.TableRow> objets. Chaque <xref:System.Web.UI.WebControls.TableRow> représente une ligne dans la table et contient un <xref:System.Web.UI.WebControls.TableRow.Cells%2A> collection qui représente une collection de <xref:System.Web.UI.WebControls.TableCell> objets. Ces <xref:System.Web.UI.WebControls.TableCell> objets représentent les cellules individuelles dans la table. Pour obtenir une cellule individuelle, vous devez d’abord obtenir un <xref:System.Web.UI.WebControls.TableRow> à partir de la <xref:System.Web.UI.WebControls.Table.Rows%2A> collection d’un <xref:System.Web.UI.WebControls.Table> contrôle. Vous pouvez ensuite obtenir une <xref:System.Web.UI.WebControls.TableCell> à partir de la <xref:System.Web.UI.WebControls.TableRow.Cells%2A> collection de la <xref:System.Web.UI.WebControls.TableRow>.  
  
   
  
## Examples  
 L’exemple suivant montre comment ajouter par programme des lignes à une table en ajoutant <xref:System.Web.UI.WebControls.TableRow> objets qui représentent les lignes de la table, à la <xref:System.Web.UI.WebControls.Table> contrôler via le <xref:System.Web.UI.WebControls.Table.Rows%2A> propriété.  
  
 [!code-aspx-csharp[Classic TableRowCollection Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection Example/VB/sourcevb.aspx#1)]
 [!code-xml[Classic TableRowCollection Example#1](~/samples/snippets/common/VS_Snippets_WebNet/Classic TableRowCollection Example/Common/source.xml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TableRow" />
    <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.TableCell" />
    <altmember cref="P:System.Web.UI.WebControls.TableRow.Cells" />
    <altmember cref="T:System.Web.UI.WebControls.Table" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.TableRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.TableRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.Add(System.Web.UI.WebControls.TableRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (row As TableRow) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::UI::WebControls::TableRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.TableRow -&gt; int" Usage="tableRowCollection.Add row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.TableRow" />
      </Parameters>
      <Docs>
        <param name="row">Objet <see cref="T:System.Web.UI.WebControls.TableRow" /> à ajouter à <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Ajoute l'objet <see cref="T:System.Web.UI.WebControls.TableRow" /> spécifié à la fin de <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <returns>Index de <see cref="T:System.Web.UI.WebControls.TableRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode permet d’ajouter un <xref:System.Web.UI.WebControls.TableRow> objet à la fin d’un <xref:System.Web.UI.WebControls.TableRowCollection>.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.TableRowCollection.Add%2A> méthode pour ajouter un <xref:System.Web.UI.WebControls.TableRow> de l’objet à un <xref:System.Web.UI.WebControls.TableRowCollection>. Notez que dans l’exemple, le <xref:System.Web.UI.WebControls.Table.Rows%2A> propriété de la <xref:System.Web.UI.WebControls.Table> est une instance de la <xref:System.Web.UI.WebControls.TableRowCollection> classe.  
  
 [!code-aspx-csharp[Classic TableRowCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.TableRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.TableRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, row As TableRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::TableRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.TableRow -&gt; unit" Usage="tableRowCollection.AddAt (index, row)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="row" Type="System.Web.UI.WebControls.TableRow" />
      </Parameters>
      <Docs>
        <param name="index">Emplacement dans la <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> où ajouter la <see cref="T:System.Web.UI.WebControls.TableRow" />.</param>
        <param name="row">Objet <see cref="T:System.Web.UI.WebControls.TableRow" /> à ajouter à <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Ajoute l'objet <see cref="T:System.Web.UI.WebControls.TableRow" /> spécifié à <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> à l'emplacement d'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour insérer le texte spécifié <xref:System.Web.UI.WebControls.TableRow> dans un <xref:System.Web.UI.WebControls.TableRowCollection> à l’index spécifié.  
  
   
  
## Examples  
 L’exemple suivant montre comment ajouter un <xref:System.Web.UI.WebControls.TableRow> objet au milieu d’un <xref:System.Web.UI.WebControls.TableRowCollection>. Notez que dans l’exemple, le <xref:System.Web.UI.WebControls.Table.Rows%2A> propriété de la <xref:System.Web.UI.WebControls.Table> est une instance de la <xref:System.Web.UI.WebControls.TableRowCollection> classe.  
  
 [!code-aspx-csharp[Classic TableRowCollection.AddAt Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.AddAt Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.AddAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.AddAt Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.UI.WebControls.TableRow[] rows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.UI.WebControls.TableRow[] rows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.AddRange(System.Web.UI.WebControls.TableRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (rows As TableRow())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Web::UI::WebControls::TableRow ^&gt; ^ rows);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Web.UI.WebControls.TableRow[] -&gt; unit" Usage="tableRowCollection.AddRange rows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Web.UI.WebControls.TableRow[]" />
      </Parameters>
      <Docs>
        <param name="rows">Tableau contenant les objets <see cref="T:System.Web.UI.WebControls.TableRow" /> à ajouter à la collection.</param>
        <summary>Ajoute les objets <see cref="T:System.Web.UI.WebControls.TableRow" /> du tableau spécifié à la fin de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.TableRowCollection.AddRange%2A> méthode pour ajouter le <xref:System.Web.UI.WebControls.TableRow> objets à partir du tableau spécifié à la collection. Cette méthode est couramment utilisée lorsque vous construisez une table. Pour construire une table, commencez par créer un tableau de <xref:System.Web.UI.WebControls.TableRow> objets pour représenter les lignes de la table. Ensuite, utilisez le <xref:System.Web.UI.WebControls.TableRowCollection.AddRange%2A> méthode, en transmettant le tableau en tant qu’argument, pour ajouter le <xref:System.Web.UI.WebControls.TableRow> objets à la collection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La valeur du paramètre <paramref name="rows" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.TableRowCollection.Add(System.Web.UI.WebControls.TableRow)" />
        <altmember cref="M:System.Web.UI.WebControls.TableRowCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableRow)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="tableRowCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime tous les contrôles <see cref="T:System.Web.UI.WebControls.TableRow" /> du <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour supprimer tous les <xref:System.Web.UI.WebControls.TableRow> objets à partir de la <xref:System.Web.UI.WebControls.TableRowCollection> et définir le <xref:System.Web.UI.WebControls.TableRowCollection.Count%2A> 0 à la propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.TableRowCollection.Clear%2A> méthode pour supprimer tous les <xref:System.Web.UI.WebControls.TableRow> objets à partir de la <xref:System.Web.UI.WebControls.TableRowCollection> de la table et les remplacer par de nouveaux <xref:System.Web.UI.WebControls.TableRow> objets.  
  
 [!code-aspx-csharp[Classic TableRowCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="P:System.Web.UI.WebControls.TableRowCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="tableRowCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Un élément de base zéro <see cref="T:System.Array" /> qui reçoit les éléments copiés à partir de <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <param name="index">Première position du <see cref="T:System.Array" /> spécifié à recevoir des données copiées.</param>
        <summary>Copie les éléments de <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> dans le <see cref="T:System.Array" /> spécifié, à commencer par l'index spécifié dans <see cref="T:System.Array" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour copier le contenu de la <xref:System.Web.UI.WebControls.TableRowCollection> dans spécifié <xref:System.Array?displayProperty=nameWithType>, en commençant à l’index spécifié.  
  
> [!NOTE]
>  Le `array` paramètre doit être de base zéro <xref:System.Array?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.TableRowCollection.CopyTo%2A> méthode pour copier les éléments à partir de la <xref:System.Web.UI.WebControls.TableRowCollection> dans le tableau spécifié.  
  
 [!code-aspx-csharp[Classic TableRowCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.CopyTo Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.CopyTo Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.TableRowCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre d'objets <see cref="T:System.Web.UI.WebControls.TableRow" /> dans <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <value>Nombre d'objets <see cref="T:System.Web.UI.WebControls.TableRow" /> de <see cref="T:System.Web.UI.WebControls.TableRowCollection" />. La valeur par défaut est 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour déterminer le nombre de lignes dans le <xref:System.Web.UI.WebControls.TableRowCollection>. Le <xref:System.Web.UI.WebControls.TableRowCollection.Count%2A> propriété est souvent utilisée lors de l’itération au sein de la collection pour déterminer l’angle limite.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.TableRowCollection.Count%2A> propriété afin de déterminer le nombre de lignes dans le <xref:System.Web.UI.WebControls.TableRowCollection>. Notez que dans l’exemple, le <xref:System.Web.UI.WebControls.Table.Rows%2A> propriété de la <xref:System.Web.UI.WebControls.Table> est une instance de la <xref:System.Web.UI.WebControls.TableRowCollection> classe.  
  
 [!code-csharp[Classic TableRowCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic TableRowCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="tableRowCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un objet implémentant <see cref="T:System.Collections.IEnumerator" /> qui contient tous les objets <see cref="T:System.Web.UI.WebControls.TableRow" /> dans <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <returns>Objet implémentant <see cref="T:System.Collections.IEnumerator" /> qui contient tous les objets <see cref="T:System.Web.UI.WebControls.TableRow" /> dans <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour créer un <xref:System.Collections.IEnumerator?displayProperty=nameWithType> implémenté l’objet qui peut être parcouru facilement pour obtenir chaque élément le <xref:System.Web.UI.WebControls.TableRowCollection>.  
  
 Utilisez le <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> propriété à obtenir l’élément actuellement pointé dans la collection.  
  
 Utilisez le <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> méthode pour passer à l’élément suivant dans la collection.  
  
 Utilisez le <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> sauvegarder de méthode pour déplacer l’énumérateur à sa position initiale.  
  
> [!NOTE]
>  Le <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> méthode doit être appelée après la création d’un <xref:System.Collections.IEnumerator?displayProperty=nameWithType> implémenté l’objet ou à l’aide de la <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> méthode pour déplacer l’énumérateur vers le premier élément dans la collection. Sinon, l’élément représenté par le <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> propriété n’est pas définie.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.TableRowCollection.GetEnumerator%2A> méthode pour créer un <xref:System.Collections.IEnumerator?displayProperty=nameWithType> implémenté l’objet qui est itéré pour afficher les éléments dans la table.  
  
 [!code-aspx-csharp[Classic TableRowCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.GetEnumerator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.GetEnumerator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetRowIndex">
      <MemberSignature Language="C#" Value="public int GetRowIndex (System.Web.UI.WebControls.TableRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRowIndex(class System.Web.UI.WebControls.TableRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.GetRowIndex(System.Web.UI.WebControls.TableRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowIndex (row As TableRow) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRowIndex(System::Web::UI::WebControls::TableRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.GetRowIndex : System.Web.UI.WebControls.TableRow -&gt; int" Usage="tableRowCollection.GetRowIndex row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.TableRow" />
      </Parameters>
      <Docs>
        <param name="row">Objet <see cref="T:System.Web.UI.WebControls.TableRow" /> à rechercher dans <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Retourne une valeur représentant l'index du <see cref="T:System.Web.UI.WebControls.TableRow" /> spécifié à partir de <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <returns>Position d'index ordinale du <see cref="T:System.Web.UI.WebControls.TableRow" /> spécifié dans la collection. La valeur par défaut est -1 (objet <see cref="T:System.Web.UI.WebControls.TableRow" /> spécifié introuvable).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour déterminer l’index de l’objet <xref:System.Web.UI.WebControls.TableRow> dans le <xref:System.Web.UI.WebControls.TableRowCollection>. Si spécifié <xref:System.Web.UI.WebControls.TableRow> est introuvable, un index de -1 est retourné.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.TableRowCollection.GetRowIndex%2A> propriété pour afficher l’index de ligne de la cellule sélectionnée.  
  
 [!code-aspx-csharp[Classic TableRowCollection.GetRowIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.GetRowIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.GetRowIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.GetRowIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.WebControls.TableRowCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> est en lecture seule.</summary>
        <value>
          <see langword="false" /> dans tous les cas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété retourne toujours `false` pour indiquer que le <xref:System.Web.UI.WebControls.TableRowCollection> peuvent être écrites dans tous les cas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.TableRowCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'accès à <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> est synchronisé (thread-safe).</summary>
        <value>
          <see langword="false" /> dans tous les cas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est dérivée de <xref:System.Collections.ICollection?displayProperty=nameWithType> est substituée pour toujours retourner `false`.  
  
 Pour plus d’informations sur la <xref:System.Web.UI.WebControls.TableCellCollection.IsSynchronized%2A> propriété, consultez le <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> propriété de la <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableRow this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableRow Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As TableRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableRow ^ default[int] { System::Web::UI::WebControls::TableRow ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.TableRow" Usage="System.Web.UI.WebControls.TableRowCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Valeur d'index ordinale spécifiant l'objet <see cref="T:System.Web.UI.WebControls.TableRow" /> à retourner. Cet index est en base zéro.</param>
        <summary>Obtient un objet <see cref="T:System.Web.UI.WebControls.TableRow" /> à partir du <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> à l'index spécifié.</summary>
        <value>Objet <see cref="T:System.Web.UI.WebControls.TableRow" /> représentant un élément du <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cet indexeur pour obtenir un individu <xref:System.Web.UI.WebControls.TableRow> à partir de la <xref:System.Web.UI.WebControls.TableRowCollection> à l’index spécifié à l’aide de la notation de tableau simple.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser l’indexeur pour obtenir un <xref:System.Web.UI.WebControls.TableRow> à partir d’un <xref:System.Web.UI.WebControls.TableRowCollection>. Notez que dans l’exemple, le <xref:System.Web.UI.WebControls.Table.Rows%2A> propriété de la <xref:System.Web.UI.WebControls.Table> est une instance de la <xref:System.Web.UI.WebControls.TableRowCollection> classe.  
  
 [!code-aspx-csharp[Classic TableRowCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TableRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TableRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.Remove(System.Web.UI.WebControls.TableRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (row As TableRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TableRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.TableRow -&gt; unit" Usage="tableRowCollection.Remove row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.TableRow" />
      </Parameters>
      <Docs>
        <param name="row">Objet <see cref="T:System.Web.UI.WebControls.TableRow" /> à supprimer de <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Supprime le <see cref="T:System.Web.UI.WebControls.TableRow" /> spécifié du <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour supprimer le texte spécifié <xref:System.Web.UI.WebControls.TableRow> à partir d’un <xref:System.Web.UI.WebControls.TableRowCollection>.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.TableRowCollection.Remove%2A> méthode pour supprimer une ligne de la table. Notez que dans l’exemple, le <xref:System.Web.UI.WebControls.Table.Rows%2A> propriété de la <xref:System.Web.UI.WebControls.Table> est une instance de la <xref:System.Web.UI.WebControls.TableRowCollection> classe.  
  
 [!code-aspx-csharp[Classic TableRowCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="tableRowCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de l'objet <see cref="T:System.Web.UI.WebControls.TableRow" /> à supprimer de <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Supprime <see cref="T:System.Web.UI.WebControls.TableRow" /> de <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> à l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour supprimer un <xref:System.Web.UI.WebControls.TableRow> à partir de la <xref:System.Web.UI.WebControls.TableRowCollection> à l’index spécifié.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.TableRowCollection.RemoveAt%2A> méthode pour supprimer une ligne de la table. Notez que dans l’exemple, le <xref:System.Web.UI.WebControls.Table.Rows%2A> propriété de la <xref:System.Web.UI.WebControls.Table> est une instance de la <xref:System.Web.UI.WebControls.TableRowCollection> classe. Notez également que l’index de la <xref:System.Web.UI.WebControls.Table.Rows%2A> collection est de base zéro.  
  
 [!code-aspx-csharp[Classic TableRowCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.RemoveAt Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.RemoveAt Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="P:System.Web.UI.WebControls.Table.Rows" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.TableRowCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet pouvant permettre de synchroniser l'accès à <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <value>Objet permettant de synchroniser l’accès à la collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’objet retourné dans cette implémentation est la <xref:System.Web.UI.WebControls.TableRowCollection> lui-même.  
  
 Pour plus d’informations sur la <xref:System.Web.UI.WebControls.TableCellCollection.SyncRoot%2A> propriété, consultez le <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> propriété de la <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (o As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ o) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objet à ajouter à la collection.</param>
        <summary>Ajoute un objet à la collection.</summary>
        <returns>L’index avec lequel l’objet a été ajouté à la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En règle générale, vous devez utiliser le <xref:System.Web.UI.WebControls.TableRowCollection.Add%2A?displayProperty=nameWithType> méthode pour ajouter un élément à un <xref:System.Web.UI.WebControls.TableRowCollection> objet.  
  
 Le <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23Add%2A> méthode est une implémentation de membre d’interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.TableRowCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableRowCollection.Add(System.Web.UI.WebControls.TableRow)" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (o As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ o) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objet à rechercher dans la collection.</param>
        <summary>Détermine si la collection contient l'objet spécifié.</summary>
        <returns>
          <see langword="true" /> si l'objet se trouve dans la collection ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23Contains%2A> méthode est une implémentation de membre d’interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.TableRowCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (o As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ o) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objet à rechercher dans la collection.</param>
        <summary>Recherche l'objet spécifié et retourne l'index de base zéro de la première occurrence de la collection.</summary>
        <returns>Retourne l'index de base zéro de la première occurrence de l'objet de la collection ; sinon, -1 si l'objet ne se trouve pas dans la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En règle générale, vous devez utiliser le <xref:System.Web.UI.WebControls.TableRowCollection.GetRowIndex%2A> méthode pour obtenir l’index d’un élément dans un <xref:System.Web.UI.WebControls.TableRowCollection> objet.  
  
 Le <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23IndexOf%2A> méthode est une implémentation de membre d’interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.TableRowCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableRowCollection.GetRowIndex(System.Web.UI.WebControls.TableRow)" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, o As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ o) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro dans la collection au niveau duquel l'objet doit être inséré.</param>
        <param name="o">Objet à insérer dans la collection.</param>
        <summary>Insère un objet dans la collection à l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En règle générale, vous devez utiliser le <xref:System.Web.UI.WebControls.TableRowCollection.AddAt%2A> méthode pour ajouter un élément à un <xref:System.Web.UI.WebControls.TableRowCollection> objet.  
  
 Le <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23Insert%2A> méthode est une implémentation de membre d’interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.TableRowCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableRowCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableRow)" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value>
          <see langword="true" /> si la liste est de taille fixe ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut être utilisé uniquement lorsque le <xref:System.Web.UI.WebControls.TableRowCollection> instance est convertie dans le <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de l'élément à obtenir ou à définir.</param>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
        <value>Élément au niveau de l'index spécifié.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut être utilisé uniquement lorsque le <xref:System.Web.UI.WebControls.TableRowCollection> instance est convertie dans le <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (o As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ o) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objet à supprimer de la collection.</param>
        <summary>Supprime un objet de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En règle générale, vous devez utiliser le <xref:System.Web.UI.WebControls.TableRowCollection.Remove%2A?displayProperty=nameWithType> méthode pour supprimer un élément à partir d’un <xref:System.Web.UI.WebControls.TableRowCollection> objet.  
  
 Le <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23Remove%2A> méthode est une implémentation de membre d’interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.TableRowCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TableRowCollection.Remove(System.Web.UI.WebControls.TableRow)" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
  </Members>
</Type>