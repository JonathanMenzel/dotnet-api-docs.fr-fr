<Type Name="EmbeddedMailObject" FullName="System.Web.UI.WebControls.EmbeddedMailObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97029acdea85cfc80174429744e599c46a9ea1e1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55404568" /></Metadata><TypeSignature Language="C#" Value="public sealed class EmbeddedMailObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddedMailObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EmbeddedMailObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddedMailObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddedMailObject sealed" />
  <TypeSignature Language="F#" Value="type EmbeddedMailObject = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente un élément à incorporer dans un e-mail construit à l’aide de la classe <see cref="T:System.Web.UI.WebControls.MailDefinition" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.WebControls.EmbeddedMailObject> représente un élément à incorporer dans un message électronique. Ces éléments incorporés peuvent être des fichiers image telles que des logos de société. Chaque élément incorporé est spécifié par un identificateur et un chemin d’accès.  
  
 Pour vous assurer qu’un objet incorporé est correctement affiché dans le fichier de message de courrier électronique, les conditions suivantes doivent être remplies :  
  
-   Le message électronique est au format HTML.  
  
-   L’élément est un fichier image (.jpg, .gif, .bmp et ainsi de suite).  
  
-   Le fichier de corps au format HTML spécifié dans le <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> propriété contient une référence au fichier image à l’aide de la syntaxe suivante :  
  
    ```  
    <img src="cid:identifier" alt="Alternate Text" />.  
    ```  
  
 Si un <xref:System.Web.UI.WebControls.EmbeddedMailObject> est ajouté à un message électronique et ne remplit pas toutes des spécifications indiquées précédemment, il sera très probablement affiché en tant que pièce jointe dans le message électronique. Si un élément est référencé par un identificateur dans le message électronique, mais pas inclus en tant qu’un élément incorporé, il apparaît comme une pièce jointe rompue lors de l’affichage du message.  
  
 Le <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> stocke une collection de <xref:System.Web.UI.WebControls.EmbeddedMailObject> objets pour un seul message électronique. Le <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> est utilisé par le <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> propriété de la <xref:System.Web.UI.WebControls.MailDefinition> objet à créer le message électronique.  
  
 Les messages électroniques qui permettent aux objets incorporés sont configurables dans les contrôles Web suivants en définissant leurs <xref:System.Web.UI.WebControls.MailDefinition> propriétés de manière déclarative :  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
-   <xref:System.Web.UI.WebControls.ChangePassword>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery>  
  
> [!NOTE]
>  Les valeurs dans le <xref:System.Web.UI.WebControls.EmbeddedMailObject> et <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> objets ne sont pas stockés dans l’état d’affichage. Cela protège contre les utilisateurs malveillants qui obtiennent des informations de chemin d’accès de votre serveur.  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui utilise un <xref:System.Web.UI.WebControls.ChangePassword> contrôle Web et inclut un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> événement nommé `SendingMail`. L’exemple de code suppose que le site Web ASP.NET a été configuré pour utiliser l’appartenance d’ASP.NET et l’authentification par formulaire, et qu’un utilisateur a été créé dont le nom et mot de passe vous connaissez. Pour plus d'informations, voir [Procédure : Implémenter l’authentification par formulaire Simple](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Si la modification de mot de passe réussit, le code dans le `SendingMail` Gestionnaire d’événements essaie d’envoyer un message électronique à l’utilisateur pour confirmer la modification. SMTP doit déjà être configurée sur le serveur afin que cet exemple de code fonctionne. Pour plus d’informations sur la façon de configurer un serveur SMTP, consultez [NIB : Procédure : Installer et configurer des serveurs virtuels SMTP dans IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Dans le cadre de cet exemple, il n’est pas nécessaire de configurer un serveur SMTP ; l’exemple est construit pour tester un échec d’envoi d’un message électronique.  
  
 Si un serveur de messagerie n’est pas configuré correctement ou une autre erreur se produit et le message électronique ne peut pas être envoyé, le `SendMailError` fonction est appelée. Un message s’affiche à l’utilisateur. En outre, un événement est enregistré dans le journal des événements Windows en partant du principe qu’une source d’événements nommée MySamplesSite déjà existe. Consultez l’exemple de code ci-dessous pour créer la source d’événement spécifié. Pour plus d’informations sur la création d’une source d’événements, consultez [gestion des événements serveur dans les Pages Web Forms ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriété de la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objet est défini sur `true` pour indiquer que l’erreur a été gérée.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Utilisez l’exemple de code suivant si vous avez besoin ajouter par programmation de la source d’événements nommée MySamplesSite dans votre journal des applications. Cette source d’événements doit exister dans l’ordre pour le premier exemple de code fonctionne correctement. L’exemple de code suivant nécessite des privilèges d’administrateur.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 L’exemple de code suivant peut être utilisé en tant que fichier ChangePasswordMail.htm pour l’exemple de code précédent.  
  
> [!IMPORTANT]
>  Envoi de compte d’utilisateur noms ou des mots de passe par courrier électronique est une menace de sécurité potentielle. Messages électroniques sont généralement envoyés en texte brut et peuvent être lues par réseau spéciales « détection des applications ».  Pour améliorer la sécurité, utilisez les atténuations sont décrites dans [sécurisation des contrôles de connexion](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.ChangePassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Onglet Application outil Administration de Site Web</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir ou définir l’identificateur de l’élément incorporé, utilisez la <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> propriété. Pour obtenir ou définir le chemin d’accès à l’élément incorporé, utilisez la <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> propriété. Les deux propriétés doivent être définies pour incorporer avec succès l’élément dans le message électronique.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Onglet Application outil Administration de Site Web</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject (string name, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject(System::String ^ name, System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.EmbeddedMailObject : string * string -&gt; System.Web.UI.WebControls.EmbeddedMailObject" Usage="new System.Web.UI.WebControls.EmbeddedMailObject (name, path)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom utilisé comme identificateur de l'élément à incorporer dans le message électronique. Pour plus d'informations, consultez <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />.</param>
        <param name="path">Chemin d'accès utilisé pour récupérer un élément à incorporer dans le message électronique. Pour plus d'informations, consultez <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> à l'aide du nom de l'identificateur et du chemin d'accès spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre un exemple de code-behind d’une page ASP.NET qui utilise un <xref:System.Web.UI.WebControls.ChangePassword> contrôler et inclut un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> événement nommé `SendingMail`. Cet exemple de code suppose que le site Web ASP.NET a été configuré pour utiliser l’appartenance d’ASP.NET et l’authentification par formulaire, et qu’un utilisateur a été créé dont le nom et mot de passe vous connaissez. Pour plus d'informations, voir [Procédure : Implémenter l’authentification par formulaire Simple](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Si la modification de mot de passe réussit, le code dans le `SendingMail` Gestionnaire d’événements essaie d’envoyer un message électronique à l’utilisateur pour confirmer la modification. SMTP doit déjà être configurée sur le serveur afin que cet exemple de code fonctionne. Pour plus d’informations sur la façon de configurer un serveur SMTP, consultez [NIB : Procédure : Installer et configurer des serveurs virtuels SMTP dans IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Dans le cadre de cet exemple, il n’est pas nécessaire de configurer un serveur SMTP ; l’exemple est construit pour tester un échec d’envoi d’un message électronique.  
  
 Si un serveur de messagerie n’est pas configuré correctement ou une autre erreur se produit et le message électronique ne peut pas être envoyé, le `SendMailError` fonction est appelée. Un message s’affiche à l’utilisateur. En outre, un événement est enregistré dans le journal des événements Windows en partant du principe qu’une source d’événements nommée MySamplesSite déjà existe. Consultez l’exemple de code ci-dessous pour créer la source d’événement spécifié. Pour plus d’informations sur la création d’une source d’événements, consultez [gestion des événements serveur dans les Pages Web Forms ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriété de la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objet est défini sur `true` pour indiquer que l’erreur a été gérée.  
  
 L’exemple de code suivant montre à l’aide d’une page .aspx.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword_vb.aspx#1)]  
  
 L’exemple de code suivant montre l’utilisation d’un fichier code-behind.  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword.vb#2)]  
  
 Utilisez l’exemple de code suivant si vous avez besoin ajouter par programmation de la source d’événements nommée MySamplesSite dans votre journal des applications. Cette source d’événements doit exister dans l’ordre pour le premier exemple de code fonctionne correctement. L’exemple de code suivant nécessite des privilèges d’administrateur.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 L’exemple de code suivant peut être utilisé en tant que fichier ChangePasswordMail.htm pour l’exemple de code précédent.  
  
> [!IMPORTANT]
>  Envoi de compte d’utilisateur noms ou des mots de passe dans un message électronique est une menace de sécurité potentielle. Messages électroniques sont généralement envoyés en texte brut et peuvent être lues par réseau spéciales « détection des applications ».  Pour améliorer la sécurité, utilisez les atténuations sont décrites dans [sécurisation des contrôles de connexion](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <altmember cref="T:System.Web.Mail.SmtpMail" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Onglet Application outil Administration de Site Web</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom qui est utilisé comme identificateur de l'élément à incorporer dans un message électronique construit avec la classe <see cref="T:System.Web.UI.WebControls.MailDefinition" />.</summary>
        <value>Retourne l'identificateur de l'élément à incorporer dans un message électronique.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> propriété spécifie un identificateur pour un élément à incorporer dans un message électronique construit de façon déclarative avec le <xref:System.Web.UI.WebControls.MailDefinition> classe. L’identificateur est utilisé pour mapper l’élément contenu dans le <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> propriété vers son emplacement approprié dans le corps du fichier spécifié dans le <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> propriété, à l’aide de la syntaxe suivante :  
  
```  
<img src="cid:identifier" alt="Alternate Text" />  
```  
  
 En règle générale, l’élément est un fichier image. La valeur par défaut pour le <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> propriété est une chaîne vide.  
  
 Il est recommandé pour la conception d’accessibilité définir la propriété de texte de remplacement dans votre message électronique pour les images incorporées.  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui utilise un <xref:System.Web.UI.WebControls.ChangePassword> contrôle Web et inclut un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> événement nommé `SendingMail`. L’exemple de code suppose que le site Web ASP.NET a été configuré pour utiliser l’appartenance d’ASP.NET et l’authentification par formulaire, et qu’un utilisateur a été créé dont le nom et mot de passe vous connaissez. Pour plus d'informations, voir [Procédure : Implémenter l’authentification par formulaire Simple](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Si la modification de mot de passe réussit, le code dans le `SendingMail` Gestionnaire d’événements essaie d’envoyer un message électronique à l’utilisateur pour confirmer la modification. SMTP doit déjà être configurée sur le serveur afin que cet exemple de code fonctionne. Pour plus d’informations sur la façon de configurer un serveur SMTP, consultez [NIB : Procédure : Installer et configurer des serveurs virtuels SMTP dans IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Dans le cadre de cet exemple, il n’est pas nécessaire de configurer un serveur SMTP ; l’exemple est construit pour tester un échec d’envoi d’un message électronique.  
  
 Si un serveur de messagerie n’est pas configuré correctement ou une autre erreur se produit et le message électronique ne peut pas être envoyé, le `SendMailError` fonction est appelée. Un message s’affiche à l’utilisateur. En outre, un événement est enregistré dans le journal des événements Windows en partant du principe qu’une source d’événements nommée MySamplesSite déjà existe. Consultez l’exemple de code ci-dessous pour créer la source d’événement spécifié. Pour plus d’informations sur la création d’une source d’événements, consultez [gestion des événements serveur dans les Pages Web Forms ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriété de la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objet est défini sur `true` pour indiquer que l’erreur a été gérée.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Utilisez l’exemple de code suivant si vous avez besoin ajouter par programmation de la source d’événements nommée MySamplesSite dans votre journal des applications. Cette source d’événements doit exister dans l’ordre pour le premier exemple de code fonctionne correctement. L’exemple de code suivant nécessite des privilèges d’administrateur.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 L’exemple de code suivant peut être utilisé en tant que fichier ChangePasswordMail.htm pour l’exemple de code précédent.  
  
> [!IMPORTANT]
>  Envoi de compte d’utilisateur noms ou des mots de passe dans un message électronique est une menace de sécurité potentielle. Messages électroniques sont envoyés en texte brut et peuvent être lues par réseau spéciales « détection des applications ».  Pour améliorer la sécurité, utilisez les atténuations sont décrites dans [sécurisation des contrôles de connexion](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Onglet Application outil Administration de Site Web</related>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le chemin d'accès qui est utilisé pour récupérer un élément à incorporer dans un message électronique construit avec la classe <see cref="T:System.Web.UI.WebControls.MailDefinition" />.</summary>
        <value>Retourne le chemin d'accès à l'élément à incorporer dans un message électronique.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> propriété spécifie le chemin d’accès à l’élément à incorporer dans le message électronique construit de façon déclarative avec le <xref:System.Web.UI.WebControls.MailDefinition> objet. Le chemin d’accès de fichier dans <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> doit être un chemin d’accès tel que C:\MyServer\Banner.gif. En règle générale, l’élément incorporé est un fichier image. Si un fichier image est référencé par son identificateur dans le message électronique mais pas dans le message, l’image s’affiche comme pièce jointe rompue lorsque le message électronique est affiché.  
  
 Il est recommandé pour la conception d’accessibilité définir la propriété de texte de remplacement dans votre message électronique pour les images incorporées.  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui utilise un <xref:System.Web.UI.WebControls.ChangePassword> contrôle Web et inclut un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> événement nommé `SendingMail`. L’exemple de code suppose que le site Web ASP.NET a été configuré pour utiliser l’appartenance d’ASP.NET et l’authentification par formulaire, et qu’un utilisateur a été créé dont le nom et mot de passe vous connaissez. Pour plus d'informations, voir [Procédure : Implémenter l’authentification par formulaire Simple](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Si la modification de mot de passe réussit, le code dans le `SendingMail` Gestionnaire d’événements essaie d’envoyer un message électronique à l’utilisateur pour confirmer la modification. SMTP doit déjà être configurée sur le serveur afin que cet exemple de code fonctionne. Pour plus d’informations sur la façon de configurer un serveur SMTP, consultez [NIB : Procédure : Installer et configurer des serveurs virtuels SMTP dans IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Dans le cadre de cet exemple, il n’est pas nécessaire de configurer un serveur SMTP ; l’exemple est construit pour tester un échec d’envoi d’un message électronique.  
  
 Si un serveur de messagerie n’est pas configuré correctement ou une autre erreur se produit et le message électronique ne peut pas être envoyé, le `SendMailError` fonction est appelée. Un message s’affiche à l’utilisateur. En outre, un événement est enregistré dans le journal des événements Windows en partant du principe qu’une source d’événements nommée MySamplesSite déjà existe. Consultez l’exemple de code ci-dessous pour créer la source d’événement spécifié. Pour plus d’informations sur la création d’une source d’événements, consultez [gestion des événements serveur dans les Pages Web Forms ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriété de la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objet est défini sur `true` pour indiquer que l’erreur a été gérée.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Utilisez l’exemple de code suivant si vous avez besoin ajouter par programmation de la source d’événements nommée MySamplesSite dans votre journal des applications. Cette source d’événements doit exister dans l’ordre pour le premier exemple de code fonctionne correctement. L’exemple de code suivant nécessite des privilèges d’administrateur.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 L’exemple de code suivant peut être utilisé en tant que fichier ChangePasswordMail.htm pour l’exemple de code précédent.  
  
> [!IMPORTANT]
>  Envoi de compte d’utilisateur noms ou des mots de passe dans un message électronique est une menace de sécurité potentielle. Messages électroniques sont généralement envoyés en texte brut et peuvent être lues par réseau spéciales « détection des applications ».  Pour améliorer la sécurité, utilisez les atténuations sont décrites dans [sécurisation des contrôles de connexion](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Onglet Application outil Administration de Site Web</related>
      </Docs>
    </Member>
  </Members>
</Type>