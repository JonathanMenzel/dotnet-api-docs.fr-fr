<Type Name="ObjectDataSourceView" FullName="System.Web.UI.WebControls.ObjectDataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cb408cd0818ea1456926e326a95c5241d8dd7839" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53391598" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceView = class&#xA;    inherit DataSourceView&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Prend en charge le contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> et fournit une interface pour les contrôles liés aux données pour exécuter des opérations de données avec des objets métier et de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> classe est principalement destinée à être utilisé par des contrôles liés aux données et non comme objet programmable dans le code de la page.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> classe implémente les fonctionnalités de données pour le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôler, y compris le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>, et <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> opérations, de tri, de filtrage et de gestion des paramètres conservés en état d’affichage.  
  
 Un <xref:System.Web.UI.WebControls.ObjectDataSourceView> objet est créé pour chaque instance de la <xref:System.Web.UI.WebControls.ObjectDataSource> classe en cours d’exécution. Appels aux opérations de données de l’instance de la <xref:System.Web.UI.WebControls.ObjectDataSource> classe sont gérées par l’instance de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objet. Les développeurs de pages n’accèdent pas à l’instance de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> classe directement. Les développeurs de contrôle peuvent créer des contrôles de données personnalisé en étendant la <xref:System.Web.UI.WebControls.ObjectDataSource> et <xref:System.Web.UI.WebControls.ObjectDataSourceView> classes.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> classe effectue des opérations de données en appelant des méthodes sur des objets métier ou de données à l’aide de la réflexion. Au moment de l’exécution, le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle crée une instance du type qui est identifié par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> propriété, puis appelle la méthode appropriée pour l’opération de données. L’objet instancié n’est pas mis en cache en mémoire par le <xref:System.Web.UI.WebControls.ObjectDataSourceView>. L’objet est créé et détruit pour chaque appel de méthode de données. Si la méthode est `static` (`Shared` en Visual Basic), une instance n’est pas créée, mais la méthode d’opération de données est toujours appelée.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> n’est pas exposé directement aux développeurs de pages par le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle. Au lieu de cela, les propriétés et méthodes de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> sont accessibles via le <xref:System.Web.UI.WebControls.ObjectDataSource>. Par exemple, le <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> de <xref:System.Web.UI.WebControls.ObjectDataSourceView> propriété est définie en définissant le <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriété de la <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
## <a name="retrieving-data"></a>Récupération de données  
 L’opération la plus fondamentale qui effectue une vue de source de données est la récupération des données depuis le stockage de données sous-jacente à l’aide du <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> (méthode), qui Récupère un <xref:System.Collections.IEnumerable> collection d’éléments de données. Les méthodes suivantes de la récupération de données, les propriétés et les événements sont implémentées par le <xref:System.Web.UI.WebControls.ObjectDataSourceView> de l’objet et sont exposés directement par son <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle pour les développeurs de pages et aux autres appelants :  
  
-   Méthode <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>   
  
-   La propriété <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>  
  
-   La propriété <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>  
  
-   Le <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> événement  
  
-   Le <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> événement  
  
## <a name="updating-data"></a>Mise à jour des données  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> objet prend en charge les mises à jour des données en appelant une méthode de l’objet métier ou de données qui est identifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> propriété. Les contrôles liés aux données qui effectuent automatiquement les mises à jour, telles que la <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView> contrôles, passent leurs paramètres dans un <xref:System.Collections.Specialized.IOrderedDictionary> interface pour la <xref:System.Web.UI.WebControls.ObjectDataSourceView> et l’objet de vue fusionne ces paramètres avec tous les paramètres qui sont trouvé dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection.  
  
 Les méthodes de mise à jour suivantes, les propriétés et les événements sont implémentées par le <xref:System.Web.UI.WebControls.ObjectDataSourceView> et exposées directement par son <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle pour les développeurs de pages et aux autres appelants :  
  
-   Méthode <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>   
  
-   La propriété <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>  
  
-   La propriété <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>  
  
-   Le <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> événement  
  
-   Le <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> événement  
  
## <a name="inserting-data"></a>Insertion de données  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> objet prend en charge l’insertion de nouvelles lignes de données en appelant une méthode de l’objet métier ou de données qui est identifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété. Les contrôles liés aux données qui exécutent automatiquement des insertions, telles que la <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView>, passent leurs paramètres dans un <xref:System.Collections.Specialized.IOrderedDictionary> interface pour la <xref:System.Web.UI.WebControls.ObjectDataSourceView> et l’objet de vue fusionne ces paramètres avec tous les paramètres qui sont trouvent dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection.  
  
 Ce qui suit insérer les méthodes, propriétés et événements sont implémentées par le <xref:System.Web.UI.WebControls.ObjectDataSourceView> et exposées directement par son <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle pour les développeurs de pages et aux autres appelants :  
  
-   Méthode <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>   
  
-   La propriété <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>  
  
-   La propriété <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>  
  
-   Le <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> événement  
  
-   Le <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> événement  
  
## <a name="deleting-data"></a>Suppression de données  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> objet prend en charge la suppression de données en appelant une méthode de l’objet métier ou de données qui est identifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propriété. Les contrôles liés aux données qui exécutent automatiquement des suppressions, telles que la <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView>, passent leurs paramètres dans un <xref:System.Collections.Specialized.IOrderedDictionary> interface pour la <xref:System.Web.UI.WebControls.ObjectDataSourceView> et l’objet de vue fusionne ces paramètres avec tous les paramètres qui sont trouvent dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. Ce qui suit supprimer des méthodes, propriétés et événements sont implémentées par le <xref:System.Web.UI.WebControls.ObjectDataSourceView> et exposées directement par son <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle pour les développeurs de pages et aux autres appelants :  
  
-   Méthode <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>   
  
-   La propriété <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>  
  
-   La propriété <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>  
  
-   Le <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> événement  
  
-   Le <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> événement  
  
## <a name="filtering-and-sorting-data"></a>Filtrage et tri des données  
 Récupération de données est plus puissante lorsque vous pouvez filtrer les données dynamiquement. De filtrage est pris en charge uniquement par le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôler si le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> méthode retourne un <xref:System.Data.DataTable> ou <xref:System.Data.DataSet> objet. Vous pouvez utiliser la <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> et <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> propriétés à appliquer le filtrage dynamique à la récupération de données. Ces propriétés sont implémentées par le <xref:System.Web.UI.WebControls.ObjectDataSourceView> de l’objet et sont exposés directement par son <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle pour les contrôles liés aux données et aux autres appelants.  
  
 Vous pouvez trier les données que vous récupérez avec le <xref:System.Web.UI.WebControls.ObjectDataSource> en triant les données en mémoire après leur récupération. Tri est pris en charge uniquement par le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle si le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> méthode retourne un <xref:System.Data.DataTable> ou <xref:System.Data.DataSet>. Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A> propriété retourne toujours `true`, car le <xref:System.Web.UI.WebControls.ObjectDataSourceView> ne peut pas déterminer le type est renvoyé par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> méthode sans appeler la méthode. Le <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> syntaxe de la propriété est la même que pour un <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> propriété.  
  
## <a name="tracking-view-state"></a>État d’affichage de suivi  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> implémente le <xref:System.Web.UI.IStateManager> interface et utilise l’affichage état pour suivre son état entre les demandes de page. Implémentation de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>, et <xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A> méthodes sont fournies pour permettre le suivi d’état de vue pour le contrôle. Pour plus d’informations, consultez [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceView (System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.ObjectDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ObjectDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceView(System::Web::UI::WebControls::ObjectDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceView : System.Web.UI.WebControls.ObjectDataSource * string * System.Web.HttpContext -&gt; System.Web.UI.WebControls.ObjectDataSourceView" Usage="new System.Web.UI.WebControls.ObjectDataSourceView (owner, name, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.ObjectDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> auquel le <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> est associé.</param>
        <param name="name">Un nom unique pour la vue de source de données, dans la portée du contrôle de source de données qui le possède.</param>
        <param name="context"><see cref="T:System.Web.HttpContext" /> actuel.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> constructeur est appelé par le <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> méthode pour retourner une nouvelle instance d’une vue de source de données avec la valeur `viewName` paramètre. Le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle est associé à un seul <xref:System.Web.UI.WebControls.ObjectDataSourceView> à tout moment et le nomme toujours la vue `DefaultView`, bien que cette restriction d’affectation de noms est imposée par le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôler, pas le <xref:System.Web.UI.WebControls.ObjectDataSourceView>. Vous pouvez remplacer le <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> méthode pour prendre en charge les vues avec une convention d’affectation de noms différente.  
  
 Le <xref:System.Web.HttpContext> objet qui est passé par `context` est utilisé par la vue de source de données pour accéder aux objets de paramètre, tel que <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> et <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> propriétés.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> qui est associé au contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> en cours prend en charge l'opération de suppression.</summary>
        <value><see langword="true" /> si l'opération est prise en charge ; sinon, <see langword="false" />. La suppression n'est pas prise en charge si la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete%2A> retourne de la propriété `true`, si le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propriété est définie. Une opération de suppression peut encore échouer si toutes les propriétés de données ne sont pas définies ou ne sont pas définies correctement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> qui est associé au contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> en cours prend en charge l'opération d'insertion.</summary>
        <value><see langword="true" /> si l'opération est prise en charge ; sinon, <see langword="false" />. L'insertion n'est pas prise en charge si la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert%2A> retourne de la propriété `true`, si le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété est définie. Une opération d’insertion peut encore échouer si toutes les propriétés de données ne sont pas définies ou ne sont pas définies correctement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> qui est associé au contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> en cours prend en charge la pagination de données récupérées.</summary>
        <value><see langword="true" />, si <see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" /> a la valeur <see langword="true" /> ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanPage%2A> propriété indique si le <xref:System.Web.UI.WebControls.ObjectDataSourceView> objet prend en charge la pagination. Pour plus d’informations sur la façon dont la pagination est prise en charge par le <xref:System.Web.UI.WebControls.ObjectDataSourceView>, consultez <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> qui est associé au contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> en cours prend en charge la récupération du nombre total de lignes en plus du groupe de données.</summary>
        <value><see langword="true" /> si l'opération est prise en charge ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A> retourne de la propriété `true`, si le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> propriété est définie. La méthode qui retourne le nombre doit retourner le nombre total de lignes qui peuvent être averti par radiomessagerie, pas le nombre de lignes dans une page. Contrôles liés aux données utilisent le nombre total de lignes qui peuvent être averti par radiomessagerie pour déterminer comment effectuer le rendu des contrôles de pagination. Par exemple, combien boutons de pagineur numérique à afficher dans un <xref:System.Web.UI.WebControls.GridView> pagineur de contrôle. Pour plus d’informations sur la prise en charge la pagination, consultez <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A> propriété est vérifiée pendant un appel à la <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> méthode pour vous assurer que la source de données contrôle prend en charge toutes les fonctions demandées en définissant les différents <xref:System.Web.UI.DataSourceSelectArguments> propriétés.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l’objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> qui est associé au contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> actuel prend en charge une vue triée sur la source de données sous-jacente.</summary>
        <value><see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Car le <xref:System.Web.UI.WebControls.ObjectDataSource> prend uniquement en charge tri des données de contrôle lorsque la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> méthode retourne un <xref:System.Data.DataSet>, <xref:System.Data.DataView>, ou <xref:System.Data.DataTable> de l’objet, l’objet de vue ne peut pas déterminer si le tri est pris en charge jusqu'à ce que le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> méthode est appelée et retourne. Pour cette raison, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A> propriété retourne toujours `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> qui est associé au contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> en cours prend en charge l'opération de mise à jour.</summary>
        <value><see langword="true" /> si l'opération est prise en charge ; sinon, <see langword="false" />. La mise à jour n'est pas prise en charge si la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate%2A> retourne de la propriété `true`, si le <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> propriété est définie. Une opération de mise à jour peut encore échouer si toutes les propriétés de données ne sont pas définies ou ne sont pas définies correctement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui détermine comment le contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> exécute des mises à jour et des suppressions lorsque des données dans une ligne du stockage de données sous-jacent sont modifiées au cours de l'opération.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.ConflictOptions" />. La valeur par défaut est la valeur <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> propriété détermine si les paramètres pour les valeurs anciennes et nouvelles sont appliqués à la `Update` (méthode). Par exemple, si la méthode qui est spécifié par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété retourne un <xref:System.Data.DataTable> objet avec les colonnes `Name` et `Number`et le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> propriété est définie sur le <xref:System.Web.UI.ConflictOptions.OverwriteChanges> , les paramètres sont créés pour `Name` et `Number` pour le `Update` (méthode). Si le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> propriété est définie sur le <xref:System.Web.UI.ConflictOptions.CompareAllValues> , les paramètres sont créés avec les noms `Name`, `Number`, `original_Name`, et `original_Name`. (Le nom exact des paramètres pour les valeurs d’origine varie selon le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>.) Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> détermine ensuite si la méthode qui est spécifié dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> comporte des paramètres qui correspondent.  
  
 Contrôle d’accès concurrentiel est une technique de magasins de données utilisent pour contrôler la façon dont les données sont lues et modifiées dans les magasins lorsque plusieurs clients accèdent et manipulent les mêmes données. Par exemple, un client lit les données et présente à un utilisateur, tandis que d’un autre client lit les mêmes données et les présente à un autre utilisateur. Si les deux utilisateurs mettre à jour les données et les envoient au stockage des données, un résultat inattendu peut se produire, car les deux clients peuvent mettre à jour des valeurs différentes pour les mêmes données. Cela est considéré comme un conflit. En définissant le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> propriété le <xref:System.Web.UI.ConflictOptions.CompareAllValues> valeur, le `Update` méthode peut ensuite comparer les valeurs anciennes et nouvelles à la source de données d’origine pour détecter les conflits et les gérer en fonction des besoins.  
  
 La valeur de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> propriété est stockée dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée ne fait pas partie des valeurs <see cref="T:System.Web.UI.ConflictOptions" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Vue d'ensemble du contrôle ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si les valeurs <see cref="T:System.Web.UI.WebControls.Parameter" /> qui sont passées à une opération de mise à jour, d'insertion ou de suppression passe automatiquement de la valeur <see langword="null" /> à la valeur <see cref="F:System.DBNull.Value" />.</summary>
        <value><see langword="true" />, si la valeur <see langword="null" /> dans les objets <see cref="T:System.Web.UI.WebControls.Parameter" /> passés au <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> passe automatiquement à la valeur <see cref="F:System.DBNull.Value" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ne pas convertir `null` à la <xref:System.DBNull.Value?displayProperty=nameWithType> valeur peut engendrer des erreurs au moment de l’exécution. Utilisez le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull%2A> propriété pour indiquer si le <xref:System.Web.UI.WebControls.Parameter> les valeurs qui sont transmis à une mise à jour, insertion ou une opération de suppression sont automatiquement converties à partir de `null` à la <xref:System.DBNull.Value?displayProperty=nameWithType> valeur. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom d'une classe utilisée par le contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> d'un paramètre dans une opération de données. Le contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> utilise la classe spécifiée au lieu des objets <see cref="T:System.Web.UI.WebControls.Parameter" /> qui se trouvent dans les différentes collections de paramètres.</summary>
        <value>Un nom de classe complètement ou partiellement qualifié qui identifie le type de l'objet que <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> peut utiliser comme paramètre pour une opération <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />, <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> ou <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Au lieu de spécifier plusieurs paramètres qui sont passés à la `Select`, `Update`, `Insert`, et `Delete` méthodes, vous pouvez créer un objet qui regroupe plusieurs éléments. Cet objet est passé aux méthodes, au lieu de plusieurs paramètres. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Vue d'ensemble du contrôle ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> des valeurs de clés utilisées pour identifier l'élément à supprimer. Ces paramètres sont utilisés avec la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> pour exécuter l'opération de suppression. Si aucun paramètre n'est associé à la méthode, passez la valeur <see langword="null" />.</param>
        <param name="oldValues"><see cref="T:System.Collections.IDictionary" /> qui contient les valeurs supplémentaires ne correspondant pas à une clé utilisée pour correspondre à l'élément dans la source de données. Les valeurs de ligne sont passées uniquement à la méthode si la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> a pour valeur le champ <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />.</param>
        <summary>Exécute une opération de suppression en appelant la méthode de l'objet métier qui est identifiée par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> à l'aide des collections <paramref name="keys" /> et <paramref name="oldValues" /> spécifiées.</summary>
        <returns>Nombre de lignes supprimées ; sinon, -1 si le nombre n'est pas connu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur par défaut est -1, ce qui signifie qu’un nombre inconnu de lignes ont été supprimé. Pour retourner une valeur différente, définissez la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> propriété de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objet de la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> Gestionnaire d’événements. Le nombre de lignes affectées est généralement retourné par la `Delete` méthode pour l’objet métier et cette valeur est disponible à partir de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> propriété de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> paramètre de la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> Gestionnaire d’événements.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> les appels de méthode le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A> méthode, en passant le `keys` et `oldValues` collections.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'une opération <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> est terminée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> événement pour examiner les valeurs d’une valeur de retour et paramètres de sortie ou pour déterminer si une exception a été levée après une <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération est terminée. La valeur de retour, les paramètres de sortie et les propriétés de gestion des exceptions sont disponibles à partir de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objet qui est associé à l’événement.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.GridView> contrôle pour supprimer des données. Le <xref:System.Web.UI.WebControls.GridView> affiche initialement un jeu de tous les employés, à l’aide de la méthode qui est spécifiée par le <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriété pour récupérer les données à partir de la `EmployeeLogic` objet. Étant donné que le <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> propriété est définie sur `true`, le <xref:System.Web.UI.WebControls.GridView> contrôle qui affiche automatiquement une **supprimer** bouton.  
  
 Si vous cliquez sur le **supprimer** bouton, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération est effectuée à l’aide de la méthode qui est spécifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propriété et tous les paramètres qui sont spécifiés dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. Dans cet exemple de code, certaines étapes de prétraitement et de post-traitement sont également effectuées. Le `NorthwindEmployeeDeleting` délégué est appelé pour gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> événement avant la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération est effectuée et le `NorthwindEmployeeDeleted` délégué est appelé pour gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> événement après la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération est terminée, à gérer les exceptions. Dans cet exemple, si un `NorthwindDataException` est levée, elle est gérée par ce délégué.  
  
 Pour examiner l’implémentation de la `EmployeeLogic` objet métier de couche intermédiaire utilisé par cet exemple de code, consultez <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de la méthode ou de la fonction que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> appelle pour supprimer des données.</summary>
        <value>Chaîne qui représente le nom de la méthode ou de la fonction que <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> utilise pour supprimer des données. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode qui est identifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propriété peut être une méthode d’instance ou un `static` (`Shared` en Visual Basic) (méthode). Dans le cas d’une méthode d’instance, l’objet métier est créé et détruit chaque fois que la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propriété est appelée. Vous pouvez gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> événement fonctionne avec l’objet métier avant la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propriété est appelée. Vous pouvez également gérer les <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> événement est déclenché après la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propriété est appelée. Si la méthode est un `static` (`Shared` en Visual Basic) (méthode), l’objet métier n’est jamais créé et vous ne pouvez pas gérer ces événements.  
  
 Si l’objet métier qui le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle fonctionne implémente plusieurs méthodes ou une fonction portant le même nom (surcharges de méthode), le contrôle de source de données tente d’appeler celui qui convient en fonction d’un ensemble de conditions, y compris les paramètres dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. Si les paramètres dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection ne correspondent pas à ceux de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> signature de méthode, la source de données lève une exception.  
  
 La valeur de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propriété est stockée dans l’état d’affichage.  
  
 Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.GridView> contrôle pour supprimer des données. Le <xref:System.Web.UI.WebControls.GridView> affiche initialement un jeu de tous les employés, à l’aide de la méthode qui est spécifiée par le <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriété pour récupérer les données à partir de la `EmployeeLogic` objet. Étant donné que le <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> propriété est définie sur `true`, le <xref:System.Web.UI.WebControls.GridView> contrôle qui affiche automatiquement une **supprimer** bouton.  
  
 Si vous cliquez sur le **supprimer** bouton, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération est effectuée à l’aide de la méthode qui est spécifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propriété et tous les paramètres qui sont spécifiés dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. Dans cet exemple de code, certaines étapes de prétraitement et de post-traitement sont également effectuées. Le `NorthwindEmployeeDeleting` délégué est appelé pour gérer le <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> événement avant la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> opération est effectuée et le `NorthwindEmployeeDeleted` délégué est appelé pour gérer le <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> événement après la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> opération est terminée, à gérer les exceptions. Dans cet exemple, si un `NorthwindDataException` est levée, elle est gérée par ce délégué.  
  
 Pour examiner l’implémentation de la `EmployeeLogic` objet métier de couche intermédiaire utilisé par cet exemple de code, consultez <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de paramètres qui contient les paramètres utilisés par la méthode <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> qui contient les paramètres utilisés par la méthode spécifiée par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les noms et types des paramètres qui sont contenus dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection doit correspondre les noms et types des paramètres qui se trouvent dans la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> signature de propriété. Les noms de paramètres sont affectés par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> propriété et respectent la casse. Lorsque vous travaillez avec des contrôles liés aux données qui fournissent des paramètres, tels que <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView>, le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle fusionne automatiquement tous les paramètres qui sont explicitement spécifiés dans la collection avec ces paramètres sont fournis par le contrôle lié aux données.  
  
 Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant une opération <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> événement pour effectuer des opérations d’initialisation supplémentaires qui sont spécifiques à votre application, pour valider les valeurs de paramètres ou pour modifier les valeurs de paramètre avant le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle effectue le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération. Les paramètres sont disponibles en tant qu’un <xref:System.Collections.IDictionary> collection qui est accessible par le <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propriété, qui est exposée par le <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> objet.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.GridView> contrôle pour supprimer des données. Le <xref:System.Web.UI.WebControls.GridView> affiche initialement un jeu de tous les employés, à l’aide de la méthode qui est spécifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété pour récupérer les données à partir de la `EmployeeLogic` objet. Étant donné que le <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> propriété est définie sur `true`, le <xref:System.Web.UI.WebControls.GridView> contrôle qui affiche automatiquement une **supprimer** bouton.  
  
 Si vous cliquez sur le **supprimer** bouton, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération est effectuée à l’aide de la méthode qui est spécifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propriété et tous les paramètres qui sont spécifiés dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. Dans cet exemple de code, certaines étapes de prétraitement et de post-traitement sont également effectuées. Le `NorthwindEmployeeDeleting` délégué est appelé pour gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> événement avant la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération est effectuée et le `NorthwindEmployeeDeleted` délégué est appelé pour gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> événement après la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération est terminée, à gérer les exceptions. Dans cet exemple, si un `NorthwindDataException` est levée, elle est gérée par ce délégué.  
  
 Pour examiner l’implémentation de la `EmployeeLogic` objet métier de couche intermédiaire utilisé par cet exemple de code, consultez <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le contrôle de source de données prend en charge la pagination du groupe de données qu'il récupère.</summary>
        <value><see langword="true" /> si le contrôle de source de données prend en charge la pagination des données qu'il récupère ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La pagination par le <xref:System.Web.UI.WebControls.ObjectDataSourceView> contrôle est géré en définissant le <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>, et <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> propriétés de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> et en définissant un `Select` méthode dans l’objet métier avec les paramètres appropriés. Lorsque le <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> propriété est définie sur `true`, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> collection inclut deux paramètres supplémentaires pour la première ligne demandée et le nombre de lignes demandé. Ces deux paramètres sont nommés comme défini par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> et <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> propriétés. Le `Select` méthode doit retourner le nombre demandé de lignes en commençant à l’index spécifié. Étant donné que les données ne peuvent pas diviser uniformément par la taille de page, la dernière page peut contenir moins de lignes. Par conséquent, le nombre de lignes demandé est réellement le nombre maximal de lignes qui sont retournées.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A> propriété est vérifiée pendant un appel à la <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> méthode pour vous assurer que la source de données contrôle prend en charge toutes les fonctions demandées en définissant les différents <xref:System.Web.UI.DataSourceSelectArguments> propriétés.  
  
 Lorsque la pagination est activée sur le contrôle lié aux données associé, le contrôle lié aux données appelle la `Select` méthode avec l’index de début et le nombre de lignes qui sont nécessaires. En outre, si la <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> est définie, le contrôle lié aux données appelle la méthode avant de restituer les contrôles de pagination. Par exemple, si un <xref:System.Web.UI.WebControls.GridView> contrôle la pagination est activée avec une taille de page de 5 et le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> méthode retourne 20, seules les 4 pages sont affichées dans le pagineur.  
  
 La valeur de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> propriété est stockée dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> de paramètres utilisé avec la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> pour exécuter l'opération de suppression. Si aucun paramètre n'est associé à la méthode, passez la valeur <see langword="null" />.</param>
        <param name="oldValues"><see cref="T:System.Collections.IDictionary" /> qui contient les valeurs de ligne qui sont évaluées seulement si la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> a la valeur du champ <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />.</param>
        <summary>Exécute une opération de suppression à l'aide de la méthode <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> et des collections <paramref name="keys" /> et <paramref name="oldValues" /> spécifiées.</summary>
        <returns>Nombre de lignes supprimées ; sinon, -1 si le nombre n'est pas connu. Pour plus d'informations, consultez <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> classe implémente héritées <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A> méthode permet de supprimer des données à partir d’un magasin de données sous-jacent à l’aide d’un objet métier. Les développeurs de pages et les auteurs de contrôle lié aux données n’appellent pas la <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A> méthode directement ; au lieu de cela, utilisez exposés publiquement <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> (méthode).  
  
 Avant que l’opération de suppression est effectuée, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> événement. Vous pouvez gérer cet événement pour examiner les valeurs des paramètres et effectuer tout prétraitement avant la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> méthode est appelée.  
  
 Pour effectuer une opération de suppression, le <xref:System.Web.UI.WebControls.ObjectDataSourceView> utilise la réflexion pour appeler la méthode qui est identifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propriété et les paramètres associés dans le `keys` et `oldValues` collections, puis l’exécute. Une fois l’opération terminée, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> événement. Vous pouvez gérer cet événement pour examiner les valeurs de retour et les codes d’erreur et effectuer tout traitement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" /> retourne la valeur <see langword="false" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> a la valeur <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />, et aucune valeur n'est passée dans la collection <paramref name="oldValues" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values"><see cref="T:System.Collections.IDictionary" /> de paramètres utilisé avec la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> pour exécuter l'opération d'insertion. Si aucun paramètre n'est associé à la méthode, passez la valeur <see langword="null" />.</param>
        <summary>Exécute une opération d'insertion en appelant la méthode de l'objet métier qui est identifiée par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> à l'aide de la collection <paramref name="values" /> spécifiée.</summary>
        <returns>Nombre de lignes insérées ; sinon, -1 si le nombre n'est pas connu. Pour plus d'informations, consultez <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> classe implémente héritées <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A> méthode pour insérer des données dans un magasin de données sous-jacent à l’aide d’un objet métier. Les développeurs de pages et les auteurs de contrôle lié aux données n’appellent pas la <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A> méthode directement ; au lieu de cela, utilisez exposés publiquement <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> (méthode).  
  
 Avant l’insertion est effectuée, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> événement. Vous pouvez gérer cet événement pour examiner les valeurs des paramètres et effectuer tout prétraitement avant la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> méthode est appelée.  
  
 Pour effectuer une opération d’insertion, le <xref:System.Web.UI.WebControls.ObjectDataSourceView> contrôle utilise la réflexion pour appeler la méthode qui est identifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété et les paramètres associés qui sont dans le `values` collection, puis l’exécute. Une fois l’opération terminée, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted> événement. Vous pouvez gérer cet événement pour examiner les valeurs de retour, des codes d’erreur et effectuer tout traitement.  
  
 Pour plus d’informations sur le retour du nombre de lignes insérées, consultez <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> retourne la valeur <see langword="false" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="values" /> a la valeur <see langword="null" /> ou est vide.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="objectDataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments"><see cref="T:System.Web.UI.DataSourceSelectArguments" /> utilisé pour demander des opérations sur les données, autres que la récupération des données de base.</param>
        <summary>Récupère des données de l'objet qui est identifié par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> en appelant la méthode qui est identifiée par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> et en passant toutes valeurs dans la collection <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />.</summary>
        <returns>Liste <see cref="T:System.Collections.IEnumerable" /> de lignes de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> classe implémente héritées <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> méthode pour récupérer des données à l’aide d’un objet métier. Les développeurs de pages et les auteurs de contrôle lié aux données n’appellent pas la <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> méthode directement ; au lieu de cela, utilisez exposés publiquement <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> (méthode).  
  
 La méthode spécifiée peut avoir n’importe quelle signature de méthode, mais doit retourner l’un des types pour la <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle qui sont répertoriées dans le tableau suivant pour pouvoir l’appeler.  
  
|Type de retour|Action|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|Le <xref:System.Collections.IEnumerable> est retourné par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> (méthode).|  
|<xref:System.Data.DataTable>|Un <xref:System.Data.DataView> est créé à l’aide de la <xref:System.Data.DataTable> et retournée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> (méthode).|  
|<xref:System.Data.DataSet>|La première <xref:System.Data.DataTable> de la <xref:System.Data.DataSet> est extrait et un <xref:System.Data.DataView> est créée et retournée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> (méthode).|  
|<xref:System.Object>|L’objet est encapsulé dans un seul élément <xref:System.Collections.IEnumerable> et retournée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> (méthode).|  
  
 Avant la récupération de données est effectuée, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> événement. Vous pouvez gérer cet événement pour examiner les valeurs des paramètres et effectuer tout prétraitement avant une opération.  
  
 Pour effectuer une opération de sélection, le <xref:System.Web.UI.WebControls.ObjectDataSourceView> contrôle utilise la réflexion pour appeler la méthode qui est identifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété et les paramètres associés qui sont dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> collection, puis l’exécute. Une fois l’opération terminée, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected> événement. Vous pouvez gérer cet événement pour examiner les valeurs de retour et les codes d’erreur et effectuer tout traitement.  
  
 Si le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> méthode retourne un <xref:System.Data.DataSet> objet et la mise en cache est activée, le <xref:System.Web.UI.WebControls.ObjectDataSourceView> récupère les données et enregistre les données dans le cache pendant l’opération. Le cache est créé, ignoré ou actualisé en fonction du comportement de mise en cache qui est spécifié par la combinaison de la <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> et <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> propriétés.  
  
 Si le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> méthode retourne un <xref:System.Data.DataSet> objet et un <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> propriété a été spécifiée, elle est évaluée ainsi que tout fourni <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> propriétés et le filtre obtenu est appliqué à la liste des données pendant la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> opération.  
  
 Pour plus d’informations sur le retour du nombre de lignes sélectionnées, consultez <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Les <paramref name="arguments" /> passés à la méthode <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> spécifient que la source de données doit exécuter des tâches supplémentaires lors de la récupération des données pour activer la pagination ou trier les données récupérées, mais le contrôle de source de données ne prend pas en charge la fonction demandée.  
  
ou 
L'objet retourné par la méthode <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> n'est pas <see cref="T:System.Data.DataSet" /> ou <see cref="T:System.Data.DataTable" />, et la mise en cache est activée. Seuls les objets <see cref="T:System.Data.DataSet" /> et <see cref="T:System.Data.DataTable" /> peuvent être mis en cache pour le contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />.  
  
ou 
La mise en cache et l'emprunt d'identité client sont activés tous les deux. <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> ne prend pas en charge la mise en cache lorsque l'emprunt d'identité du client est activé.</exception>
        <exception cref="T:System.InvalidOperationException">L'objet retourné par la méthode <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> est un <see cref="T:System.Data.DataSet" />, mais il n'a pas de table dans sa collection <see cref="P:System.Data.DataSet.Tables" />.  
  
- ou - 
La propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" /> a la valeur <see langword="true" />, mais les propriétés <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" /> et <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" /> ne sont pas définies.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> de clés primaires à utiliser avec la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> pour exécuter l'opération de mise à jour de la base de données. Si aucune clé n'est associée à la méthode, passez la valeur <see langword="null" />.</param>
        <param name="values">Un <see cref="T:System.Collections.IDictionary" /> de valeurs à utiliser avec <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> pour exécuter l'opération de mise à jour de base de données. Si aucun paramètre n'est associé à la méthode, passez la valeur <see langword="null" />.</param>
        <param name="oldValues">Un <see cref="T:System.Collections.IDictionary" /> qui représente les valeurs d'origine dans le magasin de données sous-jacent. Si aucun paramètre n'est associé à la requête, passez la valeur <see langword="null" />.</param>
        <summary>Exécute une opération de mise à jour en appelant la méthode qui est identifiée par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> et à l'aide des paramètres fournis dans les collections <paramref name="keys" />, <paramref name="values" /> ou <paramref name="oldValues" />.</summary>
        <returns>Nombre de lignes mises à jour ; sinon, -1 si le nombre n'est pas connu. Pour plus d'informations, consultez <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> classe implémente héritées <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A> méthode pour mettre à jour des données à l’aide d’un objet métier. Les développeurs de pages et les auteurs de contrôle lié aux données n’appellent pas la <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A> méthode directement ; au lieu de cela, utilisez exposés publiquement <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> (méthode).  
  
 Les valeurs qui sont contenus dans le `keys` et `values` collections sont évaluées et fusionnées avec toutes les valeurs qui sont contenues par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection. Si le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> propriété est définie sur le <xref:System.Web.UI.ConflictOptions.CompareAllValues> , les valeurs qui sont contenus dans le `oldValues` collection formatés avec le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> propriété et sont également fusionnés.  
  
 Avant l’opération de mise à jour est effectuée, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> événement. Vous pouvez gérer cet événement pour examiner les valeurs des paramètres et effectuer tout prétraitement avant une mise à jour. Pour effectuer une opération de mise à jour, le <xref:System.Web.UI.WebControls.ObjectDataSourceView> utilise la réflexion pour appeler la méthode qui est identifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> propriété et les paramètres associés dans le `keys` collection, puis l’exécute. Une fois l’opération terminée, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> méthode est appelée pour déclencher le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated> événement. Vous pouvez gérer cet événement pour examiner les valeurs de retour, des codes d’erreur et effectuer tout traitement.  
  
 Pour plus d’informations sur le retour du nombre de lignes mises à jour, consultez <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> retourne la valeur <see langword="false" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="oldValues" /> est <see langword="null" /> ou vide et <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> a la valeur <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une expression de filtrage qui est appliquée lorsque la méthode de l'objet métier qui est identifiée par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> est appelée.</summary>
        <value>Une chaîne qui représente une expression de filtrage est appliquée lorsque les données sont récupérées à l'aide de la méthode de l'objet métier identifiée par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle prend en charge le filtrage des données uniquement lorsque le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> méthode retourne un <xref:System.Data.DataSet>, <xref:System.Data.DataView>, ou <xref:System.Data.DataTable> objet.  
  
 La syntaxe qui est utilisée pour le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriété est une expression de style de la chaîne de format. La syntaxe d’expression de filtre est la même syntaxe qui est acceptée par le <xref:System.Data.DataView.RowFilter%2A> propriété, car l’expression de filtre est appliquée à la <xref:System.Data.DataView.RowFilter%2A> propriété de la <xref:System.Data.DataView> objet qui est retourné à partir de l’exécution de la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> (méthode). (Pour plus d'informations, consultez <xref:System.Data.DataColumn.Expression%2A>.) Si vous ajoutez des paramètres à la <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection, vous pouvez également inclure des espaces réservés de chaîne de format, par exemple `"{0}"`, dans l’expression à substituer aux valeurs de paramètre. Les espaces réservés sont remplacés selon l’index du paramètre dans le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection.  
  
 Vous pouvez inclure des paramètres dans le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>. Si le type du paramètre est un type chaîne ou un caractère, placez le paramètre entre guillemets simples. Guillemets ne sont pas nécessaires si le paramètre est un type numérique. Le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection contient les paramètres qui sont évalués pour les espaces réservés dans le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.  
  
 La valeur de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> propriété est stockée dans l’état d’affichage.  
  
> [!IMPORTANT]
>  Il est recommandé de valider toute valeur de paramètre de filtre que vous recevez à partir du client. Le runtime substitue simplement la valeur du paramètre dans l’expression de filtre et s’applique à la <xref:System.Data.DataView> objet qui est retourné par la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> (méthode). Si vous utilisez le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriété en tant que mesure de sécurité pour limiter le nombre d’éléments qui sont retournés, vous devez valider les valeurs de paramètre avant le filtrage.  
  
   
  
## Examples  
 Cette section contient deux exemples de code. Le premier exemple de code montre comment afficher les données filtrées à l’aide un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle à récupérer des données à partir d’un objet métier de couche intermédiaire et un <xref:System.Web.UI.WebControls.GridView> contrôle pour afficher les résultats. Le deuxième exemple de code fournit un exemple de l’objet métier de couche intermédiaire qui est utilisé dans le premier exemple de code.  
  
 L’exemple de code suivant montre comment afficher les données filtrées à l’aide un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle à récupérer des données à partir d’un objet métier de couche intermédiaire et un <xref:System.Web.UI.WebControls.GridView> contrôle pour afficher les résultats. Le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle peut filtrer les données uniquement lorsque la méthode qui Récupère les données récupère comme un <xref:System.Data.DataSet> objet. Pour cette raison, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété identifie une méthode d’objet métier qui Récupère des données comme un <xref:System.Data.DataSet>.  
  
 L’exemple de code se compose d’un <xref:System.Web.UI.WebControls.TextBox>, un <xref:System.Web.UI.WebControls.GridView> contrôle, le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle et un **envoyer** bouton. Par défaut, le <xref:System.Web.UI.WebControls.TextBox> est rempli avec le nom d’un des employés Northwind Traders. Le <xref:System.Web.UI.WebControls.GridView> affiche des informations sur l’employé qui est identifié par le nom dans la <xref:System.Web.UI.WebControls.TextBox>. Pour récupérer des données sur un autre employé, dans le <xref:System.Web.UI.WebControls.TextBox>, entrez le nom complet de l’employé, puis cliquez sur le **envoyer** bouton.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> propriété spécifie une expression qui est utilisée pour filtrer les données récupérées par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété. Il utilise des espaces réservés de paramètre qui sont comparés aux paramètres qui sont contenus dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> collection. Dans cet exemple, l’espace réservé de paramètre est limité par des guillemets simples, car le type du paramètre est un type de chaîne qui peut contenir des espaces. Si le type du paramètre est un type numérique ou date, utilisation de guillemets ne sont pas requis.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 L’exemple de code suivant fournit un exemple d’un objet métier de couche intermédiaire qui utilise l’exemple de code précédent. L’exemple de code se compose de deux classes de base :  
  
-   Le `EmployeeLogic` (classe), qui est une classe qui encapsule la logique métier.  
  
-   Le `NorthwindEmployee` (classe), qui est une classe de modèle qui contient uniquement les fonctionnalités de base qui sont requis pour charger et rendre persistantes des données à partir de la couche données.  
  
 Par souci de simplicité, le `EmployeeLogic` classe crée un ensemble statique de données, au lieu de récupérer les données d’une couche de données. Il est également utile pour cet exemple, étant donné que l’exemple s’appuie sur vous pour fournir le nom complet d’un employé de Northwind Traders pour illustrer le filtrage.  
  
 Pour obtenir un exemple complet, vous devez compiler et utiliser ces classes avec les exemples de code de page Web Forms qui sont fournis.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> a été définie et la méthode <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> ne retourne pas de <see cref="T:System.Data.DataSet" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant une opération de filtre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> événement pour effectuer des opérations de validation sur les valeurs de paramètre de filtre avant du <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle effectue une opération de filtre. Vous pouvez annuler la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> opération en définissant le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété de la <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> objet `true`. L’événement est déclenché uniquement si le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriété est définie.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
> [!IMPORTANT]
>  Vous devez valider toute valeur de paramètre de filtre que vous recevez à partir du client. Le runtime substitue simplement la valeur du paramètre dans l’expression de filtre et s’applique à la <xref:System.Data.DataView> objet qui est retourné par la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> (méthode). Si vous utilisez le <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriété en tant que mesure de sécurité pour limiter le nombre d’éléments qui sont retournés, vous devez valider les valeurs de paramètre avant le filtrage.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de paramètres qui sont associés aux espaces réservés des paramètres dans la chaîne <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> qui contient un jeu de paramètres associé à n'importe quel espace réservé de paramètre trouvé dans la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle prend en charge le filtrage des données uniquement lorsque le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> méthode retourne un <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, ou <xref:System.Data.DataView> objet.  
  
 Les paramètres dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> collection sont associés à tous les paramètres qui sont spécifiés dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> propriété. Les espaces réservés de paramètre qui sont spécifiés dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> propriété correspondent aux objets de paramètre dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> collection lorsque la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété est appelée.  
  
   
  
## Examples  
 Cette section contient deux exemples de code. Le premier exemple de code montre comment afficher les données filtrées à l’aide un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle à récupérer des données à partir d’un objet métier de couche intermédiaire et un <xref:System.Web.UI.WebControls.GridView> contrôle pour afficher les résultats. Le deuxième exemple de code fournit un exemple de l’objet métier de couche intermédiaire qui est utilisé dans le premier exemple de code.  
  
 L’exemple de code suivant montre comment afficher les données filtrées à l’aide un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle à récupérer des données à partir d’un objet métier de couche intermédiaire et un <xref:System.Web.UI.WebControls.GridView> contrôle pour afficher les résultats. Le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle peut filtrer les données uniquement lorsque la méthode qui Récupère les données récupère comme un <xref:System.Data.DataSet> objet. Pour cette raison, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété identifie une méthode d’objet métier qui Récupère des données comme un <xref:System.Data.DataSet>.  
  
 L’exemple de code se compose d’un <xref:System.Web.UI.WebControls.TextBox>, un <xref:System.Web.UI.WebControls.GridView> contrôle, le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle et un **envoyer** bouton. Par défaut, le <xref:System.Web.UI.WebControls.TextBox> est rempli avec le nom d’un des employés Northwind Traders. Le <xref:System.Web.UI.WebControls.GridView> affiche des informations sur l’employé qui est identifié par le nom dans la <xref:System.Web.UI.WebControls.TextBox>. Pour récupérer des données sur un autre employé, dans le <xref:System.Web.UI.WebControls.TextBox>, entrez le nom complet de l’employé, puis cliquez sur le **envoyer** bouton.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> propriété spécifie une expression qui est utilisée pour filtrer les données récupérées par la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété. Il utilise des espaces réservés de paramètre qui sont comparés aux paramètres qui sont contenus dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> collection. Dans cet exemple, l’espace réservé de paramètre est limité par des guillemets simples, car le type du paramètre est un type de chaîne qui peut contenir des espaces. Si le type du paramètre est un type numérique ou date, utilisation de guillemets ne sont pas requis. Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> collection contient un seul paramètre, un <xref:System.Web.UI.WebControls.FormParameter> qui est lié à la <xref:System.Web.UI.WebControls.TextBox> contrôle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 L’exemple de code suivant fournit un exemple d’un objet métier de couche intermédiaire qui utilise l’exemple de code précédent. L’exemple de code se compose de deux classes de base :  
  
-   Le `EmployeeLogic` (classe), qui est une classe qui encapsule la logique métier.  
  
-   Le `NorthwindEmployee` (classe), qui est une classe de modèle qui contient uniquement les fonctionnalités de base qui sont requis pour charger et rendre persistantes des données à partir de la couche données.  
  
 Par souci de simplicité, le `EmployeeLogic` classe crée un ensemble statique de données, au lieu de récupérer les données d’une couche de données. Il est également utile pour cet exemple, étant donné que l’exemple s’appuie sur vous pour fournir le nom complet d’un employé de Northwind Traders pour illustrer le filtrage.  
  
 Pour obtenir un exemple complet, vous devez compiler et utiliser ces classes avec les exemples de code de page Web Forms qui sont fournis.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> a été définie et la méthode <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> ne retourne pas de <see cref="T:System.Data.DataSet" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.Insert : System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">Collection <see cref="T:System.Collections.IDictionary" /> de paramètres utilisée avec la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> pour exécuter l'opération d'insertion. Si aucun paramètre n'est associé à la méthode, passez la valeur <see langword="null" />.</param>
        <summary>Exécute une opération d'insertion en appelant la méthode de l'objet métier qui est identifiée par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> à l'aide de la collection <paramref name="values" /> spécifiée.</summary>
        <returns>Nombre de lignes insérées ; sinon, -1 si le nombre n'est pas connu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de retour par défaut est -1, ce qui signifie qu’un nombre inconnu de lignes a été inséré. Pour retourner une valeur différente, définissez la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> propriété de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objet de la <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> événement. Le nombre de lignes affectées est généralement retourné par la `Insert` méthode pour l’objet métier et cette valeur est disponible à partir de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> propriété de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objet de la <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> événement.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> les appels de méthode le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A> méthode, en passant le `values` collection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> retourne la valeur <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'une opération <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" /> est terminée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted> événement pour examiner les valeurs d’une valeur de retour et paramètres de sortie ou pour déterminer si une exception a été levée après une <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> opération est terminée. La valeur de retour, les paramètres de sortie et les propriétés de gestion des exceptions sont disponibles à partir de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objet qui est associé à l’événement.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant une opération <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> événement pour effectuer des opérations d’initialisation supplémentaires qui sont spécifiques à votre application, pour valider les valeurs de paramètres ou pour modifier les valeurs de paramètre avant le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle effectue le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> opération. Les paramètres sont disponibles en tant qu’un <xref:System.Collections.IDictionary> collection qui est accessible par le <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propriété, qui est exposée par le <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> objet.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Cette section contient deux exemples de code. Le premier exemple de code montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour insérer des données. Le deuxième exemple de code fournit un exemple de l’objet métier de couche intermédiaire qui est utilisé dans le premier exemple de code.  
  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour insérer des données. Le <xref:System.Web.UI.WebControls.DetailsView> affiche initialement un nouvel `NorthwindEmployee` enregistrements, ainsi que de généré automatiquement **insérer** bouton. Une fois que vous entrez des données dans les champs de la <xref:System.Web.UI.WebControls.DetailsView> contrôler, cliquez sur le **insérer** bouton. Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété identifie la méthode qui exécute la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> opération.  
  
 Dans cet exemple de code, le `UpdateEmployeeInfo` méthode est utilisée pour effectuer une insertion ; toutefois il requiert un `NorthwindEmployee` paramètre pour insérer les données. Pour cette raison, la collection de chaînes qui le <xref:System.Web.UI.WebControls.DetailsView> contrôle passe automatiquement n’est pas suffisant. Le `NorthwindEmployeeInserting` délégué est un <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> objet qui gère la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> événements et vous permet de manipuler les paramètres d’entrée avant la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> revenu de l’opération. Étant donné que le `UpdateEmployeeInfo` méthode requiert un `NorthwindEmployee` de l’objet en tant que paramètre, un est créé à l’aide de la collection de chaînes et puis ajouté à la <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection à l’aide d’un nom de paramètre (`ne`) que la méthode attend. Vous pouvez exécuter des étapes comme celles-ci lors de l’utilisation d’un objet de couche intermédiaire existant comme source de données avec les types et méthodes qui ne sont pas conçus spécifiquement pour une utilisation avec le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle.  
  
 Lorsque le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> opération est effectuée, la méthode qui est identifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété est appelée. Si le `Insert` méthode de l’objet a une signature de méthode qui inclut des paramètres, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection doit contenir un paramètre avec des noms qui correspondent aux paramètres de la signature de méthode pour le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> méthode se termine avec succès.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 L’exemple de code suivant fournit un exemple d’un objet métier de couche intermédiaire qui utilise l’exemple de code précédent. L’exemple de code se compose de deux classes de base :  
  
-   Le `EmployeeLogic` (classe), qui est une classe sans état qui encapsule la logique métier.  
  
-   Le `NorthwindEmployee` (classe), qui est une classe de modèle qui contient uniquement les fonctionnalités de base qui sont requis pour charger et rendre persistantes des données à partir de la couche données.  
  
 Un autre `NorthwindDataException` classe est fournie pour des raisons pratiques.  
  
 Pour obtenir un exemple complet, vous devez compiler et utiliser ces classes. Le `UpdateEmployeeInfo` méthode n’est pas complètement implémentée, afin de vous ne serez pas insérer des données dans la base de données Northwind Traders, lorsque vous testez cet exemple.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de la méthode ou de la fonction que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> appelle pour insérer des données.</summary>
        <value>Chaîne qui représente le nom de la méthode ou de la fonction que <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> utilise pour insérer des données. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode qui est identifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété peut être une méthode d’instance ou un `static` (`Shared` en Visual Basic) (méthode). Dans le cas d’une méthode d’instance, l’objet métier est créé et détruit chaque fois que la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété est appelée. Vous pouvez gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> événement fonctionne avec l’objet métier avant la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété est appelée. Vous pouvez également gérer les <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> événement est déclenché après la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété est appelée. (`Dispose` est appelé uniquement si l’objet métier implémente le <xref:System.IDisposable> interface.) Si la méthode est un `static` (`Shared` en Visual Basic) (méthode), l’objet métier n’est jamais créé et vous ne pouvez pas gérer ces événements.  
  
 Si l’objet métier qui le <xref:System.Web.UI.WebControls.ObjectDataSource> objet implémente plus d’une méthode ou une fonction portant le même nom (surcharges de méthode), le contrôle de source de données tente d’appeler celui qui convient en fonction d’un ensemble de conditions, notamment les paramètres de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection. Si les paramètres dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection ne correspondent pas à ceux de la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> signature de propriété, la source de données lève une exception.  
  
 La valeur de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété est stockée dans l’état d’affichage.  
  
 Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
   
  
## Examples  
 Cette section contient deux exemples de code. Le premier exemple de code montre comment afficher les données filtrées à l’aide un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour insérer des données. Le deuxième exemple de code fournit un exemple de l’objet métier de couche intermédiaire qui est utilisé dans le premier exemple de code.  
  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour insérer des données. Le <xref:System.Web.UI.WebControls.DetailsView> affiche initialement un nouvel `NorthwindEmployee` enregistrements, ainsi que de généré automatiquement **insérer** bouton. Une fois que vous entrez des données dans les champs de la <xref:System.Web.UI.WebControls.DetailsView> contrôler, cliquez sur le **insérer** bouton. Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété identifie la méthode qui exécute la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> opération.  
  
 Dans cet exemple de code, le `UpdateEmployeeInfo` méthode est utilisée pour effectuer une insertion ; Toutefois, il requiert un `NorthwindEmployee` paramètre pour insérer les données. Pour cette raison, la collection de chaînes qui le <xref:System.Web.UI.WebControls.DetailsView> contrôle passe automatiquement n’est pas suffisant. Le `NorthwindEmployeeInserting` délégué est un <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> objet qui gère la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> événements et vous permet de manipuler les paramètres d’entrée avant la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> revenu de l’opération. Étant donné que le `UpdateEmployeeInfo` méthode requiert un `NorthwindEmployee` lors de l’objet en tant que paramètre, un est créé à l’aide de la collection de chaînes et est ajouté à la <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection à l’aide d’un nom de paramètre (`ne`) que la méthode attend. Vous pouvez exécuter des étapes comme celles-ci lors de l’utilisation d’un objet de couche intermédiaire existant comme source de données avec les types et méthodes qui ne sont pas conçus spécifiquement pour une utilisation avec le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle.  
  
 Lorsque le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> opération est effectuée, la méthode qui est identifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété est appelée. Si le `Insert` méthode de l’objet a une signature de méthode qui inclut des paramètres, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection doit contenir un paramètre avec des noms qui correspondent aux paramètres de la signature de méthode pour le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> méthode se termine avec succès.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 L’exemple de code suivant fournit un exemple d’un objet métier de couche intermédiaire qui utilise l’exemple de code précédent. L’exemple de code se compose de deux classes de base et une classe supplémentaire :  
  
-   Le `EmployeeLogic` classe est une classe sans état qui encapsule la logique métier.  
  
-   Le `NorthwindEmployee` classe est une classe de modèle qui contient uniquement les fonctionnalités de base qui sont requis pour charger et rendre persistantes des données à partir de la couche données.  
  
-   Un autre `NorthwindDataException` classe est fournie pour des raisons pratiques.  
  
 Pour obtenir un exemple complet, vous devez compiler et utiliser ces classes. Le `UpdateEmployeeInfo` méthode n’est pas complètement implémentée, donc vous ne serez pas insérer des données dans la base de données Northwind Traders, lorsque vous testez cet exemple de code.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de paramètres qui contient les paramètres utilisés par la méthode <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> qui contient les paramètres utilisés par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les noms et types des paramètres qui sont contenus dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection doit correspondre les noms et types des paramètres qui se trouvent dans la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> signature de propriété. Lorsque vous travaillez avec des contrôles liés aux données qui fournissent des paramètres, tels que <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView>, le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle fusionne automatiquement tous les paramètres qui sont explicitement spécifiés dans la collection avec ces paramètres sont fournis par le contrôle lié aux données. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
   
  
## Examples  
 Cette section contient deux exemples de code. Le premier exemple de code montre comment afficher les données filtrées à l’aide un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour insérer des données. Le deuxième exemple de code fournit un exemple d’implémentation de la `Insert` méthode qui est utilisée dans le premier exemple de code.  
  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.DetailsView> contrôle pour insérer des données. Le <xref:System.Web.UI.WebControls.DetailsView> affiche initialement un nouvel `NorthwindEmployee` enregistrements, ainsi que de généré automatiquement **insérer** bouton. Une fois que vous entrez des données dans les champs de la <xref:System.Web.UI.WebControls.DetailsView> contrôler, cliquez sur le **insérer** bouton. Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété identifie la méthode qui exécute la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> opération.  
  
 Si vous cliquez sur le **insérer** bouton, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> opération est effectuée à l’aide de la méthode qui est spécifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété et tous les paramètres qui sont spécifiés dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection. Dans cet exemple de code, un seul paramètre est spécifié dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection qui correspond à l’ID. du superviseur Effet, même si l’ID est affiché dans le <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> collection pour le <xref:System.Web.UI.WebControls.DetailsView> contrôler en tant qu’un <xref:System.Web.UI.WebControls.BoundField> de l’objet, il sera passé sous forme de chaîne à la <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle. En l’ajoutant explicitement à la <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection avec un <xref:System.Web.UI.WebControls.Parameter.Type%2A> propriété est définie sur le <xref:System.TypeCode.Int32> valeur, il sera passé correctement par le <xref:System.Web.UI.WebControls.ObjectDataSource> à la méthode comme un `int`, pas en tant que `string`.  
  
 Lorsque le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> opération est effectuée, la méthode qui est identifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriété est appelée. Si le `Insert` méthode de l’objet a une signature de méthode qui inclut des paramètres, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection doit contenir un paramètre avec des noms qui correspondent aux paramètres de la signature de méthode pour le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> se termine correctement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 L’exemple de code suivant fournit un exemple d’implémentation de la `Insert` méthode qui utilise l’exemple de code précédent. Le `InsertNewEmployeeWrapper` méthode est ajoutée à la `EmployeeLogic` objet de couche intermédiaire afin de permettre l’objet travailler plus facilement avec la <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle dans les scénarios Web, sans réécriture substantielle dans la logique métier réelle.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> enregistre les modifications apportées à son état d'affichage.</summary>
        <value><see langword="true" /> si la vue de source de données est marquée pour enregistrer son état ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="objectDataSourceView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Objet représentant l'état <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> à restaurer.</param>
        <summary>Restaure l'état d'affichage enregistré précédemment pour la vue de source de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est principalement utilisée par l’infrastructure .NET Framework et n’est pas destinée à être utilisée directement depuis votre code.  Toutefois, les développeurs de contrôles peuvent substituer cette méthode pour spécifier comment un contrôle serveur personnalisé restaure son état d’affichage. Pour plus d’informations, consultez [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A> méthode restaure les informations d’état d’affichage pour le <xref:System.Web.UI.WebControls.ObjectDataSourceView> objet à partir d’une demande de page antérieure enregistrée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du paramètre de méthode de récupération de données qui est utilisé pour indiquer le nombre d'enregistrements à récupérer pour la prise en charge de la pagination de la source de données.</summary>
        <value>Nom du paramètre de méthode utilisé pour indiquer le nombre d'enregistrements à récupérer. La valeur par défaut est <c>« maximumRows »</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> propriété est utilisée pour prendre en charge la pagination de source de données. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.  
  
 La valeur de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> propriété est stockée dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit après que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> a créé une instance du type qui est identifié par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> événement pour appeler d’autres méthodes sur l’objet métier, définir des propriétés, ou pour exécuter une autre initialisation spécifique à l’objet métier avant le <xref:System.Web.UI.WebControls.ObjectDataSource> appels de contrôle le `Data` méthodes pour l’objet métier. Une référence à l’objet est accessible par le <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> propriété, qui est exposée par le <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> objet.  
  
 Si la méthode identifiée pour exécuter l’opération de données est `static` (`Shared` en Visual Basic), la <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> et <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> ne sont jamais déclenchés.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> crée une instance du type qui est identifié par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle appelle automatiquement le constructeur par défaut d’un objet métier pour créer et d’une instance à l’aide de la réflexion. Gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> événement pour appeler explicitement un autre constructeur et définir l’instance de l’objet qui résulte de la <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> propriété associé <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> objet.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 Si la méthode identifiée pour exécuter l’opération de données est `static` (`Shared` en Visual Basic), la <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> et <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> ne sont jamais déclenchés.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> ignore une instance d'un objet qu'il a créé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> événement est déclenché avant que l’instance de l’objet métier est ignorée. Si l’objet métier implémente le <xref:System.IDisposable> interface, le <xref:System.IDisposable.Dispose%2A> méthode est appelée après la <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> événement est déclenché.  
  
 Gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> événement pour appeler d’autres méthodes sur l’objet et définir les propriétés ou pour exécuter un nettoyage spécifique à l’objet avant que l’objet est détruit. Une référence à l’objet est accessible par le <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> propriété, qui est exposée par le <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> objet.  
  
 Si la méthode identifiée pour exécuter l’opération de données est `static` (`Shared` en Visual Basic), la <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> événement n’est jamais déclenché.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne de format à appliquer aux noms des paramètres des valeurs d'origine qui sont passées aux méthodes <see langword="Delete" /> ou <see langword="Update" />.</summary>
        <value>Une chaîne qui représente une chaîne de mise en forme appliquée aux noms de tout <paramref name="oldValues" /> passé à la méthode <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> ou <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />. La valeur par défaut est «{0}», ce qui signifie que le nom du paramètre est simplement le nom du champ.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> chaîne de format est appliquée aux clés primaires uniquement, tels que ceux qui sont identifiés par le `DataKeyNames` propriété d’un contrôle lié aux données ou dans la section supprimer et mettre à jour de scénarios, où le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> propriété est définie sur la <xref:System.Web.UI.ConflictOptions.CompareAllValues> valeur et l’ensemble des valeurs d’origine qui sont passés à la méthode de données correspondante.  
  
 Deux scénarios courants où vous pouvez modifier le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> propriété sont les suivantes :  
  
-   Faire la distinction entre les valeurs anciennes et nouvelles dans les mises à jour. Lorsque le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> propriété est définie sur le <xref:System.Web.UI.ConflictOptions.CompareAllValues> paramètres de valeur, les valeurs d’origine et nouvelles sont ajoutés à la <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection. Sans la chaîne mise en forme, deux paramètres portant le même nom seraient créés pour chaque champ de données. En modifiant le nom du paramètre de valeur d’origine, vous pouvez comparer les données à la source de données d’origine pour détecter des conflits et comparer des valeurs de clé.  
  
-   Certains concepteurs visuels implémentent un schéma d’affectation de noms particulier pour les clés et les valeurs d’origine.  
  
 La valeur de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> est stocké dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnDeleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" /> après que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> a complété une opération de suppression.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.GridView> contrôle pour supprimer des données. Le <xref:System.Web.UI.WebControls.GridView> affiche initialement un jeu de tous les employés, à l’aide de la méthode qui est spécifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété pour récupérer les données à partir de la `EmployeeLogic` objet. Étant donné que le <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> propriété est définie sur `true`, le <xref:System.Web.UI.WebControls.GridView> contrôle qui affiche automatiquement une **supprimer** bouton.  
  
 Si vous cliquez sur le **supprimer** bouton, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération est effectuée à l’aide de la méthode qui est spécifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propriété et tous les paramètres qui sont spécifiés dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. Dans cet exemple de code, certaines étapes de prétraitement et de post-traitement sont également effectuées. Le `NorthwindEmployeeDeleting` délégué est appelé pour gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> événement avant la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération est effectuée et le `NorthwindEmployeeDeleted` délégué est appelé pour gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> événement après la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération est terminée, à gérer les exceptions. Dans cet exemple, si un `NorthwindDataException` est levée, elle est gérée par ce délégué.  
  
 Pour examiner l’implémentation de la `EmployeeLogic` objet métier de couche intermédiaire utilisé par cet exemple de code, consultez <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit&#xA;override this.OnDeleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit" Usage="objectDataSourceView.OnDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" /> avant que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> ne tente une opération de suppression.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle avec un objet métier et un <xref:System.Web.UI.WebControls.GridView> contrôle pour supprimer des données. Le <xref:System.Web.UI.WebControls.GridView> affiche initialement un jeu de tous les employés, à l’aide de la méthode qui est spécifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété pour récupérer les données à partir de la `EmployeeLogic` objet. Étant donné que le <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> propriété est définie sur `true`, le <xref:System.Web.UI.WebControls.GridView> contrôle qui affiche automatiquement une **supprimer** bouton.  
  
 Si vous cliquez sur le **supprimer** bouton, le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération est effectuée à l’aide de la méthode qui est spécifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propriété et tous les paramètres qui sont spécifiés dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. Dans cet exemple de code, certaines étapes de prétraitement et de post-traitement sont également effectuées. Le `NorthwindEmployeeDeleting` délégué est appelé pour gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> événement avant la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération est effectuée et le `NorthwindEmployeeDeleted` délégué est appelé pour gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> événement après la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> opération est terminée, à gérer les exceptions. Dans cet exemple, si un `NorthwindDataException` est levée, elle est gérée par ce délégué.  
  
 Pour examiner l’implémentation de la `EmployeeLogic` objet métier de couche intermédiaire utilisé par cet exemple de code, consultez <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As ObjectDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::ObjectDataSourceFilteringEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFiltering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs -&gt; unit&#xA;override this.OnFiltering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs -&gt; unit" Usage="objectDataSourceView.OnFiltering e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" /> avant que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> ne tente une opération de filtrage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnInserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" /> après que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> a complété une opération d'insertion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit&#xA;override this.OnInserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit" Usage="objectDataSourceView.OnInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" /> avant que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> ne tente une opération d'insertion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> méthode est appelée uniquement si la méthode identifiée pour exécuter l’opération de données n’est pas `static` (`Shared` en Visual Basic).  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectCreated (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectCreated(class System.Web.UI.WebControls.ObjectDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectCreated (e As ObjectDataSourceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectCreated(System::Web::UI::WebControls::ObjectDataSourceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectCreated : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit&#xA;override this.OnObjectCreated : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit" Usage="objectDataSourceView.OnObjectCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" /> après que <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> a créé une instance de l'objet identifié par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> méthode est appelée uniquement si la méthode identifiée pour exécuter l’opération de données n’est pas `static` (`Shared` en Visual Basic).  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>.  
  
 La méthode <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectCreating">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectCreating (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectCreating(class System.Web.UI.WebControls.ObjectDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectCreating (e As ObjectDataSourceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectCreating(System::Web::UI::WebControls::ObjectDataSourceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectCreating : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit&#xA;override this.OnObjectCreating : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit" Usage="objectDataSourceView.OnObjectCreating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" /> avant que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> crée une instance d'un objet métier pour exécuter une opération de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectDisposing">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectDisposing (System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectDisposing(class System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectDisposing (e As ObjectDataSourceDisposingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectDisposing(System::Web::UI::WebControls::ObjectDataSourceDisposingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs -&gt; unit&#xA;override this.OnObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs -&gt; unit" Usage="objectDataSourceView.OnObjectDisposing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" /> avant que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> ignore un type instancié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> est appelé lorsque l’instance d’un objet qui a été créé pour effectuer une opération de données est ignorée. Le `Dispose` méthode est appelée uniquement si le type identifié par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> propriété implémente le <xref:System.IDisposable> interface.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelected : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnSelected : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnSelected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" /> après que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> a complété une opération de récupération.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As ObjectDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::ObjectDataSourceSelectingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs -&gt; unit&#xA;override this.OnSelecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs -&gt; unit" Usage="objectDataSourceView.OnSelecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" /> avant que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> ne tente une opération de récupération.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdated : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnUpdated : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" /> après que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> a complété une opération de mise à jour.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdating : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit&#xA;override this.OnUpdating : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit" Usage="objectDataSourceView.OnUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" /> avant que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> ne tente une opération de mise à jour.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.DropDownList> contrôle, <xref:System.Web.UI.WebControls.TextBox> contrôles et plusieurs <xref:System.Web.UI.WebControls.ObjectDataSource> contrôles pour mettre à jour des données. Le <xref:System.Web.UI.WebControls.DropDownList> affiche le nom d’un `NorthwindEmployee`, tandis que le <xref:System.Web.UI.WebControls.TextBox> contrôles sont utilisés pour entrer et mettre à jour les informations d’adresse. Étant donné que le <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contient un <xref:System.Web.UI.WebControls.ControlParameter> objet qui est lié à la valeur sélectionnée de la <xref:System.Web.UI.WebControls.DropDownList>, le bouton qui déclenche le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> opération est activée uniquement après sélection d’un employé.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique les informations culturelles qui sont utilisées lors de la conversion des valeurs de chaînes en types de propriétés réels pour construire un objet du type indiqué par <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />.</summary>
        <value>Informations de culture. La valeur par défaut est <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="objectDataSourceView.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre les modifications apportées à l'état d'affichage de l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> depuis la publication de la page sur le serveur.</summary>
        <returns>L'objet qui contient les modifications apportées à l'état d'affichage <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> ; sinon, <see langword="null" /> si aucun état d'affichage n'est associé à l'objet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> méthode est principalement utilisée par les développeurs de contrôles.  
  
 État d’affichage est l’accumulation des valeurs de propriétés d’un contrôle serveur. Ces valeurs sont automatiquement placés dans le <xref:System.Web.UI.Control.ViewState%2A> propriété pour le contrôle serveur, qui est une instance de la <xref:System.Web.UI.StateBag> classe. Le <xref:System.Web.UI.Control.ViewState%2A> valeur est ensuite rendue persistante dans un objet chaîne après l’étape d’enregistrement de l’état du cycle de vie du contrôle serveur.  
  
 Lorsque l’état d’affichage est enregistré, afficher le contenu état est retourné au client en tant que variable qui est stockée dans le code HTML `Hidden` élément. Lorsque vous créez des contrôles serveur personnalisés, vous pouvez améliorer l’efficacité en substituant la <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> (méthode) et la modification de la `ViewState` propriété de votre contrôle serveur. Pour plus d’informations, consultez [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="objectDataSourceView.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments"><see cref="T:System.Web.UI.DataSourceSelectArguments" /> utilisé pour demander des opérations sur les données, autres que la récupération des données de base.</param>
        <summary>Récupère des données de l'objet qui est identifié par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> en appelant la méthode qui est identifiée par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> et en passant toutes valeurs dans la collection <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />.</summary>
        <returns>Liste <see cref="T:System.Collections.IEnumerable" /> de lignes de données. Pour plus d'informations, consultez <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> les appels de méthode le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> en passant le `arguments` paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Les <paramref name="arguments" /> passés à la méthode <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> spécifient que la source de données doit exécuter des tâches supplémentaires lors de la récupération des données pour activer la pagination ou trier les données récupérées, mais le contrôle de source de données ne prend pas en charge la fonction demandée.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de la méthode ou de la fonction que le contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> appelle pour récupérer un nombre de lignes.</summary>
        <value>Une chaîne qui représente le nom de la méthode ou de la fonction utilisé par <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> pour récupérer un nombre de lignes. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> identifie une méthode d’objet métier qui est utilisée pour récupérer un nombre total de lignes pour prendre en charge la pagination de source de données. Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> propriété est évaluée uniquement si la <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> propriété est définie sur `true`. Pour plus d’informations sur la façon dont la pagination est prise en charge par le <xref:System.Web.UI.WebControls.ObjectDataSourceView>, consultez <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.  
  
 La valeur de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> propriété est stockée dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'une opération de récupération de données est terminée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected> événement pour examiner les valeurs d’une valeur de retour et paramètres de sortie ou pour déterminer si une exception a été levée après une opération de récupération de données. La valeur de retour, les paramètres de sortie et les propriétés de gestion des exceptions sont disponibles à partir de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objet qui est associé à l’événement.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant une opération de récupération de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> événement pour effectuer des opérations d’initialisation supplémentaires qui sont spécifiques à votre application, pour valider les valeurs de paramètres ou pour modifier les valeurs de paramètre avant le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle effectue la récupération de données opération. Les paramètres sont disponibles en tant qu’un <xref:System.Collections.IDictionary> collection qui est accessible par le <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propriété, qui est exposée par le <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> objet.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de la méthode ou de la fonction que le contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> appelle pour récupérer des données.</summary>
        <value>Chaîne qui représente le nom de la méthode ou de la fonction que <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> utilise pour récupérer des données. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode spécifiée peut avoir n’importe quelle signature de méthode mais doit retourner l’un des types répertoriés dans le tableau suivant afin que le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle pour pouvoir l’appeler  
  
|Type de retour|Action|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|Le <xref:System.Collections.IEnumerable> est retourné par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> (méthode).|  
|<xref:System.Data.DataTable>|Un <xref:System.Data.DataView> est créé à l’aide de la <xref:System.Data.DataTable> et retournée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> (méthode).|  
|<xref:System.Data.DataSet>|La première <xref:System.Data.DataTable> de la <xref:System.Data.DataSet> est extrait et un <xref:System.Data.DataView> est créée et retournée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> (méthode).|  
|<xref:System.Object>|L’objet est encapsulé dans un seul élément <xref:System.Collections.IEnumerable> et retournée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> (méthode).|  
  
 La méthode qui est identifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété peut être une méthode d’instance ou un `static` (`Shared` en Visual Basic) (méthode). Dans le cas d’une méthode d’instance, l’objet métier est créé et détruit chaque fois que le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> méthode est appelée. Vous pouvez gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> événement fonctionne avec l’objet métier avant la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété est appelée. Vous pouvez également gérer les <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> événement est déclenché après la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété est appelée. (`Dispose` est appelé uniquement si l’objet métier implémente le <xref:System.IDisposable> interface.) Si la méthode est un `static` (`Shared` en Visual Basic) (méthode), l’objet métier n’est jamais créé et vous ne pouvez pas gérer ces événements.  
  
 Si l’objet métier qui le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle fonctionne implémente plusieurs méthodes ou une fonction portant le même nom (surcharges de méthode), le contrôle de source de données tente d’appeler celui qui convient en fonction d’un ensemble de conditions, y compris les paramètres dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> collection. Si les paramètres dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> collection ne correspondent pas à ceux de la signature de la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété, la source de données lève une exception.  
  
 Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment un <xref:System.Web.UI.WebControls.GridView> contrôle peut afficher des données à l’aide un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle sur une page Web Forms. Le <xref:System.Web.UI.WebControls.ObjectDataSource> identifie un nom de classe complètement ou partiellement qualifié avec son <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propriété et une méthode qui est appelée pour récupérer des données avec son <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété. Au moment de l’exécution, l’objet est créé et la méthode est appelée à l’aide de la réflexion. Le <xref:System.Web.UI.WebControls.GridView> contrôle énumère au sein la <xref:System.Collections.IEnumerable> collection retournée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>, puis affiche les données.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de paramètres contenant les paramètres qui sont utilisés par la méthode <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> qui contient les paramètres utilisés par la méthode spécifiée par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les noms et types des paramètres qui sont contenus dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> collection doit correspondre les noms et types des paramètres qui se trouvent dans la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> signature de propriété. Lorsque vous travaillez avec des contrôles liés aux données qui fournissent des paramètres, tels que <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView>, le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle fusionne automatiquement tous les paramètres qui sont explicitement spécifiés dans la collection avec ces paramètres sont fournis par le contrôle lié aux données. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment récupérer un enregistrement de données unique à l’aide un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôler et afficher l’enregistrement de données dans un <xref:System.Web.UI.WebControls.DetailsView> contrôle. Le <xref:System.Web.UI.WebControls.ObjectDataSource> récupère un enregistrement d’employé spécifique en appelant le `GetEmployee` méthode de la `EmployeeLogic` classe. Le `GetEmployee` méthode requiert un paramètre ID d’employé. Le <xref:System.Web.UI.WebControls.ObjectDataSource> de contrôles utilise un <xref:System.Web.UI.WebControls.QueryStringParameter> de l’objet dans son <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> collection pour passer un ID pour le `GetEmployee` (méthode).  
  
 Pour afficher l’exemple d’implémentation de la `EmployeeLogic` classe et le `GetEmployee` (méthode), consultez <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du paramètre de méthode de récupération de données qui est utilisé pour spécifier une prise en charge du tri de la source de données.</summary>
        <value>Le nom du paramètre de méthode utilisé pour indiquer le paramètre qui accepte cette valeur d'expression de tri. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> propriété est utilisée pour prendre en charge le tri des données source. Lorsqu’un <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> propriété est définie sur le <xref:System.Web.UI.DataSourceSelectArguments> de l’objet et passé à la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> (méthode), le <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> propriété identifie le nom du paramètre de la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété de l’objet métier qui accepte le tri valeur de l’expression.  
  
 La valeur de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> propriété est stockée dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du paramètre de méthode de récupération de données utilisé pour indiquer l'index d'entiers du premier enregistrement à récupérer du jeu de résultats pour la prise en charge de la pagination de la source de données.</summary>
        <value>Nom du paramètre de la méthode de l'objet métier utilisé pour indiquer le premier enregistrement à récupérer. La valeur par défaut est "startRowIndex".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> propriété doit être définie pour activer la pagination. Pour plus d’informations sur la façon dont la pagination est prise en charge par le <xref:System.Web.UI.WebControls.ObjectDataSourceView> d’objets, consultez <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.  
  
 La valeur de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> propriété est stockée dans l’état d’affichage.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
        <value><see langword="true" /> si la vue de source de données est marquée pour enregistrer son état ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut être utilisé uniquement lorsque le <xref:System.Web.UI.WebControls.ObjectDataSourceView> instance est convertie dans le <xref:System.Web.UI.IStateManager> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Objet représentant l'état <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> à restaurer.</param>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.ObjectDataSourceView> est castée en interface <xref:System.Web.UI.IStateManager>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Web.UI.IStateManager.SaveViewState" />.</summary>
        <returns>Objet qui contient les modifications de l'état d'affichage <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> ; sinon, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.ObjectDataSourceView> est castée en interface <xref:System.Web.UI.IStateManager>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Web.UI.IStateManager.TrackViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.ObjectDataSourceView> est castée en interface <xref:System.Web.UI.IStateManager>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="objectDataSourceView.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ainsi, l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> effectue le suivi des modifications de son état d'affichage afin qu'elles puissent être stockées dans l'objet <see cref="P:System.Web.UI.Control.ViewState" /> du contrôle et être persistantes entre les requêtes de la même page.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A> méthode est principalement utilisée par les développeurs de contrôles.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de la classe que le contrôle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> représente.</summary>
        <value>Nom de classe qualifié complètement ou partiellement qui identifie le type de l'objet que <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> représente. La valeur par défaut est une chaîne vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour créer une instance de l’objet qui le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle se lie, le contrôle utilise la réflexion pour charger le type qui est identifié par le nom de type au moment de l’exécution. Par conséquent, la valeur de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> propriété peut être un type qualifié partiellement pour le code qui se trouve dans le répertoire Bin ou App_Code ou un nom de type qualifié complet pour le code qui est enregistré dans le global assembly cache. Si vous utilisez le global assembly cache, vous devez ajouter la référence appropriée à la `assemblies` section du fichier de configuration Machine.config ou Web.config.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment un <xref:System.Web.UI.WebControls.GridView> contrôle peut afficher des données à l’aide un <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle sur une page Web Forms. Le <xref:System.Web.UI.WebControls.ObjectDataSource> identifie un nom de classe complètement ou partiellement qualifié avec son <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> propriété et une méthode qui est appelée pour récupérer des données avec son <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriété. Au moment de l’exécution, l’objet est créé et la méthode est appelée à l’aide de la réflexion. Le <xref:System.Web.UI.WebControls.GridView> contrôle énumère les <xref:System.Collections.IEnumerable> collection retournée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> et affiche les données.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> des valeurs de clés utilisées pour identifier l'élément à mettre à jour. Ces paramètres sont utilisés avec la méthode spécifiée par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> pour exécuter l'opération de mise à jour. Si aucun paramètre n'est associé à la méthode, passez la valeur <see langword="null" />.</param>
        <param name="values"><see cref="T:System.Collections.IDictionary" /> de nouvelles valeurs à appliquer à la source de données. Ces paramètres sont utilisés avec la méthode spécifiée par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> pour exécuter l'opération de mise à jour de la base de données. Si aucun paramètre n'est associé à la méthode, passez la valeur <see langword="null" />.</param>
        <param name="oldValues"><see cref="T:System.Collections.IDictionary" /> qui contient les valeurs supplémentaires ne correspondant pas à une clé utilisée pour correspondre à l'élément dans la source de données. Les valeurs de ligne sont passées à la méthode de suppression uniquement si la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> a pour valeur le champ <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />.</param>
        <summary>Exécute une opération de mise à jour en appelant la méthode qui est identifiée par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> et à l'aide des paramètres fournis dans les collections <paramref name="keys" />, <paramref name="values" /> ou <paramref name="oldValues" />.</summary>
        <returns>Nombre de lignes mises à jour ; sinon, -1 si le nombre n'est pas connu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de retour par défaut est -1, ce qui signifie qu’un nombre inconnu de lignes ont été mis à jour. Pour retourner une valeur différente, définissez la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> propriété de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objet de la <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> événement. Le nombre de lignes affectées est généralement retourné par la `Update` méthode pour l’objet métier et cette valeur est disponible à partir de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> propriété de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> paramètre de la <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> événement.  
  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> les appels de méthode le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A> méthode, en passant le `keys`, `values`, et `oldValues` paramètres.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'une opération <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> est terminée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated> événement pour examiner les valeurs d’une valeur de retour et paramètres de sortie ou pour déterminer si une exception a été levée après une <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> opération est terminée. La valeur de retour, les paramètres de sortie et les propriétés de gestion des exceptions sont disponibles à partir de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objet qui est associé à l’événement.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de la méthode ou de la fonction que l'objet <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> appelle pour mettre à jour des données.</summary>
        <value>Chaîne qui représente le nom de la méthode ou de la fonction que <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> utilise pour mettre à jour des données. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.ObjectDataSourceView> objet suppose que la méthode qui est identifiée par le <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> propriété effectue des mises à jour un à la fois, plutôt que dans un lot.  
  
 La méthode peut être une méthode d’instance ou un `static` (`Shared` en Visual Basic) (méthode). Dans le cas d’une méthode d’instance, l’objet métier est créé et détruit chaque fois que la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> propriété est appelée. Vous pouvez gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> événement fonctionne avec l’objet métier avant la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> propriété est appelée. Vous pouvez également gérer les <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> événement est déclenché après le <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> méthode est appelée. (`Dispose` est appelé uniquement si l’objet métier implémente le <xref:System.IDisposable> interface.) Si la méthode est un `static` (`Shared` en Visual Basic) (méthode), l’objet métier n’est jamais créé et vous ne pouvez pas gérer ces événements.  
  
 Si l’objet métier qui le <xref:System.Web.UI.WebControls.ObjectDataSource> objet fonctionne avec implémente plusieurs méthodes ou une fonction portant le même nom (surcharges de méthode), le contrôle de source de données tente d’appeler celui qui convient en fonction d’un ensemble de conditions, y compris les paramètres dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection. Si les paramètres dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection ne correspondent pas à ceux de la signature de la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> propriété, la source de données lève une exception.  
  
 Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=nameWithType>.  
  
 La valeur de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> propriété est stockée dans l’état d’affichage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.DropDownList> contrôle, <xref:System.Web.UI.WebControls.TextBox> contrôles et plusieurs <xref:System.Web.UI.WebControls.ObjectDataSource> contrôles pour mettre à jour des données. Le <xref:System.Web.UI.WebControls.DropDownList> affiche le nom d’un `NorthwindEmployee`, tandis que le <xref:System.Web.UI.WebControls.TextBox> contrôles sont utilisés pour entrer et mettre à jour les informations d’adresse. Étant donné que le <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contient un <xref:System.Web.UI.WebControls.ControlParameter> objet qui est lié à la valeur sélectionnée de la <xref:System.Web.UI.WebControls.DropDownList>, le bouton qui déclenche le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> opération est activée uniquement après sélection d’un employé.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de paramètres contenant les paramètres qui sont utilisés par la méthode <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> qui contient les paramètres utilisés par la propriété <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les noms et types des paramètres qui sont contenus dans le <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection doit correspondre les noms et types des paramètres qui se trouvent dans la méthode spécifiée par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> signature de propriété. Les noms de paramètres sont affectés par la <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> propriété et respectent la casse. Lorsque vous travaillez avec des contrôles liés aux données qui fournissent des paramètres, tels que <xref:System.Web.UI.WebControls.GridView> et <xref:System.Web.UI.WebControls.DetailsView>, le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle fusionne automatiquement tous les paramètres qui sont explicitement spécifiés dans la collection avec ces paramètres sont fournis par le contrôle lié aux données. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.DropDownList> contrôle, <xref:System.Web.UI.WebControls.TextBox> contrôles et plusieurs <xref:System.Web.UI.WebControls.ObjectDataSource> contrôles pour mettre à jour des données. Le <xref:System.Web.UI.WebControls.DropDownList> affiche le nom d’un `NorthwindEmployee`, tandis que le <xref:System.Web.UI.WebControls.TextBox> contrôles sont utilisés pour entrer et mettre à jour les informations d’adresse. Étant donné que le <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contient un <xref:System.Web.UI.WebControls.ControlParameter> objet qui est lié à la valeur sélectionnée de la <xref:System.Web.UI.WebControls.DropDownList>, le bouton qui déclenche le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> opération est activée uniquement après sélection d’un employé.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant une opération <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gérer le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> événement pour effectuer des opérations d’initialisation supplémentaires qui sont spécifiques à votre application, pour valider les valeurs de paramètres ou pour modifier les valeurs de paramètre avant le <xref:System.Web.UI.WebControls.ObjectDataSource> contrôle effectue le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> opération. Les paramètres sont disponibles en tant qu’un <xref:System.Collections.IDictionary> collection accédée par le <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propriété, qui est exposée par le <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> objet.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.DropDownList> contrôle, <xref:System.Web.UI.WebControls.TextBox> contrôles et plusieurs <xref:System.Web.UI.WebControls.ObjectDataSource> contrôles pour mettre à jour des données. Le <xref:System.Web.UI.WebControls.DropDownList> affiche le nom d’un `NorthwindEmployee`, tandis que le <xref:System.Web.UI.WebControls.TextBox> contrôles sont utilisés pour entrer et mettre à jour les informations d’adresse. Étant donné que le <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contient un <xref:System.Web.UI.WebControls.ControlParameter> objet qui est lié à la valeur sélectionnée de la <xref:System.Web.UI.WebControls.DropDownList>, le bouton qui déclenche le <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> opération est activée uniquement après sélection d’un employé.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>