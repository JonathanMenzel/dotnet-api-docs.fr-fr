<Type Name="FontNamesConverter" FullName="System.Web.UI.WebControls.FontNamesConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1fbb6ca723485fd3c8c187b2911e4896486408b7" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37535953" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontNamesConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontNamesConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FontNamesConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class FontNamesConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontNamesConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type FontNamesConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Effectue une conversion entre une chaîne contenant une liste de noms de polices et un tableau de chaînes représentant les noms individuels.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> méthode de cette classe pour convertir une chaîne unique contenant une liste de noms de polices en tableau de chaînes contenant les noms individuels. Chaque nom de police dans la chaîne doit être séparé par une virgule. Par exemple, la chaîne « arial, fois verdana roman, nouveau », convertit en un tableau qui contient les chaînes « arial », « times new roman » et « verdana ». Notez que les virgules sont supprimées, ainsi que des espaces blancs au début ou à la fin du nom de police. Un espace blanc au milieu d’un nom de police n’est pas supprimé.  
  
 Le <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> méthode effectue l’opération inverse. Il convertit un tableau de chaînes contenant les noms de polices individuels en une seule chaîne contenant une liste des noms. Par exemple, un tableau qui contient les chaînes « arial », « times new roman » et « verdana » convertit la chaîne « arial, fois verdana roman, nouveau ». Notez que des virgules sont automatiquement insérés entre les noms de polices sans espace blanc.  
  
 Appelez le <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> méthode pour vérifier que la conversion peut être effectuée avant d’appeler le <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FontNamesConverter> classe pour convertir une chaîne avec une liste de noms de polices en tableau de chaînes contenant les noms individuels. Le tableau de chaînes est ensuite convertie en une chaîne unique et affiché.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontNamesConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontNamesConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.FontNamesConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne devez jamais accéder directement un convertisseur de type. Au lieu de cela, appelez le convertisseur approprié à l’aide un <xref:System.ComponentModel.TypeDescriptor> objet. Pour plus d’informations, consultez les exemples de <xref:System.ComponentModel.TypeConverter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="fontNamesConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit des informations sur le contexte d'un convertisseur de type. Vous pouvez éventuellement passer <see langword="null" /> à ce paramètre.</param>
        <param name="sourceType">
          <see cref="T:System.Type" /> représentant le type de données à partir duquel la conversion est effectuée.</param>
        <summary>Détermine si ce convertisseur peut convertir un objet du type de données spécifié en tableau de chaînes contenant des noms de polices individuels.</summary>
        <returns>
          <see langword="true" /> si le type peut être converti ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> méthode pour déterminer si le type de données spécifié peut être converti en un tableau de chaînes contenant les noms de polices individuels.  
  
> [!NOTE]
>  Ce convertisseur peut convertir uniquement à partir d’un `string` type de données. Le `sourceType` paramètre doit être de type <xref:System.String>. Sinon, cette méthode retourne `false` pour indiquer que le type de données spécifié ne peut pas être converti.  
  
 Vous pouvez éventuellement passer `null` pour le `context` paramètre.  
  
   
  
## Examples  
 L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A>. L’exemple détermine si le type de données spécifié peut être converti vers un tableau de chaînes qui contient les noms de polices individuels avant d’effectuer la conversion.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="fontNamesConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit des informations sur le contexte d'un convertisseur de type. Ce paramètre n'est pas utilisé dans cette méthode. Il est réservé à des prochaines versions de cette méthode. Vous pouvez éventuellement passer <see langword="null" /> à ce paramètre.</param>
        <param name="culture">Objet <see cref="T:System.Globalization.CultureInfo" /> qui représente des informations sur une culture (telles que la langue, le système de calendrier, etc.). Ce paramètre n'est pas utilisé dans cette méthode. Il est réservé à des prochaines versions de cette méthode. Vous pouvez éventuellement passer <see langword="null" /> à ce paramètre.</param>
        <param name="value">Instance de <see cref="T:System.Object" /> représentant la chaîne source à partir de laquelle la conversion est effectuée.</param>
        <summary>Convertit une chaîne représentant une liste de noms de polices en tableau de chaînes contenant des noms de polices individuels.</summary>
        <returns>Instance de <see cref="T:System.Object" /> représentant le tableau de chaînes contenant les noms de polices individuels.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> méthode pour convertir une chaîne contenant une liste de noms de polices en tableau de chaînes contenant les noms individuels. Chaque nom de police dans la chaîne doit être séparé par une virgule. Par exemple, la chaîne « arial, fois verdana roman, nouveau », convertit en un tableau qui contient les chaînes « arial », « times new roman » et « verdana ». Notez que les virgules sont supprimés, ainsi que des espaces blancs au début ou à la fin du nom de police. Un espace blanc au milieu d’un nom de police n’est pas supprimé.  
  
> [!NOTE]
>  Le `context` et `culture` paramètres ne sont pas utilisés dans cette version de la méthode ; elles sont réservées pour les versions futures de la méthode. Vous pouvez éventuellement passer `null` pour ces paramètres.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> méthode pour convertir une chaîne avec une liste de noms de polices en tableau de chaînes contenant les noms individuels.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
          <paramref name="value" /> n'est pas de type <see cref="T:System.String" />.</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="fontNamesConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit des informations sur le contexte d'un convertisseur de type. Ce paramètre n'est pas utilisé dans cette méthode. Il est réservé à des prochaines versions de cette méthode. Vous pouvez éventuellement passer <see langword="null" /> à ce paramètre.</param>
        <param name="culture">Objet <see cref="T:System.Globalization.CultureInfo" /> qui représente des informations sur une culture (telles que la langue, le système de calendrier, etc.). Ce paramètre n'est pas utilisé dans cette méthode. Il est réservé à des prochaines versions de cette méthode. Vous pouvez éventuellement passer <see langword="null" /> à ce paramètre.</param>
        <param name="value">Objet représentant le tableau de chaînes source à partir duquel la conversion est effectuée.</param>
        <param name="destinationType">Objet d'instance de <see cref="T:System.Object" /> représentant le type de données vers lequel la conversion est effectuée. Ce paramètre doit être de type <see cref="T:System.String" />.</param>
        <summary>Crée une chaîne représentant une liste de noms de polices à partir d'un tableau de chaînes contenant des noms de polices individuels.</summary>
        <returns>Instance de <see cref="T:System.Object" /> représentant une chaîne contenant une liste de noms de polices.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> méthode pour convertir un tableau de chaînes contenant les noms de polices individuels en une seule chaîne contenant une liste des noms. Par exemple, un tableau qui contient les chaînes « arial », « times new roman » et « verdana » convertit la chaîne « arial, fois verdana roman, nouveau ». Notez que des virgules sont automatiquement insérés entre les noms de polices sans espace blanc.  
  
> [!NOTE]
>  Ce convertisseur peut convertir uniquement à un `string` type de données. Le `destinationType` paramètre doit être de type <xref:System.String>.  
  
> [!NOTE]
>  Le `context` et `culture` paramètres ne sont pas utilisés dans cette version de la méthode ; elles sont réservées pour les versions futures de la méthode. Vous pouvez éventuellement passer `null` pour ces paramètres.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> méthode pour convertir un tableau de chaînes contenant les noms en une seule chaîne qui contient une liste de noms de polices individuels.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
          <paramref name="destinationType" /> n'est pas de type <see cref="T:System.String" />.</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>