<Type Name="BoundColumn" FullName="System.Web.UI.WebControls.BoundColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8adb93db0a9631edcae482a78e35419589e718a7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30597873" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BoundColumn : System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundColumn extends System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundColumn&#xA;Inherits DataGridColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundColumn : System::Web::UI::WebControls::DataGridColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataGridColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Type de colonne pour le contrôle <see cref="T:System.Web.UI.WebControls.DataGrid" /> qui est lié à un champ dans une source de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.BoundColumn> type de colonne dans un <xref:System.Web.UI.WebControls.DataGrid> contrôle pour afficher le contenu d’un champ dans la source de données. Les valeurs sont répertoriées dans une seule colonne. Le champ est lié à la <xref:System.Web.UI.WebControls.BoundColumn>donc reflètent les mises à jour dans la source de données dans les cellules correspondantes de la <xref:System.Web.UI.WebControls.DataGrid> contrôle.  
  
> [!NOTE]
>  Ce type de colonne est la valeur par défaut pour le <xref:System.Web.UI.WebControls.DataGrid> contrôle.  
  
 Pour contrôler l’apparence de cette colonne, utilisez les propriétés de style de la <xref:System.Web.UI.WebControls.DataGrid> contrôle.  
  
> [!CAUTION]
>  Texte n’est pas codé en HTML avant son affichage dans le <xref:System.Web.UI.WebControls.BoundColumn>. Cela rend possible d’incorporer un script dans les balises HTML dans le texte. Si les valeurs de cette colonne proviennent de l’entrée d’utilisateur, veillez à valider les valeurs pour réduire les problèmes de sécurité.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser un <xref:System.Web.UI.WebControls.BoundColumn> type de colonne dans la <xref:System.Web.UI.WebControls.DataGrid> contrôle pour afficher les champs dans une source de données.  
  
 [!code-aspx-csharp[Classic BoundColumn Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BoundColumn Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BoundColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BoundColumn Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.BoundColumn" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour créer et initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.BoundColumn> classe.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer et initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.BoundColumn> de classe et l’ajouter à la <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> collection.  
  
 [!code-aspx-csharp[DataGridCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCtor/CS/datagridctorcs.aspx#1)]
 [!code-aspx-vb[DataGridCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCtor/VB/datagridctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundColumn.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du champ issu de la source de données à lier au <see cref="T:System.Web.UI.WebControls.BoundColumn" />.</summary>
        <value>Nom du champ à lier au <see cref="T:System.Web.UI.WebControls.BoundColumn" />. La valeur par défaut est <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.BoundColumn.DataField%2A> propriété pour spécifier le champ à lier à la <xref:System.Web.UI.WebControls.BoundColumn>.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.BoundColumn.DataField%2A> propriété pour spécifier le nom du champ dans la source de données à lier à la <xref:System.Web.UI.WebControls.BoundColumn>.  
  
 [!code-aspx-csharp[Classic BoundColumn Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BoundColumn Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BoundColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BoundColumn Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundColumn.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne qui spécifie le format d'affichage des éléments contenus dans la colonne.</summary>
        <value>Chaîne de mise en forme qui spécifie le format d'affichage des éléments contenus dans la colonne. La valeur par défaut est <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A> propriété afin de fournir un format personnalisé pour les éléments de la colonne.  
  
 La chaîne de format de données se compose de deux parties, séparées par un signe deux-points, sous la forme { `A` : `Bxx` }. Par exemple, la chaîne mise en forme {0 : F2} affiche un nombre à virgule fixe avec deux décimales.  
  
> [!NOTE]
>  La chaîne entière doit être placée entre accolades pour indiquer qu’il s’agit d’une chaîne de format et non d’une chaîne littérale. Tout texte en dehors des accolades s’affiche sous forme de texte littéral.  
  
 La valeur avant le signe deux-points (`A` dans l’exemple général) spécifie l’index de paramètre dans une liste de paramètres de base zéro.  
  
> [!NOTE]
>  Cette valeur peut uniquement être définie sur 0, car il n’est qu’une seule valeur dans chaque cellule.  
  
 Le caractère après le signe deux-points (`B` dans l’exemple général) spécifie le format pour l’affichage de la valeur. Le tableau suivant répertorie les formats courants.  
  
|Caractère de format|Description |  
|----------------------|-----------------|  
|`C`|Affiche les valeurs numériques au format monétaire.|  
|`D`|Affiche les valeurs numériques au format décimal.|  
|`E`|Affiche les valeurs numériques dans le format scientifique (exponentiel).|  
|`F`|Affiche les valeurs numériques au format fixe.|  
|`G`|Affiche les valeurs numériques au format général.|  
|`N`|Affiche les valeurs numériques au format de nombre.|  
|`X`|Affiche les valeurs numériques au format hexadécimal.|  
  
> [!NOTE]
>  Le caractère de format n’est pas sensible à la casse, à l’exception de `X`, qui affiche les caractères hexadécimaux dans le cas spécifié.  
  
 La valeur après le caractère de format (`xx` dans l’exemple général) spécifie le nombre de chiffres significatifs ou de décimales à afficher.  
  
 Pour plus d’informations sur la mise en forme des chaînes, consultez [Mise en forme des types](~/docs/standard/base-types/formatting-types.md).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A> propriété pour spécifier différents formats pour les colonnes dans le <xref:System.Web.UI.WebControls.DataGrid> contrôle. Le `Qty` colonne est mise en forme en tant qu’entier, le `Price` colonne est mise en forme en tant que devises, le `Weight` colonne est mise en forme comme un nombre décimal et la `Expires` colonne est mise en forme comme une date et une chaîne d’heure.  
  
 [!code-aspx-csharp[BoundColumnDataFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundColumnDataFormatString/cs/BoundColumnSampleCS.aspx#1)]
 [!code-aspx-vb[BoundColumnDataFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundColumnDataFormatString/vb/BoundColumnSampleVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundColumn.FormatDataValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataValue">Valeur à mettre en forme.</param>
        <summary>Convertit la valeur spécifiée au format indiqué par la propriété <see cref="P:System.Web.UI.WebControls.BoundColumn.DataFormatString" />.</summary>
        <returns>Valeur spécifiée convertie au format indiqué par la propriété <see cref="P:System.Web.UI.WebControls.BoundColumn.DataFormatString" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.BoundColumn.FormatDataValue%2A> méthode pour convertir la valeur spécifiée au format indiqué par la <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A> propriété.  
  
> [!NOTE]
>  Cette méthode retourne la chaîne équivalente de la valeur si la <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A> propriété n’est pas définie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundColumn.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rétablit <see cref="T:System.Web.UI.WebControls.BoundColumn" /> à son état initial.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.BoundColumn.Initialize%2A> méthode pour rétablir le <xref:System.Web.UI.WebControls.BoundColumn> à son état initial.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.TableCell cell, int32 columnIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As TableCell, columnIndex As Integer, itemType As ListItemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::TableCell ^ cell, int columnIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="cell">Objet <see cref="T:System.Web.UI.WebControls.TableCell" /> représentant la cellule à réinitialiser.</param>
        <param name="columnIndex">Numéro de la colonne dans laquelle la cellule se trouve.</param>
        <param name="itemType">Une des valeurs de <see cref="T:System.Web.UI.WebControls.ListItemType" />.</param>
        <summary>Rétablit l'état initial de la cellule spécifiée dans le <see cref="T:System.Web.UI.WebControls.BoundColumn" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.BoundColumn.InitializeCell%2A> méthode réinitialise la cellule spécifiée dans le <xref:System.Web.UI.WebControls.BoundColumn> à son état initial.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundColumn.Initialize" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si les éléments du <see cref="T:System.Web.UI.WebControls.BoundColumn" /> peuvent être modifiés.</summary>
        <value>
          <see langword="true" /> si les éléments du <see cref="T:System.Web.UI.WebControls.BoundColumn" /> ne peuvent être modifiés ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.BoundColumn.ReadOnly%2A> propriété pour spécifier si les éléments de la <xref:System.Web.UI.WebControls.BoundColumn> peut être modifié. Cette propriété peut également être utilisée pour déterminer par programme si la colonne est en lecture seule.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Web.UI.WebControls.BoundColumn.ReadOnly%2A> propriété pour spécifier qu’un <xref:System.Web.UI.WebControls.BoundColumn> est en lecture seule. Le fichier .aspx définit trois contrôles BoundColumn et définit la colonne de l’élément en lecture seule.  
  
 [!code-aspx-csharp[BoundColumnReadOnly#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundColumnReadOnly/CS/boundcolumnreadonlycs.aspx#1)]
 [!code-aspx-vb[BoundColumnReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundColumnReadOnly/VB/boundcolumnreadonlyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="thisExpr">
      <MemberSignature Language="C#" Value="public static readonly string thisExpr;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string thisExpr" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundColumn.thisExpr" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly thisExpr As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ thisExpr;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente la chaîne « ! ». Ce champ est en lecture seule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.BoundColumn.thisExpr> champ pour représenter la « ! » chaîne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>