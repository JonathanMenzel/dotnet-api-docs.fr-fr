<Type Name="DetailsViewCommandEventArgs" FullName="System.Web.UI.WebControls.DetailsViewCommandEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b47dcf46504ab417b0df9f4ab2092477cf53f383" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36383197" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DetailsViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DetailsViewCommandEventArgs extends System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DetailsViewCommandEventArgs&#xA;Inherits CommandEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DetailsViewCommandEventArgs : System::Web::UI::WebControls::CommandEventArgs" />
  <TypeSignature Language="F#" Value="type DetailsViewCommandEventArgs = class&#xA;    inherit CommandEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CommandEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour l'événement <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.DetailsView> incrémente le <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> événement lorsqu’un bouton dans un <xref:System.Web.UI.WebControls.ButtonField>, <xref:System.Web.UI.WebControls.CommandField>, ou <xref:System.Web.UI.WebControls.TemplateField> un clic sur le champ de ligne. Cela vous permet de fournir un gestionnaire d’événements qui exécute une routine personnalisée chaque fois que cet événement se produit.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.WebControls.DetailsView> contrôle déclenche également d’autres événements spécialisés lorsque l’utilisateur clique sur certains boutons (boutons avec le `CommandName` propriété la valeur « Delete », « Insert », « Page » ou « Update »). Lorsque vous utilisez un de ces boutons, vous devez envisager d’utiliser un des événements spécialisés fournis par le contrôle (tels que <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> ou <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>).  
  
 A <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> objet est passé au gestionnaire d’événements. Si le bouton qui a déclenché l’événement a un nom de commande ou une valeur d’argument de commande, vous pouvez utiliser la <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> objet pour déterminer ces valeurs. Pour déterminer le nom de la commande et l’argument de commande du bouton cliqué, utilisez la <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> et <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> propriétés, respectivement. Vous pouvez également accéder à la <xref:System.Web.UI.WebControls.DetailsView> contrôle qui a déclenché l’événement à l’aide de la <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> propriété.  
  
 Pour obtenir la liste des valeurs de propriété initiales d'une instance de la classe <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs>, consultez le constructeur <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.%23ctor%2A>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> objet passé au gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> un clic sur des événements pour déterminer le nom de commande du bouton par l’utilisateur. Cet exemple utilise le modèle de codage de fichier unique.  
  
 [!code-aspx-csharp[DetailsViewCommandEventArgsCodeInline#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeInline/CS/detailsviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[DetailsViewCommandEventArgsCodeInline#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeInline/VB/detailsviewcommandeventargsvb.aspx#1)]  
  
 L’exemple de code suivant présente une version de modèle de codage code-behind de l’exemple précédent. Pour cet exemple fonctionne, vous devez copier le code ci-dessous dans le fichier code-behind associé.  
  
 [!code-aspx-csharp[DetailsViewCommandEventArgsCodeBehind2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/CS/Default.aspx#1)]
 [!code-aspx-vb[DetailsViewCommandEventArgsCodeBehind2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/VB/DefaultVB.aspx#1)]  
  
 L’exemple de code suivant montre le fichier code-behind pour l’exemple précédent.  
  
 [!code-csharp[DetailsViewCommandEventArgsCodeBehind2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/CS/Default.aspx.cs#2)]
 [!code-vb[DetailsViewCommandEventArgsCodeBehind2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/VB/DefaultVB.aspx.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsViewCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DetailsViewCommandEventArgs (object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandSource, class System.Web.UI.WebControls.CommandEventArgs originalArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandSource As Object, originalArgs As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DetailsViewCommandEventArgs(System::Object ^ commandSource, System::Web::UI::WebControls::CommandEventArgs ^ originalArgs);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.DetailsViewCommandEventArgs : obj * System.Web.UI.WebControls.CommandEventArgs -&gt; System.Web.UI.WebControls.DetailsViewCommandEventArgs" Usage="new System.Web.UI.WebControls.DetailsViewCommandEventArgs (commandSource, originalArgs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandSource" Type="System.Object" />
        <Parameter Name="originalArgs" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="commandSource">Source de la commande.</param>
        <param name="originalArgs">
          <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> qui contient les données de l'événement.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour initialiser une nouvelle instance de la <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> classe.  
  
 Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>|La valeur de la <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> propriété de la <xref:System.Web.UI.WebControls.CommandEventArgs> contenus dans le `originalArgs` paramètre.|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>|La valeur de la <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> propriété de la <xref:System.Web.UI.WebControls.CommandEventArgs> objet contenu dans le `originalArgs` paramètre.|  
|<xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>|L’objet contenu dans le `commandSource` paramètre.|  
  
> [!NOTE]
>  Ce constructeur est utilisé principalement par les développeurs de contrôles lors du déclenchement d’événements.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CommandSource">
      <MemberSignature Language="C#" Value="public object CommandSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandSource : obj" Usage="System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la source de la commande.</summary>
        <value>Instance de la classe <see cref="T:System.Object" /> qui représente la source de la commande.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> propriété pour accéder aux propriétés de l’objet qui représente la source de la commande. Dans certains cas, il s’agit du <xref:System.Web.UI.WebControls.DetailsView> contrôle lui-même, et dans d’autres cas, il sera le <xref:System.Web.UI.WebControls.Button> contrôle que l’utilisateur a cliqué.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> propriété pour déterminer lequel des deux <xref:System.Web.UI.WebControls.DetailsView> contrôles déclenchés la <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> événement.  
  
 [!code-aspx-csharp[DetailsViewCommandEventArgsCommandSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCommandSource/CS/detailsviewcommandeventargscommandsourcecs.aspx#1)]
 [!code-aspx-vb[DetailsViewCommandEventArgsCommandSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCommandSource/VB/detailsviewcommandeventargscommandsourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le contrôle a géré l'événement.</summary>
        <value>
          <see langword="true" /> si le code d'événement lié aux données a été ignoré ou a fini de s'exécuter ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définissez cette propriété sur `true` dans le Gestionnaire d’événements pour spécifier que le <xref:System.Web.UI.WebControls.DetailsView> contrôle ne doit pas gérer l’événement, car vous le gérez dans votre code.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>