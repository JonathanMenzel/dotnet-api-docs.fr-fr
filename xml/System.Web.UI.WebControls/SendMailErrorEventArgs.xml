<Type Name="SendMailErrorEventArgs" FullName="System.Web.UI.WebControls.SendMailErrorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8e1094a400e7f9f928cce080d1cb3194eb8424e9" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51873782" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SendMailErrorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SendMailErrorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SendMailErrorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendMailErrorEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SendMailErrorEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour l'événement <see langword="SendMailError" /> de contrôles tel que le contrôle <see cref="T:System.Web.UI.WebControls.ChangePassword" />, le contrôle <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> et le contrôle <see cref="T:System.Web.UI.WebControls.PasswordRecovery" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objet contient un message d’erreur qui est déclenché par le fournisseur de messagerie SMTP lorsqu’un message électronique ne peut pas être envoyé par le <xref:System.Web.UI.WebControls.ChangePassword> contrôle, ou la <xref:System.Web.UI.WebControls.CreateUserWizard> contrôle. Dans ce cas, le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objet est envoyé à la <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>.  
  
 Créer un <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> délégué pour gérer l’événement. Gestion de l’événement permet à votre application Web pour s’exécuter même si une exception s’est produite. Cela est utile lorsqu’il n’est pas critique pour envoyer un message électronique. Par exemple, si l’exception se produit lorsqu’un utilisateur parcourt un Assistant à plusieurs étapes, il peut être avantageux d’enregistrer l’erreur, afficher un message d’information à l’utilisateur et permettre à l’utilisateur terminer l’Assistant.  
  
 Examiner le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> propriété afin de déterminer la cause réelle de l’exception. La raison la plus courante pour l’exception est une erreur de configuration dans le [ &lt;smtp&gt; , élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) du fichier de configuration machine. Bien qu’une erreur de cela est généralement découverts pendant le développement et débogage d’une application, les serveurs de messagerie peuvent échouer de façon inattendue dans un environnement de production, et vous devez déterminer si vous souhaitez que l’application entière échoue dans ce cas. Si ce n’est pas le cas, gérant l’événement permet à votre application continuer.  
  
 Vous devez définir le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriété `true` pour signaler que l’exception a été gérée ; sinon, l’exception est levée de nouveau et inclut le message d’erreur et de la pile d’appel d’origine.  
  
 Si vous ne créez pas de gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> événement, ou si vous créez un gestionnaire d’événements, tout en conservant la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriété définie sur `false`, votre application Web cessent de s’exécuter si une erreur se produit lors de l’envoi d’un message électronique, et ASP.NET sera afficher un message d’erreur.  
  
 Le <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> méthode autorise également les classes dérivées à gérer l’événement, au lieu de ce fait le <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>. Cette technique est recommandée pour gérer l’événement dans une classe dérivée de <xref:System.Web.UI.WebControls.ChangePassword> ou <xref:System.Web.UI.WebControls.CreateUserWizard>.  
  
 Pour plus d’informations sur la gestion des événements, consultez [gestion des événements serveur dans les Pages Web Forms ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui utilise un <xref:System.Web.UI.WebControls.ChangePassword> contrôle Web et inclut un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> événement nommé SendMailError. L’exemple de code suppose que le site Web ASP.NET a été configuré pour utiliser l’appartenance d’ASP.NET et l’authentification par formulaire, et qu’un utilisateur a été créé dont le nom et mot de passe vous connaissez. Pour plus d’informations, consultez [Comment : implémenter l’authentification par formulaire Simple](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Si la modification de mot de passe réussit, le code dans le `SendingMail` Gestionnaire d’événements essaie d’envoyer un message électronique à l’utilisateur pour confirmer la modification. SMTP doit déjà être configurée sur le serveur afin que cet exemple de code fonctionne. Pour plus d’informations sur la façon de configurer un serveur SMTP, consultez [NIB : Comment : installer et configurer les serveurs virtuels SMTP dans IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Dans le cadre de cet exemple, il n’est pas nécessaire de configurer un serveur SMTP ; l’exemple est construit pour tester un échec d’envoi d’un message électronique.  
  
 Si un serveur de messagerie n’est pas configuré correctement ou une autre erreur se produit et le message électronique ne peut pas être envoyé, le `SendMailError` fonction est appelée. Un message s’affiche à l’utilisateur. En outre, un événement est enregistré dans le journal des événements Windows en partant du principe qu’une source d’événements nommée MySamplesSite déjà existe. Consultez l’exemple de code ci-dessous pour créer la source d’événement spécifié. Pour plus d’informations sur la création d’une source d’événements, consultez [gestion des événements serveur dans les Pages Web Forms ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriété de la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objet est défini sur `true` pour indiquer que l’erreur a été gérée.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Utilisez l’exemple de code suivant si vous avez besoin ajouter par programmation de la source d’événements nommée MySamplesSite dans votre journal des applications. Cette source d’événements doit exister dans l’ordre pour le premier exemple de code fonctionne correctement. L’exemple de code suivant nécessite des privilèges d’administrateur.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Lors de la substitution <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> méthode de la classe de base pour activer les délégués inscrits de recevoir l’événement.</para>
    </block>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Serveur gestion des événements dans les Pages Web ASP.NET</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Gestion et déclenchement d'événements</related>
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Onglet Application outil Administration de Site Web</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c">Sécurisation des contrôles de connexion</related>
    <related type="Article" href="https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad">Pratiques de sécurité de base pour les Applications Web</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMailErrorEventArgs (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SendMailErrorEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMailErrorEventArgs(Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SendMailErrorEventArgs : Exception -&gt; System.Web.UI.WebControls.SendMailErrorEventArgs" Usage="new System.Web.UI.WebControls.SendMailErrorEventArgs e" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.Exception" /> contenant l'exception.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Serveur gestion des événements dans les Pages Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Gestion et déclenchement d'événements</related>
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Onglet Application outil Administration de Site Web</related>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception with get, set" Usage="System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retourne l’exception levée par un service de messagerie SMTP lorsqu’un e-mail ne peut pas être envoyé.</summary>
        <value>Objet <see cref="T:System.Exception" /> qui contient l'exception.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> propriété contient l’exception levée par le fournisseur de messagerie SMTP lorsqu’un message électronique ne peut pas être envoyé par le <xref:System.Web.UI.WebControls.ChangePassword> contrôle ou le <xref:System.Web.UI.WebControls.CreateUserWizard>. La raison la plus courante pour cette exception est une erreur de configuration dans le [ &lt;smtp&gt; , élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) du fichier de configuration machine, ce qui génère le message d’exception suivant : `The transport failed to connect to the server.`  
  
 Les exceptions sont levées pas s’il existe une erreur dans le message électronique lors de l’incorporation d’un fichier en utilisant <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>. Au lieu de cela, le fichier incorporé apparaît interrompu lorsque le message électronique est affiché.  
  
 Vous devez définir le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> objet passé en tant que le `e` paramètre de <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>à `true` pour signaler que l’exception a été gérée ; sinon, l’exception est levée de nouveau et inclut le message d’erreur et de la pile d’appel d’origine.  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui utilise un <xref:System.Web.UI.WebControls.ChangePassword> contrôle Web et inclut un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> événement nommé `SendMailError`. L’exemple de code suppose que le site Web ASP.NET a été configuré pour utiliser l’appartenance d’ASP.NET et l’authentification par formulaire, et qu’un utilisateur a été créé dont le nom et mot de passe vous connaissez. Pour plus d’informations, consultez [Comment : implémenter l’authentification par formulaire Simple](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Si la modification de mot de passe réussit, le code dans le `SendingMail` Gestionnaire d’événements essaie d’envoyer un message électronique à l’utilisateur pour confirmer la modification. SMTP doit déjà être configurée sur le serveur afin que cet exemple de code fonctionne. Pour plus d’informations sur la façon de configurer un serveur SMTP, consultez [NIB : Comment : installer et configurer les serveurs virtuels SMTP dans IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Dans le cadre de cet exemple, il n’est pas nécessaire de configurer un serveur SMTP ; l’exemple est construit pour tester un échec d’envoi d’un message électronique.  
  
 Si un serveur de messagerie n’est pas configuré correctement ou une autre erreur se produit et le message électronique ne peut pas être envoyé, le `SendMailError` fonction est appelée. Un message s’affiche à l’utilisateur. En outre, un événement est enregistré dans le journal des événements Windows en partant du principe qu’une source d’événements nommée MySamplesSite déjà existe. Consultez l’exemple de code ci-dessous pour créer la source d’événement spécifié. Pour plus d’informations sur la création d’une source d’événements, consultez [gestion des événements serveur dans les Pages Web Forms ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriété de la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objet est défini sur `true` pour indiquer que l’erreur a été gérée.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Utilisez l’exemple de code suivant si vous avez besoin ajouter par programmation de la source d’événements nommée MySamplesSite dans votre journal des applications. Cette source d’événements doit exister dans l’ordre pour le premier exemple de code fonctionne correctement. L’exemple de code suivant nécessite des privilèges d’administrateur.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Serveur gestion des événements dans les Pages Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Gestion et déclenchement d'événements</related>
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Onglet Application outil Administration de Site Web</related>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Web.UI.WebControls.SendMailErrorEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique si l'exception SMTP contenue dans la propriété <see cref="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" /> a été gérée.</summary>
        <value>Si la valeur est <see langword="true" />, l'exception est utilisée et gérée par le délégué <see cref="T:System.Web.UI.WebControls.SendMailErrorEventHandler" />. Si la valeur est <see langword="false" />, l'exception est levée de nouveau et inclut la pile des appels et le message d'erreur d'origine.  
  
La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriété indique si le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> a été gérée. L’exception est levée par le fournisseur de messagerie SMTP lorsqu’un message électronique ne peut pas être envoyé par le <xref:System.Web.UI.WebControls.ChangePassword> contrôle ou le <xref:System.Web.UI.WebControls.CreateUserWizard>. La raison la plus courante pour l’exception est une erreur de configuration dans le [ &lt;smtp&gt; , élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) du fichier de configuration machine. Bien qu’une erreur de cela est généralement découverts pendant le développement et débogage d’une application, les serveurs de messagerie peuvent échouer de façon inattendue dans un environnement de production, et vous devez déterminer si vous souhaitez que l’application entière échoue dans ce cas. Si ce n’est pas le cas, gérant l’événement permet à votre application continuer.  
  
 Si vous ne créez pas de gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> événement, ou si vous créez un gestionnaire d’événements, tout en conservant la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriété définie sur `false`, votre application Web cessent de s’exécuter si une erreur se produit lors de l’envoi d’un message électronique, et ASP.NET sera afficher un message d’erreur. Gestion de l’événement permet à votre application Web pour s’exécuter même si une exception s’est produite. Cela est utile lorsqu’il n’est pas critique pour envoyer un message électronique. Par exemple, si l’exception se produit lorsqu’un utilisateur parcourt un Assistant à plusieurs étapes, il peut être avantageux d’enregistrer l’erreur, afficher un message d’information à l’utilisateur et permettre à l’utilisateur terminer l’Assistant.  
  
   
  
## Examples  
 L’exemple de code suivant montre une page ASP.NET qui utilise un <xref:System.Web.UI.WebControls.ChangePassword> contrôle Web et inclut un gestionnaire d’événements pour le <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> événement nommé `SendMailError`. L’exemple de code suppose que le site Web ASP.NET a été configuré pour utiliser l’appartenance d’ASP.NET et l’authentification par formulaire, et qu’un utilisateur a été créé dont le nom et mot de passe vous connaissez. Pour plus d’informations, consultez [Comment : implémenter l’authentification par formulaire Simple](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Si la modification de mot de passe réussit, le code dans le `SendingMail` Gestionnaire d’événements essaie d’envoyer un message électronique à l’utilisateur pour confirmer la modification. SMTP doit déjà être configurée sur le serveur afin que cet exemple de code fonctionne. Pour plus d’informations sur la façon de configurer un serveur SMTP, consultez [NIB : Comment : installer et configurer les serveurs virtuels SMTP dans IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Dans le cadre de cet exemple, il n’est pas nécessaire de configurer un serveur SMTP ; l’exemple est construit pour tester un échec d’envoi d’un message électronique.  
  
 Si un serveur de messagerie n’est pas configuré correctement ou une autre erreur se produit et le message électronique ne peut pas être envoyé, le `SendMailError` fonction est appelée. Un message s’affiche à l’utilisateur. En outre, un événement est enregistré dans le journal des événements Windows en partant du principe qu’une source d’événements nommée MySamplesSite déjà existe. Consultez l’exemple de code ci-dessous pour créer la source d’événement spécifié. Pour plus d’informations sur la création d’une source d’événements, consultez [gestion des événements serveur dans les Pages Web Forms ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Le <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriété de la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objet est défini sur `true` pour indiquer que l’erreur a été gérée.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Utilisez l’exemple de code suivant si vous avez besoin ajouter par programmation de la source d’événements nommée MySamplesSite dans votre journal des applications. Cette source d’événements doit exister dans l’ordre pour le premier exemple de code fonctionne correctement. L’exemple de code suivant nécessite des privilèges d’administrateur.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Serveur gestion des événements dans les Pages Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Gestion et déclenchement d'événements</related>
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Onglet Application outil Administration de Site Web</related>
      </Docs>
    </Member>
  </Members>
</Type>