<Type Name="CompareValidator" FullName="System.Web.UI.WebControls.CompareValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8dc3f1f8d3f2ef79e0a11ae5dc9d846d9514a6b0" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39780398" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CompareValidator : System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompareValidator extends System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CompareValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class CompareValidator&#xA;Inherits BaseCompareValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompareValidator : System::Web::UI::WebControls::BaseCompareValidator" />
  <TypeSignature Language="F#" Value="type CompareValidator = class&#xA;    inherit BaseCompareValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseCompareValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:CompareValidator runat="server" ErrorMessage="CompareValidator"&gt;&lt;/{0}:CompareValidator&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:CompareValidator runat=server ErrorMessage="CompareValidator"&gt;&lt;/{0}:CompareValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Compare la valeur entrée par l’utilisateur dans un contrôle d’entrée à la valeur entrée dans un autre contrôle d’entrée, ou à une valeur constante.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.CompareValidator> contrôle à comparer la valeur entrée par l’utilisateur dans un contrôle d’entrée, tel qu’un <xref:System.Web.UI.WebControls.TextBox> contrôle, avec la valeur entrée dans un autre contrôle d’entrée ou une valeur constante. Le <xref:System.Web.UI.WebControls.CompareValidator> contrôle est validé, si la valeur du contrôle d’entrée correspond aux critères spécifiés par le <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>, <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>, et/ou <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> propriétés.  
  
 Vous pouvez également utiliser le <xref:System.Web.UI.WebControls.CompareValidator> contrôle pour indiquer si la valeur entrée dans un contrôle d’entrée peut être convertie au type de données spécifié par le <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> propriété.  
  
 Spécifier le contrôle d’entrée à valider en définissant le <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> propriété. Si vous souhaitez comparer un contrôle d’entrée spécifique avec un autre contrôle d’entrée, définissez le <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> propriété pour spécifier le contrôle à comparer.  
  
> [!NOTE]
>  Si la valeur entrée dans le contrôle d’entrée spécifié par le <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> propriété ne peut pas être convertie dans le type de données spécifié par le <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> propriété, mais la valeur entrée dans le contrôle d’entrée spécifié par le <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> propriété peut être convertie, le contrôle d’entrée en cours de validation est considéré comme valide. Par conséquent, vous devez également placer un <xref:System.Web.UI.WebControls.CompareValidator> ou <xref:System.Web.UI.WebControls.RangeValidator> contrôle sur le contrôle d’entrée spécifié par le <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> propriété.  
  
 Au lieu de comparer la valeur d’un contrôle d’entrée avec un autre contrôle d’entrée, vous pouvez comparer la valeur d’un contrôle d’entrée à une valeur constante. Spécifiez la valeur de constante à comparer en définissant le <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> propriété.  
  
> [!NOTE]
>  Si la valeur spécifiée par le <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> propriété ne peut pas être convertie dans le type de données spécifié par le <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> propriété, une exception est levée. Veillez à consulter le type de données d’une valeur avant de l’affecter par programmation à le <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> propriété.  
  
> [!NOTE]
>  Ne définissez pas les deux le <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> et <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> propriété en même temps. Vous pouvez comparer la valeur d’un contrôle d’entrée vers un autre contrôle d’entrée, ou sur une valeur constante. Si les deux propriétés sont définies, le <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> propriété est prioritaire.  
  
 Utilisez le <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> propriété pour spécifier le type de comparaison à effectuer, par exemple supérieur à, égal à, et ainsi de suite. Si vous définissez la <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> propriété `ValidationCompareOperator.DataTypeCheck`, le <xref:System.Web.UI.WebControls.CompareValidator> contrôle ignore la <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> et <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> propriétés et indique simplement si la valeur entrée dans le contrôle d’entrée peut être convertie au type de données spécifié par le <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> propriété.  
  
 Le <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> propriété est utilisée pour spécifier le type de données des deux valeurs de comparaison. Les deux valeurs sont automatiquement convertie en ce type de données avant l’opération de comparaison est effectuée.  
  
> [!IMPORTANT]
>  Lorsque le <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> propriété est définie sur <xref:System.Web.UI.WebControls.ValidationDataType.Date> et le type de calendrier actuel est non grégoriens, le validateur effectue la validation côté serveur uniquement. Le script client du validateur prend en charge que les calendriers grégorien.  
  
 Le tableau suivant répertorie les différents types de données qui peuvent être comparées.  
  
|Type de données|Description |  
|---------------|-----------------|  
|`String`|Type de données String.|  
|`Integer`|Type de données entier signé 32 bits.|  
|`Double`|Un type à virgule flottante double précision de données numérique.|  
|`Date`|Type de données date.|  
|`Currency`|Un type de données décimal. Il ne peut pas contenir les symboles monétaires.|  
  
> [!NOTE]
>  Si le contrôle d’entrée est vide, aucune fonction de validation est appelée et la validation réussit. Utilisez un <xref:System.Web.UI.WebControls.RequiredFieldValidator> contrôle pour obliger l’utilisateur à entrer des données dans le contrôle d’entrée.  
  
> [!NOTE]
>  Lorsque vous utilisez le <xref:System.Web.UI.WebControls.CompareValidator> contrôler à l’intérieur d’un <xref:System.Web.UI.UpdatePanel> contrôler, assurez-vous que le contrôle de validateur et le contrôle associé sont dans le même volet. Pour plus d’informations sur l’utilisation de la <xref:System.Web.UI.UpdatePanel> contrôler les mises à jour de page partielle, consultez [vue d’ensemble du rendu de Page partielle](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
 Pour plus d’informations sur les contrôles de validation, consultez <xref:System.Web.UI.WebControls.BaseValidator>.  
  
## <a name="accessibility"></a>Accessibilité  
 Pour plus d’informations sur la configuration de ce contrôle afin qu’il génère le balisage qui est conforme aux normes d’accessibilité, consultez [accessibilité dans Visual Studio et ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) et [les contrôles ASP.NET et l’accessibilité](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Web.UI.WebControls.CompareValidator> contrôle à comparer les valeurs de deux <xref:System.Web.UI.WebControls.TextBox> contrôles.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseCompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.TextBox" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.Operator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompareValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.CompareValidator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le constructeur par défaut rétablit les valeurs par défaut de tous les champs.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseCompareValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="compareValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> qui contient le flux de sortie pour la restitution sur le client.</param>
        <summary>Ajoute les attributs de ce contrôle au flux de sortie pour le rendu sur le client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.WebControls.CompareValidator.AddAttributesToRender%2A> méthode dans un contrôle serveur personnalisé afin que le <xref:System.Web.UI.WebControls.CompareValidator> message d’erreur apparaît toujours en gras.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[CustomCompareValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/CS/custom_comparevalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/VB/custom_comparevalidator_addattributestorendervb.aspx#1)]  
[!code-csharp[CustomCompareValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/CS/custom_comparevalidator_addattributestorender.cs#2)]
[!code-vb[CustomCompareValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/VB/custom_comparevalidator_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlPropertiesValid">
      <MemberSignature Language="C#" Value="protected override bool ControlPropertiesValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ControlPropertiesValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ControlPropertiesValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ControlPropertiesValid();" />
      <MemberSignature Language="F#" Value="override this.ControlPropertiesValid : unit -&gt; bool" Usage="compareValidator.ControlPropertiesValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Vérifie que les propriétés du contrôle contiennent des valeurs valides.</summary>
        <returns>
          <see langword="true" /> si les propriétés du contrôle sont valides ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid%2A> méthode dans un serveur personnalisé contrôle afin qu’elle retourne toujours la valeur de la propriété visible, tant que le <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> propriété de la <xref:System.Web.UI.WebControls.CompareValidator> contrôle se trouve sur la page et contient propriétés de validation.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[CustomCompareValidatorControlPropertiesValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/CS/custom_comparevalidator_controlpropertiesvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorControlPropertiesValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/VB/custom_comparevalidator_controlpropertiesvalidvb.aspx#1)]  
[!code-csharp[CustomCompareValidatorControlPropertiesValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/CS/custom_comparevalidator_controlpropertiesvalid.cs#2)]
[!code-vb[CustomCompareValidatorControlPropertiesValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/VB/custom_comparevalidator_controlpropertiesvalid.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Impossible de convertir la valeur d’une propriété cible pour obtenir le <see cref="T:System.Type" /> attendu.</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlToCompare">
      <MemberSignature Language="C#" Value="public string ControlToCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlToCompare" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlToCompare As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlToCompare { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlToCompare : string with get, set" Usage="System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ValidatedControlConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le contrôle d’entrée à comparer avec celui en cours de validation.</summary>
        <value>Contrôle d’entrée à comparer avec celui en cours de validation. La valeur par défaut est <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> propriété pour spécifier un contrôle d’entrée, comme un <xref:System.Web.UI.WebControls.TextBox> contrôle, à comparer avec le contrôle d’entrée en cours de validation. Si le contrôle d’entrée spécifié par cette propriété n’est pas un contrôle sur la page, une exception est levée.  
  
> [!NOTE]
>  Ne définissez pas les deux le <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> et <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> propriété en même temps. Vous pouvez comparer la valeur d’un contrôle d’entrée vers un autre contrôle d’entrée, ou sur une valeur constante. Si les deux propriétés sont définies, le <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> propriété est prioritaire.  
  
 Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A?displayProperty=nameWithType>.  
  
> [!IMPORTANT]
>  Si le contrôle à comparer est masqué ou est à l’intérieur d’un conteneur (comme un <xref:System.Web.UI.WebControls.Panel> contrôle) qui n’est pas visible, le validateur effectue la validation côté serveur uniquement. Le script client du validateur prend en charge uniquement les contrôles visibles.  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [thèmes ASP.NET et des apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> propriété pour spécifier le contrôle à comparer avec le contrôle en cours de validation.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
        <altmember cref="T:System.Web.UI.WebControls.TextBox" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberSignature Language="F#" Value="override this.EvaluateIsValid : unit -&gt; bool" Usage="compareValidator.EvaluateIsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, cette méthode contient le code qui détermine si la valeur dans le contrôle d’entrée est valide.</summary>
        <returns>
          <see langword="true" /> si la valeur dans le contrôle d’entrée est valide ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.WebControls.CompareValidator.EvaluateIsValid%2A> méthode dans un serveur personnalisé contrôle afin qu’elle retourne toujours `true` si les valeurs des deux contrôles spécifiés sont identiques et `false` dans le cas contraire.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[CustomCompareValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/CS/custom_comparevalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/VB/custom_comparevalidator_evaluateisvalidvb.aspx#1)]  
[!code-csharp[CustomCompareValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/CS/custom_comparevalidator_evaluateisvalid.cs#2)]
[!code-vb[CustomCompareValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/VB/custom_comparevalidator_evaluateisvalid.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationCompareOperator Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationCompareOperator Operator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As ValidationCompareOperator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidationCompareOperator Operator { System::Web::UI::WebControls::ValidationCompareOperator get(); void set(System::Web::UI::WebControls::ValidationCompareOperator value); };" />
      <MemberSignature Language="F#" Value="member this.Operator : System.Web.UI.WebControls.ValidationCompareOperator with get, set" Usage="System.Web.UI.WebControls.CompareValidator.Operator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationCompareOperator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’opération de comparaison à effectuer.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />. La valeur par défaut est <see langword="Equal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> propriété pour spécifier l’opération de comparaison à effectuer. Le tableau suivant répertorie les opérations de comparaison sont possibles.  
  
|Opération|Description |  
|---------------|-----------------|  
|`Equal`|Comparaison d’égalité entre les valeurs du contrôle d’entrée en cours de validation et un autre contrôle ou une valeur constante.|  
|`NotEqual`|Comparaison d’inégalité entre les valeurs du contrôle d’entrée en cours de validation et un autre contrôle ou une valeur constante.|  
|`GreaterThan`|Comparaison de supériorité entre les valeurs du contrôle d’entrée en cours de validation et un autre contrôle ou une valeur constante.|  
|`GreaterThanEqual`|Comparaison de supérieur ou égal à entre les valeurs du contrôle d’entrée en cours de validation et un autre contrôle ou une valeur constante.|  
|`LessThan`|Comparaison d’infériorité entre les valeurs du contrôle d’entrée en cours de validation et un autre contrôle ou une valeur constante.|  
|`LessThanEqual`|Comparaison d’inférieur ou égal à entre les valeurs du contrôle d’entrée en cours de validation et un autre contrôle ou une valeur constante.|  
|`DataTypeCheck`|Une comparaison de type de données de la valeur entrée dans le contrôle d’entrée en cours de validation et le type de données spécifié par le <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> propriété. La validation échoue si la valeur ne peut pas être convertie en type de données spécifié. **Remarque :** le <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> et <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> propriétés sont ignorées lorsque cet opérateur est utilisé.|  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [thèmes ASP.NET et des apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> propriété pour spécifier l’opération de comparaison.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'opérateur de comparaison spécifié ne fait pas partie des valeurs <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
      </Docs>
    </Member>
    <Member MemberName="ValueToCompare">
      <MemberSignature Language="C#" Value="public string ValueToCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueToCompare" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueToCompare As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValueToCompare { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValueToCompare : string with get, set" Usage="System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur de constante à comparer à la valeur entrée par l’utilisateur dans le contrôle d’entrée en cours de validation.</summary>
        <value>Valeur de constante à comparer à la valeur entrée par l’utilisateur dans le contrôle d’entrée en cours de validation. La valeur par défaut est <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> propriété pour spécifier une valeur constante à comparer avec la valeur entrée par l’utilisateur dans le contrôle d’entrée en cours de validation. Si la valeur de constante spécifiée par cette propriété ne parvient pas à convertir en type de données spécifié par le <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> propriété, une exception est levée.  
  
> [!NOTE]
>  Ne définissez pas les deux le <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> et <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> propriété en même temps. Vous pouvez comparer la valeur d’un contrôle d’entrée vers un autre contrôle d’entrée, ou sur une valeur constante. Si les deux propriétés sont définies, le <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> propriété est prioritaire.  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [thèmes ASP.NET et des apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> propriété à comparer la valeur entrée par l’utilisateur dans un <xref:System.Web.UI.WebControls.TextBox> contrôle avec une valeur constante.  
  
> [!IMPORTANT]
>  Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic CompareValidator.ValueToCompare Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator.ValueToCompare Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator.ValueToCompare Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator.ValueToCompare Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>