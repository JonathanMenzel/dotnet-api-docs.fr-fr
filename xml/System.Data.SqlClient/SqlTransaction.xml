<Type Name="SqlTransaction" FullName="System.Data.SqlClient.SqlTransaction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4afdaffc0b1a085534e72bc3a363851d941988a6" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40212128" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlTransaction : System.Data.Common.DbTransaction, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTransaction extends System.Data.Common.DbTransaction implements class System.Data.IDbTransaction, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTransaction&#xA;Inherits DbTransaction&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlTransaction sealed : System::Data::Common::DbTransaction, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlTransaction = class&#xA;    inherit DbTransaction&#xA;    interface IDbTransaction&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbTransaction</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="905e2-101">Représente une transaction Transact-SQL à exécuter dans une base de données SQL Server.</span>
      <span class="sxs-lookup">
        <span data-stu-id="905e2-101">Represents a Transact-SQL transaction to be made in a SQL Server database.</span>
      </span>
      <span data-ttu-id="905e2-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="905e2-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="905e2-103">L’application crée un <xref:System.Data.SqlClient.SqlTransaction> objet en appelant <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> sur la <xref:System.Data.SqlClient.SqlConnection> objet.</span><span class="sxs-lookup"><span data-stu-id="905e2-103">The application creates a <xref:System.Data.SqlClient.SqlTransaction> object by calling <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> on the <xref:System.Data.SqlClient.SqlConnection> object.</span></span> <span data-ttu-id="905e2-104">Toutes les opérations suivantes associées à la transaction (par exemple, la validation ou l’abandon de la transaction) sont effectuées sur le <xref:System.Data.SqlClient.SqlTransaction> objet.</span><span class="sxs-lookup"><span data-stu-id="905e2-104">All subsequent operations associated with the transaction (for example, committing or aborting the transaction), are performed on the <xref:System.Data.SqlClient.SqlTransaction> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="905e2-105">`Try`/`Catch` gestion des exceptions doivent toujours être utilisée lors de la validation ou la restauration une <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="905e2-105">`Try`/`Catch` exception handling should always be used when committing or rolling back a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="905e2-106">Les deux <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> et <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> générer un <xref:System.InvalidOperationException> si la connexion est terminée ou si la transaction a déjà été restaurée sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="905e2-106">Both <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generate an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="905e2-107">Pour plus d’informations sur les transactions SQL Server, consultez [Transactions explicites](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx) et [codage des Transactions performantes](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx).</span><span class="sxs-lookup"><span data-stu-id="905e2-107">For more information on SQL Server transactions, see [Explicit Transactions](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx) and [Coding Efficient Transactions](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="905e2-108">L’exemple suivant crée un <xref:System.Data.SqlClient.SqlConnection> et un <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="905e2-108">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="905e2-109">Il montre également comment utiliser le <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, et <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="905e2-109">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="905e2-110">La transaction est restaurée en cas d’erreur, ou si elle est supprimée sans avoir été validée.</span><span class="sxs-lookup"><span data-stu-id="905e2-110">The transaction is rolled back on any error, or if it is disposed without first being committed.</span></span> <span data-ttu-id="905e2-111">`Try`/`Catch` gestion des erreurs sont utilisée pour gérer les erreurs lorsque vous tentez de valider ou restaurer la transaction.</span><span class="sxs-lookup"><span data-stu-id="905e2-111">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberSignature Language="F#" Value="override this.Commit : unit -&gt; unit" Usage="sqlTransaction.Commit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbTransaction.Commit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="905e2-112">Valide la transaction de base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-112">Commits the database transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="905e2-113">Le <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> méthode est équivalente à l’instruction Transact-SQL COMMIT TRANSACTION.</span><span class="sxs-lookup"><span data-stu-id="905e2-113">The <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> method is equivalent to the Transact-SQL COMMIT TRANSACTION statement.</span></span> <span data-ttu-id="905e2-114">Vous ne pouvez pas restaurer une transaction une fois qu’elle a été validée, car toutes les modifications sont devenues permanentes dans la base de données.</span><span class="sxs-lookup"><span data-stu-id="905e2-114">You cannot roll back a transaction once it has been committed, because all modifications have become a permanent part of the database.</span></span> <span data-ttu-id="905e2-115">Pour plus d’informations, consultez [COMMIT TRANSACTION (Transact-SQL) ](/sql/t-sql/language-elements/commit-transaction-transact-sql).</span><span class="sxs-lookup"><span data-stu-id="905e2-115">For more information, see [COMMIT TRANSACTION (Transact-SQL) ](/sql/t-sql/language-elements/commit-transaction-transact-sql).</span></span>
  
> [!NOTE]
>  <span data-ttu-id="905e2-116">`Try`/`Catch` gestion des exceptions doivent toujours être utilisée lors de la validation ou la restauration une <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="905e2-116">`Try`/`Catch` exception handling should always be used when committing or rolling back a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="905e2-117">Les deux `Commit` et <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> génère une <xref:System.InvalidOperationException> si la connexion est terminée ou si la transaction a déjà été restaurée sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="905e2-117">Both `Commit` and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="905e2-118">Pour plus d’informations sur les transactions SQL Server, consultez [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).</span><span class="sxs-lookup"><span data-stu-id="905e2-118">For more information on SQL Server transactions, see [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="905e2-119">L’exemple suivant crée un <xref:System.Data.SqlClient.SqlConnection> et un <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="905e2-119">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="905e2-120">Il montre également comment utiliser le <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, et <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="905e2-120">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="905e2-121">La transaction est restaurée en cas d’erreur.</span><span class="sxs-lookup"><span data-stu-id="905e2-121">The transaction is rolled back on any error.</span></span> <span data-ttu-id="905e2-122">`Try`/`Catch` gestion des erreurs sont utilisée pour gérer les erreurs lorsque vous tentez de valider ou restaurer la transaction.</span><span class="sxs-lookup"><span data-stu-id="905e2-122">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="905e2-123">Une erreur s’est produite lors de la tentative de validation de la transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-123">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="905e2-124">La transaction a déjà été validée ou annulée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-124">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="905e2-125">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-125">-or-</span>
          </span>
          <span data-ttu-id="905e2-126">La connexion est interrompue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-126">The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.SqlClient.SqlConnection" Usage="System.Data.SqlClient.SqlTransaction.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="905e2-127">Obtient l'objet <see cref="T:System.Data.SqlClient.SqlConnection" /> associé à la transaction, ou <see langword="null" /> si la transaction n'est plus valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-127">Gets the <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction, or <see langword="null" /> if the transaction is no longer valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="905e2-128">L’objet <see cref="T:System.Data.SqlClient.SqlConnection" /> associé à la transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-128">The <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="905e2-129">Une application unique peut avoir plusieurs connexions de base de données, chacune avec zéro ou plusieurs transactions.</span><span class="sxs-lookup"><span data-stu-id="905e2-129">A single application may have multiple database connections, each with zero or more transactions.</span></span> <span data-ttu-id="905e2-130">Cette propriété vous permet de déterminer l’objet de connexion associé à une transaction particulière créée par <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</span><span class="sxs-lookup"><span data-stu-id="905e2-130">This property lets you determine the connection object associated with a particular transaction created by <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection" Usage="System.Data.SqlClient.SqlTransaction.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="sqlTransaction.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlTransaction.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public override System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::IsolationLevel IsolationLevel { System::Data::IsolationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.IsolationLevel : System.Data.IsolationLevel" Usage="System.Data.SqlClient.SqlTransaction.IsolationLevel" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbTransaction.IsolationLevel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="905e2-131">Spécifie <see cref="T:System.Data.IsolationLevel" /> pour cette transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-131">Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="905e2-132">
            <see cref="T:System.Data.IsolationLevel" /> pour cette transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-132">The <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span>
          </span>
          <span data-ttu-id="905e2-133">La valeur par défaut est <see langword="ReadCommitted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-133">The default is <see langword="ReadCommitted" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="905e2-134">Les transactions parallèles ne sont pas prises en charge.</span><span class="sxs-lookup"><span data-stu-id="905e2-134">Parallel transactions are not supported.</span></span> <span data-ttu-id="905e2-135">Par conséquent, le <xref:System.Data.IsolationLevel> s’applique à toute la transaction.</span><span class="sxs-lookup"><span data-stu-id="905e2-135">Therefore, the <xref:System.Data.IsolationLevel> applies to the whole transaction.</span></span>  
  
 <span data-ttu-id="905e2-136">Pour plus d’informations sur les niveaux d’isolation de SQL Server, consultez [niveaux d’Isolation des transactions](/sql/t-sql/language-elements/transaction-isolation-levels).</span><span class="sxs-lookup"><span data-stu-id="905e2-136">For more information on SQL Server isolation levels, see [Transaction Isolation Levels](/sql/t-sql/language-elements/transaction-isolation-levels).</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rollback">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="905e2-137">Annule une transaction à partir d’un état d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-137">Rolls back a transaction from a pending state.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Rollback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback();" />
      <MemberSignature Language="F#" Value="override this.Rollback : unit -&gt; unit" Usage="sqlTransaction.Rollback " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbTransaction.Rollback</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="905e2-138">Annule une transaction à partir d’un état d’attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-138">Rolls back a transaction from a pending state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="905e2-139">Le <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> méthode est équivalente à l’instruction Transact-SQL ROLLBACK TRANSACTION.</span><span class="sxs-lookup"><span data-stu-id="905e2-139">The <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</span></span> <span data-ttu-id="905e2-140">Pour plus d’informations, consultez [ROLLBACK TRANSACTION (Transact-SQL) ](/sql/t-sql/language-elements/rollback-transaction-transact-sql).</span><span class="sxs-lookup"><span data-stu-id="905e2-140">For more information, see [ROLLBACK TRANSACTION (Transact-SQL) ](/sql/t-sql/language-elements/rollback-transaction-transact-sql).</span></span>
  
 <span data-ttu-id="905e2-141">La transaction ne peut être restaurée à partir d’un état d’attente (après <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> a été appelée, mais avant que <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> est appelée).</span><span class="sxs-lookup"><span data-stu-id="905e2-141">The transaction can only be rolled back from a pending state (after <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> is called).</span></span> <span data-ttu-id="905e2-142">La transaction est restaurée, revenez dans le cas elle est supprimée avant `Commit` ou `Rollback` est appelée.</span><span class="sxs-lookup"><span data-stu-id="905e2-142">The transaction is rolled back in the event it is disposed before `Commit` or `Rollback` is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="905e2-143">`Try`/`Catch` gestion des exceptions doivent toujours être utilisée lors de la restauration d’une transaction.</span><span class="sxs-lookup"><span data-stu-id="905e2-143">`Try`/`Catch` exception handling should always be used when rolling back a transaction.</span></span> <span data-ttu-id="905e2-144">Un `Rollback` génère une <xref:System.InvalidOperationException> si la connexion est terminée ou si la transaction a déjà été restaurée sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="905e2-144">A `Rollback` generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="905e2-145">Pour plus d’informations sur les transactions SQL Server, consultez [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).</span><span class="sxs-lookup"><span data-stu-id="905e2-145">For more information on SQL Server transactions, see [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="905e2-146">L’exemple suivant crée un <xref:System.Data.SqlClient.SqlConnection> et un <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="905e2-146">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="905e2-147">Il montre également comment utiliser le <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, et <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="905e2-147">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="905e2-148">La transaction est restaurée en cas d’erreur.</span><span class="sxs-lookup"><span data-stu-id="905e2-148">The transaction is rolled back on any error.</span></span> <span data-ttu-id="905e2-149">`Try`/`Catch` gestion des erreurs sont utilisée pour gérer les erreurs lorsque vous tentez de valider ou restaurer la transaction.</span><span class="sxs-lookup"><span data-stu-id="905e2-149">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="905e2-150">Une erreur s’est produite lors de la tentative de validation de la transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-150">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="905e2-151">La transaction a déjà été validée ou annulée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-151">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="905e2-152">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-152">-or-</span>
          </span>
          <span data-ttu-id="905e2-153">La connexion est interrompue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-153">The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rollback(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rollback (transactionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.Rollback : string -&gt; unit" Usage="sqlTransaction.Rollback transactionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName">
          <span data-ttu-id="905e2-154">Nom de la transaction à restaurer ou du point d'enregistrement jusqu'auquel la transaction doit être restaurée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-154">The name of the transaction to roll back, or the savepoint to which to roll back.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="905e2-155">Restaure une transaction à partir d'un état d'attente et spécifie le nom de la transaction ou du point d'enregistrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-155">Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="905e2-156">Le <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> méthode est équivalente à l’instruction Transact-SQL ROLLBACK TRANSACTION.</span><span class="sxs-lookup"><span data-stu-id="905e2-156">The <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</span></span> <span data-ttu-id="905e2-157">Pour plus d’informations, consultez [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).</span><span class="sxs-lookup"><span data-stu-id="905e2-157">For more information, see [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).</span></span>  
  
 <span data-ttu-id="905e2-158">La transaction ne peut être restaurée à partir d’un état d’attente (après <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> a été appelée, mais avant que <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> est appelée).</span><span class="sxs-lookup"><span data-stu-id="905e2-158">The transaction can only be rolled back from a pending state (after <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> is called).</span></span> <span data-ttu-id="905e2-159">La transaction est restaurée si elle est supprimée avant `Commit` ou `Rollback` est appelée.</span><span class="sxs-lookup"><span data-stu-id="905e2-159">The transaction is rolled back if it is disposed before `Commit` or `Rollback` is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="905e2-160">`Try`/`Catch` gestion des exceptions doivent toujours être utilisée lors de la restauration d’une transaction.</span><span class="sxs-lookup"><span data-stu-id="905e2-160">`Try`/`Catch` exception handling should always be used when rolling back a transaction.</span></span> <span data-ttu-id="905e2-161">Un `Rollback` génère une <xref:System.InvalidOperationException> si la connexion est terminée ou si la transaction a déjà été restaurée sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="905e2-161">A `Rollback` generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="905e2-162">Pour plus d’informations sur les transactions SQL Server, consultez [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).</span><span class="sxs-lookup"><span data-stu-id="905e2-162">For more information on SQL Server transactions, see [Transactions (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="905e2-163">L’exemple suivant crée un <xref:System.Data.SqlClient.SqlConnection> et un <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="905e2-163">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="905e2-164">Il montre également comment utiliser le <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, et <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="905e2-164">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="905e2-165">La transaction est restaurée en cas d’erreur.</span><span class="sxs-lookup"><span data-stu-id="905e2-165">The transaction is rolled back on any error.</span></span> <span data-ttu-id="905e2-166">`Try`/`Catch` gestion des erreurs sont utilisée pour gérer les erreurs lorsque vous tentez de valider ou restaurer la transaction.</span><span class="sxs-lookup"><span data-stu-id="905e2-166">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="905e2-167">Aucun nom de transaction n'a été spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-167">No transaction name was specified.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="905e2-168">La transaction a déjà été validée ou annulée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-168">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="905e2-169">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-169">-or-</span>
          </span>
          <span data-ttu-id="905e2-170">La connexion est interrompue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-170">The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string savePointName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string savePointName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (savePointName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ savePointName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="sqlTransaction.Save savePointName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savePointName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="savePointName">
          <span data-ttu-id="905e2-171">Nom du point d'enregistrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-171">The name of the savepoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="905e2-172">Crée un point d'enregistrement dans la transaction pouvant être utilisé pour restaurer une partie de la transaction et spécifie le nom de ce point d'enregistrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-172">Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="905e2-173"><xref:System.Data.SqlClient.SqlTransaction.Save%2A> méthode est équivalente à l’instruction SAVE TRANSACTION Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="905e2-173"><xref:System.Data.SqlClient.SqlTransaction.Save%2A> method is equivalent to the Transact-SQL SAVE TRANSACTION statement.</span></span>  
  
 <span data-ttu-id="905e2-174">La valeur utilisée dans le `savePoint` paramètre peut être la même valeur utilisée dans le `transactionName` paramètre de certaines implémentations de la <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="905e2-174">The value used in the `savePoint` parameter can be the same value used in the `transactionName` parameter of some implementations of the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> method.</span></span>  
  
 <span data-ttu-id="905e2-175">Points d’enregistrement offrent un mécanisme permettant de restaurer des parties de transactions.</span><span class="sxs-lookup"><span data-stu-id="905e2-175">Savepoints offer a mechanism to roll back parts of transactions.</span></span> <span data-ttu-id="905e2-176">Vous créez un point d’enregistrement à l’aide de la <xref:System.Data.SqlClient.SqlTransaction.Save%2A> (méthode) et appelez ensuite la <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> méthode pour restaurer le point de sauvegarde au lieu de revenir au début de la transaction.</span><span class="sxs-lookup"><span data-stu-id="905e2-176">You create a savepoint using the <xref:System.Data.SqlClient.SqlTransaction.Save%2A> method, and then later call the <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method to roll back to the savepoint instead of rolling back to the start of the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="905e2-177">Une erreur s’est produite lors de la tentative de validation de la transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-177">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="905e2-178">La transaction a déjà été validée ou annulée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-178">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="905e2-179">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-179">-or-</span>
          </span>
          <span data-ttu-id="905e2-180">La connexion est interrompue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="905e2-180">The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>