<Type Name="SqlBulkCopyColumnMapping" FullName="System.Data.SqlClient.SqlBulkCopyColumnMapping">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9db19ab218360d8104e0ddbaed3b9c80a72f202a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36680732" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlBulkCopyColumnMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlBulkCopyColumnMapping extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlBulkCopyColumnMapping" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlBulkCopyColumnMapping sealed" />
  <TypeSignature Language="F#" Value="type SqlBulkCopyColumnMapping = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Définit le mappage entre une colonne dans la source de données d'une instance de <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> et une colonne dans la table de destination de l'instance.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mappages de colonnes définissent le mappage entre la source de données et la table cible.  
  
 Si les mappages ne sont pas définis, autrement dit, la <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> la collection est vide, les colonnes sont mappées implicitement selon la position ordinale. Pour ce faire, les schémas source et cible doivent correspondre. Le cas contraire, un <xref:System.InvalidOperationException> sera levée.  
  
 Si le <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection n’est pas vide, pas toutes les colonnes présentes dans la source de données doit être spécifié. Celles qui sont ne pas mappées par la collection sont ignorés.  
  
 Vous pouvez faire référence aux colonnes source et cible par nom ou par ordinal. Vous pouvez également combiner par nom et les références de colonne de par ordinal dans la même collection de mappages.  
  
   
  
## Examples  
 Le bloc d’exemple suivant copie les données à partir d’une table source dans le **AdventureWorks** base de données exemple dans une table de destination dans la même base de données. Bien que le nombre de colonnes dans la destination correspond au nombre de colonnes dans la source, et chaque colonne de destination dans la même position ordinale que sa colonne source correspondante, les noms de colonnes ne correspondent pas. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objets sont utilisés pour créer un mappage de colonnes pour la copie en bloc.  
  
> [!IMPORTANT]
>  Cet exemple ne s’exécutera pas à moins que vous ayez créé les tables de travail comme décrit dans [configuration exemple de copie en bloc](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Ce code est fourni pour illustrer la syntaxe pour l’utilisation de **SqlBulkCopy** uniquement. Si les tables source et de destination sont dans la même instance de SQL Server, il est plus facile et plus rapide d’utiliser Transact-SQL `INSERT … SELECT` instruction pour copier les données.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMapping#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMapping#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopyColumnMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopyColumnMapping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Constructeur par défaut qui initialise un nouvel objet <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous utilisez ce constructeur, vous devez ensuite définir la source du mappage à l’aide de la <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn%2A> propriété ou le <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal%2A> propriété et définir la destination pour le mappage à l’aide la <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn%2A> propriété ou le <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal%2A> propriété.  
  
   
  
## Examples  
 Le bloc d’exemple suivant copie les données à partir d’une table source dans le **AdventureWorks** base de données exemple dans une table de destination dans la même base de données. Bien que le nombre de colonnes dans la destination correspond au nombre de colonnes dans la source, les noms de colonne et les positions ordinales ne correspondent pas. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objets sont utilisés pour créer un mappage de colonnes pour la copie en bloc.  
  
> [!IMPORTANT]
>  Cet exemple ne s’exécutera pas à moins que vous ayez créé les tables de travail comme décrit dans [configuration exemple de copie en bloc](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Ce code est fourni pour illustrer la syntaxe pour l’utilisation de **SqlBulkCopy** uniquement. Si les tables source et de destination sont dans la même instance de SQL Server, il est plus facile et plus rapide d’utiliser Transact-SQL `INSERT … SELECT` instruction pour copier les données.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMapping#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMapping#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopyColumnMapping (int sourceColumnOrdinal, int destinationOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 sourceColumnOrdinal, int32 destinationOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceColumnOrdinal As Integer, destinationOrdinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopyColumnMapping(int sourceColumnOrdinal, int destinationOrdinal);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopyColumnMapping : int * int -&gt; System.Data.SqlClient.SqlBulkCopyColumnMapping" Usage="new System.Data.SqlClient.SqlBulkCopyColumnMapping (sourceColumnOrdinal, destinationOrdinal)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceColumnOrdinal" Type="System.Int32" />
        <Parameter Name="destinationOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceColumnOrdinal">Position ordinale de la colonne source dans la source de données.</param>
        <param name="destinationOrdinal">Position ordinale de la colonne de destination dans la table de destination.</param>
        <summary>Crée un nouveau mappage de colonnes à l'aide de numéros de colonne pour faire référence aux colonnes source et de destination.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le bloc d’exemple suivant copie les données à partir d’une table source dans le **AdventureWorks** base de données exemple dans une table de destination dans la même base de données. Bien que le nombre de colonnes dans la destination correspond au nombre de colonnes dans la source, les noms de colonne et les positions ordinales ne correspondent pas. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objets sont utilisés pour créer un mappage de colonnes pour la copie en bloc selon les positions ordinales des colonnes.  
  
> [!IMPORTANT]
>  Cet exemple ne s’exécutera pas à moins que vous ayez créé les tables de travail comme décrit dans [configuration exemple de copie en bloc](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Ce code est fourni pour illustrer la syntaxe pour l’utilisation de **SqlBulkCopy** uniquement. Si les tables source et de destination sont dans la même instance de SQL Server, il est plus facile et plus rapide d’utiliser Transact-SQL `INSERT … SELECT` instruction pour copier les données.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopyColumnMapping (int sourceColumnOrdinal, string destinationColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 sourceColumnOrdinal, string destinationColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceColumnOrdinal As Integer, destinationColumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopyColumnMapping(int sourceColumnOrdinal, System::String ^ destinationColumn);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopyColumnMapping : int * string -&gt; System.Data.SqlClient.SqlBulkCopyColumnMapping" Usage="new System.Data.SqlClient.SqlBulkCopyColumnMapping (sourceColumnOrdinal, destinationColumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceColumnOrdinal" Type="System.Int32" />
        <Parameter Name="destinationColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceColumnOrdinal">Position ordinale de la colonne source dans la source de données.</param>
        <param name="destinationColumn">Nom de la colonne de destination dans la table de destination.</param>
        <summary>Crée un nouveau mappage de colonnes à l'aide d'un numéro de colonne pour faire référence à la colonne source et d'un nom de colonne pour la colonne cible.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le bloc d’exemple suivant copie les données à partir d’une table source dans le **AdventureWorks** base de données exemple dans une table de destination dans la même base de données. Bien que le nombre de colonnes dans la destination correspond au nombre de colonnes dans la source, les noms de colonne et les positions ordinales ne correspondent pas. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objets sont utilisés pour créer un mappage de colonnes pour la copie en bloc.  
  
> [!IMPORTANT]
>  Cet exemple ne s’exécutera pas à moins que vous ayez créé les tables de travail comme décrit dans [configuration exemple de copie en bloc](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Ce code est fourni pour illustrer la syntaxe pour l’utilisation de **SqlBulkCopy** uniquement. Si les tables source et de destination sont dans la même instance de SQL Server, il est plus facile et plus rapide d’utiliser Transact-SQL `INSERT … SELECT` instruction pour copier les données.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingOrdinalName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingOrdinalName/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingOrdinalName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingOrdinalName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopyColumnMapping (string sourceColumn, int destinationOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourceColumn, int32 destinationOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceColumn As String, destinationOrdinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopyColumnMapping(System::String ^ sourceColumn, int destinationOrdinal);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopyColumnMapping : string * int -&gt; System.Data.SqlClient.SqlBulkCopyColumnMapping" Usage="new System.Data.SqlClient.SqlBulkCopyColumnMapping (sourceColumn, destinationOrdinal)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="destinationOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceColumn">Nom de la colonne source dans la source de données.</param>
        <param name="destinationOrdinal">Position ordinale de la colonne de destination dans la table de destination.</param>
        <summary>Crée un nouveau mappage de colonnes à l'aide d'un nom de colonne pour faire référence à la colonne source et d'un numéro de colonne pour la colonne cible.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le bloc d’exemple suivant copie les données à partir d’une table source dans le **AdventureWorks** base de données exemple dans une table de destination dans la même base de données. Bien que le nombre de colonnes dans la destination correspond au nombre de colonnes dans la source, les noms de colonne et les positions ordinales ne correspondent pas. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objets sont utilisés pour créer un mappage de colonnes pour la copie en bloc.  
  
> [!IMPORTANT]
>  Cet exemple ne s’exécutera pas à moins que vous ayez créé les tables de travail comme décrit dans [configuration exemple de copie en bloc](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Ce code est fourni pour illustrer la syntaxe pour l’utilisation de **SqlBulkCopy** uniquement. Si les tables source et de destination sont dans la même instance de SQL Server, il est plus facile et plus rapide d’utiliser Transact-SQL `INSERT … SELECT` instruction pour copier les données.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingNameOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingNameOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingNameOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingNameOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopyColumnMapping (string sourceColumn, string destinationColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourceColumn, string destinationColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceColumn As String, destinationColumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopyColumnMapping(System::String ^ sourceColumn, System::String ^ destinationColumn);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopyColumnMapping : string * string -&gt; System.Data.SqlClient.SqlBulkCopyColumnMapping" Usage="new System.Data.SqlClient.SqlBulkCopyColumnMapping (sourceColumn, destinationColumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="destinationColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceColumn">Nom de la colonne source dans la source de données.</param>
        <param name="destinationColumn">Nom de la colonne de destination dans la table de destination.</param>
        <summary>Crée un nouveau mappage de colonnes à l'aide de noms de colonnes pour faire référence aux colonnes source et de destination.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le bloc d’exemple suivant copie les données à partir d’une table source dans le **AdventureWorks** base de données exemple dans une table de destination dans la même base de données. Bien que le nombre de colonnes dans la destination correspond au nombre de colonnes dans la source, les noms de colonne et les positions ordinales ne correspondent pas. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objets sont utilisés pour créer un mappage de colonnes pour la copie en bloc.  
  
> [!IMPORTANT]
>  Cet exemple ne s’exécutera pas à moins que vous ayez créé les tables de travail comme décrit dans [configuration exemple de copie en bloc](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Ce code est fourni pour illustrer la syntaxe pour l’utilisation de **SqlBulkCopy** uniquement. Si les tables source et de destination sont dans la même instance de SQL Server, il est plus facile et plus rapide d’utiliser Transact-SQL `INSERT … SELECT` instruction pour copier les données.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMapping#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMapping#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DestinationColumn">
      <MemberSignature Language="C#" Value="public string DestinationColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DestinationColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DestinationColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationColumn : string with get, set" Usage="System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nom de la colonne mappée dans la table de base de données de destination.</summary>
        <value>Valeur de chaîne de la propriété <see cref="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn%2A> et <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal%2A> propriétés s’excluent mutuellement. La dernière valeur définie est prioritaire.  
  
   
  
## Examples  
 Le bloc d’exemple suivant copie les données à partir d’une table source dans le **AdventureWorks** base de données exemple dans une table de destination dans la même base de données. Bien que le nombre de colonnes dans la destination correspond au nombre de colonnes dans la source, les noms de colonne et les positions ordinales ne correspondent pas. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objets sont utilisés pour créer un mappage de colonnes pour la copie en bloc.  
  
> [!IMPORTANT]
>  Cet exemple ne s’exécutera pas à moins que vous ayez créé les tables de travail comme décrit dans [configuration exemple de copie en bloc](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Ce code est fourni pour illustrer la syntaxe pour l’utilisation de **SqlBulkCopy** uniquement. Si les tables source et de destination sont dans la même instance de SQL Server, il est plus facile et plus rapide d’utiliser Transact-SQL `INSERT … SELECT` instruction pour copier les données.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingDestinationColumn#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationColumn/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingDestinationColumn#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationColumn/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DestinationOrdinal">
      <MemberSignature Language="C#" Value="public int DestinationOrdinal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DestinationOrdinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationOrdinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DestinationOrdinal { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationOrdinal : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Valeur ordinale de la colonne de destination dans la table de destination.</summary>
        <value>Valeur entière de la propriété <see cref="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal" />, ou -1 si la propriété n'a pas été définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn%2A> et <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal%2A> propriétés s’excluent mutuellement. La dernière valeur définie est prioritaire.  
  
   
  
## Examples  
 Le bloc d’exemple suivant copie les données à partir d’une table source dans le **AdventureWorks** base de données exemple dans une table de destination dans la même base de données. Bien que le nombre de colonnes dans la destination correspond au nombre de colonnes dans la source, les noms de colonne et les positions ordinales ne correspondent pas. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objets sont utilisés pour créer un mappage de colonnes pour la copie en bloc.  
  
> [!IMPORTANT]
>  Cet exemple ne s’exécutera pas à moins que vous ayez créé les tables de travail comme décrit dans [configuration exemple de copie en bloc](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Ce code est fourni pour illustrer la syntaxe pour l’utilisation de **SqlBulkCopy** uniquement. Si les tables source et de destination sont dans la même instance de SQL Server, il est plus facile et plus rapide d’utiliser Transact-SQL `INSERT … SELECT` instruction pour copier les données.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nom de la colonne qui est mappée dans la source de données.</summary>
        <value>Valeur de chaîne de la propriété <see cref="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn%2A> et <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal%2A> propriétés s’excluent mutuellement. La dernière valeur définie est prioritaire.  
  
   
  
## Examples  
 Le bloc d’exemple suivant copie les données à partir d’une table source dans le **AdventureWorks** base de données exemple dans une table de destination dans la même base de données. Bien que le nombre de colonnes dans la destination correspond au nombre de colonnes dans la source, les noms de colonne et les positions ordinales ne correspondent pas. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objets sont utilisés pour créer un mappage de colonnes pour la copie en bloc.  
  
> [!IMPORTANT]
>  Cet exemple ne s’exécutera pas à moins que vous ayez créé les tables de travail comme décrit dans [configuration exemple de copie en bloc](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Ce code est fourni pour illustrer la syntaxe pour l’utilisation de **SqlBulkCopy** uniquement. Si les tables source et de destination sont dans la même instance de SQL Server, il est plus facile et plus rapide d’utiliser Transact-SQL `INSERT … SELECT` instruction pour copier les données.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingDestinationColumn#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationColumn/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingDestinationColumn#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationColumn/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceOrdinal">
      <MemberSignature Language="C#" Value="public int SourceOrdinal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SourceOrdinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceOrdinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SourceOrdinal { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SourceOrdinal : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Position ordinale de la colonne source dans la source de données.</summary>
        <value>Valeur entière de la propriété <see cref="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn%2A> et <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal%2A> propriétés s’excluent mutuellement. La dernière valeur définie est prioritaire.  
  
   
  
## Examples  
 Le bloc d’exemple suivant copie les données à partir d’une table source dans le **AdventureWorks** base de données exemple dans une table de destination dans la même base de données. Bien que le nombre de colonnes dans la destination correspond au nombre de colonnes dans la source, les noms de colonne et les positions ordinales ne correspondent pas. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objets sont utilisés pour créer un mappage de colonnes pour la copie en bloc.  
  
> [!IMPORTANT]
>  Cet exemple ne s’exécutera pas à moins que vous ayez créé les tables de travail comme décrit dans [configuration exemple de copie en bloc](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Ce code est fourni pour illustrer la syntaxe pour l’utilisation de **SqlBulkCopy** uniquement. Si les tables source et de destination sont dans la même instance de SQL Server, il est plus facile et plus rapide d’utiliser Transact-SQL `INSERT … SELECT` instruction pour copier les données.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingDestinationOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>