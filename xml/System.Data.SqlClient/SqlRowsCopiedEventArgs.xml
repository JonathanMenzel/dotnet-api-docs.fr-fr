<Type Name="SqlRowsCopiedEventArgs" FullName="System.Data.SqlClient.SqlRowsCopiedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a47f14929df592702646e24a5c879bcca9f35e43" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30388473" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlRowsCopiedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlRowsCopiedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlRowsCopiedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlRowsCopiedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlRowsCopiedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente le jeu d'arguments passé à <see cref="T:System.Data.SqlClient.SqlRowsCopiedEventHandler" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlRowsCopiedEventArgs (long rowsCopied);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 rowsCopied) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rowsCopied As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlRowsCopiedEventArgs(long rowsCopied);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rowsCopied" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="rowsCopied">
          <see cref="T:System.Int64" /> qui indique le nombre de lignes copiées pendant l'opération de copie en bloc en cours.</param>
        <summary>Crée une nouvelle instance de l'objet <see cref="T:System.Data.SqlClient.SqlRowsCopiedEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la `rowsCopied` paramètre est réinitialisé à chaque appel à l’une de le `SqlBulkCopy.WriteToServer` méthodes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public bool Abort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Abort" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Property Abort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Abort { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si l'opération de copie en bloc doit être abandonnée.</summary>
        <value>
          <see langword="true" /> si l'opération de copie en bloc doit être abandonnée ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> propriété Annuler une opération de copie en bloc. Définissez <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> à `true` pour abandonner l’opération de copie en bloc.  
  
 Si vous appelez le **fermer** méthode à partir de <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied>, une exception est générée et le <xref:System.Data.SqlClient.SqlBulkCopy> état de l’objet ne change pas.  
  
 Si une application crée spécifiquement un <xref:System.Data.SqlClient.SqlTransaction> de l’objet dans le <xref:System.Data.SqlClient.SqlCommand> constructeur, la transaction n'est pas restaurée. L’application est chargée de déterminer si elle est nécessaire pour restaurer l’opération, et dans ce cas, il doit appeler la <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A?displayProperty=nameWithType> (méthode). Si l’application ne crée pas une transaction, la transaction interne correspondant au lot en cours est automatiquement restaurée. Toutefois, les modifications relatives aux lots précédents dans l’opération de copie en bloc sont conservées, car les transactions déjà leur ont été validées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowsCopied">
      <MemberSignature Language="C#" Value="public long RowsCopied { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RowsCopied" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowsCopied As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RowsCopied { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui retourne le nombre de lignes copiées pendant l'opération de copie en bloc en cours.</summary>
        <value>
          <see langword="int" /> qui retourne le nombre de lignes copiées.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied%2A> propriété est réinitialisée à chaque appel à la `SqlBulkCopy.WriteToServer` méthodes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>