<Type Name="SqlClientPermission" FullName="System.Data.SqlClient.SqlClientPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a3a261d424bc159d60d3f1ab23ad93af0cbb4aa3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36680290" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlClientPermission : System.Data.Common.DBDataPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlClientPermission extends System.Data.Common.DBDataPermission" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlClientPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlClientPermission&#xA;Inherits DBDataPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlClientPermission sealed : System::Data::Common::DBDataPermission" />
  <TypeSignature Language="F#" Value="type SqlClientPermission = class&#xA;    inherit DBDataPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DBDataPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Permet au fournisseur de données .NET Framework pour SQL Server de garantir à l'utilisateur un niveau de sécurité suffisant pour l'accès à une source de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> propriété est prioritaire sur la <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> propriété. Par conséquent, si vous définissez <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> à `false`, vous devez également définir <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> à `false` pour empêcher un utilisateur d’établir une connexion à l’aide d’un mot de passe vide.  
  
> [!NOTE]
>  Lorsque vous utilisez des autorisations de sécurité d’accès au code pour ADO.NET, le modèle correct consiste à commencer par le cas le plus restrictif (aucune autorisation), puis ajoutez les autorisations spécifiques qui sont nécessaires pour la tâche particulière que le code doit exécuter. Le modèle opposé, en commençant par toutes les autorisations, puis tenter de refuser une autorisation spécifique n’est pas sécurisé, car il existe de nombreuses manières d’exprimer la même chaîne de connexion. Par exemple, si vous démarrez avec toutes les autorisations, puis refusez l'utilisation de la chaîne de connexion "server=someserver", vous pouvez continuer à utiliser "server=someserver.mycompany.com". En démarrant toujours en n'accordant aucune autorisation, vous limitez les risques de failles dans le jeu d'autorisations.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("SqlClientPermission() has been deprecated.  Use the SqlClientPermission(PermissionState.None) constructor.  http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlClientPermission : System.Security.Permissions.PermissionState -&gt; System.Data.SqlClient.SqlClientPermission" Usage="new System.Data.SqlClient.SqlClientPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state, bool allowBlankPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState, allowBlankPassword As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission(System::Security::Permissions::PermissionState state, bool allowBlankPassword);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlClientPermission : System.Security.Permissions.PermissionState * bool -&gt; System.Data.SqlClient.SqlClientPermission" Usage="new System.Data.SqlClient.SqlClientPermission (state, allowBlankPassword)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("SqlClientPermission(PermissionState state, Boolean allowBlankPassword) has been deprecated.  Use the SqlClientPermission(PermissionState.None) constructor.  http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
        <Parameter Name="allowBlankPassword" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="state">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</param>
        <param name="allowBlankPassword">Indique si un mot de passe vide est autorisé.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.Permissions.PermissionState> énumération est prioritaire sur la <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> propriété. Par conséquent, si vous définissez <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> à `false`, vous devez également définir <xref:System.Security.Permissions.PermissionState> à `None` pour empêcher un utilisateur d’établir une connexion à l’aide d’un mot de passe vide. Pour obtenir un exemple montrant comment utiliser les demandes de sécurité, consultez [sécurité d’accès du Code et ADO.NET](~/docs/framework/data/adonet/code-access-security.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Add(string connectionString, string restrictions, valuetype System.Data.KeyRestrictionBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Add (connectionString As String, restrictions As String, behavior As KeyRestrictionBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Add(System::String ^ connectionString, System::String ^ restrictions, System::Data::KeyRestrictionBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Add : string * string * System.Data.KeyRestrictionBehavior -&gt; unit" Usage="sqlClientPermission.Add (connectionString, restrictions, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="restrictions" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.KeyRestrictionBehavior" />
      </Parameters>
      <Docs>
        <param name="connectionString">Chaîne de connexion</param>
        <param name="restrictions">Restrictions clés.</param>
        <param name="behavior">Une des énumérations <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
        <summary>Ajoute une nouvelle chaîne de connexion et un ensemble de mots clés restreints à l'objet <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour configurer les chaînes de connexion sont autorisées par un objet d’autorisation particulière. Par exemple, utilisez le fragment de code suivant si vous souhaitez uniquement autoriser une chaîne de connexion spécifique et rien d’autre :  
  
 `permission.Add("server=MyServer; database=MyDatabase; Integrated Security=true", "", KeyRestrictionBehavior.AllowOnly)`  
  
 L’exemple suivant autorise les chaînes de connexion qui utilisent une base de données, mais uniquement sur le serveur nommé MyServer, avec n’importe quelle combinaison d’utilisateur et mot de passe et ne contenant aucuns autres mots clés de chaîne de connexion :  
  
 `permission.Add("server=MyServer;", "database=; user id=; password=;", KeyRestrictionBehavior.AllowOnly)`  
  
 L’exemple suivant utilise le même scénario que ci-dessus, mais permet à un partenaire de basculement qui peut être utilisé lors de la connexion à des serveurs configurés pour la mise en miroir :  
  
 `permission.Add("server=MyServer; failover partner=MyMirrorServer", "database=; user id=; password=;", KeyRestrictionBehavior.AllowOnly)`  
  
> [!NOTE]
>  Lorsque vous utilisez des autorisations de sécurité d’accès au code pour ADO.NET, le modèle correct consiste à commencer par le cas le plus restrictif (aucune autorisation), puis ajoutez les autorisations spécifiques qui sont nécessaires pour la tâche particulière que le code doit exécuter. Le modèle opposé, en commençant par toutes les autorisations et la tentative de refuser une autorisation spécifique n’est pas sécurisé, car il existe de nombreuses manières d’exprimer la même chaîne de connexion. Par exemple, si vous démarrez avec toutes les autorisations, puis refusez l'utilisation de la chaîne de connexion "server=someserver", vous pouvez continuer à utiliser "server=someserver.mycompany.com". En démarrant toujours en n'accordant aucune autorisation, vous limitez les risques de failles dans le jeu d'autorisations.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="sqlClientPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne <see cref="T:System.Data.SqlClient.SqlClientPermission" /> en tant que <see cref="T:System.Security.IPermission" />.</summary>
        <returns>Copie de l’objet d’autorisation actuel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>