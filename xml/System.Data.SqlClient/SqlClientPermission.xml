<Type Name="SqlClientPermission" FullName="System.Data.SqlClient.SqlClientPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b7d1314bc7bcb7cb2653361bfb5af05c16189967" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30389213" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlClientPermission : System.Data.Common.DBDataPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlClientPermission extends System.Data.Common.DBDataPermission" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlClientPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlClientPermission&#xA;Inherits DBDataPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlClientPermission sealed : System::Data::Common::DBDataPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DBDataPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="74719-101">Permet au fournisseur de données .NET Framework pour SQL Server de garantir à l'utilisateur un niveau de sécurité suffisant pour l'accès à une source de données.</span>
      <span class="sxs-lookup">
        <span data-stu-id="74719-101">Enables the .NET Framework Data Provider for SQL Server to help make sure that a user has a security level sufficient to access a data source.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74719-102">Le <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> propriété est prioritaire sur la <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="74719-102">The <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> property takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property.</span></span> <span data-ttu-id="74719-103">Par conséquent, si vous définissez <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> à `false`, vous devez également définir <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> à `false` pour empêcher un utilisateur d’établir une connexion à l’aide d’un mot de passe vide.</span><span class="sxs-lookup"><span data-stu-id="74719-103">Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> to `false` to prevent a user from making a connection using a blank password.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="74719-104">Lorsque vous utilisez des autorisations de sécurité d’accès au code pour ADO.NET, le modèle correct consiste à commencer par le cas le plus restrictif (aucune autorisation), puis ajoutez les autorisations spécifiques qui sont nécessaires pour la tâche particulière que le code doit exécuter.</span><span class="sxs-lookup"><span data-stu-id="74719-104">When using code access security permissions for ADO.NET, the correct pattern is to start with the most restrictive case (no permissions at all) and then add the specific permissions that are needed for the particular task that the code needs to perform.</span></span> <span data-ttu-id="74719-105">Le modèle opposé, en commençant par toutes les autorisations, puis tenter de refuser une autorisation spécifique n’est pas sécurisé, car il existe de nombreuses manières d’exprimer la même chaîne de connexion.</span><span class="sxs-lookup"><span data-stu-id="74719-105">The opposite pattern, starting with all permissions and then denying a specific permission, is not secure, because there are many ways of expressing the same connection string.</span></span> <span data-ttu-id="74719-106">Par exemple, si vous démarrez avec toutes les autorisations, puis refusez l'utilisation de la chaîne de connexion "server=someserver", vous pouvez continuer à utiliser "server=someserver.mycompany.com".</span><span class="sxs-lookup"><span data-stu-id="74719-106">For example, if you start with all permissions and then attempt to deny the use of the connection string "server=someserver", the string "server=someserver.mycompany.com" would still be allowed.</span></span> <span data-ttu-id="74719-107">En démarrant toujours en n'accordant aucune autorisation, vous limitez les risques de failles dans le jeu d'autorisations.</span><span class="sxs-lookup"><span data-stu-id="74719-107">By always starting by granting no permissions at all, you reduce the chances that there are holes in the permission set.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="74719-108">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74719-108">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("SqlClientPermission() has been deprecated.  Use the SqlClientPermission(PermissionState.None) constructor.  http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74719-109">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74719-109">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="74719-110">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74719-110">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74719-111">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74719-111">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state, bool allowBlankPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState, allowBlankPassword As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission(System::Security::Permissions::PermissionState state, bool allowBlankPassword);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("SqlClientPermission(PermissionState state, Boolean allowBlankPassword) has been deprecated.  Use the SqlClientPermission(PermissionState.None) constructor.  http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
        <Parameter Name="allowBlankPassword" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="74719-112">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74719-112">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span>
          </span>
        </param>
        <param name="allowBlankPassword">
          <span data-ttu-id="74719-113">Indique si un mot de passe vide est autorisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74719-113">Indicates whether a blank password is allowed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74719-114">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74719-114">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74719-115">Le <xref:System.Security.Permissions.PermissionState> énumération est prioritaire sur la <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="74719-115">The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property.</span></span> <span data-ttu-id="74719-116">Par conséquent, si vous définissez <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> à `false`, vous devez également définir <xref:System.Security.Permissions.PermissionState> à `None` pour empêcher un utilisateur d’établir une connexion à l’aide d’un mot de passe vide.</span><span class="sxs-lookup"><span data-stu-id="74719-116">Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.</span></span> <span data-ttu-id="74719-117">Pour obtenir un exemple montrant comment utiliser les demandes de sécurité, consultez [sécurité d’accès du Code et ADO.NET](~/docs/framework/data/adonet/code-access-security.md).</span><span class="sxs-lookup"><span data-stu-id="74719-117">For an example demonstrating how to use security demands, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Add(string connectionString, string restrictions, valuetype System.Data.KeyRestrictionBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Add (connectionString As String, restrictions As String, behavior As KeyRestrictionBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Add(System::String ^ connectionString, System::String ^ restrictions, System::Data::KeyRestrictionBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="restrictions" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.KeyRestrictionBehavior" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="74719-118">Chaîne de connexion</span>
          <span class="sxs-lookup">
            <span data-stu-id="74719-118">The connection string.</span>
          </span>
        </param>
        <param name="restrictions">
          <span data-ttu-id="74719-119">Restrictions clés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74719-119">The key restrictions.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="74719-120">Une des énumérations <see cref="T:System.Data.KeyRestrictionBehavior" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74719-120">One of the <see cref="T:System.Data.KeyRestrictionBehavior" /> enumerations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74719-121">Ajoute une nouvelle chaîne de connexion et un ensemble de mots clés restreints à l'objet <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74719-121">Adds a new connection string and a set of restricted keywords to the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74719-122">Utilisez cette méthode pour configurer les chaînes de connexion sont autorisées par un objet d’autorisation particulière.</span><span class="sxs-lookup"><span data-stu-id="74719-122">Use this method to configure which connection strings are allowed by a particular permission object.</span></span> <span data-ttu-id="74719-123">Par exemple, utilisez le fragment de code suivant si vous souhaitez uniquement autoriser une chaîne de connexion spécifique et rien d’autre :</span><span class="sxs-lookup"><span data-stu-id="74719-123">For example, use the following code fragment if you want to only allow a specific connection string and nothing else:</span></span>  
  
 `permission.Add("server=MyServer; database=MyDatabase; Integrated Security=true", "", KeyRestrictionBehavior.AllowOnly)`  
  
 <span data-ttu-id="74719-124">L’exemple suivant autorise les chaînes de connexion qui utilisent une base de données, mais uniquement sur le serveur nommé MyServer, avec n’importe quelle combinaison d’utilisateur et mot de passe et ne contenant aucuns autres mots clés de chaîne de connexion :</span><span class="sxs-lookup"><span data-stu-id="74719-124">The following example allows connection strings that use any database, but only on the server named MyServer, with any user and password combination and containing no other connection string keywords:</span></span>  
  
 `permission.Add("server=MyServer;", "database=; user id=; password=;", KeyRestrictionBehavior.AllowOnly)`  
  
 <span data-ttu-id="74719-125">L’exemple suivant utilise le même scénario que ci-dessus, mais permet à un partenaire de basculement qui peut être utilisé lors de la connexion à des serveurs configurés pour la mise en miroir :</span><span class="sxs-lookup"><span data-stu-id="74719-125">The following example uses the same scenario as above but allows for a failover partner that can be used when connecting to servers configured for mirroring:</span></span>  
  
 `permission.Add("server=MyServer; failover partner=MyMirrorServer", "database=; user id=; password=;", KeyRestrictionBehavior.AllowOnly)`  
  
> [!NOTE]
>  <span data-ttu-id="74719-126">Lorsque vous utilisez des autorisations de sécurité d’accès au code pour ADO.NET, le modèle correct consiste à commencer par le cas le plus restrictif (aucune autorisation), puis ajoutez les autorisations spécifiques qui sont nécessaires pour la tâche particulière que le code doit exécuter.</span><span class="sxs-lookup"><span data-stu-id="74719-126">When using code access security permissions for ADO.NET, the correct pattern is to start with the most restrictive case (no permissions at all) and then add the specific permissions that are needed for the particular task that the code needs to perform.</span></span> <span data-ttu-id="74719-127">Le modèle opposé, en commençant par toutes les autorisations et la tentative de refuser une autorisation spécifique n’est pas sécurisé, car il existe de nombreuses manières d’exprimer la même chaîne de connexion.</span><span class="sxs-lookup"><span data-stu-id="74719-127">The opposite pattern, starting with all permissions and then trying to deny a specific permission, is not secure, because there are many ways of expressing the same connection string.</span></span> <span data-ttu-id="74719-128">Par exemple, si vous démarrez avec toutes les autorisations, puis refusez l'utilisation de la chaîne de connexion "server=someserver", vous pouvez continuer à utiliser "server=someserver.mycompany.com".</span><span class="sxs-lookup"><span data-stu-id="74719-128">For example, if you start with all permissions and then attempt to deny the use of the connection string "server=someserver", the string "server=someserver.mycompany.com" would still be allowed.</span></span> <span data-ttu-id="74719-129">En démarrant toujours en n'accordant aucune autorisation, vous limitez les risques de failles dans le jeu d'autorisations.</span><span class="sxs-lookup"><span data-stu-id="74719-129">By always starting by granting no permissions at all, you reduce the chances that there are holes in the permission set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74719-130">Retourne <see cref="T:System.Data.SqlClient.SqlClientPermission" /> en tant que <see cref="T:System.Security.IPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74719-130">Returns the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> as an <see cref="T:System.Security.IPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74719-131">Copie de l’objet d’autorisation actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74719-131">A copy of the current permission object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>