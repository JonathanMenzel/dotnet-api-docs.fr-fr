<Type Name="EventSource" FullName="System.Diagnostics.Tracing.EventSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d3f203c09975bb11794899b8e79533165978c60" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31780859" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSource : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSource extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Tracing.EventSource" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSource&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSource : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f073c-101">Permet de créer des événements pour le suivi d'événements pour Windows (ETW).</span>
      <span class="sxs-lookup">
        <span data-stu-id="f073c-101">Provides the ability to create events for event tracing for Windows (ETW).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-102">Cette classe est destinée à être hérité par une classe d’utilisateur qui fournit des événements spécifiques à utiliser pour ETW.</span><span class="sxs-lookup"><span data-stu-id="f073c-102">This class is intended to be inherited by a user class that provides specific events to be used for ETW.</span></span> <span data-ttu-id="f073c-103">Le <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> méthodes sont appelées pour consigner les événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-103">The <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> methods are called to log the events.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f073c-104">Ce type implémente le <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="f073c-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="f073c-105">Lorsque vous avez fini d’utiliser le type, vous devez la supprimer directement ou indirectement.</span><span class="sxs-lookup"><span data-stu-id="f073c-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="f073c-106">Pour supprimer le type directement, vous devez appeler sa <xref:System.IDisposable.Dispose%2A> méthode dans un `try` / `catch` bloc.</span><span class="sxs-lookup"><span data-stu-id="f073c-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="f073c-107">Pour la supprimer indirectement, utiliser une construction de langage telles que `using` (en c#) ou `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="f073c-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="f073c-108">Pour plus d’informations, consultez la section « Utilisant un objet qui implémente IDisposable » dans la <xref:System.IDisposable> rubrique de l’interface.</span><span class="sxs-lookup"><span data-stu-id="f073c-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="f073c-109">La fonctionnalité de base <xref:System.Diagnostics.Tracing.EventSource> est suffisant pour la plupart des applications.</span><span class="sxs-lookup"><span data-stu-id="f073c-109">The basic functionality of <xref:System.Diagnostics.Tracing.EventSource> is sufficient for most applications.</span></span>  <span data-ttu-id="f073c-110">Si vous souhaitez mieux contrôler le manifeste ETW qui est créé, vous pouvez appliquer le <xref:System.Diagnostics.Tracing.EventAttribute> aux méthodes d’attribut.</span><span class="sxs-lookup"><span data-stu-id="f073c-110">If you want more control over the ETW manifest that is created, you can apply the <xref:System.Diagnostics.Tracing.EventAttribute> attribute to the methods.</span></span> <span data-ttu-id="f073c-111">Pour les applications de source d’événement avancées, il est possible d’intercepter les commandes envoyées à la source d’événement dérivées et de modifier le filtrage ou provoquer des actions (telles que le vidage une structure de données) à effectuer par l’héritier.</span><span class="sxs-lookup"><span data-stu-id="f073c-111">For advanced event source applications, it is possible to intercept the commands being sent to the derived event source and change the filtering, or to cause actions (such as dumping a data structure) to be performed by the inheritor.</span></span>  <span data-ttu-id="f073c-112">Une source d’événement peut être activée avec les contrôleurs ETW de Windows, tels que l’outil Logman, immédiatement.</span><span class="sxs-lookup"><span data-stu-id="f073c-112">An event source can be activated with Windows ETW controllers, such as the Logman tool, immediately.</span></span>  <span data-ttu-id="f073c-113">Il est également possible de contrôler par programme et d’intercepter le répartiteur de données.</span><span class="sxs-lookup"><span data-stu-id="f073c-113">It is also possible to programmatically control and intercept the data dispatcher.</span></span>  <span data-ttu-id="f073c-114">La <xref:System.Diagnostics.Tracing.EventListener> classe fournit des fonctionnalités supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="f073c-114">The <xref:System.Diagnostics.Tracing.EventListener> class provides additional functionality.</span></span>  
  
 <span data-ttu-id="f073c-115">En commençant par [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Diagnostics.Tracing.EventSource> fournit la prise en charge des canaux et des règles de validation d’événement source ont été assouplies.</span><span class="sxs-lookup"><span data-stu-id="f073c-115">Starting with [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Diagnostics.Tracing.EventSource> provides channel support and some of the event source validation rules have been relaxed.</span></span> <span data-ttu-id="f073c-116">Signification :</span><span class="sxs-lookup"><span data-stu-id="f073c-116">This means:</span></span>  
  
-   <span data-ttu-id="f073c-117"><xref:System.Diagnostics.Tracing.EventSource> types peuvent désormais implémenter d’interfaces.</span><span class="sxs-lookup"><span data-stu-id="f073c-117"><xref:System.Diagnostics.Tracing.EventSource> types may now implement interfaces.</span></span> <span data-ttu-id="f073c-118">Cela permet d’utiliser des types de sources d’événements dans les systèmes de journalisation avancée qui utilisent des interfaces pour définir une cible de journalisation courantes.</span><span class="sxs-lookup"><span data-stu-id="f073c-118">This enables the use of event source types in advanced logging systems that use interfaces to define a common logging target.</span></span>  
  
-   <span data-ttu-id="f073c-119">Le concept d’un type de source d’événement utilitaire a été introduit.</span><span class="sxs-lookup"><span data-stu-id="f073c-119">The concept of a utility event source type has been introduced.</span></span> <span data-ttu-id="f073c-120">Cette fonctionnalité permet le partage du code entre plusieurs types source d’événements dans un projet pour des scénarios tels qu’optimisé <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> surcharges.</span><span class="sxs-lookup"><span data-stu-id="f073c-120">This feature enables sharing code across multiple event source types in a project to enable scenarios such as optimized <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overloads.</span></span>  
  
 <span data-ttu-id="f073c-121">Pour une version de la <xref:System.Diagnostics.Tracing.EventSource> classe qui fournit la prise en charge de fonctionnalités telles que les canaux, vous ciblez [!INCLUDE[net_v451](~/includes/net-v451-md.md)] ou version antérieure, consultez [Microsoft EventSource Library 1.0.16](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource).</span><span class="sxs-lookup"><span data-stu-id="f073c-121">For a version of the <xref:System.Diagnostics.Tracing.EventSource> class that provides features such as channel support you are targeting [!INCLUDE[net_v451](~/includes/net-v451-md.md)] or earlier, see [Microsoft EventSource Library 1.0.16](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f073c-122">L’exemple suivant montre une implémentation simple de la <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="f073c-122">The following example shows a simple implementation of the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTraceSmall#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtracesmall/cs/program.cs#1)]
 [!code-vb[ETWTraceSmall#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtracesmall/vb/program.vb#1)]  
  
 <span data-ttu-id="f073c-123">L’exemple suivant montre une implémentation plus complexe de la <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="f073c-123">The following example shows a more complex implementation of the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#1)]
 [!code-vb[ETWTrace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="f073c-124">Ce type est thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f073c-124">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f073c-125">Crée une instance de la classe <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-125">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f073c-126">Crée une instance de la classe <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-126">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (bool throwOnEventWriteErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool throwOnEventWriteErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (throwOnEventWriteErrors As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(bool throwOnEventWriteErrors);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="throwOnEventWriteErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="throwOnEventWriteErrors">
          <span data-ttu-id="f073c-127">
            <see langword="true" /> pour lever une exception lorsqu'une erreur est détectée dans le code Windows sous-jacent ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-127">
              <see langword="true" /> to throw an exception when an error occurs in the underlying Windows code; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-128">Crée une instance de la classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> et spécifie si une exception doit être levée lorsqu'une erreur se produit dans le code Windows sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-128">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and specifies whether to throw an exception when an error occurs in the underlying Windows code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.Tracing.EventSourceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settings As EventSourceSettings)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(System::Diagnostics::Tracing::EventSourceSettings settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="f073c-129">Combinaison d'opérations de bits des valeurs d'énumération qui spécifient les paramètres de configuration à appliquer à la source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-129">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-130">Crée une instance de la classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> avec les paramètres de configuration spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-130">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-131">Spécification de `settings` lorsque le <xref:System.Diagnostics.Tracing.EventSource> est construite vous permet de spécifier si l’événement est écrit dans un manifeste ou un format autodescriptif.</span><span class="sxs-lookup"><span data-stu-id="f073c-131">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="f073c-132">En outre, vous pouvez spécifier qu’une exception doit être émise quand une erreur se produit pendant le processus de l’écriture de l’événement.</span><span class="sxs-lookup"><span data-stu-id="f073c-132">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="f073c-133">Nom à appliquer à la source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-133">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="f073c-134">Ne doit pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-134">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-135">Crée une instance de la classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> avec le nom spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-135">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f073c-136">
            <paramref name="eventSourceName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-136">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings, params string[] traits);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.Tracing.EventSourceSettings settings, string[] traits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settings As EventSourceSettings, ParamArray traits As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(System::Diagnostics::Tracing::EventSourceSettings settings, ... cli::array &lt;System::String ^&gt; ^ traits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
        <Parameter Name="traits" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="f073c-137">Combinaison d'opérations de bits des valeurs d'énumération qui spécifient les paramètres de configuration à appliquer à la source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-137">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <param name="traits">
          <span data-ttu-id="f073c-138">Paires clé-valeur qui spécifient les caractéristiques de la source de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-138">The key-value pairs that specify traits for the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-139">Initialise une nouvelle instance de <see cref="T:System.Diagnostics.Tracing.EventSource" /> à utiliser avec les événements non liés à un contrat qui contiennent les paramètres et les caractéristiques spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-139">Initializes a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> to be used with non-contract events that contains the specified settings and traits.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-140">Caractéristiques fournissent des informations supplémentaires pour un événement et qui sont interprétés par un écouteur d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-140">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="f073c-141">Les caractéristiques sont spécifiées en tant que paires clé-valeur et si non spécifié par paires, une exception se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-141">Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</span></span> <span data-ttu-id="f073c-142">Vous pouvez récupérer une caractéristique en passant la clé pour le <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, méthode.</span><span class="sxs-lookup"><span data-stu-id="f073c-142">You can retrieve a trait by passing the key to the <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, method.</span></span>  
  
 <span data-ttu-id="f073c-143">Spécification de `settings` lorsque le <xref:System.Diagnostics.Tracing.EventSource> est construite vous permet de spécifier si l’événement est écrit dans un manifeste ou un format autodescriptif.</span><span class="sxs-lookup"><span data-stu-id="f073c-143">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="f073c-144">En outre, vous pouvez spécifier qu’une exception doit être émise quand une erreur se produit pendant le processus de l’écriture de l’événement.</span><span class="sxs-lookup"><span data-stu-id="f073c-144">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f073c-145">
            <paramref name="traits" /> n’est pas spécifié dans les paires clé/valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-145">
              <paramref name="traits" /> is not specified in key-value pairs.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName, valuetype System.Diagnostics.Tracing.EventSourceSettings config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String, config As EventSourceSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName, System::Diagnostics::Tracing::EventSourceSettings config);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="config" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="f073c-146">Nom à appliquer à la source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-146">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="f073c-147">Ne doit pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-147">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="f073c-148">Combinaison d'opérations de bits des valeurs d'énumération qui spécifient les paramètres de configuration à appliquer à la source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-148">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-149">Crée une instance de la classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> avec le nom et les paramètres spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-149">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name and settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-150">Spécification de `settings` lorsque le <xref:System.Diagnostics.Tracing.EventSource> est construite vous permet de spécifier si l’événement est écrit dans un manifeste ou un format autodescriptif.</span><span class="sxs-lookup"><span data-stu-id="f073c-150">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="f073c-151">En outre, vous pouvez spécifier qu’une exception doit être émise quand une erreur se produit pendant le processus de l’écriture de l’événement.</span><span class="sxs-lookup"><span data-stu-id="f073c-151">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f073c-152">
            <paramref name="eventSourceName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-152">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config, params string[] traits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName, valuetype System.Diagnostics.Tracing.EventSourceSettings config, string[] traits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String, config As EventSourceSettings, ParamArray traits As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName, System::Diagnostics::Tracing::EventSourceSettings config, ... cli::array &lt;System::String ^&gt; ^ traits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="config" Type="System.Diagnostics.Tracing.EventSourceSettings" />
        <Parameter Name="traits" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="f073c-153">Nom à appliquer à la source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-153">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="f073c-154">Ne doit pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-154">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="f073c-155">Combinaison d'opérations de bits des valeurs d'énumération qui spécifient les paramètres de configuration à appliquer à la source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-155">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <param name="traits">
          <span data-ttu-id="f073c-156">Paires clé-valeur qui spécifient les caractéristiques de la source de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-156">The key-value pairs that specify traits for the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-157">Crée une instance de la classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> avec les paramètres de configuration spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-157">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-158">Caractéristiques fournissent des informations supplémentaires pour un événement et qui sont interprétés par un écouteur d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-158">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="f073c-159">Les caractéristiques sont spécifiées en tant que paires clé-valeur et si non spécifié par paires, une exception se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-159">Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</span></span> <span data-ttu-id="f073c-160">Vous pouvez récupérer une caractéristique en passant la clé pour le <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, méthode.</span><span class="sxs-lookup"><span data-stu-id="f073c-160">You can retrieve a trait by passing the key to the <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, method.</span></span>  
  
 <span data-ttu-id="f073c-161">Spécification de `config` lorsque le <xref:System.Diagnostics.Tracing.EventSource> est construite vous permet de spécifier si l’événement est écrit dans un manifeste ou un format autodescriptif.</span><span class="sxs-lookup"><span data-stu-id="f073c-161">Specifying `config` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="f073c-162">En outre, vous pouvez spécifier qu’une exception doit être émise quand une erreur se produit pendant le processus de l’écriture de l’événement.</span><span class="sxs-lookup"><span data-stu-id="f073c-162">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f073c-163">
            <paramref name="eventSourceName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-163">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f073c-164">
            <paramref name="traits" /> n’est pas spécifié dans les paires clé/valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-164">
              <paramref name="traits" /> is not specified in key-value pairs.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ConstructionException">
      <MemberSignature Language="C#" Value="public Exception ConstructionException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ConstructionException" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.ConstructionException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ConstructionException { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f073c-165">[Pris en charge dans le .NET Framework 4.5.1 et versions ultérieures]</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-165">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="f073c-166">Obtient les exceptions levées lors de la construction de la source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-166">Gets any exception that was thrown during the construction of the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f073c-167">L'exception a été levée lors de la construction de la source d'événements, ou <see langword="null" /> si aucune exception n'a été levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-167">The exception that was thrown during the construction of the event source, or <see langword="null" /> if no exception was thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-168"><xref:System.Diagnostics.Tracing.EventSource> les constructeurs ne levez pas d’exceptions.</span><span class="sxs-lookup"><span data-stu-id="f073c-168"><xref:System.Diagnostics.Tracing.EventSource> constructors do not throw exceptions.</span></span> <span data-ttu-id="f073c-169">Au lieu de cela, une exception est levée est affectée à la <xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A> propriété et consignés par le <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f073c-169">Instead, any exception that is thrown is assigned to the <xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A> property and logged by the <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static Guid CurrentThreadActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid CurrentThreadActivityId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentThreadActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid CurrentThreadActivityId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f073c-170">[Pris en charge dans le .NET Framework 4.5.1 et versions ultérieures]</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-170">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="f073c-171">Obtient l'ID d'activité du thread actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-171">Gets the activity ID of the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f073c-172">ID d'activité du thread actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-172">The activity ID of the current thread.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f073c-173">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-173">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f073c-174">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-174">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-175">Appelez la méthode `Dispose` une fois que vous avez terminé d'utiliser <xref:System.Diagnostics.Tracing.EventSource>.</span><span class="sxs-lookup"><span data-stu-id="f073c-175">Call `Dispose` when you are finished using the <xref:System.Diagnostics.Tracing.EventSource>.</span></span> <span data-ttu-id="f073c-176">La méthode `Dispose` rend le <xref:System.Diagnostics.Tracing.EventSource> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="f073c-176">The `Dispose` method leaves the <xref:System.Diagnostics.Tracing.EventSource> in an unusable state.</span></span> <span data-ttu-id="f073c-177">Après avoir appelé `Dispose`, vous devez libérer toutes les références à la <xref:System.Diagnostics.Tracing.EventSource> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Diagnostics.Tracing.EventSource> occupée.</span><span class="sxs-lookup"><span data-stu-id="f073c-177">After calling `Dispose`, you must release all references to the <xref:System.Diagnostics.Tracing.EventSource> so the garbage collector can reclaim the memory that the <xref:System.Diagnostics.Tracing.EventSource> was occupying.</span></span>  
  
 <span data-ttu-id="f073c-178">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="f073c-178">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f073c-179">Appelez toujours `Dispose` avant de libérer votre dernière référence à <xref:System.Diagnostics.Tracing.EventSource>.</span><span class="sxs-lookup"><span data-stu-id="f073c-179">Always call `Dispose` before you release your last reference to the <xref:System.Diagnostics.Tracing.EventSource>.</span></span> <span data-ttu-id="f073c-180">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Diagnostics.Tracing.EventSource> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="f073c-180">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Diagnostics.Tracing.EventSource> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f073c-181">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-181">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-182">Libère les ressources non managées utilisées par la classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-182">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-183">Cette méthode est appelée par le public `Dispose()` (méthode) et le `Finalize` (méthode).</span><span class="sxs-lookup"><span data-stu-id="f073c-183">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="f073c-184">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec la `disposing` paramètre la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="f073c-184">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="f073c-185">`Finalize` appelle `Dispose` avec `disposing` la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="f073c-185">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="f073c-186">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Diagnostics.Tracing.EventSource>.</span><span class="sxs-lookup"><span data-stu-id="f073c-186">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.Tracing.EventSource> references.</span></span> <span data-ttu-id="f073c-187">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="f073c-187">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f073c-188">
              <see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f073c-188">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="f073c-189">Lors de la substitution <see langword="Dispose(Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d’une version de l’appel de la méthode Dispose pour <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f073c-189">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier the Dispose Method call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="f073c-190">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="f073c-190">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="f073c-191">Pour plus d’informations sur <see langword="Dispose" /> et <see langword="Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="f073c-191">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EventCommandExecuted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventSource.EventCommandExecuted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventCommandExecuted As EventHandler(Of EventCommandEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventCommandEventArgs ^&gt; ^ EventCommandExecuted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f073c-192">Se produit lorsqu’une commande est issue d’un détecteur d’événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-192">Occurs when a command comes from an event listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~EventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!EventSource ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f073c-193">Permet à l'objet <see cref="T:System.Diagnostics.Tracing.EventSource" /> de tenter de libérer des ressources et d'effectuer d'autres opérations de nettoyage avant que l'objet ne soit récupéré par le garbage collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-193">Allows the <see cref="T:System.Diagnostics.Tracing.EventSource" /> object to attempt to free resources and perform other cleanup operations before the  object is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateManifest">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f073c-194">Retourne une chaîne du manifeste XML associé à la source d'événements actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-194">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateManifest">
      <MemberSignature Language="C#" Value="public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateManifest(class System.Type eventSourceType, string assemblyPathToIncludeInManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateManifest (eventSourceType As Type, assemblyPathToIncludeInManifest As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateManifest(Type ^ eventSourceType, System::String ^ assemblyPathToIncludeInManifest);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
        <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="f073c-195">Type de l'événement source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-195">The type of the event source.</span>
          </span>
        </param>
        <param name="assemblyPathToIncludeInManifest">
          <span data-ttu-id="f073c-196">Chemin du fichier d’assembly (.dll) à inclure dans l’élément [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) du manifeste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-196">The path to the assembly file (.dll) to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-197">Retourne une chaîne du manifeste XML associé à la source d'événements actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-197">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f073c-198">Chaîne de données XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-198">The XML data string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-199">Les informations sur le schéma XML pour le manifeste d’événements, consultez [schéma manifeste d’événement](http://go.microsoft.com/fwlink/?LinkId=228077) dans MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="f073c-199">The information about the XML schema for the event manifest, see [Event Manifest Schema](http://go.microsoft.com/fwlink/?LinkId=228077) in the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateManifest">
      <MemberSignature Language="C#" Value="public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest, System.Diagnostics.Tracing.EventManifestOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateManifest(class System.Type eventSourceType, string assemblyPathToIncludeInManifest, valuetype System.Diagnostics.Tracing.EventManifestOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateManifest (eventSourceType As Type, assemblyPathToIncludeInManifest As String, flags As EventManifestOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateManifest(Type ^ eventSourceType, System::String ^ assemblyPathToIncludeInManifest, System::Diagnostics::Tracing::EventManifestOptions flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
        <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
        <Parameter Name="flags" Type="System.Diagnostics.Tracing.EventManifestOptions" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="f073c-200">Type de l'événement source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-200">The type of the event source.</span>
          </span>
        </param>
        <param name="assemblyPathToIncludeInManifest">
          <span data-ttu-id="f073c-201">Chemin du fichier d’assembly (.dll) à inclure dans l’élément [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) du manifeste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-201">The path to the assembly file (.dll) file to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="f073c-202">Combinaison d'opérations de bits des valeurs d'énumération qui spécifient comment le manifeste est généré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-202">A bitwise combination of the enumeration values that specify how the manifest is generated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-203">Retourne une chaîne du manifeste XML associé à la source d'événements actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-203">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f073c-204">Chaîne de données XML ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-204">The XML data string or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-205">Si `flags` spécifie `OnlyIfNeededForRegistration` et `eventSourceType` spécifié ne nécessite pas l’inscription explicite, <xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A> retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="f073c-205">If `flags` specifies `OnlyIfNeededForRegistration` and the `eventSourceType` specified does not require explicit registration, <xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A> returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public static Guid GetGuid (Type eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetGuid(class System.Type eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGuid (eventSourceType As Type) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetGuid(Type ^ eventSourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="f073c-206">Type de l'événement source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-206">The type of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-207">Obtient l'identificateur unique de cette implémentation de la source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-207">Gets the unique identifier for this implementation of the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f073c-208">Identificateur unique pour ce type de source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-208">A unique identifier for this event source type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (Type eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Type eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (eventSourceType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(Type ^ eventSourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="f073c-209">Type de l'événement source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-209">The type of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-210">Obtient le nom convivial de la source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-210">Gets the friendly name of the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f073c-211">Nom convivial de la source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-211">The friendly name of the event source.</span>
          </span>
          <span data-ttu-id="f073c-212">La valeur par défaut est le nom simple de la classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-212">The default is the simple name of the class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSources">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt; GetSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Diagnostics.Tracing.EventSource&gt; GetSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSources () As IEnumerable(Of EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::Diagnostics::Tracing::EventSource ^&gt; ^ GetSources();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f073c-213">Obtient un instantané de toutes les sources d'événements pour le domaine d'application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-213">Gets a snapshot of all the event sources for the application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f073c-214">Énumération de toutes les sources d'événements dans le domaine d'application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-214">An enumeration of all the event sources in the application domain.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrait">
      <MemberSignature Language="C#" Value="public string GetTrait (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTrait(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrait (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTrait(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f073c-215">Clé de la caractéristique à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-215">The key of the trait to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-216">Obtient la valeur de la caractéristique associée à la clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-216">Gets the trait value associated with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f073c-217">Valeur de caractéristique associée à la clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-217">The trait value associated with the specified key.</span>
          </span>
          <span data-ttu-id="f073c-218">Si la clé est introuvable, retourne <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-218">If the key is not found, returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-219">Caractéristiques fournissent des informations supplémentaires pour un événement et qui sont interprétés par un écouteur d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-219">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="f073c-220">Les caractéristiques sont spécifiés en tant que paires clé-valeur lorsque la source d’événements est construite.</span><span class="sxs-lookup"><span data-stu-id="f073c-220">Traits are specified as key-value pairs when the event source is constructed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guid">
      <MemberSignature Language="C#" Value="public Guid Guid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Guid" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Guid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Guid { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f073c-221">Identificateur unique de la source d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-221">The unique identifier for the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f073c-222">Identificateur unique de la source d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-222">A unique identifier for the event source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEnabled">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f073c-223">Détermine si la source d'événements actuelle est activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-223">Determines whether the current event source is enabled.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f073c-224">Détermine si la source d'événements actuelle est activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-224">Determines whether the current event source is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f073c-225">
            <see langword="true" /> si la source d'événement actuelle est activée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-225">
              <see langword="true" /> if the current event source is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords keywords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As EventLevel, keywords As EventKeywords) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="f073c-226">Niveau de la source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-226">The level of the event source.</span>
          </span>
        </param>
        <param name="keywords">
          <span data-ttu-id="f073c-227">Mot clé de l'événement source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-227">The keyword of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-228">Détermine si la source d'événements actuelle qui a le niveau et le mot clé spécifiés est activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-228">Determines whether the current event source that has the specified level and keyword is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f073c-229">
            <see langword="true" /> si la source d'événements est activée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-229">
              <see langword="true" /> if the event source is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-230">Le résultat de cette méthode est seulement une approximation du caractère actif d'un événement.</span><span class="sxs-lookup"><span data-stu-id="f073c-230">The result of this method is only an approximation of whether a particular event is active.</span></span>  <span data-ttu-id="f073c-231">Utilisez-la pour éviter des calculs coûteux quand la journalisation est désactivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-231">Use it to avoid expensive computation for logging when logging is disabled.</span></span>   <span data-ttu-id="f073c-232">Sources d’événements peuvent avoir un filtrage supplémentaire qui détermine leur activité.</span><span class="sxs-lookup"><span data-stu-id="f073c-232">Event sources may have additional filtering that determines their activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords, System.Diagnostics.Tracing.EventChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords keywords, valuetype System.Diagnostics.Tracing.EventChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As EventLevel, keywords As EventKeywords, channel As EventChannel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords, System::Diagnostics::Tracing::EventChannel channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
        <Parameter Name="channel" Type="System.Diagnostics.Tracing.EventChannel" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="f073c-233">Niveau d'événement à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-233">The event level to check.</span>
          </span>
          <span data-ttu-id="f073c-234">Une source d’événements est considérée comme activée quand son niveau est supérieur ou égal à <c>level</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-234">An event source will be considered enabled when its level is greater than or equal to <c>level</c>.</span>
          </span>
        </param>
        <param name="keywords">
          <span data-ttu-id="f073c-235">Mots clés d'événement à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-235">The event keywords to check.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="f073c-236">Canal d'événement à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-236">The event channel to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-237">Détermine si la source d'événements actuelle est activée pour les événements avec le niveau, les mots clés et le canal spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-237">Determines whether the current event source is enabled for events with the specified level, keywords and channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f073c-238">
            <see langword="true" /> si la source d'événements est activée pour le niveau d'événement, les mots clés et le canal spécifiés ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-238">
              <see langword="true" /> if the event source is enabled for the specified event level, keywords and channel; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f073c-239">Le résultat de cette méthode est seulement une approximation du caractère actif d'un événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-239">The result of this method is only an approximation of whether a particular event is active.</span>
          </span>
          <span data-ttu-id="f073c-240">Utilisez-la pour éviter des calculs coûteux quand la journalisation est désactivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-240">Use it to avoid expensive computation for logging when logging is disabled.</span>
          </span>
          <span data-ttu-id="f073c-241">Les sources d'événements peuvent avoir un filtrage supplémentaire qui détermine leur activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-241">Event sources may have additional filtering that determines their activity..</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-242">Si la</span><span class="sxs-lookup"><span data-stu-id="f073c-242">If the</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f073c-243">Nom convivial de la classe dérivé de la source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-243">The friendly name of the class that is derived from the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f073c-244">Nom convivial de la classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-244">The friendly name of the derived class.</span>
          </span>
          <span data-ttu-id="f073c-245">La valeur par défaut est le nom simple de la classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-245">The default is the simple name of the class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEventCommand (System.Diagnostics.Tracing.EventCommandEventArgs command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEventCommand(class System.Diagnostics.Tracing.EventCommandEventArgs command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEventCommand (command As EventCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEventCommand(System::Diagnostics::Tracing::EventCommandEventArgs ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="f073c-246">Arguments pour l’événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-246">The arguments for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-247">Appelée quand la source d'événements actuelle est mise à jour par le contrôleur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-247">Called when the current event source is updated by the controller.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCommand">
      <MemberSignature Language="C#" Value="public static void SendCommand (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventCommand command, System.Collections.Generic.IDictionary&lt;string,string&gt; commandArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendCommand(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventCommand command, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; commandArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SendCommand(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventCommand command, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ commandArguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommand" />
        <Parameter Name="commandArguments" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="f073c-248">Source d'événements à laquelle envoyer la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-248">The event source to send the command to.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="f073c-249">Commande d'événement à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-249">The event command to send.</span>
          </span>
        </param>
        <param name="commandArguments">
          <span data-ttu-id="f073c-250">Arguments pour la commande d’événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-250">The arguments for the event command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-251">Envoie une commande à une source d'événements spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-251">Sends a command to a specified event source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-252">Appel de <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> transmet la commande à le <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> rappel.</span><span class="sxs-lookup"><span data-stu-id="f073c-252">Calling <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> forwards the command to the <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback.</span></span>  <span data-ttu-id="f073c-253">Ce que le <xref:System.Diagnostics.Tracing.EventSource> avec la commande et ses arguments est spécifique à la source d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-253">What the <xref:System.Diagnostics.Tracing.EventSource> does with the command and its arguments is specific to the event source.</span></span>  <span data-ttu-id="f073c-254">La commande et les arguments de commande sont passés à la <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> rappel de la source d’événement spécifié.</span><span class="sxs-lookup"><span data-stu-id="f073c-254">The command and command arguments are passed to the <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback of the specified event source.</span></span>   <span data-ttu-id="f073c-255">Si possible, la source d’événements actuelle ne doit pas affecter les événements de filtrage autres récepteurs d’événements ; Toutefois, qui est impossible si la commande provoque une opération garbage collection, un vidage du système ou une autre activité globale.</span><span class="sxs-lookup"><span data-stu-id="f073c-255">If possible, the current event source should not affect other event listeners' filtering events; however, that may not be possible if the command causes a garbage collection, a system flush, or some other global activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCurrentThreadActivityId">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f073c-256">[Pris en charge dans le .NET Framework 4.5.1 et versions ultérieures]</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-256">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="f073c-257">Définit l'ID d'activité du thread actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-257">Sets the activity ID on the current thread.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static void SetCurrentThreadActivityId (Guid activityId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentThreadActivityId(valuetype System.Guid activityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentThreadActivityId (activityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentThreadActivityId(Guid activityId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="activityId">
          <span data-ttu-id="f073c-258">Nouvel ID d'activité du thread actif, ou <see cref="F:System.Guid.Empty" /> pour indiquer que le travail sur le thread actif n'est associé à aucune activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-258">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-259">[Pris en charge dans le .NET Framework 4.5.1 et versions ultérieures]</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-259">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="f073c-260">Définit l'ID d'activité du thread actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-260">Sets the activity ID on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-261">Appel de la <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A> méthode définit l’ID d’activité sur une base par thread.</span><span class="sxs-lookup"><span data-stu-id="f073c-261">Calling the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A> method sets the activity ID on a per-thread basis.</span></span> <span data-ttu-id="f073c-262">Tous les événements sur le thread aura cet ID d’activité jusqu'à ce qu’une nouvelle activité est démarrée sur le même thread.</span><span class="sxs-lookup"><span data-stu-id="f073c-262">All events on the thread will have that activity ID until a new activity is started on the same thread.</span></span>  
  
 <span data-ttu-id="f073c-263">Cette méthode est appelée uniquement par des bibliothèques qui gèrent leurs propres threads.</span><span class="sxs-lookup"><span data-stu-id="f073c-263">This method is called only by libraries that manage their own threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static void SetCurrentThreadActivityId (Guid activityId, out Guid oldActivityThatWillContinue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentThreadActivityId(valuetype System.Guid activityId, [out] valuetype System.Guid&amp; oldActivityThatWillContinue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentThreadActivityId (activityId As Guid, ByRef oldActivityThatWillContinue As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentThreadActivityId(Guid activityId, [Runtime::InteropServices::Out] Guid % oldActivityThatWillContinue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityId" Type="System.Guid" />
        <Parameter Name="oldActivityThatWillContinue" Type="System.Guid&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="activityId">
          <span data-ttu-id="f073c-264">Nouvel ID d'activité du thread actif, ou <see cref="F:System.Guid.Empty" /> pour indiquer que le travail sur le thread actif n'est associé à aucune activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-264">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          </span>
        </param>
        <param name="oldActivityThatWillContinue">
          <span data-ttu-id="f073c-265">Quand cette méthode est retournée, contient l'ID de l'activité précédente sur le thread actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-265">When this method returns, contains the previous activity ID on the current thread.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-266">[Pris en charge dans le .NET Framework 4.5.1 et versions ultérieures]</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-266">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="f073c-267">Définit l'ID d'activité sur le thread actif et retourne l'ID de l'activité précédente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-267">Sets the activity ID on the current thread, and returns the previous activity ID.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-268">Vous pouvez appeler la <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29> méthode pour remplacer temporairement les ID d’activité du thread actuel avec un nouvel ID d’activité.</span><span class="sxs-lookup"><span data-stu-id="f073c-268">You can call the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29> method to temporarily overwrite the current thread's activity ID with a new activity ID.</span></span> <span data-ttu-id="f073c-269">Vous devez ensuite restaurer l’ID d’activité précédente en passant le `oldActivityThatWillContinue` l’argument de la <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f073c-269">You must then restore the previous activity ID by passing the `oldActivityThatWillContinue` argument to the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Tracing.EventSourceSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Tracing.EventSourceSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As EventSourceSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Tracing::EventSourceSettings Settings { System::Diagnostics::Tracing::EventSourceSettings get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventSourceSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f073c-270">Obtient les paramètres appliqués à cette source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-270">Gets the settings applied to this event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f073c-271">Paramètres appliqués à cette source d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-271">The settings applied to this event source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f073c-272">Obtient une représentation sous forme de chaîne de l'instance de source d'événements actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-272">Obtains a string representation of the current event source instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f073c-273">Nom et identificateur unique qui identifient la source d'événements actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-273">The name and unique identifier that identify the current event source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f073c-274">Écrit un événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-274">Writes an event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (eventName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ eventName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="f073c-275">Nom de l'événement à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-275">The name of the event to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-276">Écrit un événement sans champ, mais avec le nom spécifié et les options par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-276">Writes an event without fields, but with the specified name and default options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f073c-277">
            <paramref name="eventName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-277">
              <paramref name="eventName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string eventName, System.Diagnostics.Tracing.EventSourceOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (eventName As String, options As EventSourceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="f073c-278">Nom de l'événement à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-278">The name of the event to write.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="f073c-279">Options pour l'événement, telles que le niveau, les mots clés et le code d'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-279">The options such as level, keywords and operation code for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-280">Écrit un événement sans champ, mais avec le nom et les options spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-280">Writes an event without fields, but with the specified name and options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f073c-281">
            <paramref name="eventName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-281">
              <paramref name="eventName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, !!T data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, T data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="data" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f073c-282">Type qui définit l'événement et ses données associées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-282">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="f073c-283">Ce type doit être anonyme ou marqué avec l'attribut <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-283">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="f073c-284">Nom de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-284">The name of the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="f073c-285">Données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-285">The event data.</span>
          </span>
          <span data-ttu-id="f073c-286">Ce type doit être anonyme ou marqué avec l'attribut <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-286">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-287">Écrit un événement avec le nom et les données spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-287">Writes an event with the specified name and data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-288">Si `eventName` est `null`, le nom de l’événement est dérivé automatiquement des données d’événement de type T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) ou déterminé en fonction du nom de type `T`.</span><span class="sxs-lookup"><span data-stu-id="f073c-288">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="f073c-289">Propriétés de l’instance au public `data` est écrit de manière récursive pour créer les champs d’événement.</span><span class="sxs-lookup"><span data-stu-id="f073c-289">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, System.Diagnostics.Tracing.EventSourceOptions options, T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions options, !!T data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, options As EventSourceOptions, data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions options, T data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
        <Parameter Name="data" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f073c-290">Type qui définit l'événement et ses données associées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-290">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="f073c-291">Ce type doit être anonyme ou marqué avec l'attribut <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-291">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="f073c-292">Nom de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-292">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="f073c-293">Options d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-293">The event options.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="f073c-294">Données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-294">The event data.</span>
          </span>
          <span data-ttu-id="f073c-295">Ce type doit être anonyme ou marqué avec l'attribut <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-295">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-296">Écrit un événement avec le nom, les données d'événements et les options spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-296">Writes an event with the specified name, event data and options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-297">Si `eventName` est `null`, le nom de l’événement est dérivé automatiquement des données d’événement de type T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) ou déterminé en fonction du nom de type `T`.</span><span class="sxs-lookup"><span data-stu-id="f073c-297">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="f073c-298">Propriétés de l’instance au public `data` est écrit de manière récursive pour créer les champs d’événement.</span><span class="sxs-lookup"><span data-stu-id="f073c-298">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions&amp; options, !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, ByRef options As EventSourceOptions, ByRef data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions % options, T % data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions&amp;" RefType="ref" />
        <Parameter Name="data" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f073c-299">Type qui définit l'événement et ses données associées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-299">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="f073c-300">Ce type doit être anonyme ou marqué avec l'attribut <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-300">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="f073c-301">Nom de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-301">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="f073c-302">Options d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-302">The event options.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="f073c-303">Données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-303">The event data.</span>
          </span>
          <span data-ttu-id="f073c-304">Ce type doit être anonyme ou marqué avec l'attribut <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-304">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-305">Écrit un événement avec le nom, les données d'événements et les options spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-305">Writes an event with the specified name, options and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-306">Si `eventName` est `null`, le nom de l’événement est dérivé automatiquement des données d’événement de type T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) ou déterminé en fonction du nom de type `T`.</span><span class="sxs-lookup"><span data-stu-id="f073c-306">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="f073c-307">Propriétés de l’instance au public `data` est écrit de manière récursive pour créer les champs d’événement.</span><span class="sxs-lookup"><span data-stu-id="f073c-307">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref Guid activityId, ref Guid relatedActivityId, ref T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions&amp; options, valuetype System.Guid&amp; activityId, valuetype System.Guid&amp; relatedActivityId, !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, ByRef options As EventSourceOptions, ByRef activityId As Guid, ByRef relatedActivityId As Guid, ByRef data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions % options, Guid % activityId, Guid % relatedActivityId, T % data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions&amp;" RefType="ref" />
        <Parameter Name="activityId" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="relatedActivityId" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="data" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="f073c-308">Type qui définit l'événement et ses données associées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-308">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="f073c-309">Ce type doit être anonyme ou marqué avec l'attribut <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-309">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="f073c-310">Nom de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-310">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="f073c-311">Options d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-311">The event options.</span>
          </span>
        </param>
        <param name="activityId">
          <span data-ttu-id="f073c-312">ID de l'activité associée à l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-312">The ID of the activity associated with the event.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="f073c-313">ID d'une activité associée, ou <see cref="F:System.Guid.Empty" /> en l'absence d'activité associée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-313">The ID of an associated activity, or <see cref="F:System.Guid.Empty" /> if there is no associated activity.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="f073c-314">Données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-314">The event data.</span>
          </span>
          <span data-ttu-id="f073c-315">Ce type doit être anonyme ou marqué avec l'attribut <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-315">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-316">Écrit un événement avec le nom, les options, l'activité associée et les données d'événements spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-316">Writes an event with the specified name, options, related activity and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-317">Si `eventName` est `null`, le nom de l’événement est dérivé automatiquement des données d’événement de type T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) ou déterminé en fonction du nom de type `T`.</span><span class="sxs-lookup"><span data-stu-id="f073c-317">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="f073c-318">Propriétés de l’instance au public `data` est écrit de manière récursive pour créer les champs d’événement.</span><span class="sxs-lookup"><span data-stu-id="f073c-318">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f073c-319">Écrit un événement à l’aide de l’identificateur d’événement et d’arguments facultatifs fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-319">Writes an event by using the provided event identifier and optional arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-320">Le `WriteEvent` méthode fournit des surcharges avec des combinaisons d’arguments de chaîne et entier.</span><span class="sxs-lookup"><span data-stu-id="f073c-320">The `WriteEvent` method provides overloads with combinations of string and integer arguments.</span></span> <span data-ttu-id="f073c-321">Si aucune de ces combinaisons les paramètres pour l’appel, le compilateur utilise le <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> de surcharge, qui est sensiblement plus lent que les autres surcharges.</span><span class="sxs-lookup"><span data-stu-id="f073c-321">If none of these combinations match the parameters for the call, the compiler uses the <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> overload, which is considerably slower than the other overloads.</span></span> <span data-ttu-id="f073c-322">Consultez la page de surcharge pour plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="f073c-322">See the overload page for details.</span></span>  
  
 <span data-ttu-id="f073c-323">Dans tous les cas, le `eventid` paramètre doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-323">In all cases, the `eventid` parameter should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-324">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-324">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-325">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-325">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-326">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-326">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-327">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-327">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 <span data-ttu-id="f073c-328">Vous pouvez également créer une surcharge personnalisée à l’aide de la <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f073c-328">You can also create a custom overload by using the <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-329">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-329">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-330">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-330">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-331">Écrit un événement à l'aide de l'identificateur d'événement fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-331">Writes an event by using the provided event identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-332">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-332">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-333">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-333">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-334">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-334">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-335">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-335">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-336">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-336">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="f073c-337">L’exemple suivant montre comment utiliser cette surcharge de méthode pour écrire un événement.</span><span class="sxs-lookup"><span data-stu-id="f073c-337">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="f073c-338">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="f073c-338">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]
 [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, byte[] arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, unsigned int8[] arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, cli::array &lt;System::Byte&gt; ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-339">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-339">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-340">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-340">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-341">Argument de tableau d’octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-341">A byte array argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-342">Écrit un événement à l’aide de l’identificateur d’événement et de l’argument de tableau d’octets fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-342">Writes an event by using the provided event identifier and byte array argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-343">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-343">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-344">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-344">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-345">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-345">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-346">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-346">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-347">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-347">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(byte[] arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-348">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-348">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-349">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-349">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-350">Argument entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-350">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-351">Écrit un événement à l’aide de l’identificateur d’événement et de l’argument en entier d’une valeur de 32 octets fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-351">Writes an event by using the provided event identifier and 32-bit integer argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-352">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-352">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-353">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-353">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-354">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-354">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-355">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-355">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-356">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-356">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(int  arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="f073c-357">L’exemple suivant montre comment utiliser cette surcharge de méthode pour écrire un événement.</span><span class="sxs-lookup"><span data-stu-id="f073c-357">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="f073c-358">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="f073c-358">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#8](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#8)]
 [!code-vb[ETWTrace#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-359">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-359">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-360">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-360">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-361">Argument entier 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-361">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-362">Écrit un événement à l’aide de l’identificateur d’événement et de l’argument en entier d’une valeur de 64 octets fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-362">Writes an event by using the provided event identifier and 64-bit integer argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-363">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-363">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-364">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-364">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-365">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-365">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-366">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-366">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-367">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-367">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-368">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-368">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-369">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-369">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="f073c-370">Tableau d'objets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-370">An array of objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-371">Écrit un événement à l’aide de l’identificateur d’événement et du tableau d’arguments fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-371">Writes an event by using the provided event identifier and array of arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-372">Par défaut, le compilateur appelle cette surcharge si les paramètres de l’appel ne correspondent pas une des autres surcharges de méthode.</span><span class="sxs-lookup"><span data-stu-id="f073c-372">By default, the compiler calls this overload if the parameters for the call do not match one of the other method overloads.</span></span> <span data-ttu-id="f073c-373">Cette surcharge est plus lente que les autres surcharges, car il effectue les opérations suivantes :</span><span class="sxs-lookup"><span data-stu-id="f073c-373">This overload is much slower than the other overloads, because it does the following:</span></span>  
  
1.  <span data-ttu-id="f073c-374">Il alloue un tableau pour contenir l’argument variable.</span><span class="sxs-lookup"><span data-stu-id="f073c-374">It allocates an array to hold the variable argument.</span></span>  
  
2.  <span data-ttu-id="f073c-375">Il convertit chaque paramètre à un objet (ce qui implique des allocations pour les types primitifs).</span><span class="sxs-lookup"><span data-stu-id="f073c-375">It casts each parameter to an object (which causes allocations for primitive types).</span></span>  
  
3.  <span data-ttu-id="f073c-376">Il affecte ces objets dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="f073c-376">It assigns these objects to the array.</span></span>  
  
4.  <span data-ttu-id="f073c-377">Il appelle la fonction, puis détermine le type de chaque argument de sorte qu’il peut être sérialisée pour ETW.</span><span class="sxs-lookup"><span data-stu-id="f073c-377">It calls the function, which then determines the type of each argument so it can be serialized for ETW.</span></span>  
  
 <span data-ttu-id="f073c-378">La charge mémoire élevée pour cette surcharge n’est pas significative lorsque le traçage des événements de faible volume, car la méthode est utilisée uniquement lorsque le fournisseur est activé.</span><span class="sxs-lookup"><span data-stu-id="f073c-378">The high overhead for this overload is not significant when tracing low-volume events, because the method is used only when the provider is enabled.</span></span> <span data-ttu-id="f073c-379">Toutefois, pour les événements de haut volume, la surcharge des performances peut être significative.</span><span class="sxs-lookup"><span data-stu-id="f073c-379">However, for high-volume events, the performance overhead can be significant.</span></span>  <span data-ttu-id="f073c-380">Vous pouvez éviter d’utiliser <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> pour les charges élevées en créant une surcharge de la nouvelle et plus rapide avec le <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f073c-380">You can avoid using <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> for high-volume payloads by creating a new, faster  overload with the <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> method.</span></span>  
  
 <span data-ttu-id="f073c-381">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-381">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-382">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-382">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-383">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-383">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-384">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-384">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-385">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-385">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-386">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-386">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-387">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-387">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-388">Argument de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-388">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-389">Écrit un événement à l’aide de l’identificateur d’événement et de l’argument de chaîne fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-389">Writes an event by using the provided event identifier and string argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-390">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-390">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-391">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-391">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-392">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-392">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-393">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-393">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-394">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-394">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="f073c-395">L’exemple suivant montre comment utiliser cette surcharge de méthode pour écrire un événement.</span><span class="sxs-lookup"><span data-stu-id="f073c-395">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="f073c-396">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="f073c-396">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]
 [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, int arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-397">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-397">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-398">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-398">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-399">Argument entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-399">An integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="f073c-400">Argument entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-400">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-401">Écrit un événement à l’aide de l’identificateur d’événement et des arguments en entier d’une valeur de 32 octets fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-401">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-402">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-402">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-403">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-403">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-404">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-404">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-405">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-405">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-406">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-406">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(int arg1, int arg2, int arg3)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, System::String ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-407">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-407">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-408">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-408">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-409">Argument entier 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-409">A 32-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="f073c-410">Argument de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-410">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-411">Écrit un événement à l’aide de l’identificateur d’événement et des arguments de chaînes et d’entiers 32 bits fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-411">Writes an event by using the provided event identifier and 32-bit integer and string arguments.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, byte[] arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, unsigned int8[] arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, cli::array &lt;System::Byte&gt; ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-412">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-412">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-413">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-413">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-414">Argument entier 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-414">A 64-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="f073c-415">Argument de tableau d’octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-415">A byte array argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-416">Écrit les données d’événements à l’aide de l’identificateur et des arguments de tableau de chaînes et d’entiers 64 bits spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-416">Writes the event data using the specified indentifier and 64-bit integer and byte array arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-417">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-417">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-418">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-418">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-419">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-419">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-420">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-420">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-421">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-421">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(Int64 arg1, Byte[] arg2)  
{  
 base.WriteEvent(2, arg1, arg2);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, long arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, int64 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, long arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-422">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-422">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-423">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-423">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-424">Argument entier 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-424">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="f073c-425">Argument entier 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-425">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-426">Écrit un événement à l’aide de l’identificateur d’événement et des arguments d’une valeur de 64 octets fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-426">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-427">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-427">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-428">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-428">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-429">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-429">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-430">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-430">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-431">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-431">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, System::String ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-432">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-432">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-433">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-433">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-434">Argument entier 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-434">A 64-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="f073c-435">Argument de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-435">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-436">Écrit un événement à l’aide de l’identificateur d’événement et des arguments de chaînes et d’entiers 64 bits fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-436">Writes an event by using the provided event identifier and 64-bit integer, and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-437">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-437">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-438">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-438">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-439">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-439">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-440">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-440">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-441">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-441">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(Int64 arg1, string arg2)  
{  
 base.WriteEvent(2, arg1, arg2);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, int arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-442">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-442">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-443">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-443">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-444">Argument de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-444">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="f073c-445">Argument entier 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-445">A 32 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-446">Écrit un événement à l’aide de l’identificateur d’événement et d’arguments fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-446">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-447">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-447">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-448">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-448">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-449">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-449">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-450">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-450">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-451">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-451">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, long arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int64 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, long arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-452">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-452">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-453">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-453">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-454">Argument de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-454">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="f073c-455">Argument entier 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-455">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-456">Écrit un événement à l’aide de l’identificateur d’événement et d’arguments fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-456">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-457">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-457">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-458">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-458">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-459">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-459">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-460">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-460">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-461">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-461">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, System::String ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-462">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-462">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-463">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-463">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-464">Argument de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-464">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="f073c-465">Argument de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-465">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-466">Écrit un événement à l’aide de l’identificateur d’événement et des arguments de chaîne fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-466">Writes an event by using the provided event identifier and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-467">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-467">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-468">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-468">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-469">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-469">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-470">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-470">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-471">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-471">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, int arg2, int arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, int32 arg2, int32 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As Integer, arg3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, int arg2, int arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.Int32" />
        <Parameter Name="arg3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-472">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-472">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-473">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-473">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-474">Argument entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-474">An integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="f073c-475">Argument entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-475">An integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="f073c-476">Argument entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-476">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-477">Écrit un événement à l’aide de l’identificateur d’événement et des arguments en entier d’une valeur de 32 octets fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-477">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-478">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-478">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-479">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-479">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-480">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-480">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-481">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-481">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-482">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-482">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, long arg2, long arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, int64 arg2, int64 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Long, arg3 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, long arg2, long arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Int64" />
        <Parameter Name="arg3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-483">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-483">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-484">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-484">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-485">Argument entier 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-485">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="f073c-486">Argument entier 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-486">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="f073c-487">Argument entier 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-487">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-488">Écrit un événement à l’aide de l’identificateur d’événement et des arguments d’une valeur de 64 octets fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-488">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-489">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-489">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-490">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-490">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-491">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-491">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-492">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-492">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-493">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-493">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, int arg2, int arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int32 arg2, int32 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Integer, arg3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, int arg2, int arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int32" />
        <Parameter Name="arg3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-494">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-494">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-495">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-495">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-496">Argument de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-496">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="f073c-497">Argument entier 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-497">A 32 bit integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="f073c-498">Argument entier 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-498">A 32 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-499">Écrit un événement à l’aide de l’identificateur d’événement et d’arguments fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-499">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-500">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-500">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-501">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-501">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-502">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-502">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-503">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-503">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-504">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-504">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, string arg2, string arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, string arg2, string arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As String, arg3 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, System::String ^ arg2, System::String ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
        <Parameter Name="arg3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-505">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-505">The event identifier.</span>
          </span>
          <span data-ttu-id="f073c-506">La valeur doit être comprise entre 0 et 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-506">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="f073c-507">Argument de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-507">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="f073c-508">Argument de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-508">A string argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="f073c-509">Argument de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-509">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-510">Écrit un événement à l’aide de l’identificateur d’événement et des arguments de chaîne fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-510">Writes an event by using the provided event identifier and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-511">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-511">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-512">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-512">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-513">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-513">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-514">Lorsque vous implémentez une méthode qui a été identifiée comme un événement ETW dans un <xref:System.Diagnostics.Tracing.EventSource>-classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="f073c-514">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="f073c-515">Vous devez appeler la classe de base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> méthode en passant le <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> et les mêmes arguments que la méthode implémentée comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-515">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEventCore">
      <MemberSignature Language="C#" Value="protected void WriteEventCore (int eventId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventCore(int32 eventId, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventCore(int eventId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="eventDataCount" Type="System.Int32" />
        <Parameter Name="data" Type="System.Diagnostics.Tracing.EventSource+EventData*" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-516">Identificateur de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-516">The event identifier.</span>
          </span>
        </param>
        <param name="eventDataCount">
          <span data-ttu-id="f073c-517">Nombre d'éléments de données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-517">The number of event data items.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="f073c-518">Structure contenant les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-518">The structure that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-519">Crée une surcharge <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> à l'aide de l'identificateur d'événement et des données d'événement fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-519">Creates a new <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> overload by using the provided event identifier and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-520">`eventid` doit être supérieur à 0 ou inférieur à 65 535 ou erreurs peuvent se produire dans l’opération.</span><span class="sxs-lookup"><span data-stu-id="f073c-520">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="f073c-521">Si les erreurs se produisent, vous pouvez obtenir plus d’informations sur la source de l’erreur en vérifiant le flux de sortie du débogueur, si vous avez un débogueur au processus de déclenchement d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-521">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="f073c-522">Vous pouvez également consulter les erreurs signalées dans le flux d’événements ETW, si vous avez un écouteur ETW sur la source d’événements où l’erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="f073c-522">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="f073c-523">Cette méthode protégée permet aux utilisateurs de définir de nouveaux <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> surcharges qui sont plus rapides que les surcharges fournis.</span><span class="sxs-lookup"><span data-stu-id="f073c-523">This protected method  enables users to define new <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overloads that are faster than the provided overloads.</span></span>   <span data-ttu-id="f073c-524">Création d’une nouvelle surcharge implique du code unsafe.</span><span class="sxs-lookup"><span data-stu-id="f073c-524">Creating a new overload involves unsafe code.</span></span>  <span data-ttu-id="f073c-525">La procédure de base consiste à allouer de la pile pour un tableau de descripteurs de données d’événement qui correspond au nombre d’éléments de la charge utile.</span><span class="sxs-lookup"><span data-stu-id="f073c-525">The basic procedure is to stack-allocate an array of event data descriptors that matches the number of payload items.</span></span>   <span data-ttu-id="f073c-526">Pour chaque élément de la charge utile, définir la taille correcte et que la valeur de l’événement de tableau de données. Appelez <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> avec le tableau initialisé.</span><span class="sxs-lookup"><span data-stu-id="f073c-526">For each payload item, set the correct size and value in the event data array.Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> with the initialized array.</span></span>  
  
 <span data-ttu-id="f073c-527">L’exemple suivant montre comment ajouter un <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> surcharge qui accepte quatre arguments.</span><span class="sxs-lookup"><span data-stu-id="f073c-527">The following example shows how to add a <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overload that accepts four arguments.</span></span> <span data-ttu-id="f073c-528">Un exemple serait si vous disposez d’un enregistrement de l’événement qui connecte à une chaîne et 3 entiers.</span><span class="sxs-lookup"><span data-stu-id="f073c-528">An example would be if you have a logging event that logs a string and 3 integers.</span></span>  
  
```csharp  
  
[Event(1)]  
public void LogTime(string tag, int hour, int minute, int second)   
{  
    WriteEvent(1, tag, hour, minute, second);  
}  
  
```  
  
 <span data-ttu-id="f073c-529">Vous pouvez le faire sans appeler <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>, mais il serait plus lente que nécessaire.</span><span class="sxs-lookup"><span data-stu-id="f073c-529">You could do this without calling <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>, but it would be slower than it needs to be.</span></span> <span data-ttu-id="f073c-530">C'est-à-dire, car elle utilise des tableaux et la réflexion pour déterminer comment procéder.</span><span class="sxs-lookup"><span data-stu-id="f073c-530">That is because it uses arrays and reflection to figure out what to do.</span></span> <span data-ttu-id="f073c-531">Si vous vous connectez à un taux élevé (> 1000 / s), il peut être nécessaire d’effectuer une assistance rapide, comme indiqué dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="f073c-531">If you log these at a high rate (> 1000 / sec), it can be worth making a fast helper, as shown in the following example.</span></span> <span data-ttu-id="f073c-532">La méthode occulte existants <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="f073c-532">The method shadows the existing <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>.</span></span> <span data-ttu-id="f073c-533">Par conséquent, le code de l’appelant d’origine (temps de journalisation) ne modifie pas réellement, mais le compilateur c# utiliseront la version plus spécialisée qui est plus rapide.</span><span class="sxs-lookup"><span data-stu-id="f073c-533">Thus the original caller code (LogTime) does not actually change, but the C# compiler will use the more specialized version which will be faster.</span></span>  
  
 <span data-ttu-id="f073c-534">Pour compiler du code unsafe, vous devez spécifier le [/unsafe (Options du compilateur c#)](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md) option du compilateur.</span><span class="sxs-lookup"><span data-stu-id="f073c-534">To compile unsafe code, you must specify the [/unsafe (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md) compiler option.</span></span>  
  
```csharp  
class AnotherEventSource : EventSource {  
  
    [NonEvent]  
    public unsafe void WriteEvent(int eventId, string arg1, int arg2, int arg3, int arg4)  
    {  
  
        fixed (char* arg1Ptr = arg1)  
        {  
            EventData* dataDesc = stackalloc EventData[4];  
  
            dataDesc[0].DataPointer = (IntPtr)arg1Ptr;  
            dataDesc[0].Size = (arg1.Length + 1) * 2; // Size in bytes, including a null terminator.   
            dataDesc[1].DataPointer = (IntPtr)(&arg2);  
            dataDesc[1].Size = 4;  
            dataDesc[2].DataPointer = (IntPtr)(&arg3);  
            dataDesc[2].Size = 4;  
            dataDesc[3].DataPointer = (IntPtr)(&arg4);  
            dataDesc[3].Size = 4;  
  
            WriteEventCore(eventId, 4, dataDesc);  
        }  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="f073c-535">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-535">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f073c-536">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-536">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WriteEventWithRelatedActivityId">
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityId (int eventId, Guid relatedActivityId, params object[] args);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityId(int32 eventId, valuetype System.Guid relatedActivityId, object[] args) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])" FrameworkAlternate="netframework-4.5;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEventWithRelatedActivityId (eventId As Integer, relatedActivityId As Guid, ParamArray args As Object())" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityId(int eventId, Guid relatedActivityId, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityId (int eventId, Guid childActivityID, params object[] args);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityId(int32 eventId, valuetype System.Guid childActivityID, object[] args) cil managed" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEventWithRelatedActivityId (eventId As Integer, childActivityID As Guid, ParamArray args As Object())" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityId(int eventId, Guid childActivityID, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" Index="0" />
        <Parameter Name="relatedActivityId" Type="System.Guid" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="childActivityID" Type="System.Guid" Index="1" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
        <Parameter Name="args" Type="System.Object[]" Index="2">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-537">Identificateur qui identifie de manière unique cet événement au sein de l'objet <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-537">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="f073c-538">Identificateur d'activité associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-538">The related activity identifier.</span>
          </span>
        </param>
        <param name="childActivityID">To be added.</param>
        <param name="args">
          <span data-ttu-id="f073c-539">Tableau d'objets qui contient les données relatives à l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-539">An array of objects that contain data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-540">[Pris en charge dans le .NET Framework 4.5.1 et versions ultérieures]</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-540">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="f073c-541">Écrit un événement qui indique que l'activité actuelle est liée à une autre activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-541">Writes an event that indicates that the current activity is related to another activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-542">Le <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> méthode consigne un événement de transfert.</span><span class="sxs-lookup"><span data-stu-id="f073c-542">The <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> method logs a transfer event.</span></span> <span data-ttu-id="f073c-543">L’activité du thread actuel est consignée avec l’événement, et cela permet à deux activités d’être liées par un consommateur d’événements.</span><span class="sxs-lookup"><span data-stu-id="f073c-543">The activity of the current thread is logged with the event, and this allows two activities to be related by a consumer of events.</span></span>  
  
 <span data-ttu-id="f073c-544">Appel de cette fonction votre méthode d’événement ETW doit suivre ces instructions :</span><span class="sxs-lookup"><span data-stu-id="f073c-544">Your ETW event method calling this function must follow these guidelines:</span></span>  
  
1.  <span data-ttu-id="f073c-545">Spécifier le premier paramètre comme un <xref:System.Guid> nommé `relatedActivityId`.</span><span class="sxs-lookup"><span data-stu-id="f073c-545">Specify the first parameter as a <xref:System.Guid> named `relatedActivityId`.</span></span>  
  
2.  <span data-ttu-id="f073c-546">Spécifiez soit <xref:System.Diagnostics.Tracing.EventOpcode.Send> ou <xref:System.Diagnostics.Tracing.EventOpcode.Receive> comme le <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="f073c-546">Specify either <xref:System.Diagnostics.Tracing.EventOpcode.Send> or <xref:System.Diagnostics.Tracing.EventOpcode.Receive> as the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="f073c-547">Appelez <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> passage dans l’événement ID, suivi par le GUID ID connexes, suivi de tous les paramètres de la méthode d’événement est passé dans le même ordre.</span><span class="sxs-lookup"><span data-stu-id="f073c-547">Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</span></span>  
  
 <span data-ttu-id="f073c-548">Si `args` est ne pas utilisé, il est converti en un tableau vide pour l’appel qui en résulte à ETW.</span><span class="sxs-lookup"><span data-stu-id="f073c-548">If `args` is not used, it is converted to an empty array for the resulting call to ETW.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f073c-549">L’exemple de code suivant montre comment peut spécifier une source d’événements qui appelle <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>.</span><span class="sxs-lookup"><span data-stu-id="f073c-549">The following code example shows how you might can specify an event source that calls <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSource.WriteEventWithId#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#1)]  
[!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEventWithRelatedActivityIdCore">
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* relatedActivityId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityIdCore(int32 eventId, valuetype System.Guid* relatedActivityId, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" FrameworkAlternate="netframework-4.5;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityIdCore(int eventId, Guid* relatedActivityId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* childActivityID, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityIdCore(int32 eventId, valuetype System.Guid* childActivityID, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityIdCore(int eventId, Guid* childActivityID, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" Index="0" />
        <Parameter Name="relatedActivityId" Type="System.Guid*" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="childActivityID" Type="System.Guid*" Index="1" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
        <Parameter Name="eventDataCount" Type="System.Int32" Index="2" />
        <Parameter Name="data" Type="System.Diagnostics.Tracing.EventSource+EventData*" Index="3" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="f073c-550">Identificateur qui identifie de manière unique cet événement au sein de l'objet <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-550">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="f073c-551">Pointeur vers le GUID de l'ID d'activité associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-551">A pointer to the GUID of the related activity ID.</span>
          </span>
        </param>
        <param name="childActivityID">To be added.</param>
        <param name="eventDataCount">
          <span data-ttu-id="f073c-552">Nombre d’éléments dans le champs <c>data</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-552">The number of items in the <c>data</c> field.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="f073c-553">Pointeur vers le premier élément dans le champ de données de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-553">A pointer to the first item in the event data field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f073c-554">[Pris en charge dans le .NET Framework 4.5.1 et versions ultérieures]</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-554">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="f073c-555">Écrit un événement qui indique que l'activité actuelle est liée à une autre activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f073c-555">Writes an event that indicates that the current activity is related to another activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f073c-556"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> est similaire à la <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> (méthode), mais offre des meilleures performances, bevcause, il n’a pas à effectuer une conversion unboxing le `childActivityID` et `data` arguments.</span><span class="sxs-lookup"><span data-stu-id="f073c-556"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> is similar to the <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> method but offers better performance, bevcause it does not have to unbox the `childActivityID` and `data` arguments.</span></span>  
  
 <span data-ttu-id="f073c-557">Appel de cette fonction votre méthode d’événement ETW doit suivre ces instructions :</span><span class="sxs-lookup"><span data-stu-id="f073c-557">Your ETW event method calling this function must follow these guidelines:</span></span>  
  
1.  <span data-ttu-id="f073c-558">Spécifier le premier paramètre comme un <xref:System.Guid> nommé `relatedActivityId`.</span><span class="sxs-lookup"><span data-stu-id="f073c-558">Specify the first parameter as a <xref:System.Guid> named `relatedActivityId`.</span></span>  
  
2.  <span data-ttu-id="f073c-559">Spécifiez soit <xref:System.Diagnostics.Tracing.EventOpcode.Send> ou <xref:System.Diagnostics.Tracing.EventOpcode.Receive> comme le <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="f073c-559">Specify either <xref:System.Diagnostics.Tracing.EventOpcode.Send> or <xref:System.Diagnostics.Tracing.EventOpcode.Receive> as the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="f073c-560">Appelez <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> passage dans l’événement ID, suivi par le GUID ID connexes, suivi de tous les paramètres de la méthode d’événement est passé dans le même ordre.</span><span class="sxs-lookup"><span data-stu-id="f073c-560">Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f073c-561">L’exemple de code c# suivant montre comment définir une surcharge de méthode qui appelle <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="f073c-561">The following C# code example shows how to define a method overload that calls <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSource.WriteEventWithId#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#5)]  
[!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#3)]
[!code-vb[System.Diagnostics.EventSource.WriteEventWithId#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>