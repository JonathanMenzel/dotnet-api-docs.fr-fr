<Type Name="DbExpressionBuilder" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
  <TypeSignature Language="C#" Value="public static class DbExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DbExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Module DbExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbExpressionBuilder abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f9424-101">Fournit une API pour construire les <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> et la rend accessible comme méthodes d’extension sur le type d’expression lui-même.</span><span class="sxs-lookup"><span data-stu-id="f9424-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s and allows that API to be accessed as extension methods on the expression type itself.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ Aggregate(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="f9424-102">Fonction qui définit l'opération d'agrégation.</span><span class="sxs-lookup"><span data-stu-id="f9424-102">The function that defines the aggregate operation.</span></span></param>
        <param name="argument"><span data-ttu-id="f9424-103">Argument sur lequel la fonction d'agrégation doit être calculée.</span><span class="sxs-lookup"><span data-stu-id="f9424-103">The argument over which the aggregate function should be calculated.</span></span></param>
        <summary><span data-ttu-id="f9424-104">Crée un <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-104">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span></span></summary>
        <returns><span data-ttu-id="f9424-105">Nouvelle fonction qui agrège une référence à la fonction et l'argument donnés.</span><span class="sxs-lookup"><span data-stu-id="f9424-105">A new function aggregate with a reference to the given function and argument.</span></span> <span data-ttu-id="f9424-106">La propriété Distinct de l'agrégat de fonction aura la valeur <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-106">The function aggregate's Distinct property will have the value <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-107"><paramref name="function" /> ou <paramref name="argument" /> null.</span><span class="sxs-lookup"><span data-stu-id="f9424-107"><paramref name="function" /> or <paramref name="argument" /> null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-108"><paramref name="function" /> n'est pas une fonction d'agrégation ou a plusieurs arguments, ou le type de résultat de <paramref name="argument" /> n'est pas égal au ou apte à être promu en type de paramètre <paramref name="function" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-108"><paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AggregateDistinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AggregateDistinct (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ AggregateDistinct(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="f9424-109">Fonction qui définit l'opération d'agrégation.</span><span class="sxs-lookup"><span data-stu-id="f9424-109">The function that defines the aggregate operation.</span></span></param>
        <param name="argument"><span data-ttu-id="f9424-110">Argument sur lequel la fonction d'agrégation doit être calculée.</span><span class="sxs-lookup"><span data-stu-id="f9424-110">The argument over which the aggregate function should be calculated.</span></span></param>
        <summary><span data-ttu-id="f9424-111">Crée un <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> qui est appliqué de façon séparée.</span><span class="sxs-lookup"><span data-stu-id="f9424-111">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> that is applied in a distinct fashion.</span></span></summary>
        <returns><span data-ttu-id="f9424-112">Nouvelle fonction qui agrège une référence à la fonction et l'argument donnés.</span><span class="sxs-lookup"><span data-stu-id="f9424-112">A new function aggregate with a reference to the given function and argument.</span></span> <span data-ttu-id="f9424-113">La propriété Distinct de l'agrégat de fonction aura la valeur <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-113">The function aggregate's Distinct property will have the value <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-114"><paramref name="function" /> ou <paramref name="argument" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-114"><paramref name="function" /> or <paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-115"><paramref name="function" /> n'est pas une fonction d'agrégation ou a plusieurs arguments, ou le type de résultat de <paramref name="argument" /> n'est pas égal au ou apte à être promu en type de paramètre <paramref name="function" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-115"><paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="All">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-116">Crée une <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> qui détermine si le prédicat donné s'applique à tous les éléments du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-116">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-117">Expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-117">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="f9424-118">Méthode représentant un prédicat à évaluer pour chaque membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-118">A method representing a predicate to evaluate for each member of the input set.</span></span>    <span data-ttu-id="f9424-119">Cette méthode doit produire une expression contenant un type de résultat booléen qui fournit la logique de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f9424-119">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="f9424-120">Crée une <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> qui détermine si le prédicat donné s'applique à tous les éléments du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-120">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
        <returns><span data-ttu-id="f9424-121">Nouvelle DbQuantifierExpression qui représente l'opération All.</span><span class="sxs-lookup"><span data-stu-id="f9424-121">A new DbQuantifierExpression that represents the All operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-122">L’expression produite par <paramref name="predicate" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-122">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-123">L’expression produite par <paramref name="Predicate" /> n’est pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-123">The expression produced by <paramref name="Predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="f9424-124">Liaison d'expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-124">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="f9424-125">Expression représentant un prédicat à évaluer pour chaque membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-125">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="f9424-126">Crée une <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> qui détermine si le prédicat donné s'applique à tous les éléments du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-126">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
        <returns><span data-ttu-id="f9424-127">Nouvelle DbQuantifierExpression qui représente l'opération All.</span><span class="sxs-lookup"><span data-stu-id="f9424-127">A new DbQuantifierExpression that represents the All operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-128"><paramref name="input" /> ou <paramref name="predicate" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-128"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-129"><paramref name="predicate" /> n’a pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-129"><paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbAndExpression And(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function And (left As DbExpression, right As DbExpression) As DbAndExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbAndExpression ^ And(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbAndExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-130">Expression booléenne qui spécifie l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-130">A Boolean expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-131">Expression booléenne qui spécifie l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-131">A Boolean expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="f9424-132">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> qui effectue l'opération AND logique sur les arguments de droite et de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-132">Creates an <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that performs the logical And of the left and right arguments.</span></span></summary>
        <returns><span data-ttu-id="f9424-133">Nouvelle DbAndExpression avec les arguments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-133">A new DbAndExpression with the specified arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-134"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-134"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-135"><paramref name="left" /> et <paramref name="right" /> n’ont pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-135"><paramref name="left" /> and <paramref name="right" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-136">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui détermine si l'argument de jeu spécifié n'est pas vide.</span><span class="sxs-lookup"><span data-stu-id="f9424-136">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Any(class System.Data.Common.CommandTrees.DbExpression source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-137">Expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-137">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="f9424-138">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui détermine si l'argument de jeu spécifié n'est pas vide.</span><span class="sxs-lookup"><span data-stu-id="f9424-138">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
        <returns><span data-ttu-id="f9424-139">Nouvelle <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> appliquée à une nouvelle <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> avec un argument spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-139">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-140"><paramref name="source" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-140"><paramref name="source" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-141"><paramref name="source" /> n’a pas un type de résultat collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-141"><paramref name="source" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-142">Expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-142">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="f9424-143">Méthode représentant le prédicat à évaluer pour chaque membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-143">A method representing the predicate to evaluate for each member of the input set.</span></span> <span data-ttu-id="f9424-144">Cette méthode doit produire une expression contenant un type de résultat booléen qui fournit la logique de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f9424-144">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="f9424-145">Crée une nouvelle <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> qui détermine si le prédicat donné s'applique à des éléments du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-145">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span></span></summary>
        <returns><span data-ttu-id="f9424-146">Nouvelle DbQuantifierExpression qui représente l'opération Any.</span><span class="sxs-lookup"><span data-stu-id="f9424-146">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-147">L’expression produite par <paramref name="predicate" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-147">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-148">L’expression produite par <paramref name="predicate" /> n’est pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-148">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="f9424-149">Liaison d'expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-149">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="f9424-150">Expression représentant un prédicat à évaluer pour chaque membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-150">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="f9424-151">Crée une nouvelle <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> qui détermine si le prédicat donné s'applique à des éléments du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-151">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span></span></summary>
        <returns><span data-ttu-id="f9424-152">Nouvelle DbQuantifierExpression qui représente l'opération Any.</span><span class="sxs-lookup"><span data-stu-id="f9424-152">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-153"><paramref name="input" /> ou <paramref name="predicate" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-153"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-154">L’expression produite par <paramref name="predicate" /> n’est pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-154">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="As">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-155">Retourne les arguments spécifiés comme un objet de paire clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="f9424-155">Returns the specified arguments as a key/value pair object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt; As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt; As(class System.Data.Common.CommandTrees.DbAggregate value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbAggregate, alias As String) As KeyValuePair(Of String, DbAggregate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt; As(System::Data::Common::CommandTrees::DbAggregate ^ value, System::String ^ alias);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbAggregate" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f9424-156">Valeur dans la paire clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="f9424-156">The value in the key/value pair.</span></span></param>
        <param name="alias"><span data-ttu-id="f9424-157">Clé dans la paire clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="f9424-157">The key in the key/value pair.</span></span></param>
        <summary><span data-ttu-id="f9424-158">Retourne les arguments spécifiés comme un objet de paire clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="f9424-158">Returns the specified arguments as a key/value pair object.</span></span></summary>
        <returns><span data-ttu-id="f9424-159">Objet de paire clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="f9424-159">A key/value pair object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt; As (this System.Data.Common.CommandTrees.DbExpression value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt; As(class System.Data.Common.CommandTrees.DbExpression value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbExpression, alias As String) As KeyValuePair(Of String, DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt; As(System::Data::Common::CommandTrees::DbExpression ^ value, System::String ^ alias);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f9424-160">Valeur dans la paire clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="f9424-160">The value in the key/value pair.</span></span></param>
        <param name="alias"><span data-ttu-id="f9424-161">Clé dans la paire clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="f9424-161">The key in the key/value pair.</span></span></param>
        <summary><span data-ttu-id="f9424-162">Retourne les arguments spécifiés comme un objet de paire clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="f9424-162">Returns the specified arguments as a key/value pair object.</span></span></summary>
        <returns><span data-ttu-id="f9424-163">Objet de paire clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="f9424-163">A key/value pair object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding Bind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Bind (input As DbExpression) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ Bind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="f9424-164">Expression à lier.</span><span class="sxs-lookup"><span data-stu-id="f9424-164">The expression to bind.</span></span></param>
        <summary><span data-ttu-id="f9424-165">Crée une <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> qui utilise un nom de variable généré pour lier l'expression donnée.</span><span class="sxs-lookup"><span data-stu-id="f9424-165">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses a generated variable name to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="f9424-166">Nouvelle expression qui lie l'expression spécifiée avec un nom de variable généré.</span><span class="sxs-lookup"><span data-stu-id="f9424-166">A new expression binding with the specified expression and a generated variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-167"><paramref name="input" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-167"><paramref name="input" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-168"><paramref name="input" /> n'a pas de résultat de collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-168"><paramref name="input" /> does not have a collection result.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding BindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BindAs (input As DbExpression, varName As String) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ BindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="f9424-169">Expression à lier.</span><span class="sxs-lookup"><span data-stu-id="f9424-169">The expression to bind.</span></span></param>
        <param name="varName"><span data-ttu-id="f9424-170">Nom de variable qui doit être utilisé pour la liaison.</span><span class="sxs-lookup"><span data-stu-id="f9424-170">The variable name that should be used for the binding.</span></span></param>
        <summary><span data-ttu-id="f9424-171">Crée une <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> qui utilise le nom de variable spécifié pour lier l'expression donnée.</span><span class="sxs-lookup"><span data-stu-id="f9424-171">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses the specified variable name to bind the given expression</span></span></summary>
        <returns><span data-ttu-id="f9424-172">Nouvelle expression qui lie l'expression spécifiée avec un nom de variable.</span><span class="sxs-lookup"><span data-stu-id="f9424-172">A new expression binding with the specified expression and variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-173"><paramref name="input" /> ou <paramref name="varName" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-173"><paramref name="input" /> or <paramref name="varName" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-174"><paramref name="input" /> n'a pas de résultat de collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-174"><paramref name="input" /> does not have a collection result.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Case">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCaseExpression Case(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, class System.Data.Common.CommandTrees.DbExpression elseExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Case (whenExpressions As IEnumerable(Of DbExpression), thenExpressions As IEnumerable(Of DbExpression), elseExpression As DbExpression) As DbCaseExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCaseExpression ^ Case(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ whenExpressions, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ thenExpressions, System::Data::Common::CommandTrees::DbExpression ^ elseExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCaseExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="thenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="elseExpression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="whenExpressions"><span data-ttu-id="f9424-175">Liste des expressions qui fournissent l'instruction conditionnelle pour chaque cas.</span><span class="sxs-lookup"><span data-stu-id="f9424-175">A list of expressions that provide the conditional for of each case.</span></span></param>
        <param name="thenExpressions"><span data-ttu-id="f9424-176">Liste des expressions qui fournissent le résultat de chaque expression Case.</span><span class="sxs-lookup"><span data-stu-id="f9424-176">A list of expressions that provide the result of each case.</span></span></param>
        <param name="elseExpression"><span data-ttu-id="f9424-177">Expression qui définit le résultat si aucune expression Case n'est mise en correspondance.</span><span class="sxs-lookup"><span data-stu-id="f9424-177">An expression that defines the result when no case is matched.</span></span></param>
        <summary><span data-ttu-id="f9424-178">Crée un <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-178">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span></span></summary>
        <returns><span data-ttu-id="f9424-179">Nouvelle DbCaseExpression avec les cas et le résultat par défaut spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-179">A new DbCaseExpression with the specified cases and default result.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-180"><paramref name="whenExpressions" /> ou <paramref name="thenExpressions" /> est null ou contient des valeurs null, ou <paramref name="elseExpression" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-180"><paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is null or contains null, or <paramref name="elseExpression" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-181"><paramref name="whenExpressions" /> ou <paramref name="thenExpressions" /> est vide ou <paramref name="whenExpressions" /> contient une expression avec un type de résultat non booléen, ou aucun type de résultat commun n'existe pour toutes les expressions dans <paramref name="thenExpressions" /> et <paramref name="elseExpression" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-181"><paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is empty or <paramref name="whenExpressions" /> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <paramref name="thenExpressions" /> and <paramref name="elseExpression" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CastTo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCastExpression CastTo(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage toType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CastTo (argument As DbExpression, toType As TypeUsage) As DbCastExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbCastExpression ^ CastTo(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ toType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCastExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-182">Argument auquel l'opération de cast doit être appliquée.</span><span class="sxs-lookup"><span data-stu-id="f9424-182">The argument to which the cast should be applied.</span></span></param>
        <param name="toType"><span data-ttu-id="f9424-183">Métadonnée de type qui spécifie le type en lequel le cast doit être effectué.</span><span class="sxs-lookup"><span data-stu-id="f9424-183">Type metadata that specifies the type to cast to.</span></span></param>
        <summary><span data-ttu-id="f9424-184">Crée une <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> qui applique une opération de cast à un argument polymorphe.</span><span class="sxs-lookup"><span data-stu-id="f9424-184">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that applies a cast operation to a polymorphic argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-185">Nouvelle DbCastExpression avec l'argument et le type de cible spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-185">A new DbCastExpression with the specified argument and target type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-186"><paramref name="Argument" /> ou <paramref name="toType" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-186"><paramref name="Argument" /> or <paramref name="toType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-187">Le cast spécifié n'est pas valide.</span><span class="sxs-lookup"><span data-stu-id="f9424-187">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Constant">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-188">Crée un <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-188">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Constant (value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f9424-189">Valeur de constante à représenter.</span><span class="sxs-lookup"><span data-stu-id="f9424-189">The constant value to represent.</span></span></param>
        <summary><span data-ttu-id="f9424-190">Crée une <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> avec la valeur de constante donnée.</span><span class="sxs-lookup"><span data-stu-id="f9424-190">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the given constant value.</span></span></summary>
        <returns><span data-ttu-id="f9424-191">Nouvelle DbConstantExpression avec la valeur donnée.</span><span class="sxs-lookup"><span data-stu-id="f9424-191">A new DbConstantExpression with the given value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-192"><paramref name="value" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-192"><paramref name="value" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-193">(Débogage) <paramref name="value" /> n'est pas une instance d'un type de constante valide.</span><span class="sxs-lookup"><span data-stu-id="f9424-193"><paramref name="value" /> is not an instance of a valid constant type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(class System.Data.Metadata.Edm.TypeUsage constantType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Constant (constantType As TypeUsage, value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Data::Metadata::Edm::TypeUsage ^ constantType, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="constantType"><span data-ttu-id="f9424-194">Type de la valeur de constante.</span><span class="sxs-lookup"><span data-stu-id="f9424-194">The type of the constant value.</span></span></param>
        <param name="value"><span data-ttu-id="f9424-195">Valeur de constante à représenter.</span><span class="sxs-lookup"><span data-stu-id="f9424-195">The constant value to represent.</span></span></param>
        <summary><span data-ttu-id="f9424-196">Crée une <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> du type primitif spécifié avec la valeur de constante indiquée.</span><span class="sxs-lookup"><span data-stu-id="f9424-196">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> of the specified primitive type with the given constant value.</span></span></summary>
        <returns><span data-ttu-id="f9424-197">Nouvelle DbConstantExpression avec la valeur et le type de résultat <paramref name="constantType" /> donnés.</span><span class="sxs-lookup"><span data-stu-id="f9424-197">A new DbConstantExpression with the given value and a result type of <paramref name="constantType" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-198"><paramref name="value" /> ou <paramref name="constantType" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-198"><paramref name="value" /> or <paramref name="constantType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-199"><paramref name="value" /> n'est pas une instance d'un type de constante valide, <paramref name="constantType" /> ne représente pas de type primitif ou <paramref name="value" /> est d'un type primitif différent que celui représenté par <paramref name="constantType" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-199"><paramref name="value" /> is not an instance of a valid constant type,  <paramref name="constantType" /> does not represent a primitive type, or <paramref name="value" /> is of a different primitive type than that represented by <paramref name="constantType" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRef">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-200">Crée une <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> qui encode une référence d'une entité spécifique d'un type donné en fonction des valeurs de clés.</span><span class="sxs-lookup"><span data-stu-id="f9424-200">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="f9424-201">Jeu d'entités qui contient l'élément référencé.</span><span class="sxs-lookup"><span data-stu-id="f9424-201">The entity set in which the referenced element resides.</span></span></param>
        <param name="keyValues"><span data-ttu-id="f9424-202">Collection d'<see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui fournit les valeurs de clés.</span><span class="sxs-lookup"><span data-stu-id="f9424-202">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="f9424-203">Ces expressions doivent correspondre (en nombre, type et ordre) aux propriétés de clé du type d'entité référencé.</span><span class="sxs-lookup"><span data-stu-id="f9424-203">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="f9424-204">Crée une nouvelle <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> qui encode une référence à une entité spécifique selon des valeurs clés.</span><span class="sxs-lookup"><span data-stu-id="f9424-204">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="f9424-205">Nouvelle DbRefExpression qui référence l'élément avec les valeurs de clés indiquées dans le jeu d'entités donné.</span><span class="sxs-lookup"><span data-stu-id="f9424-205">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-206"><paramref name="entitySet" /> a la valeur null ou <paramref name="keyValues" /> est null ou contient la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-206"><paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-207">Le nombre de <paramref name="keyValues" /> ne correspond pas au nombre de membres clés déclarés par le type d'élément de <paramref name="entitySet" /> ou <paramref name="keyValues" /> contient une expression avec un type de résultat qui n'est pas compatible avec le type du membre clé correspondant.</span><span class="sxs-lookup"><span data-stu-id="f9424-207">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="f9424-208">Jeu d'entités qui contient l'élément référencé.</span><span class="sxs-lookup"><span data-stu-id="f9424-208">The entity set in which the referenced element resides.</span></span></param>
        <param name="keyValues"><span data-ttu-id="f9424-209">Collection d'<see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui fournit les valeurs de clés.</span><span class="sxs-lookup"><span data-stu-id="f9424-209">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="f9424-210">Ces expressions doivent correspondre (en nombre, type et ordre) aux propriétés de clé du type d'entité référencé.</span><span class="sxs-lookup"><span data-stu-id="f9424-210">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="f9424-211">Crée une nouvelle <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> qui encode une référence à une entité spécifique selon des valeurs clés.</span><span class="sxs-lookup"><span data-stu-id="f9424-211">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="f9424-212">Nouvelle DbRefExpression qui référence l'élément avec les valeurs de clés indiquées dans le jeu d'entités donné.</span><span class="sxs-lookup"><span data-stu-id="f9424-212">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-213"><paramref name="entitySet" /> a la valeur null ou <paramref name="keyValues" /> est null ou contient la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-213"><paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-214">Le nombre de <paramref name="keyValues" /> ne correspond pas au nombre de membres clés déclarés par le type d'élément de <paramref name="entitySet" /> ou <paramref name="keyValues" /> contient une expression avec un type de résultat qui n'est pas compatible avec le type du membre clé correspondant.</span><span class="sxs-lookup"><span data-stu-id="f9424-214">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="f9424-215">Jeu d'entités qui contient l'élément référencé.</span><span class="sxs-lookup"><span data-stu-id="f9424-215">The entity set in which the referenced element resides.</span></span></param>
        <param name="entityType"><span data-ttu-id="f9424-216">Type spécifique de l'entité référencée.</span><span class="sxs-lookup"><span data-stu-id="f9424-216">The specific type of the referenced entity.</span></span> <span data-ttu-id="f9424-217">Il doit s'agir d'un type d'entité appartenant à la même hiérarchie que le type d'élément du jeu d'entités.</span><span class="sxs-lookup"><span data-stu-id="f9424-217">This must be an entity type from the same hierarchy as the entity set's element type.</span></span></param>
        <param name="keyValues"><span data-ttu-id="f9424-218">Collection d'<see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui fournit les valeurs de clés.</span><span class="sxs-lookup"><span data-stu-id="f9424-218">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="f9424-219">Ces expressions doivent correspondre (en nombre, type et ordre) aux propriétés de clé du type d'entité référencé.</span><span class="sxs-lookup"><span data-stu-id="f9424-219">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="f9424-220">Crée une <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> qui encode une référence d'une entité spécifique d'un type donné en fonction des valeurs de clés.</span><span class="sxs-lookup"><span data-stu-id="f9424-220">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
        <returns><span data-ttu-id="f9424-221">Nouvelle DbRefExpression qui référence l'élément avec les valeurs de clés indiquées dans le jeu d'entités donné.</span><span class="sxs-lookup"><span data-stu-id="f9424-221">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-222"><paramref name="entitySet" /> ou <paramref name="entityType" /> est null, ou <paramref name="keyValues" /> est null ou contient des valeurs null.</span><span class="sxs-lookup"><span data-stu-id="f9424-222"><paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-223">Le nombre de <paramref name="keyValues" /> ne correspond pas au nombre de membres clés déclarés par le type d'élément de <paramref name="entitySet" /> ou <paramref name="keyValues" /> contient une expression avec un type de résultat qui n'est pas compatible avec le type du membre clé correspondant.</span><span class="sxs-lookup"><span data-stu-id="f9424-223">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="f9424-224">Jeu d'entités qui contient l'élément référencé.</span><span class="sxs-lookup"><span data-stu-id="f9424-224">The entity set in which the referenced element resides.</span></span></param>
        <param name="entityType"><span data-ttu-id="f9424-225">Type spécifique de l'entité référencée.</span><span class="sxs-lookup"><span data-stu-id="f9424-225">The specific type of the referenced entity.</span></span> <span data-ttu-id="f9424-226">Il doit s'agir d'un type d'entité appartenant à la même hiérarchie que le type d'élément du jeu d'entités.</span><span class="sxs-lookup"><span data-stu-id="f9424-226">This must be an entity type from the same hierarchy as the entity set's element type.</span></span></param>
        <param name="keyValues"><span data-ttu-id="f9424-227">Collection d'<see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui fournit les valeurs de clés.</span><span class="sxs-lookup"><span data-stu-id="f9424-227">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="f9424-228">Ces expressions doivent correspondre (en nombre, type et ordre) aux propriétés de clé du type d'entité référencé.</span><span class="sxs-lookup"><span data-stu-id="f9424-228">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="f9424-229">Crée une <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> qui encode une référence d'une entité spécifique d'un type donné en fonction des valeurs de clés.</span><span class="sxs-lookup"><span data-stu-id="f9424-229">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
        <returns><span data-ttu-id="f9424-230">Nouvelle DbRefExpression qui référence l'élément avec les valeurs de clés indiquées dans le jeu d'entités donné.</span><span class="sxs-lookup"><span data-stu-id="f9424-230">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-231"><paramref name="entitySet" /> ou <paramref name="entityType" /> est null, ou <paramref name="keyValues" /> est null ou contient des valeurs null.</span><span class="sxs-lookup"><span data-stu-id="f9424-231"><paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-232">Le nombre de <paramref name="keyValues" /> ne correspond pas au nombre de membres clés déclarés par le type d'élément de <paramref name="entitySet" /> ou <paramref name="keyValues" /> contient une expression avec un type de résultat qui n'est pas compatible avec le type du membre clé correspondant.</span><span class="sxs-lookup"><span data-stu-id="f9424-232">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CrossApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-233">Crée une <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> qui évalue l'expression <paramref name="apply" /> indiquée une fois pour chaque élément d'un jeu d'entrées particulier, produisant une collection de lignes avec les colonnes input et apply correspondantes.</span><span class="sxs-lookup"><span data-stu-id="f9424-233">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-234">Objet <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-234">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="f9424-235">Méthode qui spécifie la logique à évaluer une fois pour chaque membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-235">A method that specifies the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="f9424-236">Crée une <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> qui évalue l'expression <paramref name="apply" /> indiquée une fois pour chaque élément d'un jeu d'entrées particulier, produisant une collection de lignes avec les colonnes input et apply correspondantes.</span><span class="sxs-lookup"><span data-stu-id="f9424-236">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="f9424-237">Les lignes pour lesquelles <paramref name="apply" /> correspond à un jeu vide ne sont pas incluses.</span><span class="sxs-lookup"><span data-stu-id="f9424-237">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span></summary>
        <returns><span data-ttu-id="f9424-238">Nouvelle DbApplyExpression avec les liaisons d'entrée et d'application spécifiées et <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossApply.</span><span class="sxs-lookup"><span data-stu-id="f9424-238">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-239">Le résultat de <paramref name="apply" /> contient un nom ou une expression qui est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-239">The result of <paramref name="apply" /> contains a name or expression that is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-240">Le résultat de <paramref name="apply" /> contient un nom ou une expression qui n'est pas valide dans une liaison d'expression.</span><span class="sxs-lookup"><span data-stu-id="f9424-240">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="f9424-241"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-241">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="f9424-242"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> qui spécifie la logique à évaluer une fois pour chaque membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-242">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="f9424-243">Crée une <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> qui évalue l'expression <paramref name="apply" /> indiquée une fois pour chaque élément d'un jeu d'entrées particulier, produisant une collection de lignes avec les colonnes input et apply correspondantes.</span><span class="sxs-lookup"><span data-stu-id="f9424-243">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="f9424-244">Les lignes pour lesquelles <paramref name="apply" /> correspond à un jeu vide ne sont pas incluses.</span><span class="sxs-lookup"><span data-stu-id="f9424-244">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span></summary>
        <returns><span data-ttu-id="f9424-245">Nouvelle DbApplyExpression avec les liaisons d'entrée et d'application spécifiées et <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossApply.</span><span class="sxs-lookup"><span data-stu-id="f9424-245">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-246"><paramref name="input" /> ou <paramref name="apply" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-246"><paramref name="input" /> or <paramref name="apply" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CrossJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossJoin (inputs As IEnumerable(Of DbExpressionBinding)) As DbCrossJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCrossJoinExpression ^ CrossJoin(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ inputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCrossJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="inputs"><span data-ttu-id="f9424-247">Liste de liaisons d'expression qui spécifie les jeux d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-247">A list of expression bindings that specifies the input sets.</span></span></param>
        <summary><span data-ttu-id="f9424-248">Crée une <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> qui joint de façon non conditionnelle les jeux spécifiés par la liste de liaisons d'expression d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-248">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that unconditionally joins the sets specified by the list of input expression bindings.</span></span></summary>
        <returns><span data-ttu-id="f9424-249">Nouvelle DbCrossJoinExpression, avec un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossJoin, qui représente la jointure inconditionnelle des jeux de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-249">A new DbCrossJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossJoin, that represents the unconditional join of the input sets.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-250"><paramref name="inputs" /> est null ou contient des éléments null.</span><span class="sxs-lookup"><span data-stu-id="f9424-250"><paramref name="inputs" /> is null or contains null element.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-251"><paramref name="inputs" /> contient moins de deux liaisons d'expression.</span><span class="sxs-lookup"><span data-stu-id="f9424-251"><paramref name="inputs" /> contains fewer than 2 expression bindings.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deref">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDerefExpression Deref(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Deref (argument As DbExpression) As DbDerefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDerefExpression ^ Deref(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDerefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-252">Objet <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui fournit la référence.</span><span class="sxs-lookup"><span data-stu-id="f9424-252">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that provides the reference.</span></span> <span data-ttu-id="f9424-253">Cette expression doit avoir un type référence.</span><span class="sxs-lookup"><span data-stu-id="f9424-253">This expression must have a reference Type.</span></span></param>
        <summary><span data-ttu-id="f9424-254">Crée une <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> qui récupère une entité spécifique à partir d'une expression de référence.</span><span class="sxs-lookup"><span data-stu-id="f9424-254">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that retrieves a specific Entity given a reference expression.</span></span></summary>
        <returns><span data-ttu-id="f9424-255">Nouvelle DbDerefExpression qui récupère l'entité spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f9424-255">A new DbDerefExpression that retrieves the specified Entity.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-256"><paramref name="argument" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-256"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-257"><paramref name="argument" /> n'a pas un type de résultat référence.</span><span class="sxs-lookup"><span data-stu-id="f9424-257"><paramref name="argument" /> does not have a reference result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDistinctExpression Distinct(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct (argument As DbExpression) As DbDistinctExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDistinctExpression ^ Distinct(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDistinctExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-258">Expression qui définit le jeu sur lequel l'opération Distinct doit être exécutée.</span><span class="sxs-lookup"><span data-stu-id="f9424-258">An expression that defines the set over which to perfom the distinct operation.</span></span></param>
        <summary><span data-ttu-id="f9424-259">Crée une <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> qui supprime les doublons de l'argument de jeu donné.</span><span class="sxs-lookup"><span data-stu-id="f9424-259">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that removes duplicates from the given set argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-260">Nouvelle DbDistinctExpression qui représente l'opération Distinct appliquée à l'argument défini spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-260">A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-261"><paramref name="argument" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-261"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-262"><paramref name="argument" /> n’a pas un type de résultat collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-262"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Divide(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Divide (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Divide(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-263">Expression qui spécifie l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-263">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-264">Expression qui spécifie l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-264">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="f9424-265">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> qui divise l'argument de gauche par l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-265">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that divides the left argument by the right argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-266">Nouvelle DbArithmeticExpression représentant la division.</span><span class="sxs-lookup"><span data-stu-id="f9424-266">A new DbArithmeticExpression representing the division operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-267"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-267"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-268">Aucun type de résultat numérique commun n'existe entre <paramref name="left" /> ou <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-268">No common numeric result type exists between <paramref name="left" /> or <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbElementExpression Element(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Element (argument As DbExpression) As DbElementExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbElementExpression ^ Element(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbElementExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-269">Expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-269">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="f9424-270">Crée une <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> qui convertit un jeu en singleton.</span><span class="sxs-lookup"><span data-stu-id="f9424-270">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that converts a set into a singleton.</span></span></summary>
        <returns><span data-ttu-id="f9424-271">DbElementExpression qui représente la conversion de l'argument défini spécifié en un singleton.</span><span class="sxs-lookup"><span data-stu-id="f9424-271">A DbElementExpression that represents the conversion of the set argument to a singleton.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-272"><paramref name="argument" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-272"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-273"><paramref name="argument" /> n’a pas un type de résultat collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-273"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression Equal(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Equal (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ Equal(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-274">Expression qui spécifie l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-274">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-275">Expression qui spécifie l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-275">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="f9424-276">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> qui compare les arguments de droite et de gauche pour vérifier s'ils sont égaux.</span><span class="sxs-lookup"><span data-stu-id="f9424-276">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for equality.</span></span></summary>
        <returns><span data-ttu-id="f9424-277">Nouvelle DbComparisonExpression représentant la comparaison d'égalité.</span><span class="sxs-lookup"><span data-stu-id="f9424-277">A new DbComparisonExpression representing the equality comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-278"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-278"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-279">Aucun type de résultat comparable pour l'égalité commun n'existe entre <paramref name="left" /> et <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-279">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExceptExpression Except(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (left As DbExpression, right As DbExpression) As DbExceptExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExceptExpression ^ Except(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExceptExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-280">Expression qui définit l'argument défini à gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-280">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-281">Expression qui définit l'argument défini à droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-281">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="f9424-282">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> qui soustrait l'argument de droite du jeu de l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-282">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that computes the subtraction of the right set argument from the left set argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-283">Nouvelle DbExceptExpression qui représente la différence de l'argument de gauche à partir de l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-283">A new DbExceptExpression that represents the difference of the left argument from the right argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-284"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-284"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-285">Aucun type de résultat de collection commun n'existe entre <paramref name="left" /> et <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-285">No common collection result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Exists(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exists (argument As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Exists(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-286">Expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-286">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="f9424-287">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui détermine si l'argument de jeu spécifié n'est pas vide.</span><span class="sxs-lookup"><span data-stu-id="f9424-287">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
        <returns><span data-ttu-id="f9424-288">Nouvelle <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> appliquée à une nouvelle <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> avec un argument spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-288">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-289"><paramref name="argument" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-289"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-290"><paramref name="argument" /> n’a pas un type de résultat collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-290"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression False" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property False As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ False { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9424-291">Obtient un objet <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> avec la valeur booléenne <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-291">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="f9424-292">Objet <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> associé à la valeur booléenne <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-292">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Filter(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Filter (input As DbExpressionBinding, predicate As DbExpression) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Filter(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="f9424-293">Liaison d'expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-293">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="f9424-294">Expression représentant un prédicat à évaluer pour chaque membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-294">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="f9424-295">Crée une <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> qui filtre les éléments du jeu de données d'entrée indiqué à l'aide du prédicat spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-295">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="f9424-296">Nouvelle DbFilterExpression qui produit l'ensemble filtré.</span><span class="sxs-lookup"><span data-stu-id="f9424-296">A new DbFilterExpression that produces the filtered set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-297"><paramref name="input" /> ou <paramref name="predicate" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-297"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-298"><paramref name="predicate" /> n’a pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-298"><paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FullOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-299">Crée une nouvelle <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> qui joint les jeux spécifiés par les expressions de gauche et de droite sur la condition de jointure spécifiée à l’aide de FullOuterJoin en tant que <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-299">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-300"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie l’argument du jeu de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-300">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-301"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie l’argument du jeu de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-301">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="f9424-302">Méthode représentant la condition de jointure.</span><span class="sxs-lookup"><span data-stu-id="f9424-302">A method representing the condition on which to join.</span></span> <span data-ttu-id="f9424-303">Cette méthode doit produire une expression avec un type de résultat booléen qui fournit la logique de la condition de jointure.</span><span class="sxs-lookup"><span data-stu-id="f9424-303">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="f9424-304">Crée une nouvelle <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> qui joint les jeux spécifiés par les expressions de gauche et de droite sur la condition de jointure spécifiée à l’aide de FullOuterJoin en tant que <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-304">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="f9424-305">Nouvelle DbJoinExpression, avec un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de FullOuterJoin, qui représente l’opération de jointure externe complète appliquée aux jeux d’entrée de gauche et de droite à la condition de jointure donnée.</span><span class="sxs-lookup"><span data-stu-id="f9424-305">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-306">L’expression produite par <paramref name="joinCondition" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-306">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-307">L’expression produite par <paramref name="joinCondition" /> n’est pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-307">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-308">Objet <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> qui spécifie l'argument de gauche du jeu.</span><span class="sxs-lookup"><span data-stu-id="f9424-308">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-309">Objet <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> qui spécifie l'argument de droite du jeu.</span><span class="sxs-lookup"><span data-stu-id="f9424-309">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="f9424-310">Expression qui spécifie la condition d'appartenance.</span><span class="sxs-lookup"><span data-stu-id="f9424-310">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="f9424-311">Crée une <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> qui joint les jeux indiqués par les liaisons d'expressions de gauche et de droite sur la condition de jointure spécifiée, en utilisant FullOuterJoin comme type <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-311">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="f9424-312">Nouveau DbJoinExpression, avec FullOuterJoin comme <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />, qui représente l’opération de jointure externe complète appliquée aux jeux d’entrée de gauche et de droite à la condition de jointure donnée.</span><span class="sxs-lookup"><span data-stu-id="f9424-312">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-313"><paramref name="left" />, <paramref name="right" /> ou <paramref name="joinCondition" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-313"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-314">L’expression produite par <paramref name="joinCondition" /> n’est pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-314">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEntityRef (argument As DbExpression) As DbEntityRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbEntityRefExpression ^ GetEntityRef(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbEntityRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-315">Expression qui fournit l'entité.</span><span class="sxs-lookup"><span data-stu-id="f9424-315">The expression that provides the entity.</span></span> <span data-ttu-id="f9424-316">Cette expression doit avoir un résultat de type entité.</span><span class="sxs-lookup"><span data-stu-id="f9424-316">This expression must have an entity result type.</span></span></param>
        <summary><span data-ttu-id="f9424-317">Crée une <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> qui récupère la référence de l'entité spécifiée sous une forme structurelle.</span><span class="sxs-lookup"><span data-stu-id="f9424-317">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that retrieves the ref of the specifed entity in structural form.</span></span></summary>
        <returns><span data-ttu-id="f9424-318">Nouvelle DbEntityRefExpression qui récupère une référence à l'entité spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f9424-318">A new DbEntityRefExpression that retrieves a reference to the specified entity.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-319"><paramref name="argument" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-319"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-320"><paramref name="argument" /> n'a pas un type de résultat entité.</span><span class="sxs-lookup"><span data-stu-id="f9424-320"><paramref name="argument" /> does not have an entity result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRefKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRefKey (argument As DbExpression) As DbRefKeyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefKeyExpression ^ GetRefKey(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefKeyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-321">Expression qui fournit la référence.</span><span class="sxs-lookup"><span data-stu-id="f9424-321">The expression that provides the reference.</span></span> <span data-ttu-id="f9424-322">Cette expression doit avoir un type référence avec un type d'élément entité.</span><span class="sxs-lookup"><span data-stu-id="f9424-322">This expression must have a reference Type with an Entity element type.</span></span></param>
        <summary><span data-ttu-id="f9424-323">Crée une <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> qui récupère les valeurs de clés de la référence spécifiée sous une forme structurelle.</span><span class="sxs-lookup"><span data-stu-id="f9424-323">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that retrieves the key values of the specifed reference in structural form.</span></span></summary>
        <returns><span data-ttu-id="f9424-324">Nouvelle DbRefKeyExpression qui récupère les valeurs de clés de la référence spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f9424-324">A new DbRefKeyExpression that retrieves the key values of the specified reference.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-325"><paramref name="argument" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-325"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-326"><paramref name="argument" /> n'a pas un type de résultat référence.</span><span class="sxs-lookup"><span data-stu-id="f9424-326"><paramref name="argument" /> does not have a reference result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-327">Expression qui spécifie l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-327">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-328">Expression qui spécifie l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-328">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="f9424-329">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> qui détermine si l'argument de gauche est supérieur à l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-329">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than the right argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-330">Nouvelle DbComparisonExpression qui représente la comparaison "supérieur à".</span><span class="sxs-lookup"><span data-stu-id="f9424-330">A new DbComparisonExpression representing the greater-than comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-331"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-331"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-332">Aucun type de résultat comparable pour l'ordre commun n'existe entre <paramref name="left" /> et <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-332">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-333">Expression qui spécifie l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-333">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-334">Expression qui spécifie l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-334">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="f9424-335">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> qui détermine si l'argument de gauche est supérieur ou égal à l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-335">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than or equal to the right argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-336">Nouvelle DbComparisonExpression représentant la comparaison "supérieur à" ou "égal à".</span><span class="sxs-lookup"><span data-stu-id="f9424-336">A new DbComparisonExpression representing the greater-than-or-equal-to comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-337"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-337"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-338">Aucun type de résultat comparable pour l'ordre commun n'existe entre <paramref name="left" /> et <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-338">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBind (input As DbExpression) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="f9424-339">Expression à lier.</span><span class="sxs-lookup"><span data-stu-id="f9424-339">The expression to bind.</span></span></param>
        <summary><span data-ttu-id="f9424-340">Crée une liaison d'expressions de groupe qui utilise des noms de variable générés et des noms de variable de groupe pour lier l'expression indiquée.</span><span class="sxs-lookup"><span data-stu-id="f9424-340">Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="f9424-341">Nouvelle liaison d'expression de groupe utilisant l’expression spécifiée ainsi qu’un nom de variable généré et un nom de variable de groupe.</span><span class="sxs-lookup"><span data-stu-id="f9424-341">A new group expression binding with the specified expression and a generated variable name and group variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-342"><paramref name="input" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-342"><paramref name="input" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-343"><paramref name="input" /> n’a pas un type de résultat collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-343"><paramref name="input" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBindAs (input As DbExpression, varName As String, groupVarName As String) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName, System::String ^ groupVarName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
        <Parameter Name="groupVarName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="f9424-344">Expression à lier.</span><span class="sxs-lookup"><span data-stu-id="f9424-344">The expression to bind.</span></span></param>
        <param name="varName"><span data-ttu-id="f9424-345">Nom de variable qui doit être utilisé pour la liaison.</span><span class="sxs-lookup"><span data-stu-id="f9424-345">The variable name that should be used for the binding.</span></span></param>
        <param name="groupVarName"><span data-ttu-id="f9424-346">Nom de variable qui doit être utilisé pour faire référence au groupe lorsque la nouvelle liaison d'expressions de groupe est employée dans une expression group-by.</span><span class="sxs-lookup"><span data-stu-id="f9424-346">The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.</span></span></param>
        <summary><span data-ttu-id="f9424-347">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> qui utilise le nom de variable spécifié et des noms de variable de groupe pour lier l'expression indiquée.</span><span class="sxs-lookup"><span data-stu-id="f9424-347">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that uses the specified variable name and group variable names to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="f9424-348">Nouvelle liaison d'expression de groupe qui utilise l'expression spécifiée, un nom de variable et un nom de variable de groupe.</span><span class="sxs-lookup"><span data-stu-id="f9424-348">A new group expression binding with the specified expression, variable name and group variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-349"><paramref name="input" />, <paramref name="varName" /> ou <paramref name="groupVarName" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-349"><paramref name="input" />,  <paramref name="varName" /> or <paramref name="groupVarName" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-350"><paramref name="input" /> n’a pas un type de résultat collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-350"><paramref name="input" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupByExpression GroupBy(class System.Data.Common.CommandTrees.DbGroupExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy (input As DbGroupExpressionBinding, keys As IEnumerable(Of KeyValuePair(Of String, DbExpression)), aggregates As IEnumerable(Of KeyValuePair(Of String, DbAggregate))) As DbGroupByExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupByExpression ^ GroupBy(System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ keys, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt;&gt; ^ aggregates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupByExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbGroupExpressionBinding" RefType="this" />
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
        <Parameter Name="aggregates" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="f9424-351">Objet <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-351">A <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="keys"><span data-ttu-id="f9424-352">Liste de paires d'expressions de chaîne qui définissent les colonnes de regroupement.</span><span class="sxs-lookup"><span data-stu-id="f9424-352">A list of string-expression pairs that define the grouping columns.</span></span></param>
        <param name="aggregates"><span data-ttu-id="f9424-353">Liste des expressions qui spécifient les agrégats à appliquer.</span><span class="sxs-lookup"><span data-stu-id="f9424-353">A list of expressions that specify aggregates to apply.</span></span></param>
        <summary><span data-ttu-id="f9424-354">Crée une <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> qui regroupe les éléments du jeu de données d'entrée en fonction des clés de groupe indiquées et applique les agrégats donnés.</span><span class="sxs-lookup"><span data-stu-id="f9424-354">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that groups the elements of the input set according to the specified group keys and applies the given aggregates.</span></span></summary>
        <returns><span data-ttu-id="f9424-355">Nouvelle DbGroupByExpression du jeu de données d'entrée spécifié, regroupant les clés et les agrégats.</span><span class="sxs-lookup"><span data-stu-id="f9424-355">A new DbGroupByExpression with the specified input set, grouping keys and aggregates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-356">DbGroupByExpression permet à la liste des clés ou à la liste d’agrégats d’être vide, mais pas les deux.</span><span class="sxs-lookup"><span data-stu-id="f9424-356">DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-357"><paramref name="input" />, <paramref name="keys" /> ou <paramref name="aggregates" /> est null, <paramref name="keys" /> contient une clé ou une expression de colonne null, ou <paramref name="aggregates" /> contient un nom de colonne global ou agrégat null.</span><span class="sxs-lookup"><span data-stu-id="f9424-357"><paramref name="input" />,  <paramref name="keys" /> or <paramref name="aggregates" /> is null,  <paramref name="keys" /> contains a null column key or expression, or <paramref name="aggregates" /> contains a null aggregate column name or aggregate.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-358"><paramref name="keys" /> et <paramref name="aggregates" /> sont vides, ou un nom de colonne non valide ou en double a été spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-358">Both <paramref name="keys" /> and <paramref name="aggregates" /> are empty, or an invalid or duplicate column name was specified.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InnerJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-359">Crée une <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> qui joint les jeux indiqués par les expressions de gauche et de droite sur la condition de jointure spécifiée, en utilisant InnerJoin comme type <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-359">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-360"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie l’argument du jeu de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-360">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-361"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie l’argument du jeu de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-361">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="f9424-362">Méthode représentant la condition de jointure.</span><span class="sxs-lookup"><span data-stu-id="f9424-362">A method representing the condition on which to join.</span></span> <span data-ttu-id="f9424-363">Cette méthode doit produire une expression avec un type de résultat booléen qui fournit la logique de la condition de jointure.</span><span class="sxs-lookup"><span data-stu-id="f9424-363">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="f9424-364">Crée une <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> qui joint les jeux indiqués par les expressions de gauche et de droite sur la condition de jointure spécifiée, en utilisant InnerJoin comme type <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-364">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="f9424-365">Nouvelle DbJoinExpression, avec un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> d'InnerJoin, qui représente l'opération de jointure interne entière appliquée aux jeux de données d'entrée de gauche et de droite dans la condition de jointure donnée.</span><span class="sxs-lookup"><span data-stu-id="f9424-365">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-366">L’expression produite par <paramref name="joinCondition" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-366">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-367">L’expression produite par <paramref name="joinCondition" /> n’est pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-367">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-368">Objet <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> qui spécifie l'argument de gauche du jeu.</span><span class="sxs-lookup"><span data-stu-id="f9424-368">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-369">Objet <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> qui spécifie l'argument de droite du jeu.</span><span class="sxs-lookup"><span data-stu-id="f9424-369">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="f9424-370">Expression qui spécifie la condition d'appartenance.</span><span class="sxs-lookup"><span data-stu-id="f9424-370">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="f9424-371">Crée une <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> qui joint les jeux indiqués par les liaisons d'expressions de gauche et de droite sur la condition de jointure spécifiée, en utilisant InnerJoin comme type <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-371">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="f9424-372">Nouveau DbJoinExpression, avec InnerJoin comme <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />, qui représente l’opération de jointure interne entière appliquée aux jeux de données d’entrée de gauche et de droite dans la condition de jointure donnée.</span><span class="sxs-lookup"><span data-stu-id="f9424-372">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-373"><paramref name="left" />, <paramref name="right" /> ou <paramref name="joinCondition" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-373"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-374"><paramref name="joinCondition" /> n’a pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-374"><paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIntersectExpression Intersect(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect (left As DbExpression, right As DbExpression) As DbIntersectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIntersectExpression ^ Intersect(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIntersectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-375">Expression qui définit l'argument défini à gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-375">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-376">Expression qui définit l'argument défini à droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-376">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="f9424-377">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> qui calcule l'intersection des arguments de gauche et de droite du jeu.</span><span class="sxs-lookup"><span data-stu-id="f9424-377">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that computes the intersection of the left and right set arguments.</span></span></summary>
        <returns><span data-ttu-id="f9424-378">Nouvelle DbIntersectExpression qui représente l'intersection des arguments de gauche et de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-378">A new DbIntersectExpression that represents the intersection of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-379"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-379"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-380">Aucun type de résultat de collection commun n'existe entre <paramref name="left" /> ou <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-380">No common collection result type exists between <paramref name="left" /> or <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-381">Crée une <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> représentant l'application de la fonction Lambda spécifiée aux arguments donnés.</span><span class="sxs-lookup"><span data-stu-id="f9424-381">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, arguments As IEnumerable(Of DbExpression)) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="lambda"><span data-ttu-id="f9424-382">Instance <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> représentant la fonction Lambda à appliquer.</span><span class="sxs-lookup"><span data-stu-id="f9424-382">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span></span></param>
        <param name="arguments"><span data-ttu-id="f9424-383">Liste des expressions qui fournissent les arguments.</span><span class="sxs-lookup"><span data-stu-id="f9424-383">A list of expressions that provide the arguments.</span></span></param>
        <summary><span data-ttu-id="f9424-384">Crée une <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> représentant l'application de la fonction Lambda spécifiée aux arguments donnés.</span><span class="sxs-lookup"><span data-stu-id="f9424-384">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
        <returns><span data-ttu-id="f9424-385">Nouveau DbLambdaExpression représentant l'application de fonction Lambda.</span><span class="sxs-lookup"><span data-stu-id="f9424-385">A new DbLambdaExpression representing the Lambda function application.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-386"><paramref name="lambda" /> ou <paramref name="arguments" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-386"><paramref name="lambda" /> or <paramref name="arguments" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-387">Le nombre de <paramref name="arguments" /> n'est pas égal au nombre de variables déclarées par <paramref name="lambda" />, ou <paramref name="arguments" /> contient une expression avec un type de résultat qui n'est pas égal au type de variable correspondant ni apte à être promu en celui-ci.</span><span class="sxs-lookup"><span data-stu-id="f9424-387">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, ParamArray arguments As DbExpression()) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="lambda"><span data-ttu-id="f9424-388">Instance <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> représentant la fonction Lambda à appliquer.</span><span class="sxs-lookup"><span data-stu-id="f9424-388">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span></span></param>
        <param name="arguments"><span data-ttu-id="f9424-389">Expressions qui fournissent les arguments.</span><span class="sxs-lookup"><span data-stu-id="f9424-389">Expressions that provide the arguments.</span></span></param>
        <summary><span data-ttu-id="f9424-390">Crée une <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> représentant l'application de la fonction Lambda spécifiée aux arguments donnés.</span><span class="sxs-lookup"><span data-stu-id="f9424-390">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
        <returns><span data-ttu-id="f9424-391">Nouveau DbLambdaExpression représentant l'application de fonction Lambda.</span><span class="sxs-lookup"><span data-stu-id="f9424-391">A new DbLambdaExpression representing the Lambda function application.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-392"><paramref name="lambda" /> ou <paramref name="arguments" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-392"><paramref name="lambda" /> or <paramref name="arguments" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-393">Le nombre de <paramref name="arguments" /> n'est pas égal au nombre de variables déclarées par <paramref name="lambda" />, ou <paramref name="arguments" /> contient une expression avec un type de résultat qui n'est pas égal au type de variable correspondant ni apte à être promu en celui-ci.</span><span class="sxs-lookup"><span data-stu-id="f9424-393">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, arguments As IEnumerable(Of DbExpression)) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="f9424-394">Les métadonnées pour la fonction à appeler.</span><span class="sxs-lookup"><span data-stu-id="f9424-394">Metadata for the function to invoke.</span></span></param>
        <param name="arguments"><span data-ttu-id="f9424-395">Liste des expressions qui fournissent les arguments à la fonction.</span><span class="sxs-lookup"><span data-stu-id="f9424-395">A list of expressions that provide the arguments to the function.</span></span></param>
        <summary><span data-ttu-id="f9424-396">Crée un nouveau <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui représente l’appel de la fonction spécifiée avec les arguments donnés.</span><span class="sxs-lookup"><span data-stu-id="f9424-396">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span></span></summary>
        <returns><span data-ttu-id="f9424-397">Une nouvelle DbFunctionExpression qui représente l’appel de fonction.</span><span class="sxs-lookup"><span data-stu-id="f9424-397">A new DbFunctionExpression representing the function invocation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-398"><paramref name="function" /> a la valeur null ou <paramref name="arguments" /> est null ou contient la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-398"><paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-399">Le nombre de <paramref name="arguments" /> n’est pas égal au nombre de paramètres déclarés par <paramref name="function" />, ou <paramref name="arguments" /> contient une expression qui a un type de résultat qui n’est pas égal ou ne peut être promu au type de paramètre de fonction correspondant.</span><span class="sxs-lookup"><span data-stu-id="f9424-399">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, ParamArray arguments As DbExpression()) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="f9424-400">Les métadonnées pour la fonction à appeler.</span><span class="sxs-lookup"><span data-stu-id="f9424-400">Metadata for the function to invoke.</span></span></param>
        <param name="arguments"><span data-ttu-id="f9424-401">Expressions qui fournissent les arguments à la fonction.</span><span class="sxs-lookup"><span data-stu-id="f9424-401">Expressions that provide the arguments to the function.</span></span></param>
        <summary><span data-ttu-id="f9424-402">Crée un nouveau <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui représente l’appel de la fonction spécifiée avec les arguments donnés.</span><span class="sxs-lookup"><span data-stu-id="f9424-402">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span></span></summary>
        <returns><span data-ttu-id="f9424-403">Une nouvelle DbFunctionExpression qui représente l’appel de fonction.</span><span class="sxs-lookup"><span data-stu-id="f9424-403">A new DbFunctionExpression representing the function invocation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-404"><paramref name="function" /> a la valeur null ou <paramref name="arguments" /> est null ou contient la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-404"><paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-405">Le nombre de <paramref name="arguments" /> n’est pas égal au nombre de paramètres déclarés par <paramref name="function" />, ou <paramref name="arguments" /> contient une expression qui a un type de résultat qui n’est pas égal ou ne peut être promu au type de paramètre de fonction correspondant.</span><span class="sxs-lookup"><span data-stu-id="f9424-405">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsEmpty (argument As DbExpression) As DbIsEmptyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsEmptyExpression ^ IsEmpty(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsEmptyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-406">Expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-406">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="f9424-407">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> qui détermine si l'argument de jeu spécifié correspond à un jeu vide.</span><span class="sxs-lookup"><span data-stu-id="f9424-407">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that determines whether the specified set argument is an empty set.</span></span></summary>
        <returns><span data-ttu-id="f9424-408">Nouvelle DbIsEmptyExpression de l'argument spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-408">A new DbIsEmptyExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-409"><paramref name="argument" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-409"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-410"><paramref name="argument" /> n’a pas un type de résultat collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-410"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsNullExpression IsNull(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNull (argument As DbExpression) As DbIsNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsNullExpression ^ IsNull(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-411">Expression qui spécifie l'argument.</span><span class="sxs-lookup"><span data-stu-id="f9424-411">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="f9424-412">Crée une <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> qui détermine si l'argument spécifié est.</span><span class="sxs-lookup"><span data-stu-id="f9424-412">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that determines whether the specified argument is null.</span></span></summary>
        <returns><span data-ttu-id="f9424-413">Nouvelle DbIsNullExpression de l'argument spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-413">A new DbIsNullExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-414"><paramref name="argument" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-414"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-415"><paramref name="argument" /> a un type de résultat collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-415"><paramref name="argument" /> has a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOf(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOf (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOf(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-416">Expression qui spécifie l'instance.</span><span class="sxs-lookup"><span data-stu-id="f9424-416">An expression that specifies the instance.</span></span></param>
        <param name="type"><span data-ttu-id="f9424-417">Métadonnées de type qui spécifient le type auquel le type de résultat de l'instance doit être comparé.</span><span class="sxs-lookup"><span data-stu-id="f9424-417">Type metadata that specifies the type that the instance's result type should be compared to.</span></span></param>
        <summary><span data-ttu-id="f9424-418">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> qui détermine si l'argument indiqué correspond au type spécifié ou à un sous-type.</span><span class="sxs-lookup"><span data-stu-id="f9424-418">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that determines whether the given argument is of the specified type or a subtype.</span></span></summary>
        <returns><span data-ttu-id="f9424-419">Nouvelle DbIsOfExpression de l'instance et le type spécifiés ainsi que DbExpressionKind IsOf.</span><span class="sxs-lookup"><span data-stu-id="f9424-419">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-420">DbIsOfExpression requiert que `argument` a un type de résultat polymorphe et que `type` est un type de la même hiérarchie de type en tant que type de résultat.</span><span class="sxs-lookup"><span data-stu-id="f9424-420">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-421"><paramref name="argument" /> ou <paramref name="type" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-421"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-422"><paramref name="type" /> ne se trouve pas dans la même hiérarchie de type que le type de résultat de <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-422"><paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsOfOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOfOnly (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOfOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-423">Expression qui spécifie l'instance.</span><span class="sxs-lookup"><span data-stu-id="f9424-423">An expression that specifies the instance.</span></span></param>
        <param name="type"><span data-ttu-id="f9424-424">Métadonnées de type qui spécifient le type auquel le type de résultat de l'instance doit être comparé.</span><span class="sxs-lookup"><span data-stu-id="f9424-424">Type metadata that specifies the type that the instance's result type should be compared to.</span></span></param>
        <summary><span data-ttu-id="f9424-425">Crée une expression <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> qui détermine si l'argument indiqué correspond au type spécifié et uniquement à ce type (pas à un sous-type).</span><span class="sxs-lookup"><span data-stu-id="f9424-425">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).</span></span></summary>
        <returns><span data-ttu-id="f9424-426">Nouvelle DbIsOfExpression de l'instance et le type spécifiés ainsi que DbExpressionKind IsOfOnly.</span><span class="sxs-lookup"><span data-stu-id="f9424-426">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-427">DbIsOfExpression requiert que `argument` a un type de résultat polymorphe et que `type` est un type de la même hiérarchie de type en tant que type de résultat.</span><span class="sxs-lookup"><span data-stu-id="f9424-427">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-428"><paramref name="argument" /> ou <paramref name="type" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-428"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-429"><paramref name="type" /> ne se trouve pas dans la même hiérarchie de type que le type de résultat de <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-429"><paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression Join(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="outer"><span data-ttu-id="f9424-430"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie l’argument du jeu externe.</span><span class="sxs-lookup"><span data-stu-id="f9424-430">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span></span></param>
        <param name="inner"><span data-ttu-id="f9424-431"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie l’argument du jeu interne.</span><span class="sxs-lookup"><span data-stu-id="f9424-431">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span></span></param>
        <param name="outerKey"><span data-ttu-id="f9424-432">Méthode qui spécifie comment la valeur de clé externe doit être dérivée d’un élément du jeu externe.</span><span class="sxs-lookup"><span data-stu-id="f9424-432">A method that specifies how the outer key value should be derived from an element of the outer set.</span></span></param>
        <param name="innerKey"><span data-ttu-id="f9424-433">Méthode qui spécifie comment la valeur de clé interne doit être dérivée d’un élément du jeu interne.</span><span class="sxs-lookup"><span data-stu-id="f9424-433">A method that specifies how the inner key value should be derived from an element of the inner set.</span></span></param>
        <summary><span data-ttu-id="f9424-434">Crée un <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> qui joint les jeux indiqués par les expressions externes et internes sur une condition d’égalité entre les clés externes et internes spécifiées, à l’aide d’InnerJoin comme <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-434">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="f9424-435">Nouvelle DbJoinExpression avec un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> InnerJoin, qui représente l’opération de jointure interne appliquée aux jeux d’entrée gauche et droite sous une condition de jointure qui vérifie que les valeurs de clé externes et internes sont égales.</span><span class="sxs-lookup"><span data-stu-id="f9424-435">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-436">L’expression produite par <paramref name="outerKey" /> ou <paramref name="innerKey" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-436">The expression produced by <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-437">Les expressions produites par <paramref name="outerKey" /> et <paramref name="innerKey" /> ne peuvent pas être comparées pour vérifier si elles sont égales.</span><span class="sxs-lookup"><span data-stu-id="f9424-437">The expressions produced by <paramref name="outerKey" /> and <paramref name="innerKey" /> are not comparable for equality.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TSelector) (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector"><span data-ttu-id="f9424-438">Le type de la <c>sélecteur</c>.</span><span class="sxs-lookup"><span data-stu-id="f9424-438">The type of the <c>selector</c>.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="f9424-439"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie l’argument du jeu externe.</span><span class="sxs-lookup"><span data-stu-id="f9424-439">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span></span></param>
        <param name="inner"><span data-ttu-id="f9424-440"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie l’argument du jeu interne.</span><span class="sxs-lookup"><span data-stu-id="f9424-440">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span></span></param>
        <param name="outerKey"><span data-ttu-id="f9424-441">Méthode qui spécifie comment la valeur de clé externe doit être dérivée d’un élément du jeu externe.</span><span class="sxs-lookup"><span data-stu-id="f9424-441">A method that specifies how the outer key value should be derived from an element of the outer set.</span></span></param>
        <param name="innerKey"><span data-ttu-id="f9424-442">Méthode qui spécifie comment la valeur de clé interne doit être dérivée d’un élément du jeu interne.</span><span class="sxs-lookup"><span data-stu-id="f9424-442">A method that specifies how the inner key value should be derived from an element of the inner set.</span></span></param>
        <param name="selector"><span data-ttu-id="f9424-443">Méthode qui spécifie comment un élément du jeu de résultats doit être dérivé d’éléments des jeux interne et externe.</span><span class="sxs-lookup"><span data-stu-id="f9424-443">A method that specifies how an element of the result set should be derived from elements of the inner and outer sets.</span></span> <span data-ttu-id="f9424-444">Cette méthode doit produire une instance d’un type compatible avec Join et pouvant être résolue en <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-444">This method must produce an instance of a type that is compatible with Join and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="f9424-445">Les critères de compatibilité pour <c>TSelector</c> sont décrits dans les remarques.</span><span class="sxs-lookup"><span data-stu-id="f9424-445">Compatibility requirements for <c>TSelector</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="f9424-446">Crée un <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> qui projette le sélecteur spécifié sur les jeux indiqués par les expressions externes et internes, jointes sur une condition d’égalité entre les clés externes et internes spécifiées, à l’aide d’InnerJoin comme <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-446">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="f9424-447">Nouveau DbProjectExpression avec le sélecteur spécifié en tant que projection et un nouveau DbJoinExpression comme entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-447">A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input.</span></span> <span data-ttu-id="f9424-448">L’entrée DbJoinExpression est créée avec un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> InnerJoin, qui représente l’opération de jointure interne appliquée aux jeux d’entrée gauche et droite sous une condition de jointure qui vérifie que les valeurs de clé externes et internes sont égales.</span><span class="sxs-lookup"><span data-stu-id="f9424-448">The input DbJoinExpression is created with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-449">Pour être compatible avec Join, `TSelector` doit être dérivé de <xref:System.Data.Common.CommandTrees.DbExpression>, ou doit être un type anonyme avec des propriétés dérivées de DbExpression.</span><span class="sxs-lookup"><span data-stu-id="f9424-449">To be compatible with Join, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="f9424-450">Voici des exemples des types pris en charge pour `TSelector`:</span><span class="sxs-lookup"><span data-stu-id="f9424-450">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => o.Property("Name"))  
```  
  
 <span data-ttu-id="f9424-451">(`TSelector` est <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="f9424-451">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => new { OName = o.Property("Name"), IName = i.Property("Name") })  
```  
  
 <span data-ttu-id="f9424-452">(`TSelector` est un type anonyme avec des propriétés dérivées de DbExpression).</span><span class="sxs-lookup"><span data-stu-id="f9424-452">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-453">Le résultat de <paramref name="selector" /> a la valeur Null après la conversion en DbExpression.</span><span class="sxs-lookup"><span data-stu-id="f9424-453">The result of <paramref name="selector" /> is null after conversion to DbExpression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-454">Le résultat de <paramref name="Selector" /> n’est pas compatible avec SelectMany.</span><span class="sxs-lookup"><span data-stu-id="f9424-454">The result of <paramref name="Selector" /> is not compatible with SelectMany.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Lambda">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-455">Crée un <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> avec l’implémentation de la fonction Lambda inline et les paramètres formels spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-455">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, variables As IEnumerable(Of DbVariableReferenceExpression)) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="f9424-456">Expression qui définit la logique de la fonction Lambda.</span><span class="sxs-lookup"><span data-stu-id="f9424-456">An expression that defines the logic of the Lambda function.</span></span></param>
        <param name="variables"><span data-ttu-id="f9424-457">Collection <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> qui représente les paramètres formels de la fonction Lambda.</span><span class="sxs-lookup"><span data-stu-id="f9424-457">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span></span> <span data-ttu-id="f9424-458">Ces variables sont valides pour être utilisées dans l’expression <c>body</c>.</span><span class="sxs-lookup"><span data-stu-id="f9424-458">These variables are valid for use in the <c>body</c> expression.</span></span></param>
        <summary><span data-ttu-id="f9424-459">Crée un <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> avec l’implémentation de la fonction Lambda inline et les paramètres formels spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
        <returns><span data-ttu-id="f9424-460">Nouveau DbLambda qui décrit une fonction Lambda inline ayant un corps spécifié et des paramètres formels.</span><span class="sxs-lookup"><span data-stu-id="f9424-460">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-461"><paramref name="variables" /> est null ou contient des valeurs null, ou <paramref name="body" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-461"><paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-462"><paramref name="variables" /> contient plusieurs éléments avec le même nom de variable.</span><span class="sxs-lookup"><span data-stu-id="f9424-462"><paramref name="variables" /> contains more than one element with the same variable name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, params System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, ParamArray variables As DbVariableReferenceExpression()) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, ... cli::array &lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="f9424-463">Expression qui définit la logique de la fonction Lambda.</span><span class="sxs-lookup"><span data-stu-id="f9424-463">An expression that defines the logic of the Lambda function.</span></span></param>
        <param name="variables"><span data-ttu-id="f9424-464">Collection <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> qui représente les paramètres formels de la fonction Lambda.</span><span class="sxs-lookup"><span data-stu-id="f9424-464">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span></span> <span data-ttu-id="f9424-465">Ces variables sont valides pour être utilisées dans l’expression <c>body</c>.</span><span class="sxs-lookup"><span data-stu-id="f9424-465">These variables are valid for use in the <c>body</c> expression.</span></span></param>
        <summary><span data-ttu-id="f9424-466">Crée un <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> avec l’implémentation de la fonction Lambda inline et les paramètres formels spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-466">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
        <returns><span data-ttu-id="f9424-467">Nouveau DbLambda qui décrit une fonction Lambda inline ayant un corps spécifié et des paramètres formels.</span><span class="sxs-lookup"><span data-stu-id="f9424-467">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-468"><paramref name="variables" /> est null ou contient des valeurs null, ou <paramref name="body" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-468"><paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-469"><paramref name="variables" /> contient plusieurs éléments avec le même nom de variable.</span><span class="sxs-lookup"><span data-stu-id="f9424-469"><paramref name="variables" /> contains more than one element with the same variable name.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-470">Crée une <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> qui joint les jeux indiqués par les expressions de gauche et de droite sur la condition de jointure spécifiée, en utilisant LeftOuterJoin comme type <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-470">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-471"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie l’argument du jeu de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-471">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-472"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie l’argument du jeu de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-472">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="f9424-473">Méthode représentant la condition de jointure.</span><span class="sxs-lookup"><span data-stu-id="f9424-473">A method representing the condition on which to join.</span></span> <span data-ttu-id="f9424-474">Cette méthode doit produire une expression avec un type de résultat booléen qui fournit la logique de la condition de jointure.</span><span class="sxs-lookup"><span data-stu-id="f9424-474">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="f9424-475">Crée une <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> qui joint les jeux indiqués par les expressions de gauche et de droite sur la condition de jointure spécifiée, en utilisant LeftOuterJoin comme type <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-475">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="f9424-476">Nouvelle DbJoinExpression, avec un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de LeftOuterJoin, qui représente l'opération de jointure externe gauche appliquée aux jeux de données d'entrée de gauche et de droite dans la condition de jointure donnée.</span><span class="sxs-lookup"><span data-stu-id="f9424-476">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-477">L’expression produite par <paramref name="joinCondition" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-477">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-478">L’expression produite par <paramref name="joinCondition" /> n’est pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-478">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-479">Objet <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> qui spécifie l'argument de gauche du jeu.</span><span class="sxs-lookup"><span data-stu-id="f9424-479">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-480">Objet <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> qui spécifie l'argument de droite du jeu.</span><span class="sxs-lookup"><span data-stu-id="f9424-480">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="f9424-481">Expression qui spécifie la condition d'appartenance.</span><span class="sxs-lookup"><span data-stu-id="f9424-481">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="f9424-482">Crée une <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> qui joint les jeux indiqués par les liaisons d'expressions de gauche et de droite sur la condition de jointure spécifiée, en utilisant LeftOuterJoin comme type <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-482">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="f9424-483">Nouveau DbJoinExpression, avec LeftOuterJoin comme <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />, qui représente l’opération de jointure externe gauche appliquée aux jeux de données d’entrée de gauche et de droite dans la condition de jointure donnée.</span><span class="sxs-lookup"><span data-stu-id="f9424-483">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-484"><paramref name="left" />, <paramref name="right" /> ou <paramref name="joinCondition" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-484"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-485"><paramref name="joinCondition" /> n’a pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-485"><paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-486">Expression qui spécifie l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-486">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-487">Expression qui spécifie l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-487">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="f9424-488">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> qui détermine si l'argument de gauche est inférieur à l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-488">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than the right argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-489">Nouvelle DbComparisonExpression représentant la comparaison "inférieur à".</span><span class="sxs-lookup"><span data-stu-id="f9424-489">A new DbComparisonExpression representing the less-than comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-490"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-490"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-491">Aucun type de résultat comparable pour l'ordre commun n'existe entre <paramref name="left" /> et <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-491">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-492">Expression qui spécifie l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-492">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-493">Expression qui spécifie l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-493">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="f9424-494">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> qui détermine si l'argument de gauche est inférieur ou égal à l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-494">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than or equal to the right argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-495">Nouvelle DbComparisonExpression représentant la comparaison "inférieur à" ou "égal à".</span><span class="sxs-lookup"><span data-stu-id="f9424-495">A new DbComparisonExpression representing the less-than-or-equal-to comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-496"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-496"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-497">Aucun type de résultat commun à la fois comparable pour l'égalité et l'ordre n'existe entre <paramref name="left" /> et <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-497">No common result type that is both equality- and order-comparable exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Like">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-498">Crée une nouvelle <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> qui compare la chaîne d'entrée spécifiée au modèle donné.</span><span class="sxs-lookup"><span data-stu-id="f9424-498">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-499">Expression qui spécifie la chaîne d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-499">An expression that specifies the input string.</span></span></param>
        <param name="pattern"><span data-ttu-id="f9424-500">Expression qui spécifie la chaîne de modèle.</span><span class="sxs-lookup"><span data-stu-id="f9424-500">An expression that specifies the pattern string.</span></span></param>
        <summary><span data-ttu-id="f9424-501">Crée une nouvelle <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> qui compare la chaîne d'entrée spécifiée au modèle donné.</span><span class="sxs-lookup"><span data-stu-id="f9424-501">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span></span></summary>
        <returns><span data-ttu-id="f9424-502">Nouvelle DbLikeExpression de l'entrée spécifiée, le modèle et une valeur d'échappement null.</span><span class="sxs-lookup"><span data-stu-id="f9424-502">A new DbLikeExpression with the specified input, pattern and a null escape.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-503"><paramref name="Argument" /> ou <paramref name="pattern" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-503"><paramref name="Argument" /> or <paramref name="pattern" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-504"><paramref name="Argument" /> ou <paramref name="pattern" /> n'a pas un type de résultat chaîne.</span><span class="sxs-lookup"><span data-stu-id="f9424-504"><paramref name="Argument" /> or <paramref name="pattern" /> does not have a string result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern, class System.Data.Common.CommandTrees.DbExpression escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression, escape As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern, System::Data::Common::CommandTrees::DbExpression ^ escape);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="escape" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-505">Expression qui spécifie la chaîne d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-505">An expression that specifies the input string.</span></span></param>
        <param name="pattern"><span data-ttu-id="f9424-506">Expression qui spécifie la chaîne de modèle.</span><span class="sxs-lookup"><span data-stu-id="f9424-506">An expression that specifies the pattern string.</span></span></param>
        <param name="escape"><span data-ttu-id="f9424-507">Expression facultative qui spécifie la chaîne d'échappement.</span><span class="sxs-lookup"><span data-stu-id="f9424-507">An optional expression that specifies the escape string.</span></span></param>
        <summary><span data-ttu-id="f9424-508">Crée une <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> qui compare la chaîne d'entrée spécifiée au modèle indiqué en utilisant l'échappement facultatif.</span><span class="sxs-lookup"><span data-stu-id="f9424-508">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern using the optional escape.</span></span></summary>
        <returns><span data-ttu-id="f9424-509">Nouvelle DbLikeExpression de l'entrée spécifiée, le modèle et l'échappement.</span><span class="sxs-lookup"><span data-stu-id="f9424-509">A new DbLikeExpression with the specified input, pattern and escape.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-510"><paramref name="argument" />, <paramref name="pattern" /> ou <paramref name="escape" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-510"><paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-511"><paramref name="argument" />, <paramref name="pattern" /> ou <paramref name="escape" /> n'a pas un type de résultat chaîne.</span><span class="sxs-lookup"><span data-stu-id="f9424-511"><paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> does not have a string result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Limit(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Limit (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Limit(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-512">Expression qui spécifie la collection d’entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-512">An expression that specifies the input collection.</span></span></param>
        <param name="count"><span data-ttu-id="f9424-513">Expression qui spécifie la valeur limite.</span><span class="sxs-lookup"><span data-stu-id="f9424-513">An expression that specifies the limit value.</span></span></param>
        <summary><span data-ttu-id="f9424-514">Crée une <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> qui restreint le nombre d'éléments de la collection Argument à la valeur de limite de compteur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f9424-514">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span></span> <span data-ttu-id="f9424-515">Les résultats égaux ne sont pas inclus dans la sortie.</span><span class="sxs-lookup"><span data-stu-id="f9424-515">Tied results are not included in the output.</span></span></summary>
        <returns><span data-ttu-id="f9424-516">Nouvelle DbLimitExpression avec les valeurs spécifiées limites d'argument et de nombre qui n'inclut pas les résultats attachés.</span><span class="sxs-lookup"><span data-stu-id="f9424-516">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-517"><paramref name="argument" /> ou <paramref name="count" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-517"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-518"><paramref name="argument" /> n'a pas de type de résultat collection ou <paramref name="count" /> n'a pas un type de résultat qui est égal au ou apte à être promu en type entier 64 bits.</span><span class="sxs-lookup"><span data-stu-id="f9424-518"><paramref name="argument" /> does not have a collection result type, or <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Minus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Minus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Minus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-519">Expression qui spécifie l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-519">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-520">Expression qui spécifie l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-520">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="f9424-521">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> qui soustrait l'argument de droite de l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-521">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that subtracts the right argument from the left argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-522">Nouvelle DbArithmeticExpression représentant la soustraction.</span><span class="sxs-lookup"><span data-stu-id="f9424-522">A new DbArithmeticExpression representing the subtraction operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-523"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-523"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-524">Aucun type de résultat numérique commun n'existe entre <paramref name="left" /> et <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-524">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Modulo(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Modulo (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Modulo(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-525">Expression qui spécifie l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-525">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-526">Expression qui spécifie l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-526">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="f9424-527">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> qui calcule le reste de la division de l'argument de gauche par l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-527">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that computes the remainder of the left argument divided by the right argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-528">Nouvelle DbArithmeticExpression représentant le modulo.</span><span class="sxs-lookup"><span data-stu-id="f9424-528">A new DbArithmeticExpression representing the modulo operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-529"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-529"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-530">Aucun type de résultat numérique commun n'existe entre <paramref name="left" /> et <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-530">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Multiply(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Multiply (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Multiply(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-531">Expression qui spécifie l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-531">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-532">Expression qui spécifie l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-532">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="f9424-533">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> qui multiplie l'argument de gauche par l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-533">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that multiplies the left argument by the right argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-534">Nouvelle DbArithmeticExpression représentant la multiplication.</span><span class="sxs-lookup"><span data-stu-id="f9424-534">A new DbArithmeticExpression representing the multiplication operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-535"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-535"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-536">Aucun type de résultat numérique commun n'existe entre <paramref name="left" /> et <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-536">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-537">Crée une <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> représentant la navigation au sein d'une composition ou d'une relation d'association.</span><span class="sxs-lookup"><span data-stu-id="f9424-537">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Common.CommandTrees.DbExpression navigateFrom, class System.Data.Metadata.Edm.RelationshipEndMember fromEnd, class System.Data.Metadata.Edm.RelationshipEndMember toEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (navigateFrom As DbExpression, fromEnd As RelationshipEndMember, toEnd As RelationshipEndMember) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Common::CommandTrees::DbExpression ^ navigateFrom, System::Data::Metadata::Edm::RelationshipEndMember ^ fromEnd, System::Data::Metadata::Edm::RelationshipEndMember ^ toEnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="fromEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
        <Parameter Name="toEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="navigateFrom"><span data-ttu-id="f9424-538">Expression qui spécifie l'instance à partir de laquelle la navigation doit être effectuée.</span><span class="sxs-lookup"><span data-stu-id="f9424-538">An expression that specifies the instance from which navigation should occur.</span></span></param>
        <param name="fromEnd"><span data-ttu-id="f9424-539">Métadonnées de la propriété qui représente la fin de la relation à partir de laquelle la navigation doit se produire.</span><span class="sxs-lookup"><span data-stu-id="f9424-539">Metadata for the property that represents the end of the relationship from which navigation should occur.</span></span></param>
        <param name="toEnd"><span data-ttu-id="f9424-540">Métadonnées de la propriété qui représente la fin de la relation vers laquelle la navigation doit se produire.</span><span class="sxs-lookup"><span data-stu-id="f9424-540">Metadata for the property that represents the end of the relationship to which navigation should occur.</span></span></param>
        <summary><span data-ttu-id="f9424-541">Crée une <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> représentant la navigation au sein d'une composition ou d'une relation d'association.</span><span class="sxs-lookup"><span data-stu-id="f9424-541">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
        <returns><span data-ttu-id="f9424-542">Nouvelle DbRelationshipNavigationExpression représentant la navigation des terminaisons de la relation "depuis et vers" spécifiées du type de relation spécifiée depuis l'instance de source de navigation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f9424-542">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-543"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requiert que la navigation toujours se produire à partir d’une référence et donc `navigateFrom` doit toujours avoir un résultat de type référence.</span><span class="sxs-lookup"><span data-stu-id="f9424-543"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-544"><paramref name="fromEnd" />, <paramref name="toEnd" /> ou <paramref name="navigateFrom" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-544"><paramref name="fromEnd" />,  <paramref name="toEnd" /> or <paramref name="navigateFrom" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-545"><paramref name="fromEnd" /> et <paramref name="toEnd" /> ne sont pas déclarés par le même type de relation, ou <paramref name="navigateFrom" /> a un type de résultat qui n'est pas compatible avec le type de propriété <paramref name="fromEnd" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-545"><paramref name="fromEnd" /> and <paramref name="toEnd" /> are not declared by the same relationship type, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of <paramref name="fromEnd" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, class System.Data.Common.CommandTrees.DbExpression navigateFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (type As RelationshipType, fromEndName As String, toEndName As String, navigateFrom As DbExpression) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Metadata::Edm::RelationshipType ^ type, System::String ^ fromEndName, System::String ^ toEndName, System::Data::Common::CommandTrees::DbExpression ^ navigateFrom);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.RelationshipType" RefType="this" />
        <Parameter Name="fromEndName" Type="System.String" />
        <Parameter Name="toEndName" Type="System.String" />
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="f9424-546">Métadonnées du type de relation qui représente la relation.</span><span class="sxs-lookup"><span data-stu-id="f9424-546">Metadata for the relation type that represents the relationship.</span></span></param>
        <param name="fromEndName"><span data-ttu-id="f9424-547">Nom de la propriété du type de relation qui représente la fin de la relation à partir de laquelle la navigation doit avoir lieu.</span><span class="sxs-lookup"><span data-stu-id="f9424-547">The name of the property of the relation type that represents the end of the relationship from which navigation should occur.</span></span></param>
        <param name="toEndName"><span data-ttu-id="f9424-548">Nom de la propriété du type de relation qui représente la fin de la relation vers laquelle la navigation doit avoir lieu.</span><span class="sxs-lookup"><span data-stu-id="f9424-548">The name of the property of the relation type that represents the end of the relationship to which navigation should occur.</span></span></param>
        <param name="navigateFrom"><span data-ttu-id="f9424-549">Expression qui spécifie l'instance à partir de laquelle la navigation doit être effectuée.</span><span class="sxs-lookup"><span data-stu-id="f9424-549">An expression the specifies the instance from which naviagtion should occur.</span></span></param>
        <summary><span data-ttu-id="f9424-550">Crée une <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> représentant la navigation au sein d'une composition ou d'une relation d'association.</span><span class="sxs-lookup"><span data-stu-id="f9424-550">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
        <returns><span data-ttu-id="f9424-551">Nouvelle DbRelationshipNavigationExpression représentant la navigation des terminaisons de la relation "depuis et vers" spécifiées du type de relation spécifiée depuis l'instance de source de navigation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f9424-551">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-552"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requiert que la navigation toujours se produire à partir d’une référence et donc `navigateFrom` doit toujours avoir un résultat de type référence.</span><span class="sxs-lookup"><span data-stu-id="f9424-552"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-553"><paramref name="type" />, <paramref name="fromEndName" />, <paramref name="toEndName" /> ou <paramref name="navigateFrom" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-553"><paramref name="type" />,  <paramref name="fromEndName" />,  <paramref name="toEndName" /> or <paramref name="navigateFrom" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-554"><paramref name="type" /> n'est pas associé à l'espace de travail des métadonnées de cette arborescence de commandes ; ou <paramref name="navigateFrom" /> est associé à une autre arborescence de commandes ; ou <paramref name="type" /> ne déclare pas de propriété de fin de relation portant le nom <paramref name="toEndName" /> ou <paramref name="fromEndName" /> ; ou <paramref name="navigateFrom" /> possède un type de résultat qui n'est pas compatible avec le type de propriété de fin de relation portant le nom <paramref name="fromEndName" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-554"><paramref name="type" /> is not associated with this command tree's metadata workspace or <paramref name="navigateFrom" /> is associated with a different command tree, or <paramref name="type" /> does not declare a relation end property with name <paramref name="toEndName" /> or <paramref name="fromEndName" />, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of the relation end property with name <paramref name="fromEndName" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Negate(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Negate (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Negate(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-555">Expression qui spécifie l'argument.</span><span class="sxs-lookup"><span data-stu-id="f9424-555">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="f9424-556">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> qui inverse la valeur de l'argument.</span><span class="sxs-lookup"><span data-stu-id="f9424-556">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-557">Nouvelle DbArithmeticExpression représentant l'opération de négation.</span><span class="sxs-lookup"><span data-stu-id="f9424-557">A new DbArithmeticExpression representing the negation operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-558"><paramref name="argument" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-558"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-559">Aucun type de résultat numérique n'existe pour <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-559">No numeric result type exists for <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="New">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-560">Crée un <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-560">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, arguments As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="instanceType"><span data-ttu-id="f9424-561">Type de la nouvelle instance.</span><span class="sxs-lookup"><span data-stu-id="f9424-561">The type of the new instance.</span></span></param>
        <param name="arguments"><span data-ttu-id="f9424-562">Expressions qui spécifient les valeurs des nouvelles instances interprétées selon le type de l'instance.</span><span class="sxs-lookup"><span data-stu-id="f9424-562">Expressions that specify values of the new instances, interpreted according to the instance's type.</span></span></param>
        <summary><span data-ttu-id="f9424-563">Crée un <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-563">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span> <span data-ttu-id="f9424-564">Si l'argument de type correspond à un type de collection, les arguments spécifient les éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-564">If the type argument is a collection type, the arguments specify the elements of the collection.</span></span> <span data-ttu-id="f9424-565">Sinon, les arguments sont utilisés comme valeurs de propriété ou de colonne dans la nouvelle instance.</span><span class="sxs-lookup"><span data-stu-id="f9424-565">Otherwise the arguments are used as property or column values in the new instance.</span></span></summary>
        <returns><span data-ttu-id="f9424-566">Nouvelle DbNewInstanceExpression du type et les arguments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-566">A new DbNewInstanceExpression with the specified type and arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-567">Si `instanceType` est un type de collection, chaque expression dans `arguments` doit avoir un type de résultat qui peut être promu au type d’élément de la `instanceType`.</span><span class="sxs-lookup"><span data-stu-id="f9424-567">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="f9424-568">Si `instanceType` est un type de ligne `arguments` doit contenir autant d’expressions qu’il existe des colonnes dans le type de ligne et le type de résultat de chaque expression doit être égal ou ne peut être promu au type de la colonne correspondante.</span><span class="sxs-lookup"><span data-stu-id="f9424-568">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="f9424-569">Un type de ligne qui ne déclare pas de colonnes n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="f9424-569">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="f9424-570">Si `instanceType` est un type d’entité `arguments` doit contenir autant d’expressions qu’est les propriétés définies par le type, ainsi que le type de résultat de chaque expression doit être égal ou ne peut être promu au type de la propriété correspondante.</span><span class="sxs-lookup"><span data-stu-id="f9424-570">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-571"><paramref name="instanceType" /> ou <paramref name="arguments" /> est null, ou <paramref name="arguments" /> contient des valeurs null.</span><span class="sxs-lookup"><span data-stu-id="f9424-571"><paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-572"><paramref name="arguments" /> est vide ou les types de résultats des expressions contenues ne répondent pas aux exigences de <paramref name="instanceType" /> (comme expliqué dans la section « Notes »).</span><span class="sxs-lookup"><span data-stu-id="f9424-572"><paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, ParamArray arguments As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instanceType"><span data-ttu-id="f9424-573">Type de la nouvelle instance.</span><span class="sxs-lookup"><span data-stu-id="f9424-573">The type of the new instance.</span></span></param>
        <param name="arguments"><span data-ttu-id="f9424-574">Expressions qui spécifient les valeurs des nouvelles instances interprétées selon le type de l'instance.</span><span class="sxs-lookup"><span data-stu-id="f9424-574">Expressions that specify values of the new instances, interpreted according to the instance's type.</span></span></param>
        <summary><span data-ttu-id="f9424-575">Crée un <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-575">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span> <span data-ttu-id="f9424-576">Si l'argument de type correspond à un type de collection, les arguments spécifient les éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-576">If the type argument is a collection type, the arguments specify the elements of the collection.</span></span> <span data-ttu-id="f9424-577">Sinon, les arguments sont utilisés comme valeurs de propriété ou de colonne dans la nouvelle instance.</span><span class="sxs-lookup"><span data-stu-id="f9424-577">Otherwise the arguments are used as property or column values in the new instance.</span></span></summary>
        <returns><span data-ttu-id="f9424-578">Nouvelle DbNewInstanceExpression du type et les arguments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-578">A new DbNewInstanceExpression with the specified type and arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-579">Si `instanceType` est un type de collection, chaque expression dans `arguments` doit avoir un type de résultat qui peut être promu au type d’élément de la `instanceType`.</span><span class="sxs-lookup"><span data-stu-id="f9424-579">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="f9424-580">Si `instanceType` est un type de ligne `arguments` doit contenir autant d’expressions qu’il existe des colonnes dans le type de ligne et le type de résultat de chaque expression doit être égal ou ne peut être promu au type de la colonne correspondante.</span><span class="sxs-lookup"><span data-stu-id="f9424-580">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="f9424-581">Un type de ligne qui ne déclare pas de colonnes n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="f9424-581">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="f9424-582">Si `instanceType` est un type d’entité `arguments` doit contenir autant d’expressions qu’est les propriétés définies par le type, ainsi que le type de résultat de chaque expression doit être égal ou ne peut être promu au type de la propriété correspondante.</span><span class="sxs-lookup"><span data-stu-id="f9424-582">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-583"><paramref name="instanceType" /> ou <paramref name="arguments" /> est null, ou <paramref name="arguments" /> contient des valeurs null.</span><span class="sxs-lookup"><span data-stu-id="f9424-583"><paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-584"><paramref name="arguments" /> est vide ou les types de résultats des expressions contenues ne répondent pas aux exigences de <paramref name="instanceType" /> (comme expliqué dans la section « Notes »).</span><span class="sxs-lookup"><span data-stu-id="f9424-584"><paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewCollection">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-585">Crée une <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> qui construit une collection contenant les éléments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-585">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (elements As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="elements"><span data-ttu-id="f9424-586">Liste des expressions qui fournissent les éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-586">A list of expressions that provide the elements of the collection.</span></span></param>
        <summary><span data-ttu-id="f9424-587">Crée une <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> qui construit une collection contenant les éléments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-587">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span> <span data-ttu-id="f9424-588">Le type de la collection est basé sur le type commun des éléments.</span><span class="sxs-lookup"><span data-stu-id="f9424-588">The type of the collection is based on the common type of the elements.</span></span> <span data-ttu-id="f9424-589">Si aucun type d'élément commun n'existe, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="f9424-589">If no common element type exists an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="f9424-590">Nouvelle DbNewInstanceExpression du type de collection et les arguments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-590">A new DbNewInstanceExpression with the specified collection type and arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-591"><paramref name="elements" /> est null ou contient des valeurs null.</span><span class="sxs-lookup"><span data-stu-id="f9424-591"><paramref name="elements" /> is null, or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-592"><paramref name="elements" /> est vide ou contient des expressions pour lesquelles aucun type de résultat commun n'existe.</span><span class="sxs-lookup"><span data-stu-id="f9424-592"><paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (params System.Data.Common.CommandTrees.DbExpression[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Data.Common.CommandTrees.DbExpression[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (ParamArray elements As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elements"><span data-ttu-id="f9424-593">Liste des expressions qui fournissent les éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-593">A list of expressions that provide the elements of the collection.</span></span></param>
        <summary><span data-ttu-id="f9424-594">Crée une <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> qui construit une collection contenant les éléments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-594">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span> <span data-ttu-id="f9424-595">Le type de la collection est basé sur le type commun des éléments.</span><span class="sxs-lookup"><span data-stu-id="f9424-595">The type of the collection is based on the common type of the elements.</span></span> <span data-ttu-id="f9424-596">Si aucun type d'élément commun n'existe, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="f9424-596">If no common element type exists an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="f9424-597">Nouvelle DbNewInstanceExpression du type de collection et les arguments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-597">A new DbNewInstanceExpression with the specified collection type and arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-598"><paramref name="elements" /> est null ou contient des valeurs null.</span><span class="sxs-lookup"><span data-stu-id="f9424-598"><paramref name="elements" /> is null, or contains null..</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-599"><paramref name="elements" /> est vide ou contient des expressions pour lesquelles aucun type de résultat commun n'existe.</span><span class="sxs-lookup"><span data-stu-id="f9424-599"><paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewEmptyCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection(class System.Data.Metadata.Edm.TypeUsage collectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NewEmptyCollection (collectionType As TypeUsage) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewEmptyCollection(System::Data::Metadata::Edm::TypeUsage ^ collectionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collectionType"><span data-ttu-id="f9424-600">Métadonnées de type de la collection à créer</span><span class="sxs-lookup"><span data-stu-id="f9424-600">The type metadata for the collection to create</span></span></param>
        <summary><span data-ttu-id="f9424-601">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> qui construit une collection vide correspondant au type de collection spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-601">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs an empty collection of the specified collection type.</span></span></summary>
        <returns><span data-ttu-id="f9424-602">Nouvelle DbNewInstanceExpression du type de collection spécifié et une liste de <paramref name="Arguments" /> vide.</span><span class="sxs-lookup"><span data-stu-id="f9424-602">A new DbNewInstanceExpression with the specified collection type and an empty <paramref name="Arguments" /> list.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-603"><paramref name="collectionType" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-603"><paramref name="collectionType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-604"><paramref name="collectionType" /> n'est pas un type de collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-604"><paramref name="collectionType" /> is not a collection type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow (columnValues As IEnumerable(Of KeyValuePair(Of String, DbExpression))) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewRow(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ columnValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="columnValues"><span data-ttu-id="f9424-605">Liste de paires clé/valeur chaîne/DbExpression qui définit la structure et les valeurs de la ligne.</span><span class="sxs-lookup"><span data-stu-id="f9424-605">A list of string-DbExpression key-value pairs that defines the structure and values of the row.</span></span></param>
        <summary><span data-ttu-id="f9424-606">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> qui produit une ligne avec les colonnes nommées et les valeurs fournies, qui sont spécifiées en tant qu'expressions.</span><span class="sxs-lookup"><span data-stu-id="f9424-606">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that produces a row with the specified named columns and the given values, specified as expressions.</span></span></summary>
        <returns><span data-ttu-id="f9424-607">Nouvelle DbNewInstanceExpression qui représente la construction de la ligne.</span><span class="sxs-lookup"><span data-stu-id="f9424-607">A new DbNewInstanceExpression that represents the construction of the row.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-608"><paramref name="columnValues" /> est null ou contient un élément avec un nom de colonne ou une expression.</span><span class="sxs-lookup"><span data-stu-id="f9424-608"><paramref name="columnValues" /> is null or contains an element with a null column name or expression.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-609"><paramref name="columnValues" /> est vide ou contient un nom de colonne en double ou non valide.</span><span class="sxs-lookup"><span data-stu-id="f9424-609"><paramref name="columnValues" /> is empty, or contains a duplicate or invalid column name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNotExpression Not(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Not (argument As DbExpression) As DbNotExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNotExpression ^ Not(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNotExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-610">Expression booléenne qui spécifie l'argument.</span><span class="sxs-lookup"><span data-stu-id="f9424-610">A Boolean expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="f9424-611">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> qui effectue la négation logique de l'argument spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-611">Creates a <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that performs the logical negation of the given argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-612">Nouvelle DbNotExpression de l'argument spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-612">A new DbNotExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-613"><paramref name="argument" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-613"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-614"><paramref name="argument" /> n’a pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-614"><paramref name="argument" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression NotEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NotEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ NotEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-615">Expression qui spécifie l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-615">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-616">Expression qui spécifie l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-616">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="f9424-617">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> qui compare les arguments de droite et de gauche pour vérifier s'ils sont inégaux.</span><span class="sxs-lookup"><span data-stu-id="f9424-617">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for inequality.</span></span></summary>
        <returns><span data-ttu-id="f9424-618">Nouvelle DbComparisonExpression représentant la comparaison "n'est pas égal à".</span><span class="sxs-lookup"><span data-stu-id="f9424-618">A new DbComparisonExpression representing the inequality comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-619"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-619"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-620">Aucun type de résultat comparable pour l'égalité commun n'existe entre <paramref name="left" /> et <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-620">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNullExpression Null(class System.Data.Metadata.Edm.TypeUsage nullType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Null (nullType As TypeUsage) As DbNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNullExpression ^ Null(System::Data::Metadata::Edm::TypeUsage ^ nullType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nullType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="nullType"><span data-ttu-id="f9424-621">Type de valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-621">The type of the null value.</span></span></param>
        <summary><span data-ttu-id="f9424-622">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, qui représente une valeur de type Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-622">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, which represents a typed null value.</span></span></summary>
        <returns><span data-ttu-id="f9424-623">Instance de DbNullExpression.</span><span class="sxs-lookup"><span data-stu-id="f9424-623">An instance of DbNullExpression.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-624"><paramref name="nullType" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-624"><paramref name="nullType" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfType">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfType(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfType(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-625">Objet <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-625">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="type"><span data-ttu-id="f9424-626">Métadonnées du type auquel les éléments du jeu de données d'entrée doivent correspondre pour être inclus dans le jeu de résultats.</span><span class="sxs-lookup"><span data-stu-id="f9424-626">Type metadata for the type that elements of the input set must have to be included in the resulting set.</span></span></param>
        <summary><span data-ttu-id="f9424-627">Crée une <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> qui produit un jeu composé des éléments du jeu d'entrées donné correspondant au type spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-627">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of the specified type.</span></span></summary>
        <returns><span data-ttu-id="f9424-628">Nouvelle DbOfTypeExpression avec le type et l'argument définis spécifiés, et un ExpressionKind <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-628">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-629">DbOfTypeExpression requiert que `argument` a une collection de résultat de type avec un type d’élément polymorphe et que `type` est un type de la même hiérarchie de type en tant que type d’élément.</span><span class="sxs-lookup"><span data-stu-id="f9424-629">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-630"><paramref name="argument" /> ou <paramref name="type" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-630"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-631"><paramref name="argument" /> n'a pas un type de résultat collection ou <paramref name="type" /> n'est pas un type dans la même hiérarchie des types que le type d'élément du type de résultat collection de <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-631"><paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfTypeOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfTypeOnly (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfTypeOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-632"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-632">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="type"><span data-ttu-id="f9424-633">Métadonnées du type auquel les éléments du jeu de données d'entrée doivent correspondre exactement pour être inclus dans le jeu de résultats.</span><span class="sxs-lookup"><span data-stu-id="f9424-633">Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.</span></span></param>
        <summary><span data-ttu-id="f9424-634">Crée une <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> qui produit un jeu composé des éléments du jeu d'entrées donné correspondant exactement au type spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-634">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of exactly the specified type.</span></span></summary>
        <returns><span data-ttu-id="f9424-635">Nouvelle DbOfTypeExpression avec le type et l'argument définis spécifiés, et un ExpressionKind <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-635">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-636">DbOfTypeExpression requiert que `argument` a une collection de résultat de type avec un type d’élément polymorphe et que `type` est un type de la même hiérarchie de type en tant que type d’élément.</span><span class="sxs-lookup"><span data-stu-id="f9424-636">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-637"><paramref name="argument" /> ou <paramref name="type" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-637"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-638"><paramref name="argument" /> n'a pas un type de résultat collection ou <paramref name="type" /> n'est pas un type dans la même hiérarchie des types que le type d'élément du type de résultat collection de <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-638"><paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOrExpression Or(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Or (left As DbExpression, right As DbExpression) As DbOrExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOrExpression ^ Or(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOrExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-639">Expression booléenne qui spécifie l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-639">A Boolean expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-640">Expression booléenne qui spécifie l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-640">A Boolean expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="f9424-641">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> qui effectue l'opération OR logique sur les arguments de droite et de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-641">Creates an <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that performs the logical Or of the left and right arguments.</span></span></summary>
        <returns><span data-ttu-id="f9424-642">Nouvelle DbOrExpression des arguments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-642">A new DbOrExpression with the specified arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-643"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-643"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-644"><paramref name="left" /> ou <paramref name="right" /> n'a pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-644"><paramref name="left" /> or <paramref name="right" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-645">Crée une <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> qui trie le jeu de données d'entrée indiqué en fonction de la clé de tri spécifiée, avec l'ordre de tri croissant et le classement par défaut.</span><span class="sxs-lookup"><span data-stu-id="f9424-645">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-646">Expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-646">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="f9424-647">Méthode qui spécifie le mode de dérivation de l'expression de clé de tri à partir d'un membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-647">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="f9424-648">Cette méthode doit produire une expression contenant un type de résultat comparable au niveau de l'ordre qui fournit la définition de clé de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-648">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="f9424-649">Crée une <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> qui trie le jeu de données d'entrée indiqué en fonction de la clé de tri spécifiée, avec l'ordre de tri croissant et le classement par défaut.</span><span class="sxs-lookup"><span data-stu-id="f9424-649">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="f9424-650">Nouvelle DbSortExpression qui représente l'opération de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-650">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-651">L’expression produite par <paramref name="sortKey" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-651">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-652">L'expression produite par <paramref name="sortKey" /> n'a pas de type de résultat comparable au niveau de l'ordre.</span><span class="sxs-lookup"><span data-stu-id="f9424-652">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-653">Expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-653">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="f9424-654">Méthode qui spécifie le mode de dérivation de l'expression de clé de tri à partir d'un membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-654">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="f9424-655">Cette méthode doit produire une expression contenant un type de résultat comparable au niveau de l'ordre qui fournit la définition de clé de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-655">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="f9424-656">Classement à partir duquel trier.</span><span class="sxs-lookup"><span data-stu-id="f9424-656">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="f9424-657">Crée une <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> qui trie le jeu de données d'entrée indiqué en fonction de la clé de tri spécifiée, avec l'ordre de tri croissant et le classement fourni.</span><span class="sxs-lookup"><span data-stu-id="f9424-657">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="f9424-658">Nouvelle DbSortExpression qui représente l'opération de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-658">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-659">L’expression produite par <paramref name="sortKey" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-659">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-660">L’expression produite par <paramref name="sortKey" /> n’a pas de type de résultat de chaîne comparable au niveau de l’ordre.</span><span class="sxs-lookup"><span data-stu-id="f9424-660">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9424-661"><paramref name="collation" /> est vide ou ne contient que des espaces.</span><span class="sxs-lookup"><span data-stu-id="f9424-661"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-662">Crée une <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> qui trie le jeu de données d'entrée indiqué en fonction de la clé de tri spécifiée, avec l'ordre de tri décroissant et le classement par défaut.</span><span class="sxs-lookup"><span data-stu-id="f9424-662">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-663">Expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-663">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="f9424-664">Méthode qui spécifie le mode de dérivation de l'expression de clé de tri à partir d'un membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-664">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="f9424-665">Cette méthode doit produire une expression contenant un type de résultat comparable au niveau de l'ordre qui fournit la définition de clé de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-665">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="f9424-666">Crée une <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> qui trie le jeu de données d'entrée indiqué en fonction de la clé de tri spécifiée, avec l'ordre de tri décroissant et le classement par défaut.</span><span class="sxs-lookup"><span data-stu-id="f9424-666">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="f9424-667">Nouvelle DbSortExpression qui représente l'opération de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-667">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-668">L’expression produite par <paramref name="sortKey" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-668">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-669">L'expression produite par <paramref name="sortKey" /> n'a pas de type de résultat comparable au niveau de l'ordre.</span><span class="sxs-lookup"><span data-stu-id="f9424-669">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-670">Expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-670">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="f9424-671">Méthode qui spécifie le mode de dérivation de l'expression de clé de tri à partir d'un membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-671">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="f9424-672">Cette méthode doit produire une expression contenant un type de résultat comparable au niveau de l'ordre qui fournit la définition de clé de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-672">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="f9424-673">Classement à partir duquel trier.</span><span class="sxs-lookup"><span data-stu-id="f9424-673">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="f9424-674">Crée une <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> qui trie le jeu de données d'entrée indiqué en fonction de la clé de tri spécifiée, avec l'ordre de tri décroissant et le classement fourni.</span><span class="sxs-lookup"><span data-stu-id="f9424-674">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="f9424-675">Nouvelle DbSortExpression qui représente l'opération de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-675">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-676">L’expression produite par <paramref name="sortKey" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-676">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-677">L’expression produite par <paramref name="sortKey" /> n’a pas de type de résultat de chaîne comparable au niveau de l’ordre.</span><span class="sxs-lookup"><span data-stu-id="f9424-677">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9424-678"><paramref name="collation" /> est vide ou ne contient que des espaces.</span><span class="sxs-lookup"><span data-stu-id="f9424-678"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OuterApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-679">Crée une <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> qui évalue l'expression <paramref name="apply" /> indiquée une fois pour chaque élément d'un jeu d'entrées particulier, produisant une collection de lignes avec les colonnes input et apply correspondantes.</span><span class="sxs-lookup"><span data-stu-id="f9424-679">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-680">Objet <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-680">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="f9424-681">Méthode qui spécifie la logique à évaluer une fois pour chaque membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-681">A method that specifies the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="f9424-682">Crée une <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> qui évalue l'expression <paramref name="apply" /> indiquée une fois pour chaque élément d'un jeu d'entrées particulier, produisant une collection de lignes avec les colonnes input et apply correspondantes.</span><span class="sxs-lookup"><span data-stu-id="f9424-682">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="f9424-683">Les lignes pour lesquelles <paramref name="apply" /> a la valeur d'un jeu vide possèdent une valeur de colonne apply de valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-683">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="f9424-684">Nouvelle DbApplyExpression avec les liaisons d'entrée et d'application spécifiées et <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de OuterApply.</span><span class="sxs-lookup"><span data-stu-id="f9424-684">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-685">Le résultat de <paramref name="apply" /> contient un nom ou une expression qui est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-685">The result of <paramref name="apply" /> contains a name or expression that is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-686">Le résultat de <paramref name="apply" /> contient un nom ou une expression qui n'est pas valide dans une liaison d'expression.</span><span class="sxs-lookup"><span data-stu-id="f9424-686">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="f9424-687"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-687">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="f9424-688"><see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> qui spécifie la logique à évaluer une fois pour chaque membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-688">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="f9424-689">Crée une <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> qui évalue l'expression <paramref name="apply" /> indiquée une fois pour chaque élément d'un jeu d'entrées particulier, produisant une collection de lignes avec les colonnes input et apply correspondantes.</span><span class="sxs-lookup"><span data-stu-id="f9424-689">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="f9424-690">Les lignes pour lesquelles <paramref name="apply" /> a la valeur d'un jeu vide possèdent une valeur de colonne apply de valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-690">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="f9424-691">Nouvelle DbApplyExpression avec les liaisons d'entrée et d'application spécifiées et <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de OuterApply.</span><span class="sxs-lookup"><span data-stu-id="f9424-691">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-692"><paramref name="input" /> ou <paramref name="apply" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-692"><paramref name="input" /> or <paramref name="apply" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Parameter (type As TypeUsage, name As String) As DbParameterReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ Parameter(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbParameterReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="f9424-693">Type du paramètre référencé.</span><span class="sxs-lookup"><span data-stu-id="f9424-693">The type of the referenced parameter.</span></span></param>
        <param name="name"><span data-ttu-id="f9424-694">Nom du paramètre référencé.</span><span class="sxs-lookup"><span data-stu-id="f9424-694">The name of the referenced parameter.</span></span></param>
        <summary><span data-ttu-id="f9424-695">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> qui référence un paramètre avec le nom et le type spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-695">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that references a parameter with the specified name and type.</span></span></summary>
        <returns><span data-ttu-id="f9424-696">DbParameterReferenceExpression qui représente une référence à un paramètre avec le nom et le type spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-696">A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type.</span></span> <span data-ttu-id="f9424-697">Le type de résultat de l'expression sera le même que <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-697">The result type of the expression will be the same as <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Plus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Plus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Plus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-698">Expression qui spécifie l'argument de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-698">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-699">Expression qui spécifie l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-699">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="f9424-700">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> qui ajoute l'argument de gauche à l'argument de droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-700">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that adds the left argument to the right argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-701">Nouvelle DbArithmeticExpression représentant l'addition.</span><span class="sxs-lookup"><span data-stu-id="f9424-701">A new DbArithmeticExpression representing the addition operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-702"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-702"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-703">Aucun type de résultat numérique commun n'existe entre <paramref name="left" /> et <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-703">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Project(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Project (input As DbExpressionBinding, projection As DbExpression) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Project(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ projection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="projection" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="f9424-704">Liaison d'expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-704">An expression binding that specifies the input set.</span></span></param>
        <param name="projection"><span data-ttu-id="f9424-705">Expression à projeter sur le jeu.</span><span class="sxs-lookup"><span data-stu-id="f9424-705">An expression to project over the set.</span></span></param>
        <summary><span data-ttu-id="f9424-706">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> qui projette l'expression spécifiée sur le jeu de données d'entrée indiqué.</span><span class="sxs-lookup"><span data-stu-id="f9424-706">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified expression over the given input set.</span></span></summary>
        <returns><span data-ttu-id="f9424-707">Nouvelle DbProjectExpression qui représente l'opération de projection.</span><span class="sxs-lookup"><span data-stu-id="f9424-707">A new DbProjectExpression that represents the projection operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-708"><paramref name="input" /> ou <paramref name="projection" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-708"><paramref name="input" /> or <paramref name="projection" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Property">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-709">Crée une <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> représentant la récupération de la propriété de spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f9424-709">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.EdmProperty propertyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyMetadata As EdmProperty) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::EdmProperty ^ propertyMetadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyMetadata" Type="System.Data.Metadata.Edm.EdmProperty" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="f9424-710">Instance à partir de laquelle récupérer la propriété.</span><span class="sxs-lookup"><span data-stu-id="f9424-710">The instance from which to retrieve the property.</span></span> <span data-ttu-id="f9424-711">Peut être null si la propriété est statique.</span><span class="sxs-lookup"><span data-stu-id="f9424-711">May be null if the property is static.</span></span></param>
        <param name="propertyMetadata"><span data-ttu-id="f9424-712">Métadonnées de la propriété à récupérer.</span><span class="sxs-lookup"><span data-stu-id="f9424-712">Metadata for the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="f9424-713">Crée une <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> représentant la récupération de la propriété de spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f9424-713">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span></span></summary>
        <returns><span data-ttu-id="f9424-714">Nouvelle DbPropertyExpression représentant la récupération de propriété.</span><span class="sxs-lookup"><span data-stu-id="f9424-714">A new DbPropertyExpression representing the property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-715"><paramref name="propertyMetadata" /> est null ou <paramref name="instance" /> est null et la propriété n'est pas statique.</span><span class="sxs-lookup"><span data-stu-id="f9424-715"><paramref name="propertyMetadata" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.NavigationProperty navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::NavigationProperty ^ navigationProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="navigationProperty" Type="System.Data.Metadata.Edm.NavigationProperty" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="f9424-716">Instance à partir de laquelle la propriété de navigation doit être récupérée.</span><span class="sxs-lookup"><span data-stu-id="f9424-716">The instance from which to retrieve the navigation property.</span></span></param>
        <param name="navigationProperty"><span data-ttu-id="f9424-717">Métadonnées de la propriété de navigation à récupérer.</span><span class="sxs-lookup"><span data-stu-id="f9424-717">Metadata for the navigation property to retrieve.</span></span></param>
        <summary><span data-ttu-id="f9424-718">Crée une <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> représentant la récupération de la propriété de navigation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f9424-718">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified navigation property.</span></span></summary>
        <returns><span data-ttu-id="f9424-719">Nouvelle DbPropertyExpression représentant la récupération de propriété de navigation.</span><span class="sxs-lookup"><span data-stu-id="f9424-719">A new DbPropertyExpression representing the navigation property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-720"><paramref name="navigationProperty" /> ou <paramref name="instance" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-720"><paramref name="navigationProperty" /> or <paramref name="instance" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, relationshipEnd As RelationshipEndMember) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::RelationshipEndMember ^ relationshipEnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="relationshipEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="f9424-721">Instance à partir de laquelle le membre de terminaison de relation doit être récupéré.</span><span class="sxs-lookup"><span data-stu-id="f9424-721">The instance from which to retrieve the relationship end member.</span></span></param>
        <param name="relationshipEnd"><span data-ttu-id="f9424-722">Métadonnées du membre de terminaison de relation à récupérer.</span><span class="sxs-lookup"><span data-stu-id="f9424-722">Metadata for the relationship end member to retrieve.</span></span></param>
        <summary><span data-ttu-id="f9424-723">Crée une <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> représentant la récupération du membre de fin de relation spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-723">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified relationship end member.</span></span></summary>
        <returns><span data-ttu-id="f9424-724">Nouvelle DbPropertyExpression représentant la récupération de membre de terminaison de relation.</span><span class="sxs-lookup"><span data-stu-id="f9424-724">A new DbPropertyExpression representing the relationship end member retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-725"><paramref name="relationshipEnd" /> est null ou <paramref name="instance" /> est null et la propriété n'est pas statique.</span><span class="sxs-lookup"><span data-stu-id="f9424-725"><paramref name="relationshipEnd" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyName As String) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="f9424-726">Instance à partir de laquelle récupérer la propriété.</span><span class="sxs-lookup"><span data-stu-id="f9424-726">The instance from which to retrieve the property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="f9424-727">Nom de la propriété à récupérer.</span><span class="sxs-lookup"><span data-stu-id="f9424-727">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="f9424-728">Crée une <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> représentant la récupération de la propriété d'instance portant le nom spécifié à partir de l'instance indiquée.</span><span class="sxs-lookup"><span data-stu-id="f9424-728">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the instance property with the specified name from the given instance.</span></span></summary>
        <returns><span data-ttu-id="f9424-729">Nouvelle DbPropertyExpression qui représente la récupération de propriété.</span><span class="sxs-lookup"><span data-stu-id="f9424-729">A new DbPropertyExpression that represents the property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-730"><paramref name="propertyName" /> est null ou <paramref name="instance" /> est null et la propriété n'est pas statique.</span><span class="sxs-lookup"><span data-stu-id="f9424-730"><paramref name="propertyName" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f9424-731">Aucune propriété avec le nom spécifié n'est déclarée par le type de <paramref name="instance" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-731">No property with the specified name is declared by the type of <paramref name="instance" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RefFromKey">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-732">Crée une nouvelle <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> qui encode une référence à une entité spécifique selon des valeurs clés.</span><span class="sxs-lookup"><span data-stu-id="f9424-732">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="f9424-733">Jeu d'entités qui contient l'élément référencé.</span><span class="sxs-lookup"><span data-stu-id="f9424-733">The Entity set in which the referenced element resides.</span></span></param>
        <param name="keyRow"><span data-ttu-id="f9424-734"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui construit un enregistrement dont les colonnes correspondent (en termes de nombre, de type et d'ordre) aux propriétés de clés du type d'entité référencée.</span><span class="sxs-lookup"><span data-stu-id="f9424-734">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span></span></param>
        <summary><span data-ttu-id="f9424-735">Crée une nouvelle <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> qui encode une référence à une entité spécifique selon des valeurs clés.</span><span class="sxs-lookup"><span data-stu-id="f9424-735">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="f9424-736">Nouvelle DbRefExpression qui référence l'élément avec les valeurs de clés indiquées dans le jeu d'entités donné.</span><span class="sxs-lookup"><span data-stu-id="f9424-736">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-737">`keyRow` doit être une expression qui spécifie les valeurs de clé identifiant l’entité référencée dans l’entité donnée définie.</span><span class="sxs-lookup"><span data-stu-id="f9424-737">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="f9424-738">Type de résultat de `keyRow` doit contenir une colonne correspondante pour chaque propriété de clé définie par `entitySet's` type d’entité.</span><span class="sxs-lookup"><span data-stu-id="f9424-738">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-739"><paramref name="entitySet" /> ou <paramref name="keyRow" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-739"><paramref name="entitySet" /> or <paramref name="keyRow" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-740"><paramref name="keyRow" /> n'a pas de type de résultat d'enregistrement qui correspond aux propriétés de clé du type d'entité du jeu d'entités référencé.</span><span class="sxs-lookup"><span data-stu-id="f9424-740"><paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow, class System.Data.Metadata.Edm.EntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow, System::Data::Metadata::Edm::EntityType ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="f9424-741">Jeu d'entités qui contient l'élément référencé.</span><span class="sxs-lookup"><span data-stu-id="f9424-741">The Entity set in which the referenced element resides.</span></span></param>
        <param name="keyRow"><span data-ttu-id="f9424-742"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui construit un enregistrement dont les colonnes correspondent (en termes de nombre, de type et d'ordre) aux propriétés de clés du type d'entité référencée.</span><span class="sxs-lookup"><span data-stu-id="f9424-742">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span></span></param>
        <param name="entityType"><span data-ttu-id="f9424-743">Type de l'entité qui doit être référencée.</span><span class="sxs-lookup"><span data-stu-id="f9424-743">The type of the Entity that the reference should refer to.</span></span></param>
        <summary><span data-ttu-id="f9424-744">Crée une nouvelle <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> qui encode une référence à une entité spécifique selon des valeurs clés.</span><span class="sxs-lookup"><span data-stu-id="f9424-744">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="f9424-745">Nouvelle DbRefExpression qui référence l'élément avec les valeurs de clés indiquées dans le jeu d'entités donné.</span><span class="sxs-lookup"><span data-stu-id="f9424-745">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-746">`keyRow` doit être une expression qui spécifie les valeurs de clé identifiant l’entité référencée dans l’entité donnée définie.</span><span class="sxs-lookup"><span data-stu-id="f9424-746">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="f9424-747">Type de résultat de `keyRow` doit contenir une colonne correspondante pour chaque propriété de clé définie par `entitySet's` type d’entité.</span><span class="sxs-lookup"><span data-stu-id="f9424-747">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-748"><paramref name="entitySet" />, <paramref name="keyRow" /> ou <paramref name="entityType" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-748"><paramref name="entitySet" />,  <paramref name="keyRow" /> or <paramref name="entityType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-749"><paramref name="entityType" /> n'est pas dans la même hiérarchie des types que le type d'entité du jeu d'entités, ou <paramref name="keyRow" /> n'a pas de type de résultat d'enregistrement qui correspond aux propriétés de clé du type d'entité référencé du jeu d'entités.</span><span class="sxs-lookup"><span data-stu-id="f9424-749"><paramref name="entityType" /> is not in the same type hierarchy as the entity set's entity type, or <paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbScanExpression Scan(class System.Data.Metadata.Edm.EntitySetBase targetSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Scan (targetSet As EntitySetBase) As DbScanExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbScanExpression ^ Scan(System::Data::Metadata::Edm::EntitySetBase ^ targetSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbScanExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSet" Type="System.Data.Metadata.Edm.EntitySetBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="targetSet"><span data-ttu-id="f9424-750">Métadonnées du jeu d'entités ou de relations à référencer.</span><span class="sxs-lookup"><span data-stu-id="f9424-750">Metadata for the entity or relationship set to reference.</span></span></param>
        <summary><span data-ttu-id="f9424-751">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> qui référence le jeu d'entités ou de relations spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-751">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that references the specified entity or relationship set.</span></span></summary>
        <returns><span data-ttu-id="f9424-752">Nouvelle DbScanExpression en fonction du jeu d'entité ou de la relation spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-752">A new DbScanExpression based on the specified entity or relationship set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-753"><paramref name="targetSet" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-753"><paramref name="targetSet" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TProjection&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt; projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, !!TProjection&gt; projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TProjection) (source As DbExpression, projection As Func(Of DbExpression, TProjection)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProjection&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Select(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, TProjection&gt; ^ projection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProjection" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="projection" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProjection"><span data-ttu-id="f9424-754">Type de résultat de la méthode <c>projection</c>.</span><span class="sxs-lookup"><span data-stu-id="f9424-754">The method result type of <c>projection</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f9424-755">Expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-755">An expression that specifies the input set.</span></span></param>
        <param name="projection"><span data-ttu-id="f9424-756">Méthode qui spécifie comment l'expression projetée doit être dérivée à partir d'un membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-756">A method that specifies how to derive the projected expression given a member of the input set.</span></span> <span data-ttu-id="f9424-757">Cette méthode doit produire une instance d'un type compatible avec Select et pouvant être résolu en objet <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-757">This method must produce an instance of a type that is compatible with Select and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="f9424-758">Les critères de compatibilité pour <c>TProjection</c> sont décrits dans les remarques.</span><span class="sxs-lookup"><span data-stu-id="f9424-758">Compatibility requirements for <c>TProjection</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="f9424-759">Crée une <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> qui sélectionne l'expression spécifiée sur le jeu de données d'entrée indiqué.</span><span class="sxs-lookup"><span data-stu-id="f9424-759">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that selects the specified expression over the given input set.</span></span></summary>
        <returns><span data-ttu-id="f9424-760">Nouvelle DbProjectExpression qui représente l'opération de sélection.</span><span class="sxs-lookup"><span data-stu-id="f9424-760">A new DbProjectExpression that represents the select operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-761">Pour être compatible avec Select, `TProjection` doit être dérivé de <xref:System.Data.Common.CommandTrees.DbExpression>, ou doit être un type anonyme avec des propriétés dérivées de DbExpression.</span><span class="sxs-lookup"><span data-stu-id="f9424-761">To be compatible with Select, `TProjection` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="f9424-762">Voici des exemples des types pris en charge pour `TProjection`:</span><span class="sxs-lookup"><span data-stu-id="f9424-762">The following are examples of supported types for `TProjection`:</span></span>  
  
```  
source.Select(x => x.Property("Name"))  
```  
  
 <span data-ttu-id="f9424-763">`TProjection` est <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="f9424-763">`TProjection` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.Select(x => new { Name = x.Property("Name") })  
```  
  
 <span data-ttu-id="f9424-764">(`TProjection` est un type anonyme avec une propriété dérivé de DbExpression).</span><span class="sxs-lookup"><span data-stu-id="f9424-764">(`TProjection` is an anonymous type with a DbExpression-derived property).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-765">Le résultat de <paramref name="projection" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-765">The result of <paramref name="projection" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany (source As DbExpression, apply As Func(Of DbExpression, DbExpression)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-766">Objet <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-766">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="f9424-767">Méthode qui représente la logique à évaluer une fois pour chaque membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-767">A method that represents the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="f9424-768">Crée une <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> qui évalue l'expression <paramref name="apply" /> indiquée une fois pour chaque élément d'un jeu d'entrées particulier, produisant une collection de lignes avec les colonnes input et apply correspondantes.</span><span class="sxs-lookup"><span data-stu-id="f9424-768">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="f9424-769">Les lignes pour lesquelles <paramref name="apply" /> correspond à un jeu vide ne sont pas incluses.</span><span class="sxs-lookup"><span data-stu-id="f9424-769">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span> <span data-ttu-id="f9424-770">Un <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> est ensuite créé et la colonne <paramref name="apply" /> de chaque ligne est sélectionnée pour produire l'intégralité de la collection de résultats <paramref name="apply" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-770">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the <paramref name="apply" /> column from each row, producing the overall collection of <paramref name="apply" /> results.</span></span></summary>
        <returns><span data-ttu-id="f9424-771">Nouvelle DbProjectExpression qui sélectionne la colonne d'application d'une nouvelle DbApplyExpression avec les liaisons d'entrée et d'application spécifiées et <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossApply.</span><span class="sxs-lookup"><span data-stu-id="f9424-771">An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-772">L’expression produite par <paramref name="apply" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-772">The expression produced by <paramref name="apply" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-773">L'expression produite par <paramref name="apply" /> n'a pas de type de collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-773">The expression produced by <paramref name="apply" /> does not have a collection type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSelector) (source As DbExpression, apply As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector"><span data-ttu-id="f9424-774">Type de résultat de la méthode <c>sélecteur</c>.</span><span class="sxs-lookup"><span data-stu-id="f9424-774">The method result type of <c>selector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f9424-775">Objet <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-775">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="f9424-776">Méthode qui représente la logique à évaluer une fois pour chaque membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-776">A method that represents the logic to evaluate once for each member of the input set.</span></span></param>
        <param name="selector"><span data-ttu-id="f9424-777">Méthode qui spécifie comment un élément du jeu de résultats doit être dérivé d'un élément des jeux input et apply.</span><span class="sxs-lookup"><span data-stu-id="f9424-777">A method that specifies how an element of the result set should be derived given an element of the input and apply sets.</span></span> <span data-ttu-id="f9424-778">Cette méthode doit produire une instance d'un type compatible avec SelectMany et pouvant être résolu en objet <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-778">This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="f9424-779">Les critères de compatibilité pour <c>TSelector</c> sont décrits dans les remarques.</span><span class="sxs-lookup"><span data-stu-id="f9424-779">Compatibility requirements for <c>TSelector</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="f9424-780">Crée une <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> qui évalue l'expression <paramref name="apply" /> indiquée une fois pour chaque élément d'un jeu d'entrées particulier, produisant une collection de lignes avec les colonnes input et apply correspondantes.</span><span class="sxs-lookup"><span data-stu-id="f9424-780">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="f9424-781">Les lignes pour lesquelles <paramref name="apply" /> correspond à un jeu vide ne sont pas incluses.</span><span class="sxs-lookup"><span data-stu-id="f9424-781">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span> <span data-ttu-id="f9424-782">Un <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> est ensuite créé et le <paramref name="selector" /> spécifié sur chaque ligne est sélectionné afin de produire l'intégralité de la collection de résultats.</span><span class="sxs-lookup"><span data-stu-id="f9424-782">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the specified <paramref name="selector" /> over each row, producing the overall collection of results.</span></span></summary>
        <returns><span data-ttu-id="f9424-783">Nouvelle DbProjectExpression qui sélectionne le résultat du sélecteur donné à partir d'une nouvelle DbApplyExpression avec les liaisons d'entrée et d'application spécifiées et <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossApply.</span><span class="sxs-lookup"><span data-stu-id="f9424-783">An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-784">Pour être compatible avec SelectMany, `TSelector` doit être dérivé de <xref:System.Data.Common.CommandTrees.DbExpression>, ou doit être un type anonyme avec des propriétés dérivées de DbExpression.</span><span class="sxs-lookup"><span data-stu-id="f9424-784">To be compatible with SelectMany, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="f9424-785">Voici des exemples des types pris en charge pour `TSelector`:</span><span class="sxs-lookup"><span data-stu-id="f9424-785">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => apply.Property("Name"))  
```  
  
 <span data-ttu-id="f9424-786">(`TSelector` est <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="f9424-786">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => new { SourceName = source.Property("Name"), RelatedName = apply.Property("Name") })  
```  
  
 <span data-ttu-id="f9424-787">(`TSelector` est un type anonyme avec des propriétés dérivées de DbExpression).</span><span class="sxs-lookup"><span data-stu-id="f9424-787">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-788">Le résultat de <paramref name="selector" /> est Null lors de la conversion en DbExpression.</span><span class="sxs-lookup"><span data-stu-id="f9424-788">The result of <paramref name="selector" /> is null on conversion to DbExpression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-789">L'expression produite par <paramref name="apply" /> n'a pas de type de collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-789">The expression produced by <paramref name="apply" /> does not have a collection type.</span></span> <span data-ttu-id="f9424-790">n'a pas de type de collection.</span><span class="sxs-lookup"><span data-stu-id="f9424-790">does not have a collection type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Skip">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-791">Crée une <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> qui trie le jeu d'entrées donné par spécifications de tri données avant d'ignorer le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="f9424-791">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbSortExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (argument As DbSortExpression, count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbSortExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-792">Objet <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> qui spécifie le jeu de données d'entrée trié.</span><span class="sxs-lookup"><span data-stu-id="f9424-792">A <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that specifies the sorted input set.</span></span></param>
        <param name="count"><span data-ttu-id="f9424-793">Expression qui spécifie le nombre d'éléments du jeu ordonné à ignorer.</span><span class="sxs-lookup"><span data-stu-id="f9424-793">An expression the specifies how many elements of the ordered set to skip.</span></span></param>
        <summary><span data-ttu-id="f9424-794">Crée une <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> qui ignore le nombre spécifié d'éléments du jeu de données triées donné.</span><span class="sxs-lookup"><span data-stu-id="f9424-794">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that skips the specified number of elements from the given sorted input set.</span></span></summary>
        <returns><span data-ttu-id="f9424-795">Nouvelle DbSkipExpression qui représente l'opération Ignorer.</span><span class="sxs-lookup"><span data-stu-id="f9424-795">A new DbSkipExpression that represents the skip operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-796"><paramref name="argument" /> ou <paramref name="count" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-796"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-797"><paramref name="count" /> n'est pas <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> ni <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />, ou a un type de résultat qui n'est pas égal ou apte à être promu en type entier 64 bits.</span><span class="sxs-lookup"><span data-stu-id="f9424-797"><paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause), count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="f9424-798">Liaison d'expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-798">An expression binding that specifies the input set.</span></span></param>
        <param name="sortOrder"><span data-ttu-id="f9424-799">Liste de spécifications de tri qui déterminent comment les éléments du jeu de données d'entrée doivent être triés.</span><span class="sxs-lookup"><span data-stu-id="f9424-799">A list of sort specifications that determine how the elements of the input set should be sorted.</span></span></param>
        <param name="count"><span data-ttu-id="f9424-800">Expression qui spécifie le nombre d'éléments du jeu ordonné à ignorer.</span><span class="sxs-lookup"><span data-stu-id="f9424-800">An expression the specifies how many elements of the ordered set to skip.</span></span></param>
        <summary><span data-ttu-id="f9424-801">Crée une <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> qui trie le jeu d'entrées donné par spécifications de tri données avant d'ignorer le nombre spécifié d'éléments.</span><span class="sxs-lookup"><span data-stu-id="f9424-801">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="f9424-802">Nouvelle DbSkipExpression qui représente l'opération Ignorer.</span><span class="sxs-lookup"><span data-stu-id="f9424-802">A new DbSkipExpression that represents the skip operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-803"><paramref name="input" />,<paramref name="sortOrder" /> ou <paramref name="count" /> est null, ou <paramref name="sortOrder" /> contient des valeurs null.</span><span class="sxs-lookup"><span data-stu-id="f9424-803"><paramref name="input" />,  <paramref name="sortOrder" /> or <paramref name="count" /> is null, or <paramref name="sortOrder" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-804"><paramref name="sortOrder" /> est vide ou <paramref name="count" /> n'est pas <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> ou <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> ou a un type de résultat qui n'est pas égal au ou apte à être promu en type entier 64 bits.</span><span class="sxs-lookup"><span data-stu-id="f9424-804"><paramref name="sortOrder" /> is empty, or <paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression Sort(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sort (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ Sort(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="f9424-805">Liaison d'expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-805">An expression binding that specifies the input set.</span></span></param>
        <param name="sortOrder"><span data-ttu-id="f9424-806">Liste de spécifications de tri qui déterminent comment les éléments du jeu de données d'entrée doivent être triés.</span><span class="sxs-lookup"><span data-stu-id="f9424-806">A list of sort specifications that determine how the elements of the input set should be sorted.</span></span></param>
        <summary><span data-ttu-id="f9424-807">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> qui trie le jeu de données d'entrée indiqué en fonction des spécifications de tri fournies.</span><span class="sxs-lookup"><span data-stu-id="f9424-807">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort specifications.</span></span></summary>
        <returns><span data-ttu-id="f9424-808">Nouvelle DbSortExpression qui représente l'opération de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-808">A new DbSortExpression that represents the sort operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-809"><paramref name="input" /> ou <paramref name="sortOrder" /> est null, ou <paramref name="sortOrder" /> contient des valeurs null.</span><span class="sxs-lookup"><span data-stu-id="f9424-809"><paramref name="input" /> or <paramref name="sortOrder" /> is null, or <paramref name="sortOrder" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-810"><paramref name="sortOrder" /> est vide.</span><span class="sxs-lookup"><span data-stu-id="f9424-810"><paramref name="sortOrder" /> is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Take(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Take(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-811">Expression qui spécifie la collection d’entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-811">An expression that specifies the input collection.</span></span></param>
        <param name="count"><span data-ttu-id="f9424-812">Expression qui spécifie la valeur limite.</span><span class="sxs-lookup"><span data-stu-id="f9424-812">An expression that specifies the limit value.</span></span></param>
        <summary><span data-ttu-id="f9424-813">Crée une <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> qui restreint le nombre d'éléments de la collection Argument à la valeur de limite de compteur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="f9424-813">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span></span> <span data-ttu-id="f9424-814">Les résultats égaux ne sont pas inclus dans la sortie.</span><span class="sxs-lookup"><span data-stu-id="f9424-814">Tied results are not included in the output.</span></span></summary>
        <returns><span data-ttu-id="f9424-815">Nouvelle DbLimitExpression avec les valeurs spécifiées limites d'argument et de nombre qui n'inclut pas les résultats attachés.</span><span class="sxs-lookup"><span data-stu-id="f9424-815">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-816"><paramref name="argument" /> ou <paramref name="count" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-816"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-817"><paramref name="argument" /> n'a pas de type de résultat collection, <paramref name="count" /> n'a pas un type de résultat qui est égal au ou apte à être promu en type entier 64 bits.</span><span class="sxs-lookup"><span data-stu-id="f9424-817"><paramref name="argument" /> does not have a collection result type,  <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-818">Crée un <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> avec un ordre de tri défini avec la clé de tri spécifiée dans l’ordre de tri croissant et avec le classement par défaut.</span><span class="sxs-lookup"><span data-stu-id="f9424-818">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-819">DbSortExpression qui spécifie le jeu de données d'entrée ordonné.</span><span class="sxs-lookup"><span data-stu-id="f9424-819">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="f9424-820">Méthode qui spécifie le mode de dérivation de l'expression de clé de tri supplémentaire à partir d'un membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-820">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="f9424-821">Cette méthode doit produire une expression contenant un type de résultat comparable au niveau de l'ordre qui fournit la définition de clé de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-821">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="f9424-822">Crée un <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> avec un ordre de tri défini avec la clé de tri spécifiée dans l’ordre de tri croissant et avec le classement par défaut.</span><span class="sxs-lookup"><span data-stu-id="f9424-822">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span></span></summary>
        <returns><span data-ttu-id="f9424-823">Nouveau DbSortExpression qui représente la nouvelle opération de tri globale.</span><span class="sxs-lookup"><span data-stu-id="f9424-823">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-824">L’expression produite par <paramref name="sortKey" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-824">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-825"><paramref name="sortKey" /> n'a pas un type de résultat comparable par ordre.</span><span class="sxs-lookup"><span data-stu-id="f9424-825"><paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-826">DbSortExpression qui spécifie le jeu de données d'entrée ordonné.</span><span class="sxs-lookup"><span data-stu-id="f9424-826">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="f9424-827">Méthode qui spécifie le mode de dérivation de l'expression de clé de tri supplémentaire à partir d'un membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-827">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="f9424-828">Cette méthode doit produire une expression contenant un type de résultat comparable au niveau de l'ordre qui fournit la définition de clé de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-828">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="f9424-829">Classement à partir duquel trier.</span><span class="sxs-lookup"><span data-stu-id="f9424-829">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="f9424-830">Crée un <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> avec un ordre de tri défini avec la clé de tri spécifiée dans l’ordre de tri croissant et avec le classement spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-830">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.</span></span></summary>
        <returns><span data-ttu-id="f9424-831">Nouveau DbSortExpression qui représente la nouvelle opération de tri globale.</span><span class="sxs-lookup"><span data-stu-id="f9424-831">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-832">L’expression produite par <paramref name="sortKey" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-832">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-833">L’expression produite par <paramref name="sortKey" /> n’a pas de type de résultat de chaîne comparable au niveau de l’ordre.</span><span class="sxs-lookup"><span data-stu-id="f9424-833">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9424-834"><paramref name="collation" /> est vide ou ne contient que des espaces.</span><span class="sxs-lookup"><span data-stu-id="f9424-834"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-835">Crée un <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> avec un ordre de tri défini avec la clé de tri spécifiée dans l’ordre de tri décroissant et avec le classement par défaut.</span><span class="sxs-lookup"><span data-stu-id="f9424-835">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-836">DbSortExpression qui spécifie le jeu de données d'entrée ordonné.</span><span class="sxs-lookup"><span data-stu-id="f9424-836">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="f9424-837">Méthode qui spécifie le mode de dérivation de l'expression de clé de tri supplémentaire à partir d'un membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-837">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="f9424-838">Cette méthode doit produire une expression contenant un type de résultat comparable au niveau de l'ordre qui fournit la définition de clé de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-838">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="f9424-839">Crée un <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> avec un ordre de tri défini avec la clé de tri spécifiée dans l’ordre de tri décroissant et avec le classement par défaut.</span><span class="sxs-lookup"><span data-stu-id="f9424-839">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span></span></summary>
        <returns><span data-ttu-id="f9424-840">Nouveau DbSortExpression qui représente la nouvelle opération de tri globale.</span><span class="sxs-lookup"><span data-stu-id="f9424-840">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-841">L’expression produite par <paramref name="sortKey" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-841">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-842">L'expression produite par <paramref name="sortKey" /> n'a pas de type de résultat comparable au niveau de l'ordre.</span><span class="sxs-lookup"><span data-stu-id="f9424-842">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-843">DbSortExpression qui spécifie le jeu de données d'entrée ordonné.</span><span class="sxs-lookup"><span data-stu-id="f9424-843">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="f9424-844">Méthode qui spécifie le mode de dérivation de l'expression de clé de tri supplémentaire à partir d'un membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-844">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="f9424-845">Cette méthode doit produire une expression contenant un type de résultat comparable au niveau de l'ordre qui fournit la définition de clé de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-845">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="f9424-846">Classement à partir duquel trier.</span><span class="sxs-lookup"><span data-stu-id="f9424-846">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="f9424-847">Crée un <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> avec un ordre de tri défini avec la clé de tri spécifiée dans l’ordre de tri décroissant et avec le classement spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-847">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.</span></span></summary>
        <returns><span data-ttu-id="f9424-848">Nouveau DbSortExpression qui représente la nouvelle opération de tri globale.</span><span class="sxs-lookup"><span data-stu-id="f9424-848">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-849">L’expression produite par <paramref name="sortKey" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-849">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-850">L’expression produite par <paramref name="sortKey" /> n’a pas de type de résultat de chaîne comparable au niveau de l’ordre.</span><span class="sxs-lookup"><span data-stu-id="f9424-850">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9424-851"><paramref name="collation" /> est vide ou ne contient que des espaces.</span><span class="sxs-lookup"><span data-stu-id="f9424-851"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClause">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-852">Crée une <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> avec un ordre de tri croissant et le classement par défaut.</span><span class="sxs-lookup"><span data-stu-id="f9424-852">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f9424-853">Expression qui définit la clé de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-853">The expression that defines the sort key.</span></span></param>
        <summary><span data-ttu-id="f9424-854">Crée une <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> avec un ordre de tri croissant et le classement par défaut.</span><span class="sxs-lookup"><span data-stu-id="f9424-854">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="f9424-855">Nouvelle clause de tri avec la clé de tri et l'ordre de tri croissant donnés.</span><span class="sxs-lookup"><span data-stu-id="f9424-855">A new sort clause with the given sort key and ascending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-856"><paramref name="key" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-856"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-857"><paramref name="key" /> n'a pas un type de résultat comparable par ordre.</span><span class="sxs-lookup"><span data-stu-id="f9424-857"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f9424-858">Expression qui définit la clé de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-858">The expression that defines the sort key.</span></span></param>
        <param name="collation"><span data-ttu-id="f9424-859">Classement à partir duquel trier.</span><span class="sxs-lookup"><span data-stu-id="f9424-859">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="f9424-860">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> avec un ordre de tri croissant et le classement spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-860">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="f9424-861">Nouvelle clause de tri avec la clé de tri et le classement donnés, ainsi qu'un ordre de tri croissant.</span><span class="sxs-lookup"><span data-stu-id="f9424-861">A new sort clause with the given sort key and collation, and ascending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-862"><paramref name="key" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-862"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9424-863"><paramref name="collation" /> est vide ou ne contient que des espaces.</span><span class="sxs-lookup"><span data-stu-id="f9424-863"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-864"><paramref name="key" /> n'a pas un type de résultat comparable par ordre.</span><span class="sxs-lookup"><span data-stu-id="f9424-864"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClauseDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9424-865">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> avec un ordre de tri décroissant et le classement par défaut.</span><span class="sxs-lookup"><span data-stu-id="f9424-865">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f9424-866">Expression qui définit la clé de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-866">The expression that defines the sort key.</span></span></param>
        <summary><span data-ttu-id="f9424-867">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> avec un ordre de tri décroissant et le classement par défaut.</span><span class="sxs-lookup"><span data-stu-id="f9424-867">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="f9424-868">Nouvelle clause de tri avec une clé de tri et un ordre de tri décroissant donnés.</span><span class="sxs-lookup"><span data-stu-id="f9424-868">A new sort clause with the given sort key and descending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-869"><paramref name="key" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-869"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-870"><paramref name="key" /> n'a pas un type de résultat comparable par ordre.</span><span class="sxs-lookup"><span data-stu-id="f9424-870"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f9424-871">Expression qui définit la clé de tri.</span><span class="sxs-lookup"><span data-stu-id="f9424-871">The expression that defines the sort key.</span></span></param>
        <param name="collation"><span data-ttu-id="f9424-872">Classement à partir duquel trier.</span><span class="sxs-lookup"><span data-stu-id="f9424-872">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="f9424-873">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> avec un ordre de tri décroissant et le classement spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-873">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="f9424-874">Nouvelle clause de tri avec la clé de tri et le classement donnés, ainsi qu'un ordre de tri décroissant.</span><span class="sxs-lookup"><span data-stu-id="f9424-874">A new sort clause with the given sort key and collation, and descending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-875"><paramref name="key" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-875"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9424-876"><paramref name="collation" /> est vide ou ne contient que des espaces.</span><span class="sxs-lookup"><span data-stu-id="f9424-876"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-877"><paramref name="key" /> n'a pas un type de résultat comparable par ordre.</span><span class="sxs-lookup"><span data-stu-id="f9424-877"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TreatAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbTreatExpression TreatAs(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage treatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TreatAs (argument As DbExpression, treatType As TypeUsage) As DbTreatExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbTreatExpression ^ TreatAs(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ treatType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbTreatExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="treatType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-878">Expression qui spécifie l'instance.</span><span class="sxs-lookup"><span data-stu-id="f9424-878">An expression that specifies the instance.</span></span></param>
        <param name="treatType"><span data-ttu-id="f9424-879">Métadonnées du type utilisé pour le traitement.</span><span class="sxs-lookup"><span data-stu-id="f9424-879">Type metadata for the treat-as type.</span></span></param>
        <summary><span data-ttu-id="f9424-880">Crée un <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-880">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span></span></summary>
        <returns><span data-ttu-id="f9424-881">Nouvelle DbTreatExpression de l'argument et du type spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-881">A new DbTreatExpression with the specified argument and type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9424-882">DbTreatExpression requiert que `argument` a un type de résultat polymorphe et que `treatType` est un type de la même hiérarchie de type en tant que type de résultat.</span><span class="sxs-lookup"><span data-stu-id="f9424-882">DbTreatExpression requires that `argument` has a polymorphic result type, and that `treatType` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-883"><paramref name="argument" /> ou <paramref name="treatType" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-883"><paramref name="argument" /> or <paramref name="treatType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9424-884"><paramref name="treatType" /> ne se trouve pas dans la même hiérarchie de type que le type de résultat de <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-884"><paramref name="treatType" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression True" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property True As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ True { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9424-885">Obtient un objet <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> avec la valeur booléenne <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-885">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="f9424-886">Objet <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> associé à la valeur booléenne <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-886">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnaryMinus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnaryMinus (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ UnaryMinus(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f9424-887">Expression qui spécifie l'argument.</span><span class="sxs-lookup"><span data-stu-id="f9424-887">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="f9424-888">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> qui inverse la valeur de l'argument.</span><span class="sxs-lookup"><span data-stu-id="f9424-888">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span></span></summary>
        <returns><span data-ttu-id="f9424-889">Nouvelle DbArithmeticExpression représentant l'opération de négation.</span><span class="sxs-lookup"><span data-stu-id="f9424-889">A new DbArithmeticExpression representing the negation operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-890"><paramref name="argument" /> a la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f9424-890"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-891">Aucun type de résultat numérique n'existe pour <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-891">No numeric result type exists for <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Union(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union (left As DbExpression, right As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Union(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-892">Expression qui définit l'argument défini à gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-892">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-893">Expression qui définit l'argument défini à droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-893">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="f9424-894">Crée une <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui calcule l'union des arguments de gauche et de droite du jeu en supprimant les doublons.</span><span class="sxs-lookup"><span data-stu-id="f9424-894">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that computes the union of the left and right set arguments with duplicates removed.</span></span></summary>
        <returns><span data-ttu-id="f9424-895">Nouvelle DbExpression qui calcule l’union, sans doublons, des arguments de droite et de gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-895">A new DbExpression that computes the union, without duplicates, of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-896"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-896"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-897">Aucun type de résultat de collection commun avec un type d'élément comparable pour l'égalité n'existe entre <paramref name="left" /> et <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-897">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnionAll (left As DbExpression, right As DbExpression) As DbUnionAllExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbUnionAllExpression ^ UnionAll(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbUnionAllExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f9424-898">Expression qui définit l'argument défini à gauche.</span><span class="sxs-lookup"><span data-stu-id="f9424-898">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="f9424-899">Expression qui définit l'argument défini à droite.</span><span class="sxs-lookup"><span data-stu-id="f9424-899">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="f9424-900">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> qui calcule l'union des arguments de gauche et de droite du jeu sans supprimer les doublons.</span><span class="sxs-lookup"><span data-stu-id="f9424-900">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that computes the union of the left and right set arguments and does not remove duplicates.</span></span></summary>
        <returns><span data-ttu-id="f9424-901">Nouvelle DbUnionAllExpression qui unie des arguments de gauche et de droite, y compris des doublons.</span><span class="sxs-lookup"><span data-stu-id="f9424-901">A new DbUnionAllExpression that union, including duplicates, of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9424-902"><paramref name="left" /> ou <paramref name="right" /> est null.</span><span class="sxs-lookup"><span data-stu-id="f9424-902"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-903">Aucun type de résultat de collection commun avec un type d'élément comparable pour l'égalité n'existe entre <paramref name="left" /> et <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-903">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Variable (type As TypeUsage, name As String) As DbVariableReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ Variable(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbVariableReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="f9424-904">Type de la variable référencée.</span><span class="sxs-lookup"><span data-stu-id="f9424-904">The type of the referenced variable.</span></span></param>
        <param name="name"><span data-ttu-id="f9424-905">Nom de la variable référencée.</span><span class="sxs-lookup"><span data-stu-id="f9424-905">The name of the referenced variable.</span></span></param>
        <summary><span data-ttu-id="f9424-906">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> qui référence une variable avec le nom et le type spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-906">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that references a variable with the specified name and type.</span></span></summary>
        <returns><span data-ttu-id="f9424-907">DbVariableReferenceExpression qui représente une référence à une variable avec le nom et le type spécifiés.</span><span class="sxs-lookup"><span data-stu-id="f9424-907">A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type.</span></span> <span data-ttu-id="f9424-908">Le type de résultat de l'expression sera le même que <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="f9424-908">The result type of the expression will be the same as <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Where(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Where(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f9424-909">Expression qui spécifie le jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-909">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="f9424-910">Méthode représentant le prédicat à évaluer pour chaque membre du jeu de données d'entrée.</span><span class="sxs-lookup"><span data-stu-id="f9424-910">A method representing the predicate to evaluate for each member of the input set.</span></span>    <span data-ttu-id="f9424-911">Cette méthode doit produire une expression contenant un type de résultat booléen qui fournit la logique de prédicat.</span><span class="sxs-lookup"><span data-stu-id="f9424-911">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="f9424-912">Crée une <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> qui filtre les éléments du jeu de données d'entrée indiqué à l'aide du prédicat spécifié.</span><span class="sxs-lookup"><span data-stu-id="f9424-912">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="f9424-913">Nouvelle DbQuantifierExpression qui représente l'opération Any.</span><span class="sxs-lookup"><span data-stu-id="f9424-913">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9424-914">L’expression produite par <paramref name="predicate" /> a la valeur Null.</span><span class="sxs-lookup"><span data-stu-id="f9424-914">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9424-915">L’expression produite par <paramref name="predicate" /> n’est pas un type de résultat booléen.</span><span class="sxs-lookup"><span data-stu-id="f9424-915">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>