<Type Name="EdmFunctions" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
  <TypeSignature Language="C#" Value="public static class EdmFunctions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EdmFunctions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" />
  <TypeSignature Language="VB.NET" Value="Public Module EdmFunctions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EdmFunctions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4ec38-101">Fournit une API permettant de construire des objets <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui appellent les fonctions EDM canoniques et rend cette API accessible en tant que méthode d'extension sur le type d'expression lui-même.</span><span class="sxs-lookup"><span data-stu-id="4ec38-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that invoke canonical EDM functions, and allows that API to be accessed as extension methods on the expression type itself.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Abs (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Abs(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Abs (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Abs(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4ec38-102">Expression qui spécifie la valeur numérique.</span><span class="sxs-lookup"><span data-stu-id="4ec38-102">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="4ec38-103">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « Abs » canonique avec l'argument spécifié, qui doivent tous les deux avoir un résultat de type numérique.</span><span class="sxs-lookup"><span data-stu-id="4ec38-103">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Abs' function with the specified argument, which must each have a numeric result type.</span></span> <span data-ttu-id="4ec38-104">Le type de résultat de l’expression est identique à celui de **value**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-104">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-105">Nouveau DbFunctionExpression qui retourne la valeur absolue de **value**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-105">A new DbFunctionExpression that returns the absolute value of **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-106">**value**</span><span class="sxs-lookup"><span data-stu-id="4ec38-106">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-107">**value**</span><span class="sxs-lookup"><span data-stu-id="4ec38-107">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddDays (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddDays(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDays (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="4ec38-108">Expression qui spécifie la valeur à laquelle **addValue** doit être ajoutée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-108">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="4ec38-109">Expression qui spécifie le nombre de jours à ajouter à **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-109">An expression that specifies the number of days to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="4ec38-110">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « AddDays » canonique avec les arguments spécifiés, qui doivent avoir un résultat de type entier et DateTime ou DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-110">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddDays' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="4ec38-111">Le type de résultat de l’expression est le même que celui de **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-111">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-112">Nouveau DbFunctionExpression qui ajoute le nombre de jours spécifié par **addValue** à la valeur définie par **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-112">A new DbFunctionExpression that adds the number of days specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-113">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-113">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-114">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-114">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddHours (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddHours(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHours (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="4ec38-115">Expression qui spécifie la valeur à laquelle **addValue** doit être ajoutée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-115">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="4ec38-116">Expression qui spécifie le nombre d’heures à ajouter à **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-116">An expression that specifies the number of hours to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="4ec38-117">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « AddHours » canonique avec les arguments spécifiés, qui doivent avoir un résultat de type entier et DateTime, DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-117">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddHours' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="4ec38-118">Le type de résultat de l’expression est identique à celui de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-118">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-119">Nouveau DbFunctionExpression qui ajoute le nombre d’heures spécifié par **addValue** à la valeur définie par **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-119">A new DbFunctionExpression that adds the number of hours specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-120">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-120">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-121">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-121">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMicroseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="4ec38-122">Expression qui spécifie la valeur à laquelle **addValue** doit être ajoutée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-122">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="4ec38-123">Expression qui spécifie le nombre de microsecondes à ajouter à **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-123">An expression that specifies the number of microseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="4ec38-124">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « AddMicroseconds » canonique avec les arguments spécifiés, qui doivent avoir un résultat de type entier et DateTime, DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-124">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMicroseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="4ec38-125">Le type de résultat de l’expression est identique à celui de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-125">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-126">Nouveau DbFunctionExpression qui ajoute le nombre de microsecondes spécifié par **addValue** à la valeur définie par **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-126">A new DbFunctionExpression that adds the number of microseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-127">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-127">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-128">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-128">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMilliseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="4ec38-129">Expression qui spécifie la valeur à laquelle **addValue** doit être ajoutée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-129">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="4ec38-130">Expression qui spécifie le nombre de millisecondes à ajouter au paramètre **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-130">An expression that specifies the number of milliseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="4ec38-131">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « AddMilliseconds » canonique avec les arguments spécifiés, qui doivent avoir un résultat de type entier et DateTime, DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-131">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMilliseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="4ec38-132">Le type de résultat de l’expression est identique à celui de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-132">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-133">Nouveau DbFunctionExpression qui ajoute le nombre de millisecondes spécifié par **addValue** à la valeur définie par **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-133">A new DbFunctionExpression that adds the number of milliseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-134">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-134">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-135">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-135">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMinutes (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="4ec38-136">Expression qui spécifie la valeur à laquelle **addValue** doit être ajoutée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-136">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="4ec38-137">Expression qui spécifie le nombre de minutes à ajouter à **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-137">An expression that specifies the number of minutes to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="4ec38-138">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « AddMinutes » canonique avec les arguments spécifiés, qui doivent avoir un résultat de type entier et DateTime, DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-138">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMinutes' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="4ec38-139">Le type de résultat de l’expression est identique à celui de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-139">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-140">Nouveau DbFunctionExpression qui ajoute le nombre de minutes spécifié par **addValue** à la valeur définie par **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-140">A new DbFunctionExpression that adds the number of minutes specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-141">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-141">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-142">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-142">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMonths (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMonths(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMonths (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="4ec38-143">Expression qui spécifie la valeur à laquelle **addValue** doit être ajoutée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-143">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="4ec38-144">Expression qui spécifie le nombre de mois à ajouter à **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-144">An expression that specifies the number of months to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="4ec38-145">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « AddMonths » canonique avec les arguments spécifiés, qui doivent avoir un résultat de type entier et DateTime ou DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-145">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMonths' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="4ec38-146">Le type de résultat de l’expression est le même que celui de **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-146">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-147">Nouveau DbFunctionExpression qui ajoute le nombre de mois spécifié par **addValue** à la valeur définie par **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-147">A new DbFunctionExpression that adds the number of months specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-148">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-148">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-149">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-149">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNanoseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="4ec38-150">Expression qui spécifie la valeur à laquelle **addValue** doit être ajoutée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-150">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="4ec38-151">Expression qui spécifie le nombre de nanosecondes à ajouter à **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-151">An expression that specifies the number of nanoseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="4ec38-152">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « AddNanoseconds » canonique avec les arguments spécifiés, qui doivent avoir un résultat de type entier et DateTime, DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-152">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddNanoseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="4ec38-153">Le type de résultat de l’expression est identique à celui de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-153">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-154">Nouveau DbFunctionExpression qui ajoute le nombre de nanosecondes spécifié par **addValue** à la valeur définie par **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-154">A new DbFunctionExpression that adds the number of nanoseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-155">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-155">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-156">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-156">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSeconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="4ec38-157">Expression qui spécifie la valeur à laquelle **addValue** doit être ajoutée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-157">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="4ec38-158">Expression qui spécifie le nombre de secondes à ajouter à **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-158">An expression that specifies the number of seconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="4ec38-159">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « AddSeconds » canonique avec les arguments spécifiés, qui doivent avoir un résultat de type entier et DateTime, DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-159">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddSeconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="4ec38-160">Le type de résultat de l’expression est identique à celui de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-160">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-161">Nouveau DbFunctionExpression qui ajoute le nombre de secondes spécifié par **addValue** à la valeur définie par **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-161">A new DbFunctionExpression that adds the number of seconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-162">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-162">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-163">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-163">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddYears (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddYears(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddYears (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="4ec38-164">Expression qui spécifie la valeur à laquelle **addValue** doit être ajoutée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-164">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="4ec38-165">Expression qui spécifie le nombre d’années à ajouter à **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-165">An expression that specifies the number of years to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="4ec38-166">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « AddYears » canonique avec les arguments spécifiés, qui doivent avoir un résultat de type entier et DateTime ou DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-166">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddYears' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="4ec38-167">Le type de résultat de l’expression est le même que celui de **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-167">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-168">Nouveau DbFunctionExpression qui ajoute le nombre d’années spécifié par **addValue** à la valeur définie par **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-168">A new DbFunctionExpression that adds the number of years specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-169">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-169">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-170">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-170">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Average (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Average(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Average(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="4ec38-171">Expression qui spécifie la collection à partir de laquelle la valeur moyenne doit être calculée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-171">An expression that specifies the collection from which the average value should be computed.</span></span></param>
        <summary><span data-ttu-id="4ec38-172">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction 'Avg' canonique sur la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-172">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Avg' function over the specified collection.</span></span> <span data-ttu-id="4ec38-173">Le résultat de l’expression est du même type que l’élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="4ec38-173">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="4ec38-174">Nouvel objet DbFunctionExpression qui produit la valeur moyenne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-174">A new DbFunctionExpression that produces the average value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-175">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-175">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-176">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-176">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseAnd (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseAnd(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="4ec38-177">Expression qui spécifie la première opérande.</span><span class="sxs-lookup"><span data-stu-id="4ec38-177">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="4ec38-178">Expression qui spécifie la seconde opérande.</span><span class="sxs-lookup"><span data-stu-id="4ec38-178">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="4ec38-179">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « BitwiseAnd » canonique avec les arguments spécifiés, qui doivent avoir le même type de résultat (numérique entier).</span><span class="sxs-lookup"><span data-stu-id="4ec38-179">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseAnd' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="4ec38-180">Le type de résultat de l'expression est identique au type des arguments.</span><span class="sxs-lookup"><span data-stu-id="4ec38-180">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="4ec38-181">Nouveau DbFunctionExpression qui retourne la valeur produite par l’exécution d’une opération de bits AND de **value1** et **value2**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-181">A new DbFunctionExpression that returns the value produced by performing the bitwise AND of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-182">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="4ec38-182">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-183">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="4ec38-183">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseNot">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseNot (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseNot(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4ec38-184">Expression qui spécifie la première opérande.</span><span class="sxs-lookup"><span data-stu-id="4ec38-184">An expression that specifies the first operand.</span></span></param>
        <summary><span data-ttu-id="4ec38-185">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « BitwiseNot » canonique avec l'argument spécifié, qui doit avoir un résultat de type numérique entier.</span><span class="sxs-lookup"><span data-stu-id="4ec38-185">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseNot' function with the specified argument, which must have an integer numeric result type.</span></span> <span data-ttu-id="4ec38-186">Le type de résultat de l'expression est identique au type des arguments.</span><span class="sxs-lookup"><span data-stu-id="4ec38-186">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="4ec38-187">Nouveau DbFunctionExpression qui retourne la valeur produite par l’exécution d’une opération de bits NOT de **value**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-187">A new DbFunctionExpression that returns the value produced by performing the bitwise NOT of **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-188">**value**</span><span class="sxs-lookup"><span data-stu-id="4ec38-188">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-189">**value**</span><span class="sxs-lookup"><span data-stu-id="4ec38-189">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseOr (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseOr(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="4ec38-190">Expression qui spécifie la première opérande.</span><span class="sxs-lookup"><span data-stu-id="4ec38-190">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="4ec38-191">Expression qui spécifie la seconde opérande.</span><span class="sxs-lookup"><span data-stu-id="4ec38-191">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="4ec38-192">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « BitwiseOr » canonique avec les arguments spécifiés, qui doivent avoir le même type de résultat (numérique entier).</span><span class="sxs-lookup"><span data-stu-id="4ec38-192">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseOr' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="4ec38-193">Le type de résultat de l'expression est identique au type des arguments.</span><span class="sxs-lookup"><span data-stu-id="4ec38-193">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="4ec38-194">Nouveau DbFunctionExpression qui retourne la valeur produite par l’exécution d’une opération de bits OR de **value1** et **value2**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-194">A new DbFunctionExpression that returns the value produced by performing the bitwise OR of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-195">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="4ec38-195">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-196">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="4ec38-196">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseXor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseXor (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseXor(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="4ec38-197">Expression qui spécifie la première opérande.</span><span class="sxs-lookup"><span data-stu-id="4ec38-197">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="4ec38-198">Expression qui spécifie la seconde opérande.</span><span class="sxs-lookup"><span data-stu-id="4ec38-198">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="4ec38-199">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « BitwiseXor » canonique avec les arguments spécifiés, qui doivent avoir le même type de résultat (numérique entier).</span><span class="sxs-lookup"><span data-stu-id="4ec38-199">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseXor' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="4ec38-200">Le type de résultat de l'expression est identique au type des arguments.</span><span class="sxs-lookup"><span data-stu-id="4ec38-200">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="4ec38-201">Nouveau DbFunctionExpression qui retourne la valeur produite par l’exécution d’une opération de bits XOR (OR exclusif) de **value1** et **value2**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-201">A new DbFunctionExpression that returns the value produced by performing the bitwise XOR (exclusive OR) of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-202">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="4ec38-202">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-203">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="4ec38-203">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Ceiling (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Ceiling(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Ceiling (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Ceiling(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4ec38-204">Expression qui spécifie la valeur numérique.</span><span class="sxs-lookup"><span data-stu-id="4ec38-204">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="4ec38-205">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « Ceiling » canonique avec l'argument spécifié, qui doivent tous les deux avoir un résultat de type simple, double ou décimal.</span><span class="sxs-lookup"><span data-stu-id="4ec38-205">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Ceiling' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="4ec38-206">Le type de résultat de l’expression est identique à celui de **value**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-206">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-207">Nouveau DbFunctionExpression qui retourne la valeur entière la plus petite qui n’est pas inférieure à **value**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-207">A new DbFunctionExpression that returns the smallest integer value not less than than **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-208">**value**</span><span class="sxs-lookup"><span data-stu-id="4ec38-208">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-209">**value**</span><span class="sxs-lookup"><span data-stu-id="4ec38-209">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Concat (this System.Data.Common.CommandTrees.DbExpression string1, System.Data.Common.CommandTrees.DbExpression string2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Concat(class System.Data.Common.CommandTrees.DbExpression string1, class System.Data.Common.CommandTrees.DbExpression string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat (string1 As DbExpression, string2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Concat(System::Data::Common::CommandTrees::DbExpression ^ string1, System::Data::Common::CommandTrees::DbExpression ^ string2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="string2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="4ec38-210">Expression qui spécifie la chaîne devant s'afficher en première position dans la chaîne de résultat concaténée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-210">An expression that specifies the string that should appear first in the concatenated result string.</span></span></param>
        <param name="string2"><span data-ttu-id="4ec38-211">Expression qui spécifie la chaîne devant s'afficher en deuxième position dans la chaîne de résultat concaténée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-211">An expression that specifies the string that should appear second in the concatenated result string.</span></span></param>
        <summary><span data-ttu-id="4ec38-212">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « Concat » canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-212">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Concat' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="4ec38-213">Le résultat de l’expression est de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-213">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="4ec38-214">Nouvelle DbFunctionExpression qui produit la chaîne concaténée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-214">A new DbFunctionExpression that produces the concatenated string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-215">**string1** **string2**</span><span class="sxs-lookup"><span data-stu-id="4ec38-215">**string1** **string2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-216">**string1** **string2**</span><span class="sxs-lookup"><span data-stu-id="4ec38-216">**string1** **string2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Contains (this System.Data.Common.CommandTrees.DbExpression searchedString, System.Data.Common.CommandTrees.DbExpression searchedForString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Contains(class System.Data.Common.CommandTrees.DbExpression searchedString, class System.Data.Common.CommandTrees.DbExpression searchedForString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains (searchedString As DbExpression, searchedForString As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Contains(System::Data::Common::CommandTrees::DbExpression ^ searchedString, System::Data::Common::CommandTrees::DbExpression ^ searchedForString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchedString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="searchedForString" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="searchedString"><span data-ttu-id="4ec38-217">Expression qui spécifie la chaîne dans laquelle les occurrences de **searchedForString** doivent être recherchées.</span><span class="sxs-lookup"><span data-stu-id="4ec38-217">An expression that specifies the string to search for any occurence of **searchedForString**.</span></span></param>
        <param name="searchedForString"><span data-ttu-id="4ec38-218">Expression qui spécifie la chaîne à rechercher dans **searchedString**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-218">An expression that specifies the string to search for in **searchedString**.</span></span></param>
        <summary><span data-ttu-id="4ec38-219">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'Contains' canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-219">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Contains' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="4ec38-220">Le type de résultat de l'expression est booléen.</span><span class="sxs-lookup"><span data-stu-id="4ec38-220">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="4ec38-221">Nouveau DbFunctionExpression qui retourne une valeur booléenne indiquant si **searchedForString** se produit dans **searchedString** ou pas.</span><span class="sxs-lookup"><span data-stu-id="4ec38-221">A new DbFunctionExpression that returns a Boolean value indicating whether or not **searchedForString** occurs within **searchedString**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-222">**searchedString** **searchedForString**</span><span class="sxs-lookup"><span data-stu-id="4ec38-222">**searchedString** **searchedForString**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-223">**searchedString** **searchedForString**</span><span class="sxs-lookup"><span data-stu-id="4ec38-223">**searchedString** **searchedForString**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Count (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Count(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Count(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="4ec38-224">Expression qui spécifie la collection sur laquelle la valeur du nombre doit être calculée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-224">An expression that specifies the collection over which the count value should be computed.</span></span></param>
        <summary><span data-ttu-id="4ec38-225">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction 'Count' canonique sur la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-225">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Count' function over the specified collection.</span></span> <span data-ttu-id="4ec38-226">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-226">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-227">Nouvel objet DbFunctionExpression qui produit la valeur du nombre.</span><span class="sxs-lookup"><span data-stu-id="4ec38-227">A new DbFunctionExpression that produces the count value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-228">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-228">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-229">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-229">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTime (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTime(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="4ec38-230">Expression qui fournit la valeur « année » pour la nouvelle instance DateTime.</span><span class="sxs-lookup"><span data-stu-id="4ec38-230">An expression that provides the year value for the new DateTime instance.</span></span></param>
        <param name="month"><span data-ttu-id="4ec38-231">Expression qui fournit la valeur « mois » pour la nouvelle instance DateTime.</span><span class="sxs-lookup"><span data-stu-id="4ec38-231">An expression that provides the month value for the new DateTime instance.</span></span></param>
        <param name="day"><span data-ttu-id="4ec38-232">Expression qui fournit la valeur « jour » pour la nouvelle instance DateTime.</span><span class="sxs-lookup"><span data-stu-id="4ec38-232">An expression that provides the day value for the new DateTime instance.</span></span></param>
        <param name="hour"><span data-ttu-id="4ec38-233">Expression qui fournit la valeur « heure » pour la nouvelle instance DateTime.</span><span class="sxs-lookup"><span data-stu-id="4ec38-233">An expression that provides the hour value for the new DateTime instance.</span></span></param>
        <param name="minute"><span data-ttu-id="4ec38-234">Expression qui fournit la valeur « minute » pour la nouvelle instance DateTime.</span><span class="sxs-lookup"><span data-stu-id="4ec38-234">An expression that provides the minute value for the new DateTime instance.</span></span></param>
        <param name="second"><span data-ttu-id="4ec38-235">Expression qui fournit la valeur « seconde » pour la nouvelle instance DateTime.</span><span class="sxs-lookup"><span data-stu-id="4ec38-235">An expression that provides the second value for the new DateTime instance.</span></span></param>
        <summary><span data-ttu-id="4ec38-236">Crée un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction "CreateDateTime" canonique avec les arguments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="4ec38-236">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTime' function with the specified arguments.</span></span> <span data-ttu-id="4ec38-237">**second** doit avoir un résultat de type Edm.Double, alors que tous les autres arguments doivent avoir un résultat de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-237">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="4ec38-238">Le type de résultat de l'expression est Edm.DateTime.</span><span class="sxs-lookup"><span data-stu-id="4ec38-238">The result type of the expression is Edm.DateTime.</span></span></summary>
        <returns><span data-ttu-id="4ec38-239">Nouvelle DbFunctionExpression qui retourne un nouveau Datetime en fonction des valeurs spécifiées.</span><span class="sxs-lookup"><span data-stu-id="4ec38-239">A new DbFunctionExpression that returns a new DateTime based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-240">**year** **month** **day** **hour** **minute** **second**</span><span class="sxs-lookup"><span data-stu-id="4ec38-240">**year** **month** **day** **hour** **minute** **second**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-241">**year** **month** **day** **hour** **minute** **second**</span><span class="sxs-lookup"><span data-stu-id="4ec38-241">**year** **month** **day** **hour** **minute** **second**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second, System.Data.Common.CommandTrees.DbExpression timeZoneOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second, class System.Data.Common.CommandTrees.DbExpression timeZoneOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTimeOffset (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression, timeZoneOffset As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTimeOffset(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second, System::Data::Common::CommandTrees::DbExpression ^ timeZoneOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="timeZoneOffset" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="4ec38-242">Expression qui fournit la valeur « année » pour la nouvelle instance DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-242">An expression that provides the year value for the new DateTimeOffset instance.</span></span></param>
        <param name="month"><span data-ttu-id="4ec38-243">Expression qui fournit la valeur « mois » pour la nouvelle instance DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-243">An expression that provides the month value for the new DateTimeOffset instance.</span></span></param>
        <param name="day"><span data-ttu-id="4ec38-244">Expression qui fournit la valeur « jour » pour la nouvelle instance DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-244">An expression that provides the day value for the new DateTimeOffset instance.</span></span></param>
        <param name="hour"><span data-ttu-id="4ec38-245">Expression qui fournit la valeur « heure » pour la nouvelle instance DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-245">An expression that provides the hour value for the new DateTimeOffset instance.</span></span></param>
        <param name="minute"><span data-ttu-id="4ec38-246">Expression qui fournit la valeur « minute » pour la nouvelle instance DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-246">An expression that provides the minute value for the new DateTimeOffset instance.</span></span></param>
        <param name="second"><span data-ttu-id="4ec38-247">Expression qui fournit la valeur « seconde » pour la nouvelle instance DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-247">An expression that provides the second value for the new DateTimeOffset instance.</span></span></param>
        <param name="timeZoneOffset"><span data-ttu-id="4ec38-248">Expression qui fournit le nombre de minutes indiqué dans la valeur « décalage de fuseau horaire » pour la nouvelle instance DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-248">An expression that provides the number of minutes in the time zone offset value for the new DateTimeOffset instance.</span></span></param>
        <summary><span data-ttu-id="4ec38-249">Crée un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction "CreateDateTimeOffset" canonique avec les arguments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="4ec38-249">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTimeOffset' function with the specified arguments.</span></span> <span data-ttu-id="4ec38-250">**second** doit avoir un résultat de type Edm.Double, alors que tous les autres arguments doivent avoir un résultat de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-250">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="4ec38-251">Le type de résultat de l'expression est Edm.DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-251">The result type of the expression is Edm.DateTimeOffset.</span></span></summary>
        <returns><span data-ttu-id="4ec38-252">Nouvelle DbFunctionExpression qui retourne Nouvelle DatetimeOffset en fonction des valeurs spécifiées.</span><span class="sxs-lookup"><span data-stu-id="4ec38-252">A new DbFunctionExpression that returns a new DateTimeOffset based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span><span class="sxs-lookup"><span data-stu-id="4ec38-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span><span class="sxs-lookup"><span data-stu-id="4ec38-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateTime (System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateTime(class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTime (hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateTime(System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="hour"><span data-ttu-id="4ec38-255">Expression qui fournit la valeur « heure » pour la nouvelle instance DateTime.</span><span class="sxs-lookup"><span data-stu-id="4ec38-255">An expression that provides the hour value for the new DateTime instance.</span></span></param>
        <param name="minute"><span data-ttu-id="4ec38-256">Expression qui fournit la valeur « minute » pour la nouvelle instance DateTime.</span><span class="sxs-lookup"><span data-stu-id="4ec38-256">An expression that provides the minute value for the new DateTime instance.</span></span></param>
        <param name="second"><span data-ttu-id="4ec38-257">Expression qui fournit la valeur « seconde » pour la nouvelle instance DateTime.</span><span class="sxs-lookup"><span data-stu-id="4ec38-257">An expression that provides the second value for the new DateTime instance.</span></span></param>
        <summary><span data-ttu-id="4ec38-258">Crée un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction "CreateTime" canonique avec les arguments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="4ec38-258">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateTime' function with the specified arguments.</span></span> <span data-ttu-id="4ec38-259">**second** doit avoir un résultat de type Edm.Double, alors que tous les autres arguments doivent avoir un résultat de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-259">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="4ec38-260">Le type de résultat de l'expression est Edm.Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-260">The result type of the expression is Edm.Time.</span></span></summary>
        <returns><span data-ttu-id="4ec38-261">Nouvelle DbFunctionExpression qui retourne une nouvelle heure en fonction des valeurs spécifiées.</span><span class="sxs-lookup"><span data-stu-id="4ec38-261">A new DbFunctionExpression that returns a new Time based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-262">**hour** **minute** **second**</span><span class="sxs-lookup"><span data-stu-id="4ec38-262">**hour** **minute** **second**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-263">**hour** **minute** **second**</span><span class="sxs-lookup"><span data-stu-id="4ec38-263">**hour** **minute** **second**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ec38-264">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'CurrentDateTime' canonique.</span><span class="sxs-lookup"><span data-stu-id="4ec38-264">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTime' function.</span></span></summary>
        <returns><span data-ttu-id="4ec38-265">Nouvelle DbFunctionExpression qui retourne la date et l'heure actuelles en tant qu'instance Edm.DateTime.</span><span class="sxs-lookup"><span data-stu-id="4ec38-265">A new DbFunctionExpression that returns the current date and time as an Edm.DateTime instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTimeOffset () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTimeOffset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ec38-266">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'CurrentDateTimeOffset' canonique.</span><span class="sxs-lookup"><span data-stu-id="4ec38-266">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTimeOffset' function.</span></span></summary>
        <returns><span data-ttu-id="4ec38-267">Nouvelle DbFunctionExpression qui retourne la date et l'heure actuelles en tant qu'instance Edm.DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-267">A new DbFunctionExpression that returns the current date and time as an Edm.DateTimeOffset instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUtcDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentUtcDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentUtcDateTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ec38-268">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'CurrentUtcDateTime' canonique.</span><span class="sxs-lookup"><span data-stu-id="4ec38-268">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentUtcDateTime' function.</span></span></summary>
        <returns><span data-ttu-id="4ec38-269">Nouvelle DbFunctionExpression qui retourne la date et l'heure actuelles UTC en tant qu'instance Edm.DateTime.</span><span class="sxs-lookup"><span data-stu-id="4ec38-269">A new DbFunctionExpression that returns the current UTC date and time as an Edm.DateTime instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Day (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Day(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Day (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Day(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="4ec38-270">Expression qui spécifie la valeur dans laquelle le jour doit être récupéré.</span><span class="sxs-lookup"><span data-stu-id="4ec38-270">An expression that specifies the value from which the day should be retrieved.</span></span></param>
        <summary><span data-ttu-id="4ec38-271">Crée un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction « Day » canonique avec l’argument spécifié, qui doit avoir un résultat de type DateTime ou DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-271">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Day' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="4ec38-272">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-272">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-273">Nouveau DbFunctionExpression qui retourne la valeur entière du jour dans **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-273">A new DbFunctionExpression that returns the integer day value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-274">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-274">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-275">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-275">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DayOfYear (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DayOfYear(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="4ec38-276">Expression qui spécifie la valeur dans laquelle le jour de l’année doit être récupéré.</span><span class="sxs-lookup"><span data-stu-id="4ec38-276">An expression that specifies the value from which the day within the year should be retrieved.</span></span></param>
        <summary><span data-ttu-id="4ec38-277">Crée un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction « DayOfYear » canonique avec l’argument spécifié, qui doit avoir un résultat de type DateTime ou DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-277">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DayOfYear' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="4ec38-278">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-278">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-279">Nouveau DbFunctionExpression qui retourne la valeur entière du jour de l’année dans **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-279">A new DbFunctionExpression that returns the integer day of year value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-280">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-280">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-281">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-281">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DiffDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffDays (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffDays(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffDays (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="4ec38-282">Expression qui spécifie le premier argument de la valeur de date.</span><span class="sxs-lookup"><span data-stu-id="4ec38-282">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="4ec38-283">Expression qui spécifie le second argument de la valeur de date.</span><span class="sxs-lookup"><span data-stu-id="4ec38-283">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="4ec38-284">Crée une <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « DiffDays » canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type DateTime ou DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-284">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffDays' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="4ec38-285">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-285">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-286">Nouveau DbFunctionExpression qui retourne le nombre de jours égal à la différence entre **dateValue1** et **dateValue2**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-286">A new DbFunctionExpression that returns the number of days that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffHours (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffHours(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffHours (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="4ec38-287">Expression qui spécifie le premier argument de la valeur d'heure.</span><span class="sxs-lookup"><span data-stu-id="4ec38-287">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="4ec38-288">Expression qui spécifie le second argument de la valeur horaire.</span><span class="sxs-lookup"><span data-stu-id="4ec38-288">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="4ec38-289">Crée une <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « DiffHours » canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type DateTime ou DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-289">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffHours' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="4ec38-290">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-290">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-291">Nouveau DbFunctionExpression qui retourne le nombre d’heures égal à la différence entre **timeValue1** et **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-291">A new DbFunctionExpression that returns the number of hours that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMicroseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="4ec38-292">Expression qui spécifie le premier argument de la valeur d'heure.</span><span class="sxs-lookup"><span data-stu-id="4ec38-292">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="4ec38-293">Expression qui spécifie le second argument de la valeur horaire.</span><span class="sxs-lookup"><span data-stu-id="4ec38-293">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="4ec38-294">Crée une <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « DiffMicroseconds » canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type DateTime ou DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-294">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMicroseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="4ec38-295">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-295">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-296">Nouveau DbFunctionExpression qui retourne le nombre de microsecondes égal à la différence entre **timeValue1** et **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-296">A new DbFunctionExpression that returns the number of microseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMilliseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="4ec38-297">Expression qui spécifie le premier argument de la valeur d'heure.</span><span class="sxs-lookup"><span data-stu-id="4ec38-297">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="4ec38-298">Expression qui spécifie le second argument de la valeur horaire.</span><span class="sxs-lookup"><span data-stu-id="4ec38-298">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="4ec38-299">Crée une <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « DiffMilliseconds » canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type DateTime ou DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-299">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMilliseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="4ec38-300">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-300">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-301">Nouveau DbFunctionExpression qui retourne le nombre de millisecondes égal à la différence entre **timeValue1** et **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-301">A new DbFunctionExpression that returns the number of milliseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMinutes (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="4ec38-302">Expression qui spécifie le premier argument de la valeur d'heure.</span><span class="sxs-lookup"><span data-stu-id="4ec38-302">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="4ec38-303">Expression qui spécifie le second argument de la valeur horaire.</span><span class="sxs-lookup"><span data-stu-id="4ec38-303">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="4ec38-304">Crée une <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « DiffMinutes » canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type DateTime ou DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-304">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMinutes' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="4ec38-305">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-305">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-306">Nouveau DbFunctionExpression qui retourne le nombre de minutes égal à différence entre **timeValue1** et **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-306">A new DbFunctionExpression that returns the number of minutes that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMonths (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="4ec38-307">Expression qui spécifie le premier argument de la valeur de date.</span><span class="sxs-lookup"><span data-stu-id="4ec38-307">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="4ec38-308">Expression qui spécifie le second argument de la valeur de date.</span><span class="sxs-lookup"><span data-stu-id="4ec38-308">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="4ec38-309">Crée une <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « DiffMonths » canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type DateTime ou DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-309">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMonths' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="4ec38-310">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-310">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-311">Nouveau DbFunctionExpression qui retourne le nombre de mois égal à la différence entre **dateValue1** et **dateValue2**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-311">A new DbFunctionExpression that returns the number of months that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffNanoseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="4ec38-312">Expression qui spécifie le premier argument de la valeur d'heure.</span><span class="sxs-lookup"><span data-stu-id="4ec38-312">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="4ec38-313">Expression qui spécifie le second argument de la valeur horaire.</span><span class="sxs-lookup"><span data-stu-id="4ec38-313">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="4ec38-314">Crée une <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « DiffNanoseconds » canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type DateTime ou DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-314">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffNanoseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="4ec38-315">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-315">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-316">Nouveau DbFunctionExpression qui retourne le nombre de nanosecondes égal à la différence entre **timeValue1** et **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-316">A new DbFunctionExpression that returns the number of nanoseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffSeconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="4ec38-317">Expression qui spécifie le premier argument de la valeur d'heure.</span><span class="sxs-lookup"><span data-stu-id="4ec38-317">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="4ec38-318">Expression qui spécifie le second argument de la valeur horaire.</span><span class="sxs-lookup"><span data-stu-id="4ec38-318">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="4ec38-319">Crée une <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « DiffSeconds » canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type DateTime ou DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-319">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffSeconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="4ec38-320">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-320">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-321">Nouveau DbFunctionExpression qui retourne le nombre de secondes égal à la différence entre **timeValue1** et **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-321">A new DbFunctionExpression that returns the number of seconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffYears (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffYears(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffYears (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="4ec38-322">Expression qui spécifie le premier argument de la valeur de date.</span><span class="sxs-lookup"><span data-stu-id="4ec38-322">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="4ec38-323">Expression qui spécifie le second argument de la valeur de date.</span><span class="sxs-lookup"><span data-stu-id="4ec38-323">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="4ec38-324">Crée une <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « DiffYears » canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type DateTime ou DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-324">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffYears' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="4ec38-325">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-325">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-326">Nouveau DbFunctionExpression qui retourne le nombre d’années égal à la différence entre **dateValue1** et **dateValue2**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-326">A new DbFunctionExpression that returns the number of years that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression EndsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression EndsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndsWith (stringArgument As DbExpression, suffix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ EndsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ suffix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="suffix" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="4ec38-327">Expression qui spécifie la chaîne recherchée à la fin pour le **suffix** de chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-327">An expression that specifies the string that is searched at the end for string **suffix**.</span></span></param>
        <param name="suffix"><span data-ttu-id="4ec38-328">Expression qui spécifie la chaîne cible recherchée à la fin de **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-328">An expression that specifies the target string that is searched for at the end of **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="4ec38-329">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'EndsWith' canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-329">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'EndsWith' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="4ec38-330">Le type de résultat de l'expression est booléen.</span><span class="sxs-lookup"><span data-stu-id="4ec38-330">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="4ec38-331">Nouveau DbFunctionExpression qui retourne une valeur booléenne indiquant si **stringArgument** se termine par **suffix** ou non.</span><span class="sxs-lookup"><span data-stu-id="4ec38-331">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** ends with **suffix**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Floor (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Floor(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Floor (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Floor(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4ec38-332">Expression qui spécifie la valeur numérique.</span><span class="sxs-lookup"><span data-stu-id="4ec38-332">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="4ec38-333">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'Floor' canonique avec l'argument spécifié, qui doivent tous les deux avoir un résultat de type simple, double ou décimal.</span><span class="sxs-lookup"><span data-stu-id="4ec38-333">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Floor' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="4ec38-334">Le type de résultat de l’expression est identique à celui de **value**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-334">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-335">Nouveau DbFunctionExpression qui retourne la valeur entière la plus grande qui n’est pas supérieure à **value**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-335">A new DbFunctionExpression that returns the largest integer value not greater than **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-336">**value**</span><span class="sxs-lookup"><span data-stu-id="4ec38-336">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-337">**value**</span><span class="sxs-lookup"><span data-stu-id="4ec38-337">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTotalOffsetMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes (this System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes(class System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTotalOffsetMinutes (dateTimeOffsetArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ GetTotalOffsetMinutes(System::Data::Common::CommandTrees::DbExpression ^ dateTimeOffsetArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffsetArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffsetArgument"><span data-ttu-id="4ec38-338">Expression qui spécifie la valeur DateTimeOffset à partir de laquelle le décalage de minutes par rapport à la valeur GMT doit être récupéré.</span><span class="sxs-lookup"><span data-stu-id="4ec38-338">An expression that specifies the DateTimeOffset value from which the minute offset from GMT should be retrieved.</span></span></param>
        <summary><span data-ttu-id="4ec38-339">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'GetTotalOffsetMinutes' canonique avec l'argument spécifié, qui doit avoir un résultat de type DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-339">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GetTotalOffsetMinutes' function with the specified argument, which must have a DateTimeOffset result type.</span></span> <span data-ttu-id="4ec38-340">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-340">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-341">Nouveau DbFunctionExpression qui retourne le nombre de minutes correspondant au décalage de **dateTimeOffsetArgument** par rapport à l’heure GMT.</span><span class="sxs-lookup"><span data-stu-id="4ec38-341">A new DbFunctionExpression that returns the number of minutes **dateTimeOffsetArgument** is offset from GMT.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-342">**dateTimeOffsetArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-342">**dateTimeOffsetArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-343">**dateTimeOffsetArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-343">**dateTimeOffsetArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Hour (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Hour(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Hour (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Hour(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="4ec38-344">Expression qui spécifie la valeur dans laquelle l’heure doit être récupérée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-344">An expression that specifies the value from which the hour should be retrieved.</span></span></param>
        <summary><span data-ttu-id="4ec38-345">Crée un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction « Hour » canonique avec l’argument spécifié, qui doit avoir un résultat de type DateTime, DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-345">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Hour' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="4ec38-346">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-346">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-347">Nouveau DbFunctionExpression qui retourne la valeur entière de l’heure dans **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-347">A new DbFunctionExpression that returns the integer hour value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-348">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-348">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-349">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-349">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression IndexOf (this System.Data.Common.CommandTrees.DbExpression searchString, System.Data.Common.CommandTrees.DbExpression stringToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression IndexOf(class System.Data.Common.CommandTrees.DbExpression searchString, class System.Data.Common.CommandTrees.DbExpression stringToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf (searchString As DbExpression, stringToFind As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ IndexOf(System::Data::Common::CommandTrees::DbExpression ^ searchString, System::Data::Common::CommandTrees::DbExpression ^ stringToFind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="stringToFind" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="searchString"><span data-ttu-id="4ec38-350">Expression qui spécifie la chaîne dans laquelle **stringToFind** doit être recherché.</span><span class="sxs-lookup"><span data-stu-id="4ec38-350">An expression that specifies the string to search for **stringToFind**.</span></span></param>
        <param name="stringToFind"><span data-ttu-id="4ec38-351">Expression qui spécifie que la chaîne à trouver dans **searchString** doit être vérifiée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-351">An expression that specifies the string to locate within **searchString** should be checked.</span></span></param>
        <summary><span data-ttu-id="4ec38-352">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'IndexOf' canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-352">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'IndexOf' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="4ec38-353">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-353">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-354">Nouveau DbFunctionExpression qui retourne le premier index de **stringToFind** dans **searchString**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-354">A new DbFunctionExpression that returns the first index of **stringToFind** in **searchString**.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ec38-355">L’index retourné par IndexOf est \<b > base 1\</b >.</span><span class="sxs-lookup"><span data-stu-id="4ec38-355">The index returned by IndexOf is \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-356">**searchString** **stringToFind**</span><span class="sxs-lookup"><span data-stu-id="4ec38-356">**searchString** **stringToFind**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-357">**searchString** **stringToFind**</span><span class="sxs-lookup"><span data-stu-id="4ec38-357">**searchString** **stringToFind**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Left (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Left(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Left (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Left(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="4ec38-358">Expression qui spécifie la chaîne de laquelle extraire la sous-chaîne la plus à gauche.</span><span class="sxs-lookup"><span data-stu-id="4ec38-358">An expression that specifies the string from which to extract the leftmost substring.</span></span></param>
        <param name="length"><span data-ttu-id="4ec38-359">Expression qui spécifie la longueur de la sous-chaîne la plus à gauche à extraire de **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-359">An expression that specifies the length of the leftmost substring to extract from **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="4ec38-360">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'Left' canonique avec les arguments spécifiés, qui doivent avoir un résultat de type numérique entier et chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-360">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Left' function with the specified arguments, which must have a string and integer numeric result type.</span></span> <span data-ttu-id="4ec38-361">Le résultat de l’expression est de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-361">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="4ec38-362">Nouveau DbFunctionExpression qui retourne la sous-chaîne la plus à gauche avec la longueur **length** de **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-362">A new DbFunctionExpression that returns the leftmost substring of length **length** from **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-363">**stringArgument** **length**</span><span class="sxs-lookup"><span data-stu-id="4ec38-363">**stringArgument** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-364">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-364">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Length (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Length(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Length (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Length(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="4ec38-365">Expression qui spécifie la chaîne dont la longueur doit être calculée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-365">An expression that specifies the string for which the length should be computed.</span></span></param>
        <summary><span data-ttu-id="4ec38-366">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « Length » canonique avec l'argument spécifié, qui doit avoir un résultat de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-366">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Length' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="4ec38-367">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-367">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-368">Nouveau DbFunctionExpression qui retourne la longueur de **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-368">A new DbFunctionExpression that returns the length of **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-369">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-369">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-370">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-370">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LongCount">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression LongCount (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression LongCount(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ LongCount(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="4ec38-371">Expression qui spécifie la collection sur laquelle la valeur du nombre doit être calculée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-371">An expression that specifies the collection over which the count value should be computed.</span></span></param>
        <summary><span data-ttu-id="4ec38-372">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction 'BigCount' canonique sur la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-372">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BigCount' function over the specified collection.</span></span> <span data-ttu-id="4ec38-373">Le résultat de l’expression est de type Edm.Int64.</span><span class="sxs-lookup"><span data-stu-id="4ec38-373">The result type of the expression is Edm.Int64.</span></span></summary>
        <returns><span data-ttu-id="4ec38-374">Nouvel objet DbFunctionExpression qui produit la valeur du nombre.</span><span class="sxs-lookup"><span data-stu-id="4ec38-374">A new DbFunctionExpression that produces the count value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-375">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-375">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-376">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-376">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Max (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Max(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Max(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="4ec38-377">Expression qui spécifie la collection à partir de laquelle la valeur maximale doit être récupérée</span><span class="sxs-lookup"><span data-stu-id="4ec38-377">An expression that specifies the collection from which the maximum value should be retrieved</span></span></param>
        <summary><span data-ttu-id="4ec38-378">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction 'Max' canonique sur la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-378">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Max' function over the specified collection.</span></span> <span data-ttu-id="4ec38-379">Le résultat de l’expression est du même type que l’élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="4ec38-379">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="4ec38-380">Nouvel objet DbFunctionExpression qui produit la valeur maximale.</span><span class="sxs-lookup"><span data-stu-id="4ec38-380">A new DbFunctionExpression that produces the maximum value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-381">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-381">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-382">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-382">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Millisecond (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Millisecond(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Millisecond (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Millisecond(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="4ec38-383">Expression qui spécifie la valeur dans laquelle la milliseconde doit être récupérée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-383">An expression that specifies the value from which the millisecond should be retrieved.</span></span></param>
        <summary><span data-ttu-id="4ec38-384">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « Millisecond » canonique avec l'argument spécifié, qui doit avoir un résultat de type DateTime, DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-384">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Millisecond' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="4ec38-385">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-385">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-386">Nouveau DbFunctionExpression qui retourne la valeur entière de milliseconde dans **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-386">A new DbFunctionExpression that returns the integer millisecond value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-387">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-387">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-388">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-388">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Min (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Min(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Min(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="4ec38-389">Expression qui spécifie la collection à partir de laquelle la valeur minimale doit être récupérée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-389">An expression that specifies the collection from which the minimum value should be retrieved.</span></span></param>
        <summary><span data-ttu-id="4ec38-390">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction 'Min' canonique sur la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-390">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Min' function over the specified collection.</span></span> <span data-ttu-id="4ec38-391">Le résultat de l’expression est du même type que l’élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="4ec38-391">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="4ec38-392">Nouvel objet DbFunctionExpression qui produit la valeur minimale.</span><span class="sxs-lookup"><span data-stu-id="4ec38-392">A new DbFunctionExpression that produces the minimum value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-393">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-393">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-394">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-394">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Minute (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Minute(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minute (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Minute(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="4ec38-395">Expression qui spécifie la valeur dans laquelle la minute doit être récupérée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-395">An expression that specifies the value from which the minute should be retrieved.</span></span></param>
        <summary><span data-ttu-id="4ec38-396">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « Minute » canonique avec l'argument spécifié, qui doit avoir un résultat de type DateTime, DateTimeOffset ou Time.</span><span class="sxs-lookup"><span data-stu-id="4ec38-396">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Minute' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="4ec38-397">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-397">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-398">Nouveau DbFunctionExpression qui retourne la valeur entière de la minute dans **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-398">A new DbFunctionExpression that returns the integer minute value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-399">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-399">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-400">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-400">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Month (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Month(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Month (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Month(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="4ec38-401">Expression qui spécifie la valeur dans laquelle le mois doit être récupéré.</span><span class="sxs-lookup"><span data-stu-id="4ec38-401">An expression that specifies the value from which the month should be retrieved.</span></span></param>
        <summary><span data-ttu-id="4ec38-402">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'Month' canonique avec l'argument spécifié, qui doit avoir un résultat de type DateTime ou DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-402">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Month' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="4ec38-403">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-403">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-404">Nouveau DbFunctionExpression qui retourne la valeur entière du mois dans **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-404">A new DbFunctionExpression that returns the integer month value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-405">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-405">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-406">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-406">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewGuid">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression NewGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression NewGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function NewGuid () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ NewGuid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ec38-407">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'NewGuid' canonique.</span><span class="sxs-lookup"><span data-stu-id="4ec38-407">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'NewGuid' function.</span></span></summary>
        <returns><span data-ttu-id="4ec38-408">Nouvelle DbFunctionExpression qui retourne une nouvelle valeur GUID.</span><span class="sxs-lookup"><span data-stu-id="4ec38-408">A new DbFunctionExpression that returns a new GUID value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Power (this System.Data.Common.CommandTrees.DbExpression baseArgument, System.Data.Common.CommandTrees.DbExpression exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Power(class System.Data.Common.CommandTrees.DbExpression baseArgument, class System.Data.Common.CommandTrees.DbExpression exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Power (baseArgument As DbExpression, exponent As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Power(System::Data::Common::CommandTrees::DbExpression ^ baseArgument, System::Data::Common::CommandTrees::DbExpression ^ exponent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="exponent" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="baseArgument"><span data-ttu-id="4ec38-409">Expression qui spécifie la valeur numérique à élever à la puissance indiquée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-409">An expression that specifies the numeric value to raise to the given power.</span></span></param>
        <param name="exponent"><span data-ttu-id="4ec38-410">Expression qui spécifie la puissance à laquelle **baseArgument** doit être élevé.</span><span class="sxs-lookup"><span data-stu-id="4ec38-410">An expression that specifies the power to which **baseArgument** should be raised.</span></span></param>
        <summary><span data-ttu-id="4ec38-411">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'Power' canonique avec les arguments spécifiés, qui doivent avoir un résultat de type numérique.</span><span class="sxs-lookup"><span data-stu-id="4ec38-411">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Power' function with the specified arguments, which must have numeric result types.</span></span> <span data-ttu-id="4ec38-412">Le type de résultat de l’expression est identique à celui de **baseArgument**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-412">The result type of the expression is the same as the result type of **baseArgument**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-413">Nouveau DbFunctionExpression qui retourne la valeur de **baseArgument** élevée à la puissance spécifiée par **exponent**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-413">A new DbFunctionExpression that returns the value of **baseArgument** raised to the power specified by **exponent**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-414">**baseArgument** **exponent**</span><span class="sxs-lookup"><span data-stu-id="4ec38-414">**baseArgument** **exponent**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-415">**baseArgument** **exponent**</span><span class="sxs-lookup"><span data-stu-id="4ec38-415">**baseArgument** **exponent**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Replace (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression toReplace, System.Data.Common.CommandTrees.DbExpression replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Replace(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression toReplace, class System.Data.Common.CommandTrees.DbExpression replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace (stringArgument As DbExpression, toReplace As DbExpression, replacement As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Replace(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ toReplace, System::Data::Common::CommandTrees::DbExpression ^ replacement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toReplace" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="replacement" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="4ec38-416">Expression qui spécifie la chaîne dans laquelle l'opération de remplacement doit être exécutée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-416">An expression that specifies the string in which to perform the replacement operation.</span></span></param>
        <param name="toReplace"><span data-ttu-id="4ec38-417">Expression qui spécifie la chaîne qui est remplacée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-417">An expression that specifies the string that is replaced.</span></span></param>
        <param name="replacement"><span data-ttu-id="4ec38-418">Expression qui spécifie la chaîne de remplacement.</span><span class="sxs-lookup"><span data-stu-id="4ec38-418">An expression that specifies the replacement string.</span></span></param>
        <summary><span data-ttu-id="4ec38-419">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'Replace' canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-419">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Replace' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="4ec38-420">Le résultat de l’expression est également de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-420">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="4ec38-421">Nouveau DbFunctionExpression qui retourne une nouvelle chaîne en fonction de **stringArgument** où chaque occurrence de **toReplace** est remplacée par **replacement**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-421">A new DbFunctionExpression than returns a new string based on **stringArgument** where every occurence of **toReplace** is replaced by **replacement**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-422">**stringArgument** **toReplace** **replacement**</span><span class="sxs-lookup"><span data-stu-id="4ec38-422">**stringArgument** **toReplace** **replacement**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-423">**stringArgument** **toReplace** **replacement**</span><span class="sxs-lookup"><span data-stu-id="4ec38-423">**stringArgument** **toReplace** **replacement**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Reverse (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Reverse(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Reverse(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="4ec38-424">Expression qui spécifie la chaîne à inverser.</span><span class="sxs-lookup"><span data-stu-id="4ec38-424">An expression that specifies the string to reverse.</span></span></param>
        <summary><span data-ttu-id="4ec38-425">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'Reverse' canonique avec l'argument spécifié, qui doit avoir un résultat de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-425">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Reverse' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="4ec38-426">Le résultat de l’expression est également de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-426">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="4ec38-427">Nouveau DbFunctionExpression qui produit la valeur inversée de **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-427">A new DbFunctionExpression that produces the reversed value of **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-428">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-428">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-429">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-429">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Right (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Right(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Right (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Right(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="4ec38-430">Expression qui spécifie la chaîne à partir de laquelle extraire la sous-chaîne la plus à droite.</span><span class="sxs-lookup"><span data-stu-id="4ec38-430">An expression that specifies the string from which to extract the rightmost substring.</span></span></param>
        <param name="length"><span data-ttu-id="4ec38-431">Expression qui spécifie la longueur de la sous-chaîne la plus à droite à extraire de **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-431">An expression that specifies the length of the rightmost substring to extract from **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="4ec38-432">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'Right' canonique avec les arguments spécifiés, qui doivent avoir un résultat de type numérique entier et chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-432">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Right' function with the specified arguments, which must have a string and integer numeric result type.</span></span> <span data-ttu-id="4ec38-433">Le résultat de l’expression est de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-433">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="4ec38-434">Nouveau DbFunctionExpression qui retourne la sous-chaîne la plus à droite avec la longueur **length** de **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-434">A new DbFunctionExpression that returns the rightmost substring of length **length** from **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-435">**stringArgument** **length**</span><span class="sxs-lookup"><span data-stu-id="4ec38-435">**stringArgument** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-436">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-436">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4ec38-437">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « Round » canonique.</span><span class="sxs-lookup"><span data-stu-id="4ec38-437">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4ec38-438">Expression qui spécifie la valeur numérique à arrondir.</span><span class="sxs-lookup"><span data-stu-id="4ec38-438">An expression that specifies the numeric value to round.</span></span></param>
        <summary><span data-ttu-id="4ec38-439">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'Round' canonique avec l'argument spécifié, qui doivent tous les deux avoir un résultat de type simple, double ou décimal.</span><span class="sxs-lookup"><span data-stu-id="4ec38-439">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="4ec38-440">Le type de résultat de l’expression est identique à celui de **value**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-440">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-441">Nouvelle DbFunctionExpression qui arrondit l'argument spécifié à la valeur entière la plus proche.</span><span class="sxs-lookup"><span data-stu-id="4ec38-441">A new DbFunctionExpression that rounds the specified argument to the nearest integer value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-442">**value**</span><span class="sxs-lookup"><span data-stu-id="4ec38-442">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-443">**value**</span><span class="sxs-lookup"><span data-stu-id="4ec38-443">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4ec38-444">Expression qui spécifie la valeur numérique à arrondir.</span><span class="sxs-lookup"><span data-stu-id="4ec38-444">An expression that specifies the numeric value to round.</span></span></param>
        <param name="digits"><span data-ttu-id="4ec38-445">Expression qui spécifie le nombre de chiffres à utiliser pour la précision de l'arrondi.</span><span class="sxs-lookup"><span data-stu-id="4ec38-445">An expression that specifies the number of digits of precision to use when rounding.</span></span></param>
        <summary><span data-ttu-id="4ec38-446">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'Round' canonique avec les arguments spécifiés, qui doivent avoir un résultat de type entier et simple, double ou décimal.</span><span class="sxs-lookup"><span data-stu-id="4ec38-446">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span></span> <span data-ttu-id="4ec38-447">Le type de résultat de l’expression est identique à celui de **value**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-447">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-448">Nouveau DbFunctionExpression qui arrondit l’argument spécifié à la valeur entière la plus proche, avec la précision spécifiée par **digits**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-448">A new DbFunctionExpression that rounds the specified argument to the nearest integer value, with precision as specified by **digits**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-449">**value** **digits**</span><span class="sxs-lookup"><span data-stu-id="4ec38-449">**value** **digits**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-450">**value** **digits**</span><span class="sxs-lookup"><span data-stu-id="4ec38-450">**value** **digits**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Second (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Second(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Second (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Second(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="4ec38-451">Expression qui spécifie la valeur dans laquelle la seconde doit être récupérée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-451">An expression that specifies the value from which the second should be retrieved.</span></span></param>
        <summary><span data-ttu-id="4ec38-452">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction « Second » canonique avec l'argument spécifié, qui doit avoir un résultat de type DateTime, DateTimeOffset ou Time</span><span class="sxs-lookup"><span data-stu-id="4ec38-452">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Second' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="4ec38-453">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-453">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-454">Nouveau DbFunctionExpression qui retourne la valeur entière de la seconde dans **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-454">A new DbFunctionExpression that returns the integer second value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-455">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-455">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-456">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-456">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StartsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StartsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWith (stringArgument As DbExpression, prefix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StartsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="prefix" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="4ec38-457">Expression qui spécifie la chaîne recherchée au début pour le **prefix** de chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-457">An expression that specifies the string that is searched at the start for string **prefix**.</span></span></param>
        <param name="prefix"><span data-ttu-id="4ec38-458">Expression qui spécifie la chaîne cible recherchée au début de **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-458">An expression that specifies the target string that is searched for at the start of **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="4ec38-459">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'StartsWith' canonique avec les arguments spécifiés, qui doivent tous avoir un résultat de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StartsWith' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="4ec38-460">Le type de résultat de l'expression est booléen.</span><span class="sxs-lookup"><span data-stu-id="4ec38-460">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="4ec38-461">Nouveau DbFunctionExpression qui retourne une valeur booléenne indiquant si **stringArgument** commence par **prefix** ou non.</span><span class="sxs-lookup"><span data-stu-id="4ec38-461">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** starts with **prefix**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDev (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDev(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDev (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDev(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="4ec38-462">Expression qui spécifie la collection pour laquelle l’écart type doit être calculé.</span><span class="sxs-lookup"><span data-stu-id="4ec38-462">An expression that specifies the collection for which the standard deviation should be computed.</span></span></param>
        <summary><span data-ttu-id="4ec38-463">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction 'StDev' canonique sur les membres non Null de la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-463">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDev' function over the non-null members of the specified collection.</span></span> <span data-ttu-id="4ec38-464">Le résultat de l’expression est de type Edm.Double.</span><span class="sxs-lookup"><span data-stu-id="4ec38-464">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="4ec38-465">Nouvel objet DbFunctionExpression qui produit la valeur d’écart type sur les membres non Null de la collection.</span><span class="sxs-lookup"><span data-stu-id="4ec38-465">A new DbFunctionExpression that produces the standard deviation value over non-null members of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-466">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-466">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-467">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-467">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StDevP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDevP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDevP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDevP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDevP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="4ec38-468">Expression qui spécifie la collection pour laquelle l’écart type doit être calculé.</span><span class="sxs-lookup"><span data-stu-id="4ec38-468">An expression that specifies the collection for which the standard deviation should be computed.</span></span></param>
        <summary><span data-ttu-id="4ec38-469">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction 'StDev' canonique sur le remplissage de la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-469">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDevP' function over the population of the specified collection.</span></span> <span data-ttu-id="4ec38-470">Le résultat de l’expression est de type Edm.Double.</span><span class="sxs-lookup"><span data-stu-id="4ec38-470">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="4ec38-471">Nouvel objet DbFunctionExpression qui produit la valeur d’écart type.</span><span class="sxs-lookup"><span data-stu-id="4ec38-471">A new DbFunctionExpression that produces the standard deviation value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-472">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-472">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-473">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-473">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Substring (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression start, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Substring(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression start, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Substring (stringArgument As DbExpression, start As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Substring(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ start, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="start" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="4ec38-474">Expression qui spécifie la chaîne dont la sous-chaîne doit être extraite.</span><span class="sxs-lookup"><span data-stu-id="4ec38-474">An expression that specifies the string from which to extract the substring.</span></span></param>
        <param name="start"><span data-ttu-id="4ec38-475">Expression qui spécifie l'index de départ dont la sous-chaîne doit être extraite.</span><span class="sxs-lookup"><span data-stu-id="4ec38-475">An expression that specifies the starting index from which the substring should be taken.</span></span></param>
        <param name="length"><span data-ttu-id="4ec38-476">Expression qui spécifie la longueur de la sous-chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-476">An expression that specifies the length of the substring.</span></span></param>
        <summary><span data-ttu-id="4ec38-477">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'Substring' canonique avec les arguments spécifiés, qui doivent avoir un résultat de type numérique entier et chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-477">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Substring' function with the specified arguments, which must have a string and integer numeric result types.</span></span> <span data-ttu-id="4ec38-478">Le résultat de l’expression est de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-478">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="4ec38-479">Nouveau DbFunctionExpression qui retourne la sous-chaîne de longueur **length** à partir de **stringArgument** et qui démarre de **start**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-479">A new DbFunctionExpression that returns the substring of length **length** from **stringArgument** starting at **start**.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ec38-480">Sous-chaîne requiert que l’index spécifié par **Démarrer** être \<b > base 1\</b >.</span><span class="sxs-lookup"><span data-stu-id="4ec38-480">Substring requires that the index specified by **start** be \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-481">**stringArgument** **start** **length**</span><span class="sxs-lookup"><span data-stu-id="4ec38-481">**stringArgument** **start** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-482">**stringArgument** **start** **length**</span><span class="sxs-lookup"><span data-stu-id="4ec38-482">**stringArgument** **start** **length**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Sum (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Sum(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Sum(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="4ec38-483">Expression qui spécifie la collection à partir de laquelle la somme doit être calculée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-483">An expression that specifies the collection from which the sum should be computed.</span></span></param>
        <summary><span data-ttu-id="4ec38-484">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction 'Sum' canonique sur la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-484">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Sum' function over the specified collection.</span></span> <span data-ttu-id="4ec38-485">Le résultat de l’expression est du même type que l’élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="4ec38-485">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="4ec38-486">Nouvel objet DbFunctionExpression qui produit la somme.</span><span class="sxs-lookup"><span data-stu-id="4ec38-486">A new DbFunctionExpression that produces the sum.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-487">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-487">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-488">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-488">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToLower (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToLower(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLower (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToLower(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="4ec38-489">Expression qui spécifie la chaîne devant être convertie en minuscules.</span><span class="sxs-lookup"><span data-stu-id="4ec38-489">An expression that specifies the string that should be converted to lower case.</span></span></param>
        <summary><span data-ttu-id="4ec38-490">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'ToLower' canonique avec l'argument spécifié, qui doit avoir un résultat de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-490">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToLower' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="4ec38-491">Le résultat de l’expression est également de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-491">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="4ec38-492">Nouveau DbFunctionExpression qui retourne la valeur de **stringArgument** convertie en minuscules.</span><span class="sxs-lookup"><span data-stu-id="4ec38-492">A new DbFunctionExpression that returns value of **stringArgument** converted to lower case.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-493">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-493">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-494">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-494">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToUpper (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToUpper(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUpper (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToUpper(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="4ec38-495">Expression qui spécifie la chaîne devant être convertie en majuscules.</span><span class="sxs-lookup"><span data-stu-id="4ec38-495">An expression that specifies the string that should be converted to upper case.</span></span></param>
        <summary><span data-ttu-id="4ec38-496">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'ToUpper' canonique avec l'argument spécifié, qui doit avoir un résultat de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-496">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToUpper' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="4ec38-497">Le résultat de l’expression est également de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-497">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="4ec38-498">Nouveau DbFunctionExpression qui retourne la valeur de **stringArgument** convertie en majuscules.</span><span class="sxs-lookup"><span data-stu-id="4ec38-498">A new DbFunctionExpression that returns value of **stringArgument** converted to upper case.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-499">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-499">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-500">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-500">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Trim (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Trim(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Trim (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Trim(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="4ec38-501">Expression qui spécifie la chaîne dans laquelle les espaces de début et de fin doivent être supprimés.</span><span class="sxs-lookup"><span data-stu-id="4ec38-501">An expression that specifies the string from which leading and trailing space should be removed.</span></span></param>
        <summary><span data-ttu-id="4ec38-502">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'Trim' canonique avec l'argument spécifié, qui doit avoir un résultat de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-502">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Trim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="4ec38-503">Le résultat de l’expression est également de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-503">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="4ec38-504">Nouveau DbFunctionExpression qui retourne la valeur de **stringArgument** avec les espaces de début et de fin supprimés.</span><span class="sxs-lookup"><span data-stu-id="4ec38-504">A new DbFunctionExpression that returns value of **stringArgument** with leading and trailing space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-505">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-505">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-506">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-506">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimEnd (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimEnd(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="4ec38-507">Expression qui spécifie la chaîne dans laquelle l’espace de fin doit être supprimé.</span><span class="sxs-lookup"><span data-stu-id="4ec38-507">An expression that specifies the string from which trailing space should be removed.</span></span></param>
        <summary><span data-ttu-id="4ec38-508">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'RTrim' canonique avec l'argument spécifié, qui doit avoir un résultat de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-508">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'RTrim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="4ec38-509">Le résultat de l’expression est également de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-509">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="4ec38-510">Nouveau DbFunctionExpression qui retourne la valeur de **stringArgument** avec l’espace de fin supprimé.</span><span class="sxs-lookup"><span data-stu-id="4ec38-510">A new DbFunctionExpression that returns value of **stringArgument** with trailing space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-511">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-511">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-512">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-512">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimStart (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimStart(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimStart (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimStart(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="4ec38-513">Expression qui spécifie la chaîne dont l’espace de fin doit être supprimé.</span><span class="sxs-lookup"><span data-stu-id="4ec38-513">An expression that specifies the string from which leading space should be removed.</span></span></param>
        <summary><span data-ttu-id="4ec38-514">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'LTrim' canonique avec l'argument spécifié, qui doit avoir un résultat de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-514">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'LTrim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="4ec38-515">Le résultat de l’expression est également de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="4ec38-515">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="4ec38-516">Nouveau DbFunctionExpression qui retourne la valeur de **stringArgument** avec l’espace de début supprimé.</span><span class="sxs-lookup"><span data-stu-id="4ec38-516">A new DbFunctionExpression that returns value of **stringArgument** with leading space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-517">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-517">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-518">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="4ec38-518">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Truncate (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Truncate(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Truncate (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Truncate(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4ec38-519">Expression qui spécifie la valeur numérique à tronquer.</span><span class="sxs-lookup"><span data-stu-id="4ec38-519">An expression that specifies the numeric value to truncate.</span></span></param>
        <param name="digits"><span data-ttu-id="4ec38-520">Expression qui spécifie le nombre de chiffres à utiliser pour la précision de la troncation.</span><span class="sxs-lookup"><span data-stu-id="4ec38-520">An expression that specifies the number of digits of precision to use when truncating.</span></span></param>
        <summary><span data-ttu-id="4ec38-521">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'Truncate' canonique avec les arguments spécifiés, qui doivent avoir un résultat de type entier et simple, double ou décimal.</span><span class="sxs-lookup"><span data-stu-id="4ec38-521">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Truncate' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span></span> <span data-ttu-id="4ec38-522">Le type de résultat de l’expression est identique à celui de **value**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-522">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-523">Nouveau DbFunctionExpression qui tronque l’argument spécifié à la valeur entière la plus proche, avec la précision spécifiée par **digits**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-523">A new DbFunctionExpression that truncates the specified argument to the nearest integer value, with precision as specified by **digits**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-524">**value** **digits**</span><span class="sxs-lookup"><span data-stu-id="4ec38-524">**value** **digits**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-525">**value** **digits**</span><span class="sxs-lookup"><span data-stu-id="4ec38-525">**value** **digits**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TruncateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TruncateTime (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TruncateTime(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="4ec38-526">Expression qui spécifie la valeur dont la partie heure doit être tronquée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-526">An expression that specifies the value for which the time portion should be truncated.</span></span></param>
        <summary><span data-ttu-id="4ec38-527">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'TruncateTime' canonique avec l'argument spécifié, qui doit avoir un résultat de type DateTime ou DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-527">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'TruncateTime' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="4ec38-528">Le type de résultat de l’expression est le même que celui de **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-528">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="4ec38-529">Nouveau DbFunctionExpression qui retourne la valeur de **dateValue** avec l’heure définie sur zéro.</span><span class="sxs-lookup"><span data-stu-id="4ec38-529">A new DbFunctionExpression that returns the value of **dateValue** with time set to zero.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-530">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-530">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-531">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-531">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Var">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Var (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Var(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Var (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Var(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="4ec38-532">Expression qui spécifie la collection pour laquelle la variance statistique doit être calculée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-532">An expression that specifies the collection for which the statistical variance should be computed.</span></span></param>
        <summary><span data-ttu-id="4ec38-533">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction 'Var' canonique sur les membres non Null de la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-533">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Var' function over the non-null members of the specified collection.</span></span> <span data-ttu-id="4ec38-534">Le résultat de l’expression est de type Edm.Double.</span><span class="sxs-lookup"><span data-stu-id="4ec38-534">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="4ec38-535">Nouvel objet DbFunctionExpression qui produit la valeur de variance statistique pour les membres non Null de la collection.</span><span class="sxs-lookup"><span data-stu-id="4ec38-535">A new DbFunctionExpression that produces the statistical variance value for the non-null members of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-536">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-536">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-537">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-537">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VarP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression VarP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression VarP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VarP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ VarP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="4ec38-538">Expression qui spécifie la collection pour laquelle la variance statistique doit être calculée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-538">An expression that specifies the collection for which the statistical variance should be computed.</span></span></param>
        <summary><span data-ttu-id="4ec38-539">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> qui appelle la fonction 'VarP' canonique sur le remplissage de la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-539">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'VarP' function over the population of the specified collection.</span></span> <span data-ttu-id="4ec38-540">Le résultat de l’expression est de type Edm.Double.</span><span class="sxs-lookup"><span data-stu-id="4ec38-540">The result type of the expression Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="4ec38-541">Nouvel objet DbFunctionExpression qui produit la valeur de variance statistique.</span><span class="sxs-lookup"><span data-stu-id="4ec38-541">A new DbFunctionExpression that produces the statistical variance value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-542">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-542">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-543">**collection**</span><span class="sxs-lookup"><span data-stu-id="4ec38-543">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Year (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Year(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Year (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Year(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="4ec38-544">Expression qui spécifie la valeur dans laquelle l’année doit être récupérée.</span><span class="sxs-lookup"><span data-stu-id="4ec38-544">An expression that specifies the value from which the year should be retrieved.</span></span></param>
        <summary><span data-ttu-id="4ec38-545">Crée un objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> appelant la fonction 'Year' canonique avec l'argument spécifié, qui doit avoir un résultat de type DateTime ou DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="4ec38-545">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Year' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="4ec38-546">Le résultat de l’expression est de type Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="4ec38-546">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="4ec38-547">Nouveau DbFunctionExpression qui retourne la valeur entière de l’année dans **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="4ec38-547">A new DbFunctionExpression that returns the integer year value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ec38-548">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-548">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ec38-549">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="4ec38-549">**dateValue**</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>