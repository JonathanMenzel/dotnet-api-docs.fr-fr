<Type Name="VisualStyleRenderer" FullName="System.Windows.Forms.VisualStyles.VisualStyleRenderer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ffd3aacf222991c62616139725cef54d77b27e1" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52590918" /></Metadata><TypeSignature Language="C#" Value="public sealed class VisualStyleRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VisualStyleRenderer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualStyleRenderer" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStyleRenderer sealed" />
  <TypeSignature Language="F#" Value="type VisualStyleRenderer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des méthodes pour dessiner et obtenir des informations à propos d'un <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.VisualStyles?displayProperty=nameWithType> expose de l’espace de noms <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> objets qui représentent tous les contrôles et de l’utilisateur de l’interface éléments (IU) qui sont pris en charge par les styles visuels. Pour dessiner ou obtenir des informations sur un élément particulier, vous devez définir un <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> à l’élément qui vous intéresse. Un <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> est automatiquement défini sur une certaine <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> dans le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.%23ctor%2A> constructeur, mais vous pouvez également définir un existant <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> à un autre élément en appelant le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters%2A> (méthode).  
  
 Pour dessiner un élément, utilisez le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%2A> (méthode). Le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> classe inclut également des méthodes, telles que <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetColor%2A> et <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A>, qui fournissent des informations sur la façon dont un élément est défini par le style visuel actuel.  
  
 Le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.%23ctor%2A> constructeur et la plupart de la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> méthodes lèvent des exceptions, sauf si les styles visuels sont activés dans le système d’exploitation et les styles visuels sont appliqués à la zone cliente des fenêtres d’application. Pour vérifier ces conditions, utilisez la `static` <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> propriété.  
  
 Le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> classe encapsule les fonctionnalités des styles visuels (UxTheme) API à partir de la partie Windows Shell de Windows Platform SDK. Pour plus d’informations sur les styles visuels, consultez « À l’aide de Windows XP Visual Styles » dans la partie Platform SDK de MSDN Library à le [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library/).  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> classe pour implémenter un contrôle personnalisé qui simule certaines commandes de l’interface utilisateur de base d’une fenêtre, y compris en faisant glisser avec la barre de titre, la redimensionner avec la poignée de redimensionnement et la fermeture. Cet exemple utilise plusieurs <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> objets qui représentent des composants standard d’une fenêtre, y compris les éléments exposés par le <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.Caption>, <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.CloseButton>, et <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Status.Gripper> classes.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />
    <altmember cref="T:System.Windows.Forms.VisualStyles.VisualStyleInformation" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStyleRenderer (System.Windows.Forms.VisualStyles.VisualStyleElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.VisualStyles.VisualStyleElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.#ctor(System.Windows.Forms.VisualStyles.VisualStyleElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (element As VisualStyleElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStyleRenderer(System::Windows::Forms::VisualStyles::VisualStyleElement ^ element);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.VisualStyles.VisualStyleRenderer : System.Windows.Forms.VisualStyles.VisualStyleElement -&gt; System.Windows.Forms.VisualStyles.VisualStyleRenderer" Usage="new System.Windows.Forms.VisualStyles.VisualStyleRenderer element" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Forms.VisualStyles.VisualStyleElement" />
      </Parameters>
      <Docs>
        <param name="element"><see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> que ce <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> représentera.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> avec le <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> donné.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur utilise le <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.ClassName%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Part%2A?displayProperty=nameWithType>, et <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.State%2A?displayProperty=nameWithType> propriétés de la `element` paramètre pour initialiser le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A>, <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A>, et <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> propriétés.  
  
 Avant d’utiliser ce constructeur, vous devez appeler la `static` <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> méthode pour vérifier que le style visuel actuel fournit une définition pour l’élément spécifié par le `element` paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.%23ctor%28System.Windows.Forms.VisualStyles.VisualStyleElement%29> constructeur pour créer un <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>. Cet exemple de code fait partie d’un exemple de code plus grande fourni pour le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> vue d’ensemble de la classe.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#40)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le système d'exploitation ne prend pas en charge les styles visuels.  
  
- ou - 
Les styles visuels sont désactivés par l'utilisateur dans le système d'exploitation.  
  
- ou - 
Les styles visuels ne sont pas appliqués à la zone client des fenêtres d'application.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="element" /> n'est pas défini par le style visuel en cours.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStyleRenderer (string className, int part, int state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string className, int32 part, int32 state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (className As String, part As Integer, state As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStyleRenderer(System::String ^ className, int part, int state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.VisualStyles.VisualStyleRenderer : string * int * int -&gt; System.Windows.Forms.VisualStyles.VisualStyleRenderer" Usage="new System.Windows.Forms.VisualStyles.VisualStyleRenderer (className, part, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="part" Type="System.Int32" />
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="className">Nom de classe de l'élément que ce <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> représentera.</param>
        <param name="part">Partie de l'élément que ce <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> représentera.</param>
        <param name="state">État de l'élément que ce <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> représentera.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> à l'aide des valeurs de classe, de partie et d'état données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur utilise le `className`, `part`, et `state` paramètres pour initialiser le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A>, <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A>, et <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> propriétés.  
  
 Avant d’utiliser ce constructeur, vous devez appeler la `static` <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> méthode pour vérifier que le style visuel actuel fournit une définition pour l’élément spécifié par le `className`, `part`, et `state` paramètres.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le système d'exploitation ne prend pas en charge les styles visuels.  
  
- ou - 
Les styles visuels sont désactivés par l'utilisateur dans le système d'exploitation.  
  
- ou - 
Les styles visuels ne sont pas appliqués à la zone client des fenêtres d'application.</exception>
        <exception cref="T:System.ArgumentException">La combinaison de <paramref name="className" />, <paramref name="part" /> et <paramref name="state" /> n'est pas définie par le style visuel en cours.</exception>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public string Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Class" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Class { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Class : string" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de classe de l'élément de style visuel en cours.</summary>
        <value>Chaîne qui identifie la classe de l'élément de style visuel en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété identifie un groupe de contrôles connexes ou des éléments d’interface (UI) utilisateur. Pour plus d’informations sur la classe, partie et l’état d’un élément de style visuel, consultez la <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBackground">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dessine l'image d'arrière-plan de l'élément de style visuel en cours.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground (dc As IDeviceContext, bounds As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; unit" Usage="visualStyleRenderer.DrawBackground (dc, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> utilisé pour dessiner l'image d'arrière-plan.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> au sein duquel l'image d'arrière-plan est dessinée.</param>
        <summary>Dessine l'image d'arrière-plan de l'élément de style visuel en cours dans le rectangle englobant spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode dessine l’arrière-plan de l’élément de style visuel actuel spécifié par le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A>, <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A>, et <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> propriétés.  
  
 Si le <xref:System.Drawing.Rectangle.Width%2A> ou <xref:System.Drawing.Rectangle.Height%2A> du rectangle spécifié par le `bounds` paramètre est inférieur à 0, le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%2A> méthode retourne sans dessiner l’arrière-plan.  
  
 L’arrière-plan d’un élément de style visuel peut être un fichier bitmap ou une bordure rempli. Pour déterminer le type d’arrière-plan, appelez le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> méthode avec une valeur d’argument <xref:System.Windows.Forms.VisualStyles.EnumProperty.BackgroundType?displayProperty=nameWithType>. Pour déterminer si l’arrière-plan de l’élément est les limites spécifiées à l’échelle, appelez le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> méthode avec une valeur d’argument <xref:System.Windows.Forms.VisualStyles.EnumProperty.SizingType?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%28System.Drawing.IDeviceContext%2CSystem.Drawing.Rectangle%29> méthode pour dessiner un <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> au sein d’un contrôle personnalisé <xref:System.Windows.Forms.Control.OnPaint%2A> (méthode). Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> vue d’ensemble de la classe.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#20)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Drawing.Rectangle clipRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Rectangle clipRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground (dc As IDeviceContext, bounds As Rectangle, clipRectangle As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Drawing::Rectangle clipRectangle);" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Drawing.Rectangle -&gt; unit" Usage="visualStyleRenderer.DrawBackground (dc, bounds, clipRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="clipRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> utilisé pour dessiner l'image d'arrière-plan.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> au sein duquel l'image d'arrière-plan est dessinée.</param>
        <param name="clipRectangle"><see cref="T:System.Drawing.Rectangle" /> qui définit un rectangle de découpage pour l'opération de dessin.</param>
        <summary>Dessine l'image d'arrière-plan de l'élément de style visuel en cours au sein du rectangle englobant spécifié et découpée selon le rectangle de découpage spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode dessine l’arrière-plan de l’élément de style visuel actuel spécifié par le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A>, <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A>, et <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State%2A> propriétés. L’arrière-plan est découpée selon la zone spécifiée par la `clipRectangle` paramètre.  
  
 Si le <xref:System.Drawing.Rectangle.Width%2A> ou <xref:System.Drawing.Rectangle.Height%2A> du rectangle spécifié par un le `bounds` ou `clipRectangle` paramètres est inférieur à 0, le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground%2A> méthode retourne sans dessiner l’arrière-plan.  
  
 L’arrière-plan d’un élément de style visuel peut être un fichier bitmap ou une bordure rempli. Pour déterminer le type d’arrière-plan, appelez le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> méthode avec une valeur d’argument <xref:System.Windows.Forms.VisualStyles.EnumProperty.BackgroundType?displayProperty=nameWithType>. Pour déterminer si l’arrière-plan de l’élément est les limites spécifiées à l’échelle, appelez le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue%2A> méthode avec une valeur d’argument <xref:System.Windows.Forms.VisualStyles.EnumProperty.SizingType?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawEdge">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle DrawEdge (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.Edges edges, System.Windows.Forms.VisualStyles.EdgeStyle style, System.Windows.Forms.VisualStyles.EdgeEffects effects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle DrawEdge(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.VisualStyles.Edges edges, valuetype System.Windows.Forms.VisualStyles.EdgeStyle style, valuetype System.Windows.Forms.VisualStyles.EdgeEffects effects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawEdge(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.Edges,System.Windows.Forms.VisualStyles.EdgeStyle,System.Windows.Forms.VisualStyles.EdgeEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle DrawEdge(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Windows::Forms::VisualStyles::Edges edges, System::Windows::Forms::VisualStyles::EdgeStyle style, System::Windows::Forms::VisualStyles::EdgeEffects effects);" />
      <MemberSignature Language="F#" Value="member this.DrawEdge : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Windows.Forms.VisualStyles.Edges * System.Windows.Forms.VisualStyles.EdgeStyle * System.Windows.Forms.VisualStyles.EdgeEffects -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.DrawEdge (dc, bounds, edges, style, effects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="edges" Type="System.Windows.Forms.VisualStyles.Edges" />
        <Parameter Name="style" Type="System.Windows.Forms.VisualStyles.EdgeStyle" />
        <Parameter Name="effects" Type="System.Windows.Forms.VisualStyles.EdgeEffects" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> utilisé pour dessiner les bords.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> dont les limites définissent les bords à dessiner.</param>
        <param name="edges">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.VisualStyles.Edges" />.</param>
        <param name="style">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.VisualStyles.EdgeStyle" />.</param>
        <param name="effects">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.VisualStyles.EdgeEffects" />.</param>
        <summary>Dessine un ou plusieurs bords du rectangle englobant spécifié.</summary>
        <returns><see cref="T:System.Drawing.Rectangle" /> qui représente l'intérieur du paramètre <paramref name="bounds" />, moins les bords qui ont été dessinés.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawImage">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dessine l'image dans le rectangle englobant spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Image -&gt; unit" Usage="visualStyleRenderer.DrawImage (g, bounds, image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> utilisé pour dessiner l'image.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> au sein duquel l'image est dessinée.</param>
        <param name="image"><see cref="T:System.Drawing.Image" /> à dessiner.</param>
        <summary>Dessine l'image dans les limites spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le style visuel applique l’un des effets spécifié par le <xref:System.Windows.Forms.VisualStyles.IconEffect?displayProperty=nameWithType> valeurs à l’élément actuel, cette méthode seront applique l’effet à l’image dessinée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" /> ou <paramref name="image" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.ImageList imageList, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.ImageList imageList, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ImageList,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::ImageList ^ imageList, int imageIndex);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.ImageList * int -&gt; unit" Usage="visualStyleRenderer.DrawImage (g, bounds, imageList, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="imageList" Type="System.Windows.Forms.ImageList" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> utilisé pour dessiner l'image.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> au sein duquel l'image est dessinée.</param>
        <param name="imageList"><see cref="T:System.Windows.Forms.ImageList" /> qui contient le <see cref="T:System.Drawing.Image" /> à dessiner.</param>
        <param name="imageIndex">Index du <see cref="T:System.Drawing.Image" /> dans l'objet <paramref name="imageList" /> à dessiner.</param>
        <summary>Dessine l'image à partir du <see cref="T:System.Windows.Forms.ImageList" /> dans les limites spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le style visuel applique l’un des effets spécifié par le <xref:System.Windows.Forms.VisualStyles.IconEffect?displayProperty=nameWithType> valeurs à l’élément actuel, cette méthode seront applique l’effet à l’image dessinée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" /> ou <paramref name="image" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="imageIndex" /> est inférieur à 0, ou supérieur ou égal au nombre d'images contenues dans <paramref name="imageList" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawParentBackground">
      <MemberSignature Language="C#" Value="public void DrawParentBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Windows.Forms.Control childControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawParentBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.Control childControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawParentBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawParentBackground (dc As IDeviceContext, bounds As Rectangle, childControl As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawParentBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Windows::Forms::Control ^ childControl);" />
      <MemberSignature Language="F#" Value="member this.DrawParentBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Windows.Forms.Control -&gt; unit" Usage="visualStyleRenderer.DrawParentBackground (dc, bounds, childControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="childControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> utilisé pour dessiner l'arrière-plan du parent de <paramref name="childControl" />. Cet objet appartient en général au contrôle enfant.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> dans lequel dessiner l'arrière-plan du contrôle parent. Ce rectangle doit se trouver à l’intérieur des limites du contrôle enfant.</param>
        <param name="childControl">Le contrôle dont l'arrière-plan du parent sera dessiné.</param>
        <summary>Dessine l’arrière-plan du parent d’un contrôle dans la zone spécifiée.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dessine le texte dans les limites spécifiées.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (dc As IDeviceContext, bounds As Rectangle, textToDraw As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string -&gt; unit" Usage="visualStyleRenderer.DrawText (dc, bounds, textToDraw)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> utilisé pour le dessiner le texte.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> dans lequel dessiner le texte.</param>
        <param name="textToDraw">Texte à dessiner.</param>
        <summary>Dessine le texte dans les limites spécifiées à l'aide de la mise en forme par défaut.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (dc As IDeviceContext, bounds As Rectangle, textToDraw As String, drawDisabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw, bool drawDisabled);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string * bool -&gt; unit" Usage="visualStyleRenderer.DrawText (dc, bounds, textToDraw, drawDisabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="drawDisabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> utilisé pour le dessiner le texte.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> dans lequel dessiner le texte.</param>
        <param name="textToDraw">Texte à dessiner.</param>
        <param name="drawDisabled"><see langword="true" /> pour dessiner le texte grisé ; sinon, <see langword="false" />.</param>
        <summary>Dessine le texte dans les limites spécifiées avec l'option d'affichage du texte désactivé.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw, bool drawDisabled, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Boolean,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (dc As IDeviceContext, bounds As Rectangle, textToDraw As String, drawDisabled As Boolean, flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw, bool drawDisabled, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string * bool * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="visualStyleRenderer.DrawText (dc, bounds, textToDraw, drawDisabled, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="drawDisabled" Type="System.Boolean" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> utilisé pour le dessiner le texte.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> dans lequel dessiner le texte.</param>
        <param name="textToDraw">Texte à dessiner.</param>
        <param name="drawDisabled"><see langword="true" /> pour dessiner le texte grisé ; sinon, <see langword="false" />.</param>
        <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Dessine le texte dans le rectangle englobant spécifié avec l'option d'affichage du texte désactivé et d'application d'une autre mise en forme de texte.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundContentRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBackgroundContentRectangle (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBackgroundContentRectangle(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundContentRectangle(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBackgroundContentRectangle (dc As IDeviceContext, bounds As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBackgroundContentRectangle(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.GetBackgroundContentRectangle : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetBackgroundContentRectangle (dc, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> que cette opération va utiliser.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> qui contient la totalité de la zone d'arrière-plan de l'élément de style visuel en cours.</param>
        <summary>Renvoie la zone de contenu pour l'arrière-plan de l'élément de style visuel en cours.</summary>
        <returns><see cref="T:System.Drawing.Rectangle" /> qui contient la zone de contenu pour l'arrière-plan de l'élément de style visuel en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un style visuel peut définir une zone de contenu au sein de chaque image d’arrière-plan. C’est la zone dans laquelle le contenu telles que du texte et doivent être placées sans substituer les bordures d’arrière-plan. Cette méthode utilise la zone d’arrière-plan donnée pour calculer la zone de contenu de l’élément de style visuel actuel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundExtent">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBackgroundExtent (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle contentBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBackgroundExtent(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle contentBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundExtent(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBackgroundExtent (dc As IDeviceContext, contentBounds As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBackgroundExtent(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle contentBounds);" />
      <MemberSignature Language="F#" Value="member this.GetBackgroundExtent : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetBackgroundExtent (dc, contentBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="contentBounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> que cette opération va utiliser.</param>
        <param name="contentBounds"><see cref="T:System.Drawing.Rectangle" /> qui contient la zone de contenu de l'élément de style visuel en cours.</param>
        <summary>Retourne la totalité de la zone d'arrière-plan pour l'élément de style visuel en cours.</summary>
        <returns><see cref="T:System.Drawing.Rectangle" /> qui contient la totalité de la zone d'arrière-plan de l'élément de style visuel en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un style visuel peut définir une zone de contenu au sein de chaque image d’arrière-plan. C’est la zone dans laquelle le contenu telles que du texte et doivent être placées sans substituer les bordures d’arrière-plan. Cette méthode utilise la zone de contenu donnée pour calculer la zone d’ensemble de l’arrière-plan de l’élément de style visuel actuel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundRegion">
      <MemberSignature Language="C#" Value="public System.Drawing.Region GetBackgroundRegion (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Region GetBackgroundRegion(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundRegion(System.Drawing.IDeviceContext,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBackgroundRegion (dc As IDeviceContext, bounds As Rectangle) As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Region ^ GetBackgroundRegion(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.GetBackgroundRegion : System.Drawing.IDeviceContext * System.Drawing.Rectangle -&gt; System.Drawing.Region" Usage="visualStyleRenderer.GetBackgroundRegion (dc, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> que cette opération va utiliser.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> qui contient la totalité de la zone d'arrière-plan de l'élément de style visuel en cours.</param>
        <summary>Renvoie la région de l'arrière-plan de l'élément de style visuel en cours.</summary>
        <returns><see cref="T:System.Drawing.Region" /> qui contient l'arrière-plan de l'élément de style visuel en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode peut être utilisée pour obtenir le <xref:System.Drawing.Region> d’un élément de style visuel qui comprend les éléments partiellement transparents ou à contrôle alpha dans son arrière-plan.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundRegion%2A> méthode dans un contrôle personnalisé. Cet exemple utilise <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundRegion%2A> pour obtenir le <xref:System.Drawing.Region> de l’élément de barre de titre de fenêtre retourné par la <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.Caption.Active%2A?displayProperty=nameWithType> propriété. Cela <xref:System.Drawing.Region> est utilisé pour définir le <xref:System.Windows.Forms.Control.Region%2A?displayProperty=nameWithType> propriété du contrôle, afin que la barre de titre de fenêtre s’affiche avec les angles arrondis définis par le style visuel Windows XP standard. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> vue d’ensemble de la classe.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#30)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public bool GetBoolean (System.Windows.Forms.VisualStyles.BooleanProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetBoolean(valuetype System.Windows.Forms.VisualStyles.BooleanProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBoolean(System.Windows.Forms.VisualStyles.BooleanProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoolean (prop As BooleanProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetBoolean(System::Windows::Forms::VisualStyles::BooleanProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetBoolean : System.Windows.Forms.VisualStyles.BooleanProperty -&gt; bool" Usage="visualStyleRenderer.GetBoolean prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.BooleanProperty" />
      </Parameters>
      <Docs>
        <param name="prop">L'une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.BooleanProperty" /> qui spécifie la valeur de propriété à récupérer pour l'élément de style visuel en cours.</param>
        <summary>Renvoie la valeur de la propriété Boolean spécifiée pour l'élément de style visuel en cours.</summary>
        <returns><see langword="true" /> si la propriété spécifiée par le paramètre <paramref name="prop" /> est <see langword="true" /> pour l'élément de style visuel en cours ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les styles visuels utilisent un ensemble de valeurs booléennes pour décrire certaines propriétés des éléments définis par un style. Ces propriétés sont encapsulées par la <xref:System.Windows.Forms.VisualStyles.BooleanProperty> valeurs.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.VisualStyles.BooleanProperty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetColor (System.Windows.Forms.VisualStyles.ColorProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetColor(valuetype System.Windows.Forms.VisualStyles.ColorProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetColor(System.Windows.Forms.VisualStyles.ColorProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColor (prop As ColorProperty) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Color GetColor(System::Windows::Forms::VisualStyles::ColorProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetColor : System.Windows.Forms.VisualStyles.ColorProperty -&gt; System.Drawing.Color" Usage="visualStyleRenderer.GetColor prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.ColorProperty" />
      </Parameters>
      <Docs>
        <param name="prop">L'une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.ColorProperty" /> qui spécifie la valeur de propriété à récupérer pour l'élément de style visuel en cours.</param>
        <summary>Renvoie la valeur de la propriété de couleur spécifiée pour l'élément de style visuel en cours.</summary>
        <returns><see cref="T:System.Drawing.Color" /> qui contient la valeur de la propriété spécifiée par le paramètre <paramref name="prop" /> de l'élément de style visuel en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les styles visuels utilisent un ensemble de valeurs de couleur pour décrire certaines propriétés des éléments définis par un style. Ces propriétés sont encapsulées par la <xref:System.Windows.Forms.VisualStyles.ColorProperty> valeurs.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.VisualStyles.ColorProperty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumValue">
      <MemberSignature Language="C#" Value="public int GetEnumValue (System.Windows.Forms.VisualStyles.EnumProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEnumValue(valuetype System.Windows.Forms.VisualStyles.EnumProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue(System.Windows.Forms.VisualStyles.EnumProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumValue (prop As EnumProperty) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEnumValue(System::Windows::Forms::VisualStyles::EnumProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetEnumValue : System.Windows.Forms.VisualStyles.EnumProperty -&gt; int" Usage="visualStyleRenderer.GetEnumValue prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.EnumProperty" />
      </Parameters>
      <Docs>
        <param name="prop">L'une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.EnumProperty" /> qui spécifie la valeur de propriété à récupérer pour l'élément de style visuel en cours.</param>
        <summary>Renvoie la valeur de la propriété de type énuméré pour l'élément de style visuel en cours.</summary>
        <returns>Valeur entière de la propriété spécifiée par le paramètre <paramref name="prop" /> de l'élément de style visuel en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les styles visuels utilisent un ensemble de types énumérés pour décrire certaines propriétés des éléments définis par un style. Ces types énumérés sont encapsulées par la <xref:System.Windows.Forms.VisualStyles.EnumProperty> valeurs.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.VisualStyles.EnumProperty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFilename">
      <MemberSignature Language="C#" Value="public string GetFilename (System.Windows.Forms.VisualStyles.FilenameProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetFilename(valuetype System.Windows.Forms.VisualStyles.FilenameProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetFilename(System.Windows.Forms.VisualStyles.FilenameProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFilename (prop As FilenameProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetFilename(System::Windows::Forms::VisualStyles::FilenameProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetFilename : System.Windows.Forms.VisualStyles.FilenameProperty -&gt; string" Usage="visualStyleRenderer.GetFilename prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.FilenameProperty" />
      </Parameters>
      <Docs>
        <param name="prop">L'une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.FilenameProperty" /> qui spécifie la valeur de propriété à récupérer pour l'élément de style visuel en cours.</param>
        <summary>Renvoie la valeur de la propriété de nom de fichier spécifiée pour l'élément de style visuel en cours.</summary>
        <returns><see cref="T:System.String" /> qui contient la valeur de la propriété spécifiée par le paramètre <paramref name="prop" /> de l'élément de style visuel en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Styles visuels peuvent spécifier les noms des fichiers image qui sont utilisés pour dessiner un élément particulier dans différentes tailles et résolutions. Ces noms de fichiers sont encapsulées par la <xref:System.Windows.Forms.VisualStyles.FilenameProperty> valeurs.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.VisualStyles.FilenameProperty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font GetFont (System.Drawing.IDeviceContext dc, System.Windows.Forms.VisualStyles.FontProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Font GetFont(class System.Drawing.IDeviceContext dc, valuetype System.Windows.Forms.VisualStyles.FontProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetFont(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.FontProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFont (dc As IDeviceContext, prop As FontProperty) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Font ^ GetFont(System::Drawing::IDeviceContext ^ dc, System::Windows::Forms::VisualStyles::FontProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetFont : System.Drawing.IDeviceContext * System.Windows.Forms.VisualStyles.FontProperty -&gt; System.Drawing.Font" Usage="visualStyleRenderer.GetFont (dc, prop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.FontProperty" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> que cette opération va utiliser.</param>
        <param name="prop">L'une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.FontProperty" /> qui spécifie la valeur de propriété à récupérer pour l'élément de style visuel en cours.</param>
        <summary>Renvoie la valeur de la propriété de police spécifiée pour l'élément de style visuel en cours.</summary>
        <returns><see cref="T:System.Drawing.Font" /> qui contient la valeur de la propriété spécifiée par le paramètre <paramref name="prop" /> de l'élément de style visuel en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les styles visuels utilisent un ensemble de valeurs de police pour décrire certaines propriétés des éléments définis par un style. Ces propriétés sont encapsulées par la <xref:System.Windows.Forms.VisualStyles.FontProperty> valeurs.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.VisualStyles.FontProperty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInteger">
      <MemberSignature Language="C#" Value="public int GetInteger (System.Windows.Forms.VisualStyles.IntegerProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetInteger(valuetype System.Windows.Forms.VisualStyles.IntegerProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetInteger(System.Windows.Forms.VisualStyles.IntegerProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInteger (prop As IntegerProperty) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetInteger(System::Windows::Forms::VisualStyles::IntegerProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetInteger : System.Windows.Forms.VisualStyles.IntegerProperty -&gt; int" Usage="visualStyleRenderer.GetInteger prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.IntegerProperty" />
      </Parameters>
      <Docs>
        <param name="prop">L'une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.IntegerProperty" /> qui spécifie la valeur de propriété à récupérer pour l'élément de style visuel en cours.</param>
        <summary>Renvoie la valeur de la propriété entière spécifiée pour l'élément de style visuel en cours.</summary>
        <returns>Valeur entière de la propriété spécifiée par le paramètre <paramref name="prop" /> de l'élément de style visuel en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les styles visuels utilisent un ensemble de valeurs entières pour décrire certaines propriétés des éléments définis par un style. Ces propriétés sont encapsulées par la <xref:System.Windows.Forms.VisualStyles.IntegerProperty> valeurs.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.VisualStyles.IntegerProperty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMargins">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding GetMargins (System.Drawing.IDeviceContext dc, System.Windows.Forms.VisualStyles.MarginProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.Padding GetMargins(class System.Drawing.IDeviceContext dc, valuetype System.Windows.Forms.VisualStyles.MarginProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetMargins(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.MarginProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMargins (dc As IDeviceContext, prop As MarginProperty) As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Padding GetMargins(System::Drawing::IDeviceContext ^ dc, System::Windows::Forms::VisualStyles::MarginProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetMargins : System.Drawing.IDeviceContext * System.Windows.Forms.VisualStyles.MarginProperty -&gt; System.Windows.Forms.Padding" Usage="visualStyleRenderer.GetMargins (dc, prop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.MarginProperty" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> que cette opération va utiliser.</param>
        <param name="prop">L'une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.MarginProperty" /> qui spécifie la valeur de propriété à récupérer pour l'élément de style visuel en cours.</param>
        <summary>Renvoie la valeur de la propriété des marges spécifiée pour l'élément de style visuel en cours.</summary>
        <returns><see cref="T:System.Windows.Forms.Padding" /> qui contient la valeur de la propriété spécifiée par le paramètre <paramref name="prop" /> de l'élément de style visuel en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les styles visuels utilisent un ensemble de valeurs de marge pour décrire certaines propriétés des éléments définis par un style. Ces propriétés sont encapsulées par la <xref:System.Windows.Forms.VisualStyles.MarginProperty> valeurs.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.VisualStyles.MarginProperty" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPartSize">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Renvoie la valeur de la propriété de taille spécifiée de la partie de style visuel en cours.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPartSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size GetPartSize (System.Drawing.IDeviceContext dc, System.Windows.Forms.VisualStyles.ThemeSizeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size GetPartSize(class System.Drawing.IDeviceContext dc, valuetype System.Windows.Forms.VisualStyles.ThemeSizeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPartSize(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.ThemeSizeType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPartSize (dc As IDeviceContext, type As ThemeSizeType) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size GetPartSize(System::Drawing::IDeviceContext ^ dc, System::Windows::Forms::VisualStyles::ThemeSizeType type);" />
      <MemberSignature Language="F#" Value="member this.GetPartSize : System.Drawing.IDeviceContext * System.Windows.Forms.VisualStyles.ThemeSizeType -&gt; System.Drawing.Size" Usage="visualStyleRenderer.GetPartSize (dc, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="type" Type="System.Windows.Forms.VisualStyles.ThemeSizeType" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> que cette opération va utiliser.</param>
        <param name="type">L'une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> qui spécifie la valeur de taille à récupérer pour la partie.</param>
        <summary>Renvoie la valeur de la propriété de taille spécifiée de la partie de style visuel en cours.</summary>
        <returns><see cref="T:System.Drawing.Size" /> qui contient la taille spécifiée par le paramètre <paramref name="type" /> de la partie de style visuel en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En règle générale, uniquement le <xref:System.Windows.Forms.VisualStyles.ThemeSizeType.True> et <xref:System.Windows.Forms.VisualStyles.ThemeSizeType.Minimum> valeurs doivent être utilisées pour le `type` paramètre de cette méthode.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPartSize%28System.Drawing.IDeviceContext%2CSystem.Windows.Forms.VisualStyles.ThemeSizeType%29> méthode dans un contrôle personnalisé pour obtenir les tailles d’une barre de titre de fenêtre, **fermer** bouton, des bordures et spécifié par le style visuel de poignée de redimensionnement. Ces tailles sont utilisées pour calculer les tailles de la <xref:System.Drawing.Rectangle> objets utilisés pour dessiner le <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> objets qui représentent les éléments de la fenêtre. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> vue d’ensemble de la classe.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size GetPartSize (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.ThemeSizeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size GetPartSize(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.VisualStyles.ThemeSizeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPartSize(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.ThemeSizeType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPartSize (dc As IDeviceContext, bounds As Rectangle, type As ThemeSizeType) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size GetPartSize(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::Windows::Forms::VisualStyles::ThemeSizeType type);" />
      <MemberSignature Language="F#" Value="member this.GetPartSize : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Windows.Forms.VisualStyles.ThemeSizeType -&gt; System.Drawing.Size" Usage="visualStyleRenderer.GetPartSize (dc, bounds, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="type" Type="System.Windows.Forms.VisualStyles.ThemeSizeType" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> que cette opération va utiliser.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> qui contient la zone dans laquelle la partie est dessinée.</param>
        <param name="type">L'une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> qui spécifie la valeur de taille à récupérer pour la partie.</param>
        <summary>Renvoie la valeur de la propriété de taille spécifiée de la partie de style visuel en cours à l'aide des limites de dessin spécifiées.</summary>
        <returns><see cref="T:System.Drawing.Size" /> qui contient la taille spécifiée par le paramètre <paramref name="type" /> de la partie de style visuel en cours.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.Point GetPoint (System.Windows.Forms.VisualStyles.PointProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point GetPoint(valuetype System.Windows.Forms.VisualStyles.PointProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPoint(System.Windows.Forms.VisualStyles.PointProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPoint (prop As PointProperty) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point GetPoint(System::Windows::Forms::VisualStyles::PointProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetPoint : System.Windows.Forms.VisualStyles.PointProperty -&gt; System.Drawing.Point" Usage="visualStyleRenderer.GetPoint prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.PointProperty" />
      </Parameters>
      <Docs>
        <param name="prop">L'une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.PointProperty" /> qui spécifie la valeur de propriété à récupérer pour l'élément de style visuel en cours.</param>
        <summary>Renvoie la valeur de la propriété point spécifiée pour l'élément de style visuel en cours.</summary>
        <returns><see cref="T:System.Drawing.Point" /> qui contient la valeur de la propriété spécifiée par le paramètre <paramref name="prop" /> de l'élément de style visuel en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les styles visuels utilisent un ensemble de valeurs de point pour décrire certaines propriétés des éléments définis par un style. Ces propriétés sont encapsulées par la <xref:System.Windows.Forms.VisualStyles.PointProperty> valeurs.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPoint%2A> méthode dans un contrôle personnalisé pour obtenir le décalage de la fenêtre **fermer** bouton par rapport à l’angle supérieur droit de la barre de titre. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> vue d’ensemble de la classe.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.VisualStyles.PointProperty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (System.Windows.Forms.VisualStyles.StringProperty prop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(valuetype System.Windows.Forms.VisualStyles.StringProperty prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetString(System.Windows.Forms.VisualStyles.StringProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (prop As StringProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(System::Windows::Forms::VisualStyles::StringProperty prop);" />
      <MemberSignature Language="F#" Value="member this.GetString : System.Windows.Forms.VisualStyles.StringProperty -&gt; string" Usage="visualStyleRenderer.GetString prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Windows.Forms.VisualStyles.StringProperty" />
      </Parameters>
      <Docs>
        <param name="prop">L'une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.StringProperty" /> qui spécifie la valeur de propriété à récupérer pour l'élément de style visuel en cours.</param>
        <summary>Renvoie la valeur de la propriété de chaîne spécifiée pour l'élément de style visuel en cours.</summary>
        <returns><see cref="T:System.String" /> qui contient la valeur de la propriété spécifiée par le paramètre <paramref name="prop" /> de l'élément de style visuel en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les styles visuels utilisent un ensemble de valeurs de chaîne pour décrire certaines propriétés des éléments définis par un style. Ces propriétés sont encapsulées par la <xref:System.Windows.Forms.VisualStyles.StringProperty> valeurs.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="prop" /> ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.VisualStyles.StringProperty" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextExtent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Renvoie la taille et l'emplacement de la chaîne spécifiée lorsqu'elle est dessinée avec la police de l'élément de style visuel en cours.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextExtent">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetTextExtent (System.Drawing.IDeviceContext dc, string textToDraw, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetTextExtent(class System.Drawing.IDeviceContext dc, string textToDraw, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextExtent(System.Drawing.IDeviceContext,System.String,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextExtent (dc As IDeviceContext, textToDraw As String, flags As TextFormatFlags) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetTextExtent(System::Drawing::IDeviceContext ^ dc, System::String ^ textToDraw, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.GetTextExtent : System.Drawing.IDeviceContext * string * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetTextExtent (dc, textToDraw, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> que cette opération va utiliser.</param>
        <param name="textToDraw">Chaîne à mesurer.</param>
        <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Renvoie la taille et l'emplacement de la chaîne spécifiée lorsqu'elle est dessinée avec la police de l'élément de style visuel en cours.</summary>
        <returns><see cref="T:System.Drawing.Rectangle" /> qui contient la zone requise pour contenir le texte affiché.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextExtent">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetTextExtent (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle bounds, string textToDraw, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetTextExtent(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle bounds, string textToDraw, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextExtent(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextExtent (dc As IDeviceContext, bounds As Rectangle, textToDraw As String, flags As TextFormatFlags) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetTextExtent(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle bounds, System::String ^ textToDraw, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.GetTextExtent : System.Drawing.IDeviceContext * System.Drawing.Rectangle * string * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Rectangle" Usage="visualStyleRenderer.GetTextExtent (dc, bounds, textToDraw, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="textToDraw" Type="System.String" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> que cette opération va utiliser.</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" /> utilisé pour contrôler le flux et le retour automatique du texte à la ligne.</param>
        <param name="textToDraw">Chaîne à mesurer.</param>
        <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Renvoie la taille et l'emplacement de la chaîne spécifiée lorsqu'elle est dessinée avec la police de l'élément de style visuel en cours au sein du rectangle englobant initial spécifié.</summary>
        <returns><see cref="T:System.Drawing.Rectangle" /> qui contient la zone requise pour contenir le texte affiché.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextMetrics">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.TextMetrics GetTextMetrics (System.Drawing.IDeviceContext dc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.TextMetrics GetTextMetrics(class System.Drawing.IDeviceContext dc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextMetrics(System.Drawing.IDeviceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextMetrics (dc As IDeviceContext) As TextMetrics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::TextMetrics GetTextMetrics(System::Drawing::IDeviceContext ^ dc);" />
      <MemberSignature Language="F#" Value="member this.GetTextMetrics : System.Drawing.IDeviceContext -&gt; System.Windows.Forms.VisualStyles.TextMetrics" Usage="visualStyleRenderer.GetTextMetrics dc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.TextMetrics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> que cette opération va utiliser.</param>
        <summary>Récupère des informations à propos de la police spécifiée par l'élément de style visuel en cours.</summary>
        <returns><see cref="T:System.Windows.Forms.VisualStyles.TextMetrics" /> qui fournit des informations sur la police spécifiée par l'élément de style visuel en cours.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reçoit un identificateur unique pour la classe courante des éléments de style visuel.</summary>
        <value><see cref="T:System.IntPtr" /> qui identifie un jeu de données définissant la classe d'éléments spécifiée par <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est utilisée en interne par le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> méthodes. Si la classe d’éléments spécifiée par le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A> propriété n’est pas définie par le style visuel actuel, puis cette propriété retourne <xref:System.IntPtr.Zero?displayProperty=nameWithType>.  
  
 Cette valeur de propriété est invalidée lorsque le style visuel du système d’exploitation change, ou quand l’utilisateur désactive les styles visuels. Si vous accédez directement à cette propriété, votre code doit interroger cette propriété pour obtenir un nouvel handle quand le <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged?displayProperty=nameWithType> événement est déclenché avec le <xref:Microsoft.Win32.UserPreferenceChangedEventArgs.Category%2A?displayProperty=nameWithType> valeur de propriété <xref:Microsoft.Win32.UserPreferenceCategory.VisualStyle?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le système d'exploitation ne prend pas en charge les styles visuels.  
  
- ou - 
Les styles visuels sont désactivés par l'utilisateur dans le système d'exploitation.  
  
- ou - 
Les styles visuels ne sont pas appliqués à la zone client des fenêtres d'application.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestBackground">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Détermine si un point est contenu à l'arrière-plan de l'élément de style visuel en cours.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle backgroundRectangle, System.Drawing.Point pt, System.Windows.Forms.VisualStyles.HitTestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle backgroundRectangle, valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.VisualStyles.HitTestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTestBackground (dc As IDeviceContext, backgroundRectangle As Rectangle, pt As Point, options As HitTestOptions) As HitTestCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::HitTestCode HitTestBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle backgroundRectangle, System::Drawing::Point pt, System::Windows::Forms::VisualStyles::HitTestOptions options);" />
      <MemberSignature Language="F#" Value="member this.HitTestBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * System.Drawing.Point * System.Windows.Forms.VisualStyles.HitTestOptions -&gt; System.Windows.Forms.VisualStyles.HitTestCode" Usage="visualStyleRenderer.HitTestBackground (dc, backgroundRectangle, pt, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.HitTestCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="backgroundRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="options" Type="System.Windows.Forms.VisualStyles.HitTestOptions" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> que cette opération va utiliser.</param>
        <param name="backgroundRectangle"><see cref="T:System.Drawing.Rectangle" /> qui contient l'arrière-plan de l'élément de style visuel en cours.</param>
        <param name="pt"><see cref="T:System.Drawing.Point" /> à tester.</param>
        <param name="options">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" />.</param>
        <summary>Renvoie un code de test d'atteinte qui indique si un point est contenu à l'arrière-plan de l'élément de style visuel en cours.</summary>
        <returns><see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" /> qui décrit où <paramref name="pt" /> se situe à l'arrière-plan de l'élément de style visuel en cours.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTestBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground (System.Drawing.Graphics g, System.Drawing.Rectangle backgroundRectangle, System.Drawing.Region region, System.Drawing.Point pt, System.Windows.Forms.VisualStyles.HitTestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle backgroundRectangle, class System.Drawing.Region region, valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.VisualStyles.HitTestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Region,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::HitTestCode HitTestBackground(System::Drawing::Graphics ^ g, System::Drawing::Rectangle backgroundRectangle, System::Drawing::Region ^ region, System::Drawing::Point pt, System::Windows::Forms::VisualStyles::HitTestOptions options);" />
      <MemberSignature Language="F#" Value="member this.HitTestBackground : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Region * System.Drawing.Point * System.Windows.Forms.VisualStyles.HitTestOptions -&gt; System.Windows.Forms.VisualStyles.HitTestCode" Usage="visualStyleRenderer.HitTestBackground (g, backgroundRectangle, region, pt, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.HitTestCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="backgroundRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="region" Type="System.Drawing.Region" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="options" Type="System.Windows.Forms.VisualStyles.HitTestOptions" />
      </Parameters>
      <Docs>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> que cette opération va utiliser.</param>
        <param name="backgroundRectangle"><see cref="T:System.Drawing.Rectangle" /> qui contient l'arrière-plan de l'élément de style visuel en cours.</param>
        <param name="region"><see cref="T:System.Drawing.Region" /> qui spécifie les limites de la zone de test d'atteinte à l'arrière-plan.</param>
        <param name="pt"><see cref="T:System.Drawing.Point" /> à tester.</param>
        <param name="options">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" />.</param>
        <summary>Renvoie un code de test d'atteinte qui indique si le point est contenu à l'arrière-plan de l'élément de style visuel en cours et dans les limites spécifiées.</summary>
        <returns><see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" /> qui décrit, le cas échéant, où <paramref name="pt" /> se situe à l'arrière-plan de l'élément de style visuel en cours.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTestBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground (System.Drawing.IDeviceContext dc, System.Drawing.Rectangle backgroundRectangle, IntPtr hRgn, System.Drawing.Point pt, System.Windows.Forms.VisualStyles.HitTestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.VisualStyles.HitTestCode HitTestBackground(class System.Drawing.IDeviceContext dc, valuetype System.Drawing.Rectangle backgroundRectangle, native int hRgn, valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.VisualStyles.HitTestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.IntPtr,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTestBackground (dc As IDeviceContext, backgroundRectangle As Rectangle, hRgn As IntPtr, pt As Point, options As HitTestOptions) As HitTestCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::VisualStyles::HitTestCode HitTestBackground(System::Drawing::IDeviceContext ^ dc, System::Drawing::Rectangle backgroundRectangle, IntPtr hRgn, System::Drawing::Point pt, System::Windows::Forms::VisualStyles::HitTestOptions options);" />
      <MemberSignature Language="F#" Value="member this.HitTestBackground : System.Drawing.IDeviceContext * System.Drawing.Rectangle * nativeint * System.Drawing.Point * System.Windows.Forms.VisualStyles.HitTestOptions -&gt; System.Windows.Forms.VisualStyles.HitTestCode" Usage="visualStyleRenderer.HitTestBackground (dc, backgroundRectangle, hRgn, pt, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.HitTestCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="backgroundRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="hRgn" Type="System.IntPtr" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="options" Type="System.Windows.Forms.VisualStyles.HitTestOptions" />
      </Parameters>
      <Docs>
        <param name="dc"><see cref="T:System.Drawing.IDeviceContext" /> que cette opération va utiliser.</param>
        <param name="backgroundRectangle"><see cref="T:System.Drawing.Rectangle" /> qui contient l'arrière-plan de l'élément de style visuel en cours.</param>
        <param name="hRgn">Handle Windows pour un <see cref="T:System.Drawing.Region" /> qui spécifie les limites de la zone de test d'atteinte au sein de l'arrière-plan.</param>
        <param name="pt"><see cref="T:System.Drawing.Point" /> à tester.</param>
        <param name="options">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" />.</param>
        <summary>Renvoie un code de test d'atteinte qui indique si le point est contenu à l'arrière-plan de l'élément de style visuel en cours et dans la région spécifiée.</summary>
        <returns><see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" /> qui décrit où <paramref name="pt" /> se situe à l'arrière-plan de l'élément de style visuel en cours.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundPartiallyTransparent">
      <MemberSignature Language="C#" Value="public bool IsBackgroundPartiallyTransparent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBackgroundPartiallyTransparent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsBackgroundPartiallyTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBackgroundPartiallyTransparent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBackgroundPartiallyTransparent();" />
      <MemberSignature Language="F#" Value="member this.IsBackgroundPartiallyTransparent : unit -&gt; bool" Usage="visualStyleRenderer.IsBackgroundPartiallyTransparent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique si l'arrière-plan de l'élément de style visuel en cours possède des parties translucides ou à contrôle alpha.</summary>
        <returns><see langword="true" /> si l'arrière-plan de l'élément de style visuel en cours possède des parties translucides ou à contrôle alpha ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsElementDefined">
      <MemberSignature Language="C#" Value="public static bool IsElementDefined (System.Windows.Forms.VisualStyles.VisualStyleElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsElementDefined(class System.Windows.Forms.VisualStyles.VisualStyleElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined(System.Windows.Forms.VisualStyles.VisualStyleElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsElementDefined (element As VisualStyleElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsElementDefined(System::Windows::Forms::VisualStyles::VisualStyleElement ^ element);" />
      <MemberSignature Language="F#" Value="static member IsElementDefined : System.Windows.Forms.VisualStyles.VisualStyleElement -&gt; bool" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Forms.VisualStyles.VisualStyleElement" />
      </Parameters>
      <Docs>
        <param name="element"><see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> dont la combinaison classe et partie sera vérifiée.</param>
        <summary>Détermine si l'élément de style visuel spécifié est défini par le style visuel en cours.</summary>
        <returns><see langword="true" /> si la combinaison des propriétés <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ClassName" /> et <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Part" /> de <paramref name="element" /> est définie ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode vérifie la valeur de la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> propriété en interne.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> méthode pour déterminer s’il faut initialiser un <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> à une donnée <xref:System.Windows.Forms.VisualStyles.VisualStyleElement>. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> vue d’ensemble de la classe.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#40)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le système d'exploitation ne prend pas en charge les styles visuels.  
  
- ou - 
Les styles visuels sont désactivés par l'utilisateur dans le système d'exploitation.  
  
- ou - 
Les styles visuels ne sont pas appliqués à la zone client des fenêtres d'application.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSupported : bool" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui spécifie si le système d'exploitation utilise les styles visuels pour dessiner les contrôles.</summary>
        <value><see langword="true" /> si le système d'exploitation prend en charge les styles visuels, que l'utilisateur les a activés et qu'ils sont appliqués à la zone client des fenêtres d'application ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant décrit comment vérifier individuellement chacune des trois conditions qui doivent exister pour le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> propriété à retourner `true`.  
  
|Condition|Comment déterminer séparément|  
|---------------|---------------------------------|  
|Le système d’exploitation prend en charge les styles visuels.|Vérifiez que le <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A> propriété de la <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> classe est `true`.|  
|L’utilisateur a activé des styles visuels dans le système d’exploitation.|Vérifiez que le <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A> propriété de la <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> classe est `true`.|  
|Les styles visuels sont utilisés pour dessiner la zone cliente des fenêtres d’application.|Vérifiez que le <xref:System.Windows.Forms.Application.VisualStyleState%2A> propriété de la <xref:System.Windows.Forms.Application> classe a la valeur <xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAreaEnabled?displayProperty=nameWithType> ou <xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAndNonClientAreasEnabled?displayProperty=nameWithType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastHResult">
      <MemberSignature Language="C#" Value="public int LastHResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastHResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.LastHResult" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastHResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastHResult { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastHResult : int" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.LastHResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le dernier code d'erreur retourné par les méthodes API des styles visuels natifs (UxTheme) encapsulées par la classe <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />.</summary>
        <value>Valeur qui spécifie le dernier code d'erreur retournée par les méthodes API des styles visuels natifs que cette classe encapsule.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété obtient la valeur HRESULT qui a été retournée par la dernière méthode API des styles visuels natifs appelée par un membre de la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> classe. Pour plus d’informations sur l’API des styles visuels natifs, consultez « À l’aide de Windows XP Visual Styles » dans la partie Platform SDK de MSDN Library à le [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library/).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Part">
      <MemberSignature Language="C#" Value="public int Part { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Part" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Part As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Part { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Part : int" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la partie de l'élément de style visuel en cours.</summary>
        <value>Valeur spécifiant la partie de l'élément de style visuel en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété identifie la spécialisation d’une classe particulière. Pour plus d’informations sur la classe, partie et l’état d’un élément de style visuel, consultez la <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParameters">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit l'élément de style visuel en cours de ce <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (System.Windows.Forms.VisualStyles.VisualStyleElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class System.Windows.Forms.VisualStyles.VisualStyleElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters(System.Windows.Forms.VisualStyles.VisualStyleElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (element As VisualStyleElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::Windows::Forms::VisualStyles::VisualStyleElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.SetParameters : System.Windows.Forms.VisualStyles.VisualStyleElement -&gt; unit" Usage="visualStyleRenderer.SetParameters element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Forms.VisualStyles.VisualStyleElement" />
      </Parameters>
      <Docs>
        <param name="element"><see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> qui spécifie les nouvelles valeurs des propriétés <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />, <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" /> et <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" />.</param>
        <summary>Définit ce <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> avec l'élément de style visuel représenté par le <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode vérifie la valeur de la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> propriété en interne. Avant d’appeler cette méthode, vous devez appeler la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> méthode pour vérifier que le style visuel actuel fournit une définition pour l’élément spécifié par le `element` paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters%28System.Windows.Forms.VisualStyles.VisualStyleElement%29> méthode pour définir un <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> vers un nouveau <xref:System.Windows.Forms.VisualStyles.VisualStyleElement>. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> vue d’ensemble de la classe.  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/cpp/form1.cpp#40)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleRenderer#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleRenderer/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="element" /> n'est pas défini par le style visuel en cours.</exception>
        <exception cref="T:System.InvalidOperationException">Le système d'exploitation ne prend pas en charge les styles visuels.  
  
- ou - 
Les styles visuels sont désactivés par l'utilisateur dans le système d'exploitation.  
  
- ou - 
Les styles visuels ne sont pas appliqués à la zone client des fenêtres d'application.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (string className, int part, int state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(string className, int32 part, int32 state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (className As String, part As Integer, state As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::String ^ className, int part, int state);" />
      <MemberSignature Language="F#" Value="member this.SetParameters : string * int * int -&gt; unit" Usage="visualStyleRenderer.SetParameters (className, part, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="part" Type="System.Int32" />
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="className">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />.</param>
        <param name="part">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" />.</param>
        <param name="state">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" />.</param>
        <summary>Définit ce <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> avec l'élément de style visuel représenté par les valeurs de classe, de partie et d'état spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode vérifie la valeur de la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported%2A> propriété en interne. Avant d’appeler cette méthode, vous devez appeler la <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined%2A> méthode pour vérifier que le style visuel actuel fournit une définition pour l’élément spécifié par le `className`, `part`, et `state` paramètres.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La combinaison de <paramref name="className" />, <paramref name="part" /> et <paramref name="state" /> n'est pas définie par le style visuel en cours.</exception>
        <exception cref="T:System.InvalidOperationException">Le système d'exploitation ne prend pas en charge les styles visuels.  
  
- ou - 
Les styles visuels sont désactivés par l'utilisateur dans le système d'exploitation.  
  
- ou - 
Les styles visuels ne sont pas appliqués à la zone client des fenêtres d'application.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public int State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int State { int get(); };" />
      <MemberSignature Language="F#" Value="member this.State : int" Usage="System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'état de l'élément de style visuel en cours.</summary>
        <value>Valeur identifiant l'état de l'élément de style visuel en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété identifie l’état visuel en cours de l’élément identifié par l’actuel <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class%2A> et <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part%2A> les valeurs de propriété. Pour plus d’informations sur la classe, partie et l’état d’un élément de style visuel, consultez la <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>