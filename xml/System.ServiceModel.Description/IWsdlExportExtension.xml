<Type Name="IWsdlExportExtension" FullName="System.ServiceModel.Description.IWsdlExportExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9bbc35369008c2910214deb8cef97563fd3fafa8" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34315044" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWsdlExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Définit un point de terminaison ou des comportements de contrat qui peuvent exporter des métadonnées personnalisés.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour modifier et étendre les extension WSDL (Web Services Description Language) exportées par les objets <xref:System.ServiceModel.Description.WsdlExporter>, implémentez l'interface <xref:System.ServiceModel.Description.IWsdlExportExtension> sur un point de terminaison, un contrat ou un comportement d'opération (objet qui implémente <xref:System.ServiceModel.Description.IContractBehavior>, <xref:System.ServiceModel.Description.IEndpointBehavior> ou <xref:System.ServiceModel.Description.IOperationBehavior>) et ajoutez le comportement à la propriété <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>, <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A>ou <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A>. De plus, vous pouvez implémenter <xref:System.ServiceModel.Description.IWsdlExportExtension> sur un <xref:System.ServiceModel.Channels.BindingElement>.  
  
> [!NOTE]
>  Les implémentations <xref:System.ServiceModel.Description.IWsdlExportExtension> ne sont jamais appelées si elles sont implémentées en tant que <xref:System.ServiceModel.Description.IServiceBehavior>.  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension> n’exporte pas les assertions de stratégie personnalisées bien que Windows Communication Foundation (WCF) exporte des assertions de stratégie de liaison personnalisée à l’élément approprié au sein de WSDL. Si vous souhaitez exporter des assertions de stratégie personnalisées, implémentez l'interface <xref:System.ServiceModel.Description.IPolicyExportExtension>.  
  
 Le processus de la publication des métadonnées commence en appelant <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=nameWithType> qui ensuite appelle <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=nameWithType> pour chaque point de terminaison.  
  
 Le point de terminaison est exporté en exportant en premier lieu son contrat. Lors de l'exportation d'un contrat, l'<xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType> appelle la méthode <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType> sur toutes les implémentations <xref:System.ServiceModel.Description.IWsdlExportExtension> du contrat et sur les comportements d'opération associés à ce contrat. Les opérations qui utilisent des actions génériques ne sont pas exportées dans les métadonnées ; par conséquent, les implémentations <xref:System.ServiceModel.Description.IWsdlExportExtension> sur les comportements d'opération associés à ces opérations ne sont pas exportées.  
  
 Après l'exportation du contrat, le port et la liaison sont exportés et les expressions de stratégie exportées sont jointes.  
  
 Les méthodes <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> et <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> fournissent toutes deux l'accès à l'<xref:System.ServiceModel.Description.WsdlExporter> afin que des implémentations <xref:System.ServiceModel.Description.IWsdlExportExtension> puissent signaler des erreurs récupérables et des avertissements via la propriété <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A>. Les objets de contexte passés aux deux méthodes fournissent des mappages appropriés entre des éléments WSDL exportés et des propriétés d'objets <xref:System.ServiceModel.Description.ContractDescription> et <xref:System.ServiceModel.Description.ServiceEndpoint>.  
  
 Si une implémentation <xref:System.ServiceModel.Description.IWsdlExportExtension> lève une exception au niveau de l'exportation, les métadonnées générées portent un état incohérent et l'objet <xref:System.ServiceModel.Description.WsdlExporter> doit dans ce cas être ignoré.  
  
> [!NOTE]
>  L'extension de l'exportation personnalisée doit s'exécuter après que le sérialiseur intégré a rempli la description du service.  
  
   
  
## Examples  
 L'exemple de code suivant illustre un <xref:System.ServiceModel.Description.IWsdlExportExtension> qui ajoute des attributs de documentation personnalisés au fichier WSDL sous forme d'annotations WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportContract">
      <MemberSignature Language="C#" Value="public void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <see cref="T:System.ServiceModel.Description.WsdlExporter" /> qui exporte les informations de contrat.</param>
        <param name="context">Fournit des mappages d'éléments WSDL à la description de contrat.</param>
        <summary>Écrit des éléments WSDM (Web Services Description Language) personnalisés dans le service WSDL généré pour un contrat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> est appelée lorsque le système d'exportation des métadonnées exporte le contrat. Seuls les comportements d'opération et de contrat qui implémentent <xref:System.ServiceModel.Description.IWsdlExportExtension> reçoivent l'appel <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>. Tous les comportements qui implémentent <xref:System.ServiceModel.Description.IWsdlExportExtension> obtiennent l'appel <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>.  
  
 Utilisez le paramètre `context` pour modifier l'élément WSDL à exporter. Consultez la section d'exemples.  
  
   
  
## Examples  
 L'exemple de code suivant illustre un <xref:System.ServiceModel.Description.IWsdlExportExtension> qui ajoute des attributs de documentation personnalisés au fichier WSDL sous forme d'annotations WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportEndpoint">
      <MemberSignature Language="C#" Value="public void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportEndpoint (exporter As WsdlExporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <see cref="T:System.ServiceModel.Description.WsdlExporter" /> qui exporte les informations sur le point de terminaison.</param>
        <param name="context">Fournit les mappages d'éléments WSDL exportés à la description de point de terminaison.</param>
        <summary>Écrit des éléments WSDM (Web Services Description Language) personnalisés dans le service WSDL généré pour un point de terminaison.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implémentez la méthode <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> afin de modifier l'élément WSDL exporté pour un point de terminaison. Cette méthode est appelée une fois que le contrat a été exporté par le <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>.  
  
   
  
## Examples  
 L'exemple de code suivant illustre un <xref:System.ServiceModel.Description.IWsdlExportExtension> qui ajoute des attributs de documentation personnalisés au fichier WSDL sous forme d'annotations WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>