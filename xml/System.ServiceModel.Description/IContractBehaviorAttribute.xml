<Type Name="IContractBehaviorAttribute" FullName="System.ServiceModel.Description.IContractBehaviorAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fb25c9bff84e2b2782cf8b483630323908c462b2" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37456650" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IContractBehaviorAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContractBehaviorAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IContractBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContractBehaviorAttribute" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContractBehaviorAttribute" />
  <TypeSignature Language="F#" Value="type IContractBehaviorAttribute = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Spécifie le contrat pour lequel un attribut qui implémente l'interface <see cref="T:System.ServiceModel.Description.IContractBehavior" /> est actif.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implémentez l'interface <xref:System.ServiceModel.Description.IContractBehaviorAttribute> sur un attribut qui est également un objet <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> pour permettre l'utilisation de cet attribut de comportement de contrat sur un type de service, mais restreindre son application au contrat spécifié dans la propriété <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A>.  
  
 L'implémentation de <xref:System.ServiceModel.Description.IContractBehaviorAttribute> sur des attributs de comportements de contrat personnalisés n'est pas obligatoire et si l'attribut est appliqué à une interface de contrat ou à une classe de rappel duplex, la valeur de la propriété <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A> est ignorée.  
  
 Pour plus d'informations, consultez <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L'exemple de code suivant suppose une implémentation <xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=nameWithType> personnalisée appelée `ObjectProviderBehavior`, qui fournit un comportement singleton ; elle retourne toujours la même instance de service et ne la recycle pas.  
  
 Pour personnaliser le fournisseur d'instances, l'exemple illustre l'implémentation d'un attribut personnalisé (`SingletonBehaviorAttribute`) qui implémente <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> pour insérer le fournisseur d'instances de services personnalisé. Il implémente également <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, qui lie son application au contrat `ISampleService`.  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="TargetContract">
      <MemberSignature Language="C#" Value="public Type TargetContract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetContract" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetContract As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetContract { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetContract : Type" Usage="System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type du contrat auquel le comportement de contrat s'applique.</summary>
        <value>Contrat auquel le comportement de contrat s'applique.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implémentez la propriété <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A> pour spécifier le contrat auquel le comportement de contrat est appliqué lors de l'application de l'attribut <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> d'implémentation est appliqué à une classe de service.  
  
   
  
## Examples  
 L'exemple de code suivant suppose une implémentation <xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=nameWithType> personnalisée appelée `ObjectProviderBehavior`, qui fournit un comportement singleton ; elle retourne toujours la même instance de service et ne la recycle pas.  
  
 Pour personnaliser le fournisseur d'instances, l'exemple illustre l'implémentation d'un attribut personnalisé (`SingletonBehaviorAttribute`) qui implémente <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> pour insérer le fournisseur d'instances de services personnalisé. Il implémente également <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, qui lie son application au contrat `ISampleService`.  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>