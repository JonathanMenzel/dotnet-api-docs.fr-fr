<Type Name="PrincipalPermissionMode" FullName="System.ServiceModel.Description.PrincipalPermissionMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e9e06b4e82b4acfd77ca62ee0b2033cc0eec418f" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51876057" /></Metadata><TypeSignature Language="C#" Value="public enum PrincipalPermissionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PrincipalPermissionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.PrincipalPermissionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum PrincipalPermissionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class PrincipalPermissionMode" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Définit le mode pour les contrôles d'autorisation lors de l'utilisation de l'<see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> pour contrôler l'accès à une méthode.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lors de l'application de l'<xref:System.Security.Permissions.PrincipalPermissionAttribute> à une méthode, ce mode spécifie le jeu de rôles à utiliser lors de l'autorisation d'accès. Par défaut, l'attribut utilise les groupes Windows (tels que `Administrator` ou `Users`) pour spécifier le rôle auquel l'utilisateur doit appartenir.  
  
 Pour définir le mode par programme, créez une instance de la classe `ServiceHost`, puis recherchez le <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> dans sa collection de comportements et affectez au <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> l’énumération appropriée. L’exemple suivant définit la propriété à UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#1)]
 [!code-vb[PrincipalPermissionMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#1)]  
  
 Vous pouvez également définir le comportement de configuration en ajoutant un [ &lt;serviceAuthorization&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) à la [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) d’un fichier de configuration, comme indiqué dans le code suivant.  
  
 [!code-csharp[PrincipalPermissionMode#10](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#10)]
 [!code-vb[PrincipalPermissionMode#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#10)]  
  
 L'énumération affecte la façon dont l'attribut <xref:System.Security.Permissions.PrincipalPermissionAttribute> autorise un utilisateur lors de son application à une méthode. L'exemple suivant applique l'attribut à une méthode et exige que l'utilisateur appartienne au groupe Utilisateurs sur l'ordinateur. Ce code ne fonctionne que lorsque le <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> a la valeur `UseWindowsGroup` (paramètre par défaut).  
  
 [!code-csharp[PrincipalPermissionMode#2](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#2)]
 [!code-vb[PrincipalPermissionMode#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#2)]  
  
## <a name="useaspnetroles"></a>UseAspNetRoles  
 La valeur UseAspNetRoles est utilisée pour tous les types d’informations d’identification. Ce mode permet à Windows Communication Foundation (WCF) à utiliser le fournisseur de rôles ASP.NET pour prendre des décisions d’autorisation.  
  
 Lorsque l'information d'identification d'un service est un certificat X.509, vous pouvez affecter à la propriété `Name` de <xref:System.Security.Permissions.PrincipalPermissionAttribute> une chaîne qui se compose des valeurs concaténées des champs Sujet et Empreinte digitale, comme illustré dans l'exemple suivant.  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 La chaîne concaténée se compose des valeurs de sujet et d'empreinte digitale, séparées par un point-virgule et un espace.  
  
 Il est également possible que le champ Sujet d'un certificat ait la valeur d'une chaîne null. Dans ce cas, vous pouvez affecter à la propriété `Name` un point-virgule suivi d'un espace puis de l'empreinte digitale, comme illustré dans l'exemple suivant.  
  
 [!code-csharp[PrincipalPermissionMode#4](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#4)]
 [!code-vb[PrincipalPermissionMode#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#4)]  
  
 Si un fournisseur de rôle ASP.NET est présent, vous pouvez également affecter à la propriété <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> un rôle dans la base de données. Par défaut, la base de données est représentée par le <xref:System.Web.Security.SqlRoleProvider>. Vous pouvez également définir un fournisseur de rôle personnalisé avec la propriété <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider%2A> de la classe <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>. Le code suivant affecte au rôle la valeur `Administrators`. Notez que le fournisseur de rôle doit mapper le compte d'utilisateur sur ce rôle.  
  
 [!code-csharp[PrincipalPermissionMode#13](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#13)]
 [!code-vb[PrincipalPermissionMode#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#13)]  
  
 Pour plus d’informations sur le fournisseur de rôle ASP.NET, consultez [How To : utilisez le Gestionnaire de rôles dans ASP.NET 2.0](https://go.microsoft.com/fwlink/?LinkId=96692).  
  
 Pour plus d’informations sur l’utilisation de WCF et le fournisseur de rôles, consultez [Comment : utiliser le fournisseur de rôle ASP.NET avec un Service](~/docs/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service.md).  
  
## <a name="custom"></a>Personnalisé  
 Lorsque la propriété est définie sur personnalisé, vous devez également fournir une classe personnalisée qui implémente la <xref:System.IdentityModel.Policy.IAuthorizationPolicy> classe. Cette classe est chargée de fournir la représentation `IPrincipal` de l’appelant dans la collection <xref:System.IdentityModel.Policy.EvaluationContext.Properties%2A>. Elle doit stocker l'instance `IPrincipal` dans la collection de propriétés à l'aide de la clé de chaîne « Entités de sécurité », comme illustré dans l'exemple suivant.  
  
```  
evaluationContext.Properties["Principal"]=new CustomPrincipal(identity);  
```  
  
## <a name="background"></a>Présentation  
 La sécurité basée sur les rôles dans [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] permet aux applications de spécifier des autorisations à l'aide de code. En spécifiant la demande <xref:System.Security.Permissions.PrincipalPermission>, la propriété <xref:System.Threading.Thread.CurrentPrincipal%2A> doit satisfaire l’exigence `PrincipalPermission`. Par exemple, que l'utilisateur doit se trouver dans un rôle ou un groupe spécifique. Sinon, le thread n'est pas autorisé à exécuter le code, entraînant ainsi une exception. WCF fournit un ensemble de <xref:System.ServiceModel.Description.PrincipalPermissionMode> sélections pour spécifier le <xref:System.Threading.Thread.CurrentPrincipal%2A> selon <xref:System.Security.SecurityContext> en conséquence.  
  
   
  
## Examples  
 L’exemple suivant montre comment spécifier UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#7](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#7)]
 [!code-vb[PrincipalPermissionMode#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#7)]  
  
 L’exemple suivant montre comment spécifier personnalisée.  
  
 [!code-csharp[PrincipalPermissionMode#8](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#8)]
 [!code-vb[PrincipalPermissionMode#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Always = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberSignature Language="F#" Value="Always = 4" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Permet toujours à l'utilisateur de spécifier une classe <see cref="T:System.Security.Principal.IPrincipal" /> pour <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Custom = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberSignature Language="F#" Value="Custom = 3" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Permet à l'utilisateur de spécifier une classe <see cref="T:System.Security.Principal.IPrincipal" /> personnalisée pour <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><see cref="P:System.Threading.Thread.CurrentPrincipal" /> n'est pas définie.</summary>
      </Docs>
    </Member>
    <Member MemberName="UseAspNetRoles">
      <MemberSignature Language="C#" Value="UseAspNetRoles" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseAspNetRoles = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberSignature Language="VB.NET" Value="UseAspNetRoles" />
      <MemberSignature Language="C++ CLI" Value="UseAspNetRoles" />
      <MemberSignature Language="F#" Value="UseAspNetRoles = 2" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><see cref="P:System.Threading.Thread.CurrentPrincipal" /> est définie en fonction du fournisseur de rôle [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] (<see cref="T:System.Web.Security.RoleProvider" />).</summary>
      </Docs>
    </Member>
    <Member MemberName="UseWindowsGroups">
      <MemberSignature Language="C#" Value="UseWindowsGroups" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseWindowsGroups = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="UseWindowsGroups" />
      <MemberSignature Language="C++ CLI" Value="UseWindowsGroups" />
      <MemberSignature Language="F#" Value="UseWindowsGroups = 1" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><see cref="P:System.Threading.Thread.CurrentPrincipal" /> est définie en fonction de Windows (<see cref="T:System.Security.Principal.WindowsPrincipal" />). Si l'identité de l'utilisateur n'est pas associée à un compte Windows, un utilisateur Windows anonyme est utilisé.</summary>
      </Docs>
    </Member>
  </Members>
</Type>