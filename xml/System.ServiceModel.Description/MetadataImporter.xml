<Type Name="MetadataImporter" FullName="System.ServiceModel.Description.MetadataImporter">
  <TypeSignature Language="C#" Value="public abstract class MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataImporter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="49edb-101">Importe des métadonnées dans des objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</span><span class="sxs-lookup"><span data-stu-id="49edb-101">Imports metadata into <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49edb-102">Utilisez une implémentation de la classe abstraite <xref:System.ServiceModel.Description.MetadataImporter> pour importer des métadonnées de service.</span><span class="sxs-lookup"><span data-stu-id="49edb-102">Use an implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class to import service metadata.</span></span> <span data-ttu-id="49edb-103">Les types qui dérivent de la classe <xref:System.ServiceModel.Description.MetadataImporter> implémentent la prise en charge de l'importation des formats de métadonnées qui tirent parti de la logique d'importation WS-Policy dans [!INCLUDE[indigo1](~/includes/indigo1-md.md)].</span><span class="sxs-lookup"><span data-stu-id="49edb-103">Types that derive from the <xref:System.ServiceModel.Description.MetadataImporter> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in [!INCLUDE[indigo1](~/includes/indigo1-md.md)].</span></span>  
  
 <span data-ttu-id="49edb-104">Une implémentation <xref:System.ServiceModel.Description.MetadataImporter> recueille les expressions de stratégie attachées aux métadonnées de service dans un objet <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="49edb-104">A <xref:System.ServiceModel.Description.MetadataImporter> implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="49edb-105">Le <xref:System.ServiceModel.Description.MetadataImporter> traite ensuite les stratégies dans le cadre de l'importation des métadonnées en appelant les implémentations de l'interface <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> dans la propriété <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="49edb-105">The <xref:System.ServiceModel.Description.MetadataImporter> then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="49edb-106">Vous pouvez ajouter la prise en charge de l'importation de nouvelles assertions de stratégie vers <xref:System.ServiceModel.Description.MetadataImporter> en ajoutant votre propre implémentation de l'interface <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> à la propriété <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> dans une instance <xref:System.ServiceModel.Description.MetadataImporter>.</span><span class="sxs-lookup"><span data-stu-id="49edb-106">You can add support for importing new policy assertions to a <xref:System.ServiceModel.Description.MetadataImporter> by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> property on a <xref:System.ServiceModel.Description.MetadataImporter> instance.</span></span> <span data-ttu-id="49edb-107">Vous pouvez également inscrire votre extension d’importation de stratégie dans votre fichier de configuration de l’application.</span><span class="sxs-lookup"><span data-stu-id="49edb-107">Alternatively, you can register your policy import extension in your application configuration file.</span></span>  
  
 <span data-ttu-id="49edb-108">Le <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type est l’implémentation de la <xref:System.ServiceModel.Description.MetadataImporter> fourni avec WCF de classe abstraite.</span><span class="sxs-lookup"><span data-stu-id="49edb-108">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type is the implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class included with WCF.</span></span> <span data-ttu-id="49edb-109">Le type <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> importe des métadonnées WSDL avec les stratégies attachées fournies dans un objet <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="49edb-109">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type imports WSDL metadata with attached policies that are bundled in a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType> object.</span></span>  
  
 <span data-ttu-id="49edb-110">Vous pouvez ajouter la prise en charge pour importer des extensions WSDL en implémentant l'interface <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> et en ajoutant ensuite votre implémentation à la propriété <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType> sur votre instance <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="49edb-110">You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> instance.</span></span> <span data-ttu-id="49edb-111">Le <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> peut également charger des implémentations de l'interface <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> inscrite dans votre fichier de configuration d'application.</span><span class="sxs-lookup"><span data-stu-id="49edb-111">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interface registered in your application configuration file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49edb-112">Le constructeur <xref:System.ServiceModel.Description.MetadataImporter> étant interne, vous ne pouvez pas dériver à partir de <xref:System.ServiceModel.Description.MetadataImporter> dans cette version.</span><span class="sxs-lookup"><span data-stu-id="49edb-112">Because the <xref:System.ServiceModel.Description.MetadataImporter> constructor is internal, you cannot derive from <xref:System.ServiceModel.Description.MetadataImporter> in this version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49edb-113">L'exemple suivant indique l'utilisation de la classe dérivée <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> pour importer des métadonnées à l'aide de l'état personnalisé, en vérifiant la propriété <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>, en compilant les métadonnées importées dans des types managés et en enregistrant le résultat dans un fichier de code.</span><span class="sxs-lookup"><span data-stu-id="49edb-113">The following example shows the use of the <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> derived class to import metadata using custom state, checking the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property, compiling imported metadata to managed types and saving the result to a code file.</span></span>  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt; Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.MetadataConversionError&gt; Errors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Collection(Of MetadataConversionError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ Errors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49edb-114">Obtient une valeur qui indique si des erreurs se sont produites lors de l'importation des métadonnées.</span><span class="sxs-lookup"><span data-stu-id="49edb-114">Gets a value that indicates whether there were errors importing the metadata.</span></span></summary>
        <value><span data-ttu-id="49edb-115">Collection d'objets <see cref="T:System.ServiceModel.Description.MetadataConversionError" />.</span><span class="sxs-lookup"><span data-stu-id="49edb-115">A collection of <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49edb-116">Vérifiez toujours la propriété <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> après avoir importé des métadonnées et avant d'utiliser les métadonnées.</span><span class="sxs-lookup"><span data-stu-id="49edb-116">Always check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property after importing metadata and before using the metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49edb-117">En cas de substitution dans une classe dérivée, retourne une collection de contrats importés à partir des métadonnées.</span><span class="sxs-lookup"><span data-stu-id="49edb-117">When overridden in a derived class, returns a collection of contracts imported from the metadata.</span></span></summary>
        <returns><span data-ttu-id="49edb-118">Contrats importés à partir des métadonnées.</span><span class="sxs-lookup"><span data-stu-id="49edb-118">The contracts imported from the metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49edb-119">En cas de substitution dans une classe dérivée, retourne tous les points de terminaison dans les métadonnées.</span><span class="sxs-lookup"><span data-stu-id="49edb-119">When overridden in a derived class, returns all endpoints in the metadata.</span></span></summary>
        <returns><span data-ttu-id="49edb-120">Collection d'objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> publiés par un service.</span><span class="sxs-lookup"><span data-stu-id="49edb-120">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects that are published by a service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49edb-121">Implémentez la méthode <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> pour retourner tous les points de terminaison dans les métadonnées importées.</span><span class="sxs-lookup"><span data-stu-id="49edb-121">Implement the <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> method to return all endpoints in the imported metadata.</span></span> <span data-ttu-id="49edb-122">Les métadonnées importées en tant que points de terminaison de service ne peuvent pas servir à créer une exécution ou à exporter des métadonnées, car les points de terminaison importés ne contiennent pas d'informations sur les types managés.</span><span class="sxs-lookup"><span data-stu-id="49edb-122">Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information.</span></span> <span data-ttu-id="49edb-123">Pour utiliser les métadonnées afin de créer une exécution de client ou de service ou de générer des métadonnées, vous devez d'abord générer et compiler le code des métadonnées et utiliser ces informations de type pour créer un objet <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> à l'aide de <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</span><span class="sxs-lookup"><span data-stu-id="49edb-123">To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KnownContracts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription&gt; KnownContracts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, class System.ServiceModel.Description.ContractDescription&gt; KnownContracts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.KnownContracts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KnownContracts As Dictionary(Of XmlQualifiedName, ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ KnownContracts { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49edb-124">Obtient un dictionnaire de contrats par nom que l'importateur connaît.</span><span class="sxs-lookup"><span data-stu-id="49edb-124">Gets a dictionary of contracts by name that the importer knows about.</span></span></summary>
        <value><span data-ttu-id="49edb-125">Dictionnaire de contrats répertoriés par nom complet XML.</span><span class="sxs-lookup"><span data-stu-id="49edb-125">A dictionary of contracts listed by XML qualified name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49edb-126">Utilisez la propriété <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> pour ajouter ou supprimer des descriptions de contrat et leurs noms XML associés que l'importateur peut référencer.</span><span class="sxs-lookup"><span data-stu-id="49edb-126">Use the <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> property to add or remove contract descriptions and their associated XML names that the importer can reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; PolicyImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; PolicyImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PolicyImportExtensions As KeyedByTypeCollection(Of IPolicyImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ PolicyImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49edb-127">Obtient une collection d’importateurs de stratégie que l’importateur appelle pour traiter les assertions de stratégie.</span><span class="sxs-lookup"><span data-stu-id="49edb-127">Gets a collection of policy importers that the importer calls to process policy assertions.</span></span></summary>
        <value><span data-ttu-id="49edb-128">Collection d'importateurs de stratégie que <see cref="T:System.ServiceModel.Description.MetadataImporter" /> utilise pour traiter les assertions de stratégie.</span><span class="sxs-lookup"><span data-stu-id="49edb-128">A collection of policy importers that the <see cref="T:System.ServiceModel.Description.MetadataImporter" /> uses to process policy assertions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49edb-129">Utilisez la propriété <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> pour ajouter ou supprimer des importateurs de stratégie appelés pour traiter les assertions de stratégie dans les métadonnées.</span><span class="sxs-lookup"><span data-stu-id="49edb-129">Use the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> property to add or remove policy importers that are invoked to process policy assertions in the metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;object,object&gt; State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;object, object&gt; State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Dictionary(Of Object, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ State { System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49edb-130">Obtient ou définit une collection d’objets utilisés lors de l’importation de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="49edb-130">Gets or sets a collection of objects used in the importing of metadata.</span></span></summary>
        <value><span data-ttu-id="49edb-131">Dictionnaire d'objets répertoriés par type.</span><span class="sxs-lookup"><span data-stu-id="49edb-131">A dictionary of objects keyed by type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49edb-132">Utilisez la propriété `State` pour ajouter ou supprimer des objets utilisés lors de l'importation de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="49edb-132">Use the `State` property to add or remove objects used in the importing of metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49edb-133">L'exemple suivant indique comment utiliser la propriété <xref:System.ServiceModel.Description.MetadataImporter.State%2A> pour ajouter un <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType> personnalisé afin d'importer des structures de données de manière particulière.</span><span class="sxs-lookup"><span data-stu-id="49edb-133">The following example shows the use of the <xref:System.ServiceModel.Description.MetadataImporter.State%2A> property to add a custom <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType> to import data structures in a particular way.</span></span>  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>