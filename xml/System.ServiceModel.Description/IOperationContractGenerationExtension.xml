<Type Name="IOperationContractGenerationExtension" FullName="System.ServiceModel.Description.IOperationContractGenerationExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec962a591b45f7a8ae2f254f0b74f0b27c88e8e3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37456535" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IOperationContractGenerationExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationContractGenerationExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IOperationContractGenerationExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOperationContractGenerationExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOperationContractGenerationExtension" />
  <TypeSignature Language="F#" Value="type IOperationContractGenerationExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Définit les méthodes appelées au cours d'une génération de contrat qui permet de modifier le code généré pour une opération.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implémentez l'interface <xref:System.ServiceModel.Description.IOperationContractGenerationExtension> sur un comportement d'opération (type <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>) pour vous permettre de modifier le code généré lors de la compilation d'un contrat ou d'un point de terminaison dans le code. En général, une <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> personnalisée insère un comportement d'opération personnalisé dans la collection <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> au cours de l'appel à <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=nameWithType> ou <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L'exemple de code suivant montre l'implémentation de la méthode <xref:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation%2A> qui ajoute une chaîne à la section des commentaires de l'opération à l'aide de l'espace de noms <xref:System.CodeDom?displayProperty=nameWithType>.  
  
  
  
 L'exemple de code suivant montre comment le comportement d'opération qui implémente <xref:System.ServiceModel.Description.IOperationContractGenerationExtension> est inséré dans la collection <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> au cours de l'appel à <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[C_CustomWSDLExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 Enfin, l'exemple de code suivant montre l'opération générée à la fois dans Visual Basic et C#.  
  
 [!code-csharp[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.cs#3)]
 [!code-vb[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GenerateOperation">
      <MemberSignature Language="C#" Value="public void GenerateOperation (System.ServiceModel.Description.OperationContractGenerationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateOperation(class System.ServiceModel.Description.OperationContractGenerationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation(System.ServiceModel.Description.OperationContractGenerationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateOperation (context As OperationContractGenerationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateOperation(System::ServiceModel::Description::OperationContractGenerationContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GenerateOperation : System.ServiceModel.Description.OperationContractGenerationContext -&gt; unit" Usage="iOperationContractGenerationExtension.GenerateOperation context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Description.OperationContractGenerationContext" />
      </Parameters>
      <Docs>
        <param name="context">Contexte de travail qui contient les types <see cref="N:System.CodeDom" /> nécessaires pour modifier l'opération générée.</param>
        <summary>Effectuez une implémentation pour modifier le Code DOM (Code Document Object Model) avant le processus de génération de contrat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En général, une <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> personnalisée insère un comportement d'opération personnalisé dans la collection <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> au cours de l'appel à <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=nameWithType> ou <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A?displayProperty=nameWithType>.  
  
 La méthode <xref:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation%2A> est appelée une fois pour chaque contrat.  
  
   
  
## Examples  
 L'exemple de code suivant montre l'implémentation de la méthode <xref:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation%2A> qui ajoute une chaîne à la section des commentaires de l'opération à l'aide de l'espace de noms <xref:System.CodeDom?displayProperty=nameWithType>.  
  
  
  
 L'exemple de code suivant montre comment le comportement d'opération qui implémente <xref:System.ServiceModel.Description.IOperationContractGenerationExtension> est inséré dans la collection <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> au cours de l'appel à <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[C_CustomWSDLExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 Enfin, l'exemple de code suivant montre l'opération générée à la fois dans Visual Basic et C#.  
  
 [!code-csharp[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.cs#3)]
 [!code-vb[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>