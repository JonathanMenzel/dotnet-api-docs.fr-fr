<Type Name="TypedMessageConverter" FullName="System.ServiceModel.Description.TypedMessageConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3715fb40ed15f500fc2a95225a00490832cefa35" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36416770" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TypedMessageConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypedMessageConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.TypedMessageConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypedMessageConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypedMessageConverter abstract" />
  <TypeSignature Language="F#" Value="type TypedMessageConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Convertit un message typé en message non typé ou un message non typé en message typé.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe fournit des fonctionnalités pour convertir un message typé en message non typé ou un message non typé en message typé. Un message typé est une instance de type dont l'attribut <xref:System.ServiceModel.MessageContractAttribute> est annoté. Un message non typé est une instance de la classe <xref:System.ServiceModel.Channels.Message>.  Vous pouvez annoter un type avec l'<xref:System.ServiceModel.MessageContractAttribute> pour créer un type de message personnalisé, puis utiliser les méthodes fournies par cette classe pour le convertir en instance <xref:System.ServiceModel.Channels.Message> non typée.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.MessageContractAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypedMessageConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypedMessageConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Représente une méthode statique qui retourne une instance <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (messageContract As Type, action As String) As TypedMessageConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::TypedMessageConverter ^ Create(Type ^ messageContract, System::String ^ action);" />
      <MemberSignature Language="F#" Value="static member Create : Type * string -&gt; System.ServiceModel.Description.TypedMessageConverter" Usage="System.ServiceModel.Description.TypedMessageConverter.Create (messageContract, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="messageContract">Type de contrat de message qui est un <see cref="T:System.Type" /> annoté avec un <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
        <param name="action">Chaîne d'action.</param>
        <summary>Représente une méthode statique qui retourne une instance <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
        <returns>Instance de <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Les arguments sont <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Le type de contrat du message spécifié n'a pas le MessageContractAttribute appliqué</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, System.ServiceModel.DataContractFormatAttribute formatterAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, class System.ServiceModel.DataContractFormatAttribute formatterAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (messageContract As Type, action As String, formatterAttribute As DataContractFormatAttribute) As TypedMessageConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::TypedMessageConverter ^ Create(Type ^ messageContract, System::String ^ action, System::ServiceModel::DataContractFormatAttribute ^ formatterAttribute);" />
      <MemberSignature Language="F#" Value="static member Create : Type * string * System.ServiceModel.DataContractFormatAttribute -&gt; System.ServiceModel.Description.TypedMessageConverter" Usage="System.ServiceModel.Description.TypedMessageConverter.Create (messageContract, action, formatterAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="formatterAttribute" Type="System.ServiceModel.DataContractFormatAttribute" />
      </Parameters>
      <Docs>
        <param name="messageContract">Type de contrat de message qui est un <see cref="T:System.Type" /> annoté avec un <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
        <param name="action">Chaîne d'action.</param>
        <param name="formatterAttribute">
          <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> qui spécifie le formateur à utiliser.</param>
        <summary>Représente une méthode statique qui retourne une instance <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
        <returns>Instance de <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Les arguments sont <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Le type de contrat du message spécifié n'a pas le MessageContractAttribute appliqué</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, class System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (messageContract As Type, action As String, formatterAttribute As XmlSerializerFormatAttribute) As TypedMessageConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::TypedMessageConverter ^ Create(Type ^ messageContract, System::String ^ action, System::ServiceModel::XmlSerializerFormatAttribute ^ formatterAttribute);" />
      <MemberSignature Language="F#" Value="static member Create : Type * string * System.ServiceModel.XmlSerializerFormatAttribute -&gt; System.ServiceModel.Description.TypedMessageConverter" Usage="System.ServiceModel.Description.TypedMessageConverter.Create (messageContract, action, formatterAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="formatterAttribute" Type="System.ServiceModel.XmlSerializerFormatAttribute" />
      </Parameters>
      <Docs>
        <param name="messageContract">Type de contrat de message qui est un <see cref="T:System.Type" /> annoté avec un <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
        <param name="action">Chaîne d'action.</param>
        <param name="formatterAttribute">
          <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> qui spécifie le formateur à utiliser.</param>
        <summary>Représente une méthode statique qui retourne une instance <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
        <returns>Instance de <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Les arguments sont <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Le type de contrat du message spécifié n'a pas le MessageContractAttribute appliqué</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (messageContract As Type, action As String, defaultNamespace As String) As TypedMessageConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::TypedMessageConverter ^ Create(Type ^ messageContract, System::String ^ action, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="static member Create : Type * string * string -&gt; System.ServiceModel.Description.TypedMessageConverter" Usage="System.ServiceModel.Description.TypedMessageConverter.Create (messageContract, action, defaultNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="messageContract">Type de contrat de message qui est un <see cref="T:System.Type" /> annoté avec un <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
        <param name="action">Chaîne d'action.</param>
        <param name="defaultNamespace">Espace de noms.</param>
        <summary>Représente une méthode statique qui retourne une instance <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
        <returns>Instance de <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Les arguments sont <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Le type de contrat du message spécifié n'a pas le MessageContractAttribute appliqué</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace, System.ServiceModel.DataContractFormatAttribute formatterAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, string defaultNamespace, class System.ServiceModel.DataContractFormatAttribute formatterAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (messageContract As Type, action As String, defaultNamespace As String, formatterAttribute As DataContractFormatAttribute) As TypedMessageConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::TypedMessageConverter ^ Create(Type ^ messageContract, System::String ^ action, System::String ^ defaultNamespace, System::ServiceModel::DataContractFormatAttribute ^ formatterAttribute);" />
      <MemberSignature Language="F#" Value="static member Create : Type * string * string * System.ServiceModel.DataContractFormatAttribute -&gt; System.ServiceModel.Description.TypedMessageConverter" Usage="System.ServiceModel.Description.TypedMessageConverter.Create (messageContract, action, defaultNamespace, formatterAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="defaultNamespace" Type="System.String" />
        <Parameter Name="formatterAttribute" Type="System.ServiceModel.DataContractFormatAttribute" />
      </Parameters>
      <Docs>
        <param name="messageContract">Type de contrat de message qui est un <see cref="T:System.Type" /> annoté avec un <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
        <param name="action">Chaîne d'action.</param>
        <param name="defaultNamespace">Espace de noms.</param>
        <param name="formatterAttribute">
          <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> qui spécifie le formateur à utiliser.</param>
        <summary>Représente une méthode statique qui retourne une instance <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
        <returns>Instance de <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Les arguments sont <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Le type de contrat du message spécifié n'a pas le MessageContractAttribute appliqué</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace, System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.TypedMessageConverter Create(class System.Type messageContract, string action, string defaultNamespace, class System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (messageContract As Type, action As String, defaultNamespace As String, formatterAttribute As XmlSerializerFormatAttribute) As TypedMessageConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::TypedMessageConverter ^ Create(Type ^ messageContract, System::String ^ action, System::String ^ defaultNamespace, System::ServiceModel::XmlSerializerFormatAttribute ^ formatterAttribute);" />
      <MemberSignature Language="F#" Value="static member Create : Type * string * string * System.ServiceModel.XmlSerializerFormatAttribute -&gt; System.ServiceModel.Description.TypedMessageConverter" Usage="System.ServiceModel.Description.TypedMessageConverter.Create (messageContract, action, defaultNamespace, formatterAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.TypedMessageConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageContract" Type="System.Type" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="defaultNamespace" Type="System.String" />
        <Parameter Name="formatterAttribute" Type="System.ServiceModel.XmlSerializerFormatAttribute" />
      </Parameters>
      <Docs>
        <param name="messageContract">Type de contrat de message qui est un <see cref="T:System.Type" /> annoté avec un <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
        <param name="action">Chaîne d'action.</param>
        <param name="defaultNamespace">Espace de noms.</param>
        <param name="formatterAttribute">
          <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> qui spécifie le formateur à utiliser.</param>
        <summary>Représente une méthode statique qui retourne une instance <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</summary>
        <returns>Instance de <see cref="T:System.ServiceModel.Description.TypedMessageConverter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Les arguments sont <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Le type de contrat du message spécifié n'a pas le MessageContractAttribute appliqué</exception>
      </Docs>
    </Member>
    <Member MemberName="FromMessage">
      <MemberSignature Language="C#" Value="public abstract object FromMessage (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FromMessage(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.FromMessage(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ FromMessage(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member FromMessage : System.ServiceModel.Channels.Message -&gt; obj" Usage="typedMessageConverter.FromMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message non typé.</param>
        <summary>Crée un message typé à partir de l'instance <see cref="T:System.ServiceModel.Channels.Message" /> spécifiée.</summary>
        <returns>Objet qui est un message typé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend un message non typé Windows Communication Foundation (WCF), autrement dit, une instance de <xref:System.ServiceModel.Channels.Message>et le convertit en message typé, autrement dit, une instance d’un type qui est annotée par le <xref:System.ServiceModel.MessageContractAttribute>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToMessage">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée une instance <see cref="T:System.ServiceModel.Channels.Message" /> à partir du message typé spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToMessage">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.Message ToMessage (object typedMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ToMessage(object typedMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToMessage (typedMessage As Object) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::Message ^ ToMessage(System::Object ^ typedMessage);" />
      <MemberSignature Language="F#" Value="abstract member ToMessage : obj -&gt; System.ServiceModel.Channels.Message" Usage="typedMessageConverter.ToMessage typedMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typedMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typedMessage">Message typé.</param>
        <summary>Crée une instance <see cref="T:System.ServiceModel.Channels.Message" /> à partir du message typé spécifié.</summary>
        <returns>Instance de <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToMessage">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.Message ToMessage (object typedMessage, System.ServiceModel.Channels.MessageVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ToMessage(object typedMessage, class System.ServiceModel.Channels.MessageVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToMessage (typedMessage As Object, version As MessageVersion) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::Message ^ ToMessage(System::Object ^ typedMessage, System::ServiceModel::Channels::MessageVersion ^ version);" />
      <MemberSignature Language="F#" Value="abstract member ToMessage : obj * System.ServiceModel.Channels.MessageVersion -&gt; System.ServiceModel.Channels.Message" Usage="typedMessageConverter.ToMessage (typedMessage, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typedMessage" Type="System.Object" />
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
      </Parameters>
      <Docs>
        <param name="typedMessage">Message typé.</param>
        <param name="version">
          <see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui spécifie les versions de SOAP et de WS-Addressing associées à un message.</param>
        <summary>Crée une instance <see cref="T:System.ServiceModel.Channels.Message" /> à partir du message typé spécifié à l'aide de la version spécifiée.</summary>
        <returns>Instance de <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>