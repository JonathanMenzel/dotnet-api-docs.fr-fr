<Type Name="ServiceDebugBehavior" FullName="System.ServiceModel.Description.ServiceDebugBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9488faf7deddd519e54a0c0416c96e197e509422" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34317189" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceDebugBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceDebugBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceDebugBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceDebugBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDebugBehavior : System::ServiceModel::Description::IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Active les fonctionnalités de débogage et d’informations d’aide pour un service Windows Communication Foundation (WCF).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez les propriétés <xref:System.ServiceModel.Description.ServiceDebugBehavior> à partir d'un fichier de configuration ou par programme pour activer le flux d'informations sur les exceptions managées pour le client à des fins de débogage, ainsi que la publication de fichiers d'informations HTML pour les utilisateurs qui parcourent le service avec un navigateur Web.  
  
 Définir le <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> propriété `true` pour indiquer à WCF pour retourner managé informations sur les exceptions SOAP erreurs aux clients à des fins de débogage.  
  
> [!CAUTION]
>  Le retour d'informations sur les exceptions managées aux clients peut constituer un problème de sécurité, car les détails d'exception exposent des informations relatives à l'implémentation de service interne que des clients non autorisés pourraient utiliser. De plus, bien que les propriétés <xref:System.ServiceModel.Description.ServiceDebugBehavior> puissent également être définies par programme, il peut être facile d'oublier de désactiver <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> lors du déploiement.  
  
 Étant donné les problèmes de sécurité impliqués, il est vivement recommandé :  
  
-   d'utiliser un fichier de configuration d'application pour affecter à la propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> la valeur `true` ;  
  
-   de ne procéder ainsi que dans des scénarios de débogage contrôlés.  
  
 Pour plus d’informations sur les problèmes de sécurité liés aux informations sur les exceptions managées, consultez [spécification et gestion des erreurs dans les contrats et les Services](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md).  
  
 Les propriétés <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled%2A> et <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled%2A> indiquent au service de publier des fichiers d'aide HTML lorsqu'il est affiché à l'aide d'un navigateur HTML.  
  
 Les propriétés <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl%2A> et <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> déterminent l'emplacement de la page d'aide HTML affichée.  
  
 Pour activer ou désactiver l'une des fonctionnalités <xref:System.ServiceModel.Description.ServiceDebugBehavior> à l'aide d'un fichier de configuration :  
  
1.  Ajouter un `behaviorConfiguration` d’attribut pour le [ &lt;service&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) , élément pour votre service WCF. Les comportements de point de terminaison sont configurés sur [ \<point de terminaison >](http://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017) éléments ; les comportements de service sur [ &lt;service&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) éléments.  
  
2.  Ajouter à ou créer un [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) section et ajoutez un [ &lt;comportement&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) élément à celle portant le nom qui correspond à la `behaviorConfiguration`valeur d’attribut à l’étape 1. Les comportements de point de terminaison sont configurés à l’aide un [ &lt;endpointBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md) élément ; service comportements sont configurés à l’aide un [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) élément.  
  
3.  Ajouter un [ &lt;serviceDebug&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicedebug.md) élément à la [ &lt;comportement&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) élément de l’étape 2 puis activez ou désactivez les différentes propriétés en fonction de votre scénario.  
  
 Pour obtenir un exemple spécifique, consultez la section Exemple.  
  
   
  
## Examples  
 L’exemple de code suivant indique comment utiliser un fichier de configuration pour activer la fonctionnalité de page d’aide HTML et retourner au client des informations relatives aux exceptions dans une erreur SOAP à des fins de débogage (en plus de l’activation de la prise en charge des métadonnées). Ce fichier de configuration illustre les étapes de base suivantes permettant de prévoir la prise en charge des fonctionnalités <xref:System.ServiceModel.Description.ServiceDebugBehavior> :  
  
-   Étant donné que la <xref:System.ServiceModel.Description.ServiceDebugBehavior> est de type un <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> mise en œuvre, les [ &lt;service&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) élément qui représente le type de service comporte l’identificateur de la configuration de comportement de `behaviorConfiguration="metadataAndDebug"`.  
  
-   Étant donné que la <xref:System.ServiceModel.Description.ServiceDebugBehavior> est de type un <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> mise en œuvre un [ &lt;comportement&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) élément est ajouté à un [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md)section. Définir le `name` attribut de la [ &lt;comportement&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) élément dont la valeur est l’identificateur de la `behaviorConfiguration` attribut de la [ &lt;service&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) élément. Dans ce cas, la valeur est `metadataAndDebug`.  
  
-   Ajouter un [ &lt;serviceDebug&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicedebug.md) élément avec les différents attributs défini sur la configuration souhaitée. Dans ce cas, les valeurs d'attribut `httpHelpPageEnabled` et `includeExceptionDetailInFaults` sont `true`.  
  
 [!code-xml[ServiceDebugBehaviorConfig#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicedebugbehaviorconfig/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceDebugBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceDebugBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceDebugBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.ServiceDebugBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le constructeur crée un objet <xref:System.ServiceModel.Description.ServiceDebugBehavior> avec les valeurs par défaut suivantes :  
  
-   La propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> a la valeur `false`.  
  
-   La propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled%2A> a la valeur `true`.  
  
-   La propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled%2A> a la valeur `true`.  
  
-   La propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl%2A> est l'adresse de base du service qui prend en charge les requêtes HTTP.  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> est l'adresse de base du service qui prend en charge les requêtes HTTPS.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpHelpPageBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpHelpPageBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpHelpPageBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpHelpPageBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpHelpPageBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’accès de niveau supérieur à la définition d’une liaison.</summary>
        <value>Liaison de canal.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpHelpPageEnabled">
      <MemberSignature Language="C#" Value="public bool HttpHelpPageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpHelpPageEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpHelpPageEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpHelpPageEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui contrôle si Windows Communication Foundation (WCF) publie une page d’aide HTML à l’adresse contrôlée par la propriété <see cref="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl" />.</summary>
        <value>
          <see langword="true" /> si WCF publie une page d'aide HTML ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Affectez la valeur <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled%2A> à la propriété `false` pour désactiver la publication d'une page d'aide HTML visible par les navigateurs HTML.  
  
 Pour vous assurer que la page d'aide HTML est publiée à l'emplacement spécifié par la propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A>, vous devez affecter à cette propriété la valeur `true` ; l'une des conditions suivantes doit également être respectée :  
  
-   La propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> est une adresse absolue qui prend en charge le schéma de protocole HTTP.  
  
-   Il existe une adresse de base pour le service qui prend en charge le schéma de protocole HTTP.  
  
 Bien qu'une exception soit levée si une adresse absolue qui ne prend pas en charge le schéma de protocole HTTP est assignée à la propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A>, tout autre scénario dans lequel aucun des critères précédents n'est rempli ne lève pas d'exception et ne génère aucune page d'aide HTML.  
  
   
  
## Examples  
 L'exemple de code suivant indique comment utiliser un fichier de configuration pour activer la fonctionnalité de page d'aide HTML et retourner au client des informations relatives aux exceptions dans une erreur SOAP à des fins de débogage. Ce fichier de configuration illustre les étapes de base suivantes permettant de prévoir la prise en charge des fonctionnalités <xref:System.ServiceModel.Description.ServiceDebugBehavior> :  
  
-   Étant donné que la <xref:System.ServiceModel.Description.ServiceDebugBehavior> est de type un <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> mise en œuvre, les [ &lt;service&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) élément qui représente le type de service comporte l’identificateur de la configuration de comportement de `behaviorConfiguration="metadataAndDebug"`.  
  
-   Là encore, car le <xref:System.ServiceModel.Description.ServiceDebugBehavior> est de type un <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> mise en œuvre un [ &lt;comportement&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) élément est ajouté à un [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) section. Le `name` attribut de la [ &lt;comportement&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) élément dont la valeur est l’identificateur de la `behaviorConfiguration` attribut de la [ &lt;service&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) élément. Dans ce cas, la valeur est `metadataAndDebug`.  
  
-   Ajouter un [ &lt;serviceDebug&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicedebug.md) élément avec les différents attributs défini sur la configuration souhaitée. Dans ce cas, les valeurs d'attribut `httpHelpPageEnabled` et `includeExceptionDetailInFaults` sont `true`.  
  
 [!code-xml[ServiceDebugBehaviorConfig#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicedebugbehaviorconfig/cs/hostapplication.exe.config#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpHelpPageUrl">
      <MemberSignature Language="C#" Value="public Uri HttpHelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpHelpPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpHelpPageUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpHelpPageUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'emplacement auquel le fichier d'aide HTML est publié.</summary>
        <value>URL basée sur HTTP relative ou absolue du fichier d'aide HTML personnalisé que l'utilisateur visualise lorsqu'il affiche le point de terminaison à l'aide d'un navigateur HTML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl%2A> pour activer l'utilisation d'un fichier d'aide HTML personnalisé retourné par une requête HTTP/Get, notamment à partir d'un navigateur HTML. L'emplacement du fichier d'aide HTML est résolu comme suit :  
  
-   Si la valeur de cette propriété est une adresse relative, l'emplacement du fichier d'aide HTML correspond à la valeur de l'adresse de base du service qui prend en charge les requêtes HTTP, plus cette valeur de propriété.  
  
-   Si la valeur de cette propriété est une adresse absolue et prend en charge les requêtes HTTP, l'emplacement du fichier d'aide HTML est la valeur de cette propriété.  
  
-   Si la valeur de cette propriété est absolue mais ne prend pas en charge les requêtes HTTP, une exception est levée.  
  
 Cette propriété est appliquée uniquement si la propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled%2A> possède la valeur `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsHelpPageBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpsHelpPageBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpsHelpPageBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsHelpPageBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpsHelpPageBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’accès de niveau supérieur à la définition d’une liaison.</summary>
        <value>Liaison de canal.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsHelpPageEnabled">
      <MemberSignature Language="C#" Value="public bool HttpsHelpPageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpsHelpPageEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsHelpPageEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpsHelpPageEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si Windows Communication Foundation (WCF) retourne un fichier d’aide HTML sur HTTPS à l’adresse contrôlée par la propriété <see cref="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl" />.</summary>
        <value>
          <see langword="true" /> si un fichier d'aide HTML est retourné aux clients soumettant une requête HTTPS/GET (par exemple, à partir d'un navigateur HTML) ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Affectez la valeur <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled%2A> à la propriété `false` pour désactiver la publication d'une page d'aide HTML visible par les navigateurs HTML.  
  
 Pour vous assurer que la page d'aide HTML est publiée à l'emplacement spécifié par la propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A>, vous devez affecter à cette propriété la valeur `true` ; l'une des conditions suivantes doit également être respectée :  
  
-   La propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> est une adresse absolue qui prend en charge le schéma de protocole HTTPS.  
  
-   Il existe une adresse de base pour le service qui prend en charge le schéma de protocole HTTPS.  
  
 Bien qu'une exception soit levée si une adresse absolue qui ne prend pas en charge le schéma de protocole HTTPS est assignée à la propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A>, tout autre scénario dans lequel aucun des critères précédents n'est rempli ne lève pas d'exception et ne génère aucune page d'aide HTML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsHelpPageUrl">
      <MemberSignature Language="C#" Value="public Uri HttpsHelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpsHelpPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsHelpPageUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpsHelpPageUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'emplacement auquel un fichier HTML est publié pour être récupéré à l'aide de HTTPS.</summary>
        <value>URL basée sur HTTPS relative ou absolue du fichier d'aide HTML personnalisé que l'utilisateur visualise lorsqu'il affiche le point de terminaison à l'aide d'un navigateur HTML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> pour activer l'utilisation d'un fichier d'aide HTML personnalisé retourné par une requête HTTPS/Get, notamment à partir d'un navigateur HTML.  
  
 L'emplacement du fichier d'aide HTML est résolu comme suit :  
  
-   Si la valeur de cette propriété est une adresse relative, l'emplacement du fichier d'aide HTML correspond à la valeur de l'adresse de base du service qui prend en charge les requêtes HTTPS, plus la valeur de cette propriété.  
  
-   Si la valeur de cette propriété est une adresse absolue et prend en charge les requêtes HTTPS, l'emplacement du fichier d'aide HTML est la valeur de cette propriété.  
  
-   Si la valeur de cette propriété est absolue mais ne prend pas en charge les requêtes HTTPS, une exception est levée.  
  
 Cette propriété est appliquée uniquement si la propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled%2A> possède la valeur `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeExceptionDetailInFaults">
      <MemberSignature Language="C#" Value="public bool IncludeExceptionDetailInFaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeExceptionDetailInFaults" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeExceptionDetailInFaults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeExceptionDetailInFaults { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si les informations sur les exceptions managées doivent être incluses dans le détail des erreurs SOAP retournées au client à des fins de débogage.</summary>
        <value>
          <see langword="true" /> Si Windows Communication Foundation (WCF) retourne des informations d’exception gérées dans les erreurs SOAP à des fins ; de débogage du client dans le cas contraire, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définir le <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> propriété `true` pour indiquer à WCF pour retourner géré pour le client SOAP, les informations sur les exceptions des erreurs pour faciliter le débogage.  
  
> [!CAUTION]
>  Le retour d'informations sur les exceptions managées aux clients peut constituer un problème de sécurité, car les détails d'exception exposent des informations relatives à l'implémentation de service interne que des clients non autorisés pourraient utiliser. De plus, bien que les propriétés <xref:System.ServiceModel.Description.ServiceDebugBehavior> puissent également être définies par programme, il peut être facile d'oublier de désactiver <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> lors du déploiement.  
  
 Étant donné les problèmes de sécurité impliqués, il est vivement recommandé :  
  
-   d'utiliser un fichier de configuration d'application pour affecter à la propriété <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> la valeur `true` ;  
  
-   de ne procéder ainsi que dans des scénarios de débogage contrôlés.  
  
 Pour plus d’informations, consultez [spécification et gestion des erreurs dans les contrats et les Services](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md).  
  
   
  
## Examples  
 L’exemple de code suivant indique comment utiliser un fichier de configuration pour activer la fonctionnalité de page d’aide HTML et retourner au client des informations relatives aux exceptions dans une erreur SOAP à des fins de débogage. Ce fichier de configuration illustre les étapes de base suivantes permettant de prévoir la prise en charge des fonctionnalités <xref:System.ServiceModel.Description.ServiceDebugBehavior> :  
  
-   Étant donné que la <xref:System.ServiceModel.Description.ServiceDebugBehavior> est de type un <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> mise en œuvre, les [ &lt;service&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) élément qui représente le type de service comporte l’identificateur de la configuration de comportement de `behaviorConfiguration="metadataAndDebug"`.  
  
-   Là encore, car le <xref:System.ServiceModel.Description.ServiceDebugBehavior> est de type un <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> mise en œuvre un [ &lt;comportement&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) élément est ajouté à un [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) section. Définir le `name` attribut de la [ &lt;comportement&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) élément dont la valeur est l’identificateur de la `behaviorConfiguration` attribut de la [ &lt;service&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) élément. Dans ce cas, la valeur est `metadataAndDebug`.  
  
-   Ajouter un [ &lt;serviceDebug&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicedebug.md) élément avec les différents attributs défini sur la configuration souhaitée. Dans ce cas, les valeurs d'attribut `httpHelpPageEnabled` et `includeExceptionDetailInFaults` sont `true`.  
  
 [!code-xml[ServiceDebugBehaviorConfig#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicedebugbehaviorconfig/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Description du service.</param>
        <param name="serviceHostBase">Hôte du service.</param>
        <param name="endpoints">Points de terminaison du service.</param>
        <param name="parameters">Paramètres de liaison prenant en charge la modification des liaisons.</param>
        <summary>Implémente la méthode <see cref="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" /> afin de prendre en charge le comportement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modifie les liaisons pour prendre en charge le comportement. Pour plus d'informations, voir la méthode <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Description du service.</param>
        <param name="serviceHostBase">Hôte du service.</param>
        <summary>Implémente la méthode <see cref="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> afin de prendre en charge le comportement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Description du service.</param>
        <param name="serviceHostBase">Hôte du service.</param>
        <summary>Implémente la méthode <see cref="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> afin de prendre en charge le comportement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>