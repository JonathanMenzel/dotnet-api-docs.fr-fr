<Type Name="MetadataResolver" FullName="System.ServiceModel.Description.MetadataResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d74ae750b135b6054dad6d8ea0395fce5611640" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37456510" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class MetadataResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MetadataResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataResolver abstract sealed" />
  <TypeSignature Language="F#" Value="type MetadataResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Récupère et importe des métadonnées en tant qu'objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la classe <xref:System.ServiceModel.Description.MetadataResolver> pour importer rapidement des points de terminaison pour un service à partir de métadonnées. Cette classe télécharge et convertit les métadonnées en objets <xref:System.ServiceModel.Description.ServiceEndpoint>. Pour télécharger des métadonnées et traiter ces informations en tant que <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType>, consultez <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L'exemple de code suivant indique comment utiliser la classe <xref:System.ServiceModel.Description.MetadataResolver> pour retourner des métadonnées en tant que collection d'objets <xref:System.ServiceModel.Description.ServiceEndpoint> qui servent ensuite à se connecter à une instance de service.  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 L'exemple de code suivant met en œuvre <xref:System.ServiceModel.Description.MetadataResolver> pour télécharger et retourner des métadonnées sous forme de collection d'objets <xref:System.ServiceModel.Description.ServiceEndpoint> à l'aide d'une demande HTTP GET, au lieu de WS-Transfer.  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginResolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Commence un appel asynchrone qui résout une adresse de métadonnées en une collection d'objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour ce service.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ces méthodes commencent des versions asynchrones des méthodes <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Contrats pour lesquels des métadonnées doivent être téléchargées et résolues.</param>
        <param name="address">Adresse des métadonnées.</param>
        <param name="callback">Délégué de rappel asynchrone appelé une fois l'appel terminé.</param>
        <param name="asyncState">État associé à l'appel asynchrone.</param>
        <summary>Commence un appel asynchrone qui résout une adresse de métadonnées en objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour les contrats spécifiés, à l'aide de l'adresse, de l'état asynchrone et du délégué spécifiés.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération de résolution asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les paramètres par défaut de <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> sont utilisés pour récupérer les métadonnées et le <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> par défaut correspond à <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Pour télécharger des métadonnées sans résoudre les informations en objets <xref:System.ServiceModel.Description.ServiceEndpoint>, faites directement appel à <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Une collection vide est retournée si aucun point de terminaison n'est importé ou si aucun point de terminaison ne correspond au contrat. Si une collection vide est retournée, un suivi d’avertissement est écrit.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'adresse, le contrat ou le rappel a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> est vide, au moins un membre de <paramref name="contracts" /> a la valeur <see langword="null" /> ou <paramref name="contracts" /> contient plusieurs contrats portant le même nom et présentant le même espace de noms.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">Contrat pour lequel des métadonnées doivent être téléchargées et résolues.</param>
        <param name="address">Adresse des métadonnées.</param>
        <param name="callback">Délégué de rappel asynchrone appelé une fois l'appel terminé.</param>
        <param name="asyncState">État associé à l'appel asynchrone.</param>
        <summary>Commence un appel asynchrone qui résout une adresse de métadonnées en objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour le contrat spécifié, à l'aide de l'adresse, de l'état asynchrone et du délégué spécifiés.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération de résolution asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les paramètres par défaut de <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> sont utilisés pour récupérer les métadonnées et le <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> par défaut correspond à <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Pour télécharger des métadonnées sans résoudre les informations en objets <xref:System.ServiceModel.Description.ServiceEndpoint>, faites directement appel à <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Une collection vide est retournée si aucun point de terminaison n'est importé ou si aucun point de terminaison ne correspond au contrat. Si une collection vide est retournée, un suivi d’avertissement est écrit.  
  
 Cette méthode vous oblige à spécifier un type de contrat. Vous pouvez spécifier le contrat en déclarant l’interface de service dans le code client ou à l’aide d’un client WCF généré par Svcutil.exe. Si l’interface change (ajout d’une nouvelle opération, par exemple) vous devez mettre à jour de l’interface dans le code client ou générer un nouveau client WCF. Ne pas procéder ainsi entraîne la levée d'une exception. Supposons que vous disposiez d'un service implémentant un contrat de service appelé ICalculator qui définit Add(), Sub(), Mult() et Div(). Vous créez une application cliente et générez un client WCF. Vous ajoutez ensuite une méthode à ICalculator, appelée Echo(). Si vous écrivez ensuite une application qui appelle <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> sans générer un nouveau client WCF, vous obtenez l’exception suivante.  
  
 `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'adresse, le contrat ou le rappel a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Contrats pour lesquels des métadonnées doivent être téléchargées et résolues.</param>
        <param name="address">Adresse des métadonnées.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> utilisé pour récupérer les métadonnées.</param>
        <param name="callback">Délégué de rappel asynchrone appelé une fois l'appel terminé.</param>
        <param name="asyncState">État associé à l'appel asynchrone.</param>
        <summary>Commence un appel asynchrone qui résout une adresse de métadonnées en objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour les contrats spécifiés, à l'aide de l'adresse, du <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, de l'état asynchrone et du délégué spécifiés.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération de résolution asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> par défaut correspond à <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Pour télécharger des métadonnées sans résoudre les informations en objets <xref:System.ServiceModel.Description.ServiceEndpoint>, faites directement appel à <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Une collection vide est retournée si aucun point de terminaison n'est importé ou si aucun point de terminaison ne correspond au contrat. Si une collection vide est retournée, un suivi d’avertissement est écrit.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'adresse, le contrat, le client ou le rappel a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> est vide, au moins un membre de <paramref name="contracts" /> a la valeur null ou <paramref name="contracts" /> contient plusieurs contrats portant le même nom et le même espace de noms.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Contrats pour lesquels des métadonnées doivent être téléchargées et résolues.</param>
        <param name="address">Adresse des métadonnées.</param>
        <param name="mode">Mode de récupération.</param>
        <param name="callback">Délégué de rappel asynchrone appelé une fois l'appel terminé.</param>
        <param name="asyncState">État associé à l'appel asynchrone.</param>
        <summary>Commence un appel asynchrone qui résout une adresse de métadonnées en objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour les contrats spécifiés, à l'aide de l'adresse, de la valeur <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, de l'état asynchrone et du délégué spécifiés.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération de résolution asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les paramètres par défaut de <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> sont utilisés pour récupérer les métadonnées.  
  
 Pour télécharger des métadonnées sans résoudre les informations en objets <xref:System.ServiceModel.Description.ServiceEndpoint>, faites directement appel à <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Une collection vide est retournée si aucun point de terminaison n'est importé ou si aucun point de terminaison ne correspond au contrat. Si une collection vide est retournée, un suivi d’avertissement est écrit.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'adresse, le contrat ou le rappel a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> est vide, au moins un membre de <paramref name="contracts" /> a la valeur null ou <paramref name="contracts" /> contient plusieurs contrats portant le même nom et le même espace de noms.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">Contrat pour lequel des métadonnées doivent être téléchargées et résolues.</param>
        <param name="address">Adresse des métadonnées.</param>
        <param name="mode">Mode de récupération.</param>
        <param name="callback">Délégué de rappel asynchrone appelé une fois l'appel terminé.</param>
        <param name="asyncState">État associé à l'appel asynchrone.</param>
        <summary>Commence un appel asynchrone qui résout une adresse de métadonnées en objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour le contrat spécifié, à l'aide de l'adresse, du <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, de l'état asynchrone et du délégué spécifiés.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération de résolution asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les paramètres par défaut de <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> sont utilisés pour récupérer les métadonnées.  
  
 Pour télécharger des métadonnées sans résoudre les informations en objets <xref:System.ServiceModel.Description.ServiceEndpoint>, faites directement appel à <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Une collection vide est retournée si aucun point de terminaison n'est importé ou si aucun point de terminaison ne correspond au contrat. Si une collection vide est retournée, un suivi d’avertissement est écrit.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'adresse, le contrat ou le rappel a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Contrats pour lesquels des métadonnées doivent être téléchargées et résolues.</param>
        <param name="address">Adresse des métadonnées.</param>
        <param name="mode">Mode de récupération.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> utilisé pour récupérer les métadonnées.</param>
        <param name="callback">Délégué de rappel asynchrone appelé une fois l'appel terminé.</param>
        <param name="asyncState">État associé à l'appel asynchrone.</param>
        <summary>Commence un appel asynchrone qui résout une adresse de métadonnées en objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour les contrats spécifiés, à l'aide de l'adresse, du <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, du <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, de l'état asynchrone et du délégué spécifiés.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération de résolution asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour télécharger des métadonnées sans résoudre les informations en objets <xref:System.ServiceModel.Description.ServiceEndpoint>, faites directement appel à <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Une collection vide est retournée si aucun point de terminaison n'est importé ou si aucun point de terminaison ne correspond au contrat. Si une collection vide est retournée, un suivi d’avertissement est écrit.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'adresse, le contrat ou le rappel a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> est vide, au moins un membre de <paramref name="contracts" /> a la valeur null ou <paramref name="contracts" /> contient plusieurs contrats portant le même nom et le même espace de noms.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection EndResolve(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (result As IAsyncResult) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ EndResolve(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.EndResolve result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Objet <see cref="T:System.IAsyncResult" /> reçu d'un appel de la méthode <see cref="Overload:System.ServiceModel.Description.MetadataResolver.BeginResolve" />.</param>
        <summary>Termine un appel asynchrone pour résoudre des métadonnées en une collection de points de terminaison.</summary>
        <returns>Collection d'objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour les points de terminaison contenus dans les métadonnées.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Termine un appel asynchrone de l'une des méthodes <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Télécharge et résout une adresse de métadonnées en objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour ce service.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour télécharger des métadonnées sans résoudre les informations en objets <xref:System.ServiceModel.Description.ServiceEndpoint>, faites directement appel à <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
 Pour toutes les méthodes `Resolve` synchrones et asynchrones, une collection vide est retournée si aucun point de terminaison n'est importé ou si aucun point de terminaison ne correspond au contrat. Si une collection vide est retournée, un suivi d’avertissement est écrit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contracts">Contrats pour lesquels des métadonnées doivent être téléchargées et résolues.</param>
        <param name="address">Adresse des métadonnées.</param>
        <summary>Résout une adresse de métadonnées en objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour les contrats spécifiés à l'aide de l'adresse de métadonnées spécifiée.</summary>
        <returns>Collection d'objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour le contrat spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les paramètres par défaut de <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> sont utilisés pour récupérer les métadonnées et le <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> par défaut correspond à <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Pour télécharger des métadonnées sans résoudre les informations en objets <xref:System.ServiceModel.Description.ServiceEndpoint>, faites directement appel à <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Une collection vide est retournée si aucun point de terminaison n'est importé ou si aucun point de terminaison ne correspond au contrat. Si une collection vide est retournée, un suivi d’avertissement est écrit.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'adresse ou la collection de contrats a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> est vide, au moins un membre de <paramref name="contracts" /> a la valeur null ou <paramref name="contracts" /> contient plusieurs contrats portant le même nom et le même espace de noms.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contract">Contrats pour lesquels des métadonnées doivent être téléchargées et résolues.</param>
        <param name="address">Adresse des métadonnées.</param>
        <summary>Télécharge et résout une adresse de métadonnées en une collection d'objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour un contrat spécifique à une adresse donnée.</summary>
        <returns>Collection d'objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour le contrat spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la méthode <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> pour spécifier le contrat et l'adresse des métadonnées à utiliser lors du téléchargement et de la résolution de métadonnées.  
  
 Les paramètres par défaut de <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> sont utilisés pour récupérer les métadonnées et le <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> par défaut correspond à <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Pour télécharger des métadonnées sans résoudre les informations en objets <xref:System.ServiceModel.Description.ServiceEndpoint>, faites directement appel à <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Une collection vide est retournée si aucun point de terminaison n'est importé ou si aucun point de terminaison ne correspond au contrat. Si une collection vide est retournée, un suivi d’avertissement est écrit.  
  
 Cette méthode vous oblige à spécifier un type de contrat. Vous pouvez spécifier le contrat en déclarant l’interface de service dans le code client ou à l’aide d’un client WCF généré par Svcutil.exe. Si l’interface change (ajout d’une nouvelle opération, par exemple) vous devez mettre à jour de l’interface dans le code client ou générer un nouveau client WCF. Ne pas procéder ainsi entraîne la levée d'une exception. Supposons que vous disposiez d'un service implémentant un contrat de service appelé ICalculator qui définit Add(), Sub(), Mult() et Div(). Vous créez une application cliente et générez un client WCF. Vous ajoutez ensuite une méthode à ICalculator, appelée Echo(). Si vous écrivez ensuite une application qui appelle <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> sans générer un nouveau client WCF, vous obtenez l’exception suivante.  
  
 `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.  
  
   
  
## Examples  
 L'exemple de code suivant indique comment utiliser la classe <xref:System.ServiceModel.Description.MetadataResolver> pour retourner des métadonnées en tant que collection d'objets <xref:System.ServiceModel.Description.ServiceEndpoint> qui servent ensuite à se connecter à une instance de service.  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'adresse ou le contrat a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts">Contrats pour lesquels des métadonnées doivent être téléchargées et résolues.</param>
        <param name="address">Adresse des métadonnées.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> utilisé pour récupérer les métadonnées.</param>
        <summary>Résout une adresse de métadonnées en objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour les contrats spécifiés à l'aide de l'adresse de métadonnées et du <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> spécifiés.</summary>
        <returns>Collection d'objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour le contrat spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> par défaut correspond à <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Pour télécharger des métadonnées sans résoudre les informations en objets <xref:System.ServiceModel.Description.ServiceEndpoint>, faites directement appel à <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Une collection vide est retournée si aucun point de terminaison n'est importé ou si aucun point de terminaison ne correspond au contrat. Si une collection vide est retournée, un suivi d’avertissement est écrit.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'adresse, la collection de contrats ou le client a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> est vide, au moins un membre de <paramref name="contracts" /> a la valeur null ou <paramref name="contracts" /> contient plusieurs contrats portant le même nom et le même espace de noms.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contracts">Contrats pour lesquels des métadonnées doivent être téléchargées et résolues.</param>
        <param name="address">Adresse des métadonnées.</param>
        <param name="mode">Mode de récupération.</param>
        <summary>Résout une adresse de métadonnées en objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour les contrats spécifiés à l'aide de l'adresse de métadonnées et du mode de transfert spécifiés.</summary>
        <returns>Collection d'objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour le contrat spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les paramètres par défaut de <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> sont utilisés pour récupérer les métadonnées.  
  
 Pour télécharger des métadonnées sans résoudre les informations en objets <xref:System.ServiceModel.Description.ServiceEndpoint>, faites directement appel à <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Une collection vide est retournée si aucun point de terminaison n'est importé ou si aucun point de terminaison ne correspond au contrat. Si une collection vide est retournée, un suivi d’avertissement est écrit.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'adresse ou la collection de contrats a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> est vide, au moins un membre de <paramref name="contracts" /> a la valeur null ou <paramref name="contracts" /> contient plusieurs contrats portant le même nom et le même espace de noms.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contract">Contrat pour lequel des métadonnées doivent être téléchargées et résolues.</param>
        <param name="address">Adresse des métadonnées.</param>
        <param name="mode">Mode de récupération.</param>
        <summary>Résout une adresse de métadonnées en objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour le contrat spécifié à l'aide de l'adresse de métadonnées et du mode de transfert spécifiés.</summary>
        <returns>Collection d'objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour le contrat spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la méthode <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> pour spécifier le contrat, l'adresse et le mécanisme de téléchargement à utiliser.  
  
 Les paramètres par défaut de <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> sont utilisés pour récupérer les métadonnées.  
  
 Pour télécharger des métadonnées sans résoudre les informations en objets <xref:System.ServiceModel.Description.ServiceEndpoint>, faites directement appel à <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Une collection vide est retournée si aucun point de terminaison n'est importé ou si aucun point de terminaison ne correspond au contrat. Si une collection vide est retournée, un suivi d’avertissement est écrit.  
  
   
  
## Examples  
 L'exemple de code suivant met en œuvre <xref:System.ServiceModel.Description.MetadataResolver> pour télécharger et retourner des métadonnées sous forme de collection d'objets <xref:System.ServiceModel.Description.ServiceEndpoint> à l'aide d'une demande HTTP GET, au lieu de WS-Transfer.  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'adresse ou le contrat a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts">Contrats pour lesquels des métadonnées doivent être téléchargées et résolues.</param>
        <param name="address">Adresse des métadonnées.</param>
        <param name="mode">Mode de récupération.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> utilisé pour récupérer les métadonnées.</param>
        <summary>Résout une adresse de métadonnées en objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour les contrats spécifiés à l'aide de l'adresse de métadonnées, du mode de transfert et du client de transfert spécifiés.</summary>
        <returns>Collection d'objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> pour le contrat spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour télécharger des métadonnées sans résoudre les informations en objets <xref:System.ServiceModel.Description.ServiceEndpoint>, faites directement appel à <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Une collection vide est retournée si aucun point de terminaison n'est importé ou si aucun point de terminaison ne correspond au contrat. Si une collection vide est retournée, un suivi d’avertissement est écrit.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'adresse, la collection de contrats ou le client a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> est vide, au moins un membre de <paramref name="contracts" /> a la valeur null ou <paramref name="contracts" /> contient plusieurs contrats portant le même nom et le même espace de noms.</exception>
      </Docs>
    </Member>
  </Members>
</Type>