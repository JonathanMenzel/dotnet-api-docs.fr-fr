<Type Name="IContractBehavior" FullName="System.ServiceModel.Description.IContractBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e230854b8d92649d93bfd16f0c13ff1c71e48d2" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56772984" /></Metadata><TypeSignature Language="C#" Value="public interface IContractBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContractBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IContractBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContractBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContractBehavior" />
  <TypeSignature Language="F#" Value="type IContractBehavior = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a5d53-101">Implémente des méthodes qui permettent d'étendre un comportement d'exécution pour un contrat, que ce soit pour une application cliente ou de service.</span><span class="sxs-lookup"><span data-stu-id="a5d53-101">Implements methods that can be used to extend run-time behavior for a contract in either a service or client application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5d53-102">Implémentez l'interface <xref:System.ServiceModel.Description.IContractBehavior> pour modifier, examiner ou étendre certains aspects de l'exécution à l'échelle du contrat au niveau de l'application.</span><span class="sxs-lookup"><span data-stu-id="a5d53-102">Implement the <xref:System.ServiceModel.Description.IContractBehavior> interface to modify, examine, or extend some aspect of contract-wide execution at the application level.</span></span> <span data-ttu-id="a5d53-103">À la différence des objets <xref:System.ServiceModel.Description.IServiceBehavior> et <xref:System.ServiceModel.Description.IEndpointBehavior>, les objets <xref:System.ServiceModel.Description.IContractBehavior> ne peuvent pas être ajoutés à l'exécution à l'aide d'un fichier de configuration de l'application ; ils ne peuvent l'être que par programme ou à l'aide d'un attribut.</span><span class="sxs-lookup"><span data-stu-id="a5d53-103">Unlike <xref:System.ServiceModel.Description.IServiceBehavior> and <xref:System.ServiceModel.Description.IEndpointBehavior> objects, <xref:System.ServiceModel.Description.IContractBehavior> objects cannot be added to the runtime using an application configuration file; they can only be added programmatically or using an attribute.</span></span>  
  
 <span data-ttu-id="a5d53-104">Pour plus d’informations sur le choix entre le service, point de terminaison et comportements de contrat, consultez [configuration et extension de l’exécution des comportements](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span><span class="sxs-lookup"><span data-stu-id="a5d53-104">For more information about choosing between service, endpoint, and contract behaviors, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span></span>  
  
-   <span data-ttu-id="a5d53-105">Utilisez la méthode <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> pour fournir aux éléments de liaison des données personnalisées pour prendre en charge le comportement.</span><span class="sxs-lookup"><span data-stu-id="a5d53-105">Use the <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> method to provide binding elements with custom data to support the behavior.</span></span>  
  
-   <span data-ttu-id="a5d53-106">Utilisez la méthode <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> pour modifier, examiner ou insérer des extensions dans le contrat d’une application cliente.</span><span class="sxs-lookup"><span data-stu-id="a5d53-106">Use the <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method to modify, examine, or insert extensions to a contract in a client application.</span></span>  
  
-   <span data-ttu-id="a5d53-107">Utilisez la méthode <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> pour modifier, examiner ou insérer des extensions dans le contrat d’une application de service.</span><span class="sxs-lookup"><span data-stu-id="a5d53-107">Use the <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> method to modify, examine, or insert extensions to a contract in a service application.</span></span>  
  
-   <span data-ttu-id="a5d53-108">Utilisez la méthode <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> pour assurer qu'un contrat peut prendre en charge une fonctionnalité particulière.</span><span class="sxs-lookup"><span data-stu-id="a5d53-108">Use the <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> method to ensure that a contract can support a particular feature.</span></span>  
  
 <span data-ttu-id="a5d53-109">Les objets <xref:System.ServiceModel.Description.IContractBehavior> peuvent utiliser chacune de ces méthodes mais souvent, seule l'une d'elles est importante. Dans ce cas, les méthodes inutilisées peuvent ne retourner aucune valeur.</span><span class="sxs-lookup"><span data-stu-id="a5d53-109"><xref:System.ServiceModel.Description.IContractBehavior> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return without any value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a5d53-110">Toutes les méthodes <xref:System.ServiceModel.Description.IContractBehavior> passent <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> et <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType> comme paramètres.</span><span class="sxs-lookup"><span data-stu-id="a5d53-110">All of the <xref:System.ServiceModel.Description.IContractBehavior> methods pass <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType> as parameters.</span></span> <span data-ttu-id="a5d53-111">Ces paramètres sont présentés à titre d'examen. Si vous modifiez les objets, le comportement d'exécution n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="a5d53-111">These parameters are for examination; if you modify the objects the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="a5d53-112">Les types <xref:System.ServiceModel.Description.IContractBehavior> peuvent être utilisés sur le service, le client ou les deux.</span><span class="sxs-lookup"><span data-stu-id="a5d53-112"><xref:System.ServiceModel.Description.IContractBehavior> types can be used on either the service or the client, or both.</span></span> <span data-ttu-id="a5d53-113">Pour effectuer une tâche de personnalisation sur le service, l'objet <xref:System.ServiceModel.Description.IContractBehavior> doit être ajouté à la propriété <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> avant la construction de l'exécution de service, qui se produit lors de l'appel à la méthode <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> sur l'objet <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a5d53-113">To perform a customization task on the service, the <xref:System.ServiceModel.Description.IContractBehavior> object must be added to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the construction of the service runtime, which occurs when the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="a5d53-114">Il existe deux manières de procéder.</span><span class="sxs-lookup"><span data-stu-id="a5d53-114">There are two ways to do this.</span></span>  
  
 <span data-ttu-id="a5d53-115">La première méthode consiste à ajouter par programme le comportement de contrat personnalisé à la propriété <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> avant l'appel à la méthode <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> sur l'objet <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a5d53-115">The first method is to programmatically add the custom contract behavior to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the point when the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="a5d53-116">Lors d'une application de ce type, le comportement est appliqué pour tous les messages échangés sur ce contrat sur tous les points de terminaison.</span><span class="sxs-lookup"><span data-stu-id="a5d53-116">When applied this way, the behavior is applied for all messages flowing through that contract on any endpoint.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a5d53-117">Le comportement est appliqué à tous les contrats du même type.</span><span class="sxs-lookup"><span data-stu-id="a5d53-117">The behavior is applied to all contracts of the same type.</span></span> <span data-ttu-id="a5d53-118">Par exemple, si vous ajoutez par programme le même type de contrat à plusieurs points de terminaison, le comportement modifie tous les points de terminaison qui font référence au même objet de contrat.</span><span class="sxs-lookup"><span data-stu-id="a5d53-118">For example, if you programmatically add the same contract type to more than one endpoint, the behavior modifies all endpoints that refer to the same contract object.</span></span>  
  
 <span data-ttu-id="a5d53-119">La deuxième méthode consiste à créer un attribut personnalisé qui implémente <xref:System.ServiceModel.Description.IContractBehavior> et l'applique aux éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="a5d53-119">The second method is to create a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> and apply that to:</span></span>  
  
-   <span data-ttu-id="a5d53-120">Interface de contrat.</span><span class="sxs-lookup"><span data-stu-id="a5d53-120">A contract interface.</span></span> <span data-ttu-id="a5d53-121">Dans ce cas, le comportement est appliqué à tous les contrats de ce type de tous les points de terminaison.</span><span class="sxs-lookup"><span data-stu-id="a5d53-121">In this case, the behavior is applied to all contracts of that type in any endpoint.</span></span>  
  
-   <span data-ttu-id="a5d53-122">Classe de service.</span><span class="sxs-lookup"><span data-stu-id="a5d53-122">A service class.</span></span>  <span data-ttu-id="a5d53-123">Dans ce cas, le comportement est appliqué à tous les points de terminaison indépendamment du contrat.</span><span class="sxs-lookup"><span data-stu-id="a5d53-123">In this case, the behavior is applied to all endpoints regardless of contract.</span></span>  
  
-   <span data-ttu-id="a5d53-124">Classe de rappel.</span><span class="sxs-lookup"><span data-stu-id="a5d53-124">A callback class.</span></span>  <span data-ttu-id="a5d53-125">Dans ce cas, le comportement est appliqué au point de terminaison du client duplex.</span><span class="sxs-lookup"><span data-stu-id="a5d53-125">In this case, the behavior is applied to the duplex client's endpoint.</span></span>  
  
 <span data-ttu-id="a5d53-126">Le comportement de la deuxième approche varie légèrement si l'attribut personnalisé implémente également <xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a5d53-126">The behavior of the second approach varies slightly if the custom attribute also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a5d53-127">Dans ce cas, le comportement est le suivant :</span><span class="sxs-lookup"><span data-stu-id="a5d53-127">In this case, the behavior is as follows:</span></span>  
  
-   <span data-ttu-id="a5d53-128">Interface de contrat.</span><span class="sxs-lookup"><span data-stu-id="a5d53-128">A contract interface.</span></span> <span data-ttu-id="a5d53-129">Dans ce cas, le comportement est appliqué à tous les contrats de ce type dans n’importe quel point de terminaison et Windows Communication Foundation (WCF) ignore la valeur de la <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="a5d53-129">In this case, the behavior is applied to all contracts of that type in any endpoint and Windows Communication Foundation (WCF) ignores the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="a5d53-130">Classe de service.</span><span class="sxs-lookup"><span data-stu-id="a5d53-130">A service class.</span></span>  <span data-ttu-id="a5d53-131">Dans ce cas, le comportement n'est appliqué qu'aux points de terminaison dont le contrat est la valeur de la propriété <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a5d53-131">In this case, the behavior is applied only to endpoints the contract of which is the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="a5d53-132">Classe de rappel.</span><span class="sxs-lookup"><span data-stu-id="a5d53-132">A callback class.</span></span>  <span data-ttu-id="a5d53-133">Dans ce cas, le comportement est appliqué au point de terminaison du client duplex et WCF ignore la valeur de la <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="a5d53-133">In this case, the behavior is applied to the duplex client's endpoint and WCF ignores the value of the <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="a5d53-134">Pour effectuer la tâche de personnalisation sur le client auquel il est destiné, l’objet <xref:System.ServiceModel.Description.IContractBehavior> doit être ajouté à la propriété <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> avant la construction de l’exécution du client, qui se produit lors de l’appel à <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a5d53-134">To perform the customization task on the client for which it is intended, the <xref:System.ServiceModel.Description.IContractBehavior> object must be added to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the construction of the client runtime, which occurs when <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> is called.</span></span> <span data-ttu-id="a5d53-135">Il existe deux façons d'effectuer cette opération :</span><span class="sxs-lookup"><span data-stu-id="a5d53-135">There are two ways to do this:</span></span>  
  
-   <span data-ttu-id="a5d53-136">Par programme, ajoutez le comportement de contrat personnalisé à la propriété <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> avant l'appel du <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a5d53-136">Programmatically add the custom contract behavior to the <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> property prior to the point when the <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> is called.</span></span>  
  
-   <span data-ttu-id="a5d53-137">Créez un attribut personnalisé qui implémente également <xref:System.ServiceModel.Description.IContractBehavior>.</span><span class="sxs-lookup"><span data-stu-id="a5d53-137">Create a custom attribute that also implements <xref:System.ServiceModel.Description.IContractBehavior>.</span></span>  
  
 <span data-ttu-id="a5d53-138">Pour plus d’informations sur l’ajout par programme <xref:System.ServiceModel.Description.IContractBehavior> types pour le client ou service de l’application, consultez [configuration et extension de l’exécution des comportements](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span><span class="sxs-lookup"><span data-stu-id="a5d53-138">For more information on programmatically adding <xref:System.ServiceModel.Description.IContractBehavior> types to either the client or service application, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5d53-139">L'exemple de code suivant suppose une implémentation <xref:System.ServiceModel.Dispatcher.IInstanceProvider> personnalisée appelée `ObjectProviderBehavior`, qui fournit un comportement singleton ; elle retourne toujours la même instance de service et ne la recycle pas.</span><span class="sxs-lookup"><span data-stu-id="a5d53-139">The following code example assumes a custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> implementation called `ObjectProviderBehavior` that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</span></span>  
  
 <span data-ttu-id="a5d53-140">Pour personnaliser le fournisseur d'instances, l'exemple illustre l'implémentation d'un attribut personnalisé (`SingletonBehaviorAttribute`) qui implémente <xref:System.ServiceModel.Description.IContractBehavior> pour insérer le fournisseur d'instances de services personnalisé.</span><span class="sxs-lookup"><span data-stu-id="a5d53-140">To insert the instance provider customization, the example shows how to implement a custom attribute (`SingletonBehaviorAttribute`) that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider.</span></span> <span data-ttu-id="a5d53-141">Il implémente également <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, qui lie son utilisation au contrat `ISampleService`.</span><span class="sxs-lookup"><span data-stu-id="a5d53-141">It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to the `ISampleService` contract.</span></span>  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ContractDescription contractDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::ContractDescription ^ contractDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="iContractBehavior.AddBindingParameters (contractDescription, endpoint, bindingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractDescription" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="contractDescription"><span data-ttu-id="a5d53-142">Description de contrat à modifier.</span><span class="sxs-lookup"><span data-stu-id="a5d53-142">The contract description to modify.</span></span></param>
        <param name="endpoint"><span data-ttu-id="a5d53-143">Point de terminaison à modifier.</span><span class="sxs-lookup"><span data-stu-id="a5d53-143">The endpoint to modify.</span></span></param>
        <param name="bindingParameters"><span data-ttu-id="a5d53-144">Objets que requièrent les éléments de liaison pour prendre en charge le comportement.</span><span class="sxs-lookup"><span data-stu-id="a5d53-144">The objects that binding elements require to support the behavior.</span></span></param>
        <summary><span data-ttu-id="a5d53-145">Configure tous les éléments de liaison pour prendre en charge le comportement de contrat.</span><span class="sxs-lookup"><span data-stu-id="a5d53-145">Configures any binding elements to support the contract behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5d53-146">Implémentez la méthode <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> pour fournir aux éléments de liaison les objets supplémentaires qu’ils requièrent pour prendre en charge le comportement de contrat.</span><span class="sxs-lookup"><span data-stu-id="a5d53-146">Implement the <xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A> method to provide binding elements with the extra objects they require to support the contract behavior.</span></span>  
  
 <span data-ttu-id="a5d53-147">Cette méthode est appelée une fois pour chaque point de terminaison qui utilise le contrat de service spécifié.</span><span class="sxs-lookup"><span data-stu-id="a5d53-147">This method is called once for each endpoint that uses the specified service contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public void ApplyClientBehavior (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.ContractDescription contractDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime clientRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyClientBehavior(System::ServiceModel::Description::ContractDescription ^ contractDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ clientRuntime);" />
      <MemberSignature Language="F#" Value="abstract member ApplyClientBehavior : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit" Usage="iContractBehavior.ApplyClientBehavior (contractDescription, endpoint, clientRuntime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractDescription" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="clientRuntime" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="contractDescription"><span data-ttu-id="a5d53-148">Description de contrat auquel l’extension est destinée.</span><span class="sxs-lookup"><span data-stu-id="a5d53-148">The contract description for which the extension is intended.</span></span></param>
        <param name="endpoint"><span data-ttu-id="a5d53-149">Point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="a5d53-149">The endpoint.</span></span></param>
        <param name="clientRuntime"><span data-ttu-id="a5d53-150">Exécution du client.</span><span class="sxs-lookup"><span data-stu-id="a5d53-150">The client runtime.</span></span></param>
        <summary><span data-ttu-id="a5d53-151">Implémente une modification ou une extension du client sur l’intégralité d’un contrat.</span><span class="sxs-lookup"><span data-stu-id="a5d53-151">Implements a modification or extension of the client across a contract.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5d53-152">Implémentez la méthode <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> pour afficher, modifier ou ajouter des extensions personnalisées à l’exécution du client sur l’intégralité des messages ou pour une opération spécifique.</span><span class="sxs-lookup"><span data-stu-id="a5d53-152">Implement the <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method to view, modify, or add custom extensions to the client runtime across all messages or for one specific operation.</span></span> <span data-ttu-id="a5d53-153">Pour plus d'informations sur les personnalisations que vous pouvez effectuer avec un objet d'exécution d'un client, consultez <xref:System.ServiceModel.Dispatcher.ClientRuntime> et <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span><span class="sxs-lookup"><span data-stu-id="a5d53-153">For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span></span>  
  
 <span data-ttu-id="a5d53-154">La méthode <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> peut lever une exception <xref:System.NotImplementedException> si le comportement est uniquement destiné à une utilisation dans une application de service.</span><span class="sxs-lookup"><span data-stu-id="a5d53-154">The <xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A> method can throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a service application.</span></span>  
  
 <span data-ttu-id="a5d53-155">Cette méthode est appelée une fois pour chaque point de terminaison qui utilise le contrat de service spécifié.</span><span class="sxs-lookup"><span data-stu-id="a5d53-155">This method is called once for each endpoint that uses the specified service contract.</span></span>  
  
 <span data-ttu-id="a5d53-156">Notez que deux opérations peuvent avoir le même nom dans la description (une dans chaque direction). Par conséquent, si vous devez itérer au sein des opérations dans lesquelles le contrat est un contrat duplex, vous devez corréler la direction de message entre le point de terminaison <xref:System.ServiceModel.Dispatcher.ClientRuntime> et celui retourné par la propriété <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A>.</span><span class="sxs-lookup"><span data-stu-id="a5d53-156">Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.ClientRuntime> and that returned by the <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A> property.</span></span>  
  
 <span data-ttu-id="a5d53-157">Étant donné que d'autres comportements ont peut-être déjà ajouté ou supprimé des opérations de l'exécution, rien ne garantit que le nombre d'opérations dans les descriptions soit similaire à celui des objets <xref:System.ServiceModel.Dispatcher.ClientOperation> dans la propriété <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A>.</span><span class="sxs-lookup"><span data-stu-id="a5d53-157">Because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in the description as there are <xref:System.ServiceModel.Dispatcher.ClientOperation> objects in the <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5d53-158">L'exemple de code suivant suppose une implémentation <xref:System.ServiceModel.Dispatcher.IInstanceProvider> personnalisée appelée `ObjectProviderBehavior`, qui fournit un comportement singleton ; elle retourne toujours la même instance de service et ne la recycle pas.</span><span class="sxs-lookup"><span data-stu-id="a5d53-158">The following code example assumes a custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> implementation called `ObjectProviderBehavior` that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</span></span>  
  
 <span data-ttu-id="a5d53-159">Pour personnaliser le fournisseur d'instances, l'exemple illustre l'implémentation d'un attribut personnalisé (`SingletonBehaviorAttribute`) qui implémente <xref:System.ServiceModel.Description.IContractBehavior> pour insérer le fournisseur d'instances de services personnalisé.</span><span class="sxs-lookup"><span data-stu-id="a5d53-159">To insert the instance provider customization, the example shows how to implement a custom attribute (`SingletonBehaviorAttribute`) that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider.</span></span> <span data-ttu-id="a5d53-160">Il implémente également <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, qui lie son utilisation au contrat `ISampleService`.</span><span class="sxs-lookup"><span data-stu-id="a5d53-160">It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to the `ISampleService` contract.</span></span>  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.DispatchRuntime dispatchRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ContractDescription contractDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.DispatchRuntime dispatchRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::ContractDescription ^ contractDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::DispatchRuntime ^ dispatchRuntime);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.DispatchRuntime -&gt; unit" Usage="iContractBehavior.ApplyDispatchBehavior (contractDescription, endpoint, dispatchRuntime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractDescription" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="dispatchRuntime" Type="System.ServiceModel.Dispatcher.DispatchRuntime" />
      </Parameters>
      <Docs>
        <param name="contractDescription"><span data-ttu-id="a5d53-161">Description de contrat à modifier.</span><span class="sxs-lookup"><span data-stu-id="a5d53-161">The contract description to be modified.</span></span></param>
        <param name="endpoint"><span data-ttu-id="a5d53-162">Point de terminaison qui expose le contrat.</span><span class="sxs-lookup"><span data-stu-id="a5d53-162">The endpoint that exposes the contract.</span></span></param>
        <param name="dispatchRuntime"><span data-ttu-id="a5d53-163">Exécution de répartiteur qui contrôle l'exécution de service.</span><span class="sxs-lookup"><span data-stu-id="a5d53-163">The dispatch runtime that controls service execution.</span></span></param>
        <summary><span data-ttu-id="a5d53-164">Implémente une modification ou une extension du client sur l’intégralité d’un contrat.</span><span class="sxs-lookup"><span data-stu-id="a5d53-164">Implements a modification or extension of the client across a contract.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5d53-165">Implémentez l’élément <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> pour afficher, modifier ou ajouter des extensions personnalisées à l’exécution de service sur l’intégralité des messages dans un contrat spécifique ou pour une opération spécifique de ce contrat.</span><span class="sxs-lookup"><span data-stu-id="a5d53-165">Implement the <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> to view, modify, or add custom extensions to the service runtime across all messages in a specific contract or for one specific operation in that contract.</span></span> <span data-ttu-id="a5d53-166">Pour plus d'informations sur les personnalisations que vous pouvez effectuer dans une application de service, consultez <xref:System.ServiceModel.Dispatcher.DispatchRuntime> et <xref:System.ServiceModel.Dispatcher.DispatchOperation>.</span><span class="sxs-lookup"><span data-stu-id="a5d53-166">For details about what customizations you can perform in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime> and <xref:System.ServiceModel.Dispatcher.DispatchOperation>.</span></span>  
  
 <span data-ttu-id="a5d53-167">La méthode <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> peut lever une exception <xref:System.NotImplementedException> si le comportement est uniquement destiné à une utilisation dans une application cliente.</span><span class="sxs-lookup"><span data-stu-id="a5d53-167">The <xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A> method can throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a client application.</span></span>  
  
 <span data-ttu-id="a5d53-168">Cette méthode est appelée une fois pour chaque point de terminaison qui utilise le contrat de service spécifié.</span><span class="sxs-lookup"><span data-stu-id="a5d53-168">This method is called once for each endpoint that uses the specified service contract.</span></span>  
  
 <span data-ttu-id="a5d53-169">Notez que deux opérations peuvent avoir le même nom dans la description (une dans chaque direction). Par conséquent, si vous devez itérer au sein des opérations dans lesquelles le contrat est un contrat duplex, vous devez corréler la direction de message entre le point de terminaison <xref:System.ServiceModel.Dispatcher.DispatchRuntime> et celui retourné par la propriété <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A>.</span><span class="sxs-lookup"><span data-stu-id="a5d53-169">Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.DispatchRuntime> and that returned by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A> property.</span></span>  
  
 <span data-ttu-id="a5d53-170">De plus, étant donné que d'autres comportements ont peut-être déjà ajouté ou supprimé des opérations de l'exécution, rien ne garantit que le nombre d'opérations dans les descriptions soit similaire à celui des objets <xref:System.ServiceModel.Dispatcher.DispatchOperation> dans la propriété <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A>.</span><span class="sxs-lookup"><span data-stu-id="a5d53-170">In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <xref:System.ServiceModel.Dispatcher.DispatchOperation> objects in the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5d53-171">L'exemple de code suivant suppose une implémentation <xref:System.ServiceModel.Dispatcher.IInstanceProvider> personnalisée appelée `ObjectProviderBehavior`, qui fournit un comportement singleton ; elle retourne toujours la même instance de service et ne la recycle pas.</span><span class="sxs-lookup"><span data-stu-id="a5d53-171">The following code example assumes a custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> implementation called `ObjectProviderBehavior` that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</span></span>  
  
 <span data-ttu-id="a5d53-172">Pour personnaliser le fournisseur d'instances, l'exemple illustre l'implémentation d'un attribut personnalisé (`SingletonBehaviorAttribute`) qui implémente <xref:System.ServiceModel.Description.IContractBehavior> pour insérer le fournisseur d'instances de services personnalisé.</span><span class="sxs-lookup"><span data-stu-id="a5d53-172">To insert the instance provider customization, the example shows how to implement a custom attribute (`SingletonBehaviorAttribute`) that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider.</span></span> <span data-ttu-id="a5d53-173">Il implémente également <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, qui lie son utilisation au contrat `ISampleService`.</span><span class="sxs-lookup"><span data-stu-id="a5d53-173">It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to the `ISampleService` contract.</span></span>  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ContractDescription contractDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::ContractDescription ^ contractDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="iContractBehavior.Validate (contractDescription, endpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractDescription" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="contractDescription"><span data-ttu-id="a5d53-174">Contrat à valider.</span><span class="sxs-lookup"><span data-stu-id="a5d53-174">The contract to validate.</span></span></param>
        <param name="endpoint"><span data-ttu-id="a5d53-175">Point de terminaison à valider.</span><span class="sxs-lookup"><span data-stu-id="a5d53-175">The endpoint to validate.</span></span></param>
        <summary><span data-ttu-id="a5d53-176">Effectuez une implémentation pour confirmer que le contrat et le point de terminaison peuvent prendre en charge le contrat ou le comportement.</span><span class="sxs-lookup"><span data-stu-id="a5d53-176">Implement to confirm that the contract and endpoint can support the contract behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5d53-177">Implémentez la méthode <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> pour confirmer que la description de contrat est suffisante pour prendre en charge le comportement de contrat personnalisé.</span><span class="sxs-lookup"><span data-stu-id="a5d53-177">Implement the <xref:System.ServiceModel.Description.IContractBehavior.Validate%2A> method to confirm that the contract description is sufficient to support the custom contract behavior.</span></span> <span data-ttu-id="a5d53-178">Les implémentations peuvent inspecter la description et ne génèrent ou ne retournent aucune valeur.</span><span class="sxs-lookup"><span data-stu-id="a5d53-178">Implementations can inspect the description and either throw or return no value.</span></span>  
  
 <span data-ttu-id="a5d53-179">Cette méthode est appelée une fois pour chaque point de terminaison qui utilise le contrat de service spécifié.</span><span class="sxs-lookup"><span data-stu-id="a5d53-179">This method is called once for each endpoint that uses the specified service contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>