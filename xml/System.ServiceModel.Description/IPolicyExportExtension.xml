<Type Name="IPolicyExportExtension" FullName="System.ServiceModel.Description.IPolicyExportExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33db2e2f783f23e8ba1def6f4a04002fc62de917" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37617176" /></Metadata><TypeSignature Language="C#" Value="public interface IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPolicyExportExtension" />
  <TypeSignature Language="F#" Value="type IPolicyExportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Implémentez <see cref="T:System.ServiceModel.Description.IPolicyExportExtension" /> pour insérer des assertions de stratégie de liaisons personnalisées dans les informations Web Services Description Language (WSDL).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implémentez l'interface <xref:System.ServiceModel.Description.IPolicyExportExtension> sur un objet <xref:System.ServiceModel.Channels.BindingElement?displayProperty=nameWithType> pour écrire des instructions sur les possibilités ou les spécifications de point de terminaison dans les informations WSDL exposées par un point de terminaison particulier. En général, l’élément de liaison est celui qui implémente des fonctionnalités, mais cela n’est pas obligatoire. Pour charger votre exportateur de stratégie à partir d'un fichier de configuration, implémentez un <xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType> qui retourne l'objet <xref:System.ServiceModel.Channels.BindingElement> de l'exportateur de stratégie.  
  
 L’exportateur de stratégie est utilisé par Windows Communication Foundation (WCF) à utiliser des assertions de stratégie pour communiquer aux clients l’existence de cette fonctionnalité de spécification ou de point de terminaison de liaison personnalisée.  
  
 La méthode <xref:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy%2A> prend les objets <xref:System.ServiceModel.Description.MetadataExporter> et <xref:System.ServiceModel.Description.PolicyConversionContext>. Utilisez les méthodes <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> et <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> pour obtenir des collections d'assertions de stratégie qui ont déjà été exportées à différentes portées. Ajoutez ensuite votre objet d’assertions de stratégie personnalisées à la collection appropriée.  
  
 La propriété <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> expose la <xref:System.ServiceModel.Description.ContractDescription> du point de terminaison qui est en cours d'exportation. Cela permet à l'extension <xref:System.ServiceModel.Description.IPolicyExportExtension> de limiter correctement la portée de ses assertions de stratégie exportées. Par exemple, les attributs de sécurité du code peuvent ajouter des comportements à la <xref:System.ServiceModel.Description.ContractDescription> qui indique l'emplacement où les assertions de stratégie de sécurité doivent être ajoutées.  
  
 Le mécanisme <xref:System.ServiceModel.Description.IPolicyExportExtension> ne prend en charge que les assertions de stratégie d'exportation de WSDL. Pour exporter des éléments WSDL personnalisés, vous devez utiliser le mécanisme <xref:System.ServiceModel.Description.IWsdlExportExtension> afin de modifier WSDL directement.  
  
 Une fois que les assertions de stratégie personnalisées ont été attachées aux informations WSDL, les clients peuvent détecter et importer les assertions de liaison personnalisées à l'aide d'un objet <xref:System.ServiceModel.Description.IPolicyImportExtension>.  
  
   
  
## Examples  
 L'exemple de code suivant montre l'implémentation de l'<xref:System.ServiceModel.Description.IPolicyExportExtension> sur un <xref:System.ServiceModel.Channels.BindingElement>. Dans cet exemple, un élément de liaison personnalisé est attaché au fichier WSDL au niveau de la liaison.  
  
 [!code-csharp[CustomPolicySample#14](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyexporter.cs#14)]
 [!code-vb[CustomPolicySample#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyexporter.vb#14)]  
  
 L'exemple de code suivant montre une implémentation <xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType> qui permet à l'exportateur de stratégie précédent d'être chargé à partir d'un fichier de configuration de l'application.  
  
 [!code-csharp[CustomPolicySample#15](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyexporter.cs#15)]
 [!code-vb[CustomPolicySample#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyexporter.vb#15)]  
  
 L'exemple suivant montre le fichier de configuration d'hôte qui charge l'exportateur de stratégie personnalisé.  
  
 [!code-xml[CustomPolicySample#3](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/app.config#3)]   
  
 L'exemple suivant montre l'assertion personnalisée dans le fichier WSDL.  
  
 [!code-xml[CustomPolicySample#16](~/samples/snippets/common/VS_Snippets_CFX/custompolicysample/common/tempuri.org.wsdl#16)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportPolicy">
      <MemberSignature Language="C#" Value="public void ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="iPolicyExportExtension.ExportPolicy (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter"><see cref="T:System.ServiceModel.Description.MetadataExporter" /> que vous pouvez utiliser pour modifier le processus d'exportation.</param>
        <param name="context"><see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> que vous pouvez utiliser pour insérer votre assertion de stratégie personnalisée.</param>
        <summary>Effectuez une implémentation pour inclure l’exportation d’une assertion de stratégie personnalisée sur les liaisons.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez les méthodes <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> et <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> pour obtenir des collections d'assertions de stratégie qui ont déjà été exportées à différentes portées. Ajoutez ensuite votre objet <xref:System.ServiceModel.Description.IPolicyExportExtension> à la collection appropriée.  
  
   
  
## Examples  
 L'exemple de code suivant montre l'implémentation de l'<xref:System.ServiceModel.Description.IPolicyExportExtension> sur un <xref:System.ServiceModel.Channels.BindingElement>. Dans cet exemple, un élément de liaison personnalisé est attaché au fichier WSDL au niveau de la liaison.  
  
 [!code-csharp[CustomPolicySample#14](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyexporter.cs#14)]
 [!code-vb[CustomPolicySample#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyexporter.vb#14)]  
  
 L'exemple de code suivant montre une implémentation <xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType> qui permet à l'exportateur de stratégie précédent d'être chargé à partir d'un fichier de configuration de l'application.  
  
 [!code-csharp[CustomPolicySample#15](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyexporter.cs#15)]
 [!code-vb[CustomPolicySample#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyexporter.vb#15)]  
  
 L'exemple suivant montre le fichier de configuration d'hôte qui charge l'exportateur de stratégie personnalisé.  
  
 [!code-xml[CustomPolicySample#3](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/app.config#3)]   
  
 L'exemple suivant montre l'assertion personnalisée dans le fichier WSDL.  
  
 [!code-xml[CustomPolicySample#16](~/samples/snippets/common/VS_Snippets_CFX/custompolicysample/common/tempuri.org.wsdl#16)]    
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>