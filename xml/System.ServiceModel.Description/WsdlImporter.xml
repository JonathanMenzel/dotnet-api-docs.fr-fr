<Type Name="WsdlImporter" FullName="System.ServiceModel.Description.WsdlImporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="615a8aeb7b59399739f939ed6a32dee234359730" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39849373" /></Metadata><TypeSignature Language="C#" Value="public class WsdlImporter : System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WsdlImporter extends System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.WsdlImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class WsdlImporter&#xA;Inherits MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class WsdlImporter : System::ServiceModel::Description::MetadataImporter" />
  <TypeSignature Language="F#" Value="type WsdlImporter = class&#xA;    inherit MetadataImporter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.MetadataImporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Importe des métadonnées WSDL (Web Services Description Language) 1.1 avec des pièces jointes WS-Policy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la classe <xref:System.ServiceModel.Description.WsdlImporter> pour importer des métadonnées et convertir ces informations en différentes classes représentant les informations de contrat et de point de terminaison.  
  
 La classe de base de <xref:System.ServiceModel.Description.WsdlImporter>, la classe <xref:System.ServiceModel.Description.MetadataImporter>, définit des méthodes permettant d'importer sélectivement des informations de contrat et de point de terminaison ainsi que des propriétés qui exposent toute erreur d'importation et accepte des informations de types liées au processus d'importation et de conversion. Le type <xref:System.ServiceModel.Description.WsdlImporter> utilise les importateurs de stratégie personnalisés (implémentations <xref:System.ServiceModel.Description.IPolicyImportExtension>) issus de son type parent pour gérer les instructions de stratégie personnalisées et ses propres importateurs WSDL personnalisés (implémentations <xref:System.ServiceModel.Description.IWsdlImportExtension>) pour gérer les éléments WSDL personnalisés. Pour plus d’informations, consultez [extension du système de métadonnées](~/docs/framework/wcf/extending/extending-the-metadata-system.md).  
  
 Lors de l'importation d'une stratégie à partir de documents WSDL, le type <xref:System.ServiceModel.Description.WsdlImporter> essaie jusqu'à 32 combinaisons d'alternatives de stratégie attachées aux différents sujets de stratégie WSDL.  Si aucune combinaison n’est correctement importée, la première combinaison est utilisée pour construire une liaison personnalisée partielle.  
  
 Outre ces méthodes et ces propriétés, <xref:System.ServiceModel.Description.WsdlImporter> implémente également des méthodes prenant en charge l'importation des informations et des propriétés de liaison donnant accès aux documents de stratégie, aux documents WSDL, aux extensions WSDL et aux documents de schéma XML. Pour plus d'informations sur l'extension de <xref:System.ServiceModel.Description.WsdlImporter> afin de prendre en charge les éléments WSDL personnalisés, consultez <xref:System.ServiceModel.Description.IWsdlImportExtension>.  
  
 En règle générale, la classe <xref:System.ServiceModel.Description.WsdlImporter> est utilisée dans un processus à trois étapes.  
  
1.  Créer un objet <xref:System.ServiceModel.Description.WsdlImporter> et passer un objet <xref:System.ServiceModel.Description.MetadataSet> au constructeur.  
  
2.  Appeler la méthode `Import` appropriée pour récupérer les résultats.  
  
3.  Consulter la propriété <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> pour vérifier la présence éventuelle d'erreurs d'importation.  
  
> [!NOTE]
>  Lors de l'importation de types de port WSDL, si le QName du type de port correspond à une entrée du dictionnaire <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A>, le type de port n'est pas importé et le contrat connu est utilisé à la place.  
  
 Aucune valeur n'est retournée par les propriétés <xref:System.ServiceModel.Description.WsdlImporter> jusqu'à ce que l'une des méthodes d'importation soit appelée. Custom <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> objets peuvent être chargés dans le <xref:System.ServiceModel.Description.WsdlImporter> par programmation ou à l’aide de la configuration du client [ &lt;wsdlImporters&gt; ](~/docs/framework/configure-apps/file-schema/wcf/wsdlimporters.md) élément.  
  
 Les métadonnées importées en tant que points de terminaison de service ne peuvent pas servir à créer une exécution ou à exporter des métadonnées, car les points de terminaison importés ne contiennent pas d'informations sur les types managés. Pour utiliser les métadonnées afin de créer une exécution de client ou de service ou de générer des métadonnées, vous devez d'abord générer et compiler le code des métadonnées et utiliser ces informations de type pour créer un objet <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> à l'aide de <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.  
  
   
  
## Examples  
 L'exemple de code suivant indique comment utiliser <xref:System.ServiceModel.Description.WsdlImporter> pour ajouter un <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType> personnalisé, importer tous les contrats, les compiler et les enregistrer dans un fichier.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.WsdlImporter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter metadata" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
      </Parameters>
      <Docs>
        <param name="metadata">Collection de documents de métadonnées desquels les informations de contrat, de point de terminaison et de liaison doivent être extraites.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.WsdlImporter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le constructeur <xref:System.ServiceModel.Description.WsdlImporter.%23ctor%2A> pour créer un objet <xref:System.ServiceModel.Description.WsdlImporter> à partir d'un jeu de documents de métadonnées.  
  
   
  
## Examples  
 L'exemple de code suivant illustre l'utilisation la plus courante de la classe <xref:System.ServiceModel.Description.WsdlImporter> avec la classe <xref:System.ServiceModel.Description.MetadataResolver>.  
  
 [!code-csharp[C_CustomWSDLExtensions#10](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet * seq&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; * seq&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter (metadata, policyImportExtensions, wsdlImportExtensions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
      </Parameters>
      <Docs>
        <param name="metadata">Métadonnées téléchargées.</param>
        <param name="policyImportExtensions">Importateurs de stratégie personnalisés servant à importer les instructions de stratégie personnalisées.</param>
        <param name="wsdlImportExtensions">Importateurs WSDL personnalisés servant à importer les éléments WSDL personnalisés.</param>
        <summary>Crée un objet <see cref="T:System.ServiceModel.Description.WsdlImporter" /> à partir des métadonnées, des importateurs de stratégie personnalisés et des importateurs WSDL personnalisés spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour déterminer les métadonnées à importer, ainsi que les importateurs de stratégie et WSDL à utiliser.  
  
> [!NOTE]
>  Si des importateurs de stratégie ou WSDL personnalisés sont passés à ce constructeur, aucun importateur personnalisé spécifié dans les fichiers de configuration de l'application n'est chargé. Si vous souhaitez ajouter un importateur personnalisé, vous devez reconstruire les collections d'importateurs avant d'utiliser ce constructeur. Consultez la section Exemple.  
  
   
  
## Examples  
 L'exemple de code suivant indique comment ajouter un nouvel importateur WSDL personnalisé (`WSDLDocumentationImporter`) au jeu d'importateurs par défaut avant d'utiliser l'objet <xref:System.ServiceModel.Description.WsdlImporter>.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'argument <paramref name="metadata" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, System.ServiceModel.Description.MetadataImporterQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, class System.ServiceModel.Description.MetadataImporterQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension},System.ServiceModel.Description.MetadataImporterQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension), quotas As MetadataImporterQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions, System::ServiceModel::Description::MetadataImporterQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet * seq&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; * seq&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; * System.ServiceModel.Description.MetadataImporterQuotas -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter (metadata, policyImportExtensions, wsdlImportExtensions, quotas)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
        <Parameter Name="quotas" Type="System.ServiceModel.Description.MetadataImporterQuotas" />
      </Parameters>
      <Docs>
        <param name="metadata">Métadonnées téléchargées.</param>
        <param name="policyImportExtensions">Importateurs de stratégie personnalisés servant à importer les instructions de stratégie personnalisées.</param>
        <param name="wsdlImportExtensions">Importateurs WSDL personnalisés servant à importer les éléments WSDL personnalisés.</param>
        <param name="quotas">La quantité de métadonnées à récupérer simultanément</param>
        <summary>Crée un objet <see cref="T:System.ServiceModel.Description.WsdlImporter" /> à partir des métadonnées, des importateurs de stratégie personnalisés et des importateurs WSDL personnalisés spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour déterminer les métadonnées à importer, ainsi que les importateurs de stratégie et WSDL à utiliser.  
  
> [!NOTE]
>  Si des importateurs de stratégie ou WSDL personnalisés sont passés à ce constructeur, aucun importateur personnalisé spécifié dans les fichiers de configuration de l'application n'est chargé. Si vous souhaitez ajouter un importateur personnalisé, vous devez reconstruire les collections d'importateurs avant d'utiliser ce constructeur. Consultez la section Exemple.  
  
   
  
## Examples  
 L'exemple de code suivant indique comment ajouter un nouvel importateur WSDL personnalisé (`WSDLDocumentationImporter`) au jeu d'importateurs par défaut avant d'utiliser l'objet <xref:System.ServiceModel.Description.WsdlImporter>.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'argument <paramref name="metadata" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllBindings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt; ImportAllBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Channels.Binding&gt; ImportAllBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportAllBindings () As Collection(Of Binding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Channels::Binding ^&gt; ^ ImportAllBindings();" />
      <MemberSignature Language="F#" Value="member this.ImportAllBindings : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;" Usage="wsdlImporter.ImportAllBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un jeu d'objets <see cref="T:System.ServiceModel.Channels.Binding" /> importés à partir des documents de métadonnées.</summary>
        <returns>Jeu d'objets <see cref="T:System.ServiceModel.Channels.Binding" /> importés à partir des documents de métadonnées.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la méthode <xref:System.ServiceModel.Description.WsdlImporter.ImportAllBindings%2A> pour importer toutes les informations de liaison à partir des documents de métadonnées et les retourner en tant qu'objets <xref:System.ServiceModel.Channels.Binding>. Consultez la propriété <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> pour vérifier la présence éventuelle d'erreurs d'importation avant d'utiliser les objets retournés.  
  
 Pour importer une liaison WSDL spécifique, consultez la méthode <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> a rencontré une erreur.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberSignature Language="F#" Value="override this.ImportAllContracts : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;" Usage="wsdlImporter.ImportAllContracts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un jeu d'objets <see cref="T:System.ServiceModel.Description.ContractDescription" /> qui représentent les informations sur les types de port dans les documents de métadonnées.</summary>
        <returns>Jeu d'objets <see cref="T:System.ServiceModel.Description.ContractDescription" /> qui représentent les informations sur les types de port dans les documents de métadonnées.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la méthode <xref:System.ServiceModel.Description.WsdlImporter.ImportAllContracts%2A> pour importer toutes les informations sur les types de port WSDL à partir des documents de métadonnées et les retourner en tant qu'objets <xref:System.ServiceModel.Description.ContractDescription>. Il est recommandé de consulter la propriété <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> pour vérifier la présence éventuelle d'erreurs d'importation avant d'utiliser les objets retournés.  
  
 Pour importer un seul type de port, consultez la méthode <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A>.  
  
   
  
## Examples  
 L'exemple de code suivant indique comment utiliser <xref:System.ServiceModel.Description.WsdlImporter> pour ajouter un <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType> personnalisé, importer tous les contrats, les compiler et les enregistrer dans un fichier.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> a rencontré une erreur.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberSignature Language="F#" Value="override this.ImportAllEndpoints : unit -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportAllEndpoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> qui représente les points de terminaison dans les documents WSDL.</summary>
        <returns><see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> qui représente les points de terminaison dans les documents WSDL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la méthode <xref:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints%2A> pour importer toutes les informations sur le point de terminaison à partir des documents de métadonnées et les retourner en tant que collection d'objets <xref:System.ServiceModel.Description.ServiceEndpoint>. Consultez la propriété <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> pour vérifier la présence éventuelle d'erreurs d'importation avant d'utiliser les objets retournés.  
  
 Pour importer uniquement un port WSDL donné, consultez la méthode <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> a rencontré une erreur.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding ImportBinding (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Binding ImportBinding(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportBinding(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportBinding (wsdlBinding As Binding) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Binding ^ ImportBinding(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberSignature Language="F#" Value="member this.ImportBinding : System.Web.Services.Description.Binding -&gt; System.ServiceModel.Channels.Binding" Usage="wsdlImporter.ImportBinding wsdlBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">Objet <see cref="T:System.Web.Services.Description.Binding" /> qui représente les informations de liaison dans un fichier de métadonnées.</param>
        <summary>Retourne un objet <see cref="T:System.ServiceModel.Channels.Binding" /> qui représente les informations de liaison issues d'un jeu de documents de métadonnées.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Binding" /> qui représente les informations de liaison issues d'un jeu de documents de métadonnées.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la méthode <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A> pour utiliser un objet <xref:System.Web.Services.Description.Binding?displayProperty=nameWithType> afin de localiser les informations de liaison dans les métadonnées et retourner ces informations de liaison en tant qu'objet <xref:System.ServiceModel.Channels.Binding?displayProperty=nameWithType>. Consultez la propriété <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> pour vérifier la présence éventuelle d'erreurs d'importation avant d'utiliser l'objet retourné.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> a rencontré une erreur.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="wsdlBinding" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportContract">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ContractDescription ImportContract (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ContractDescription ImportContract(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportContract(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportContract (wsdlPortType As PortType) As ContractDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ContractDescription ^ ImportContract(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberSignature Language="F#" Value="member this.ImportContract : System.Web.Services.Description.PortType -&gt; System.ServiceModel.Description.ContractDescription" Usage="wsdlImporter.ImportContract wsdlPortType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ContractDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">Objet <see cref="T:System.Web.Services.Description.PortType" /> qui représente le type de port souhaité.</param>
        <summary>Retourne un objet <see cref="T:System.ServiceModel.Description.ContractDescription" /> qui représente les métadonnées localisées par les informations sur le type de port spécifié.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Description.ContractDescription" /> qui représente les métadonnées localisées par les informations sur le type de port spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la méthode <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A> pour utiliser un objet <xref:System.Web.Services.Description.PortType?displayProperty=nameWithType> afin de localiser les informations sur les types de port dans les métadonnées et retourner ces informations en tant qu'objet <xref:System.ServiceModel.Description.ContractDescription>. Consultez la propriété <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> pour vérifier la présence éventuelle d'erreurs d'importation avant d'utiliser l'objet retourné.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> a rencontré une erreur.</exception>
        <exception cref="T:System.ArgumentNullException">Le type de port a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint ImportEndpoint (System.Web.Services.Description.Port wsdlPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint ImportEndpoint(class System.Web.Services.Description.Port wsdlPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoint(System.Web.Services.Description.Port)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoint (wsdlPort As Port) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ ImportEndpoint(System::Web::Services::Description::Port ^ wsdlPort);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoint : System.Web.Services.Description.Port -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="wsdlImporter.ImportEndpoint wsdlPort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPort" Type="System.Web.Services.Description.Port" />
      </Parameters>
      <Docs>
        <param name="wsdlPort">Objet <see cref="T:System.Web.Services.Description.Port" /> qui représente les informations sur le port WSDL souhaité.</param>
        <summary>Retourne un <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> issu d'un jeu de documents de métadonnées qui utilise des informations de l'objet <see cref="T:System.Web.Services.Description.Port" /> spécifié.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> qui représente les informations sur le port WSDL spécifié dans les documents de métadonnées.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la méthode <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A> pour utiliser un objet <xref:System.Web.Services.Description.Port?displayProperty=nameWithType> afin de localiser les informations sur les types de port dans les métadonnées et retourner ces informations en tant qu'objet <xref:System.ServiceModel.Description.ServiceEndpoint>. Consultez la propriété <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> pour vérifier la présence éventuelle d'erreurs d'importation avant d'utiliser l'objet retourné.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> a rencontré une erreur.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="wsdlPort" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportEndpoints">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne une collection d'objets <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> qui correspond à tous les ports WSDL utilisant une liaison précisée, associés à un type de port donné ou faisant partie d'un service WSDL spécifique.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlBinding As Binding) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.Binding -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">Objet <see cref="T:System.Web.Services.Description.Binding" /> utilisé dans un port WSDL.</param>
        <summary>Retourne un <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> qui représente tous les types de port WSDL qui utilisent le <see cref="T:System.Web.Services.Description.Binding" /> spécifié.</summary>
        <returns><see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> qui représente tous les types de port WSDL qui utilisent le <see cref="T:System.Web.Services.Description.Binding" /> spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consultez la propriété <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> pour vérifier la présence éventuelle d'erreurs d'importation avant d'utiliser l'objet retourné.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> a rencontré une erreur.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="wsdlBinding" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlPortType As PortType) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.PortType -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlPortType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">Objet <see cref="T:System.Web.Services.Description.PortType" /> utilisé pour rechercher des informations associées sur les ports WSDL.</param>
        <summary>Retourne un <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> qui représente tous les types de port WSDL associés au <see cref="T:System.Web.Services.Description.PortType" /> spécifié.</summary>
        <returns><see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> qui représente tous les types de port WSDL associés au <see cref="T:System.Web.Services.Description.PortType" /> spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consultez la propriété <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> pour vérifier la présence éventuelle d'erreurs d'importation avant d'utiliser l'objet retourné.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> a rencontré une erreur.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="wsdlPortType" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Service wsdlService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Service wsdlService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Service)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlService As Service) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Service ^ wsdlService);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.Service -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlService" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlService" Type="System.Web.Services.Description.Service" />
      </Parameters>
      <Docs>
        <param name="wsdlService">Objet <see cref="T:System.Web.Services.Description.Service" /> dans lequel des informations sur les ports WSDL doivent être recherchées.</param>
        <summary>Retourne un <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> qui représente tous les types de port WSDL situés dans le <see cref="T:System.Web.Services.Description.Service" /> spécifié.</summary>
        <returns><see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> qui représente tous les types de port WSDL situés dans le <see cref="T:System.Web.Services.Description.Service" /> spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consultez la propriété <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> pour vérifier la présence éventuelle d'erreurs d'importation avant d'utiliser l'objet retourné.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> a rencontré une erreur.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="wsdlService" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WsdlDocuments">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlDocuments As ServiceDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ServiceDescriptionCollection ^ WsdlDocuments { System::Web::Services::Description::ServiceDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WsdlDocuments : System.Web.Services.Description.ServiceDescriptionCollection" Usage="System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un jeu d'objets <see cref="T:System.Web.Services.Description.ServiceDescription" /> qui décrivent les informations de contrat dans les documents de métadonnées.</summary>
        <value>Collection d'objets <see cref="T:System.Web.Services.Description.ServiceDescription" /> qui décrivent les informations de contrat dans les documents de métadonnées.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propriété <xref:System.ServiceModel.Description.WsdlImporter.WsdlDocuments%2A> n'est remplie que lorsqu'une méthode d'importation est appelée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WsdlImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlImportExtensions As KeyedByTypeCollection(Of IWsdlImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ WsdlImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WsdlImportExtensions : System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" Usage="System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un jeu d'objets <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> servant à importer des informations WSDL personnalisées.</summary>
        <value>Jeu d'objets <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> servant à importer des informations WSDL personnalisées.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la propriété <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A> pour ajouter ou supprimer des importateurs WSDL personnalisés.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet XmlSchemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet XmlSchemas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlSchemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ XmlSchemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemas : System.Xml.Schema.XmlSchemaSet" Usage="System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un jeu d'objets <see cref="T:System.Xml.Schema.XmlSchema" /> qui décrivent les types dans les métadonnées.</summary>
        <value>Jeu d'objets <see cref="T:System.Xml.Schema.XmlSchema" /> qui décrivent les types dans les métadonnées.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété n'est remplie que lorsqu'une des méthodes d'importation est appelée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>