<Type Name="ServiceHealthBehaviorBase" FullName="System.ServiceModel.Description.ServiceHealthBehaviorBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f1238794d325b5111bda786bb7a2ec9e5880e4e2" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55371626" /></Metadata><TypeSignature Language="C#" Value="public abstract class ServiceHealthBehaviorBase : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ServiceHealthBehaviorBase extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceHealthBehaviorBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServiceHealthBehaviorBase&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHealthBehaviorBase abstract : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceHealthBehaviorBase = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0add6-101">Sert de classe de base pour un comportement de service WCF (Windows Communication Foundation) qui fournit un point de terminaison d’intégrité.</span><span class="sxs-lookup"><span data-stu-id="0add6-101">Serves as the base class for a Windows Communication Foundation (WCF) service behavior that provides a health endpoint.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceHealthBehaviorBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceHealthBehaviorBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0add6-102">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.ServiceHealthBehaviorBase" />.</span><span class="sxs-lookup"><span data-stu-id="0add6-102">Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceHealthBehaviorBase" /> class.</span></span></summary>
        <remarks><span data-ttu-id="0add6-103">Ce constructeur est <see langword="protected" />; elle peut uniquement être appelée à partir d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="0add6-103">This constructor is <see langword="protected" />; it can only be called from a derived class.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleHealthRequest">
      <MemberSignature Language="C#" Value="public abstract void HandleHealthRequest (System.ServiceModel.ServiceHostBase serviceHost, System.ServiceModel.Channels.Message httpGetRequest, string[] queries, out System.ServiceModel.Channels.Message replyMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleHealthRequest(class System.ServiceModel.ServiceHostBase serviceHost, class System.ServiceModel.Channels.Message httpGetRequest, string[] queries, [out] class System.ServiceModel.Channels.Message&amp; replyMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.HandleHealthRequest(System.ServiceModel.ServiceHostBase,System.ServiceModel.Channels.Message,System.String[],System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub HandleHealthRequest (serviceHost As ServiceHostBase, httpGetRequest As Message, queries As String(), ByRef replyMessage As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void HandleHealthRequest(System::ServiceModel::ServiceHostBase ^ serviceHost, System::ServiceModel::Channels::Message ^ httpGetRequest, cli::array &lt;System::String ^&gt; ^ queries, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % replyMessage);" />
      <MemberSignature Language="F#" Value="abstract member HandleHealthRequest : System.ServiceModel.ServiceHostBase * System.ServiceModel.Channels.Message * string[] *  -&gt; unit" Usage="serviceHealthBehaviorBase.HandleHealthRequest (serviceHost, httpGetRequest, queries, replyMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="httpGetRequest" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="queries" Type="System.String[]" />
        <Parameter Name="replyMessage" Type="System.ServiceModel.Channels.Message" RefType="out" />
      </Parameters>
      <Docs>
        <param name="serviceHost"><span data-ttu-id="0add6-104">Hôte du service.</span><span class="sxs-lookup"><span data-stu-id="0add6-104">The service host.</span></span></param>
        <param name="httpGetRequest"><span data-ttu-id="0add6-105">Requête HTTP/Get ou HTTPS/Get.</span><span class="sxs-lookup"><span data-stu-id="0add6-105">The HTTP/Get or HTTPS/Get request.</span></span></param>
        <param name="queries"><span data-ttu-id="0add6-106">Variables contenues dans la chaîne de requête.</span><span class="sxs-lookup"><span data-stu-id="0add6-106">The variables in the query string.</span></span></param>
        <param name="replyMessage"><span data-ttu-id="0add6-107">Réponse.</span><span class="sxs-lookup"><span data-stu-id="0add6-107">The response .</span></span></param>
        <summary><span data-ttu-id="0add6-108">Traite une requête HTTP/Get ou HTTPS/Get et retourne une réponse.</span><span class="sxs-lookup"><span data-stu-id="0add6-108">Processes an HTTP/Get or HTTPS/Get request and returns a response.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthDetailsEnabled">
      <MemberSignature Language="C#" Value="public bool HealthDetailsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HealthDetailsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HealthDetailsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HealthDetailsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HealthDetailsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HealthDetailsEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HealthDetailsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0add6-109">Obtient ou définit une valeur qui spécifie si le point de terminaison d’intégrité doit retourner les détails du service ou si la réponse ne doit contenir aucun contenu.</span><span class="sxs-lookup"><span data-stu-id="0add6-109">Gets or sets a value that specifies if the health endpoint should return the service details or if the response should contain no content.</span></span></summary>
        <value><span data-ttu-id="0add6-110">Une valeur qui spécifie si le point de terminaison d’intégrité doit retourner les détails du service ou si la réponse ne doit contenir aucun contenu.</span><span class="sxs-lookup"><span data-stu-id="0add6-110">A value that specifies if the health endpoint should return the service details or if the response should contain no content.</span></span> <span data-ttu-id="0add6-111">Sa valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0add6-111">Its default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0add6-112">Obtient ou définit la liaison utilisée pour la récupération de l’intégrité par le biais d’une requête HTTP/Get.</span><span class="sxs-lookup"><span data-stu-id="0add6-112">Gets or sets the binding that is used for health retrieval via an HTTP/Get request.</span></span></summary>
        <value><span data-ttu-id="0add6-113">La liaison utilisée pour la récupération de l’intégrité via une requête HTTP/Get.</span><span class="sxs-lookup"><span data-stu-id="0add6-113">The binding used for health retrieval via an HTTP/Get request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="0add6-114">Définition de cette propriété est facultative.</span><span class="sxs-lookup"><span data-stu-id="0add6-114">Setting this property is optional.</span></span> <span data-ttu-id="0add6-115">Si elle n’est pas définie, les liaisons par défaut sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="0add6-115">If it is not set, the default bindings are used.</span></span> 

<span data-ttu-id="0add6-116">Seules les liaisons avec des éléments de liaison internes qui prennent en charge <xref:System.ServiceModel.Channels.IReplyChannel> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="0add6-116">Only bindings with inner binding elements that support <xref:System.ServiceModel.Channels.IReplyChannel> are supported.</span></span> <span data-ttu-id="0add6-117">En outre, le <xref:System.ServiceModel.Channels.Binding.MessageVersion> propriété de la liaison doit être <xref:System.ServiceModel.Channels.MessageVersion.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0add6-117">In addition, the <xref:System.ServiceModel.Channels.Binding.MessageVersion> property of the binding must be <xref:System.ServiceModel.Channels.MessageVersion.None?displayProperty=nameWithType>.</span></span>

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0add6-118">Dans une opération ensembliste, l’Url de l’argument <see cref="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetUrl" /> doit être relative ou son schéma doit être « HTTP ».</span><span class="sxs-lookup"><span data-stu-id="0add6-118">In a set operation, the Url of the <see cref="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetUrl" /> argument must be relative or its scheme must be "HTTP".</span></span>

<span data-ttu-id="0add6-119">ou</span><span class="sxs-lookup"><span data-stu-id="0add6-119">-or-</span></span>

<span data-ttu-id="0add6-120">La version du message est incorrecte.</span><span class="sxs-lookup"><span data-stu-id="0add6-120">The message version is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpGetEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0add6-121">Obtient ou définit une valeur qui indique si les métadonnées du service doivent être publiées pour être récupérées à l'aide d'une requête HTTP/Get.</span><span class="sxs-lookup"><span data-stu-id="0add6-121">Gets or sets a value that specifies whether to publish service metadata for retrieval using an HTTP/Get request.</span></span></summary>
        <value><span data-ttu-id="0add6-122">Une valeur qui spécifie s’il faut publier les métadonnées de service pour extraction à l’aide d’une requête HTTP/Get.</span><span class="sxs-lookup"><span data-stu-id="0add6-122">A value that specifies whether to publish service metadata for retrieval using an HTTP/Get request.</span></span> <span data-ttu-id="0add6-123">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0add6-123">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="0add6-124">Si le `httpGetUrl` attribut n’est pas spécifié, l’adresse à laquelle les métadonnées sont publiées est le service adresse plus (+) » ? l’intégrité ».</span><span class="sxs-lookup"><span data-stu-id="0add6-124">If the `httpGetUrl` attribute is not specified, the address to which the metadata is published is the service address plus "?health".</span></span> <span data-ttu-id="0add6-125">Par exemple, si l’adresse du service est `http://localhost:8080/CalculatorService`, l’adresse de métadonnées HTTP/Get est `http://localhost:8080/CalculatorService?health`.</span><span class="sxs-lookup"><span data-stu-id="0add6-125">For example, if the service address is `http://localhost:8080/CalculatorService`, the HTTP/Get metadata address is `http://localhost:8080/CalculatorService?health`.</span></span>

<span data-ttu-id="0add6-126">Si cette propriété est `false`, ou si l’adresse du service n’est pas basé sur HTTP ou HTTPS, « ? intégrité » est ignoré.</span><span class="sxs-lookup"><span data-stu-id="0add6-126">If this property is `false`, or if the address of the service is not based on HTTP or HTTPS, "?health" is ignored.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0add6-127">Obtient ou définit un Uri qui spécifie l’adresse à laquelle les métadonnées sont publiées pour être récupérées à l’aide d’une requête HTTP/Get.</span><span class="sxs-lookup"><span data-stu-id="0add6-127">Gets or sets a Uri that specifes the address to which metadata is published for retrieval using an HTTP/Get request.</span></span></summary>
        <value><span data-ttu-id="0add6-128">L’adresse à laquelle les métadonnées sont publiée pour récupération à l’aide d’une requête HTTP/Get.</span><span class="sxs-lookup"><span data-stu-id="0add6-128">The address to which metadata is published for retrieval using an HTTP/Get request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0add6-129"><paramref name="value" /> doit utiliser le protocole HTTP ou être un Uri relatif.</span><span class="sxs-lookup"><span data-stu-id="0add6-129"><paramref name="value" /> must use the HTTP protocol or be a relative Uri.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpsGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpsGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpsGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0add6-130">Obtient ou définit la liaison utilisée pour la récupération de l’intégrité par le biais d’une requête HTTPS/Get.</span><span class="sxs-lookup"><span data-stu-id="0add6-130">Gets or sets the binding that is used for health retrieval via an HTTPS/Get request.</span></span></summary>
        <value><span data-ttu-id="0add6-131">La liaison utilisée pour la récupération de l’intégrité via une requête HTTPS/Get.</span><span class="sxs-lookup"><span data-stu-id="0add6-131">The binding used for health retrieval via an HTTPS/Get request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="0add6-132">Définition de cette propriété est facultative.</span><span class="sxs-lookup"><span data-stu-id="0add6-132">Setting this property is optional.</span></span> <span data-ttu-id="0add6-133">Si elle n’est pas définie, les liaisons par défaut sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="0add6-133">If it is not set, the default bindings are used.</span></span> 

<span data-ttu-id="0add6-134">Seules les liaisons avec des éléments de liaison internes qui prennent en charge <xref:System.ServiceModel.Channels.IReplyChannel> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="0add6-134">Only bindings with inner binding elements that support <xref:System.ServiceModel.Channels.IReplyChannel> are supported.</span></span> <span data-ttu-id="0add6-135">En outre, le <xref:System.ServiceModel.Channels.Binding.MessageVersion> propriété de la liaison doit être <xref:System.ServiceModel.Channels.MessageVersion.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0add6-135">In addition, the <xref:System.ServiceModel.Channels.Binding.MessageVersion> property of the binding must be <xref:System.ServiceModel.Channels.MessageVersion.None?displayProperty=nameWithType>.</span></span>

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0add6-136">Dans une opération ensembliste, l’Url de l’argument <see cref="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetUrl" /> doit être relative ou son schéma doit être « HTTPS ».</span><span class="sxs-lookup"><span data-stu-id="0add6-136">In a set operation, the Url of the <see cref="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetUrl" /> argument must be relative or its scheme must be "HTTPS:".</span></span>

<span data-ttu-id="0add6-137">ou</span><span class="sxs-lookup"><span data-stu-id="0add6-137">-or-</span></span>

<span data-ttu-id="0add6-138">La version du message est incorrecte.</span><span class="sxs-lookup"><span data-stu-id="0add6-138">The message version is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpsGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpsGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpsGetEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0add6-139">Obtient ou définit une valeur qui indique si les métadonnées du service doivent être publiées pour être récupérées à l’aide d’une requête HTTPS/Get.</span><span class="sxs-lookup"><span data-stu-id="0add6-139">Gets or sets a value that specifies whether to publish service metadata for retrieval using an HTTPS/Get request.</span></span></summary>
        <value><span data-ttu-id="0add6-140">Une valeur qui spécifie s’il faut publier les métadonnées de service pour extraction à l’aide d’une requête HTTPS/Get.</span><span class="sxs-lookup"><span data-stu-id="0add6-140">A value that specifies whether to publish service metadata for retrieval using an HTTPS/Get request.</span></span> <span data-ttu-id="0add6-141">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0add6-141">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="0add6-142">Si le `httpsGetUrl` attribut n’est pas spécifié, l’adresse à laquelle les métadonnées sont publiées est le service adresse plus (+) » ? l’intégrité ».</span><span class="sxs-lookup"><span data-stu-id="0add6-142">If the `httpsGetUrl` attribute is not specified, the address to which the metadata is published is the service address plus "?health".</span></span> <span data-ttu-id="0add6-143">Par exemple, si l’adresse du service est `https://localhost:8080/CalculatorService`, l’adresse de métadonnées HTTP/Get est `https://localhost:8080/CalculatorService?health`.</span><span class="sxs-lookup"><span data-stu-id="0add6-143">For example, if the service address is `https://localhost:8080/CalculatorService`, the HTTP/Get metadata address is `https://localhost:8080/CalculatorService?health`.</span></span>

<span data-ttu-id="0add6-144">Si cette propriété est `false`, ou si l’adresse du service n’est pas basé sur HTTP ou HTTPS, « ? intégrité » est ignoré.</span><span class="sxs-lookup"><span data-stu-id="0add6-144">If this property is `false`, or if the address of the service is not based on HTTP or HTTPS, "?health" is ignored.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpsGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpsGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpsGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0add6-145">Obtient ou définit un Uri qui spécifie l’adresse à laquelle les métadonnées sont publiées pour être récupérées à l’aide d’une requête HTTPS/Get.</span><span class="sxs-lookup"><span data-stu-id="0add6-145">Gets or sets a Uri that specifes the address to which metadata is published for retrieval using an HTTPS/Get request.</span></span></summary>
        <value><span data-ttu-id="0add6-146">L’adresse à laquelle les métadonnées sont publiée pour récupération à l’aide d’une requête HTTPS/Get.</span><span class="sxs-lookup"><span data-stu-id="0add6-146">The address to which metadata is published for retrieval using an HTTPS/Get request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0add6-147"><paramref name="value" /> doit utiliser le protocole HTTPS ou être un Uri relatif.</span><span class="sxs-lookup"><span data-stu-id="0add6-147"><paramref name="value" /> must use the HTTPS protocol or be a relative Uri.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServiceStartTime">
      <MemberSignature Language="C#" Value="protected DateTimeOffset ServiceStartTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset ServiceStartTime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.ServiceStartTime" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceStartTime As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property DateTimeOffset ServiceStartTime { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceStartTime : DateTimeOffset" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.ServiceStartTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0add6-148">Obtient la date et l’heure de démarrage du service de contrôle d’intégrité.</span><span class="sxs-lookup"><span data-stu-id="0add6-148">Gets the date and time that the health check service started.</span></span></summary>
        <value><span data-ttu-id="0add6-149">La date et l’heure qui a démarré le service de contrôle d’intégrité.</span><span class="sxs-lookup"><span data-stu-id="0add6-149">The date and time that the health check service started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="0add6-150">Description du service.</span><span class="sxs-lookup"><span data-stu-id="0add6-150">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="0add6-151">Hôte du service.</span><span class="sxs-lookup"><span data-stu-id="0add6-151">The service host.</span></span></param>
        <param name="endpoints"><span data-ttu-id="0add6-152">Points de terminaison de service.</span><span class="sxs-lookup"><span data-stu-id="0add6-152">The service endpoints.</span></span></param>
        <param name="parameters"><span data-ttu-id="0add6-153">Collection d’objets personnalisés à laquelle ont accès les éléments de liaison.</span><span class="sxs-lookup"><span data-stu-id="0add6-153">A collection of custom objects to which binding elements have access.</span></span></param>
        <summary><span data-ttu-id="0add6-154">Passe des données personnalisées à des éléments de liaison pour prendre en charge l’implémentation de contrat.</span><span class="sxs-lookup"><span data-stu-id="0add6-154">Passes custom data to binding elements to support the contact implementation.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0add6-155"><paramref name="parameters" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0add6-155"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="0add6-156">Description du service.</span><span class="sxs-lookup"><span data-stu-id="0add6-156">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="0add6-157">Hôte de service en cours de construction.</span><span class="sxs-lookup"><span data-stu-id="0add6-157">The service host that is currently being built.</span></span></param>
        <summary><span data-ttu-id="0add6-158">Modifie des valeurs de propriété d’exécution ou insère des objets d’extensions personnalisées tels que des gestionnaires d’erreurs, des intercepteurs de messages ou de paramètres, des extensions de sécurité et autres objets d’extensions personnalisées.</span><span class="sxs-lookup"><span data-stu-id="0add6-158">Changes run-time property values or inserts custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0add6-159">Le répartiteur de canal ne prend pas en charge le schéma.</span><span class="sxs-lookup"><span data-stu-id="0add6-159">The channel dispatcher does not support the scheme.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="0add6-160">Description du service.</span><span class="sxs-lookup"><span data-stu-id="0add6-160">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="0add6-161">Hôte de service à valider.</span><span class="sxs-lookup"><span data-stu-id="0add6-161">The service host to validate.</span></span></param>
        <summary><span data-ttu-id="0add6-162">Inspecte l'hôte et la description du service pour confirmer que le service peut s'exécuter correctement.</span><span class="sxs-lookup"><span data-stu-id="0add6-162">Inspects the service host and the service description to confirm that the service can run successfully.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0add6-163">Il existe un comportement dupliqué.</span><span class="sxs-lookup"><span data-stu-id="0add6-163">There is a duplicate behavior.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>