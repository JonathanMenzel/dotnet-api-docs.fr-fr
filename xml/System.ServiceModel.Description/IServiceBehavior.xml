<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IServiceBehavior.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5778e3fb7b36e48f48f3deab84c6e43e92c9aeebe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">778e3fb7b36e48f48f3deab84c6e43e92c9aeebe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Provides a mechanism to modify or insert custom extensions across an entire service, including the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>.</source>
          <target state="translated">Fournit un mécanisme permettant de modifier ou d'insérer des extensions personnalisées sur l'intégralité d'un service, y compris <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Implement <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> to modify, examine, or extend some aspect of service-wide execution at the application level:</source>
          <target state="translated">Implémentez <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> pour modifier, examiner ou étendre certains aspects de l'exécution à l'échelle du service au niveau de l'application :</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> pour modifier des valeurs de propriété d'exécution ou insérer des objets d'extensions personnalisées tels que les gestionnaires d'erreurs, les intercepteurs de messages ou de paramètres, les extensions de sécurité et autres objets d'extensions personnalisées.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> method to examine the description before <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> constructs the executing service to confirm that it can execute properly.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> pour examiner la description avant que <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> ne construise le service en cours d'exécution pour confirmer qu'il peut s'exécuter correctement.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> method to pass to a binding element the custom information for the service so that it can support the service correctly.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> pour passer à un élément de liaison les informations personnalisées pour le service afin qu'il puisse correctement prendre en charge le service.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases the unused methods can return without a value.</source>
          <target state="translated">Les objets <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> peuvent utiliser chacune de ces méthodes mais souvent, seule l'une d'elles est importante. Dans ce cas, les méthodes inutilisées peuvent ne retourner aucune valeur.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">Toutes les méthodes <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> passent les objets <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> et <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> comme paramètres.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination only; if you modify these objects the execution behavior is undefined.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> est présenté à titre d'examen uniquement ; si vous modifiez ces objets, le comportement d'exécution n'est pas défini.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>To perform the customization task for which it is intended, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> property prior to the construction of the service runtime.</source>
          <target state="translated">Pour effectuer la tâche de personnalisation à laquelle ils se destine, l'objet <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> doit être ajouté à la propriété <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> avant la construction de l'exécution de service.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>There are three ways to do this:</source>
          <target state="translated">Il y a trois manières pour effectuer cette opération :</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Programmatically add the custom service behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> property prior to the point where the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">Par programme, ajoutez le comportement de service personnalisé à la propriété <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> avant le point où la méthode <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> est appelée sur l'objet <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Create a custom attribute that implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> and use it to mark service classes that are to be modified.</source>
          <target state="translated">Créez un attribut personnalisé qui implémente le <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> et l'utilise pour marquer des classes de service qui doivent être modifiées.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>When a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object is constructed, <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> uses reflection to discover the attributes on the service type.</source>
          <target state="translated">Lorsqu'un objet <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> est construit, <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> utilise la réflexion pour découvrir les attributs sur le type de service.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>If any attributes implement <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph>, they are added to the behaviors collection on <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph>.</source>
          <target state="translated">Si des attributs implémentent <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph>, ils sont ajoutés à la collection de comportements sur <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Extend the <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph> class to support the specification of the behavior in an application or machine configuration file.</source>
          <target state="translated">Étendez la classe <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph> pour prendre en charge la spécification du comportement dans une application ou un fichier de configuration d'ordinateur.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>See the Example section for more information.</source>
          <target state="translated">Pour plus d'informations, consultez la section Exemple.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Examples of service behaviors in <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> include the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> attribute, the <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType&gt;</ph>, the <ph id="ph4">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType&gt;</ph> and the <ph id="ph5">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType&gt;</ph> behavior.</source>
          <target state="translated">Parmi les exemples de comportements de service de <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>, figurent l'attribut <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph>, le <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType&gt;</ph>, le <ph id="ph4">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType&gt;</ph> et le comportement <ph id="ph5">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</source>
          <target state="translated">L'exemple de code suivant montre l'utilisation d'un comportement de service spécifié dans un fichier de configuration pour insérer un gestionnaire d'erreurs personnalisé dans une application de service.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>In this example, the error handler catches all exceptions and converts them into a custom <ph id="ph1">`GreetingFault`</ph> SOAP fault that is then returned to the client.</source>
          <target state="translated">Dans cet exemple, le gestionnaire d'erreurs intercepte toutes les exceptions et les convertit en une erreur <ph id="ph1">`GreetingFault`</ph> SOAP personnalisée qui est ensuite retournée au client.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>The following <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementation adds no binding parameter objects, adds the custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> object to each <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> property, and validates that each operation of the service to which the service behavior is applied and has a <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> of type <ph id="ph5">`GreetingFault`</ph>.</source>
          <target state="translated">L'implémentation <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> suivante n'ajoute pas d'objet de paramètre de liaison, ajoute l'objet personnalisé <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> à chaque propriété <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph>, confirme que chaque opération du service auquel s'applique le comportement de service, et dispose d'un <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> de type <ph id="ph5">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>In this example, the behavior class also implements <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</source>
          <target state="translated">Dans cet exemple, la classe de comportement implémente également l'<ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, qui permet au comportement de service d'être inséré en l'utilisant dans un fichier de configuration de l'application comme le montre l'exemple de code suivant.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The service description of the service.</source>
          <target state="translated">Description du fonctionnement du service.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The host of the service.</source>
          <target state="translated">Hôte du service.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The service endpoints.</source>
          <target state="translated">Points de terminaison de service.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Custom objects to which binding elements have access.</source>
          <target state="translated">Objets personnalisés auxquels ont accès les éléments de liaison.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Provides the ability to pass custom data to binding elements to support the contract implementation.</source>
          <target state="translated">Fournit la possibilité de passer des données personnalisées à des éléments de liaison pour prendre en charge l’implémentation de contrat.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> method to add custom data objects to the <ph id="ph2">`parameters`</ph> collection that binding elements can use to acquire extra information to enable them to support the contract.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> pour ajouter des objets de données personnalisés à la collection <ph id="ph2">`parameters`</ph> que les éléments de liaison peuvent utiliser pour acquérir des informations supplémentaires afin de leur permettre de prendre en charge le contrat.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>This method is called once for each listen URI.</source>
          <target state="translated">Cette méthode est appelée une fois pour chaque URI d'écoute.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>For example, if a service has four endpoints, and two of them have the same listen URI, then this method gets called three times.</source>
          <target state="translated">Par exemple, si un service dispose de quatre points de terminaison et que deux d'entre eux ont le même URI d'écoute, cette méthode est alors appelée trois fois.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The reason is that the <ph id="ph1">`bindingParameters`</ph> target each channel stack and there is one channel stack for each listen URI.</source>
          <target state="translated">La raison est que le <ph id="ph1">`bindingParameters`</ph> vise chaque pile de canal ; une pile de canal existe pour chaque URI d'écoute.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Because each call receives those endpoints at that listen URI, two calls each get a single <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph>, and one call gets a collection of two <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> objects.</source>
          <target state="translated">Étant donné que chaque appel reçoit ces points de terminaison au niveau de cet URI, deux appels reçoivent chacun un <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> unique, et un appel reçoit une collection de deux objets <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">Toutes les méthodes <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> passent les objets <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> et <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> comme paramètres.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> est présenté à titre d'examen et d'insertion de personnalisations uniquement. Sinon, si vous modifiez ces objets, le comportement d'exécution n'est pas défini.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service description.</source>
          <target state="translated">Description du service.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The host that is currently being built.</source>
          <target state="translated">Hôte en cours de génération.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Provides the ability to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</source>
          <target state="translated">Fournit la possibilité de modifier des valeurs de propriété d'exécution ou insérer des objets d'extensions personnalisées tels que les gestionnaires d'erreurs, les intercepteurs de messages ou de paramètres, les extensions de sécurité et autres objets d'extensions personnalisées.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to inspect or modify the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> object that is being constructed in order to support some custom execution scenario.</source>
          <target state="translated">Implémentez la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> pour inspecter ou modifier l'objet <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> en cours de construction pour prendre en charge des scénarios d'exécution personnalisés.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">Toutes les méthodes <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> passent les objets <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> et <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> comme paramètres.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> est présenté à titre d'examen et d'insertion de personnalisations uniquement. Sinon, si vous modifiez ces objets, le comportement d'exécution n'est pas défini.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</source>
          <target state="translated">L'exemple de code suivant montre l'utilisation d'un comportement de service spécifié dans un fichier de configuration pour insérer un gestionnaire d'erreurs personnalisé dans une application de service.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the error handler catches all exceptions and converts them into a custom <ph id="ph1">`GreetingFault`</ph> SOAP fault that is then returned to the client.</source>
          <target state="translated">Dans cet exemple, le gestionnaire d'erreurs intercepte toutes les exceptions et les convertit en une erreur <ph id="ph1">`GreetingFault`</ph> SOAP personnalisée qui est ensuite retournée au client.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementation adds no binding parameter objects, adds the custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> object to each <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> property, and validates that each operation of the service to which the service behavior is applied and has a <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> of type <ph id="ph5">`GreetingFault`</ph>.</source>
          <target state="translated">L'implémentation <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> suivante n'ajoute pas d'objet de paramètre de liaison, ajoute l'objet personnalisé <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> à chaque propriété <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph>, confirme que chaque opération du service auquel s'applique le comportement de service, et dispose d'un <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> de type <ph id="ph5">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the behavior class also implements <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</source>
          <target state="translated">Dans cet exemple, la classe de comportement implémente également l'<ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, qui permet au comportement de service d'être inséré en l'utilisant dans un fichier de configuration de l'application comme le montre l'exemple de code suivant.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service description.</source>
          <target state="translated">Description du service.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service host that is currently being constructed.</source>
          <target state="translated">Hôte de service en cours de construction.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Provides the ability to inspect the service host and the service description to confirm that the service can run successfully.</source>
          <target state="translated">Fournit la possibilité d'inspecter l'hôte de service et la description de service pour confirmer que le service peut correctement s'exécuter.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> method to confirm whether the current service can execute properly according to your scenario.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> pour confirmer si le service actuel peut correctement s'exécuter d'après votre scénario.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">Toutes les méthodes <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> passent les objets <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> et <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> comme paramètres.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> est présenté à titre d'examen et d'insertion de personnalisations uniquement. Sinon, si vous modifiez ces objets, le comportement d'exécution n'est pas défini.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</source>
          <target state="translated">L'exemple de code suivant montre l'utilisation d'un comportement de service spécifié dans un fichier de configuration pour insérer un gestionnaire d'erreurs personnalisé dans une application de service.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the error handler catches all exceptions and converts them into a custom <ph id="ph1">`GreetingFault`</ph> SOAP fault that is then returned to the client.</source>
          <target state="translated">Dans cet exemple, le gestionnaire d'erreurs intercepte toutes les exceptions et les convertit en une erreur <ph id="ph1">`GreetingFault`</ph> SOAP personnalisée qui est ensuite retournée au client.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementation adds no binding parameter objects, adds the custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> object to each <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> property, and validates that each operation of the service to which the service behavior is applied and has a <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> of type <ph id="ph5">`GreetingFault`</ph>.</source>
          <target state="translated">L'implémentation <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> suivante n'ajoute pas d'objet de paramètre de liaison, ajoute l'objet personnalisé <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> à chaque propriété <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph>, confirme que chaque opération du service auquel s'applique le comportement de service, et dispose d'un <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> de type <ph id="ph5">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the behavior class also implements <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</source>
          <target state="translated">Dans cet exemple, la classe de comportement implémente également l'<ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, qui permet au comportement de service d'être inséré en l'utilisant dans un fichier de configuration de l'application comme le montre l'exemple de code suivant.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>