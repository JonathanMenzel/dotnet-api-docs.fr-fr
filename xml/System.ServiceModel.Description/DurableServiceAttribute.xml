<Type Name="DurableServiceAttribute" FullName="System.ServiceModel.Description.DurableServiceAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bee08515f4139fda0593e5739ad2a4d00fc75b4c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36617097" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DurableServiceAttribute : Attribute, System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DurableServiceAttribute extends System.Attribute implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.DurableServiceAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DurableServiceAttribute&#xA;Inherits Attribute&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class DurableServiceAttribute sealed : Attribute, System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type DurableServiceAttribute = class&#xA;    inherit Attribute&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indique le comportement d'exécution interne d'une implémentation de contrat de service fiable.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les éléments suivants sont vérifiés dans le cadre de la logique de validation des services fiables :  
  
-   Toutes les liaisons de session disposent d'un élément de liaison de contexte, tel que <xref:System.ServiceModel.Configuration.WSHttpContextBindingElement> ou <xref:System.ServiceModel.Configuration.NetTcpContextBindingElement>.  
  
-   La valeur de <xref:System.ServiceModel.ConcurrencyMode> ne doit pas être Multiple  
  
-   La valeur de <xref:System.ServiceModel.InstanceContextMode> doit être PerSession  
  
-   Un point de terminaison de session doit être configuré pour le service.  
  
-   Si le contrat interdit des sessions, <xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A> doit alors avoir la valeur `true` pour toutes les opérations.  
  
-   Si le contrat autorise des sessions, toutes les opérations pour lesquelles <xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A> a la valeur `true` doivent alors être des opérations de demande/réponse, c'est-à-dire que <xref:System.Workflow.Activities.OperationInfo.IsOneWay%2A> ne peut pas avoir la valeur `true`.  
  
-   Si <xref:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction%2A> a la valeur `true`, toutes les opérations du service doivent alors être marquées soit en attribuant à <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=nameWithType> la valeur `true`, soit en utilisant <xref:System.ServiceModel.TransactionFlowOption.Mandatory?displayProperty=nameWithType>. De plus, <xref:System.ServiceModel.ConcurrencyMode> doit avoir la valeur Single.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DurableServiceAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.DurableServiceAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DurableServiceAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Description.DurableServiceAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit&#xA;override this.AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="durableServiceAttribute.AddBindingParameters (serviceDescription, serviceHostBase, endpoints, bindingParameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">Non implémenté.</param>
        <param name="serviceHostBase">Non implémenté.</param>
        <param name="endpoints">Non implémenté.</param>
        <param name="bindingParameters">Non implémenté.</param>
        <summary>Non implémenté dans <see cref="T:System.ServiceModel.Description.DurableServiceAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="durableServiceAttribute.ApplyDispatchBehavior (serviceDescription, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">Description du service.</param>
        <param name="serviceHostBase">Hôte du service.</param>
        <summary>Personnalise l'heure d'exécution du service afin de prendre en charge les propriétés du comportement de services fiables, telles que la spécification d'un <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> pour le service.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveStateInOperationTransaction">
      <MemberSignature Language="C#" Value="public bool SaveStateInOperationTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveStateInOperationTransaction" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveStateInOperationTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveStateInOperationTransaction { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveStateInOperationTransaction : bool with get, set" Usage="System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si l'état de l'instance du service est rendu persistant pour le <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> à l'aide de la même transaction sous laquelle l'opération est exécutée.</summary>
        <value>
          <see langword="true" /> si l'état de l'instance du service est rendu persistant à l'aide de la même transaction ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction%2A> a la valeur `true`, toutes les opérations du service doivent alors être marquées soit en attribuant à <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=nameWithType> la valeur `true`, soit en utilisant <xref:System.ServiceModel.TransactionFlowOption.Mandatory?displayProperty=nameWithType>. De plus, <xref:System.ServiceModel.ConcurrencyMode> doit avoir la valeur Single.  
  
 Si vous attribuez la valeur <xref:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction%2A> à `true`, l'état de service passe à transactionnel lors de la transaction de l'opération, c’est-à-dire que si la transaction de l’opération est restaurée, l’état de service l’est également.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownExceptionAction">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.UnknownExceptionAction UnknownExceptionAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Description.UnknownExceptionAction UnknownExceptionAction" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UnknownExceptionAction As UnknownExceptionAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::UnknownExceptionAction UnknownExceptionAction { System::ServiceModel::Description::UnknownExceptionAction get(); void set(System::ServiceModel::Description::UnknownExceptionAction value); };" />
      <MemberSignature Language="F#" Value="member this.UnknownExceptionAction : System.ServiceModel.Description.UnknownExceptionAction with get, set" Usage="System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.UnknownExceptionAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur d'énumération du <see cref="T:System.ServiceModel.Description.UnknownExceptionAction" /> associée au service fiable.</summary>
        <value>Valeur d'énumération de <see cref="T:System.ServiceModel.Description.UnknownExceptionAction" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.ServiceModel.Description.DurableServiceAttribute> est instancié, il affecte à cette propriété la valeur <xref:System.ServiceModel.Description.UnknownExceptionAction.TerminateInstance>. Ceci signifie que chaque fois qu'une exception inconnue est détectée par le service fiable, l'instance du service s'arrête et toutes les informations d'état sont supprimées du magasin de persistance.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.DurableServiceAttribute.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="durableServiceAttribute.Validate (serviceDescription, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">Description du service.</param>
        <param name="serviceHostBase">Hôte du service.</param>
        <summary>Vérifie que toutes les opérations fiables du service sont installées correctement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>