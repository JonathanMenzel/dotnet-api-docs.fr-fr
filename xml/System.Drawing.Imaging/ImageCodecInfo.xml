<Type Name="ImageCodecInfo" FullName="System.Drawing.Imaging.ImageCodecInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="db42ea60cb5130a77928a8a9edb6ff14de1706fb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408763" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImageCodecInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImageCodecInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.ImageCodecInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageCodecInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageCodecInfo sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>La classe <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> fournit les méthodes et les membres de stockage nécessaires pour récupérer toutes les informations appropriées concernant les encodeurs et décodeurs d'images (appelés codecs) installés. Héritage impossible.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 GDI + utilise des encodeurs d’image pour convertir les images stockées dans <xref:System.Drawing.Bitmap> objets vers différents formats de fichier. Encodeurs d’image sont intégrés dans GDI + pour les formats BMP, JPEG, GIF, TIFF et PNG. Un encodeur est appelé lorsque vous appelez le <xref:System.Drawing.Image.Save%2A> ou <xref:System.Drawing.Image.SaveAdd%2A> méthode d’un <xref:System.Drawing.Image> objet.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clsid">
      <MemberSignature Language="C#" Value="public Guid Clsid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Clsid" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.ImageCodecInfo.Clsid" />
      <MemberSignature Language="VB.NET" Value="Public Property Clsid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Clsid { Guid get(); void set(Guid value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une structure <see cref="T:System.Guid" /> qui contient un GUID qui identifie un codec spécifique.</summary>
        <value>Structure <see cref="T:System.Guid" /> qui contient un GUID qui identifie un codec spécifique.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodecName">
      <MemberSignature Language="C#" Value="public string CodecName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodecName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.ImageCodecInfo.CodecName" />
      <MemberSignature Language="VB.NET" Value="Public Property CodecName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodecName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne qui contient le nom du codec.</summary>
        <value>Chaîne qui contient le nom du codec.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DllName">
      <MemberSignature Language="C#" Value="public string DllName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DllName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.ImageCodecInfo.DllName" />
      <MemberSignature Language="VB.NET" Value="Public Property DllName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DllName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne qui contient le nom de chemin d'accès de la DLL contenant le codec. Si le codec n'est pas dans une DLL, ce pointeur est <see langword="null" />.</summary>
        <value>Chaîne qui contient le nom de chemin d'accès de la DLL contenant le codec.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilenameExtension">
      <MemberSignature Language="C#" Value="public string FilenameExtension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilenameExtension" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.ImageCodecInfo.FilenameExtension" />
      <MemberSignature Language="VB.NET" Value="Public Property FilenameExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilenameExtension { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne qui contient les extensions de nom de fichier utilisées dans le codec. Les extensions sont séparées par des points-virgules.</summary>
        <value>Chaîne qui contient les extensions de nom de fichier utilisées dans le codec.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.ImageCodecFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Imaging.ImageCodecFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.ImageCodecInfo.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As ImageCodecFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::ImageCodecFlags Flags { System::Drawing::Imaging::ImageCodecFlags get(); void set(System::Drawing::Imaging::ImageCodecFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.ImageCodecFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur 32 bits utilisée pour stocker des informations supplémentaires sur le codec. Cette propriété retourne une combinaison d'indicateurs à partir de l'énumération <see cref="T:System.Drawing.Imaging.ImageCodecFlags" />.</summary>
        <value>Valeur 32 bits utilisée pour stocker des informations supplémentaires sur le codec.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatDescription">
      <MemberSignature Language="C#" Value="public string FormatDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatDescription" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.ImageCodecInfo.FormatDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne qui décrit le format de fichier du codec.</summary>
        <value>Chaîne qui décrit le format de fichier du codec.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatID">
      <MemberSignature Language="C#" Value="public Guid FormatID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid FormatID" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.ImageCodecInfo.FormatID" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatID As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid FormatID { Guid get(); void set(Guid value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une structure <see cref="T:System.Guid" /> qui contient un GUID qui identifie le format du codec.</summary>
        <value>Structure <see cref="T:System.Guid" /> qui contient un GUID qui identifie le format du codec.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageDecoders">
      <MemberSignature Language="C#" Value="public static System.Drawing.Imaging.ImageCodecInfo[] GetImageDecoders ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Imaging.ImageCodecInfo[] GetImageDecoders() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImageDecoders () As ImageCodecInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Drawing::Imaging::ImageCodecInfo ^&gt; ^ GetImageDecoders();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.ImageCodecInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un tableau d'objets <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> qui contiennent des informations sur les décodeurs d'images intégrés à GDI+.</summary>
        <returns>Tableau d'objets <see cref="T:System.Drawing.Imaging.ImageCodecInfo" />. Chaque objet <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> du tableau contient des informations sur l'un des décodeurs d'images intégrés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple, consultez <xref:System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageEncoders">
      <MemberSignature Language="C#" Value="public static System.Drawing.Imaging.ImageCodecInfo[] GetImageEncoders ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Imaging.ImageCodecInfo[] GetImageEncoders() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImageEncoders () As ImageCodecInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Drawing::Imaging::ImageCodecInfo ^&gt; ^ GetImageEncoders();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.ImageCodecInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un tableau d'objets <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> qui contiennent des informations sur les encodeurs d'images intégrés à GDI+.</summary>
        <returns>Tableau d'objets <see cref="T:System.Drawing.Imaging.ImageCodecInfo" />. Chaque objet <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> du tableau contient des informations sur l'un des encodeurs d'images intégrés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code utilise le <xref:System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders%2A> pour récupérer toutes les informations de codec pour tous les encodeurs d’image installés et les codecs, puis dessine toutes les informations sur chaque codec à l’écran.  
  
 [!code-cpp[System.Drawing.Imaging.ClassicImageCodecExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Imaging.ClassicImageCodecExample/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.Imaging.ClassicImageCodecExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Imaging.ClassicImageCodecExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Imaging.ClassicImageCodecExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Imaging.ClassicImageCodecExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MimeType">
      <MemberSignature Language="C#" Value="public string MimeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MimeType" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.ImageCodecInfo.MimeType" />
      <MemberSignature Language="VB.NET" Value="Public Property MimeType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MimeType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne qui contient le type MIME (Multipurpose Internet Mail Extensions) du codec.</summary>
        <value>Chaîne qui contient le type MIME (Multipurpose Internet Mail Extensions) du codec.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureMasks">
      <MemberSignature Language="C#" Value="public byte[][] SignatureMasks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[][] SignatureMasks" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.ImageCodecInfo.SignatureMasks" />
      <MemberSignature Language="VB.NET" Value="Public Property SignatureMasks As Byte()()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;cli::array &lt;System::Byte&gt; ^&gt; ^ SignatureMasks { cli::array &lt;cli::array &lt;System::Byte&gt; ^&gt; ^ get(); void set(cli::array &lt;cli::array &lt;System::Byte&gt; ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[][]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un tableau d'octets à deux dimensions qui peut être utilisé comme filtre.</summary>
        <value>Tableau d'octets à deux dimensions qui peut être utilisé comme filtre.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignaturePatterns">
      <MemberSignature Language="C#" Value="public byte[][] SignaturePatterns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[][] SignaturePatterns" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Property SignaturePatterns As Byte()()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;cli::array &lt;System::Byte&gt; ^&gt; ^ SignaturePatterns { cli::array &lt;cli::array &lt;System::Byte&gt; ^&gt; ^ get(); void set(cli::array &lt;cli::array &lt;System::Byte&gt; ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[][]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un tableau d'octets à deux dimensions qui représente la signature du codec.</summary>
        <value>Tableau d'octets à deux dimensions qui représente la signature du codec.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Imaging.ImageCodecInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le numéro de version du codec.</summary>
        <value>Numéro de version du codec.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>