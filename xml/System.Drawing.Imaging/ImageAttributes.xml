<Type Name="ImageAttributes" FullName="System.Drawing.Imaging.ImageAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b9b2e1c4e566c6435f9d002b5a5315e86a75aef4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410753" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImageAttributes : ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ImageAttributes extends System.Object implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.ImageAttributes" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageAttributes&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageAttributes sealed : ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Contient des informations sur la manière dont les couleurs de bitmap et de métafichier sont manipulées pendant le rendu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet gère plusieurs paramètres de réglage des couleurs, y compris les matrices de réglage des couleurs, des matrices de réglage des nuances de gris, valeurs de correction gamma, des tables de correspondance des couleurs et des valeurs de seuil de couleur. Pendant le rendu, les couleurs peuvent être corrigées, obscurcies, éclaircir et supprimées. Pour appliquer ces manipulations, initialiser un <xref:System.Drawing.Imaging.ImageAttributes> de l’objet et passez le chemin d’accès de ce <xref:System.Drawing.Imaging.ImageAttributes> objet (ainsi que le chemin d’accès un <xref:System.Drawing.Image>) pour le <xref:System.Drawing.Graphics.DrawImage%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant prend une image qui est une couleur (0.2, 0.0, 0,4, 1.0) et double le composant rouge ajoute 0.2 aux composants rouges, verts et bleus  
  
 L’illustration suivante montre l’image d’origine sur la gauche et l’image transformée sur la droite.  
  
 ![Colors](~/add/media/colortrans1.png "Colors")  
  
 Le code dans l’exemple suivant utilise les étapes suivantes pour effectuer le recoloriage :  
  
1.  Initialiser un <xref:System.Drawing.Imaging.ColorMatrix> objet.  
  
2.  Créer un <xref:System.Drawing.Imaging.ImageAttributes> de l’objet et de passer le <xref:System.Drawing.Imaging.ColorMatrix> de l’objet à la <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> méthode de la <xref:System.Drawing.Imaging.ImageAttributes> objet.  
  
3.  Passer la <xref:System.Drawing.Imaging.ImageAttributes> de l’objet à la <xref:System.Drawing.Graphics.DrawImage%2A> méthode d’un <xref:System.Drawing.Graphics> objet.  
  
 [!code-csharp[System.Drawing.RecoloringImages#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RecoloringImages/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.RecoloringImages#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RecoloringImages/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Imaging.ImageAttributes" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBrushRemapTable">
      <MemberSignature Language="C#" Value="public void ClearBrushRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearBrushRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearBrushRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearBrushRemapTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efface la table de remappage des couleurs de pinceau de cet objet <see cref="T:System.Drawing.Imaging.ImageAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une table de remappage des couleurs pour la catégorie par défaut, une table de remappage des couleurs différentes pour la catégorie bitmap et encore une table de remappage des couleurs différentes pour la catégorie pinceau.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie pinceau, les paramètres par défaut s’appliquent à la catégorie pinceau.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez une table de remappage des couleurs par défaut qui convertit le rouge en vert, et que vous spécifiez la valeur gamma par défaut 1.8. Si vous appelez le <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> (méthode), la table de remappage des couleurs par défaut (rouge en vert) et la valeur de gamma par défaut (1,8) ne s’appliquera pas aux pinceaux. Si vous appelez ultérieurement la <xref:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable%2A> (méthode), la catégorie pinceau ne reprendra pas la table de remappage par défaut ; la catégorie pinceau n’aura aucune table de remappage. De même, la catégorie pinceau ne reprendra pas la valeur gamma par défaut ; la catégorie n’aura pas de valeur gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Efface la clé de couleur (plage de transparence).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efface la clé de couleur (plage de transparence) pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une clé de couleur pour la catégorie par défaut, une autre clé de couleur pour la catégorie bitmap et encore une autre clé de couleur pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle la clé de couleur est effacée.</param>
        <summary>Efface la clé de couleur (plage de transparence) pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une clé de couleur pour la catégorie par défaut, une autre clé de couleur pour la catégorie bitmap et encore une autre clé de couleur pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez une clé de couleur par défaut qui rend toute couleur avec un composant rouge de 200 à 255 et que vous spécifiez la valeur gamma par défaut 1.8. Si vous définissez la clé de couleur de la catégorie stylet en appelant le <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> (méthode), la clé de couleur par défaut et la valeur gamma par défaut ne s’appliquera pas aux stylets. Si vous désactivez ultérieurement la clé de couleur du stylet en appelant le <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> (méthode), la catégorie stylet ne reprendra pas la clé de couleur par défaut ; au lieu de cela, la catégorie n’aura aucune clé de couleur. De même, la catégorie stylet ne mette pas la valeur gamma par défaut ; la catégorie n’aura pas de valeur gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Efface la matrice de réglage des couleurs.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efface la matrice de réglage des couleurs pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une matrice de réglage des couleurs pour la catégorie par défaut, une matrice de réglage des couleurs différentes pour la catégorie bitmap et encore une matrice de réglage des couleurs différentes pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle la matrice de réglage des couleurs est effacée.</param>
        <summary>Efface la matrice de réglage des couleurs pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une matrice de réglage des couleurs pour la catégorie par défaut, une matrice de réglage des couleurs différentes pour la catégorie bitmap et encore une matrice de réglage des couleurs différentes pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez une matrice de réglage des couleurs et une valeur gamma pour la catégorie par défaut. Si vous définissez une matrice de réglage des couleurs pour la catégorie stylet en appelant le <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> (méthode), la matrice de réglage des couleurs par défaut ne s’applique pas aux stylets. Si, ultérieurement, vous effacez la matrice de réglage des couleurs du stylet en appelant le <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> (méthode), la catégorie stylet ne reprendra pas à la matrice de réglage par défaut ; au lieu de cela, la catégorie n’aura pas de matrice de réglage. De même, la catégorie stylet ne mette pas la valeur gamma par défaut ; la catégorie n’aura pas de valeur gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Désactive la correction gamma.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Désactive la correction gamma pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une valeur gamma pour la catégorie par défaut, une autre valeur gamma pour la catégorie bitmap et toujours une valeur gamma différente pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle la correction gamma est désactivée.</param>
        <summary>Désactive la correction gamma pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une valeur gamma pour la catégorie par défaut, une autre valeur gamma pour la catégorie bitmap et toujours une valeur gamma différente pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez une valeur gamma et une matrice de réglage des couleurs pour la catégorie par défaut. Si vous définissez la valeur gamma pour la catégorie stylet en appelant le <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> (méthode), la valeur gamma par défaut n’applique pas aux stylets. Si vous désactivez ultérieurement la valeur gamma du stylet en appelant le <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> (méthode), la catégorie stylet ne reprendra pas la valeur gamma par défaut ; au lieu de cela, la catégorie n’aura pas de valeur gamma. De même, la catégorie stylet ne mette pas à la matrice de réglage des couleurs par défaut ; la catégorie n’aura pas de matrice de réglage des couleurs.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Efface le paramètre <see langword="NoOp" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efface le paramètre <see langword="NoOp" /> pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une valeur gamma pour la catégorie par défaut, une autre valeur gamma pour la catégorie bitmap et toujours une valeur gamma différente pour la catégorie stylet.  
  
 Vous pouvez désactiver le réglage des couleurs pour la catégorie par défaut en appelant le <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> (méthode). Ultérieurement, vous pouvez rétablir le réglage des couleurs pour la catégorie par défaut en appelant le <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> (méthode). Le réglage des couleurs puis retourne qui était en vigueur avant l’appel à <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle le paramètre <see langword="NoOp" /> est effacé.</param>
        <summary>Efface le paramètre <see langword="NoOp" /> pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une valeur gamma pour la catégorie par défaut, une autre valeur gamma pour la catégorie bitmap et toujours une valeur gamma différente pour la catégorie stylet.  
  
 Vous pouvez désactiver le réglage des couleurs pour une certaine catégorie en appelant le <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> (méthode). Ultérieurement, vous pouvez rétablir le réglage des couleurs pour cette catégorie en appelant le <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> (méthode). Le réglage des couleurs puis retourne qui était en vigueur avant l’appel à <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Efface le paramètre du canal de sortie CMJN (cyan-magenta-jaune-noir).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efface le paramètre du canal de sortie CMJN (cyan-magenta-jaune-noir) pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier un canal de sortie pour la catégorie par défaut et un canal de sortie différent pour la catégorie bitmap.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie bitmap, les paramètres par défaut s’appliquent à la catégorie de la bitmap.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle le paramètre de canal de sortie est effacé.</param>
        <summary>Efface le paramètre du canal de sortie CMJN (cyan-magenta-jaune-noir) pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier un canal de sortie pour la catégorie par défaut et un canal de sortie différent pour la catégorie bitmap.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie bitmap, les paramètres par défaut s’appliquent à la catégorie de la bitmap.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez un canal de sortie et une matrice de réglage pour la catégorie par défaut. Si vous définissez le canal de sortie pour la catégorie bitmap en appelant le <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> (méthode), la valeur par défaut le canal de sortie ne s’applique pas aux bitmaps. Si vous désactivez ultérieurement la bitmap de canal de sortie en appelant le <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> (méthode), la catégorie bitmap ne reprendra pas au canal de sortie par défaut ; la catégorie bitmap n’aura aucun paramètre de canal de sortie. De même, la catégorie bitmap ne reviendra pas à la matrice de réglage des couleurs par défaut ; la catégorie bitmap n’aura pas de matrice de réglage des couleurs.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Efface le paramètre du profil des couleurs du canal de sortie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efface le paramètre du profil des couleurs du canal de sortie pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier un profil de canal de sortie pour la catégorie par défaut et un profil de canal de sortie différent pour la catégorie bitmap.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie bitmap, les paramètres par défaut s’appliquent à la catégorie de la bitmap.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle le paramètre du profil de canal de sortie est effacé.</param>
        <summary>Efface le paramètre du profil des couleurs du canal de sortie pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier un profil de canal de sortie pour la catégorie par défaut et un profil de canal de sortie différent pour la catégorie bitmap.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie bitmap, les paramètres par défaut s’appliquent à la catégorie de la bitmap.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez un profil de canal de sortie et une matrice de réglage pour la catégorie par défaut. Si vous définissez le profil de canal de sortie pour la catégorie bitmap en appelant le <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> (méthode), la valeur par défaut profil de canal de sortie ne s’applique pas aux bitmaps. Si vous désactivez ultérieurement la bitmap de profil de canal de sortie en appelant le <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> (méthode), la catégorie bitmap ne reprendra pas pour le profil de canal de sortie par défaut ; la catégorie bitmap n’aura aucun paramètre de profil de canal de sortie. De même, la catégorie bitmap ne reviendra pas à la matrice de réglage des couleurs par défaut ; la catégorie bitmap n’aura pas de matrice de réglage des couleurs.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Efface la table de remappage des couleurs.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efface la table de remappage des couleurs pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une table de remappage des couleurs pour la catégorie par défaut, une table de remappage différente pour la catégorie bitmap et encore une table de remappage différente pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle la table de remappage est effacée.</param>
        <summary>Efface la table de remappage des couleurs pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une table de remappage des couleurs pour la catégorie par défaut, une table de remappage différente pour la catégorie bitmap et encore une table de remappage différente pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez une table de remappage des couleurs et une valeur gamma pour la catégorie par défaut. Si vous définissez la table de remappage pour la catégorie stylet en appelant le <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> (méthode), la table de remappage des couleurs par défaut n’applique pas aux stylets. Si vous désactivez ultérieurement la table de remappage du stylet en appelant le <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> (méthode), la catégorie stylet ne reprendra pas la table de remappage des couleurs par défaut ; au lieu de cela, la catégorie n’aura aucune table de remappage. De même, la catégorie stylet ne mette pas la valeur gamma par défaut ; la catégorie n’aura pas de valeur gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Efface la valeur de seuil.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efface la valeur de seuil pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le seuil est une valeur comprise entre 0 et 1 qui spécifie un point de troncature pour chaque composant de couleur. Par exemple, supposons que le seuil est défini sur 0,7 et que vous restituez une couleur dont rouge, verts et bleus composants sont 230, 50 et 220, respectivement. Le composant rouge (230) étant supérieur à 0.7x255, passe à 255 (intensité complète). Le composant vert (50) étant inférieur à 0.7x255, le composant vert passe à 0. Le composant bleu (220) est supérieur à 0.7x255, donc le composant bleu passe à 255.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier un seuil pour la catégorie par défaut, un seuil différent pour la catégorie bitmap et encore un seuil différent pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle le seuil est effacé.</param>
        <summary>Efface la valeur de seuil pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le seuil est une valeur comprise entre 0 et 1 qui spécifie un point de troncature pour chaque composant de couleur. Par exemple, supposons que le seuil est défini sur 0,7 et que vous restituez une couleur dont rouge, verts et bleus composants sont 230, 50 et 220, respectivement. Le composant rouge (230) étant supérieur à 0.7x55, passe à 255 (intensité complète). Le composant vert (50) étant inférieur à 0.7x255, le composant vert passe à 0. Le composant bleu (220) est supérieur à 0.7x255, donc le composant bleu passe à 255.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier un seuil pour la catégorie par défaut, un seuil différent pour la catégorie bitmap et encore un seuil différent pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez un seuil et une valeur gamma pour la catégorie par défaut. Si vous définissez le seuil pour la catégorie stylet en appelant le <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> (méthode), le seuil par défaut ne s’appliquera pas aux stylets. Si vous désactivez ultérieurement le seuil du stylet en appelant le <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> (méthode), la catégorie stylet ne reprendra pas le seuil par défaut ; au lieu de cela, la catégorie n’aura pas de seuil. De même, la catégorie stylet ne mette pas la valeur gamma par défaut ; la catégorie n’aura pas de valeur gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une copie exacte de cet objet <see cref="T:System.Drawing.Imaging.ImageAttributes" />.</summary>
        <returns>Objet <see cref="T:System.Drawing.Imaging.ImageAttributes" /> créé par cette classe, casté en un objet.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources utilisées par cet objet <see cref="T:System.Drawing.Imaging.ImageAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez la méthode <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.Drawing.Imaging.ImageAttributes>. La méthode <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> rend le <xref:System.Drawing.Imaging.ImageAttributes> inutilisable. Après avoir appelé <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Drawing.Imaging.ImageAttributes> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Drawing.Imaging.ImageAttributes> occupée. Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Appelez toujours <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Drawing.Imaging.ImageAttributes>. Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Drawing.Imaging.ImageAttributes> de l'objet `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ImageAttributes ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Autorise un objet à tenter de libérer des ressources et à exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par une opération garbage collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdjustedPalette">
      <MemberSignature Language="C#" Value="public void GetAdjustedPalette (System.Drawing.Imaging.ColorPalette palette, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAdjustedPalette(class System.Drawing.Imaging.ColorPalette palette, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetAdjustedPalette (palette As ColorPalette, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetAdjustedPalette(System::Drawing::Imaging::ColorPalette ^ palette, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="palette" Type="System.Drawing.Imaging.ColorPalette" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="palette">Objet <see cref="T:System.Drawing.Imaging.ColorPalette" /> qui, à l'entrée, contient la palette à régler et, à la sortie, contient la palette réglée.</param>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie dont les paramètres de réglage s'appliqueront à la palette.</param>
        <summary>Règle les couleurs dans une palette selon les paramètres de réglage d'une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une table de remappage des couleurs pour la catégorie par défaut, une table de remappage des couleurs différentes pour la catégorie bitmap et encore une table de remappage des couleurs différentes pour la catégorie stylet.  
  
 Lorsque vous appelez le <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> (méthode), vous pouvez spécifier la catégorie de réglage qui est utilisée pour régler la palette de couleurs. Par exemple, si vous passez <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> à la <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> (méthode), le réglage des paramètres de la catégorie bitmap sont utilisés pour ajuster la palette de couleurs.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBrushRemapTable">
      <MemberSignature Language="C#" Value="public void SetBrushRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBrushRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBrushRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBrushRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Tableau d'objets <see cref="T:System.Drawing.Imaging.ColorMap" />.</param>
        <summary>Définit la table de remappage des couleurs pour la catégorie pinceau.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une table de remappage des couleurs est un tableau de <xref:System.Drawing.Imaging.ColorMap> structures. Chaque <xref:System.Drawing.Imaging.ColorMap> structure possède deux <xref:System.Drawing.Color> objets : un qui spécifie l’ancienne couleur et un qui spécifie la nouvelle couleur correspondante. Pendant le rendu, n’importe quelle couleur correspondant à l’un des anciennes couleurs dans la table de remappage est remplacée par la nouvelle couleur correspondante.  
  
 Appel de la <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> méthode a le même effet que le passage de <xref:System.Drawing.Imaging.ColorAdjustType.Brush> à la <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> (méthode). La table de remappage spécifiée s’applique aux éléments dans les métafichiers qui sont remplis avec un pinceau.  
  
 Cette méthode est destinée à être utilisée qu’avec des métafichiers.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
1.  Crée un seul élément <xref:System.Drawing.Imaging.ColorMap> tableau qui contient le rouge comme couleur ancien et le vert comme nouvelle couleur.  
  
2.  Passe ce tableau à nouvellement créé <xref:System.Drawing.Imaging.ImageAttributes> objet.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit la clé de couleur (plage de transparence).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="colorLow">Valeur de clé de couleur basse.</param>
        <param name="colorHigh">Valeur de clé de couleur haute.</param>
        <summary>Définit la clé de couleur pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode définit les valeurs de clé de couleur haute et basse afin qu’une plage de couleurs peut être rendue transparente. Toute couleur comportant chacun de ses trois composants (rouge, vert, bleu) entre les composants correspondants des clés de couleur haute et basse devient transparente.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une clé de couleur pour la catégorie par défaut, une autre clé de couleur pour la catégorie bitmap et encore une autre clé de couleur pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez la <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%28System.Drawing.Color%2CSystem.Drawing.Color%2CSystem.Drawing.Imaging.ColorAdjustType%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorLow">Valeur de clé de couleur basse.</param>
        <param name="colorHigh">Valeur de clé de couleur haute.</param>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle la clé de couleur est définie.</param>
        <summary>Définit la clé de couleur (plage de transparence) pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode définit les valeurs de clé de couleur haute et basse afin qu’une plage de couleurs peut être rendue transparente. Toute couleur comportant chacun de ses trois composants (rouge, vert, bleu) entre les composants correspondants des clés de couleur haute et basse devient transparente.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une clé de couleur pour la catégorie par défaut, une autre clé de couleur pour la catégorie bitmap et encore une autre clé de couleur pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez une collection de paramètres de réglage pour la catégorie par défaut. Si vous définissez la clé de couleur pour la catégorie stylet en passant <xref:System.Drawing.Imaging.ColorAdjustType.Pen> à la <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> (méthode), aucun des paramètres de réglage par défaut ne s’appliquera aux stylets.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
1.  Ouvre un <xref:System.Drawing.Image> qui utilise le fichier Circle.bmp et le dessine à l’écran.  
  
2.  Crée un <xref:System.Drawing.Imaging.ImageAttributes> de l’objet et définit sa clé de couleur en appelant le <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> (méthode).  
  
3.  Dessine l’image à l’écran à l’aide de la clé de couleur de la <xref:System.Drawing.Imaging.ImageAttributes> objet.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrices">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit la matrice de réglage des couleurs et la matrice de réglage des nuances de gris.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matrice de réglage des couleurs.</param>
        <param name="grayMatrix">Matrice de réglage des nuances de gris.</param>
        <summary>Définit la matrice de réglage des couleurs et la matrice de réglage des nuances de gris pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier des matrices de réglage pour la catégorie par défaut, les matrices de réglage des différents pour la catégorie bitmap et encore autres matrices de réglage pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 Appel de la <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> méthode équivaut à appeler le <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> méthode et en passant <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> pour le `flags` paramètre. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Spécifie que toutes les couleurs (notamment les gris) sont ajustées par la matrice de réglage des couleurs, pas la matrice de réglage des nuances de gris. Par conséquent, la matrice de réglage des nuances de gris passée à cette méthode n’a aucun effet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matrice de réglage des couleurs.</param>
        <param name="grayMatrix">Matrice de réglage des nuances de gris.</param>
        <param name="flags">Élément de <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> qui spécifie le type d'image et la couleur qui seront affectés par les matrices de réglage des couleurs et des nuances de gris.</param>
        <summary>Définit la matrice de réglage des couleurs et la matrice de réglage des nuances de gris pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier des matrices de réglage pour la catégorie par défaut, les matrices de réglage des différents pour la catégorie bitmap et encore autres matrices de réglage pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matrice de réglage des couleurs.</param>
        <param name="grayMatrix">Matrice de réglage des nuances de gris.</param>
        <param name="mode">Élément de <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> qui spécifie le type d'image et la couleur qui seront affectés par les matrices de réglage des couleurs et des nuances de gris.</param>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle les matrices de réglage des couleurs et de réglage des nuances de gris sont définies.</param>
        <summary>Définit la matrice de réglage des couleurs et la matrice de réglage des nuances de gris pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier des matrices de réglage pour la catégorie par défaut, les matrices de réglage des différents pour la catégorie bitmap et encore autres matrices de réglage pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez une collection de paramètres de réglage pour la catégorie par défaut. Si vous définissez les matrices de réglage des couleurs et de réglage des nuances de gris pour la catégorie stylet en passant <xref:System.Drawing.Imaging.ColorAdjustType.Pen> à la <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> (méthode), aucun des paramètres de réglage par défaut ne s’appliquera aux stylets.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit la matrice de réglage des couleurs.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matrice de réglage des couleurs.</param>
        <summary>Définit la matrice de réglage des couleurs pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une matrice de réglage des couleurs pour la catégorie par défaut, une matrice de réglage des couleurs différentes pour la catégorie bitmap et encore une matrice de réglage des couleurs différentes pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 Appel de la <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> méthode équivaut à appeler le <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> méthode et en passant <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> pour le `flags` paramètre. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Spécifie que toutes les couleurs (notamment les gris) sont ajustées par la matrice de réglage des couleurs  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
1.  Crée une image rectangle qui a la couleur la valeur 128, produisant un rectangle rempli avec une couleur unie de gris moyen. Le code dessine ensuite cette image rectangle à l’écran.  
  
2.  Crée un <xref:System.Drawing.Imaging.ColorMatrix> et définit ses <xref:System.Drawing.Drawing2D.Matrix> emplacement à 1,75, ce qui met l’accent sur la composante rouge de l’image.  
  
3.  Crée un <xref:System.Drawing.Imaging.ImageAttributes> objet et appelle le <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> (méthode).  
  
4.  Dessine l’image (un second rectangle) à l’écran à l’aide de la <xref:System.Drawing.Imaging.ColorMatrix> défini dans le <xref:System.Drawing.Imaging.ImageAttributes> objet.  
  
 Notez que le deuxième rectangle a la couleur rouge est soulignée.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matrice de réglage des couleurs.</param>
        <param name="flags">Élément de <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> qui spécifie le type d'image et la couleur qui seront affectés par la matrice de réglage des couleurs.</param>
        <summary>Définit la matrice de réglage des couleurs pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une matrice de réglage des couleurs pour la catégorie par défaut, une matrice de réglage des couleurs différentes pour la catégorie bitmap et encore une matrice de réglage des couleurs différentes pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez la <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matrice de réglage des couleurs.</param>
        <param name="mode">Élément de <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> qui spécifie le type d'image et la couleur qui seront affectés par la matrice de réglage des couleurs.</param>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle la matrice de réglage des couleurs est définie.</param>
        <summary>Définit la matrice de réglage des couleurs pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une matrice de réglage des couleurs pour la catégorie par défaut, une matrice de réglage des couleurs différentes pour la catégorie bitmap et encore une matrice de réglage des couleurs différentes pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez une collection de paramètres de réglage pour la catégorie par défaut. Si vous définissez la matrice de réglage des couleurs pour la catégorie stylet en passant <xref:System.Drawing.Imaging.ColorAdjustType.Pen> à la <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> (méthode), aucun des paramètres de réglage par défaut ne s’appliquera aux stylets.  
  
   
  
## Examples  
 L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A>. Pour exécuter cet exemple, collez le code dans un Windows Form et appelez `RotateColors` à partir du formulaire <xref:System.Windows.Forms.Control.Paint> méthode de gestion des événements, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.RotateColors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RotateColors/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.RotateColors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RotateColors/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit la valeur gamma.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="gamma">Valeur de correction gamma.</param>
        <summary>Définit la valeur gamma pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les valeurs standard pour le `gamma` paramètre sont comprises entre 1,0 et 2,2 ; Toutefois, les valeurs comprises entre 0,1 et 5.0 peut s’avérer utiles dans certaines circonstances.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une valeur gamma pour la catégorie par défaut, une autre valeur gamma pour la catégorie bitmap et toujours une valeur gamma différente pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 Les valeurs de gamma en dehors de la plage habituelle peuvent être utiles pour les moniteurs CRT anciens ou pour les analyses qui se trouvent dans des conditions d’éclairage exceptionnelles, telles que les environnements industriels ou de la fenêtre affiche.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. En outre, vous devez modifier le chemin d’accès du fichier image à un nom de chemin d’accès et d’image valide sur votre système. Le code exécute les actions suivantes :  
  
1.  Ouvre un <xref:System.Drawing.Image> qui utilise le fichier Camera.jpg et le dessine à l’écran à l’aide de la valeur par défaut pour gamma.  
  
2.  Crée un <xref:System.Drawing.Imaging.ImageAttributes> de l’objet et définit sa valeur gamma à 2.2 en appelant le <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> (méthode).  
  
3.  Dessine l’image (un second appareil photo) à l’écran à l’aide de la valeur gamma définie le <xref:System.Drawing.Imaging.ImageAttributes> objet.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="gamma">Valeur de correction gamma.</param>
        <param name="type">Élément de l'énumération <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle la valeur gamma est définie.</param>
        <summary>Définit la valeur gamma pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les valeurs standard pour le `gamma` paramètre sont comprises entre 1,0 et 2,2 ; Toutefois, les valeurs comprises entre 0,1 et 5.0 peut s’avérer utiles dans certaines circonstances.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une valeur gamma pour la catégorie par défaut, une autre valeur gamma pour la catégorie bitmap et toujours une valeur gamma différente pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez une collection de paramètres de réglage pour la catégorie par défaut. Si vous définissez la valeur gamma pour la catégorie stylet en passant <xref:System.Drawing.Imaging.ColorAdjustType.Pen> à la <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> (méthode), aucun des paramètres de réglage par défaut ne s’appliquera aux stylets.  
  
 Les valeurs de gamma en dehors de la plage habituelle peuvent être utiles pour les moniteurs CRT anciens ou pour les analyses qui se trouvent dans des conditions d’éclairage exceptionnelles, telles que les environnements industriels ou de la fenêtre affiche.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez la <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%28System.Single%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Désactive le réglage des couleurs.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Désactive le réglage des couleurs pour la catégorie par défaut. Vous pouvez appeler la méthode <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> pour rétablir les paramètres de réglage des couleurs qui étaient en vigueur avant l'appel à la méthode <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une valeur gamma pour la catégorie par défaut, une autre valeur gamma pour la catégorie bitmap et toujours une valeur gamma différente pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
1.  Ouvre un <xref:System.Drawing.Image> qui utilise le fichier Camera.jpg.  
  
2.  Définit la valeur gamma de la <xref:System.Drawing.Imaging.ImageAttributes> objet 0,25.  
  
3.  Dessine l’image à l’écran.  
  
4.  Appelle la méthode <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
5.  Dessine l’image (un second appareil photo) à l’écran ; Toutefois, étant donné que la <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> méthode a été appelée, les valeurs par défaut à une valeur de 1.0 et l’image est dessinée à l’écran avec le paramètre gamma par défaut.  
  
 Notez que l’image de gauche est très délavée (gamma de 0,25) et l’image de droite a meilleur contraste (gamma de 1,0).  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle la correction des couleurs est désactivée.</param>
        <summary>Désactive le réglage des couleurs pour une catégorie spécifiée. Vous pouvez appeler la méthode <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> pour rétablir les paramètres de réglage des couleurs qui étaient en vigueur avant l'appel à la méthode <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier une valeur gamma pour la catégorie par défaut, une autre valeur gamma pour la catégorie bitmap et toujours une valeur gamma différente pour la catégorie stylet.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez la <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit le canal de sortie CMJN (cyan-magenta-jaune-noir).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
      </Parameters>
      <Docs>
        <param name="flags">Élément de <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> qui spécifie le canal de sortie.</param>
        <summary>Définit le canal de sortie CMJN (cyan-magenta-jaune-noir) pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> méthode pour convertir une image à un espace de couleurs CMJN et examiner l’intensité de l’un des canaux de couleurs CMJN. Par exemple, supposons que vous créez un <xref:System.Drawing.Imaging.ImageAttributes> et définissez son canal de sortie bitmap <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>. Si vous passez le chemin d’accès de ce <xref:System.Drawing.Imaging.ImageAttributes> de l’objet à le <xref:System.Drawing.Graphics.DrawImage%2A> (méthode), le composant cyan de chaque pixel est calculé et chaque pixel de l’image restituée est une nuance de gris qui indique l’intensité de son canal cyan. De même, vous pouvez rendre des images qui indiquent l’intensité des canaux magenta, jaune et noir.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier un canal de sortie pour la catégorie par défaut et un canal de sortie différent pour la catégorie bitmap.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie bitmap, les paramètres par défaut s’appliquent à la catégorie de la bitmap.  
  
   
  
## Examples  
 L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>. Pour exécuter cet exemple, collez le code suivant dans un Windows Form. Gérer du formulaire <xref:System.Windows.Forms.Control.Paint> événements et les appels `ShowOutputChannels`, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="flags">Élément de <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> qui spécifie le canal de sortie.</param>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle le canal de sortie est défini.</param>
        <summary>Définit le canal de sortie CMJN (cyan-magenta-jaune-noir) pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> méthode pour convertir une image à un espace de couleurs CMJN et examiner l’intensité de l’un des canaux de couleurs CMJN. Par exemple, supposons que vous créez un <xref:System.Drawing.Imaging.ImageAttributes> et définissez son canal de sortie bitmap <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>. Si vous passez le chemin d’accès de ce <xref:System.Drawing.Imaging.ImageAttributes> de l’objet à le <xref:System.Drawing.Graphics.DrawImage%2A> (méthode), le composant cyan de chaque pixel est calculé et chaque pixel de l’image restituée est une nuance de gris qui indique l’intensité de son canal cyan. De même, vous pouvez rendre des images qui indiquent l’intensité des canaux magenta, jaune et noir.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier un canal de sortie pour la catégorie par défaut et un canal de sortie différent pour la catégorie bitmap.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie bitmap, les paramètres par défaut s’appliquent à la catégorie de la bitmap.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez une collection de paramètres de réglage pour la catégorie par défaut. Si vous définissez le canal de sortie pour la catégorie bitmap en passant <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> à la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> (méthode), aucun des paramètres de réglage par défaut ne s’appliquera aux bitmaps.  
  
   
  
## Examples  
 L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>. Pour exécuter cet exemple, collez le code suivant dans un Windows Form. Gérer du formulaire <xref:System.Windows.Forms.Control.Paint> événements et les appels `ShowOutputChannels`, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit le fichier du profil des couleurs du canal de sortie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Nom du chemin d’accès au fichier de profil des couleurs. Si le fichier du profil des couleurs se trouve dans le répertoire %SystemRoot%\System32\Spool\Drivers\Color, ce paramètre peut être le nom de fichier. Sinon, ce paramètre doit être un nom de chemin qualifié complet.</param>
        <summary>Définit le fichier du profil des couleurs du canal de sortie pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> et <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> méthodes pour convertir une image à un espace de couleurs CMJN (cyan-magenta-jaune-noir) et examiner l’intensité de l’un des CMJN des canaux de couleurs. Par exemple, supposons que vous écrivez du code qui effectue les étapes suivantes :  
  
1.  Créer un <xref:System.Drawing.Image>.  
  
2.  Créer un <xref:System.Drawing.Imaging.ImageAttributes> objet.  
  
3.  Passer <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> à la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> méthode de la <xref:System.Drawing.Imaging.ImageAttributes> objet.  
  
4.  Passez le nom de chemin d’accès d’un fichier de profil de couleurs à la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> méthode de la <xref:System.Drawing.Imaging.ImageAttributes> objet.  
  
5.  Passez les chemins d’accès de la <xref:System.Drawing.Image> et <xref:System.Drawing.Imaging.ImageAttributes> des objets sur le <xref:System.Drawing.Graphics.DrawImage%2A> (méthode).  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] utilise le fichier du profil des couleurs pour calculer le composant cyan de chaque pixel de l’image et chaque pixel de l’image rendue correspondra à une nuance de gris qui indique l’intensité de son canal cyan.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier un fichier de profil de couleurs de canal de sortie pour la catégorie par défaut et un fichier de profil de couleurs de canal de sortie différent pour la catégorie bitmap.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie bitmap, les paramètres par défaut s’appliquent à la catégorie de la bitmap.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Nom du chemin d’accès au fichier de profil des couleurs. Si le fichier du profil des couleurs se trouve dans le répertoire %SystemRoot%\System32\Spool\Drivers\Color, ce paramètre peut être le nom de fichier. Sinon, ce paramètre doit être un nom de chemin qualifié complet.</param>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle le fichier du profil des couleurs du canal de sortie est défini.</param>
        <summary>Définit le fichier du profil des couleurs du canal de sortie pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> et <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> méthodes pour convertir une image à un espace de couleurs CMJN (cyan-magenta-jaune-noir) et examiner l’intensité de l’un des CMJN des canaux de couleurs. Par exemple, supposons que vous écrivez du code qui effectue les étapes suivantes :  
  
1.  Créer un <xref:System.Drawing.Image>.  
  
2.  Créer un <xref:System.Drawing.Imaging.ImageAttributes> objet.  
  
3.  Passer <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> à la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> méthode de la <xref:System.Drawing.Imaging.ImageAttributes> objet.  
  
4.  Passez le nom de chemin d’accès d’un fichier de profil de couleurs à la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> méthode de la <xref:System.Drawing.Imaging.ImageAttributes> objet.  
  
5.  Passez les chemins d’accès de la <xref:System.Drawing.Image> et <xref:System.Drawing.Imaging.ImageAttributes> des objets sur le <xref:System.Drawing.Graphics.DrawImage%2A> (méthode).  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] utilise le fichier du profil des couleurs pour calculer le composant cyan de chaque pixel de l’image et chaque pixel de l’image rendue correspondra à une nuance de gris qui indique l’intensité de son canal cyan.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier un fichier de profil de couleurs de canal de sortie pour la catégorie par défaut et un fichier de profil de couleurs de canal de sortie différent pour la catégorie bitmap.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie bitmap, les paramètres par défaut s’appliquent à la catégorie de la bitmap.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez une collection de paramètres de réglage pour la catégorie par défaut. Si vous définissez le fichier de profil de couleurs de canal de sortie pour la catégorie bitmap en passant <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> à la <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> (méthode), aucun des paramètres de réglage par défaut ne s’appliquera aux bitmaps.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit la table de remappage des couleurs.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Tableau de paires de couleurs de type <see cref="T:System.Drawing.Imaging.ColorMap" />. Chaque paire de couleurs contient une couleur existante (la première valeur) et la couleur à laquelle elle sera mappée (la seconde valeur).</param>
        <summary>Définit la table de remappage des couleurs pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une table de remappage des couleurs est un tableau de <xref:System.Drawing.Imaging.ColorMap> structures. Chaque <xref:System.Drawing.Imaging.ColorMap> structure possède deux <xref:System.Drawing.Color> objets : un qui spécifie l’ancienne couleur et un qui spécifie la nouvelle couleur correspondante. Pendant le rendu, n’importe quelle couleur correspondant à l’un des anciennes couleurs dans la table de remappage est remplacée par la nouvelle couleur correspondante.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier un remappage des couleurs pour la catégorie par défaut, une table de remappage des couleurs pour la catégorie bitmap et encore une table de remappage des couleurs différentes pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
1.  Crée une image (un cercle rouge), enregistre sous Circle2.jpg, ouvre cette image et dessine à l’écran.  
  
2.  Crée une table des couleurs qui mappe la couleur rouge à la couleur verte.  
  
3.  Dessine l’image créé précédemment à l’écran, mais cette fois à l’aide de la table des couleurs.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap(), type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="map">Tableau de paires de couleurs de type <see cref="T:System.Drawing.Imaging.ColorMap" />. Chaque paire de couleurs contient une couleur existante (la première valeur) et la couleur à laquelle elle sera mappée (la seconde valeur).</param>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle la table de remappage des couleurs est définie.</param>
        <summary>Définit la table de remappage des couleurs pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une table de remappage des couleurs est un tableau de <xref:System.Drawing.Imaging.ColorMap> structures. Chaque <xref:System.Drawing.Imaging.ColorMap> structure possède deux <xref:System.Drawing.Color> objets : un qui spécifie l’ancienne couleur et un qui spécifie la nouvelle couleur correspondante. Pendant le rendu, n’importe quelle couleur correspondant à l’un des anciennes couleurs dans la table de remappage est remplacée par la nouvelle couleur correspondante.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier un remappage des couleurs pour la catégorie par défaut, une table de remappage des couleurs pour la catégorie bitmap et encore une table de remappage des couleurs différentes pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez une collection de paramètres de réglage pour la catégorie par défaut. Si vous définissez la table de remappage des couleurs pour la catégorie stylet en passant <xref:System.Drawing.Imaging.ColorAdjustType.Pen> à la <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> (méthode), aucun des paramètres de réglage par défaut ne s’appliquera aux stylets.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez la <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%28System.Drawing.Imaging.ColorMap%5B%5D%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit le seuil (plage de transparence).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="threshold">Nombre réel qui spécifie la valeur de seuil.</param>
        <summary>Définit le seuil (plage de transparence) pour la catégorie par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le seuil est une valeur comprise entre 0 et 1 qui spécifie un point de troncature pour chaque composant de couleur. Par exemple, supposons que le seuil est défini sur 0,7 et que vous restituez une couleur dont rouge, verts et bleus composants sont 230, 50 et 220, respectivement. Le composant rouge (230) étant supérieur à 0.7x255, passe à 255 (intensité complète). Le composant vert (50) étant inférieur à 0.7x255, le composant vert passe à 0. Le composant bleu (220) est supérieur à 0.7x255, donc le composant bleu passe à 255.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier un seuil pour la catégorie par défaut, un seuil pour la catégorie bitmap et encore un seuil différent pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
1.  Ouvre un <xref:System.Drawing.Image> et dessine à l’écran.  
  
2.  Crée un <xref:System.Drawing.Imaging.ImageAttributes> de l’objet et définit son seuil à l’aide de la <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> (méthode).  
  
3.  Dessine l’image à l’écran à l’aide du seuil de la <xref:System.Drawing.Imaging.ImageAttributes> objet.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="threshold">Valeur de seuil comprise entre 0,0 et 1,0 qui est utilisée comme point d'arrêt pour trier des couleurs qui seront mappées à une valeur maximale ou minimale.</param>
        <param name="type">Élément de <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> qui spécifie la catégorie pour laquelle le seuil de couleur est défini.</param>
        <summary>Définit le seuil (plage de transparence) pour une catégorie spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le seuil est une valeur comprise entre 0 et 1 qui spécifie un point de troncature pour chaque composant de couleur. Par exemple, supposons que le seuil est défini sur 0,7 et que vous restituez une couleur dont rouge, verts et bleus composants sont 230, 50 et 220, respectivement. Le composant rouge (230) étant supérieur à 0.7x255, passe à 255 (intensité complète). Le composant vert (50) étant inférieur à 0.7x255, le composant vert passe à 0. Le composant bleu (220) est supérieur à 0.7x255, donc le composant bleu passe à 255.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> objet conserve les paramètres de couleur et nuances de gris pour cinq catégories de réglages : par défaut, bitmap, pinceau, stylet et texte. Par exemple, vous pouvez spécifier un seuil pour la catégorie par défaut, un seuil pour la catégorie bitmap et encore un seuil différent pour la catégorie stylet.  
  
 Les paramètres de réglage des couleurs et de réglage des nuances de gris par défaut s’appliquent à toutes les catégories qui n’ont pas de paramètres de réglage de leurs propres. Par exemple, si vous spécifiez jamais de paramètres de réglage pour la catégorie stylet, les paramètres par défaut s’appliquent à cette catégorie.  
  
 Dès que vous spécifiez un paramètre de réglage des nuances de gris pour une certaine catégorie ou le réglage des couleurs, les paramètres de réglage par défaut ne s’appliquent plus à cette catégorie. Par exemple, supposons que vous spécifiez une collection de paramètres de réglage pour la catégorie par défaut. Si vous définissez le seuil pour la catégorie stylet en passant <xref:System.Drawing.Imaging.ColorAdjustType.Pen> à la <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> (méthode), aucun des paramètres de réglage par défaut ne s’appliquera aux stylets.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez la <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%28System.Single%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetWrapMode">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit le mode habillage.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWrapMode (mode As WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="mode">Élément de <see cref="T:System.Drawing.Drawing2D.WrapMode" /> qui spécifie comment les copies répétées d'une image sont utilisées pour remplir une zone avec la mosaïque d'images.</param>
        <summary>Définit le mode habillage qui est utilisé pour décider comment placer une texture en mosaïque sur une forme ou au niveau des limites d'une forme. Une texture est placée en mosaïque sur une forme pour remplir celle-ci quand la texture est plus petite que la forme qu'elle remplit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel de la <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> méthode équivaut à appeler la méthode <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> et en passant <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> pour la `color` paramètre. <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Spécifie la couleur des pixels hors d’un rendu d’image. Cette couleur est visible si le paramètre de mode a la valeur <xref:System.Drawing.Drawing2D.WrapMode.Clamp> et le rectangle source passé à la <xref:System.Drawing.Graphics.DrawImage%2A> méthode est plus grande que l’image elle-même.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
1.  Ouvre un <xref:System.Drawing.Image> du fichier Circle3.jpg (un cercle de petite taille, de couleur rouge) et le dessine à l’écran.  
  
2.  Crée un <xref:System.Drawing.Imaging.ImageAttributes> objet et définit le <xref:System.Drawing.Drawing2D.WrapMode> énumération <xref:System.Drawing.Drawing2D.WrapMode.Tile>.  
  
3.  Crée un <xref:System.Drawing.TextureBrush> à l’aide de l’image du fichier Circle3.jpg.  
  
4.  Dessine un rectangle à l’écran qui est remplie avec les cercles de petite taille, de couleur rouge.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="mode">Élément de <see cref="T:System.Drawing.Drawing2D.WrapMode" /> qui spécifie comment les copies répétées d'une image sont utilisées pour remplir une zone avec la mosaïque d'images.</param>
        <param name="color">Objet <see cref="T:System.Drawing.Imaging.ImageAttributes" /> qui spécifie la couleur des pixels hors d'un rendu d'image. Cette couleur est visible si le paramètre de mode a la valeur <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> et que le rectangle source passé à <see cref="Overload:System.Drawing.Graphics.DrawImage" /> est plus grand que l'image elle-même.</param>
        <summary>Spécifie le mode habillage et la couleur utilisés pour décider comment placer une texture en mosaïque sur une forme ou au niveau des limites d'une forme. Une texture est placée en mosaïque sur une forme pour remplir celle-ci quand la texture est plus petite que la forme qu'elle remplit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez la <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color, bool clamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color, bool clamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color, bool clamp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="clamp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mode">Élément de <see cref="T:System.Drawing.Drawing2D.WrapMode" /> qui spécifie comment les copies répétées d'une image sont utilisées pour remplir une zone avec la mosaïque d'images.</param>
        <param name="color">Objet de couleur qui spécifie la couleur des pixels hors d'un rendu d'image. Cette couleur est visible si le paramètre de mode a la valeur <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> et que le rectangle source passé à <see cref="Overload:System.Drawing.Graphics.DrawImage" /> est plus grand que l'image elle-même.</param>
        <param name="clamp">Ce paramètre est sans effet. Affectez-lui la valeur <see langword="false" />.</param>
        <summary>Spécifie le mode habillage et la couleur utilisés pour décider comment placer une texture en mosaïque sur une forme ou au niveau des limites d'une forme. Une texture est placée en mosaïque sur une forme pour remplir celle-ci quand la texture est plus petite que la forme qu'elle remplit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez la <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>