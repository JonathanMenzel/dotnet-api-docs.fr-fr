<Type Name="ArrayPool&lt;T&gt;" FullName="System.Buffers.ArrayPool&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c365ab2f2412036b41ba89388ab6a1187f6696d2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36647247" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ArrayPool&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ArrayPool`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.ArrayPool`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ArrayPool(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ArrayPool abstract" />
  <TypeSignature Language="F#" Value="type ArrayPool&lt;'T&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Buffers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="a8c72-101">Le type des objets qui se trouvent dans le pool de ressources.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a8c72-101">The type of the objects that are in the resource pool.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="a8c72-102">Fournit un pool de ressources qui permet la réutilisation des instances de type <see cref="T:T[]" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a8c72-102">Provides a resource pool that enables reusing instances of type <see cref="T:T[]" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="a8c72-103">À l’aide de la <xref:System.Buffers.ArrayPool%601> classe louer et retourner des mémoires tampons (à l’aide de la <xref:System.Buffers.ArrayPool%601.Rent%2A> et <xref:System.Buffers.ArrayPool%601.Return%2A> méthodes) peut améliorer les performances dans les situations où les tableaux sont créés et détruits fréquemment, ce qui entraîne la pression de mémoire importante sur le garbage collecteur.</span><span class="sxs-lookup"><span data-stu-id="a8c72-103">Using the <xref:System.Buffers.ArrayPool%601> class to rent and return buffers (using the <xref:System.Buffers.ArrayPool%601.Rent%2A> and <xref:System.Buffers.ArrayPool%601.Return%2A> methods) can improve performance in situations where arrays are created and destroyed frequently, resulting in significant memory pressure on the garbage collector.</span></span>
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="a8c72-104">Cette classe est thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a8c72-104">This class is thread-safe.</span>
      </span>
      <span data-ttu-id="a8c72-105">Tous les membres peuvent être utilisés par plusieurs threads simultanément.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a8c72-105">All members may be used by multiple threads concurrently.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArrayPool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArrayPool();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8c72-106">Initialise une nouvelle instance de la classe <see cref="T:System.Buffers.ArrayPool`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-106">Initializes a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="a8c72-107">Notez que ce constructeur est protégé ; Il peut être appelé uniquement par les classes dérivées de la <xref:System.Buffers.ArrayPool%601> classe.</span><span class="sxs-lookup"><span data-stu-id="a8c72-107">Note that this constructor is protected; it can only be called by classes derived from the <xref:System.Buffers.ArrayPool%601> class.</span></span> 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8c72-108">Crée une instance de la classe <see cref="T:System.Buffers.ArrayPool`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-108">Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8c72-109">Nouvelle instance de la classe <see cref="T:System.Buffers.ArrayPool`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-109">A new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create (int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create(int32 maxArrayLength, int32 maxArraysPerBucket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (maxArrayLength As Integer, maxArraysPerBucket As Integer) As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create(int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="F#" Value="static member Create : int * int -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create (maxArrayLength, maxArraysPerBucket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxArrayLength" Type="System.Int32" />
        <Parameter Name="maxArraysPerBucket" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxArrayLength">
          <span data-ttu-id="a8c72-110">Longueur maximale d’une instance de tableau qui peut être stockée dans le pool.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-110">The maximum length of an array instance that may be stored in the pool.</span>
          </span>
        </param>
        <param name="maxArraysPerBucket">
          <span data-ttu-id="a8c72-111">Nombre maximal d’instances de tableau qui peuvent être stockées dans chaque compartiment du pool.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-111">The maximum number of array instances that may be stored in each bucket in the pool.</span>
          </span>
          <span data-ttu-id="a8c72-112">Le pool regroupe les tableaux de mêmes longueurs dans des compartiments pour un accès plus rapide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-112">The pool groups arrays of similar lengths into buckets for faster access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8c72-113">Crée une instance de la classe <see cref="T:System.Buffers.ArrayPool`1" /> en utilisant la configuration spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-113">Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class using the specifed configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8c72-114">Nouvelle instance de la classe <see cref="T:System.Buffers.ArrayPool`1" /> avec la configuration spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-114">A new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class with the specified configuration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="a8c72-115">L’instance de la <xref:System.Buffers.ArrayPool%601> classe créée par cette méthode permet de regrouper les tableaux dans des compartiments, sans aucune plus de `maxArraysPerBucket` dans chaque compartiment, puis à ces groupes ne dépassant ne pas `maxArrayLength` longueur.</span><span class="sxs-lookup"><span data-stu-id="a8c72-115">The instance of the <xref:System.Buffers.ArrayPool%601> class created by this method will group arrays into buckets, with no more than `maxArraysPerBucket` in each bucket, and with those arrays not exceeding `maxArrayLength` in length.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rent">
      <MemberSignature Language="C#" Value="public abstract T[] Rent (int minimumLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] Rent(int32 minimumLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Rent (minimumLength As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;T&gt; ^ Rent(int minimumLength);" />
      <MemberSignature Language="F#" Value="abstract member Rent : int -&gt; 'T[]" Usage="arrayPool.Rent minimumLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimumLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minimumLength">
          <span data-ttu-id="a8c72-116">Longueur minimale du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-116">The minimum length of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8c72-117">Récupère une mémoire tampon qui est au moins de la longueur demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-117">Retrieves a buffer that is at least the requested length.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8c72-118">Tableau de type <see cref="T:T[]" /> dont la longueur est au moins <paramref name="minimumLength" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-118">An array of type <see cref="T:T[]" /> that is at least <paramref name="minimumLength" /> in length.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="a8c72-119">Ce tampon est emprunté à l’appelant et doit être retourné à la même pool à l’aide du <xref:System.Buffers.ArrayPool%601.Return%2A> (méthode), afin qu’il peut être réutilisé dans les appels suivants à la <xref:System.Buffers.ArrayPool%601.Rent%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="a8c72-119">This buffer is loaned to the caller and should be returned to the same pool using the <xref:System.Buffers.ArrayPool%601.Return%2A> method, so that it can be reused in subsequent calls to the <xref:System.Buffers.ArrayPool%601.Rent%2A> method.</span></span> <span data-ttu-id="a8c72-120">Échec de retourner une mémoire tampon louée n’est pas une erreur irrécupérable.</span><span class="sxs-lookup"><span data-stu-id="a8c72-120">Failure to return a rented buffer is not a fatal error.</span></span> <span data-ttu-id="a8c72-121">Toutefois, ceci peut entraîner l’application une diminution des performances, car le pool peut besoin de créer une nouvelle mémoire tampon pour remplacer celle perdue.</span><span class="sxs-lookup"><span data-stu-id="a8c72-121">However, it may lead to decreased application performance, as the pool may need to create a new buffer to replace the lost one.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public abstract void Return (T[] array, bool clearArray = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Return(!T[] array, bool clearArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Return (array As T(), Optional clearArray As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member Return : 'T[] * bool -&gt; unit" Usage="arrayPool.Return (array, clearArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="clearArray" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="a8c72-122">Mémoire tampon à retourner au pool préalablement obtenu à l’aide de la méthode <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-122">A buffer to return to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method.</span>
          </span>
        </param>
        <param name="clearArray">
          <span data-ttu-id="a8c72-123">Indique si le contenu de la mémoire tampon doit être effacé avant une réutilisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-123">Indicates whether the contents of the buffer should be cleared before reuse.</span>
          </span>
          <span data-ttu-id="a8c72-124">Si <paramref name="clearArray" /> est défini sur <see langword="true" />, et si le pool stockera la mémoire tampon pour permettre une réutilisation ultérieure, la méthode <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> efface <paramref name="array" /> de son contenu afin qu’un appelant suivant utilisant la méthode <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> ne voit pas le contenu de l’appelant précédent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-124">If <paramref name="clearArray" /> is set to <see langword="true" />, and if the pool will store the buffer to enable subsequent reuse, the <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> method will clear the <paramref name="array" /> of its contents so that a subsequent caller using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method will not see the content of the previous caller.</span>
          </span>
          <span data-ttu-id="a8c72-125">Si <paramref name="clearArray" /> a la valeur <see langword="false" /> ou si le pool libère la mémoire tampon, le contenu du tableau reste inchangé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-125">If <paramref name="clearArray" /> is set to <see langword="false" /> or if the pool will release the buffer, the array's contents are left unchanged.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8c72-126">Retourne un tableau dans le pool préalablement obtenu à l’aide de la méthode <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> sur la même instance <see cref="T:System.Buffers.ArrayPool`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-126">Returns an array to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method on the same <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="a8c72-127">Une fois qu’une mémoire tampon a été retournée au pool, l’appelant abandonne toutes de la propriété de la mémoire tampon et il ne doit pas utiliser.</span><span class="sxs-lookup"><span data-stu-id="a8c72-127">Once a buffer has been returned to the pool, the caller gives up all ownership of the buffer and must not use it.</span></span> <span data-ttu-id="a8c72-128">La référence retournée à partir d’un appel donné à la <xref:System.Buffers.ArrayPool%601.Rent%2A> méthode doit uniquement être retournée à l’aide de la <xref:System.Buffers.ArrayPool%601.Return%2A> méthode une seule fois.</span><span class="sxs-lookup"><span data-stu-id="a8c72-128">The reference returned from a given call to the <xref:System.Buffers.ArrayPool%601.Rent%2A> method must only be returned using the <xref:System.Buffers.ArrayPool%601.Return%2A> method once.</span></span> <span data-ttu-id="a8c72-129">La valeur par défaut <xref:System.Buffers.ArrayPool%601> peut conserver la mémoire tampon retournée pour louer à nouveau, il ou elle peut libérer la mémoire tampon retournée s’il est déterminé que le pool contient déjà suffisamment tampons stockés.</span><span class="sxs-lookup"><span data-stu-id="a8c72-129">The default <xref:System.Buffers.ArrayPool%601> may hold onto the returned buffer in order to rent it again, or it may release the returned buffer if it's determined that the pool already has enough buffers stored.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Shared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Buffers.ArrayPool`1&lt;!T&gt; Shared" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayPool`1.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Shared As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Buffers::ArrayPool&lt;T&gt; ^ Shared { System::Buffers::ArrayPool&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Shared : System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Shared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8c72-130">Obtient une instance <see cref="T:System.Buffers.ArrayPool`1" /> partagée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-130">Gets a shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8c72-131">Un élément partagé <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8c72-131">A shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="a8c72-132">Le pool partagé fournit une implémentation par défaut de la <xref:System.Buffers.ArrayPool%601> classe est destinée à l’application générale.</span><span class="sxs-lookup"><span data-stu-id="a8c72-132">The shared pool provides a default implementation of the <xref:System.Buffers.ArrayPool%601> class that's intended for general applicability.</span></span> <span data-ttu-id="a8c72-133">Une classe partagée conserve les tableaux de différentes tailles et peut-être distribuer à nouveau un plus grand tableau qu’a été demandée, mais il jamais rendent un tableau plus petit que celle a été demandée.</span><span class="sxs-lookup"><span data-stu-id="a8c72-133">A shared class maintains arrays of multiple sizes, and may hand back a larger array than was actually requested, but it will never hand back a smaller array than was requested.</span></span> <span data-ttu-id="a8c72-134">Location d’une mémoire tampon à partir d’une classe partagée à l’aide de la <xref:System.Buffers.ArrayPool%601.Rent%2A> méthode entraîne un tampon existant qui est extraite du pool si un mémoire tampon appropriée est disponible ou dans une nouvelle mémoire tampon allouée s’il n’est pas disponible.</span><span class="sxs-lookup"><span data-stu-id="a8c72-134">Renting a buffer from a shared class using the <xref:System.Buffers.ArrayPool%601.Rent%2A> method will result in an existing buffer being taken from the pool if an appropriate buffer is available or in a new buffer being allocated if one is not available.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>