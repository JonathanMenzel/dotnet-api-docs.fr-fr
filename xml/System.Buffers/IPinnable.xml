<Type Name="IPinnable" FullName="System.Buffers.IPinnable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69be3db305f6da6f6e7127dbe6894991bce348c0" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58460706" /></Metadata><TypeSignature Language="C#" Value="public interface IPinnable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPinnable" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.IPinnable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPinnable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPinnable" />
  <TypeSignature Language="F#" Value="type IPinnable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fournit un mécanisme permettant d’épingler et de désépingler les objets afin d’empêcher le récupérateur de mémoire de les déplacer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

La classe <xref:System.Buffers.MemoryManager%601> implémente l'interface `IPinnable`.

       ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Pin">
      <MemberSignature Language="C#" Value="public System.Buffers.MemoryHandle Pin (int elementIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Buffers.MemoryHandle Pin(int32 elementIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IPinnable.Pin(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pin (elementIndex As Integer) As MemoryHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::MemoryHandle Pin(int elementIndex);" />
      <MemberSignature Language="F#" Value="abstract member Pin : int -&gt; System.Buffers.MemoryHandle" Usage="iPinnable.Pin elementIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.MemoryHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementIndex" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="elementIndex">Décalage de l’élément de mémoire tampon vers lequel pointe le <see cref="T:System.Buffers.MemoryHandle" /> retourné.</param>
        <summary>Épingle un bloc de mémoire.</summary>
        <returns>Handle du bloc de mémoire.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Un développeur peut accéder à un objet qui implémente le <xref:System.Buffers.IPinnable> interface sans l’épinglage uniquement par le biais d’API managées. L’épinglage est nécessaire pour l’accès par API non managées. 

Appelez cette méthode pour indiquer que le <xref:System.Buffers.IPinnable> objet ne peut pas être déplacé par le garbage collector afin que l’adresse de l’objet épinglé peut être utilisée.


       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unpin">
      <MemberSignature Language="C#" Value="public void Unpin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unpin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IPinnable.Unpin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unpin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unpin();" />
      <MemberSignature Language="F#" Value="abstract member Unpin : unit -&gt; unit" Usage="iPinnable.Unpin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère un bloc de la mémoire épinglée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Appelez cette méthode pour indiquer que le <xref:System.Buffers.IPinnable> objet n’a plus besoin d’être épinglée, et que le garbage collector peut maintenant passer à l’objet.


       ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>