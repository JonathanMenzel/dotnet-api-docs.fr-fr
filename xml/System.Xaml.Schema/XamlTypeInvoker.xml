<Type Name="XamlTypeInvoker" FullName="System.Xaml.Schema.XamlTypeInvoker">
  <TypeSignature Language="C#" Value="public class XamlTypeInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c1b8a-101">Fournit un point d'extension qui peut construire des instances d'un type XAML via des techniques autres que la réflexion et des constructeurs.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-101">Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b8a-102">L’objectif de <xref:System.Xaml.Schema.XamlTypeInvoker> consiste à activer un système de type XAML extensible, un schéma et une exécution qui ne reposent pas autant sur les fonctionnalités CLR telles que les attributs CLR, les informations de réflexion via <xref:System.Type> et <xref:System.Reflection.MemberInfo>, et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-102">The purpose of <xref:System.Xaml.Schema.XamlTypeInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="c1b8a-103">Les sous-classes de <xref:System.Xaml.Schema.XamlTypeInvoker> sont utilisés comme paramètres d’entrée pour les autres constructeurs de classes de schéma XAML tel que <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-103">Subclasses of <xref:System.Xaml.Schema.XamlTypeInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="c1b8a-104">Vous créez une sous-classe <xref:System.Xaml.XamlType> et passer le <xref:System.Xaml.Schema.XamlTypeInvoker> via au constructeur de base.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-104">You subclass <xref:System.Xaml.XamlType> and pass the <xref:System.Xaml.Schema.XamlTypeInvoker> through to the base constructor.</span></span> <span data-ttu-id="c1b8a-105">En même temps que la définition d’un <xref:System.Xaml.Schema.XamlTypeInvoker> pour le constructeur, vous devez également fournir des substitutions pour certaines de la `Lookup` méthodes de <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-105">Along with defining a <xref:System.Xaml.Schema.XamlTypeInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlType>.</span></span>  
  
 <span data-ttu-id="c1b8a-106"><xref:System.Xaml.Schema.XamlTypeInvoker> a une implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-106"><xref:System.Xaml.Schema.XamlTypeInvoker> has a default implementation.</span></span> <span data-ttu-id="c1b8a-107">L’implémentation par défaut suit un modèle semblable à l’implémentation par défaut des types de schéma XAML <xref:System.Xaml.XamlType> et <xref:System.Xaml.XamlMember>: le système de type CLR est utilisé pour l’instanciation, les valeurs et les recherches, y compris l’utilisation d’attributs CLR, <xref:System.Type> et <xref:System.Reflection.MemberInfo>, et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="c1b8a-108"><xref:System.Xaml.Schema.XamlTypeInvoker> Fournit des méthodes pour les instanciations de base (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) et les méthodes qui sont pertinentes pour les types où le <xref:System.Xaml.XamlType> représente une collection, un dictionnaire ou un tableau (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span><span class="sxs-lookup"><span data-stu-id="c1b8a-108"><xref:System.Xaml.Schema.XamlTypeInvoker> provides methods for basic instantiation (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) and methods that are relevant for types where the <xref:System.Xaml.XamlType> represents a collection, dictionary or array (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1b8a-109">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-109">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlTypeInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlTypeInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1b8a-110">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-110">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b8a-111">L'implémentation par défaut est vide.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-111">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="c1b8a-112">Ce constructeur est appelé en interne pour fournir une valeur pour <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-112">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="c1b8a-113">Pour un <xref:System.Xaml.Schema.XamlTypeInvoker> sous-classe, il est prévu que vous utilisez soit le <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> signature pour la construction ou fournir une substitution qui appelle <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> comme base.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-113">For a <xref:System.Xaml.Schema.XamlTypeInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> as base.</span></span> <span data-ttu-id="c1b8a-114">En fournissant la <xref:System.Xaml.XamlType> implémente un par défaut de modèle où <xref:System.Xaml.Schema.XamlTypeInvoker> est immuable.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-114">Providing the <xref:System.Xaml.XamlType> implements a default pattern where <xref:System.Xaml.Schema.XamlTypeInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeInvoker (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeInvoker(System::Xaml::XamlType ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c1b8a-115">Valeur de <see cref="T:System.Xaml.XamlType" /> pour le type XAML spécifique pertinent à ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-115">The <see cref="T:System.Xaml.XamlType" /> value for the specific XAML type relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <summary><span data-ttu-id="c1b8a-116">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> en fonction d'un <see cref="T:System.Xaml.XamlType" /> fourni.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-116">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b8a-117">Ce constructeur est appelé en interne en fonction de la <xref:System.Xaml.XamlType> où le <xref:System.Xaml.Schema.XamlTypeInvoker> est utilisé pour la construction.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-117">This constructor is called internally based on the <xref:System.Xaml.XamlType> where the <xref:System.Xaml.Schema.XamlTypeInvoker> is used for construction.</span></span> <span data-ttu-id="c1b8a-118">Le `type` fourni ici ne s’applique à tous les autres méthode appelle pour <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-118">The `type` provided here is relevant to all other method calls for <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1b8a-119"><paramref name="type" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-119"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public virtual void AddToCollection (object instance, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToCollection(object instance, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToCollection (instance As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToCollection(System::Object ^ instance, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c1b8a-120">Instance du type spécifié par le <see cref="T:System.Xaml.XamlType" /> utilisé pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-120">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <param name="item"><span data-ttu-id="c1b8a-121">Élément à ajouter.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-121">The item to add.</span></span></param>
        <summary><span data-ttu-id="c1b8a-122">Ajoute l’élément fourni à une instance du type adapté à ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-122">Adds the provided item to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b8a-123">Vous devez uniquement appeler cette méthode sur un <xref:System.Xaml.XamlType> qui représente une collection.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-123">You should only call this method on a <xref:System.Xaml.XamlType> that represents a collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c1b8a-124">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basé sur un <see cref="T:System.Xaml.XamlType" /> inconnu.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-124">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span></span>  
  
 <span data-ttu-id="c1b8a-125">**ou**</span><span class="sxs-lookup"><span data-stu-id="c1b8a-125">**-or-**</span></span>  
  
 <span data-ttu-id="c1b8a-126">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> où le type pertinent n’est pas une collection.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1b8a-127"><paramref name="instance" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-127"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="c1b8a-128"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> pour ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> retourne <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-128"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c1b8a-129">L’implémentation de base inclut un appel à l’application d’assistance interne <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-129">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="c1b8a-130">Ce programme d’assistance est levé pour les cas où un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> repose sur inconnu <see cref="T:System.Xaml.XamlType" />, qui inclut les cas où la <see cref="P:System.Xaml.XamlType.UnderlyingType" /> de la <see cref="T:System.Xaml.XamlType" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-130">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="c1b8a-131">En interne, l’implémentation de base appelle <see cref="P:System.Xaml.XamlType.IsCollection" />et lève si le résultat est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-131">Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsCollection" />, and throws if the result is <see langword="false" />.</span></span>  
  
 <span data-ttu-id="c1b8a-132">L’implémentation de base n’utilise pas nécessairement sa propre <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implémentation.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-132">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation.</span></span> <span data-ttu-id="c1b8a-133">Tout d’abord, un cast de <paramref name="instance" /> à <see cref="T:System.Collections.IList" /> est tentée.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-133">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IList" /> is attempted.</span></span> <span data-ttu-id="c1b8a-134">Si cette opération réussit, un appel à <see cref="M:System.Collections.IList.Add(System.Object)" /> est effectuée et la méthode retourne.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-134">If this succeeds, a call to <see cref="M:System.Collections.IList.Add(System.Object)" /> is made and the method returns.</span></span> <span data-ttu-id="c1b8a-135">Dans le cas contraire, l’implémentation de base utilise CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> à appeler sous-jacent <see langword="Add" /> (méthode), tels qu’obtenus à partir d’un appel à <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> pour ce <paramref name="" /> <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-135">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span>  
  
 <span data-ttu-id="c1b8a-136">Dans l’implémentation de base, aucune exception n’est levée à ce niveau si <paramref name="item" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-136">In the base implementation no exception is raised at this level if <paramref name="item" /> is <see langword="null" />.</span></span> <span data-ttu-id="c1b8a-137">Il est possible que sous-jacent <see langword="Add" /> méthode lève une exception lorsqu’elle est appelée.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-137">It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked.</span></span> <span data-ttu-id="c1b8a-138">Autres exceptions au moment de l’exécution sont possibles si <see cref="P:System.Xaml.XamlType.ItemType" /> ne renvoie pas un résultat valide.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-138">Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddToDictionary">
      <MemberSignature Language="C#" Value="public virtual void AddToDictionary (object instance, object key, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToDictionary(object instance, object key, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToDictionary (instance As Object, key As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToDictionary(System::Object ^ instance, System::Object ^ key, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c1b8a-139">Instance du type spécifié par le <see cref="T:System.Xaml.XamlType" /> utilisé pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-139">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <param name="key"><span data-ttu-id="c1b8a-140">Clé de dictionnaire pour l’élément à ajouter.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-140">Dictionary key for the item to add.</span></span></param>
        <param name="item"><span data-ttu-id="c1b8a-141">La valeur d’élément à ajouter.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-141">The item value to add.</span></span></param>
        <summary><span data-ttu-id="c1b8a-142">Ajoute la valeur de clé et d’élément fournie à une instance du type adapté à ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-142">Adds the provided key and item value to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b8a-143">Vous devez uniquement appeler cette méthode sur un <xref:System.Xaml.XamlType> qui représente un dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-143">You should only call this method on a <xref:System.Xaml.XamlType> that represents a dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c1b8a-144">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basé sur un <see cref="T:System.Xaml.XamlType" /> inconnu.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-144">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span></span>  
  
 <span data-ttu-id="c1b8a-145">**ou**</span><span class="sxs-lookup"><span data-stu-id="c1b8a-145">**-or-**</span></span>  
  
 <span data-ttu-id="c1b8a-146">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> où le type pertinent n’est pas un dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-146">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a dictionary.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1b8a-147"><paramref name="instance" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-147"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="c1b8a-148"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> pour ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> retourne <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-148"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c1b8a-149">L’implémentation de base inclut un appel à l’application d’assistance interne <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-149">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="c1b8a-150">Ce programme d’assistance est levé pour les cas où un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> repose sur inconnu <see cref="T:System.Xaml.XamlType" />, qui inclut les cas où la <see cref="P:System.Xaml.XamlType.UnderlyingType" /> de la <see cref="T:System.Xaml.XamlType" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-150">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="c1b8a-151">En interne, l’implémentation de base appelle <see cref="P:System.Xaml.XamlType.IsDictionary" />et lève si le résultat est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-151">Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsDictionary" />, and throws if the result is <see langword="false" />.</span></span>  
  
 <span data-ttu-id="c1b8a-152">L’implémentation de base n’utilise pas nécessairement sa propre <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implémentation.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-152">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation.</span></span> <span data-ttu-id="c1b8a-153">Tout d’abord, un cast de <paramref name="instance" /> à <see cref="T:System.Collections.IDictionary" /> est tentée.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-153">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IDictionary" /> is attempted.</span></span> <span data-ttu-id="c1b8a-154">Si cette opération réussit, un appel à <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> est effectuée et la méthode retourne.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-154">If this succeeds, a call to <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> is made and the method returns.</span></span> <span data-ttu-id="c1b8a-155">Dans le cas contraire, l’implémentation de base utilise CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> à appeler sous-jacent <see langword="Add" /> (méthode), tels qu’obtenus à partir d’un appel à <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> pour ce <paramref name="" /> <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-155">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span>  
  
 <span data-ttu-id="c1b8a-156">Dans l’implémentation de base, aucune exception n’est levée à ce niveau si <paramref name="item" /> ou <paramref name="key" /> sont <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-156">In the base implementation no exception is raised at this level if <paramref name="item" /> or <paramref name="key" /> are <see langword="null" />.</span></span> <span data-ttu-id="c1b8a-157">Il est possible que sous-jacent <see langword="Add" /> méthode lève une exception lorsqu’elle est appelée.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-157">It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked.</span></span> <span data-ttu-id="c1b8a-158">Autres exceptions au moment de l’exécution sont possibles si <see cref="P:System.Xaml.XamlType.ItemType" /> ne renvoie pas un résultat valide.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-158">Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="c1b8a-159">Tableau d'objets qui fournissent <see langword="x:ConstructorArgs" /> pour l'instance.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-159">An array of objects that supply the <see langword="x:ConstructorArgs" /> for the instance.</span></span> <span data-ttu-id="c1b8a-160">Peut être <see langword="null" /> pour les types qui ne requièrent pas ou n'utilisent pas <see langword="x:ConstructorArgs" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-160">May be <see langword="null" /> for types that do not require or use <see langword="x:ConstructorArgs" />.</span></span></param>
        <summary><span data-ttu-id="c1b8a-161">Crée une instance d'objet basée sur le <see cref="T:System.Xaml.XamlType" /> initié par la construction pour ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-161">Creates an object instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <returns><span data-ttu-id="c1b8a-162">Instance créée sur la base du<see cref="T:System.Xaml.XamlType" /> initié par construction pour ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-162">The created instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="c1b8a-163">Impossible de résoudre le constructeur.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-163">Could not resolve a constructor.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c1b8a-164">L’implémentation de base inclut un appel à l’application d’assistance interne <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-164">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="c1b8a-165">Ce programme d’assistance est levé pour les cas où un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> repose sur inconnu <see cref="T:System.Xaml.XamlType" />, qui inclut les cas où la <see cref="P:System.Xaml.XamlType.UnderlyingType" /> de la <see cref="T:System.Xaml.XamlType" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-165">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetAddMethod(class System.Xaml.XamlType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAddMethod (contentType As XamlType) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetAddMethod(System::Xaml::XamlType ^ contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="contentType">
          <span data-ttu-id="c1b8a-166"><see cref="T:System.Xaml.XamlType" /> pour le type d'élément utilisé par la méthode <see langword="Add" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-166"><see cref="T:System.Xaml.XamlType" /> for the item type that is used by the <see langword="Add" /> method.</span></span></param>
        <summary><span data-ttu-id="c1b8a-167">Retourne la méthode <see langword="Add" /> pertinente pour un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> qui est pertinent à une collection ou un dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-167">Returns the relevant <see langword="Add" /> method for a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is relevant to a collection or dictionary.</span></span></summary>
        <returns><span data-ttu-id="c1b8a-168">Informations de CLR <see cref="T:System.Reflection.MethodInfo" /> pour la méthode <see langword="Add" />, ou null.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-168">CLR <see cref="T:System.Reflection.MethodInfo" /> information for the <see langword="Add" /> method, or null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b8a-169">Cette méthode doit retourner `null` pour les cas où la <xref:System.Xaml.XamlType> pour ce <xref:System.Xaml.Schema.XamlTypeInvoker> n’est pas une collection accessible en écriture ou un dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-169">This method should return `null` for cases where the <xref:System.Xaml.XamlType> for this <xref:System.Xaml.Schema.XamlTypeInvoker> is not a writeable collection or dictionary.</span></span> <span data-ttu-id="c1b8a-170">Plus précisément, la doit retourner `null` pour les cas où <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> retourne `None`.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-170">Specifically, should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c1b8a-171">Si vous accédez pas à un système de type XAML entièrement fiable, cette méthode présente un risque de signaler les fausses <xref:System.Reflection.MethodInfo> informations aux appelants.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-171">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1b8a-172"><paramref name="contentType" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-172"><paramref name="contentType" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c1b8a-173">L’implémentation de base retourne <see langword="null" /> pour les cas où un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> repose sur inconnu <see cref="T:System.Xaml.XamlType" />, qui inclut les cas où la <see cref="P:System.Xaml.XamlType.UnderlyingType" /> de la <see cref="T:System.Xaml.XamlType" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-173">The base implementation returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span> <span data-ttu-id="c1b8a-174">Il renvoie également <see langword="null" /> si <see cref="P:System.Xaml.XamlType.ItemType" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-174">It also returns <see langword="null" /> if <see cref="P:System.Xaml.XamlType.ItemType" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="c1b8a-175">Les collections XAML susceptibles d’avoir plusieurs <see langword="Add" /> (méthode), car une collection XAML peut potentiellement prendre en charge les plus d’un type de contenu (consultez <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, ou consultez <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> pour plus d’informations sur une implémentation de ce concept dans WPF).</span><span class="sxs-lookup"><span data-stu-id="c1b8a-175">XAML collections potentially have more than one <see langword="Add" /> method, because a XAML collection can potentially support more than one content type (see <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, or see <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> for information about one implementation of this concept in WPF).</span></span> <span data-ttu-id="c1b8a-176">L’implémentation par défaut utilise la logique interne pour retourner la meilleure correspondance basée sur les signatures et le type de l’élément <paramref name="contentType" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-176">The default implementation uses internal logic to return the best match based on the signatures and the type of the supplied <paramref name="contentType" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetEnumeratorMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumeratorMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetEnumeratorMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1b8a-177">Retourne un objet représentant une méthode qui peut effectuer une énumération sur des éléments.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-177">Returns an object representing a method that can enumerate over items.</span></span></summary>
        <returns>
          <span data-ttu-id="c1b8a-178"><see cref="T:System.Reflection.MethodInfo" /> pour une méthode d'énumérateur, ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-178"><see cref="T:System.Reflection.MethodInfo" /> for an enumerator method, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b8a-179">Doit retourner `null` pour les cas où <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> retourne `None`.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-179">Should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c1b8a-180">Si vous accédez pas à un système de type XAML entièrement fiable, cette méthode présente un risque de signaler les fausses <xref:System.Reflection.MethodInfo> informations aux appelants.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-180">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c1b8a-181">L’implémentation de base appelle une méthode d’assistance interne.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-181">The base implementation calls an internal helper method.</span></span> <span data-ttu-id="c1b8a-182">Ce programme d’assistance retourne <see langword="null" /> pour les cas où un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> repose sur inconnu <see cref="T:System.Xaml.XamlType" />, qui inclut les cas où la <see cref="P:System.Xaml.XamlType.UnderlyingType" /> de la <see cref="T:System.Xaml.XamlType" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-182">That helper returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span> <span data-ttu-id="c1b8a-183">Il renvoie également <see langword="null" /> pour les cas où <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> retourne <see langword="None" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-183">It also returns <see langword="null" /> for cases where <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> returns <see langword="None" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetItems (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetItems(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItems (instance As Object) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetItems(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c1b8a-184">Instance du type spécifié par le <see cref="T:System.Xaml.XamlType" /> utilisé pour construire ce <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-184">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <summary><span data-ttu-id="c1b8a-185">Retourne un objet <see cref="T:System.Collections.IEnumerator" /> représentant le jeu d'éléments.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-185">Returns an <see cref="T:System.Collections.IEnumerator" /> object representing the set of items.</span></span></summary>
        <returns><span data-ttu-id="c1b8a-186">Objet <see cref="T:System.Collections.IEnumerator" />, ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-186">An <see cref="T:System.Collections.IEnumerator" /> object, or <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c1b8a-187">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basé sur un <see cref="T:System.Xaml.XamlType" /> inconnu.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-187">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span></span>  
  
 <span data-ttu-id="c1b8a-188">**ou**</span><span class="sxs-lookup"><span data-stu-id="c1b8a-188">**-or-**</span></span>  
  
 <span data-ttu-id="c1b8a-189">Appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> où le type pertinent n'est pas une collection ni un dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-189">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection or dictionary.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1b8a-190"><paramref name="instance" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-190"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c1b8a-191">L’implémentation de base inclut un appel à l’application d’assistance interne <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-191">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="c1b8a-192">Ce programme d’assistance est levé pour les cas où un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> repose sur inconnu <see cref="T:System.Xaml.XamlType" />, qui inclut les cas où la <see cref="P:System.Xaml.XamlType.UnderlyingType" /> de la <see cref="T:System.Xaml.XamlType" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-192">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="c1b8a-193">L’implémentation de base n’utilise pas nécessairement sa propre <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implémentation.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-193">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementation.</span></span> <span data-ttu-id="c1b8a-194">Tout d’abord, un cast de <paramref name="instance" /> à <see cref="T:System.Collections.IEnumerable" /> est tentée.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-194">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IEnumerable" /> is attempted.</span></span> <span data-ttu-id="c1b8a-195">Si cette opération réussit, un appel à <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> est effectuée et la méthode retourne cette valeur de retour.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-195">If this succeeds, a call to <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> is made and the method returns that return value.</span></span> <span data-ttu-id="c1b8a-196">Dans le cas contraire, l’implémentation de base utilise CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> à appeler sous-jacent <see langword="GetEnumerator" /> (méthode), tels qu’obtenus à partir d’un appel à <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> pour ce <paramref name="" /> <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-196">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="GetEnumerator" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetMarkupExtensionHandler As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ SetMarkupExtensionHandler { EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b8a-197">Obtient le gestionnaire à utiliser lorsqu'un <see cref="T:System.Xaml.XamlObjectWriter" /> effectue un appel dans un <see cref="T:System.Windows.Markup.MarkupExtension" /> implémenté.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-197">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into an implemented <see cref="T:System.Windows.Markup.MarkupExtension" />.</span></span></summary>
        <value><span data-ttu-id="c1b8a-198">Implémentation de gestionnaire qui gère ce cas.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-198">A handler implementation that handles this case.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b8a-199">Le Gestionnaire d’événements est basé sur <xref:System.EventHandler%601> contraint <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-199">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="c1b8a-200">La valeur retournée appelle le <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> comportement de la <xref:System.Xaml.XamlType> qui le <xref:System.Xaml.Schema.XamlTypeInvoker> est basée sur.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-200">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="c1b8a-201">La valeur de retour est `null` pour un <xref:System.Xaml.Schema.XamlTypeInvoker> basé sur inconnu <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-201">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeConverterHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetTypeConverterHandler As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ SetTypeConverterHandler { EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b8a-202">Obtient le gestionnaire à utiliser lorsqu'un <see cref="T:System.Xaml.XamlObjectWriter" /> effectue un appel dans un <see cref="T:System.ComponentModel.TypeConverter" /> implémenté par le CLR.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-202">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into a CLR-implemented <see cref="T:System.ComponentModel.TypeConverter" />.</span></span></summary>
        <value><span data-ttu-id="c1b8a-203">Implémentation de gestionnaire qui gère ce cas.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-203">A handler implementation that handles this case.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b8a-204">Le Gestionnaire d’événements est basé sur <xref:System.EventHandler%601> contraint <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-204">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="c1b8a-205">La valeur retournée appelle le <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> comportement de la <xref:System.Xaml.XamlType> qui le <xref:System.Xaml.Schema.XamlTypeInvoker> est basée sur.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-205">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="c1b8a-206">La valeur de retour est `null` pour un <xref:System.Xaml.Schema.XamlTypeInvoker> basé sur inconnu <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-206">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlTypeInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlTypeInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b8a-207">Fournit une valeur statique qui représente un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> inconnu et non  implémenté pleinement.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-207">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <value><span data-ttu-id="c1b8a-208">Valeur statique qui représente un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> inconnu et non  implémenté pleinement.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-208">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b8a-209">Fournir cette valeur pour un <xref:System.Xaml.Schema.XamlTypeInvoker> de System.Xaml défini API entraînent généralement le code appelé lever des exceptions.</span><span class="sxs-lookup"><span data-stu-id="c1b8a-209">Supplying this value for a <xref:System.Xaml.Schema.XamlTypeInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>