<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06593ac583c0f24c3b973fbdbfba42e69f84af7c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720203" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit un point d'extension qui peut accéder aux caractéristiques de membre d'un membre XAML via des techniques autres que la réflexion.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’objectif de <xref:System.Xaml.Schema.XamlMemberInvoker> consiste à activer un système de type XAML extensible, un schéma et une exécution qui ne reposent pas autant sur les fonctionnalités CLR telles que les attributs CLR, les informations de réflexion via <xref:System.Type> et <xref:System.Reflection.MemberInfo>, et ainsi de suite. Les sous-classes de <xref:System.Xaml.Schema.XamlMemberInvoker> sont utilisés comme paramètres d’entrée pour les autres constructeurs de classes de schéma XAML tel que <xref:System.Xaml.XamlMember>. Vous créez une sous-classe <xref:System.Xaml.XamlMember> et passer le <xref:System.Xaml.Schema.XamlMemberInvoker> via au constructeur de base. En même temps que la définition d’un <xref:System.Xaml.Schema.XamlMemberInvoker> pour le constructeur, vous devez également fournir des substitutions pour certaines de la `Lookup` méthodes de <xref:System.Xaml.XamlMember>.  
  
 <xref:System.Xaml.Schema.XamlMemberInvoker> a une implémentation par défaut. L’implémentation par défaut suit un modèle semblable à l’implémentation par défaut des types de schéma XAML <xref:System.Xaml.XamlType> et <xref:System.Xaml.XamlMember>: le système de type CLR est utilisé pour l’instanciation, les valeurs et les recherches, y compris l’utilisation d’attributs CLR, <xref:System.Type> et <xref:System.Reflection.MemberInfo>, et ainsi de suite.  
  
 <xref:System.Xaml.Schema.XamlMemberInvoker> Fournit des méthodes de base opérations get et set (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>). Il fournit également les propriétés <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> et <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, mais celles-ci ne sont pas virtuelles.  
  
> [!NOTE]
>  Il est possible d’obtenir un <xref:System.Xaml.Schema.XamlMemberInvoker> valeur qui représente une directive XAML, qui est implémentée comme une classe privée dans l’implémentation System.Xaml. Si vous essayez d’appeler <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> ou <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> sur ce demandeur, une exception est levée.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implémentation par défaut est vide.  
  
 Ce constructeur est appelé en interne pour fournir une valeur pour <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>. Pour un <xref:System.Xaml.Schema.XamlMemberInvoker> sous-classe, il est prévu que vous utilisez soit le <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> signature pour la construction ou fournir une substitution qui appelle <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> comme base. En fournissant la <xref:System.Xaml.XamlMember> implémente un par défaut de modèle où <xref:System.Xaml.Schema.XamlMemberInvoker> est immuable.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member">Valeur de <see cref="T:System.Xaml.XamlMember" /> pour le membre XAML spécifique pertinent à ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> en fonction d'un <see cref="T:System.Xaml.XamlMember" /> fourni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est appelé en interne en fonction de la <xref:System.Xaml.XamlMember> où le <xref:System.Xaml.Schema.XamlMemberInvoker> est utilisé pour la construction.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="member" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Instance du type propriétaire pour le membre.</param>
        <summary>Obtient une valeur de la propriété pertinente à partir d'une instance.</summary>
        <returns>Valeur de propriété demandée.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> est <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basé sur un <see cref="T:System.Xaml.XamlMember" /> inconnu.  
  
 **ou**  
  
 Appelé cette méthode sur un membre en écriture seule.  
  
 **ou**  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> est <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>L’implémentation de base inclut un appel à l’application d’assistance interne <c>ThrowIfUnknown</c>. Ce programme d’assistance est levé pour les cas où un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> repose sur inconnu <see cref="T:System.Xaml.XamlMember" />, qui inclut les cas où la <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> de la <see cref="T:System.Xaml.XamlMember" /> est <see langword="null" />.  
  
 L’implémentation de base lève si <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> est <see langword="null" />.  
  
 Pour les propriétés statiques (<see cref="P:System.Reflection.MethodBase.IsStatic" /> est <see langword="true" /> par <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) l’implémentation par défaut appelle <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> sur <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> passage <see langword="null" /> comme premier paramètre et empaquetées <paramref name="instance" /> dans la seconde. Pour les propriétés non statiques, il appelle <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> et transmet le <paramref name="instance" /> en tant que premier paramètre et un package vide comme second paramètre.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Instance du type propriétaire pour le membre.</param>
        <param name="value">Valeur de propriété à définir.</param>
        <summary>Définit une valeur de la propriété pertinente sur une instance.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> est <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basé sur un <see cref="T:System.Xaml.XamlMember" /> inconnu.  
  
 **ou**  
  
 Appelé cette méthode sur un membre en lecture seule.  
  
 **ou**  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> est <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>L’implémentation de base inclut un appel à l’application d’assistance interne <c>ThrowIfUnknown</c>. Ce programme d’assistance est levé pour les cas où un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> repose sur inconnu <see cref="T:System.Xaml.XamlMember" />, qui inclut les cas où la <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> de la <see cref="T:System.Xaml.XamlMember" /> est <see langword="null" />.  
  
 L’implémentation de base lève si <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> est <see langword="null" />.  
  
 Pour les propriétés statiques (<see cref="P:System.Reflection.MethodBase.IsStatic" /> est <see langword="true" /> par <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) l’implémentation par défaut appelle <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> sur <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> passage <see langword="null" /> en tant que premier paramètre et empaquetage <paramref name="instance" /> et <paramref name="value" /> comme le deuxième paramètre. Pour les propriétés non statiques, il appelle <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> et transfère <paramref name="instance" /> en tant que premier paramètre et <paramref name="value" /> comme second paramètre.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Instance possédant la propriété dont la persistance doit être examinée.</param>
        <summary>Indique si la valeur doit être rendue persistante par des processus de sérialisation.</summary>
        <returns>Valeur de l’énumération.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation par défaut retourne <xref:System.Xaml.Schema.ShouldSerializeResult.Default> si le membre XAML lui-même est <xref:System.Xaml.XamlMember.IsUnknown%2A>, ou si aucun pertinente de réflexion CLR `ShouldSerialize` méthode se trouve sur le membre sous-jacent via la réflexion par défaut.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui obtient des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <value>
          <see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui obtient des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, ou <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété s’appuie sur l’appel <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> sur la construction <xref:System.Xaml.XamlMember>. Pour un inconnu <xref:System.Xaml.XamlMember>, ou pour les cas où <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> retourne `null`, cette propriété retourne `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui définit des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <value>
          <see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui définit des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, ou <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété s’appuie sur l’appel <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> sur la construction <xref:System.Xaml.XamlMember>. Pour un inconnu <xref:System.Xaml.XamlMember>, ou pour les cas où <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> retourne `null`, cette propriété retourne `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Fournit une valeur statique qui représente un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> inconnu et non  implémenté pleinement.</summary>
        <value>Valeur statique qui représente un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> inconnu et non  implémenté pleinement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fournir cette valeur pour un <xref:System.Xaml.Schema.XamlMemberInvoker> de System.Xaml défini API entraînent généralement le code appelé lever des exceptions.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>