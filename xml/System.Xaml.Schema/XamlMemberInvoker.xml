<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e2a74-101">Fournit un point d'extension qui peut accéder aux caractéristiques de membre d'un membre XAML via des techniques autres que la réflexion.</span><span class="sxs-lookup"><span data-stu-id="e2a74-101">Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2a74-102">L’objectif de <xref:System.Xaml.Schema.XamlMemberInvoker> consiste à activer un système de type XAML extensible, un schéma et une exécution qui ne reposent pas autant sur les fonctionnalités CLR telles que les attributs CLR, les informations de réflexion via <xref:System.Type> et <xref:System.Reflection.MemberInfo>, et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="e2a74-102">The purpose of <xref:System.Xaml.Schema.XamlMemberInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="e2a74-103">Les sous-classes de <xref:System.Xaml.Schema.XamlMemberInvoker> sont utilisés comme paramètres d’entrée pour les autres constructeurs de classes de schéma XAML tel que <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="e2a74-103">Subclasses of <xref:System.Xaml.Schema.XamlMemberInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="e2a74-104">Vous créez une sous-classe <xref:System.Xaml.XamlMember> et passer le <xref:System.Xaml.Schema.XamlMemberInvoker> via au constructeur de base.</span><span class="sxs-lookup"><span data-stu-id="e2a74-104">You subclass <xref:System.Xaml.XamlMember> and pass the <xref:System.Xaml.Schema.XamlMemberInvoker> through to the base constructor.</span></span> <span data-ttu-id="e2a74-105">En même temps que la définition d’un <xref:System.Xaml.Schema.XamlMemberInvoker> pour le constructeur, vous devez également fournir des substitutions pour certaines de la `Lookup` méthodes de <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="e2a74-105">Along with defining a <xref:System.Xaml.Schema.XamlMemberInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlMember>.</span></span>  
  
 <span data-ttu-id="e2a74-106"><xref:System.Xaml.Schema.XamlMemberInvoker> a une implémentation par défaut.</span><span class="sxs-lookup"><span data-stu-id="e2a74-106"><xref:System.Xaml.Schema.XamlMemberInvoker> has a default implementation.</span></span> <span data-ttu-id="e2a74-107">L’implémentation par défaut suit un modèle semblable à l’implémentation par défaut des types de schéma XAML <xref:System.Xaml.XamlType> et <xref:System.Xaml.XamlMember>: le système de type CLR est utilisé pour l’instanciation, les valeurs et les recherches, y compris l’utilisation d’attributs CLR, <xref:System.Type> et <xref:System.Reflection.MemberInfo>, et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="e2a74-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="e2a74-108"><xref:System.Xaml.Schema.XamlMemberInvoker> Fournit des méthodes de base opérations get et set (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span><span class="sxs-lookup"><span data-stu-id="e2a74-108"><xref:System.Xaml.Schema.XamlMemberInvoker> provides methods for basic get and set operations (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span></span> <span data-ttu-id="e2a74-109">Il fournit également les propriétés <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> et <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, mais celles-ci ne sont pas virtuelles.</span><span class="sxs-lookup"><span data-stu-id="e2a74-109">It also provides the properties <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> and <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, but these are not virtual.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2a74-110">Il est possible d’obtenir un <xref:System.Xaml.Schema.XamlMemberInvoker> valeur qui représente une directive XAML, qui est implémentée comme une classe privée dans l’implémentation System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="e2a74-110">It may be possible to obtain a <xref:System.Xaml.Schema.XamlMemberInvoker> value that represents a XAML directive, which is implemented as a private class in the System.Xaml implementation.</span></span> <span data-ttu-id="e2a74-111">Si vous essayez d’appeler <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> ou <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> sur ce demandeur, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="e2a74-111">If you attempt to call <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> or <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> on this invoker, an exception is thrown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2a74-112">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-112">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2a74-113">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-113">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2a74-114">L'implémentation par défaut est vide.</span><span class="sxs-lookup"><span data-stu-id="e2a74-114">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="e2a74-115">Ce constructeur est appelé en interne pour fournir une valeur pour <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2a74-115">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="e2a74-116">Pour un <xref:System.Xaml.Schema.XamlMemberInvoker> sous-classe, il est prévu que vous utilisez soit le <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> signature pour la construction ou fournir une substitution qui appelle <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> comme base.</span><span class="sxs-lookup"><span data-stu-id="e2a74-116">For a <xref:System.Xaml.Schema.XamlMemberInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> as base.</span></span> <span data-ttu-id="e2a74-117">En fournissant la <xref:System.Xaml.XamlMember> implémente un par défaut de modèle où <xref:System.Xaml.Schema.XamlMemberInvoker> est immuable.</span><span class="sxs-lookup"><span data-stu-id="e2a74-117">Providing the <xref:System.Xaml.XamlMember> implements a default pattern where <xref:System.Xaml.Schema.XamlMemberInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="e2a74-118">Valeur de <see cref="T:System.Xaml.XamlMember" /> pour le membre XAML spécifique pertinent à ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-118">The <see cref="T:System.Xaml.XamlMember" /> value for the specific XAML member relevant to this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></param>
        <summary><span data-ttu-id="e2a74-119">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> en fonction d'un <see cref="T:System.Xaml.XamlMember" /> fourni.</span><span class="sxs-lookup"><span data-stu-id="e2a74-119">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2a74-120">Ce constructeur est appelé en interne en fonction de la <xref:System.Xaml.XamlMember> où le <xref:System.Xaml.Schema.XamlMemberInvoker> est utilisé pour la construction.</span><span class="sxs-lookup"><span data-stu-id="e2a74-120">This constructor is called internally based on the <xref:System.Xaml.XamlMember> where the <xref:System.Xaml.Schema.XamlMemberInvoker> is used for construction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2a74-121"><paramref name="member" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-121"><paramref name="member" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="e2a74-122">Instance du type propriétaire pour le membre.</span><span class="sxs-lookup"><span data-stu-id="e2a74-122">An instance of the owner type for the member.</span></span></param>
        <summary><span data-ttu-id="e2a74-123">Obtient une valeur de la propriété pertinente à partir d'une instance.</span><span class="sxs-lookup"><span data-stu-id="e2a74-123">Gets a value of the relevant property from an instance.</span></span></summary>
        <returns><span data-ttu-id="e2a74-124">Valeur de propriété demandée.</span><span class="sxs-lookup"><span data-stu-id="e2a74-124">The requested property value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2a74-125"><paramref name="instance" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-125"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e2a74-126">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basé sur un <see cref="T:System.Xaml.XamlMember" /> inconnu.</span><span class="sxs-lookup"><span data-stu-id="e2a74-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span></span>  
  
 <span data-ttu-id="e2a74-127">**ou**</span><span class="sxs-lookup"><span data-stu-id="e2a74-127">**-or-**</span></span>  
  
 <span data-ttu-id="e2a74-128">Appelé cette méthode sur un membre en écriture seule.</span><span class="sxs-lookup"><span data-stu-id="e2a74-128">Invoked this method on a write-only member.</span></span>  
  
 <span data-ttu-id="e2a74-129">**ou**</span><span class="sxs-lookup"><span data-stu-id="e2a74-129">**-or-**</span></span>  
  
 <span data-ttu-id="e2a74-130"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-130"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e2a74-131">L’implémentation de base inclut un appel à l’application d’assistance interne <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="e2a74-131">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="e2a74-132">Ce programme d’assistance est levé pour les cas où un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> repose sur inconnu <see cref="T:System.Xaml.XamlMember" />, qui inclut les cas où la <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> de la <see cref="T:System.Xaml.XamlMember" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-132">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="e2a74-133">L’implémentation de base lève si <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-133">The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="e2a74-134">Pour les propriétés statiques (<see cref="P:System.Reflection.MethodBase.IsStatic" /> est <see langword="true" /> par <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) l’implémentation par défaut appelle <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> sur <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> passage <see langword="null" /> comme premier paramètre et empaquetées <paramref name="instance" /> dans la seconde.</span><span class="sxs-lookup"><span data-stu-id="e2a74-134">For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> passing <see langword="null" /> as the first parameter and packaged <paramref name="instance" /> in the second.</span></span> <span data-ttu-id="e2a74-135">Pour les propriétés non statiques, il appelle <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> et transmet le <paramref name="instance" /> en tant que premier paramètre et un package vide comme second paramètre.</span><span class="sxs-lookup"><span data-stu-id="e2a74-135">For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards the <paramref name="instance" /> as the first parameter and an empty package as the second parameter.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="e2a74-136">Instance du type propriétaire pour le membre.</span><span class="sxs-lookup"><span data-stu-id="e2a74-136">An instance of the owner type for the member.</span></span></param>
        <param name="value"><span data-ttu-id="e2a74-137">Valeur de propriété à définir.</span><span class="sxs-lookup"><span data-stu-id="e2a74-137">The property value to set.</span></span></param>
        <summary><span data-ttu-id="e2a74-138">Définit une valeur de la propriété pertinente sur une instance.</span><span class="sxs-lookup"><span data-stu-id="e2a74-138">Sets a value of the relevant property on an instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2a74-139"><paramref name="instance" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-139"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e2a74-140">A appelé cette méthode sur un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basé sur un <see cref="T:System.Xaml.XamlMember" /> inconnu.</span><span class="sxs-lookup"><span data-stu-id="e2a74-140">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span></span>  
  
 <span data-ttu-id="e2a74-141">**ou**</span><span class="sxs-lookup"><span data-stu-id="e2a74-141">**-or-**</span></span>  
  
 <span data-ttu-id="e2a74-142">Appelé cette méthode sur un membre en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e2a74-142">Invoked this method on a read-only member.</span></span>  
  
 <span data-ttu-id="e2a74-143">**ou**</span><span class="sxs-lookup"><span data-stu-id="e2a74-143">**-or-**</span></span>  
  
 <span data-ttu-id="e2a74-144"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-144"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e2a74-145">L’implémentation de base inclut un appel à l’application d’assistance interne <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="e2a74-145">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="e2a74-146">Ce programme d’assistance est levé pour les cas où un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> repose sur inconnu <see cref="T:System.Xaml.XamlMember" />, qui inclut les cas où la <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> de la <see cref="T:System.Xaml.XamlMember" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-146">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="e2a74-147">L’implémentation de base lève si <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-147">The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="e2a74-148">Pour les propriétés statiques (<see cref="P:System.Reflection.MethodBase.IsStatic" /> est <see langword="true" /> par <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) l’implémentation par défaut appelle <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> sur <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> passage <see langword="null" /> en tant que premier paramètre et empaquetage <paramref name="instance" /> et <paramref name="value" /> comme le deuxième paramètre.</span><span class="sxs-lookup"><span data-stu-id="e2a74-148">For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> passing <see langword="null" /> as the first parameter and packaging <paramref name="instance" /> and <paramref name="value" /> as the second parameter.</span></span> <span data-ttu-id="e2a74-149">Pour les propriétés non statiques, il appelle <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> et transfère <paramref name="instance" /> en tant que premier paramètre et <paramref name="value" /> comme second paramètre.</span><span class="sxs-lookup"><span data-stu-id="e2a74-149">For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards <paramref name="instance" /> as first parameter and <paramref name="value" /> as second parameter.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="e2a74-150">Instance possédant la propriété dont la persistance doit être examinée.</span><span class="sxs-lookup"><span data-stu-id="e2a74-150">The instance with the property to be examined for persistence.</span></span></param>
        <summary><span data-ttu-id="e2a74-151">Indique si la valeur doit être rendue persistante par des processus de sérialisation.</span><span class="sxs-lookup"><span data-stu-id="e2a74-151">Indicates whether the value needs to be persisted by serialization processes.</span></span></summary>
        <returns><span data-ttu-id="e2a74-152">Valeur de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="e2a74-152">A value of the enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2a74-153">L’implémentation par défaut retourne <xref:System.Xaml.Schema.ShouldSerializeResult.Default> si le membre XAML lui-même est <xref:System.Xaml.XamlMember.IsUnknown%2A>, ou si aucun pertinente de réflexion CLR `ShouldSerialize` méthode se trouve sur le membre sous-jacent via la réflexion par défaut.</span><span class="sxs-lookup"><span data-stu-id="e2a74-153">The default implementation returns <xref:System.Xaml.Schema.ShouldSerializeResult.Default> if the XAML member itself is <xref:System.Xaml.XamlMember.IsUnknown%2A>, or if no CLR-reflection relevant `ShouldSerialize` method is found on the underlying member through default reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2a74-154">Obtient le <see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui obtient des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-154">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="e2a74-155"><see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui obtient des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-155">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2a74-156">Cette propriété s’appuie sur l’appel <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> sur la construction <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="e2a74-156">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="e2a74-157">Pour un inconnu <xref:System.Xaml.XamlMember>, ou pour les cas où <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> retourne `null`, cette propriété retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="e2a74-157">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2a74-158">Obtient le <see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui définit des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-158">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="e2a74-159"><see cref="T:System.Reflection.MethodInfo" /> pour la méthode CLR qui définit des valeurs pour la propriété qui est pertinente pour ce <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2a74-159">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2a74-160">Cette propriété s’appuie sur l’appel <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> sur la construction <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="e2a74-160">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="e2a74-161">Pour un inconnu <xref:System.Xaml.XamlMember>, ou pour les cas où <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> retourne `null`, cette propriété retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="e2a74-161">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2a74-162">Fournit une valeur statique qui représente un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> inconnu et non  implémenté pleinement.</span><span class="sxs-lookup"><span data-stu-id="e2a74-162">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="e2a74-163">Valeur statique qui représente un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> inconnu et non  implémenté pleinement.</span><span class="sxs-lookup"><span data-stu-id="e2a74-163">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2a74-164">Fournir cette valeur pour un <xref:System.Xaml.Schema.XamlMemberInvoker> de System.Xaml défini API entraînent généralement le code appelé lever des exceptions.</span><span class="sxs-lookup"><span data-stu-id="e2a74-164">Supplying this value for a <xref:System.Xaml.Schema.XamlMemberInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>