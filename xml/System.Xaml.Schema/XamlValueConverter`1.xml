<Type Name="XamlValueConverter&lt;TConverterBase&gt;" FullName="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8fc964041fd76fd09075ae9b58ed84f8a945a9da" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39916842" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlValueConverter&lt;TConverterBase&gt; : IEquatable&lt;System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;&gt; where TConverterBase : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlValueConverter`1&lt;class TConverterBase&gt; extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlValueConverter`1" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlValueConverter(Of TConverterBase)&#xA;Implements IEquatable(Of XamlValueConverter(Of TConverterBase))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TConverterBase&gt;&#xA; where TConverterBase : classpublic ref class XamlValueConverter : IEquatable&lt;System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; = class&#xA;    interface IEquatable&lt;XamlValueConverter&lt;'ConverterBase&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TConverterBase">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TConverterBase">
      <span data-ttu-id="02502-101">Classe de base CLR pour le convertisseur particulier représenté par ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="02502-101">The CLR base class for the particular converter that this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> represents.</span>
      </span>
      <span data-ttu-id="02502-102">Il s'agit généralement de l'un des éléments suivants : <see cref="T:System.ComponentModel.TypeConverter" />, <see cref="T:System.Windows.Markup.MarkupExtension" /> ou <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="02502-102">Typically this is one of the following: <see cref="T:System.ComponentModel.TypeConverter" />; <see cref="T:System.Windows.Markup.MarkupExtension" />; <see cref="T:System.Windows.Markup.ValueSerializer" />;</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="02502-103">Fournit une surface d'API commune pour les techniques qui génèrent des valeurs d'initialisation ou de sérialisation pour XAML en fonction d'une autre entrée que le type de destination final.</span>
      <span class="sxs-lookup">
        <span data-stu-id="02502-103">Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type.</span>
      </span>
      <span data-ttu-id="02502-104">Cela inclut les extensions de balisage et les convertisseurs de type.</span>
      <span class="sxs-lookup">
        <span data-stu-id="02502-104">This includes markup extensions and type converters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02502-105">Instances de ce type sont retournées par les méthodes de l’API de schéma XAML comme <xref:System.Xaml.XamlType.LookupTypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="02502-105">Instances of this type are returned by methods of the XAML schema API such as <xref:System.Xaml.XamlType.LookupTypeConverter%2A>.</span></span> <span data-ttu-id="02502-106">L’implémentation générique de <xref:System.Xaml.Schema.XamlValueConverter%601> fournit l’indirection pour l’assembly System.Xaml afin que le système de schéma et le type de base XAML n’ait pas à prendre de dépendances sur la valeur de différentes techniques de conversion sont généralement des implémentations dans d’autres assemblys.</span><span class="sxs-lookup"><span data-stu-id="02502-106">The generic implementation of <xref:System.Xaml.Schema.XamlValueConverter%601> provides indirection for the System.Xaml assembly so that the basic XAML schema and type system does not have to take dependencies on different value conversion techniques that are typically implementations in other assemblies.</span></span>  
  
 <span data-ttu-id="02502-107">Un <xref:System.Xaml.Schema.XamlValueConverter%601> peut être construit avec un type d’implémentation null, mais par exemple un <xref:System.Xaml.Schema.XamlValueConverter%601> retournera `null` pour <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="02502-107">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="02502-108">Les signatures de constructeur pour <xref:System.Xaml.Schema.XamlValueConverter%601> utiliser un `converterType` paramètre qui fait référence au type spécifique qui implémente le comportement de conversion.</span><span class="sxs-lookup"><span data-stu-id="02502-108">Constructor signatures for <xref:System.Xaml.Schema.XamlValueConverter%601> use a `converterType` parameter that references the specific type that implements the conversion behavior.</span></span> <span data-ttu-id="02502-109">Pour fonctionner correctement <xref:System.Xaml.Schema.XamlValueConverter%601> (qui a une valeur non null <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>), la `converterType` type est censé être convertibles pour le `TConverterBase` contrainte.</span><span class="sxs-lookup"><span data-stu-id="02502-109">For a properly functioning <xref:System.Xaml.Schema.XamlValueConverter%601> (one that has a nonnull <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>), the `converterType` type is expected to be castable to the `TConverterBase` constraint.</span></span> <span data-ttu-id="02502-110">Une condition d’incompatibilité n’est pas appliquée par les constructeurs, mais peut produire un <xref:System.InvalidCastException> en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="02502-110">A mismatch condition is not enforced by constructors, but might produce an <xref:System.InvalidCastException> at run time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="02502-111">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-111">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlValueConverter (Type converterType, System.Xaml.XamlType targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType, class System.Xaml.XamlType targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (converterType As Type, targetType As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; : Type * System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt;" Usage="new System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; (converterType, targetType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="converterType">
          <span data-ttu-id="02502-112">
            <see cref="T:System.Type" /> qui implémente le comportement de convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-112">The <see cref="T:System.Type" /> that implements the converter behavior.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="02502-113">
            <see cref="T:System.Xaml.XamlType" /> cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-113">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02502-114">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, sur la base d'un convertisseur implémentant <see cref="T:System.Type" /> et du type cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-114">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class, based on a converter implementing <see cref="T:System.Type" /> and the target/destination type of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlValueConverter (Type converterType, System.Xaml.XamlType targetType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType, class System.Xaml.XamlType targetType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (converterType As Type, targetType As XamlType, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; : Type * System.Xaml.XamlType * string -&gt; System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt;" Usage="new System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; (converterType, targetType, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="converterType">
          <span data-ttu-id="02502-115">
            <see cref="T:System.Type" /> qui implémente le comportement de convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-115">The <see cref="T:System.Type" /> that implements the converter behavior.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="02502-116">
            <see cref="T:System.Xaml.XamlType" /> cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-116">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="02502-117">Nom de la chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-117">The string name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02502-118">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, sur la base d'un convertisseur implémentant <see cref="T:System.Type" />, du type cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et d'un nom de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-118">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class, based on a converter implementing <see cref="T:System.Type" /> the target/destination type of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, and a string name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02502-119">Si `name` est fourni en tant que `null`, un nom par défaut est généré en fonction `converterType` ou `targetType`.</span><span class="sxs-lookup"><span data-stu-id="02502-119">If `name` is provided as `null`, a default name is generated based on either `converterType` or `targetType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="02502-120">Les trois paramètres sont <see langword="null" /> (au moins l'un d'entre eux ne doit pas être NULL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-120">All three parameters are <see langword="null" /> (at least one is required to be non-null).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConverterInstance">
      <MemberSignature Language="C#" Value="public TConverterBase ConverterInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TConverterBase ConverterInstance" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterInstance As TConverterBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TConverterBase ConverterInstance { TConverterBase get(); };" />
      <MemberSignature Language="F#" Value="member this.ConverterInstance : 'ConverterBase" Usage="System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt;.ConverterInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverterBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02502-121">Obtient une instance créée de l'implémentation de convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-121">Gets a created instance of the converter implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02502-122">Instance créée de l'implémentation de convertisseur ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-122">A created instance of the converter implementation, or <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02502-123"><xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> appelle l’implémentation par défaut protégée de <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> pour obtenir sa valeur (et peut accéder à une valeur stockée si <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> a déjà été appelée une seule fois sur ce <xref:System.Xaml.Schema.XamlValueConverter%601>.</span><span class="sxs-lookup"><span data-stu-id="02502-123"><xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> calls the protected default implementation of <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> to get its value (and might be accessing a stored value if <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> was already called once on this <xref:System.Xaml.Schema.XamlValueConverter%601>.</span></span>  
  
 <span data-ttu-id="02502-124">Un <xref:System.Xaml.Schema.XamlValueConverter%601> peut être construit avec un type d’implémentation null, mais par exemple un <xref:System.Xaml.Schema.XamlValueConverter%601> retournera `null` pour <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="02502-124">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterType">
      <MemberSignature Language="C#" Value="public Type ConverterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ConverterType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ConverterType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConverterType : Type" Usage="System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt;.ConverterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02502-125">Obtient le <see cref="T:System.Type" /> pour la classe qui implémente le comportement de convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-125">Gets the <see cref="T:System.Type" /> for the class that implements the converter behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02502-126">
            <see cref="T:System.Type" /> pour la classe qui implémente le comportement de convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-126">The <see cref="T:System.Type" /> for the class that implements the converter behavior.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual TConverterBase CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TConverterBase CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInstance () As TConverterBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual TConverterBase CreateInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : unit -&gt; 'ConverterBase&#xA;override this.CreateInstance : unit -&gt; 'ConverterBase" Usage="xamlValueConverter.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverterBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="02502-127">Retourne une instance de l'implémentation de convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-127">Returns an instance of the converter implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02502-128">Instance de l'implémentation de convertisseur ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-128">An instance of the converter implementation, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02502-129"><xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> est protégé.</span><span class="sxs-lookup"><span data-stu-id="02502-129"><xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> is protected.</span></span> <span data-ttu-id="02502-130">Pour obtenir une instance de convertisseur avec une API publique, obtenez la valeur de <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="02502-130">To get a converter instance with a public API, get the value of <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span></span>  
  
 <span data-ttu-id="02502-131">Un <xref:System.Xaml.Schema.XamlValueConverter%601> peut être construit avec un type d’implémentation null, mais par exemple un <xref:System.Xaml.Schema.XamlValueConverter%601> retournera `null` pour <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="02502-131">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="02502-132">Le convertisseur n'a pas implémenté le type de base correct.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-132">Converter did not implement the correct base type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="02502-133">Détermine si cette instance de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et un objet ont la même valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-133">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and an object have the same value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlValueConverter.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="02502-134">Objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-134">The object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02502-135">Détermine si cette instance de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et un objet spécifié, qui doit aussi être un objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, ont la même valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-135">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and a specified object, which must also be a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02502-136">
            <see langword="true" /> si <paramref name="obj" /> est <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et possède la même valeur que cette instance ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-136">
              <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and its value is the same as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; -&gt; bool" Usage="xamlValueConverter.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="02502-137">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-137">The <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02502-138">Détermine si cette instance de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et un autre objet <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ont la même valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-138">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and another <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02502-139">
            <see langword="true" /> si <paramref name="other" /> est <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> et possède la même valeur que cette instance ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-139">
              <see langword="true" /> if <paramref name="other" /> is a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and its value is the same as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlValueConverter.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="02502-140">Retourne le code de hachage pour ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-140">Returns the hash code for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02502-141">Code de hachage entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-141">An integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt;.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02502-142">Obtient un nom de chaîne pour ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-142">Gets a string name for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02502-143">Nom de chaîne pour ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-143">A string name for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02502-144">La valeur de cette propriété est établie par un des éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="02502-144">The value of this property is established by one of the following:</span></span>  
  
-   <span data-ttu-id="02502-145">Un paramètre de constructeur (voir <xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="02502-145">A constructor parameter (see <xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType>).</span></span>  
  
-   <span data-ttu-id="02502-146">Logique interne qui traite les autres entrées du constructeur et forme une chaîne.</span><span class="sxs-lookup"><span data-stu-id="02502-146">Internal logic that processes other constructor inputs and forms a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter1, System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter1, class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (converter1 As XamlValueConverter(Of TConverterBase), converter2 As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter1, System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; * System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; -&gt; bool" Usage="converter1 = converter2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter1" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
        <Parameter Name="converter2" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="converter1">
          <span data-ttu-id="02502-147">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-147">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="converter2">
          <span data-ttu-id="02502-148">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-148">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02502-149">Détermine si deux objets <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> spécifiés ont la même valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-149">Determines whether two specified <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objects have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02502-150">
            <see langword="true" /> si la valeur de <paramref name="converter1" /> est égale à la valeur de <paramref name="converter2" /> ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-150">
              <see langword="true" /> if the value of <paramref name="converter1" /> is the same as the value of <paramref name="converter2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter1, System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter1, class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (converter1 As XamlValueConverter(Of TConverterBase), converter2 As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter1, System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; * System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; -&gt; bool" Usage="System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt;.op_Inequality (converter1, converter2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter1" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
        <Parameter Name="converter2" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="converter1">
          <span data-ttu-id="02502-151">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-151">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="converter2">
          <span data-ttu-id="02502-152">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-152">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02502-153">Détermine si deux objets <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> spécifiés ont des valeurs différentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-153">Determines whether two specified <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objects have different values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02502-154">
            <see langword="true" /> si la valeur de <paramref name="converter1" /> est différente de la valeur de <paramref name="converter2" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-154">
              <see langword="true" /> if the value of <paramref name="converter1" /> is different than the value of <paramref name="converter2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : System.Xaml.XamlType" Usage="System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt;.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02502-155">Obtient le <see cref="T:System.Xaml.XamlType" /> cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-155">Gets the target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02502-156">
            <see cref="T:System.Xaml.XamlType" /> cible/de destination de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-156">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlValueConverter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="02502-157">Retourne un <see cref="T:System.String" /> qui représente ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-157">Returns a <see cref="T:System.String" /> that represents this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02502-158">
            <see cref="T:System.String" /> qui représente ce <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02502-158">A <see cref="T:System.String" /> that represents this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02502-159">Le <xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A> valeur est basée sur <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="02502-159">The <xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A> value is based on <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>