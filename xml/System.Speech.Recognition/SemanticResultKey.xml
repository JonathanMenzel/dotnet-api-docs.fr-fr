<Type Name="SemanticResultKey" FullName="System.Speech.Recognition.SemanticResultKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0019e97ff6fafdbe52cc9fa900d27c4589a55bf9" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57915046" /></Metadata><TypeSignature Language="C#" Value="public class SemanticResultKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultKey" />
  <TypeSignature Language="F#" Value="type SemanticResultKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_semanticKey.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c8843-101">Associe une chaîne clé aux valeurs <see cref="T:System.Speech.Recognition.SemanticResultValue" /> pour définir des objets <see cref="T:System.Speech.Recognition.SemanticValue" />.</span><span class="sxs-lookup"><span data-stu-id="c8843-101">Associates a key string with <see cref="T:System.Speech.Recognition.SemanticResultValue" /> values to define <see cref="T:System.Speech.Recognition.SemanticValue" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8843-102">L’unité de base de l’expression sémantique dans System.Speech est le <xref:System.Speech.Recognition.SemanticValue>, qui est une paire clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="c8843-102">The basic unit of semantic expression in System.Speech is the <xref:System.Speech.Recognition.SemanticValue>, which is a key/value pair.</span></span>  
  
 <span data-ttu-id="c8843-103">À l’aide de <xref:System.Speech.Recognition.SemanticResultKey> vous marquer des objets <xref:System.Speech.Recognition.SemanticResultValue> instances contenues dans <xref:System.Speech.Recognition.GrammarBuilder> les objets et les chaînes afin que les valeurs sont accessibles facilement à partir de <xref:System.Speech.Recognition.SemanticValue> instances sur la reconnaissance.</span><span class="sxs-lookup"><span data-stu-id="c8843-103">Using <xref:System.Speech.Recognition.SemanticResultKey> objects, you tag <xref:System.Speech.Recognition.SemanticResultValue> instances contained in <xref:System.Speech.Recognition.GrammarBuilder> objects and strings so that the values may readily be accessed from <xref:System.Speech.Recognition.SemanticValue> instances on recognition.</span></span>  
  
 <span data-ttu-id="c8843-104">Vous pouvez utiliser <xref:System.Speech.Recognition.SemanticResultValue> et <xref:System.Speech.Recognition.SemanticResultKey> conjointement avec les objets <xref:System.Speech.Recognition.GrammarBuilder> et <xref:System.Speech.Recognition.Choices> objets, pour définir la structure sémantique pour une grammaire de reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="c8843-104">You can use <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar.</span></span> <span data-ttu-id="c8843-105">Pour accéder aux informations sémantiques dans un résultat de reconnaissance, obtenir une instance de <xref:System.Speech.Recognition.SemanticValue> via la <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> propriété sur <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="c8843-105">To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
  
## Examples  
 <span data-ttu-id="c8843-106">L’exemple suivant crée un <xref:System.Speech.Recognition.Grammar> pour reconnaître des mot de passe entré sous la forme « mon mot de passe est... », où l’entrée réelle est mis en correspondance avec un caractère générique.</span><span class="sxs-lookup"><span data-stu-id="c8843-106">The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form "My password is …", where the actual input is matched with a wildcard.</span></span>  
  
 <span data-ttu-id="c8843-107">Le caractère générique est marqué avec une clé sémantique et le <xref:System.Speech.Recognition.Grammar.SpeechRecognized> gestionnaire vérifie la présence de cette balise pour vérifier qu’une entrée de mot de passe s’est produite.</span><span class="sxs-lookup"><span data-stu-id="c8843-107">The wildcard is tagged with a semantic key, and the <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag to verify that a password input has occurred.</span></span>  
  
```csharp  
private void pwdGrammar()   
{  
  GrammarBuilder pwdBuilder = new GrammarBuilder("My Password is");  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey wildcardKey= new SemanticResultKey("Password", wildcardBuilder);  
  pwdBuilder+=wildcardKey;  
  Grammar grammar = new Grammar(pwdBuilder);  
  grammar.Name = "Password input";  
  
  grammar.SpeechRecognized += delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
  {  
    SemanticValue semantics = eventArgs.Result.Semantics;  
    RecognitionResult result=eventArgs.Result;  
  
    if (!semantics.ContainsKey("Password"))   
    {  
      SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
    }  
    else   
    {  
      RecognizedAudio pwdAudio = result.GetAudioForWordRange(result.Words[3], result.Words[result.Words.Count - 1]);  
      MemoryStream pwdMemoryStream = new MemoryStream();  
      pwdAudio.WriteToAudioStream(pwdMemoryStream);  
      if (!IsValidPwd(pwdMemoryStream))   
      {  
        string badPwd = System.IO.Path.GetTempPath() + "BadPwd" + (new Random()).Next().ToString() + ".wav";  
        FileStream waveStream = new FileStream(badPwd, FileMode.Create);  
        pwdAudio.WriteToWaveStream(waveStream);  
        waveStream.Flush();  
        waveStream.Close();  
        SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);  
  
      }  
    }  
  };  
  grammar.Enabled = true;  
  _recognizer.LoadGrammar(grammar);  
  UpdateGrammarTree(_grammarTreeView, _recognizer);  
  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.SemanticValue" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361587(v%3doffice.14)"><span data-ttu-id="c8843-108">À l’aide d’un SemanticResultKey pour extraire un SemanticResultValue</span><span class="sxs-lookup"><span data-stu-id="c8843-108">Using a SemanticResultKey to Extract a SemanticResultValue</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8843-109">Construit une instance <see cref="T:System.Speech.Recognition.SemanticResultKey" /> et associe la clé avec des composants de grammaire.</span><span class="sxs-lookup"><span data-stu-id="c8843-109">Constructs an instance of <see cref="T:System.Speech.Recognition.SemanticResultKey" /> and associates the key with grammar components.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8843-110">Les constructeurs pour <xref:System.Speech.Recognition.SemanticResultKey> spécifier une balise de texte (la clé sémantique) et un ensemble de composants de grammaire à ajouter à une grammaire de reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="c8843-110">The constructors for <xref:System.Speech.Recognition.SemanticResultKey> specify a text tag (the semantic key) and a set of grammar components to add to a speech recognition grammar.</span></span>  
  
 <span data-ttu-id="c8843-111">La grammaire composants peuvent être spécifié sous la forme d’un tableau de <xref:System.Speech.Recognition.GrammarBuilder> objets, ou en tant que tableau de <xref:System.String> instances.</span><span class="sxs-lookup"><span data-stu-id="c8843-111">The grammar components can be specified either as an array of <xref:System.Speech.Recognition.GrammarBuilder> objects, or as an array of <xref:System.String> instances.</span></span>  
  
 <span data-ttu-id="c8843-112">Si les composants de grammaire sont utilisés dans la reconnaissance, vous pouvez accéder à retourné <xref:System.Speech.Recognition.SemanticValue> à l’aide de la balise de texte fournie au constructeur de <xref:System.Speech.Recognition.SemanticResultKey> comme clé sémantique.</span><span class="sxs-lookup"><span data-stu-id="c8843-112">If the grammar components are used in recognition, you can access the returned <xref:System.Speech.Recognition.SemanticValue> using the text tag provided to the constructor of <xref:System.Speech.Recognition.SemanticResultKey> as a semantic key.</span></span> <span data-ttu-id="c8843-113">Le <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété de la <xref:System.Speech.Recognition.SemanticValue> instance sera déterminée par les composants de grammaire utilisés dans la définition de <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="c8843-113">The <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> instance will be determined by the grammar components used in the definition of <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultKey (string semanticResultKey, params System.Speech.Recognition.GrammarBuilder[] builders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string semanticResultKey, class System.Speech.Recognition.GrammarBuilder[] builders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (semanticResultKey As String, ParamArray builders As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultKey(System::String ^ semanticResultKey, ... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ builders);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultKey : string * System.Speech.Recognition.GrammarBuilder[] -&gt; System.Speech.Recognition.SemanticResultKey" Usage="new System.Speech.Recognition.SemanticResultKey (semanticResultKey, builders)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticResultKey" Type="System.String" />
        <Parameter Name="builders" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="semanticResultKey"><span data-ttu-id="c8843-114">Balise à utiliser comme clé sémantique pour accéder à l'instance <see cref="T:System.Speech.Recognition.SemanticValue" /> associée aux objets <see cref="T:System.Speech.Recognition.GrammarBuilder" /> spécifiés par l'argument <paramref name="builders" />.</span><span class="sxs-lookup"><span data-stu-id="c8843-114">The tag to be used as a semantic key to access the <see cref="T:System.Speech.Recognition.SemanticValue" /> instance associated with the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects specified by the <paramref name="builders" /> argument.</span></span></param>
        <param name="builders"><span data-ttu-id="c8843-115">Tableau des composants de syntaxe qui sont associés à un objet <see cref="T:System.Speech.Recognition.SemanticValue" /> accessible avec l'indicateur défini dans <paramref name="semanticResultKey" />.</span><span class="sxs-lookup"><span data-stu-id="c8843-115">An array of grammar components that will be associated with a <see cref="T:System.Speech.Recognition.SemanticValue" /> object accessible with the tag defined in <paramref name="semanticResultKey" />.</span></span></param>
        <summary><span data-ttu-id="c8843-116">Assigne une clé sémantique à un ou plusieurs objets <see cref="T:System.Speech.Recognition.GrammarBuilder" /> utilisés pour créer une syntaxe de reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="c8843-116">Assigns a semantic key to one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects used to create a speech recognition grammar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8843-117">En raison de conversions implicites, la `builders` prend en charge de l’argument <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, et <xref:System.String> des objets.</span><span class="sxs-lookup"><span data-stu-id="c8843-117">Because of implicit conversions, the `builders` argument supports <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, and <xref:System.String> objects as well.</span></span> <span data-ttu-id="c8843-118">Pour plus d’informations sur les conversions implicites, consultez <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.</span><span class="sxs-lookup"><span data-stu-id="c8843-118">For more information on implicit conversions, see <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.</span></span>  
  
 <span data-ttu-id="c8843-119">Lorsque vous effectuez une opération de reconnaissance, les <xref:System.Speech.Recognition.GrammarBuilder> objets fournis dans le `builders` argument sont traités de manière séquentielle.</span><span class="sxs-lookup"><span data-stu-id="c8843-119">When performing a recognition operation, the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` argument are treated as sequential.</span></span> <span data-ttu-id="c8843-120">Par exemple, si les éléments suivants <xref:System.Speech.Recognition.SemanticResultValue> est utilisé pour construire un <xref:System.Speech.Recognition.Grammar>, entrée pour le moteur de reconnaissance doit contenir les mots « le renard brun » dans la séquence à reconnaître.</span><span class="sxs-lookup"><span data-stu-id="c8843-120">For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words "the quick brown fox" in sequence to be recognized.</span></span>  
  
```csharp  
SemanticResultKey stringTest=new SemanticResultKey(  
    "stringTest", new GrammarBuilder[] {  
    new GrammarBuilder("the"),  
    new GrammarBuilder("quick"),  
    new GrammarBuilder("brown"),  
    new GrammarBuilder("fox")});  
```  
  
 <span data-ttu-id="c8843-121">Le `semanticResultKey` argument contient la balise utilisée pour accéder à la <xref:System.Speech.Recognition.SemanticValue> qui peut être retourné.</span><span class="sxs-lookup"><span data-stu-id="c8843-121">The `semanticResultKey` argument contains the tag used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.</span></span>  
  
 <span data-ttu-id="c8843-122">Le <xref:System.Speech.Recognition.SemanticValue.Value%2A> de la <xref:System.Speech.Recognition.SemanticValue> est déterminée par le <xref:System.Speech.Recognition.GrammarBuilder> instances fournies par le `builders` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c8843-122">The <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> is determined by the <xref:System.Speech.Recognition.GrammarBuilder> instances provided by the `builders` parameter.</span></span>  
  
 <span data-ttu-id="c8843-123">Si le <xref:System.Speech.Recognition.GrammarBuilder> objets ne contiennent aucune instance de définition de <xref:System.Speech.Recognition.SemanticResultValue>, la valeur de la <xref:System.Speech.Recognition.SemanticValue> est `null`.</span><span class="sxs-lookup"><span data-stu-id="c8843-123">If the <xref:System.Speech.Recognition.GrammarBuilder> objects contain no defining instances of <xref:System.Speech.Recognition.SemanticResultValue>, the value of the <xref:System.Speech.Recognition.SemanticValue> is `null`.</span></span>  
  
 <span data-ttu-id="c8843-124">Si le <xref:System.Speech.Recognition.GrammarBuilder> objets fournis dans le `builders` paramètre fournissent un non marqué (non associé à un <xref:System.Speech.Recognition.SemanticResultKey> objet) <xref:System.Speech.Recognition.SemanticResultValue> instance qui est utilisé par la logique de reconnaissance, qu’une instance de <xref:System.Speech.Recognition.SemanticResultValue> définira le <xref:System.Speech.Recognition.SemanticValue.Value%2A>propriété de la <xref:System.Speech.Recognition.SemanticValue> qui est généré.</span><span class="sxs-lookup"><span data-stu-id="c8843-124">If the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` parameter provide an untagged (not associated with a <xref:System.Speech.Recognition.SemanticResultKey> object) <xref:System.Speech.Recognition.SemanticResultValue> instance that is used by the recognition logic, that instance of <xref:System.Speech.Recognition.SemanticResultValue> will define the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> that is produced.</span></span>  
  
 <span data-ttu-id="c8843-125">Vous devez avoir un, et qu’un seul, sans balise <xref:System.Speech.Recognition.SemanticResultValue> d’instance dans le <xref:System.Speech.Recognition.GrammarBuilder> objets spécifié par le `builders` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c8843-125">There should be one, and only one, untagged <xref:System.Speech.Recognition.SemanticResultValue> instance in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter.</span></span> <span data-ttu-id="c8843-126">Si plusieurs instances de balise <xref:System.Speech.Recognition.SemanticResultValue> sont associées les <xref:System.Speech.Recognition.SemanticResultKey>, chacun tentera de l’ensemble de la valeur de la <xref:System.Speech.Recognition.SemanticValue> produites dans le résultat de la reconnaissance.</span><span class="sxs-lookup"><span data-stu-id="c8843-126">If multiple instances of untagged <xref:System.Speech.Recognition.SemanticResultValue> are associated with the <xref:System.Speech.Recognition.SemanticResultKey>, each will attempt to the set the value of the <xref:System.Speech.Recognition.SemanticValue> produced in the recognition result.</span></span> <span data-ttu-id="c8843-127">Cela n’est pas autorisé, et le module de reconnaissance générera une exception lorsqu’il tente d’utiliser un <xref:System.Speech.Recognition.Grammar> créé à l’aide par exemple un <xref:System.Speech.Recognition.SemanticResultKey> instance.</span><span class="sxs-lookup"><span data-stu-id="c8843-127">This is not permitted, and the recognizer will generate an exception when it attempts to use a <xref:System.Speech.Recognition.Grammar> created using such a <xref:System.Speech.Recognition.SemanticResultKey> instance.</span></span>  
  
 <span data-ttu-id="c8843-128">Instances de <xref:System.Speech.Recognition.SemanticResultValue> contenus dans le <xref:System.Speech.Recognition.GrammarBuilder> objets spécifié par le `builders` paramètre et déjà associé à un autre <xref:System.Speech.Recognition.SemanticResultKey> n’ont aucun effet sur les cours <xref:System.Speech.Recognition.SemanticResultKey> instance.</span><span class="sxs-lookup"><span data-stu-id="c8843-128">Instances of <xref:System.Speech.Recognition.SemanticResultValue> contained in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter and already associated with another <xref:System.Speech.Recognition.SemanticResultKey> have no effect on the current <xref:System.Speech.Recognition.SemanticResultKey> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8843-129">L’exemple suivant crée un <xref:System.Speech.Recognition.Grammar> pour reconnaître des mot de passe entré sous la forme « mon mot de passe est... », où l’entrée réelle est mis en correspondance avec un caractère générique.</span><span class="sxs-lookup"><span data-stu-id="c8843-129">The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form "My password is …", where the actual input is matched with a wildcard.</span></span>  
  
 <span data-ttu-id="c8843-130">Le caractère générique est marqué par un <xref:System.Speech.Recognition.SpeechRecognizer> dont la valeur clé est « Password ».</span><span class="sxs-lookup"><span data-stu-id="c8843-130">The wildcard is tagged by a <xref:System.Speech.Recognition.SpeechRecognizer> whose key value is "Password".</span></span> <span data-ttu-id="c8843-131">Le <xref:System.Speech.Recognition.Grammar.SpeechRecognized> gestionnaire vérifie la présence de cette balise, obtient l’entrée audio du mot de passe et vérifie le mot de passe.</span><span class="sxs-lookup"><span data-stu-id="c8843-131">The <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag, obtains the audio input of the password, and verifies the password.</span></span>  
  
```csharp  
private void pwdGrammar()   
{  
  GrammarBuilder pwdBuilder = new GrammarBuilder("My Password is");  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey wildcardKey= new SemanticResultKey("Password", wildcardBuilder);  
  pwdBuilder+=wildcardKey;  
  Grammar grammar = new Grammar(pwdBuilder);  
  grammar.Name = "Password input";  
  
  grammar.SpeechRecognized +=   
    delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
    {  
      SemanticValue semantics = eventArgs.Result.Semantics;  
      RecognitionResult result=eventArgs.Result;  
  
      if (!semantics.ContainsKey("Password"))   
      {  
        SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
      }  
      else   
      {  
        RecognizedAudio pwdAudio = result.GetAudioForWordRange(  
                  result.Words[3],  
                  result.Words[result.Words.Count - 1]);  
                  MemoryStream pwdMemoryStream = new MemoryStream();  
                  pwdAudio.WriteToAudioStream(pwdMemoryStream);  
        if (!IsValidPwd(pwdMemoryStream))   
        {  
          string badPwd = System.IO.Path.GetTempPath() + "BadPwd" + (new Random()).Next().ToString() + ".wav";  
          FileStream waveStream = new FileStream(badPwd, FileMode.Create);    
          pwdAudio.WriteToWaveStream(waveStream);  
          waveStream.Flush();  
          waveStream.Close();  
          SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);      
        }  
      }  
    };  
  
  grammar.Enabled = true;  
  _recognizer.LoadGrammar(grammar);  
  UpdateGrammarTree(_grammarTreeView, _recognizer);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultKey (string semanticResultKey, params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string semanticResultKey, string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (semanticResultKey As String, ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultKey(System::String ^ semanticResultKey, ... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultKey : string * string[] -&gt; System.Speech.Recognition.SemanticResultKey" Usage="new System.Speech.Recognition.SemanticResultKey (semanticResultKey, phrases)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticResultKey" Type="System.String" />
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="semanticResultKey"><span data-ttu-id="c8843-132">Étiquette à utiliser pour accéder à l’instance <see cref="T:System.Speech.Recognition.SemanticValue" /> associée aux objets <see cref="T:System.String" /> spécifiés par l’argument <paramref name="phrases" />.</span><span class="sxs-lookup"><span data-stu-id="c8843-132">The tag to be used access the <see cref="T:System.Speech.Recognition.SemanticValue" /> instance associated with the <see cref="T:System.String" /> objects specified by the <paramref name="phrases" /> argument.</span></span></param>
        <param name="phrases"><span data-ttu-id="c8843-133">Un ou plusieurs objets <see cref="T:System.String" />, dont le texte concaténé est associé à un objet <see cref="T:System.Speech.Recognition.SemanticValue" /> accessible avec l'indicateur défini dans <paramref name="semanticResultKey" />.</span><span class="sxs-lookup"><span data-stu-id="c8843-133">One or more <see cref="T:System.String" /> objects, whose concatenated text will be associated with a <see cref="T:System.Speech.Recognition.SemanticValue" /> object accessible with the tag defined in <paramref name="semanticResultKey" />.</span></span></param>
        <summary><span data-ttu-id="c8843-134">Assigne une clé sémantique à une ou plusieurs instances <see cref="T:System.String" /> utilisées pour créer une syntaxe de reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="c8843-134">Assigns a semantic key to one or more <see cref="T:System.String" /> instances used to create a speech recognition grammar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8843-135">Lorsque vous effectuez une opération de reconnaissance, les <xref:System.String> objets utilisés dans le `phrases` paramètre sont traitées de manière séquentielle.</span><span class="sxs-lookup"><span data-stu-id="c8843-135">When performing a recognition operation, the <xref:System.String> objects used in the `phrases` parameter are treated as sequential.</span></span> <span data-ttu-id="c8843-136">Par exemple, si les éléments suivants <xref:System.Speech.Recognition.SemanticResultValue> est utilisé pour construire un <xref:System.Speech.Recognition.Grammar>, entrée pour le moteur de reconnaissance doit contenir les mots « le renard brun » dans la séquence à reconnaître.</span><span class="sxs-lookup"><span data-stu-id="c8843-136">For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words "the quick brown fox" in sequence to be recognized.</span></span>  
  
```csharp  
SemanticResultKey stringTest=new SemanticResultKey("stringTest",   
                                new string[] {  
                                               "the",  
                                               "quick",  
                                               "brown",  
                                               "fox"});  
```  
  
 <span data-ttu-id="c8843-137">Le `semanticResultKey` argument détermine la clé utilisée pour accéder à la <xref:System.Speech.Recognition.SemanticValue> qui peut être retourné.</span><span class="sxs-lookup"><span data-stu-id="c8843-137">The `semanticResultKey` argument determines the key used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.</span></span>  
  
 <span data-ttu-id="c8843-138">Si vous construisez un <xref:System.Speech.Recognition.Grammar> à l’aide un <xref:System.Speech.Recognition.GrammarBuilder> objet qui contient une clé sémantique avec un tableau d’objets de chaîne, le <xref:System.Speech.Recognition.SemanticValue.Value%2A> de la <xref:System.Speech.Recognition.SemanticValue> produite par une opération de reconnaissance sera la chaîne utilisée dans la reconnaissance.</span><span class="sxs-lookup"><span data-stu-id="c8843-138">If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition.</span></span> <span data-ttu-id="c8843-139">Dans l’exemple précédent, cela signifie que <xref:System.Speech.Recognition.SemanticValue.Value%2A> serait « le renard brun ».</span><span class="sxs-lookup"><span data-stu-id="c8843-139">In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be "the quick brown fox".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8843-140">L’exemple suivant crée un <xref:System.Speech.Recognition.Grammar> à partir d’un <xref:System.Speech.Recognition.GrammarBuilder> objet qui utilise un <xref:System.Speech.Recognition.SemanticResultKey>, qui est défini par un tableau de <xref:System.String> objets.</span><span class="sxs-lookup"><span data-stu-id="c8843-140">The following example creates a <xref:System.Speech.Recognition.Grammar> from a <xref:System.Speech.Recognition.GrammarBuilder> object that uses a <xref:System.Speech.Recognition.SemanticResultKey>, which is defined by an array of <xref:System.String> objects.</span></span>  
  
 <span data-ttu-id="c8843-141">Un moteur de reconnaissance à l’aide de la <xref:System.Speech.Recognition.Grammar> créé va identifier l’expression « couleur rouge zéro bleu vert ».</span><span class="sxs-lookup"><span data-stu-id="c8843-141">A recognition engine using the <xref:System.Speech.Recognition.Grammar> created will recognize the phrase "color red green blue zero".</span></span> <span data-ttu-id="c8843-142">La sémantique de la <xref:System.Speech.Recognition.RecognizedPhrase> retourné par reconnaissance contiendra un <xref:System.Speech.Recognition.SemanticValue> avec un <xref:System.Speech.Recognition.SemanticValue.Value%2A> de « rouge vert au bleu ».</span><span class="sxs-lookup"><span data-stu-id="c8843-142">The semantics of the <xref:System.Speech.Recognition.RecognizedPhrase> returned by recognition will contain a <xref:System.Speech.Recognition.SemanticValue> with a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of "red green blue".</span></span> <span data-ttu-id="c8843-143">Vous pouvez accéder à la <xref:System.Speech.Recognition.SemanticValue> à l’aide de la balise « code ».</span><span class="sxs-lookup"><span data-stu-id="c8843-143">You can access the <xref:System.Speech.Recognition.SemanticValue> using the "code" tag.</span></span>  
  
 <span data-ttu-id="c8843-144">Raison de la `SemanticResultValue("zero", 5)` ajouté à la <xref:System.Speech.Recognition.GrammarBuilder>, la racine <xref:System.Speech.Recognition.SemanticValue> de l’objet dans le <xref:System.Speech.Recognition.RecognizedPhrase> a la valeur 5.</span><span class="sxs-lookup"><span data-stu-id="c8843-144">Because of the `SemanticResultValue("zero", 5)` appended to the <xref:System.Speech.Recognition.GrammarBuilder>, the root <xref:System.Speech.Recognition.SemanticValue> object in the <xref:System.Speech.Recognition.RecognizedPhrase> will have a value of 5.</span></span>  
  
```csharp  
private void keyTest()   
{  
  // Say "color red green blue zero"  
  GrammarBuilder gb = new GrammarBuilder("color") +  
                        new SemanticResultKey("code",   
                          (new string[] {"red", "green", "blue"})) +  
                        new SemanticResultValue("zero", 5);  
  Grammar g = new Grammar(gb);  
  g.Name = "keyTest";  
  _recognizer.LoadGrammar(g);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="semanticResultKey.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8843-145">Retourne une instance de <see cref="T:System.Speech.Recognition.GrammarBuilder" /> construite à partir de l'instance <see cref="T:System.Speech.Recognition.SemanticResultKey" /> actuelle.</span><span class="sxs-lookup"><span data-stu-id="c8843-145">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultKey" /> instance.</span></span></summary>
        <returns><span data-ttu-id="c8843-146">Instance de <see cref="T:System.Speech.Recognition.GrammarBuilder" /> construite à partir de l’instance <see langword="SemanticResultKey" /> actuelle.</span><span class="sxs-lookup"><span data-stu-id="c8843-146">An instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see langword="SemanticResultKey" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8843-147">L’utilisation de <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> équivaut à utiliser le <xref:System.Speech.Recognition.GrammarBuilder> constructeur qui accepte <xref:System.Speech.Recognition.SemanticResultKey> en tant qu’argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).</span><span class="sxs-lookup"><span data-stu-id="c8843-147">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor which takes <xref:System.Speech.Recognition.SemanticResultKey> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8843-148">L’exemple suivant crée un <xref:System.Speech.Recognition.Grammar> objet qui prend en charge les commandes permettant de modifier la couleur d’arrière-plan.</span><span class="sxs-lookup"><span data-stu-id="c8843-148">The following example creates a <xref:System.Speech.Recognition.Grammar> object that supports commands to change the background color.</span></span>  
  
 <span data-ttu-id="c8843-149">Un <xref:System.Speech.Recognition.Choices> objet (`colorChoice`) contenant la liste des options pour les couleurs d’arrière-plan est rempli en utilisant la <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> méthode avec <xref:System.Speech.Recognition.GrammarBuilder> instances.</span><span class="sxs-lookup"><span data-stu-id="c8843-149">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances.</span></span> <span data-ttu-id="c8843-150">Le <xref:System.Speech.Recognition.GrammarBuilder> instances sont obtenues via le <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> méthode sur le <xref:System.Speech.Recognition.SemanticResultValue> objets créés à partir de chaînes de couleur.</span><span class="sxs-lookup"><span data-stu-id="c8843-150">The <xref:System.Speech.Recognition.GrammarBuilder> instances are obtained through the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the <xref:System.Speech.Recognition.SemanticResultValue> objects created from color strings.</span></span>  
  
 <span data-ttu-id="c8843-151">Un <xref:System.Speech.Recognition.GrammarBuilder> est ensuite obtenu en appelant <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> sur un <xref:System.Speech.Recognition.SemanticResultKey> instance, qui sera utilisé pour les choix de sémantiques dans la clé `colorChoice`.</span><span class="sxs-lookup"><span data-stu-id="c8843-151">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in `colorChoice`.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RGB.  
  // Choices constructors do not take SemanticResultValue parameters, so cast   
  // the SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
    SemanticResultValue colorValue=new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.  
    colorChoice.Add(colorValue.ToGrammarBuilder());      
  }  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with introductory phrase and the color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the Grammar object, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] {makeBackgroundBuilder, configureBackgroundBuilder}));  
  grammar.Name = "Make Background /Configure background as";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>