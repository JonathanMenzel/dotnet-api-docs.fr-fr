<Type Name="Choices" FullName="System.Speech.Recognition.Choices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e336e1a9b05e097bce814c249660cc288196518e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Choices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Choices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.Choices" />
  <TypeSignature Language="VB.NET" Value="Public Class Choices" />
  <TypeSignature Language="C++ CLI" Value="public ref class Choices" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_oneOf.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b0fc2-101">Représente un ensemble d'alternatives dans les contraintes d'une syntaxe de reconnaissance vocale.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0fc2-101">Represents a set of alternatives in the constraints of a speech recognition grammar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0fc2-102">A <xref:System.Speech.Recognition.Choices> objet représente un composant d’une expression qui peut avoir une des valeurs suivantes.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-102">A <xref:System.Speech.Recognition.Choices> object represents a component of a phrase that can have one of several values.</span></span> <span data-ttu-id="b0fc2-103">Utilisez cette classe lors de la création d’une grammaire de reconnaissance vocale à partir d’un <xref:System.Speech.Recognition.GrammarBuilder> objet.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-103">Use this class when creating a speech recognition grammar from a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 <span data-ttu-id="b0fc2-104">Par exemple, un <xref:System.Speech.Recognition.Choices> objet peut représenter le composant *colorChoice* dans l’expression suivante : « modifier la couleur à *colorChoice*», où les valeurs acceptables pour *colorChoice* sont « rouge » ou « vert » ou « bleu ».</span><span class="sxs-lookup"><span data-stu-id="b0fc2-104">For example, a <xref:System.Speech.Recognition.Choices> object could represent the component *colorChoice* in the phrase, "Change the color to *colorChoice*", where acceptable values for *colorChoice* are "red", or "green", or "blue".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0fc2-105">À utiliser un <xref:System.Speech.Recognition.Choices> de l’objet en tant que composant facultatif dans une expression, créez le <xref:System.Speech.Recognition.Choices> de l’objet et l’ajouter à un <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> avec l’objet `minRepeat` et `maxRepeat` la valeur 0 et 1, respectivement.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-105">To use a <xref:System.Speech.Recognition.Choices> object as an optional component in a phrase, create the <xref:System.Speech.Recognition.Choices> object and add it to a <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> object with `minRepeat` and `maxRepeat` set to 0 and 1, respectively.</span></span> <span data-ttu-id="b0fc2-106">Les expressions contenant des composants facultatifs peuvent être reconnues ou non le composant facultatif est lu.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-106">Phrases containing optional components can be recognized whether or not the optional component is spoken.</span></span>  
  
 <span data-ttu-id="b0fc2-107">Le <xref:System.Speech.Recognition.Choices> classe a la même fonction que la `one-of` élément XML défini par le [spécification de grammaire de reconnaissance vocale (SRGS) Version 1.0](http://www.w3.org/TR/speech-grammar/) et est semblable à la <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> classe dans le <xref:System.Speech.Recognition.SrgsGrammar> espace de noms.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-107">The <xref:System.Speech.Recognition.Choices> class serves the same function as the `one-of` XML element defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://www.w3.org/TR/speech-grammar/) and is similar to the <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> class in the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="b0fc2-108">Pour plus d’informations sur la définition d’une grammaire de reconnaissance vocale, consultez [la reconnaissance vocale](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) et [création des grammaires GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="b0fc2-108">For more information about defining a speech recognition grammar, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0fc2-109">L’exemple suivant crée une grammaire de reconnaissance vocale pour l’expression suivante : « la valeur en arrière-plan *colorChoice*», où *colorChoice* peut prendre l’une des couleurs définies.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-109">The following example creates a speech recognition grammar for the phrase, "Set background to *colorChoice*", where *colorChoice* can be one of the defined colors.</span></span> <span data-ttu-id="b0fc2-110">Le <xref:System.Speech.Recognition.GrammarBuilder> est utilisé pour définir les contraintes de la grammaire.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-110">The <xref:System.Speech.Recognition.GrammarBuilder> is used to define the constraints for the grammar.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a Choices object that contains a set of alternative colors.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  colorChoice.Add(new string[] {"cyan", "yellow", "magenta"});  
  
  // Construct the phrase.  
  GrammarBuilder builder = new GrammarBuilder("Set background to");  
  builder.Append(colorChoice);  
  
  // Create a grammar for the phrase.  
  Grammar colorGrammar = new Grammar(builder);  
  colorGrammar.Name = "SetBackground";  
  
  return colorGrammar;  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0fc2-111">Initialise une nouvelle instance de la classe <see cref="T:System.Speech.Recognition.Choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0fc2-111">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0fc2-112">Vous pouvez construire un <xref:System.Speech.Recognition.Choices> de l’objet à l’aide d’un constructeur de valeur par défaut (qui retourne un objet vide), d’un groupe de <xref:System.String> objets, ou un jeu de <xref:System.Speech.Recognition.GrammarBuilder> objets.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-112">You can construct a <xref:System.Speech.Recognition.Choices> object using a default constructor (which returns an empty object), from a group of <xref:System.String> objects, or a from set of <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
 <span data-ttu-id="b0fc2-113">Étant donné que la <xref:System.Speech.Recognition.GrammarBuilder> objet prend en charge la conversion implicite de <xref:System.Speech.Recognition.SemanticResultValue> et <xref:System.Speech.Recognition.SemanticResultKey>, un <xref:System.Speech.Recognition.Choices> peut être construit à partir d’un tableau de ces objets à l’aide d’un cast.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-113">Because the <xref:System.Speech.Recognition.GrammarBuilder> object supports implicit conversion from <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>, a <xref:System.Speech.Recognition.Choices> can be constructed from an array of these objects using a cast.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0fc2-114">L’exemple suivant utilise <xref:System.Speech.Recognition.Choices> objets pour créer les deux listes d’alternatives.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-114">The following example uses <xref:System.Speech.Recognition.Choices> objects to create two lists of alternatives.</span></span>  
  
 <span data-ttu-id="b0fc2-115">La première <xref:System.Speech.Recognition.Choices> objet est construit à partir d’un tableau de <xref:System.String> objets.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-115">The first <xref:System.Speech.Recognition.Choices> object is constructed from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="b0fc2-116">L’autre <xref:System.Speech.Recognition.Choices> objet est construit à partir d’un tableau de <xref:System.Speech.Recognition.GrammarBuilder> les objets qui ont été convertis implicitement un cast.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-116">The other <xref:System.Speech.Recognition.Choices> object is constructed from an array of <xref:System.Speech.Recognition.GrammarBuilder> objects which have been implicitly converted by a cast.</span></span>  
  
 <span data-ttu-id="b0fc2-117">L’exemple utilise un <xref:System.Speech.Recognition.GrammarBuilder> objet pour assembler une expression, à l’aide de la <xref:System.Speech.Recognition.Choices> deux chaînes supplémentaires, qui peuvent être utilisés pour la voix et les objets d’entrée sous la forme de « Appel [contactlList] [phoneType] téléphone », par exemple « Jane appel sur téléphone portable ».</span><span class="sxs-lookup"><span data-stu-id="b0fc2-117">The example uses a <xref:System.Speech.Recognition.GrammarBuilder> object to assemble a phrase, using the <xref:System.Speech.Recognition.Choices> objects and two additional strings, that can be used to recognize speech input in the form of "Call [contactlList] on [phoneType] phone" , for example "Call Jane on cell phone".</span></span>  
  
```  
public GrammarBuilder ChoicesContructor2 ()  
{  
    GrammarBuilder gb = new GrammarBuilder ();  
    Choices phoneType = new Choices (new string[] {"cell", "home", "work"});  
    Choices contactList = new Choices (new GrammarBuilder[] {(GrammarBuilder) "Mark", (GrammarBuilder) "Jane", (GrammarBuilder) "Frank"});  
    gb.Append ("Call");  
    gb.Append (contactList);  
    gb.Append ("on");  
    gb.Append (phoneType);  
    gb.Append ("phone");  
    return gb;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0fc2-118">Initialise une nouvelle instance de la classe <see cref="T:System.Speech.Recognition.Choices" /> qui contient un ensemble vide de solutions de remplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0fc2-118">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class that contains an empty set of alternatives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0fc2-119">Ce constructeur retourne un ensemble vide valide, des méthodes.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-119">This constructor returns a valid, empty set of alternatives.</span></span> <span data-ttu-id="b0fc2-120">Vous pouvez ajouter des alternatives à l’aide de la <xref:System.Speech.Recognition.Choices.Add%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-120">You can add alternatives using any of the <xref:System.Speech.Recognition.Choices.Add%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0fc2-121">L’exemple suivant utilise <xref:System.Speech.Recognition.Choices> et <xref:System.Speech.Recognition.GrammarBuilder> objets pour créer une expression qui peut être utilisée pour reconnaître entrée vocale telles que « Appel Anne sur sa cellule » et « James appel sur son téléphone professionnel ».</span><span class="sxs-lookup"><span data-stu-id="b0fc2-121">The following example uses <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects to create a phrase that can be used to recognize speech input such as "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="b0fc2-122">L’exemple utilise des casts implicites à partir de <xref:System.Speech.Recognition.Choices> et <xref:System.String> à <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-122">The example uses implicit casts from <xref:System.Speech.Recognition.Choices> and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices (params System.Speech.Recognition.GrammarBuilder[] alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder[] alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray alternateChoices As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices(... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ alternateChoices);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="b0fc2-123">Tableau contenant l'ensemble des solutions de remplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0fc2-123">An array containing the set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0fc2-124">Initialise une nouvelle instance de la classe <see cref="T:System.Speech.Recognition.Choices" /> à partir d'un tableau contenant un ou plusieurs objets <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0fc2-124">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class from an array containing one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0fc2-125">Chaque <xref:System.Speech.Recognition.GrammarBuilder> dans `alternateChoices` définit une solution.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-125">Each <xref:System.Speech.Recognition.GrammarBuilder> in `alternateChoices` defines one alternative.</span></span> <span data-ttu-id="b0fc2-126">Si `alternateChoices` est un tableau vide, le constructeur retourne un ensemble vide d’alternatives.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-126">If `alternateChoices` is an empty array, the constructor returns an empty set of alternatives.</span></span> <span data-ttu-id="b0fc2-127">Vous pouvez ajouter des alternatives à l’aide de la <xref:System.Speech.Recognition.Choices.Add%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-127">You can add alternatives using any of the <xref:System.Speech.Recognition.Choices.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="b0fc2-128">Le constructeur lève une <xref:System.ArgumentNullException> lorsque `alternateChoices` est `null` ou lorsque un des éléments du tableau sont `null`.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-128">The constructor throws an <xref:System.ArgumentNullException> when `alternateChoices` is `null` or when any of the array elements are `null`.</span></span>  
  
 <span data-ttu-id="b0fc2-129">Étant donné que la <xref:System.Speech.Recognition.GrammarBuilder> classe prend en charge la conversion implicite de <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultValue>, et <xref:System.Speech.Recognition.SemanticResultKey> objets <xref:System.Speech.Recognition.GrammarBuilder> instances, par correctement à l’aide de casts, ce constructeur peut également être utilisé pour créer un <xref:System.Speech.Recognition.Choices> objet à partir d’une liste de n’importe quelle combinaison de ces objets.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-129">Because the <xref:System.Speech.Recognition.GrammarBuilder> class provides support for implicit conversion of <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.SemanticResultKey> objects to <xref:System.Speech.Recognition.GrammarBuilder> instances, by properly using casts, this constructor can also be used to create a <xref:System.Speech.Recognition.Choices> object from a list of any combination of these objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0fc2-130">L’exemple suivant utilise `Choices` et <xref:System.Speech.Recognition.GrammarBuilder> objets pour créer un <xref:System.Speech.Recognition.Grammar> des expressions telles que « Appel Anne sur sa cellule » et « James appel sur son téléphone professionnel ».</span><span class="sxs-lookup"><span data-stu-id="b0fc2-130">The following example uses `Choices` and <xref:System.Speech.Recognition.GrammarBuilder> objects to create a <xref:System.Speech.Recognition.Grammar> for phrases such as, "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="b0fc2-131">L’exemple utilise des casts implicites à partir de `Choices` et <xref:System.String> à <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-131">The example uses implicit casts from `Choices` and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices (params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices(... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="phrases">
          <span data-ttu-id="b0fc2-132">Tableau contenant l'ensemble des solutions de remplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0fc2-132">An array containing the set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0fc2-133">Initialise une nouvelle instance de la classe <see cref="T:System.Speech.Recognition.Choices" /> à partir d'un tableau contenant un ou plusieurs objets <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0fc2-133">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class from an array containing one or more <see cref="T:System.String" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0fc2-134">Chaque <xref:System.String> dans `phrases` définit une solution.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-134">Each <xref:System.String> in `phrases` defines one alternative.</span></span> <span data-ttu-id="b0fc2-135">Le moteur de reconnaissance vocale peut utiliser l’un des éléments dans le tableau de chaînes pour correspondre à une entrée vocale.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-135">The speech recognition engine can use any one of the items in the string array to match speech input.</span></span> <span data-ttu-id="b0fc2-136">Si `phrases` est un tableau vide, le constructeur retourne un ensemble vide d’alternatives.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-136">If `phrases` is an empty array, the constructor returns an empty set of alternatives.</span></span> <span data-ttu-id="b0fc2-137">Vous pouvez ajouter des alternatives à l’aide de la <xref:System.Speech.Recognition.Choices.Add%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-137">You can add alternatives using any of the <xref:System.Speech.Recognition.Choices.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="b0fc2-138">Le constructeur lève une <xref:System.ArgumentNullException> lorsque `phrases` est `null` ou un des éléments du tableau sont `null`.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-138">The constructor throws an <xref:System.ArgumentNullException> when `phrases` is `null` or any of the array elements are `null`.</span></span> <span data-ttu-id="b0fc2-139">Le constructeur lève une <xref:System.ArgumentException> si n’importe quel élément du tableau est une chaîne vide (« »).</span><span class="sxs-lookup"><span data-stu-id="b0fc2-139">The constructor throws an <xref:System.ArgumentException> if any element in the array is an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0fc2-140">L’exemple suivant utilise <xref:System.Speech.Recognition.Choices> et <xref:System.Speech.Recognition.GrammarBuilder> objets pour créer un <xref:System.Speech.Recognition.Grammar> pour les expressions, par exemple, « Appel Anne sur sa cellule » et « James appel sur son téléphone professionnel ».</span><span class="sxs-lookup"><span data-stu-id="b0fc2-140">The following example uses <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects to create a <xref:System.Speech.Recognition.Grammar> for the phrases such as, "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="b0fc2-141">L’exemple utilise des casts implicites à partir de `Choices` et <xref:System.String> à <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-141">The example uses implicit casts from `Choices` and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0fc2-142">Ajoute des éléments à l'ensemble de solutions de remplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0fc2-142">Adds items to the set of alternatives.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (params System.Speech.Recognition.GrammarBuilder[] alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Speech.Recognition.GrammarBuilder[] alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (ParamArray alternateChoices As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ alternateChoices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="b0fc2-143">Objets <see cref="T:System.Speech.Recognition.GrammarBuilder" /> à ajouter à cet objet <see cref="T:System.Speech.Recognition.Choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0fc2-143">The <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects to add to this <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0fc2-144">Ajoute un tableau contenant un ou plusieurs objets <see cref="T:System.Speech.Recognition.GrammarBuilder" /> à l'ensemble de solutions de remplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0fc2-144">Adds an array containing one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects to the set of alternatives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0fc2-145">En raison de la prise en charge de la conversion implicite de <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, et <xref:System.Speech.Recognition.SemanticResultValue> objets <xref:System.Speech.Recognition.GrammarBuilder>, ces trois classes peuvent être ajoutés à un <xref:System.Speech.Recognition.Choices> instance également.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-145">Because of support for implicit conversion from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects to <xref:System.Speech.Recognition.GrammarBuilder>, these three classes may be added to a <xref:System.Speech.Recognition.Choices> instance as well.</span></span>  
  
 <span data-ttu-id="b0fc2-146">Si `alternateChoices` est un tableau vide, cette méthode ne met pas à jour l’ensemble des choix.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-146">If `alternateChoices` is an empty array, this method does not update the set of alternatives.</span></span>  
  
 <span data-ttu-id="b0fc2-147">Les applications peuvent utiliser les deux <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> et <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> pour ajouter des alternatives à un <xref:System.Speech.Recognition.Choices> objet.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-147">Applications can use both <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> and <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> to add alternatives to a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
 <span data-ttu-id="b0fc2-148">Cette méthode lève un <xref:System.ArgumentNullException> lorsque `alternateChoices` est `null` ou un des éléments du tableau sont `null`.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-148">This method throws an <xref:System.ArgumentNullException> when `alternateChoices` is `null` or any of the array elements are `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0fc2-149">L’exemple suivant crée une grammaire de reconnaissance vocale des expressions telles que « Appel Anne sur sa cellule » et « James appel sur son téléphone professionnel ».</span><span class="sxs-lookup"><span data-stu-id="b0fc2-149">The following example creates a speech recognition grammar for phrases such as "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="b0fc2-150">L’exemple utilise les deux surcharges de la <xref:System.Speech.Recognition.Choices.Add%2A> méthode pour générer la grammaire.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-150">The example uses both overloads of the <xref:System.Speech.Recognition.Choices.Add%2A> method to build the grammar.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.Add(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="phrases">
          <span data-ttu-id="b0fc2-151">Les chaînes à ajouter à cet objet <see cref="T:System.Speech.Recognition.Choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0fc2-151">The strings to add to this <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0fc2-152">Ajoute un tableau contenant un ou plusieurs objets <see cref="T:System.String" /> à l'ensemble de solutions de remplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0fc2-152">Adds an array containing one or more <see cref="T:System.String" /> objects to the set of alternatives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0fc2-153">Les applications peuvent utiliser les deux <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> et <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> pour ajouter des alternatives à un <xref:System.Speech.Recognition.Choices> objet.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-153">Applications can use both <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> and <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> to add alternatives to a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
 <span data-ttu-id="b0fc2-154">Si `phrases` est un tableau vide, cette méthode ne met pas à jour l’ensemble des variantes.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-154">If `phrases` is an empty array, this method does not update the set of alternates.</span></span>  
  
 <span data-ttu-id="b0fc2-155">Cette méthode lève un <xref:System.ArgumentNullException> lorsque `phrases` est `null` ou un des éléments du tableau sont `null`.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-155">This method throws an <xref:System.ArgumentNullException> when `phrases` is `null` or any of the array elements are `null`.</span></span> <span data-ttu-id="b0fc2-156">Cette méthode lève un <xref:System.ArgumentException> si un élément dans le tableau est une chaîne vide (« »).</span><span class="sxs-lookup"><span data-stu-id="b0fc2-156">This method throws an <xref:System.ArgumentException> if any element in the array is the empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0fc2-157">L’exemple suivant crée une grammaire de reconnaissance vocale des expressions similaires aux « Appel Anne sur sa cellule » et « James appel sur son téléphone professionnel ».</span><span class="sxs-lookup"><span data-stu-id="b0fc2-157">The following example creates a speech recognition grammar for phrases similar to "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="b0fc2-158">L’exemple utilise les deux surcharges de la <xref:System.Speech.Recognition.Choices.Add%2A> méthode pour générer la grammaire.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-158">The example uses both overloads of the <xref:System.Speech.Recognition.Choices.Add%2A> method to build the grammar.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0fc2-159">Retourne un objet <see cref="T:System.Speech.Recognition.GrammarBuilder" /> de cet objet <see cref="T:System.Speech.Recognition.Choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0fc2-159">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object from this <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0fc2-160">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> qui correspond à un objet <see cref="T:System.Speech.Recognition.Choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0fc2-160">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that matches this <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0fc2-161">Le <xref:System.Speech.Recognition.GrammarBuilder> renvoyé par cette méthode est équivalent à un par un de ces éléments.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-161">The <xref:System.Speech.Recognition.GrammarBuilder> returned by this method is equivalent to one returned by either of the following.</span></span>  
  
-   <span data-ttu-id="b0fc2-162">Appel de la <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> constructeur avec cet objet comme paramètre.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-162">Calling the <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> constructor with this object as the parameter.</span></span>  
  
-   <span data-ttu-id="b0fc2-163">À l’aide de la valeur implicite ou explicite d’effectuer un cast de cet objet pour un <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-163">Using the implicit or explicit cast of this object to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0fc2-164">L’exemple suivant crée une grammaire de reconnaissance vocale pour modifier la couleur d’arrière-plan.</span><span class="sxs-lookup"><span data-stu-id="b0fc2-164">The following example creates a speech recognition grammar for changing the background color.</span></span>  
  
```csharp  
  
private Grammar CreateColorChoice()  
{  
  
  // Create a Choices object that contains a set of alternative colors.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append(new Choices(new string[] {"Set", "Change"}));  
  gb.Append("background to");  
  gb.Append(colorChoice.ToGrammarBuilder());  
  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "modify background color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>