<Type Name="RecognizedPhrase" FullName="System.Speech.Recognition.RecognizedPhrase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71464227f9486ed513c58cfb8029f276b246b4b8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36409367" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RecognizedPhrase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RecognizedPhrase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.RecognizedPhrase" />
  <TypeSignature Language="VB.NET" Value="Public Class RecognizedPhrase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RecognizedPhrase" />
  <TypeSignature Language="F#" Value="type RecognizedPhrase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Text}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ee0c4-101">Contains detailed information, generated by the speech recognizer, about the recognized input.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee0c4-101">Contains detailed information, generated by the speech recognizer, about the recognized input.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee0c4-102">Cette classe contient des informations détaillées sur les mots et expressions traitées lors des opérations de reconnaissance vocale, notamment les suivantes :</span><span class="sxs-lookup"><span data-stu-id="ee0c4-102">This class contains detailed information about words and phrases processed during speech recognition operations, including the following:</span></span>  
  
-   <span data-ttu-id="ee0c4-103">Le <xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A> références de propriété le <xref:System.Speech.Recognition.Grammar> que le module de reconnaissance est utilisé pour identifier l’entrée.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-103">The <xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A> property references the <xref:System.Speech.Recognition.Grammar> that the recognizer used to identify the input.</span></span>  
  
-   <span data-ttu-id="ee0c4-104">Le <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> propriété contient le texte normalisé pour l’expression.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-104">The <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> property contains the normalized text for the phrase.</span></span>  
  
-   <span data-ttu-id="ee0c4-105">Le <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> propriété fait référence aux sémantiques informations contenues dans le résultat.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-105">The <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property references the semantic information contained in the result.</span></span> <span data-ttu-id="ee0c4-106">Les informations de sémantique sont un dictionnaire de noms de clé et les données sémantiques associées.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-106">The semantic information is a dictionary of the key names and associated semantic data.</span></span>  
  
-   <span data-ttu-id="ee0c4-107">Le <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> propriété contient une collection ordonnée de <xref:System.Speech.Recognition.RecognizedWordUnit> les objets qui représentent chacune reconnu word dans l’entrée.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-107">The <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property contains an ordered collection of <xref:System.Speech.Recognition.RecognizedWordUnit> objects that represent each recognized word in the input.</span></span> <span data-ttu-id="ee0c4-108">Chaque unité de word contient le format d’affichage, le format lexicale et informations de prononciation du mot correspondant.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-108">Each word unit contains display format, lexical format, and pronunciation information for the corresponding word.</span></span>  
  
-   <span data-ttu-id="ee0c4-109">Le <xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A> propriété contient des informations sur la substitution de mot spécialisé.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-109">The <xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A> property contains information about specialized word substitution.</span></span>  
  
-   <span data-ttu-id="ee0c4-110">Le <xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A> et <xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A> propriétés contiennent des informations sur les variantes de reconnaissance qui ont la prononciation identiques ou similaire.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-110">The <xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A> and <xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A> properties contain information about recognition alternates that have the same or similar pronunciation.</span></span>  
  
-   <span data-ttu-id="ee0c4-111">La valeur de la <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> propriété indique le degré de certitude, attribué par le module de reconnaissance vocale, qu’une expression reconnue correspond à l’entrée.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-111">The value of the <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> property  indicates the degree of certainty, assigned by the speech recognizer, that a recognized phrase matches the input.</span></span>  
  
 <span data-ttu-id="ee0c4-112">Le module de reconnaissance vocale retourne les résultats de la reconnaissance dans un <xref:System.Speech.Recognition.RecognitionResult> objet qui hérite de <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-112">The speech recognizer returns recognition results in a <xref:System.Speech.Recognition.RecognitionResult> object, which inherits from <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span> <span data-ttu-id="ee0c4-113">Le résultat de la reconnaissance <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> propriété contient une collection ordonnée de <xref:System.Speech.Recognition.RecognizedPhrase> objets, chacun d’eux est une correspondance possible pour l’entrée dans le module de reconnaissance.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-113">The recognition result <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property contains an ordered collection of <xref:System.Speech.Recognition.RecognizedPhrase> objects, each of which is a possible match for the input to the recognizer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee0c4-114">L’exemple suivant montre un gestionnaire pour un <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType>, ou <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> événements et des informations liées à la <xref:System.Speech.Recognition.RecognitionResult> objet.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-114">The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event and some of the information associated with the <xref:System.Speech.Recognition.RecognitionResult> object.</span></span> <span data-ttu-id="ee0c4-115">La classe <xref:System.Speech.Recognition.RecognitionResult> dérive de la classe <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-115">The <xref:System.Speech.Recognition.RecognitionResult> class derives from the <xref:System.Speech.Recognition.RecognizedPhrase> class.</span></span>  
  
```csharp  
void SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  // Add event handler code here.  
  
  // The following code illustrates some of the information available  
  // in the recognition result.  
  Console.WriteLine("Recognition result summary:");  
  Console.WriteLine(  
    "  Recognized phrase: {0}\n" +   
    "  Confidence score {1}\n" +   
    "  Grammar used: {2}\n",   
    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  
  
  // Display the semantic values in the recognition result.  
  Console.WriteLine("  Semantic results:");  
  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  
  {  
    Console.WriteLine("    The {0} city is {1}",  
      child.Key, child.Value.Value ?? "null");  
  }  
  Console.WriteLine();  
  
  // Display information about the words in the recognition result.  
  Console.WriteLine("  Word summary: ");  
  foreach (RecognizedWordUnit word in e.Result.Words)  
  {  
    Console.WriteLine(  
      "    Lexical form ({1})" +  
      " Pronunciation ({0})" +  
      " Display form ({2})",  
      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  
  }  
  
  // Display information about the audio in the recognition result.  
  Console.WriteLine("  Input audio summary:\n" +  
    "    Candidate Phrase at:       {0} mSec\n" +  
    "    Phrase Length:             {1} mSec\n" +  
    "    Input State Time:          {2}\n" +  
    "    Input Format:              {3}\n",  
    e.Result.Audio.AudioPosition,  
    e.Result.Audio.Duration,  
    e.Result.Audio.StartTime,  
    e.Result.Audio.Format.EncodingFormat);  
  
  // Display information about the alternate recognitions in the recognition result.  
  Console.WriteLine("  Alternate phrase collection:");  
  foreach (RecognizedPhrase phrase in e.Result.Alternates)  
  {  
    Console.WriteLine("    Phrase: " + phrase.Text);  
    Console.WriteLine("    Confidence score: " + phrase.Confidence);  
  }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
    <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
  </Docs>
  <Members>
    <Member MemberName="Confidence">
      <MemberSignature Language="C#" Value="public float Confidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Confidence" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Confidence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Confidence As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Confidence { float get(); };" />
      <MemberSignature Language="F#" Value="member this.Confidence : single" Usage="System.Speech.Recognition.RecognizedPhrase.Confidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee0c4-116">Gets a value, assigned by the recognizer, that represents the likelihood that a <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> matches a given input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-116">Gets a value, assigned by the recognizer, that represents the likelihood that a <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> matches a given input.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee0c4-117">Mesure relative de la certitude de la reconnaissance correcte d'une phrase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-117">A relative measure of the certainty of correct recognition of a phrase.</span>
          </span>
          <span data-ttu-id="ee0c4-118">La valeur va de 0,0 à 1,0, correspondant respectivement à la confiance faible et élevée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-118">The value is from 0.0 to 1.0, for low to high confidence, respectively.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee0c4-119">Scores de confiance n’indiquent pas la probabilité absolue qu’une expression a été correctement reconnue.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-119">Confidence scores do not indicate the absolute likelihood that a phrase was recognized correctly.</span></span> <span data-ttu-id="ee0c4-120">Au lieu de cela, les scores de confiance fournissent un mécanisme pour comparer la précision relative de plusieurs variantes de reconnaissance pour une entrée donnée.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-120">Instead, confidence scores provide a mechanism for comparing the relative accuracy of multiple recognition alternates for a given input.</span></span> <span data-ttu-id="ee0c4-121">Cela facilite le retour du résultat de la reconnaissance plus précis.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-121">This facilitates returning the most accurate recognition result.</span></span> <span data-ttu-id="ee0c4-122">Par exemple, si une expression reconnue a un score de confiance de 0,8, cela ne signifie pas que l’expression a un 80 % de chances d’être mise en correspondance pour l’entrée appropriée.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-122">For example, if a recognized phrase has a confidence score of 0.8, this does not mean that the phrase has an 80% chance of being the correct match for the input.</span></span>  <span data-ttu-id="ee0c4-123">Cela signifie que l’expression est plus susceptible d’être mise en correspondance appropriée pour l’entrée à d’autres résultats que vous avez confiance scores inférieure à 0,8.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-123">It means that the phrase is more likely to be the correct match for the input than other results that have confidence scores less than 0.8.</span></span>  
  
 <span data-ttu-id="ee0c4-124">Un score de confiance sur son propre n’est pas explicite sauf si vous avez d’autres résultats à comparer à partir de la même opération de reconnaissance ou à partir de la reconnaissance précédente de la même entrée.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-124">A confidence score on its own is not meaningful unless you have alternative results to compare against, either from the same recognition operation or from previous recognitions of the same input.</span></span> <span data-ttu-id="ee0c4-125">Les valeurs sont utilisées pour classer autre candidat expressions retournées par le <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> propriété <xref:System.Speech.Recognition.RecognitionResult> objets.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-125">The values are used to rank alternative candidate phrases returned by the <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property on <xref:System.Speech.Recognition.RecognitionResult> objects.</span></span>  
  
 <span data-ttu-id="ee0c4-126">Les valeurs de confiance sont relatif et uniques pour chaque moteur de reconnaissance.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-126">Confidence values are relative and unique to each recognition engine.</span></span> <span data-ttu-id="ee0c4-127">Impossible de comparer concrètement les valeurs de confiance retournées par deux moteurs de reconnaissance différents.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-127">Confidence values returned by two different recognition engines cannot be meaningfully compared.</span></span>  
  
 <span data-ttu-id="ee0c4-128">Un moteur de reconnaissance vocale peut attribuer un score de confiance basse à l’entrée vocale pour diverses raisons, y compris interférence d’arrière-plan, inarticulate vocale, ou mots imprévus ou des séquences de word.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-128">A speech recognition engine may assign a low confidence score to spoken input for various reasons, including background interference, inarticulate speech, or unanticipated words or word sequences.</span></span> <span data-ttu-id="ee0c4-129">Si votre application utilise un <xref:System.Speech.Recognition.SpeechRecognitionEngine> instance, vous pouvez modifier le niveau de confiance à quels vocale les entrée est acceptée ou rejetée avec l’un de le <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-129">If your application is using a <xref:System.Speech.Recognition.SpeechRecognitionEngine> instance, you can modify the confidence level at which speech input is accepted or rejected with one of the <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> methods.</span></span> <span data-ttu-id="ee0c4-130">Seuils de confiance pour le module de reconnaissance partagé, géré par <xref:System.Speech.Recognition.SpeechRecognizer>, sont associés à un profil utilisateur et stocké dans le Registre Windows.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-130">Confidence thresholds for the shared recognizer, managed by <xref:System.Speech.Recognition.SpeechRecognizer>, are associated with a user profile and stored in the Windows registry.</span></span> <span data-ttu-id="ee0c4-131">Les applications ne doivent pas écrire de modifications dans le Registre pour les propriétés d’un module de reconnaissance partagé.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-131">Applications should not write changes to the registry for the properties of the shared recognizer.</span></span>  
  
 <span data-ttu-id="ee0c4-132">Le <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> propriété de la <xref:System.Speech.Recognition.RecognitionResult> objet contient une collection ordonnée de <xref:System.Speech.Recognition.RecognizedPhrase> objets, chacun d’eux est une correspondance possible pour l’entrée dans le module de reconnaissance.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-132">The <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property of the <xref:System.Speech.Recognition.RecognitionResult> object contains an ordered collection of <xref:System.Speech.Recognition.RecognizedPhrase> objects, each of which is a possible match for the input to the recognizer.</span></span> <span data-ttu-id="ee0c4-133">Les variantes sont triés du plus élevé de confiance plus faible.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-133">The alternates are ordered from highest to lowest confidence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee0c4-134">L’exemple suivant montre un gestionnaire pour un <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType>, ou <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-134">The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="ee0c4-135">L’exemple montre les informations associées à la <xref:System.Speech.Recognition.RecognitionResult> objet, certains d'entre eux est dérivée de <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-135">The example shows information associated with the <xref:System.Speech.Recognition.RecognitionResult> object, some of which is derived from <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span> <span data-ttu-id="ee0c4-136">Le gestionnaire affiche les scores de confiance pour une expression reconnue, ainsi que pour des remplaçants de reconnaissance.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-136">The handler displays confidence scores for a recognized phrase as well as for recognition alternates.</span></span>  
  
```csharp  
void SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  // Add event handler code here.  
  
  // The following code illustrates some of the information available  
  // in the recognition result.  
  Console.WriteLine("Recognition result summary:");  
  Console.WriteLine(  
    "  Recognized phrase: {0}\n" +   
    "  Confidence score {1}\n" +   
    "  Grammar used: {2}\n",   
    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  
  
  // Display the semantic values in the recognition result.  
  Console.WriteLine("  Semantic results:");  
  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  
  {  
    Console.WriteLine("    The {0} city is {1}",  
      child.Key, child.Value.Value ?? "null");  
  }  
  Console.WriteLine();  
  
  // Display information about the words in the recognition result.  
  Console.WriteLine("  Word summary: ");  
  foreach (RecognizedWordUnit word in e.Result.Words)  
  {  
    Console.WriteLine(  
      "    Lexical form ({1})" +  
      " Pronunciation ({0})" +  
      " Display form ({2})",  
      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  
  }  
  
  // Display information about the audio in the recognition result.  
  Console.WriteLine("  Input audio summary:\n" +  
    "    Candidate Phrase at:       {0} mSec\n" +  
    "    Phrase Length:             {1} mSec\n" +  
    "    Input State Time:          {2}\n" +  
    "    Input Format:              {3}\n",  
    e.Result.Audio.AudioPosition,  
    e.Result.Audio.Duration,  
    e.Result.Audio.StartTime,  
    e.Result.Audio.Format.EncodingFormat);  
  
  // Display information about the alternate recognitions in the recognition result.  
  Console.WriteLine("  Alternate phrase collection:");  
  foreach (RecognizedPhrase phrase in e.Result.Alternates)  
  {  
    Console.WriteLine("    Phrase: " + phrase.Text);  
    Console.WriteLine("    Confidence score: " + phrase.Confidence);  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
        <altmember cref="P:System.Speech.Recognition.RecognitionResult.Alternates" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="ConstructSmlFromSemantics">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.IXPathNavigable ConstructSmlFromSemantics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XPath.IXPathNavigable ConstructSmlFromSemantics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics" />
      <MemberSignature Language="VB.NET" Value="Public Function ConstructSmlFromSemantics () As IXPathNavigable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XPath::IXPathNavigable ^ ConstructSmlFromSemantics();" />
      <MemberSignature Language="F#" Value="member this.ConstructSmlFromSemantics : unit -&gt; System.Xml.XPath.IXPathNavigable" Usage="recognizedPhrase.ConstructSmlFromSemantics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.IXPathNavigable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee0c4-137">Returns a semantic markup language (SML) document for the semantic information in the <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-137">Returns a semantic markup language (SML) document for the semantic information in the <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee0c4-138">Returns an SML description of the semantics of the <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> as an [XPath](http://msdn.microsoft.com/library/ms256115.aspx) navigable object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-138">Returns an SML description of the semantics of the <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> as an [XPath](http://msdn.microsoft.com/library/ms256115.aspx) navigable object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee0c4-139">Pour plus d’informations sur le langage de balisage sémantique (SML), consultez le [référence de langage de balisage sémantique](http://msdn.microsoft.com/library/f9d83443-2cac-49bc-a447-210feda62f5d).</span><span class="sxs-lookup"><span data-stu-id="ee0c4-139">For information about the semantic markup language (SML), see the [Semantic Markup Language Reference](http://msdn.microsoft.com/library/f9d83443-2cac-49bc-a447-210feda62f5d).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee0c4-140">Dans l’exemple suivant, une méthode retourne une chaîne qui contient l’instruction SML de la sémantique d’une expression reconnue.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-140">In the following example, a method returns a string that contains the SML for the semantics of a recognized phrase.</span></span>  
  
```  
private string GetSemanticsSML(RecognizedPhrase result)  
{  
  if (result.Semantics.Count > 0)  
  {  
    return result.ConstructSmlFromSemantics().CreateNavigator().OuterXml;  
  }  
  else  
  {  
    return null;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Grammar">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.Grammar Grammar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.Grammar Grammar" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Grammar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Grammar As Grammar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::Grammar ^ Grammar { System::Speech::Recognition::Grammar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Grammar : System.Speech.Recognition.Grammar" Usage="System.Speech.Recognition.RecognizedPhrase.Grammar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.Grammar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee0c4-141">Gets the <see cref="T:System.Speech.Recognition.Grammar" /> that the speech recognizer used to return the <see cref="T:System.Speech.Recognition.RecognizedPhrase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-141">Gets the <see cref="T:System.Speech.Recognition.Grammar" /> that the speech recognizer used to return the <see cref="T:System.Speech.Recognition.RecognizedPhrase" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee0c4-142">Objet de grammaire que ce module de reconnaissance vocale a utilisé pour identifier l'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-142">The grammar object that the speech recognizer used to identify the input.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="HomophoneGroupId">
      <MemberSignature Language="C#" Value="public int HomophoneGroupId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HomophoneGroupId" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HomophoneGroupId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HomophoneGroupId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HomophoneGroupId : int" Usage="System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee0c4-143">Gets the identifier for the homophone group for the phrase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-143">Gets the identifier for the homophone group for the phrase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee0c4-144">Identificateur du groupe d'homophones de l'expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-144">The identifier for the homophone group for the phrase.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee0c4-145">Le module de reconnaissance vocale affecte un identificateur de groupe à toutes les variantes de reconnaissance qui ont la même prononciation.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-145">The speech recognizer assigns a group identifier to all recognition alternates that have the same pronunciation.</span></span> <span data-ttu-id="ee0c4-146">Pour chaque solution de remplacement qui a une prononciation unique, le module de reconnaissance crée un groupe d’homophones.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-146">For each alternate that has a unique pronunciation, the recognizer creates a homophone group.</span></span> <span data-ttu-id="ee0c4-147">Le module de reconnaissance vocale génère le nouveau groupe d’identificateurs pour chaque opération de reconnaissance, et les identificateurs ne peut pas servir à comparer les variantes de généré à partir d’opérations de reconnaissance distinct.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-147">The speech recognizer generates new group of identifiers for each recognition operation, and the identifiers cannot be used to compare alternates from generated from separate recognition operations.</span></span>  
  
 <span data-ttu-id="ee0c4-148">Par exemple, pour un résultat de reconnaissance qui contenait les variantes de « l’histoire », « fin » et « la PEA », les deux premières suppléants pourrait appartenir à un groupe d’homophones et la dernière alternative est le seul membre d’un deuxième groupe d’homophones.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-148">For example, for a recognition result that contained the alternates "the tale", "the tail", and "the ale", the first two alternates would belong to one homophone group, and the last alternate would be the single member of a second homophone group.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.RecognitionResult.Alternates" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Homophones" />
      </Docs>
    </Member>
    <Member MemberName="Homophones">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedPhrase&gt; Homophones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Recognition.RecognizedPhrase&gt; Homophones" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Homophones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Homophones As ReadOnlyCollection(Of RecognizedPhrase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Recognition::RecognizedPhrase ^&gt; ^ Homophones { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Recognition::RecognizedPhrase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Homophones : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedPhrase&gt;" Usage="System.Speech.Recognition.RecognizedPhrase.Homophones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedPhrase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee0c4-149">Gets a collection of the recognition alternates that have the same pronunciation as this recognized phrase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-149">Gets a collection of the recognition alternates that have the same pronunciation as this recognized phrase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee0c4-150">Collection de remplaçants de reconnaissance en lecture seule qui ont la même prononciation que cette expression reconnue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-150">A read-only collection of the recognition alternates that have the same pronunciation as this recognized phrase.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee0c4-151">Cette propriété retourne tous les autres remplaçants de reconnaissance qui ont la même prononciation que cette expression reconnue.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-151">This property returns all other recognition alternates that have the same pronunciation as this recognized phrase.</span></span>  
  
 <span data-ttu-id="ee0c4-152">Par exemple, pour un résultat de reconnaissance qui contenait les variantes, « l’histoire » et « fin », la collection homophones pour la première alternative, « exemple », contient la deuxième phrase, « fin ».</span><span class="sxs-lookup"><span data-stu-id="ee0c4-152">For example, for a recognition result that contained the alternates, "the tale" and "the tail", the homophones collection for the first alternate, "the tale", would contain the second phrase, "the tail".</span></span> <span data-ttu-id="ee0c4-153">La collection homophones pour la deuxième alternative, « Queue », contient la première phrase, « l’histoire ».</span><span class="sxs-lookup"><span data-stu-id="ee0c4-153">The homophones collection for the second alternate, "the tail", would contain the first phrase, "the tale".</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.RecognitionResult.Alternates" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
      </Docs>
    </Member>
    <Member MemberName="ReplacementWordUnits">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.ReplacementText&gt; ReplacementWordUnits { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Speech.Recognition.ReplacementText&gt; ReplacementWordUnits" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReplacementWordUnits As Collection(Of ReplacementText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::ReplacementText ^&gt; ^ ReplacementWordUnits { System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::ReplacementText ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplacementWordUnits : System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.ReplacementText&gt;" Usage="System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.ReplacementText&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee0c4-154">Gets information about the text that the speech recognizer changed as part of speech-to-text normalization.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-154">Gets information about the text that the speech recognizer changed as part of speech-to-text normalization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee0c4-155">Collection d'objets <see cref="T:System.Speech.Recognition.ReplacementText" /> qui décrivent les sections de texte que le module de reconnaissance vocale a remplacées quand il a normalisé l'entrée reconnue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-155">A collection of <see cref="T:System.Speech.Recognition.ReplacementText" /> objects that describe sections of text that the speech recognizer replaced when it normalized the recognized input.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee0c4-156">Dans le cadre du processus de reconnaissance vocale, la reconnaissance vocale normalise l’entrée reconnue dans un formulaire d’affichage.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-156">As part of the speech recognition process, the speech recognizer normalizes the recognized input into a display form.</span></span>  
  
 <span data-ttu-id="ee0c4-157">Par exemple, l’entrée prononcée, « vingt cinq dollars », génère un résultat de reconnaissance où le <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> propriété contient les mots « 20 », « 5 » et « dollars » et le <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> propriété contient la phrase « 25,00$ ».</span><span class="sxs-lookup"><span data-stu-id="ee0c4-157">For example, the spoken input, "twenty five dollars", generates a recognition result where the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property contains the words, "twenty", "five", and "dollars", and the <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> property contains the phrase, "$25.00".</span></span> <span data-ttu-id="ee0c4-158">Pour plus d’informations sur la normalisation du texte, consultez la <xref:System.Speech.Recognition.ReplacementText> classe.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-158">For more information about text normalization, see the <xref:System.Speech.Recognition.ReplacementText> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
        <altmember cref="T:System.Speech.Recognition.ReplacementText" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Text" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </Docs>
    </Member>
    <Member MemberName="Semantics">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SemanticValue Semantics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.SemanticValue Semantics" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Semantics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Semantics As SemanticValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SemanticValue ^ Semantics { System::Speech::Recognition::SemanticValue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Semantics : System.Speech.Recognition.SemanticValue" Usage="System.Speech.Recognition.RecognizedPhrase.Semantics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SemanticValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee0c4-159">Gets the semantic information that is associated with the recognized phrase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-159">Gets the semantic information that is associated with the recognized phrase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee0c4-160">Informations de sémantique associées à l'expression reconnue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-160">The semantic information associated with the recognized phrase.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee0c4-161">Une grammaire de reconnaissance vocale peut inclure des informations sémantiques.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-161">A speech recognition grammar can include semantic information.</span></span> <span data-ttu-id="ee0c4-162">Lorsqu’un module de reconnaissance vocale génère un résultat de reconnaissance pour ce type d’une grammaire, les informations de sémantique peuvent être incluses dans le résultat de la reconnaissance, selon les règles de la grammaire et l’entrée dans le module de reconnaissance.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-162">When a speech recognizer generates a recognition result for such a grammar, the semantic information might be included in the recognition result, according to the rules of the grammar and the input to the recognizer.</span></span> <span data-ttu-id="ee0c4-163">Pour plus d’informations sur les informations de sémantiques, consultez [présentation sémantique des résultats](http://msdn.microsoft.com/library/2a9dbd8b-cf6d-42cd-bbb9-ca0b3e534005) et <xref:System.Speech.Recognition.SemanticResultKey> et <xref:System.Speech.Recognition.SemanticResultValue> classes.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-163">For more information about semantic information, see [Understanding Semantic Results](http://msdn.microsoft.com/library/2a9dbd8b-cf6d-42cd-bbb9-ca0b3e534005) and the <xref:System.Speech.Recognition.SemanticResultKey> and <xref:System.Speech.Recognition.SemanticResultValue> classes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee0c4-164">L’exemple suivant définit une méthode qui obtient des informations de sémantique spécifiques à partir d’une expression reconnue.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-164">The following example defines a method that gets specific semantic information from a recognized phrase.</span></span> <span data-ttu-id="ee0c4-165">Lorsque cette méthode est retournée, elle contient la valeur de la clé sémantique, ou null si la valeur n’a pas été extrait.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-165">When this method returns, it contains the value for the semantic key, or null if the value was not retrieved.</span></span> <span data-ttu-id="ee0c4-166">Cette méthode vérifie uniquement pour les clés de niveau supérieur.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-166">This method checks only for top-level keys.</span></span> <span data-ttu-id="ee0c4-167">Étant donné que les informations de sémantique sont contenues dans une arborescence de valeurs, les clés de niveau inférieur doivent être accessible via la valeur retournée de sémantique.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-167">Since the semantic information is contained in a tree of values, lower-level keys must be accessed through the returned semantic value.</span></span>  
  
```  
static bool TryGetSemanticValue(  
      RecognizedPhrase phrase, string key, out SemanticValue value)  
{  
  value = null;  
  bool found = phrase.Semantics.ContainsKey(key);  
  if (found)  
  {  
    value = phrase.Semantics[key];  
  }  
  
  return found;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
        <altmember cref="T:System.Speech.Recognition.SemanticValue" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Speech.Recognition.RecognizedPhrase.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee0c4-168">Gets the normalized text generated by a speech recognizer from recognized input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-168">Gets the normalized text generated by a speech recognizer from recognized input.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee0c4-169">Texte normalisé généré par un module de reconnaissance vocale à partir de l'entrée reconnue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-169">The normalized text generated by a speech recognizer from recognized input.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee0c4-170">Dans le cadre du processus de reconnaissance vocale, la reconnaissance vocale effectue la normalisation de reconnaissance vocale de texte de l’entrée reconnue dans un formulaire d’affichage.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-170">As part of the speech recognition process, the speech recognizer performs speech-to-text normalization of the recognized input into a display form.</span></span>  
  
 <span data-ttu-id="ee0c4-171">Par exemple, l’entrée prononcée, « vingt cinq dollars », génère un résultat de reconnaissance où le <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> propriété contient les mots « 20 », « 5 » et « dollars » et le <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> propriété contient la phrase « 25,00$ ».</span><span class="sxs-lookup"><span data-stu-id="ee0c4-171">For example, the spoken input, "twenty five dollars", generates a recognition result where the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property contains the words, "twenty", "five", and "dollars", and the <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> property contains the phrase, "$25.00".</span></span> <span data-ttu-id="ee0c4-172">Pour plus d’informations sur la normalisation du texte, consultez <xref:System.Speech.Recognition.ReplacementText>.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-172">For more information about text normalization, see <xref:System.Speech.Recognition.ReplacementText>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </Docs>
    </Member>
    <Member MemberName="Words">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedWordUnit&gt; Words { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Recognition.RecognizedWordUnit&gt; Words" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Words As ReadOnlyCollection(Of RecognizedWordUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Recognition::RecognizedWordUnit ^&gt; ^ Words { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Recognition::RecognizedWordUnit ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Words : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedWordUnit&gt;" Usage="System.Speech.Recognition.RecognizedPhrase.Words" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedWordUnit&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee0c4-173">Gets the words generated by a speech recognizer from recognized input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-173">Gets the words generated by a speech recognizer from recognized input.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee0c4-174">Collection d'objets <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> générés par un module de reconnaissance vocale pour l'entrée reconnue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee0c4-174">The collection of <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> objects generated by a speech recognizer for recognized input.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee0c4-175">Cette propriété contient les mots produits à partir de l’entrée par le module de reconnaissance vocale avant la normalisation du module de reconnaissance vocale de texte du résultat.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-175">This property contains the words produced from the input by the speech recognizer prior to the recognizer's speech-to-text normalization of the result.</span></span>  
  
 <span data-ttu-id="ee0c4-176">Par exemple, l’entrée prononcée, « vingt cinq dollars », génère un résultat de reconnaissance où le <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> propriété contient les mots « 20 », « 5 » et « dollars » et le <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> propriété contient la phrase « 25,00$ ».</span><span class="sxs-lookup"><span data-stu-id="ee0c4-176">For example, the spoken input, "twenty five dollars", generates a recognition result where the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property contains the words, "twenty", "five", and "dollars", and the <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> property contains the phrase, "$25.00".</span></span> <span data-ttu-id="ee0c4-177">Pour plus d’informations sur la normalisation du texte, consultez <xref:System.Speech.Recognition.ReplacementText>.</span><span class="sxs-lookup"><span data-stu-id="ee0c4-177">For more information about text normalization, see <xref:System.Speech.Recognition.ReplacementText>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Text" />
      </Docs>
    </Member>
  </Members>
</Type>