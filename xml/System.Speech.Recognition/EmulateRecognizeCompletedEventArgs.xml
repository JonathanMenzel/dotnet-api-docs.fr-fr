<Type Name="EmulateRecognizeCompletedEventArgs" FullName="System.Speech.Recognition.EmulateRecognizeCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89c84a92a844730eeb3202b0c06e9aac5e358fb1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36608624" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EmulateRecognizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EmulateRecognizeCompletedEventArgs extends System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class EmulateRecognizeCompletedEventArgs&#xA;Inherits AsyncCompletedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmulateRecognizeCompletedEventArgs : System::ComponentModel::AsyncCompletedEventArgs" />
  <TypeSignature Language="F#" Value="type EmulateRecognizeCompletedEventArgs = class&#xA;    inherit AsyncCompletedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.AsyncCompletedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit les données pour l'événement <see langword="EmulateRecognizeCompleted" /> des classes <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> et <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une instance de <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> est créé lorsque le <xref:System.Speech.Recognition.SpeechRecognitionEngine> objet déclenche le <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> événement. Pour obtenir plus d’informations sur le résultat de la reconnaissance, accédez à la <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> propriété dans le gestionnaire pour l’événement.  
  
 Émulation est le processus par lequel le texte, au lieu de l’audio, est l’entrée pour un moteur de reconnaissance vocale. Pour ignorer les entrées audio pour un <xref:System.Speech.Recognition.SpeechRecognitionEngine> l’objet au cours de l’émulation, utilisez le <xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A> (méthode).  
  
 Si le moteur de reconnaissance vocale rencontre une exception pendant l’opération de reconnaissance, le <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> est définie sur l’exception et la <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> est définie sur `null`.  
  
 <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> dérive de <xref:System.ComponentModel.AsyncCompletedEventArgs>.  
  
   
  
## Examples  
 L’exemple suivant ajoute un gestionnaire d’événements pour le <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> événement à un <xref:System.Speech.Recognition.SpeechRecognitionEngine>. Le gestionnaire obtient le texte reconnu à partir de la <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> propriété.  
  
```csharp  
  
private SpeechRecognitionEngine sre;  
  
// Initialize the speech recognition engine.   
private void Initialize()  
{  
  sre = new SpeechRecognitionEngine();  
  
  // Add a handler for the EmulateRecognizeCompleted event.  
  sre.EmulateRecognizeCompleted += new EventHandler<EmulateRecognizeCompletedEventArgs>(sre_EmulateRecognizeCompleted);  
  
  // Add other initialization code here.  
}  
  
// Handle the EmulateRecognizeCompleted event.   
void sre_EmulateRecognizeCompleted(object sender, EmulateRecognizeCompletedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  string phrase = e.Result.Text;  
  
  // Add event handler code here.  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted" />
  </Docs>
  <Members>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.RecognitionResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.RecognitionResult Result" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As RecognitionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::RecognitionResult ^ Result { System::Speech::Recognition::RecognitionResult ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : System.Speech.Recognition.RecognitionResult" Usage="System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.RecognitionResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les résultats de la reconnaissance émulée.</summary>
        <value>Informations détaillées à propos des résultats de la reconnaissance, ou <see langword="null" /> si une erreur s'est produite.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Speech.Recognition.RecognitionResult> objet dérive <xref:System.Speech.Recognition.RecognizedPhrase> et contient des informations complètes sur une expression retournée par une opération de reconnaissance. Vous pouvez obtenir une liste de tous les candidats de reconnaissance de le <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> propriété.  
  
 Si le module de reconnaissance rencontre une exception pendant l’opération de reconnaissance, le <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> est définie sur l’exception et la <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> est définie sur `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted" />
        <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>