<Type Name="GrammarBuilder" FullName="System.Speech.Recognition.GrammarBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5180154fc823f5d48fbe9b004e9bbaeb45758265" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39988869" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GrammarBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GrammarBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.GrammarBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class GrammarBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class GrammarBuilder" />
  <TypeSignature Language="F#" Value="type GrammarBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3e8da-101">Fournit un mécanisme pour la génération par programmation des contraintes d'une syntaxe de reconnaissance vocale.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3e8da-101">Provides a mechanism for programmatically building the constraints for a speech recognition grammar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-102">Syntaxe de reconnaissance vocale est généralement créés dans le format XML défini par le [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761).</span><span class="sxs-lookup"><span data-stu-id="3e8da-102">Speech recognition grammars are commonly authored in the XML format defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761).</span></span> <span data-ttu-id="3e8da-103">Si vous êtes familiarisé avec SRGS mais qui souhaitent générer des grammaires par programme, vous pouvez utiliser le <xref:System.Speech.Recognition.SrgsGrammar> espace de noms, dont les membres correspondent étroitement aux éléments et attributs définis par SRGS.</span><span class="sxs-lookup"><span data-stu-id="3e8da-103">If you are familiar with SRGS but want to generate the grammars programmatically, you can use the <xref:System.Speech.Recognition.SrgsGrammar> namespace, whose members correspond closely to the elements and attributes defined by SRGS.</span></span> <span data-ttu-id="3e8da-104">Si vous n’êtes pas familiarisé avec SRGS ou si vous souhaitez une approche légère et par programmation à la création de grammaires avec laquelle vous pouvez effectuer efficacement les nombreux scénarios courants ; Vous pouvez utiliser la <xref:System.Speech.Recognition.GrammarBuilder> et <xref:System.Speech.Recognition.Choices> classes.</span><span class="sxs-lookup"><span data-stu-id="3e8da-104">If you are unfamiliar with SRGS, or you want a lightweight, programmatic approach to authoring grammars with which you can efficiently accomplish many common scenarios; you can use the <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> classes.</span></span>  
  
 <span data-ttu-id="3e8da-105">Utilisez <xref:System.Speech.Recognition.GrammarBuilder> composé d’objets pour générer une arborescence hiérarchique de <xref:System.Speech.Recognition.Choices> objets qui contiennent des expressions autre entrecoupé de préambule et d’expressions de post-amble sur chaque nœud et amorcée avec des valeurs sémantiques qui communiquent la signification du application.</span><span class="sxs-lookup"><span data-stu-id="3e8da-105">Use <xref:System.Speech.Recognition.GrammarBuilder> objects to build a hierarchical tree composed of <xref:System.Speech.Recognition.Choices> objects that contain alternate phrases, interspersed with preamble and post-amble phrases at each node, and seeded with semantic values that convey  meaning back to the application.</span></span>  
  
 <span data-ttu-id="3e8da-106">Pour utiliser un <xref:System.Speech.Recognition.GrammarBuilder> pour créer un <xref:System.Speech.Recognition.Grammar> d’objet, procédez comme suit.</span><span class="sxs-lookup"><span data-stu-id="3e8da-106">To use a <xref:System.Speech.Recognition.GrammarBuilder> to create a <xref:System.Speech.Recognition.Grammar> object, use the following steps.</span></span>  
  
1.  <span data-ttu-id="3e8da-107">Créez un objet <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-107">Create a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
2.  <span data-ttu-id="3e8da-108">Ajouter des contraintes à la <xref:System.Speech.Recognition.GrammarBuilder>, tel que <xref:System.String> objets, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>et d’autres <xref:System.Speech.Recognition.GrammarBuilder> objets qui définissent les contraintes de la grammaire.</span><span class="sxs-lookup"><span data-stu-id="3e8da-108">Append constraints to the <xref:System.Speech.Recognition.GrammarBuilder>, such as <xref:System.String> objects, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>, and other <xref:System.Speech.Recognition.GrammarBuilder> objects that define the constraints for the grammar.</span></span>  
  
3.  <span data-ttu-id="3e8da-109">Utilisez une de la <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructeurs pour créer un <xref:System.Speech.Recognition.Grammar> objet à partir de la fin <xref:System.Speech.Recognition.GrammarBuilder> grammaire.</span><span class="sxs-lookup"><span data-stu-id="3e8da-109">Use one of the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructors to create a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder> grammar.</span></span>  
  
 <span data-ttu-id="3e8da-110">Création avec <xref:System.Speech.Recognition.GrammarBuilder> est optimale pour les grammaires qui ont une seule règle contenant des listes, ou peut-être les listes de listes.</span><span class="sxs-lookup"><span data-stu-id="3e8da-110">Authoring with <xref:System.Speech.Recognition.GrammarBuilder> is best suited to grammars that have a single rule containing lists, or perhaps lists of lists.</span></span> <span data-ttu-id="3e8da-111">Pour générer par programmation les grammaires qui ont plusieurs règles, ou qui ont besoin de créer des références de règle interne, utilisez les classes de le <xref:System.Speech.Recognition.SrgsGrammar> espace de noms.</span><span class="sxs-lookup"><span data-stu-id="3e8da-111">To programmatically build grammars that have multiple rules, or that need to make internal rule references, use the classes of the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="3e8da-112">Instances de <xref:System.Speech.Recognition.GrammarBuilder> peut également être obtenu par les conversions implicites à partir de certaines autres classes ou en combinant un <xref:System.Speech.Recognition.GrammarBuilder> avec un second objet qui contient des contraintes pour une grammaire...</span><span class="sxs-lookup"><span data-stu-id="3e8da-112">Instances of <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained by implicit conversions from certain other classes or by combining a  <xref:System.Speech.Recognition.GrammarBuilder> with a second object that contains constraints for a grammar..</span></span> <span data-ttu-id="3e8da-113">Pour plus d’informations, consultez le <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> et <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> opérateurs et le <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="3e8da-113">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators and the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="3e8da-114">Pour ajouter des règles à un existant <xref:System.Speech.Recognition.GrammarBuilder>, utilisez le <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, et <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="3e8da-114">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-115">Le module de reconnaissance vocale peut lever une exception lors de l’utilisation d’une syntaxe de reconnaissance vocale qui contient les éléments sémantiques en double portant le même nom de clé ou plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises de la valeur du même élément sémantique.</span><span class="sxs-lookup"><span data-stu-id="3e8da-115">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="3e8da-116">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultKey à l’aide et les objets SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-116">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3e8da-117">Pour faciliter le débogage, le <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> propriété retourne l’état actuel de la <xref:System.Speech.Recognition.GrammarBuilder> sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="3e8da-117">To help with debugging, the <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> property returns the current status of the <xref:System.Speech.Recognition.GrammarBuilder> as a string.</span></span>  
  
 <span data-ttu-id="3e8da-118">Pour plus d’informations sur la création et à l’aide de la syntaxe de reconnaissance vocale, consultez [la reconnaissance vocale](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) et [création de grammaires de GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="3e8da-118">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-119">L’exemple suivant utilise <xref:System.Speech.Recognition.GrammarBuilder> et <xref:System.Speech.Recognition.Choices> objets pour construire une grammaire qui puisse reconnaître une des deux expressions, « faire arrière-plan *colorChoice*» ou « en arrière-plan la valeur *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3e8da-119">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3e8da-120">L’exemple utilise un <xref:System.Speech.Recognition.Choices> objet pour créer une liste de valeurs acceptables pour *colorChoice* à partir d’un tableau de <xref:System.String> objets.</span><span class="sxs-lookup"><span data-stu-id="3e8da-120">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="3e8da-121">Un <xref:System.Speech.Recognition.Choices> objet est analogue à la `one-of` élément dans la spécification SRGS et contient un ensemble d’autres expressions, qui peut être reconnu lors de la lecture.</span><span class="sxs-lookup"><span data-stu-id="3e8da-121">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="3e8da-122">L’exemple utilise également un <xref:System.Speech.Recognition.Choices> objet pour regrouper un tableau de deux <xref:System.Speech.Recognition.GrammarBuilder> des objets dans une paire d’expressions autres que la grammaire résultante peut reconnaître.</span><span class="sxs-lookup"><span data-stu-id="3e8da-122">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="3e8da-123">Autres mots ou expressions sont un composant de la plupart des grammaires et le <xref:System.Speech.Recognition.Choices> objet fournit cette fonctionnalité pour les grammaires construit avec <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-123">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3e8da-124">L’exemple enfin crée un <xref:System.Speech.Recognition.Grammar> de l’objet à partir d’un <xref:System.Speech.Recognition.GrammarBuilder> construit à partir d’un <xref:System.Speech.Recognition.Choices> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-124">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Choices" />
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e8da-125">Initialise une nouvelle instance de la classe <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-125">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-126">Instances de cette classe peuvent également être obtenus par les conversions implicites à partir d’autres classes ou en combinant un <xref:System.Speech.Recognition.GrammarBuilder> objet avec un deuxième objet à partir d’un nouveau <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-126">Instances of this class can also be obtained by implicit conversions from other classes or by combining a <xref:System.Speech.Recognition.GrammarBuilder> object with a second object to from a new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3e8da-127">Pour plus d’informations, consultez le <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> et <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="3e8da-127">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods.</span></span>  
  
 <span data-ttu-id="3e8da-128">Pour ajouter des contraintes à un existant <xref:System.Speech.Recognition.GrammarBuilder>, utilisez le <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, et <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> méthodes et le <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> opérateur.</span><span class="sxs-lookup"><span data-stu-id="3e8da-128">To add constraints to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-129">Le module de reconnaissance vocale peut lever une exception lors de l’utilisation d’une syntaxe de reconnaissance vocale qui contient les éléments sémantiques en double portant le même nom de clé ou plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises de la valeur du même élément sémantique.</span><span class="sxs-lookup"><span data-stu-id="3e8da-129">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="3e8da-130">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultKey à l’aide et les objets SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-130">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3e8da-131">Pour plus d’informations sur la création et à l’aide de la syntaxe de reconnaissance vocale, consultez [la reconnaissance vocale](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) et [création de grammaires de GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="3e8da-131">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e8da-132">Initialise une nouvelle instance vide de la classe <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-132">Initializes a new, empty instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-133">Pour ajouter des règles à un existant <xref:System.Speech.Recognition.GrammarBuilder> de l’objet, utilisez le <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, et <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> méthodes et le <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> opérateur.</span><span class="sxs-lookup"><span data-stu-id="3e8da-133">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder> object, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-134">Le module de reconnaissance vocale peut lever une exception lors de l’utilisation d’une syntaxe de reconnaissance vocale qui contient les éléments sémantiques en double portant le même nom de clé ou plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises de la valeur du même élément sémantique.</span><span class="sxs-lookup"><span data-stu-id="3e8da-134">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="3e8da-135">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultKey à l’aide et les objets SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-135">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-136">L’exemple suivant utilise <xref:System.Speech.Recognition.GrammarBuilder> et <xref:System.Speech.Recognition.Choices> objets pour construire une grammaire qui puisse reconnaître une des deux expressions, « faire arrière-plan *colorChoice*» ou « en arrière-plan la valeur *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3e8da-136">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3e8da-137">L’exemple utilise un <xref:System.Speech.Recognition.Choices> objet pour créer une liste de valeurs acceptables pour *colorChoice* à partir d’un tableau de <xref:System.String> objets.</span><span class="sxs-lookup"><span data-stu-id="3e8da-137">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="3e8da-138">Un <xref:System.Speech.Recognition.Choices> objet est analogue à la `one-of` élément dans la spécification SRGS et contient un ensemble d’autres expressions, chacun d'entre eux peut être reconnu lors de la lecture.</span><span class="sxs-lookup"><span data-stu-id="3e8da-138">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any one of which can be recognized when spoken.</span></span> <span data-ttu-id="3e8da-139">L’exemple utilise également un <xref:System.Speech.Recognition.Choices> objet pour regrouper un tableau de deux <xref:System.Speech.Recognition.GrammarBuilder> des objets dans une paire d’expressions autres que la grammaire résultante peut reconnaître.</span><span class="sxs-lookup"><span data-stu-id="3e8da-139">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="3e8da-140">Autres mots ou expressions sont un composant de la plupart des grammaires et le <xref:System.Speech.Recognition.Choices> objet fournit cette fonctionnalité pour les grammaires construit avec <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-140">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3e8da-141">L’exemple enfin crée un <xref:System.Speech.Recognition.Grammar> de l’objet à partir d’un <xref:System.Speech.Recognition.GrammarBuilder> construit à partir d’un <xref:System.Speech.Recognition.Choices> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-141">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  GrammarBuilder bothPhrases = new GrammarBuilder();  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  bothPhrases.Append(bothChoices);  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder alternateChoices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="3e8da-142">Jeu d'alternatives.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-142">The set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-143">Initialise une nouvelle instance de la classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> à partir d'un ensemble de solutions de remplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-143">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a set of alternatives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-144">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des alternatives, consultez [à l’aide de choix pour créer une syntaxe de GrammarBuilder](http://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span><span class="sxs-lookup"><span data-stu-id="3e8da-144">For more information about building a speech recognition grammar that contains alternatives, see [Using Choices to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-145">L’exemple suivant utilise <xref:System.Speech.Recognition.GrammarBuilder> et <xref:System.Speech.Recognition.Choices> objets pour construire une grammaire qui puisse reconnaître une des deux expressions, « faire arrière-plan *colorChoice*» ou « en arrière-plan la valeur *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3e8da-145">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3e8da-146">L’exemple utilise un <xref:System.Speech.Recognition.Choices> objet pour créer une liste de valeurs acceptables pour *colorChoice* à partir d’un tableau de <xref:System.String> objets.</span><span class="sxs-lookup"><span data-stu-id="3e8da-146">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="3e8da-147">Un <xref:System.Speech.Recognition.Choices> objet est analogue à la `one-of` élément dans la spécification SRGS et contient un ensemble d’autres expressions, qui peut être reconnu lors de la lecture.</span><span class="sxs-lookup"><span data-stu-id="3e8da-147">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="3e8da-148">L’exemple utilise également un <xref:System.Speech.Recognition.Choices> objet pour regrouper un tableau de deux <xref:System.Speech.Recognition.GrammarBuilder> des objets dans une paire d’expressions autres que la grammaire résultante peut reconnaître.</span><span class="sxs-lookup"><span data-stu-id="3e8da-148">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="3e8da-149">Autres mots ou expressions sont un composant de la plupart des grammaires et le <xref:System.Speech.Recognition.Choices> objet fournit cette fonctionnalité pour les grammaires construit avec <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-149">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3e8da-150">L’exemple enfin crée un <xref:System.Speech.Recognition.Grammar> de l’objet à partir d’un <xref:System.Speech.Recognition.GrammarBuilder> construit à partir d’un <xref:System.Speech.Recognition.Choices> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-150">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3e8da-151">Clé sémantique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-151">The semantic key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-152">Initialise une nouvelle instance de la classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> à partir d'une clé sémantique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-152">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-153">Lorsque vous créez un <xref:System.Speech.Recognition.GrammarBuilder> de l’instance à partir d’un <xref:System.Speech.Recognition.SemanticResultValue> de l’objet, vous ajoutez des informations sémantiques à la grammaire qui peut être retournée dans le résultat de la reconnaissance.</span><span class="sxs-lookup"><span data-stu-id="3e8da-153">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="3e8da-154">Vous pouvez accéder aux informations sémantiques dans le résultat de reconnaissance à l’aide de la <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> propriété de <xref:System.Speech.Recognition.RecognizedPhrase>, qui est disponible dans le gestionnaire pour le `SpeechRecognized` événement.</span><span class="sxs-lookup"><span data-stu-id="3e8da-154">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="3e8da-155">Si le <xref:System.Speech.Recognition.GrammarBuilder> définit un <xref:System.Speech.Recognition.SemanticResultKey>, cela peut être utilisé pour récupérer les informations de sémantique dans un résultat de reconnaissance qui est associé à la clé.</span><span class="sxs-lookup"><span data-stu-id="3e8da-155">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="3e8da-156">Consultez l’exemple de <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>et également voir <xref:System.Speech.Recognition.SemanticResultValue> et <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-156">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-157">Lorsque vous construisez <xref:System.Speech.Recognition.GrammarBuilder> objets qui contiennent <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances, assurez-vous que vous évitez de créer des éléments de sémantiques en double avec le même nom de clé ou de plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises le <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété d’un <xref:System.Speech.Recognition.SemanticValue> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-157">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3e8da-158">Le module de reconnaissance vocale peut lever une exception si elle rencontre ces circonstances.</span><span class="sxs-lookup"><span data-stu-id="3e8da-158">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3e8da-159">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultKey à l’aide et les objets SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-159">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-160">L’exemple suivant crée une grammaire de reconnaissance vocale capable de reconnaître les deux expressions, « faire arrière-plan *colorChoice*» et « en arrière-plan la valeur *colorChoice*», où * colorChoice* est sélectionné à partir d’un jeu de couleurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-160">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="3e8da-161">La grammaire permet à un utilisateur de parler de plusieurs noms de couleur et retourne des informations sémantiques sur le nom de couleur reconnu à l’application.</span><span class="sxs-lookup"><span data-stu-id="3e8da-161">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="3e8da-162">L’exemple utilise un seul <xref:System.Speech.Recognition.SemanticResultKey> avec lequel vous pouvez récupérer le <xref:System.Speech.Recognition.SemanticValue> qui est associé à la couleur parlée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="3e8da-162">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="3e8da-163">Par exemple, si l’entrée contient la phrase, « Jeu arrière-plan rouge », le résultat de la reconnaissance contient la valeur sémantique de « #ff0000 », que vous pouvez récupérer à l’aide d’un gestionnaire pour le `SpeechRecognized` événement.</span><span class="sxs-lookup"><span data-stu-id="3e8da-163">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="3e8da-164">L’exemple utilise <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, et <xref:System.Speech.Recognition.GrammarBuilder> objets pour générer les contraintes qui sont toutes contenues dans la dernière <xref:System.Speech.Recognition.GrammarBuilder> objet, `bothPhrases`.</span><span class="sxs-lookup"><span data-stu-id="3e8da-164">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="3e8da-165">Enfin, l’exemple construit un <xref:System.Speech.Recognition.Grammar> objet à partir de la fin <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-165">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices object for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the Grammar object from the GrammarBuilder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e8da-166">Valeur ou paire nom/valeur sémantique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-166">The semantic value or name/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-167">Initialise une nouvelle instance de la classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> à partir d'une valeur sémantique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-167">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-168">Lorsque vous créez un <xref:System.Speech.Recognition.GrammarBuilder> de l’instance à partir d’un <xref:System.Speech.Recognition.SemanticResultValue> de l’objet, vous ajoutez des informations sémantiques à la grammaire qui peut être retournée dans le résultat de la reconnaissance.</span><span class="sxs-lookup"><span data-stu-id="3e8da-168">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="3e8da-169">Vous pouvez accéder aux informations sémantiques dans le résultat de reconnaissance à l’aide de la <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> propriété de <xref:System.Speech.Recognition.RecognizedPhrase>, qui est disponible dans le gestionnaire pour le `SpeechRecognized` événement.</span><span class="sxs-lookup"><span data-stu-id="3e8da-169">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="3e8da-170">Si le <xref:System.Speech.Recognition.GrammarBuilder> définit un <xref:System.Speech.Recognition.SemanticResultKey>, cela peut être utilisé pour récupérer les informations de sémantique dans un résultat de reconnaissance qui est associé à la clé.</span><span class="sxs-lookup"><span data-stu-id="3e8da-170">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="3e8da-171">Consultez l’exemple de <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>et également voir <xref:System.Speech.Recognition.SemanticResultValue> et <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-171">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-172">Lorsque vous construisez <xref:System.Speech.Recognition.GrammarBuilder> objets qui contiennent <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances, assurez-vous que vous évitez de créer des éléments de sémantiques en double avec le même nom de clé ou de plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises le <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété d’un <xref:System.Speech.Recognition.SemanticValue> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-172">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3e8da-173">Le module de reconnaissance vocale peut lever une exception si elle rencontre ces circonstances.</span><span class="sxs-lookup"><span data-stu-id="3e8da-173">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3e8da-174">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultKey à l’aide et les objets SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-174">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-175">L’exemple suivant crée une grammaire de reconnaissance vocale capable de reconnaître les deux expressions, « faire arrière-plan *colorChoice*» et « en arrière-plan la valeur *colorChoice*», où * colorChoice* est sélectionné à partir d’un jeu de couleurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-175">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="3e8da-176">La grammaire permet à un utilisateur de parler de plusieurs noms de couleur et retourne des informations sémantiques sur le nom de couleur reconnu à l’application.</span><span class="sxs-lookup"><span data-stu-id="3e8da-176">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="3e8da-177">L’exemple utilise un seul <xref:System.Speech.Recognition.SemanticResultKey> avec lequel vous pouvez récupérer le <xref:System.Speech.Recognition.SemanticValue> qui est associé à la couleur parlée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="3e8da-177">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="3e8da-178">Par exemple, si l’entrée contient la phrase, « Jeu arrière-plan rouge », le résultat de la reconnaissance contient la valeur sémantique de « #ff0000 », que vous pouvez récupérer à l’aide d’un gestionnaire pour le `SpeechRecognized` événement.</span><span class="sxs-lookup"><span data-stu-id="3e8da-178">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="3e8da-179">L’exemple utilise <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, et <xref:System.Speech.Recognition.GrammarBuilder> objets pour générer les contraintes qui sont toutes contenues dans la dernière <xref:System.Speech.Recognition.GrammarBuilder> objet, `bothPhrases`.</span><span class="sxs-lookup"><span data-stu-id="3e8da-179">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="3e8da-180">Enfin, l’exemple construit un <xref:System.Speech.Recognition.Grammar> objet à partir de la fin <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-180">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the grammar from the grammar builder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder phrase" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3e8da-181">Séquence de mots.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-181">The sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-182">Initialise une nouvelle instance de la classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> à partir d'une suite de mots.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-182">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a sequence of words.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-183">L’expression représente une expression parlée exacte que la grammaire de reconnaissance vocale peut reconnaître.</span><span class="sxs-lookup"><span data-stu-id="3e8da-183">The phrase represents an exact spoken phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="3e8da-184">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des chaînes, consultez [l’utilisation de chaînes pour créer une syntaxe de GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="3e8da-184">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-185">L’exemple suivant utilise <xref:System.Speech.Recognition.GrammarBuilder> et <xref:System.Speech.Recognition.Choices> objets pour construire une grammaire qui puisse reconnaître une des deux expressions, « faire arrière-plan *colorChoice*» ou « en arrière-plan la valeur *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3e8da-185">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3e8da-186">Après avoir créé une liste de valeurs acceptables pour *colorChoice* à l’aide un <xref:System.Speech.Recognition.Choices> de l’objet, l’exemple initialise deux <xref:System.Speech.Recognition.GrammarBuilder> objets, `makePhrase` et `setPhrase`, à l’aide d’une chaîne en tant qu’argument.</span><span class="sxs-lookup"><span data-stu-id="3e8da-186">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using a string as an argument.</span></span>  
  
 <span data-ttu-id="3e8da-187">L’exemple crée enfin un <xref:System.Speech.Recognition.Grammar> de l’objet à partir d’un <xref:System.Speech.Recognition.Choices> objet converti en un <xref:System.Speech.Recognition.GrammarBuilder> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-187">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * System.Speech.Recognition.SubsetMatchingMode -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, subsetMatchingCriteria)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3e8da-188">Séquence de mots.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-188">The sequence of words.</span>
          </span>
        </param>
        <param name="subsetMatchingCriteria">
          <span data-ttu-id="3e8da-189">Mode correspondant que la syntaxe de reconnaissance vocale utilise pour identifier l'expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-189">The matching mode the speech recognition grammar uses to recognize the phrase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-190">Initialise une nouvelle instance de la classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> pour un sous-ensemble d'une suite de mots.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-190">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class for a subset of a sequence of words.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-191">Le `phrase` paramètre représente l’expression de la grammaire de reconnaissance vocale peut reconnaître.</span><span class="sxs-lookup"><span data-stu-id="3e8da-191">The `phrase` parameter represents the phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="3e8da-192">Le `subsetMatchingMode` paramètre spécifie un sous-ensemble de l’expression qui peut être prononcé pour obtenir une reconnaissance réussie de la phrase entière.</span><span class="sxs-lookup"><span data-stu-id="3e8da-192">The `subsetMatchingMode` parameter specifies a subset of the phrase that can be spoken to achieve successful recognition of the entire phrase.</span></span> <span data-ttu-id="3e8da-193">Vous pouvez utiliser cela pour créer une syntaxe avec une liste d’entrées qui ont des noms longs, sans que les utilisateurs de parler dans un nom complet pour correspondre à un élément.</span><span class="sxs-lookup"><span data-stu-id="3e8da-193">You can use this to create a grammar with a list of entries that have long names, without requiring users to speak an entire name to match an item.</span></span>  
  
 <span data-ttu-id="3e8da-194">Pour plus d’informations sur les modes de correspondance, consultez <xref:System.Speech.Recognition.SubsetMatchingMode>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-194">For more information about the matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode>.</span></span> <span data-ttu-id="3e8da-195">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des chaînes, consultez [l’utilisation de chaînes pour créer une syntaxe de GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="3e8da-195">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-196">L’exemple suivant crée une grammaire de reconnaissance vocale pour chaque <xref:System.Speech.Recognition.SubsetMatchingMode> valeur et une syntaxe pour le choix entre les grammaires de mode correspondant.</span><span class="sxs-lookup"><span data-stu-id="3e8da-196">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value and a grammar for choosing between the matching mode grammars.</span></span> <span data-ttu-id="3e8da-197">Si la valeur de `phrase` est « un deux trois quatre cinq six sept », puis la grammaire sous-séquence reconnaît l’entrée « deux trois quatre », mais pas l’entrée » un trois cinq ».</span><span class="sxs-lookup"><span data-stu-id="3e8da-197">If the value of `phrase` is "one two three four five six seven", then the Subsequence grammar recognizes the input "two three four", but not the input "one three five".</span></span> <span data-ttu-id="3e8da-198">Toutefois, la grammaire de sous-ensemble commandée reconnaît les deux de ces entrées.</span><span class="sxs-lookup"><span data-stu-id="3e8da-198">However, the Ordered Subset grammar recognizes both of these inputs.</span></span>  
  
```csharp  
  
private static IEnumerable<Grammar>  
  CreateMatchingModeGrammars(string phrase)  
{  
  List<Grammar> grammars = new List<Grammar>(5);  
  
  Choices modeChoice = new Choices();  
  Type enumType = typeof(SubsetMatchingMode);  
  foreach (SubsetMatchingMode mode in Enum.GetValues(enumType))  
  {  
    string modeName = Enum.GetName(enumType, mode);  
    modeName = BreakAtCaps(modeName);  
  
    GrammarBuilder builder = new GrammarBuilder(phrase, mode);  
    Grammar modeGrammar = new Grammar(builder);  
    modeGrammar.Name = modeName;  
    modeGrammar.Enabled = false;  
    grammars.Add(modeGrammar);  
  
    modeChoice.Add(modeName);  
  }  
  
  Grammar choiceGrammar = new Grammar(modeChoice);  
  choiceGrammar.Name = "choice";  
  grammars.Add(choiceGrammar);  
  
  return grammars;  
}  
  
// Insert spaces preceding each uppercase letter in a string.   
private static string BreakAtCaps(string item)  
{  
  if (item == null || item.Length == 0)  
  {  
    return item;  
  }  
  
  StringBuilder sb = new StringBuilder(item[0].ToString());  
  for (int i = 1; i < item.Length; i++)  
  {  
    char c = item[i];  
    if (char.IsUpper(c))  
    {  
      sb.Append(" ");  
    }  
    sb.Append(c);  
  }  
  
  return sb.ToString();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SubsetMatchingMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.GrammarBuilder * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (builder, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3e8da-199">Élément répété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-199">The repeated element.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="3e8da-200">Nombre minimal de fois où l’entrée correspondant à l’élément défini par <c>builder</c> doit se produire pour constituer une correspondance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-200">The minimum number of times that input matching the element defined by <c>builder</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="3e8da-201">Nombre maximal de fois où l’entrée correspondant à l’élément défini par <c>builder</c> peut se produire pour constituer une correspondance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-201">The maximum number of times that input matching the element defined by <c>builder</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-202">Initialise une nouvelle instance de la classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> à partir d'un élément répété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-202">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a repeated element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-203">Si la valeur de `minRepeat` est 0, la nouvelle <xref:System.Speech.Recognition.GrammarBuilder> représente un élément facultatif.</span><span class="sxs-lookup"><span data-stu-id="3e8da-203">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="3e8da-204">La valeur de `minRepeat` doit être supérieur ou égal à 0 et inférieur ou égal à la valeur de `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="3e8da-204">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-205">Lorsque vous spécifiez se répète pour <xref:System.Speech.Recognition.GrammarBuilder> objets qui contiennent <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances, assurez-vous que vous évitez de créer des éléments de sémantiques en double avec le même nom de clé ou de plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises le <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété d’un <xref:System.Speech.Recognition.SemanticValue> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-205">When you specify repeats for <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3e8da-206">Le module de reconnaissance vocale peut lever une exception si elle rencontre ces circonstances.</span><span class="sxs-lookup"><span data-stu-id="3e8da-206">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3e8da-207">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultKey à l’aide et les objets SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-207">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-208">L’exemple suivant crée une grammaire de reconnaissance vocale pour commander un.</span><span class="sxs-lookup"><span data-stu-id="3e8da-208">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="3e8da-209">Il commence par une expression facultative, à l’ouverture, suivie d’un à quatre garniture et se ferme avec le mot « pizza ».</span><span class="sxs-lookup"><span data-stu-id="3e8da-209">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object from a string array of alternative toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3e8da-210">Séquence de mots répétée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-210">The repeated sequence of words.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="3e8da-211">Nombre minimum de fois où l'entrée correspondant à l'expression doit se produire pour constituer une correspondance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-211">The minimum number of times that input matching the phrase must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="3e8da-212">Nombre maximum de fois où l'entrée correspondant à l'expression peut se produire pour constituer une correspondance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-212">The maximum number of times that input matching the phrase can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-213">Initialise une nouvelle instance de la classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> à partir de la séquence de mots d'une <see cref="T:System.String" /> et spécifie le nombre de fois que la <see cref="T:System.String" /> peut être répétée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-213">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from the sequence of words in a <see cref="T:System.String" /> and specifies how many times the <see cref="T:System.String" /> can be repeated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-214">Si la valeur de `minRepeat` est 0, la nouvelle <xref:System.Speech.Recognition.GrammarBuilder> représente un élément facultatif.</span><span class="sxs-lookup"><span data-stu-id="3e8da-214">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="3e8da-215">La valeur de `minRepeat` doit être supérieur ou égal à 0 et inférieur ou égal à la valeur de `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="3e8da-215">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span> <span data-ttu-id="3e8da-216">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des chaînes, consultez [l’utilisation de chaînes pour créer une syntaxe de GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="3e8da-216">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-217">L’exemple suivant crée une grammaire de reconnaissance vocale pour commander un.</span><span class="sxs-lookup"><span data-stu-id="3e8da-217">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="3e8da-218">Il commence par une expression facultative, à l’ouverture, suivie d’un à quatre garniture et se ferme avec le mot « pizza ».</span><span class="sxs-lookup"><span data-stu-id="3e8da-218">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e8da-219">Crée un nouveau <see cref="T:System.Speech.Recognition.GrammarBuilder" /> qui contient une séquence de deux éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-219">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-220">La méthode statique <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> méthodes fournissent un autre mécanisme par lequel vous pouvez combiner différents types pour créer la diversité et la flexibilité dans les grammaires généré avec <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-220">The static <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods provide another mechanism by which you can combine various types to create diversity and flexibility in grammars built with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3e8da-221">Ces méthodes correspondent aux statiques <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> méthodes, qui sont également définies sur le <xref:System.Speech.Recognition.GrammarBuilder> classe.</span><span class="sxs-lookup"><span data-stu-id="3e8da-221">These methods correspond to the static <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods, which are also defined on the <xref:System.Speech.Recognition.GrammarBuilder> class.</span></span> <span data-ttu-id="3e8da-222">L’ordre des paramètres détermine l’ordre des éléments dans le nouveau <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-222">The order of the parameters determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3e8da-223">Un <xref:System.Speech.Recognition.GrammarBuilder> peut également être obtenu à partir de <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, et [chaîne](http://go.microsoft.com/fwlink/?LinkId=159733) objets.</span><span class="sxs-lookup"><span data-stu-id="3e8da-223">A <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and [String](http://go.microsoft.com/fwlink/?LinkId=159733) objects.</span></span> <span data-ttu-id="3e8da-224">Pour plus d’informations, consultez le <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> et <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> opérateurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-224">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-225">Le module de reconnaissance vocale peut lever une exception lors de l’utilisation d’une syntaxe de reconnaissance vocale qui contient les éléments sémantiques en double portant le même nom de clé ou plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises de la valeur du même élément sémantique.</span><span class="sxs-lookup"><span data-stu-id="3e8da-225">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="3e8da-226">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultKey à l’aide et les objets SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-226">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3e8da-227">Pour plus d’informations sur la création et à l’aide de la syntaxe de reconnaissance vocale, consultez [la reconnaissance vocale](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) et [création de grammaires de GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="3e8da-227">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (choices, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="3e8da-228">Le premier élément de grammaire, qui représente un ensemble d’alternatives.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-228">The first grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="3e8da-229">Le deuxième élément de grammaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-229">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-230">Crée un <see cref="T:System.Speech.Recognition.GrammarBuilder" /> nouveau qui contient un objet <see cref="T:System.Speech.Recognition.Choices" /> suivi d’un objet <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-230">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e8da-231">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> pour la séquence de l’élément <paramref name="choices" /> suivi par l’élément <paramref name="builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-231">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> element followed by the <paramref name="builder" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-232"><xref:System.Speech.Recognition.GrammarBuilder> prend en charge les conversions implicites à partir des classes suivantes :</span><span class="sxs-lookup"><span data-stu-id="3e8da-232"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3e8da-233">Cette méthode accepte les objets répertoriés ci-dessus pour le `builder` paramètre.</span><span class="sxs-lookup"><span data-stu-id="3e8da-233">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="3e8da-234">Pour plus d’informations, consultez le <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> et <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> opérateurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-234">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-235">Lorsque vous combinez <xref:System.Speech.Recognition.Choices> et <xref:System.Speech.Recognition.GrammarBuilder> objets qui contiennent <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances, assurez-vous que vous évitez de créer des éléments de sémantiques en double avec le même nom de clé ou de plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises le <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété d’un <xref:System.Speech.Recognition.SemanticValue> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-235">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3e8da-236">Le module de reconnaissance vocale peut lever une exception si elle rencontre ces circonstances.</span><span class="sxs-lookup"><span data-stu-id="3e8da-236">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3e8da-237">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [ajouter une sémantique à une syntaxe de GrammarBuilder](https://msdn.microsoft.com/library/hh361581.aspx).</span><span class="sxs-lookup"><span data-stu-id="3e8da-237">For more information about building a speech recognition grammar that contains semantic information, see [Add Semantics to a GrammarBuilder Grammar](https://msdn.microsoft.com/library/hh361581.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, choices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3e8da-238">Premier élément de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-238">The first grammar element.</span>
          </span>
        </param>
        <param name="choices">
          <span data-ttu-id="3e8da-239">Second élément de grammaire qui représente un ensemble de solutions de remplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-239">The second grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-240">Crée un <see cref="T:System.Speech.Recognition.GrammarBuilder" /> nouveau qui contient un objet <see cref="T:System.Speech.Recognition.GrammarBuilder" /> suivi d’un objet <see cref="T:System.Speech.Recognition.Choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-240">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e8da-241">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> pour la séquence de l’élément <paramref name="builder" /> suivi par l’élément <paramref name="choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-241">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="choices" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-242"><xref:System.Speech.Recognition.GrammarBuilder> prend en charge les conversions implicites à partir des classes suivantes :</span><span class="sxs-lookup"><span data-stu-id="3e8da-242"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3e8da-243">Cette méthode accepte les objets répertoriés ci-dessus pour le `builder` paramètre.</span><span class="sxs-lookup"><span data-stu-id="3e8da-243">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="3e8da-244">Pour plus d’informations, consultez le <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> et <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> opérateurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-244">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-245">Lorsque vous combinez <xref:System.Speech.Recognition.Choices> et <xref:System.Speech.Recognition.GrammarBuilder> objets qui contiennent <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances avec d’autres éléments de grammaire, assurez-vous que vous évitez de créer des éléments de sémantiques en double avec le même nom de clé ou de plusieurs éléments sémantiques qui peut modifier à plusieurs reprises la <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété d’un <xref:System.Speech.Recognition.SemanticValue> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-245">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3e8da-246">Le module de reconnaissance vocale peut lever une exception si elle rencontre ces circonstances.</span><span class="sxs-lookup"><span data-stu-id="3e8da-246">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3e8da-247">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultKey à l’aide et les objets SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-247">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-248">L’exemple suivant crée une grammaire de reconnaissance vocale capable de reconnaître les deux expressions, « faire arrière-plan *couleur*» et « en arrière-plan la valeur *couleur*», où *couleur* est sélectionné à partir d’un jeu de couleurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-248">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3e8da-249">Différents types sont utilisés pour générer la grammaire finale, tel que [chaîne](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, et <xref:System.Speech.Recognition.GrammarBuilder> objets.</span><span class="sxs-lookup"><span data-stu-id="3e8da-249">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="3e8da-250">Les opérateurs de conversion explicite dans les appels à la <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> méthodes sont facultatives.</span><span class="sxs-lookup"><span data-stu-id="3e8da-250">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder1, builder2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1">
          <span data-ttu-id="3e8da-251">Premier élément de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-251">The first grammar element.</span>
          </span>
        </param>
        <param name="builder2">
          <span data-ttu-id="3e8da-252">Le deuxième élément de grammaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-252">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-253">Crée un nouveau <see cref="T:System.Speech.Recognition.GrammarBuilder" /> qui contient une séquence de deux objets <see cref="T:System.Speech.Recognition.GrammarBuilder" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-253">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e8da-254">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> pour la séquence de l’élément <paramref name="builder1" /> suivi par l’élément <paramref name="builder2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-254">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> element followed by the <paramref name="builder2" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-255"><xref:System.Speech.Recognition.GrammarBuilder> prend en charge les conversions implicites à partir des classes suivantes :</span><span class="sxs-lookup"><span data-stu-id="3e8da-255"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3e8da-256">Cette méthode accepte les objets répertoriés ci-dessus pour le `builder1` ou `builder2` paramètre.</span><span class="sxs-lookup"><span data-stu-id="3e8da-256">This method accepts the objects listed above for the `builder1` or `builder2` parameter.</span></span>  
  
 <span data-ttu-id="3e8da-257">Pour plus d’informations, consultez le <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> et <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> opérateurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-257">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-258">Lorsque vous combinez <xref:System.Speech.Recognition.Choices> et <xref:System.Speech.Recognition.GrammarBuilder> objets qui contiennent <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances avec d’autres éléments de grammaire, assurez-vous que vous évitez de créer des éléments de sémantiques en double avec le même nom de clé ou de plusieurs éléments sémantiques qui peut modifier à plusieurs reprises la <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété d’un <xref:System.Speech.Recognition.SemanticValue> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-258">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3e8da-259">Le module de reconnaissance vocale peut lever une exception si elle rencontre ces circonstances.</span><span class="sxs-lookup"><span data-stu-id="3e8da-259">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3e8da-260">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultKey à l’aide et les objets SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-260">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-261">L’exemple suivant crée une grammaire de reconnaissance vocale capable de reconnaître les deux expressions, « faire arrière-plan *couleur*» et « en arrière-plan la valeur *couleur*», où *couleur* est sélectionné à partir d’un jeu de couleurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-261">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3e8da-262">Différents types sont utilisés pour générer la grammaire finale, tel que [chaîne](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, et <xref:System.Speech.Recognition.GrammarBuilder> objets.</span><span class="sxs-lookup"><span data-stu-id="3e8da-262">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="3e8da-263">Les opérateurs de conversion explicite dans les appels à la <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> méthodes sont facultatives.</span><span class="sxs-lookup"><span data-stu-id="3e8da-263">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, phrase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3e8da-264">Premier élément de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-264">The first grammar element.</span>
          </span>
        </param>
        <param name="phrase">
          <span data-ttu-id="3e8da-265">Second élément de grammaire qui représente une séquence de mots.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-265">The second grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-266">Crée un nouveau <see cref="T:System.Speech.Recognition.GrammarBuilder" /> qui contient un objet <see cref="T:System.Speech.Recognition.GrammarBuilder" /> suivi d'une expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-266">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a phrase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e8da-267">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> pour la séquence de l’élément <paramref name="builder" /> suivi par l’élément <paramref name="phrase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-267">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="phrase" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-268"><xref:System.Speech.Recognition.GrammarBuilder> prend en charge les conversions implicites à partir des classes suivantes :</span><span class="sxs-lookup"><span data-stu-id="3e8da-268"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3e8da-269">Cette méthode accepte les objets répertoriés ci-dessus pour le `builder` paramètre.</span><span class="sxs-lookup"><span data-stu-id="3e8da-269">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="3e8da-270">Pour plus d’informations, consultez le <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> et <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> opérateurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-270">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-271">L’exemple suivant crée une grammaire de reconnaissance vocale capable de reconnaître les deux expressions, « faire arrière-plan *couleur*» et « en arrière-plan la valeur *couleur*», où *couleur* est sélectionné à partir d’un jeu de couleurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-271">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3e8da-272">Différents types sont utilisés pour générer la grammaire finale, tel que [chaîne](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, et <xref:System.Speech.Recognition.GrammarBuilder> objets.</span><span class="sxs-lookup"><span data-stu-id="3e8da-272">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="3e8da-273">Les opérateurs de conversion explicite dans les appels à la <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> méthodes sont facultatives.</span><span class="sxs-lookup"><span data-stu-id="3e8da-273">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (phrase, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3e8da-274">Premier élément de grammaire qui représente une séquence de mots.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-274">The first grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="3e8da-275">Le deuxième élément de grammaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-275">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-276">Crée un nouveau <see cref="T:System.Speech.Recognition.GrammarBuilder" /> qui contient une expression suivie d'un objet <see cref="T:System.Speech.Recognition.GrammarBuilder" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-276">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e8da-277">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> pour la séquence de l’élément <paramref name="phrase" /> suivi par l’élément <paramref name="builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-277">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> element followed by the <paramref name="builder" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-278"><xref:System.Speech.Recognition.GrammarBuilder> prend en charge les conversions implicites à partir des classes suivantes :</span><span class="sxs-lookup"><span data-stu-id="3e8da-278"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3e8da-279">Cette méthode accepte les objets répertoriés ci-dessus pour le `builder` paramètre.</span><span class="sxs-lookup"><span data-stu-id="3e8da-279">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="3e8da-280">Pour plus d’informations, consultez le <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> et <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> opérateurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-280">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-281">L’exemple suivant crée une grammaire de reconnaissance vocale capable de reconnaître les deux expressions, « faire arrière-plan *couleur*» et « en arrière-plan la valeur *couleur*», où *couleur* est sélectionné à partir d’un jeu de couleurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-281">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3e8da-282">Différents types sont utilisés pour générer la grammaire finale, tel que [chaîne](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, et <xref:System.Speech.Recognition.GrammarBuilder> objets.</span><span class="sxs-lookup"><span data-stu-id="3e8da-282">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="3e8da-283">Les opérateurs de conversion explicite dans les appels à la <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> méthodes sont facultatives.</span><span class="sxs-lookup"><span data-stu-id="3e8da-283">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e8da-284">Ajoute un élément de syntaxe à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-284">Appends a grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-285">Utilisez ces méthodes pour ajouter des éléments de syntaxe à un existant <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-285">Use these methods to append grammar elements to an existing <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3e8da-286">Lorsque vous créez des éléments de syntaxe, vous pouvez les ajouter au générateur existant pour développer progressivement les contraintes pour une grammaire de reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="3e8da-286">As you create grammar elements, you can append them to the existing builder to progressively develop the constraints for a speech recognition grammar.</span></span> <span data-ttu-id="3e8da-287">Chaque élément est ajouté à la fin de la séquence en cours d’éléments.</span><span class="sxs-lookup"><span data-stu-id="3e8da-287">Each element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="3e8da-288">Cette méthode a des surcharges pour ajouter des données <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, et <xref:System.Speech.Recognition.SemanticResultValue> objets.</span><span class="sxs-lookup"><span data-stu-id="3e8da-288">This method has overloads for appending <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-289">Le module de reconnaissance vocale peut lever une exception lors de l’utilisation d’une syntaxe de reconnaissance vocale qui contient les éléments sémantiques en double portant le même nom de clé ou plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises de la valeur du même élément sémantique.</span><span class="sxs-lookup"><span data-stu-id="3e8da-289">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="3e8da-290">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultKey à l’aide et les objets SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-290">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3e8da-291">Pour plus d’informations sur la création et à l’aide de la syntaxe de reconnaissance vocale, consultez [la reconnaissance vocale](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) et [création de grammaires de GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="3e8da-291">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.Choices -&gt; unit" Usage="grammarBuilder.Append alternateChoices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="3e8da-292">Ensemble des alternatives à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-292">The set of alternatives to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-293">Ajoute un ensemble d'alternatives à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-293">Appends a set of alternatives to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-294">`alternateChoices` est ajouté à la fin de la séquence en cours d’éléments.</span><span class="sxs-lookup"><span data-stu-id="3e8da-294">`alternateChoices` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-295">Lorsque vous ajoutez <xref:System.Speech.Recognition.Choices> objets qui contiennent <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances pour un <xref:System.Speech.Recognition.GrammarBuilder> d’objet, assurez-vous que vous évitez de créer des éléments de sémantiques en double avec le même nom de clé ou de plusieurs éléments sémantiques qui pourrait à plusieurs reprises modifier le <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété d’un <xref:System.Speech.Recognition.SemanticValue> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-295">When you append <xref:System.Speech.Recognition.Choices> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3e8da-296">Le module de reconnaissance vocale peut lever une exception si elle rencontre ces circonstances.</span><span class="sxs-lookup"><span data-stu-id="3e8da-296">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3e8da-297">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultValue de présentation et les objets SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-297">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-298">L’exemple suivant crée une grammaire de reconnaissance vocale pour les expressions telles que « James appel au travail » et « Appel Anne sur son téléphone portable », où le mot « phone » est facultatif.</span><span class="sxs-lookup"><span data-stu-id="3e8da-298">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="3e8da-299">L’exemple illustre l’utilisation de la <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e8da-299">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder -&gt; unit" Usage="grammarBuilder.Append builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3e8da-300">Élément de grammaire à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-300">The grammar element to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-301">Ajoute un élément de syntaxe à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-301">Appends a grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-302">`builder` est ajouté à la fin de la séquence en cours d’éléments de syntaxe.</span><span class="sxs-lookup"><span data-stu-id="3e8da-302">`builder` is added to the end of the current sequence of grammar elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3e8da-303">Lorsque vous ajoutez <xref:System.Speech.Recognition.GrammarBuilder> objets qui contiennent <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances pour un <xref:System.Speech.Recognition.GrammarBuilder> d’objet, assurez-vous que vous évitez de créer des éléments de sémantiques en double avec le même nom de clé ou de plusieurs éléments sémantiques qui pourrait à plusieurs reprises modifier le <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété d’un <xref:System.Speech.Recognition.SemanticValue> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-303">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3e8da-304">Le module de reconnaissance vocale peut lever une exception si elle rencontre ces circonstances.</span><span class="sxs-lookup"><span data-stu-id="3e8da-304">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3e8da-305">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultKey à l’aide et les objets SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-305">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-306">L’exemple suivant crée une grammaire de reconnaissance vocale pour les expressions telles que « James appel au travail » et « Appel Anne sur son téléphone portable », où le mot « phone » est facultatif.</span><span class="sxs-lookup"><span data-stu-id="3e8da-306">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="3e8da-307"><xref:System.Speech.Recognition.GrammarBuilder> et <xref:System.Speech.Recognition.Choices> objets sont utilisés pour construire la grammaire.</span><span class="sxs-lookup"><span data-stu-id="3e8da-307"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="3e8da-308">L’exemple illustre l’utilisation de la <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e8da-308">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultKey -&gt; unit" Usage="grammarBuilder.Append key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3e8da-309">Clé sémantique à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-309">The semantic key to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-310">Ajoute une clé sémantique à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-310">Appends a semantic key to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-311">`key` est ajouté à la fin de la séquence en cours d’éléments.</span><span class="sxs-lookup"><span data-stu-id="3e8da-311">`key` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-312">Lorsque vous ajoutez <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances pour un <xref:System.Speech.Recognition.GrammarBuilder> d’objet, assurez-vous que vous évitez de créer des éléments de sémantiques en double avec le même nom de clé ou de plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises le <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété d’un <xref:System.Speech.Recognition.SemanticValue> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-312">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3e8da-313">Le module de reconnaissance vocale peut lever une exception si elle rencontre ces circonstances.</span><span class="sxs-lookup"><span data-stu-id="3e8da-313">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3e8da-314">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultValue de présentation et les objets SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-314">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-315">L’exemple suivant fait partie d’une application de console pour le choix des villes d’origine et de destination pour un vol.</span><span class="sxs-lookup"><span data-stu-id="3e8da-315">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="3e8da-316">L’application reconnaît des expressions telles que « Je veux passage vers Miami à Chicago ».</span><span class="sxs-lookup"><span data-stu-id="3e8da-316">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="3e8da-317">Le gestionnaire pour le <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> événement utilise la <xref:System.Speech.Recognition.SemanticResultKey> pour extraire le code d’aéroport spécifié dans le <xref:System.Speech.Recognition.SemanticResultValue> les villes d’origine et destination.</span><span class="sxs-lookup"><span data-stu-id="3e8da-317">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create a Choices object and add  cities and airport codes  
        // using SemanticResultValue objects.  
        Choices cities = new Choices();  
        cities.Add(new SemanticResultValue("Chicago", "ORD"));  
        cities.Add(new SemanticResultValue("Boston", "BOS"));  
        cities.Add(new SemanticResultValue("Miami", "MIA"));  
        cities.Add(new SemanticResultValue("Dallas", "DFW"));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultValue -&gt; unit" Usage="grammarBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3e8da-318">Valeur sémantique à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-318">The semantic value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-319">Ajoute une valeur sémantique à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-319">Appends a semantic value to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-320">`value` est ajouté à la fin de la séquence en cours d’éléments.</span><span class="sxs-lookup"><span data-stu-id="3e8da-320">`value` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-321">Lorsque vous ajoutez <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances pour un <xref:System.Speech.Recognition.GrammarBuilder> d’objet, assurez-vous que vous évitez de créer des éléments de sémantiques en double avec le même nom de clé ou de plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises le <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété d’un <xref:System.Speech.Recognition.SemanticValue> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-321">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3e8da-322">Le module de reconnaissance vocale peut lever une exception si elle rencontre ces circonstances.</span><span class="sxs-lookup"><span data-stu-id="3e8da-322">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3e8da-323">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultValue de présentation et les objets SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-323">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-324">L’exemple suivant fait partie d’une application de console pour le choix des villes d’origine et de destination pour un vol.</span><span class="sxs-lookup"><span data-stu-id="3e8da-324">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="3e8da-325">L’application reconnaît des expressions telles que « Je veux passage vers Miami à Chicago ».</span><span class="sxs-lookup"><span data-stu-id="3e8da-325">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="3e8da-326">Le gestionnaire pour le <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> événement utilise la <xref:System.Speech.Recognition.SemanticResultKey> pour extraire le code d’aéroport spécifié dans le <xref:System.Speech.Recognition.SemanticResultValue> les villes d’origine et destination.</span><span class="sxs-lookup"><span data-stu-id="3e8da-326">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create GrammarBuilder objects and append SemanticResultValue objects   
        // that contain cities and airport codes.  
  
        GrammarBuilder chicago = new GrammarBuilder();  
        chicago.Append(new SemanticResultValue("Chicago", "ORD"));  
  
        GrammarBuilder boston = new GrammarBuilder();  
        boston.Append(new SemanticResultValue("Boston", "BOS"));  
  
        GrammarBuilder miami = new GrammarBuilder();  
        miami.Append(new SemanticResultValue("Miami", "MIA"));  
  
        GrammarBuilder dallas = new GrammarBuilder();  
        dallas.Append(new SemanticResultValue("Dallas", "DFW"));  
  
        // Create a Choices object and add the cities using implicit conversion from   
        // SemanticResultValue to GrammarBuilder.  
        Choices cities = new Choices();  
        cities.Add(new Choices(new GrammarBuilder[] { chicago, boston, miami, dallas }));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; unit" Usage="grammarBuilder.Append phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3e8da-327">Séquence de mots à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-327">The sequence of words to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-328">Ajoute une expression à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-328">Appends a phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-329">`phrase` est ajouté à la fin de la séquence en cours d’éléments.</span><span class="sxs-lookup"><span data-stu-id="3e8da-329">`phrase` is added to the end of the current sequence of elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="member this.Append : string * System.Speech.Recognition.SubsetMatchingMode -&gt; unit" Usage="grammarBuilder.Append (phrase, subsetMatchingCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3e8da-330">Séquence de mots à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-330">The sequence of words to append.</span>
          </span>
        </param>
        <param name="subsetMatchingCriteria">
          <span data-ttu-id="3e8da-331">Mode correspondant utilisé par la grammaire pour identifier l'expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-331">The matching mode the grammar uses to recognize the phrase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-332">Ajoute un élément pour un sous-ensemble d'une expression à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-332">Appends an element for a subset of a phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-333">L’élément du sous-ensemble est ajouté à la fin de la séquence en cours d’éléments.</span><span class="sxs-lookup"><span data-stu-id="3e8da-333">The subset element is added to the end of the current sequence of elements.</span></span> <span data-ttu-id="3e8da-334">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale à l’aide de chaînes, consultez [l’utilisation de chaînes pour créer une syntaxe de GrammarBuilder](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="3e8da-334">For more information about building a speech recognition grammar using strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
 <span data-ttu-id="3e8da-335">Pour plus d’informations sur l’utilisation des modes de correspondance du sous-ensemble, consultez <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-335">For detailed information on the use of subset matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-336">L’exemple suivant crée une grammaire de reconnaissance vocale pour chaque <xref:System.Speech.Recognition.SubsetMatchingMode> valeur.</span><span class="sxs-lookup"><span data-stu-id="3e8da-336">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value.</span></span> <span data-ttu-id="3e8da-337">Par exemple, la grammaire générée `OrderedSubset` reconnaît les expressions, » trois quatre cinq » et « un trois cinq » et la grammaire `Subsequence` reconnaît l’expression « trois quatre cinq », mais pas l’expression, » un trois cinq ».</span><span class="sxs-lookup"><span data-stu-id="3e8da-337">For example, the generated grammar `OrderedSubset` recognizes the phrases, "three four five" and "one three five", and the grammar `Subsequence` recognizes the phrase "three four five", but not the phrase, "one three five".</span></span>  
  
```csharp  
  
private Grammar[] CreateSubsetMatchTest()  
{  
  List<Grammar> grammars = new List<Grammar>(4);  
  
  string phrase = "one two three four five six";  
  foreach (SubsetMatchingMode mode in  
    Enum.GetValues(typeof(SubsetMatchingMode)))  
  {  
    GrammarBuilder gb = new GrammarBuilder();  
    gb.Append(phrase, mode);  
  
    Grammar grammar = new Grammar(gb);  
    grammar.Name = mode.ToString();  
    grammars.Add(grammar);  
  }  
  
  return grammars.ToArray();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder * int * int -&gt; unit" Usage="grammarBuilder.Append (builder, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3e8da-338">Élément de syntaxe répété à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-338">The repeated grammar element to append.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="3e8da-339">Nombre minimal de fois où l’entrée correspondant à l’élément défini par <c>builder</c> doit se produire pour constituer une correspondance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-339">The minimum number of times that input matching the element defined by <c>builder</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="3e8da-340">Nombre maximal de fois où l’entrée correspondant à l’élément défini par <c>builder</c> peut se produire pour constituer une correspondance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-340">The maximum number of times that input matching the element defined by <c>builder</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-341">Ajoute un élément de syntaxe répété à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-341">Appends a repeated grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-342">La valeur de `minRepeat` doit être supérieur ou égal à 0 et inférieur ou égal à la valeur de `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="3e8da-342">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-343">Lorsque vous ajoutez <xref:System.Speech.Recognition.GrammarBuilder> objets qui contiennent <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances pour un <xref:System.Speech.Recognition.GrammarBuilder> d’objet, assurez-vous que vous évitez de créer des éléments de sémantiques en double avec le même nom de clé ou de plusieurs éléments sémantiques qui pourrait à plusieurs reprises modifier le <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété d’un <xref:System.Speech.Recognition.SemanticValue> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-343">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3e8da-344">Le module de reconnaissance vocale peut lever une exception si elle rencontre ces circonstances.</span><span class="sxs-lookup"><span data-stu-id="3e8da-344">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3e8da-345">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultValue de présentation et les objets SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-345">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-346">L’exemple suivant crée une grammaire de reconnaissance vocale pour les expressions telles que « James appel au travail » et « Appel Anne sur son téléphone portable », où le mot « phone » est facultatif.</span><span class="sxs-lookup"><span data-stu-id="3e8da-346">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="3e8da-347"><xref:System.Speech.Recognition.GrammarBuilder> et <xref:System.Speech.Recognition.Choices> objets sont utilisés pour construire la grammaire.</span><span class="sxs-lookup"><span data-stu-id="3e8da-347"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="3e8da-348">L’exemple illustre l’utilisation de la <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e8da-348">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; unit" Usage="grammarBuilder.Append (phrase, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3e8da-349">Séquence de mots répétée à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-349">The repeated sequence of words to append.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="3e8da-350">Nombre minimal de fois où l’entrée correspondant à <c>phrase</c> doit se produire pour constituer une correspondance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-350">The minimum number of times that input matching <c>phrase</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="3e8da-351">Nombre maximal de fois où l’entrée correspondant à <c>phrase</c> peut se produire pour constituer une correspondance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-351">The maximum number of times that input matching <c>phrase</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-352">Ajoute une expression répétée à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-352">Appends a repeated phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-353">La valeur de `minRepeat` doit être supérieur ou égal à 0 et inférieur ou égal à la valeur de `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="3e8da-353">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-354">L’exemple suivant crée une grammaire de reconnaissance vocale pour les expressions telles que « James appel au travail » et « Appel Anne sur son téléphone portable », où le mot « phone » est facultatif.</span><span class="sxs-lookup"><span data-stu-id="3e8da-354">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="3e8da-355"><xref:System.Speech.Recognition.GrammarBuilder> et <xref:System.Speech.Recognition.Choices> objets sont utilisés pour construire la grammaire.</span><span class="sxs-lookup"><span data-stu-id="3e8da-355"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="3e8da-356">L’exemple illustre l’utilisation de la <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e8da-356">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendDictation">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e8da-357">Ajoute une syntaxe de dictée à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-357">Appends a dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-358">Le <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> méthodes vous permettent d’ajouter une syntaxe de dictée comme une règle à un <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-358">The <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> methods allow you to append a dictation grammar as a rule to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3e8da-359">Pour plus d’informations sur les grammaires de dictée, consultez <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-359">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation();" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : unit -&gt; unit" Usage="grammarBuilder.AppendDictation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e8da-360">Ajoute la syntaxe de dictée par défaut à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-360">Appends the default dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-361">Pour plus d’informations sur les grammaires de dictée, consultez <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-361">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-362">L’exemple suivant crée une grammaire de reconnaissance vocale qui incorpore la dictée.</span><span class="sxs-lookup"><span data-stu-id="3e8da-362">The following example creates a speech recognition grammar that incorporates dictation.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation();  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation (string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation(string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation (category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation(System::String ^ category);" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : string -&gt; unit" Usage="grammarBuilder.AppendDictation category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">
          <span data-ttu-id="3e8da-363">Catégorie de la syntaxe de dictée à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-363">The category of the dictation grammar to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-364">Ajoute la syntaxe de dictée spécifiée à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-364">Appends the specified dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-365">Pour utiliser la syntaxe de dictée orthographe, définissez `category` à `spelling`.</span><span class="sxs-lookup"><span data-stu-id="3e8da-365">To use the spelling dictation grammar, set `category` to `spelling`.</span></span>  
  
 <span data-ttu-id="3e8da-366">Pour plus d’informations sur les grammaires de dictée, consultez <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-366">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-367">L’exemple suivant crée une grammaire de reconnaissance vocale qui incorpore les règles de grammaire dictée.</span><span class="sxs-lookup"><span data-stu-id="3e8da-367">The following example creates a speech recognition grammar that incorporates the spelling dictation grammar rules.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation("spelling");  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendRuleReference">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e8da-368">Ajoute un fichier de syntaxe ou une règle de grammaire à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-368">Appends a grammar file or a grammar rule to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-369">Le <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> méthodes peuvent ajouter un fichier de grammaire ou une règle de grammaire à partir d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="3e8da-369">The <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> methods can append a grammar file or a grammar rule from a file.</span></span> <span data-ttu-id="3e8da-370">Ces méthodes permettent aux applications s’utiliser des règles grammaticales de pré-déploiement ou disponible publiquement.</span><span class="sxs-lookup"><span data-stu-id="3e8da-370">These methods allow applications to make use of pre-deployed or publicly available grammar rules.</span></span> <span data-ttu-id="3e8da-371">L’application doit avoir un accès en lecture à l’emplacement des fichiers de grammaire spécifiée.</span><span class="sxs-lookup"><span data-stu-id="3e8da-371">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="3e8da-372">Ces méthodes peuvent lire une grammaire de reconnaissance vocale à partir des formats suivants.</span><span class="sxs-lookup"><span data-stu-id="3e8da-372">These methods can read a speech recognition grammar from the following formats.</span></span>  
  
-   <span data-ttu-id="3e8da-373">Les fichiers au format XML qui se conforment à la W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)</span><span class="sxs-lookup"><span data-stu-id="3e8da-373">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="3e8da-374">Fichiers binaires qui sont conformes au Microsoft Speech Recognition grammaire Format binaire (extension de fichier .cfg)</span><span class="sxs-lookup"><span data-stu-id="3e8da-374">Binary files that conform to the Microsoft Speech Recognition Grammar Binary Format (.cfg file extension)</span></span>  
  
 <span data-ttu-id="3e8da-375">Compilation d’un SRGS au format XML fichier de grammaire à un fichier binaire de grammaire avec l’extension .cfg peut réduire le temps consommé par recherche une correspondance, en particulier si la grammaire requiert la reconnaissance d’un grand nombre de mots et d’expressions.</span><span class="sxs-lookup"><span data-stu-id="3e8da-375">Compiling an XML-format SRGS grammar file to a binary grammar file with the .cfg extension can reduce the time consumed by searches for a match, especially if the grammar requires recognition of a large number of words and phrases.</span></span> <span data-ttu-id="3e8da-376">Pour plus d’informations sur la compilation des grammaires SRGS au format binaire CFG, consultez <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-376">For information about compiling SRGS grammars to the CFG binary format, see <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string -&gt; unit" Usage="grammarBuilder.AppendRuleReference path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="3e8da-377">Chemin d'accès ou URI (Universal Resource Identifier) du fichier qui décrit une grammaire de reconnaissance vocale dans un format pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-377">The path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-378">Ajoute un fichier de définition de syntaxe à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-378">Appends a grammar definition file to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-379">L’URI fourni par le `path` argument peut être local ou distant.</span><span class="sxs-lookup"><span data-stu-id="3e8da-379">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="3e8da-380">L’application doit avoir un accès en lecture à l’emplacement des fichiers de grammaire spécifiée.</span><span class="sxs-lookup"><span data-stu-id="3e8da-380">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="3e8da-381">Une représentation sous forme de W3C Speech Recognition Grammar Specification (SRGS) pouvez définir une règle racine.</span><span class="sxs-lookup"><span data-stu-id="3e8da-381">A W3C Speech Recognition Grammar Specification (SRGS) representation can define a root rule.</span></span> <span data-ttu-id="3e8da-382">Cette méthode ajoute la syntaxe, à partir de sa règle racine, à la séquence en cours d’éléments de syntaxe.</span><span class="sxs-lookup"><span data-stu-id="3e8da-382">This method appends the grammar, beginning with its root rule, to the current sequence of grammar elements.</span></span> <span data-ttu-id="3e8da-383">Pour ajouter une règle de syntaxe spécifique, utilisez le <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e8da-383">To append a specific grammar rule, use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-384">L’exemple c# suivant crée une grammaire de reconnaissance vocale qui utilise la règle nommée `Cities` dans un fichier SRGS local, cities.grxml.</span><span class="sxs-lookup"><span data-stu-id="3e8da-384">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="3e8da-385">Le contenu du fichier cities.grxml apparaît sous l’exemple de code c#.</span><span class="sxs-lookup"><span data-stu-id="3e8da-385">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar1()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.AppendRuleReference("file://c:/temp/cities.grxml");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 1";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-16" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path, string rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path, string rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String, rule As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path, System::String ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string * string -&gt; unit" Usage="grammarBuilder.AppendRuleReference (path, rule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rule" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="3e8da-386">Chemin d'accès ou URI (Universal Resource Identifier) du fichier qui décrit une grammaire de reconnaissance vocale dans un format pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-386">The file path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span>
          </span>
        </param>
        <param name="rule">
          <span data-ttu-id="3e8da-387">Identificateur de la règle à ajouter, ou la valeur <see langword="null" /> pour ajouter la règle racine par défaut du fichier de grammaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-387">The identifier of the rule to append, or <see langword="null" /> to append the default root rule of the grammar file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-388">Ajoute la règle spécifiée d'un fichier de définition de syntaxe à la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-388">Appends the specified rule of a grammar definition file to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-389">L’URI fourni par le `path` argument peut être local ou distant.</span><span class="sxs-lookup"><span data-stu-id="3e8da-389">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="3e8da-390">L’application doit avoir un accès en lecture à l’emplacement des fichiers de grammaire spécifiée.</span><span class="sxs-lookup"><span data-stu-id="3e8da-390">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="3e8da-391">Vous pouvez utiliser la <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> méthode pour ajouter un début du fichier de grammaire à sa règle racine.</span><span class="sxs-lookup"><span data-stu-id="3e8da-391">You can use the use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method to append a grammar file beginning with its root rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-392">L’exemple c# suivant crée une grammaire de reconnaissance vocale qui utilise la règle nommée `Cities` dans un fichier SRGS local, cities.grxml.</span><span class="sxs-lookup"><span data-stu-id="3e8da-392">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="3e8da-393">Le contenu du fichier cities.grxml apparaît sous l’exemple de code c#.</span><span class="sxs-lookup"><span data-stu-id="3e8da-393">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar2()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.Append("Does");  
  builder.AppendRuleReference(@"c:\temp\cities.grxml", "Cities");  
  builder.Append("have a shuttle");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendWildcard">
      <MemberSignature Language="C#" Value="public void AppendWildcard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendWildcard() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendWildcard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendWildcard();" />
      <MemberSignature Language="F#" Value="member this.AppendWildcard : unit -&gt; unit" Usage="grammarBuilder.AppendWildcard " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e8da-394">Ajoute un élément de syntaxe de reconnaissance qui correspond à une entrée dans la séquence en cours d'éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-394">Appends a recognition grammar element that matches any input to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-395">L’élément de caractère générique est ajouté à la fin de la séquence en cours d’éléments.</span><span class="sxs-lookup"><span data-stu-id="3e8da-395">The wildcard element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="3e8da-396">L’élément de caractère générique correspond à n’importe quel mot prononcé.</span><span class="sxs-lookup"><span data-stu-id="3e8da-396">The wildcard element matches any spoken word.</span></span> <span data-ttu-id="3e8da-397">Il ne correspond pas de bruit de fond ou silence.</span><span class="sxs-lookup"><span data-stu-id="3e8da-397">It does not match background noise or silence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-398">L’exemple suivant crée une grammaire qui accepte l’entrée de mot de passe comme un caractère générique.</span><span class="sxs-lookup"><span data-stu-id="3e8da-398">The following example creates a grammar that accepts password input as a wildcard.</span></span> <span data-ttu-id="3e8da-399">L’exemple joint un <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> Gestionnaire d’événements à la grammaire qui valide l’entrée de mot de passe.</span><span class="sxs-lookup"><span data-stu-id="3e8da-399">The example attaches a <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event handler to the grammar that validates the password input.</span></span>  
  
```csharp  
private Grammar CreatePasswordGrammar()  
{  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey passwordKey =  
    new SemanticResultKey("Password", wildcardBuilder);  
  
  GrammarBuilder passwordBuilder =  
    new GrammarBuilder("My Password is");  
  passwordBuilder.Append(passwordKey);  
  
  Grammar passwordGrammar = new Grammar(passwordBuilder);  
  passwordGrammar.Name = "Password input";  
  
  passwordGrammar.SpeechRecognized +=  
    new EventHandler<SpeechRecognizedEventArgs>(  
      PasswordInputHandler);  
  
  return passwordGrammar;  
}  
  
// Handle the SpeechRecognized event for the password grammar.  
private void PasswordInputHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  RecognitionResult result = e.Result;  
  SemanticValue semantics = e.Result.Semantics;  
  
  if (semantics.ContainsKey("Password"))  
  {  
    RecognizedAudio passwordAudio =  
      result.GetAudioForWordRange(  
        result.Words[3], result.Words[result.Words.Count - 1]);  
  
    if (IsValidPassword(passwordAudio))  
    {  
      Console.WriteLine("Password accepted.");  
  
      // Add code to handle a valid password here.  
    }  
    else  
    {  
      Console.WriteLine("Invalid password.");  
  
      // Add code to handle an invalid password here.  
    }  
  }  
}  
  
// Validate the password input.   
private bool IsValidPassword(RecognizedAudio passwordAudio)  
{  
  Console.WriteLine("Validating password.");  
  
  // Add password validation code here.  
  
  return false;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e8da-400">Obtient ou définit la culture de la syntaxe de reconnaissance vocale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-400">Gets or sets the culture of the speech recognition grammar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e8da-401">Culture du <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-401">The culture of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
          <span data-ttu-id="3e8da-402">La valeur par défaut est la propriété <see cref="P:System.Threading.Thread.CurrentUICulture" /> du thread en cours d'exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-402">The default is the executing thread's <see cref="P:System.Threading.Thread.CurrentUICulture" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-403">Le <xref:System.Speech.Recognition.Grammar.%23ctor%2A> le constructeur crée un <xref:System.Speech.Recognition.Grammar> objet qui peut être utilisé par un module de reconnaissance vocale de la culture correspondante.</span><span class="sxs-lookup"><span data-stu-id="3e8da-403">The <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor creates a <xref:System.Speech.Recognition.Grammar> object that can be used by a speech recognizer of the corresponding culture.</span></span> <span data-ttu-id="3e8da-404">Uniquement les <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> propriété de la <xref:System.Speech.Recognition.GrammarBuilder> qui est fourni comme le paramètre au constructeur de grammaire est utilisé pour définir la culture de la grammaire de reconnaissance vocale qui en résulte.</span><span class="sxs-lookup"><span data-stu-id="3e8da-404">Only the <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> property of the <xref:System.Speech.Recognition.GrammarBuilder> that is provided as the parameter to the Grammar constructor is used to set the culture of the resulting speech recognition grammar.</span></span>  
  
 <span data-ttu-id="3e8da-405">Microsoft Windows et l’API System.Speech acceptent tous les codes de langue-pays valides.</span><span class="sxs-lookup"><span data-stu-id="3e8da-405">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="3e8da-406">Pour effectuer la reconnaissance vocale à l’aide de la langue spécifiée dans le `Culture` propriété, un moteur de reconnaissance vocale qui prend en charge que le code de langue-pays doit être installé.</span><span class="sxs-lookup"><span data-stu-id="3e8da-406">To perform speech recognition using the language specified in the `Culture` property, a speech recognition engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="3e8da-407">Le module de reconnaissance vocale fournis avec Microsoft Windows 7 fonctionne avec les codes de langue-pays suivants.</span><span class="sxs-lookup"><span data-stu-id="3e8da-407">The speech recognition engines that shipped with Microsoft Windows 7 work with the following language-country codes.</span></span>  
  
-   <span data-ttu-id="3e8da-408">en-GB.</span><span class="sxs-lookup"><span data-stu-id="3e8da-408">en-GB.</span></span> <span data-ttu-id="3e8da-409">Anglais (Royaume-Uni)</span><span class="sxs-lookup"><span data-stu-id="3e8da-409">English (United Kingdom)</span></span>  
  
-   <span data-ttu-id="3e8da-410">en-US.</span><span class="sxs-lookup"><span data-stu-id="3e8da-410">en-US.</span></span> <span data-ttu-id="3e8da-411">Anglais (États-Unis)</span><span class="sxs-lookup"><span data-stu-id="3e8da-411">English (United States)</span></span>  
  
-   <span data-ttu-id="3e8da-412">fr-fr.</span><span class="sxs-lookup"><span data-stu-id="3e8da-412">de-DE.</span></span> <span data-ttu-id="3e8da-413">Allemand (Allemagne)</span><span class="sxs-lookup"><span data-stu-id="3e8da-413">German (Germany)</span></span>  
  
-   <span data-ttu-id="3e8da-414">es-ES.</span><span class="sxs-lookup"><span data-stu-id="3e8da-414">es-ES.</span></span> <span data-ttu-id="3e8da-415">Espagnol (Espagne)</span><span class="sxs-lookup"><span data-stu-id="3e8da-415">Spanish (Spain)</span></span>  
  
-   <span data-ttu-id="3e8da-416">fr-FR.</span><span class="sxs-lookup"><span data-stu-id="3e8da-416">fr-FR.</span></span> <span data-ttu-id="3e8da-417">Français (France)</span><span class="sxs-lookup"><span data-stu-id="3e8da-417">French (France)</span></span>  
  
-   <span data-ttu-id="3e8da-418">ja-JP.</span><span class="sxs-lookup"><span data-stu-id="3e8da-418">ja-JP.</span></span> <span data-ttu-id="3e8da-419">Japonais (Japon)</span><span class="sxs-lookup"><span data-stu-id="3e8da-419">Japanese (Japan)</span></span>  
  
-   <span data-ttu-id="3e8da-420">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="3e8da-420">zh-CN.</span></span> <span data-ttu-id="3e8da-421">Chinois (Chine)</span><span class="sxs-lookup"><span data-stu-id="3e8da-421">Chinese (China)</span></span>  
  
-   <span data-ttu-id="3e8da-422">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="3e8da-422">zh-TW.</span></span> <span data-ttu-id="3e8da-423">Chinois (Taïwan)</span><span class="sxs-lookup"><span data-stu-id="3e8da-423">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="3e8da-424">Codes de langue à deux lettres tels que « fr », « fr », ou « es » sont également autorisées.</span><span class="sxs-lookup"><span data-stu-id="3e8da-424">Two-letter language codes such as "en", "fr", or "es" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e8da-425">L’exemple suivant crée une grammaire de reconnaissance vocale pour commander un avec garniture jusqu'à quatre.</span><span class="sxs-lookup"><span data-stu-id="3e8da-425">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="3e8da-426">Il définit spécifiquement le <xref:System.Speech.Recognition.GrammarBuilder> culture de l’objet vers l’anglais (États-Unis).</span><span class="sxs-lookup"><span data-stu-id="3e8da-426">It specifically sets the <xref:System.Speech.Recognition.GrammarBuilder> object's culture to English (United States).</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="DebugShowPhrases">
      <MemberSignature Language="C#" Value="public string DebugShowPhrases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DebugShowPhrases" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DebugShowPhrases As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DebugShowPhrases { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DebugShowPhrases : string" Usage="System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e8da-427">Obtient une chaîne qui indique les contenus et la structure de la grammaire contenus par <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-427">Gets a string that shows the contents and structure of the grammar contained by the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e8da-428">Contenu et structure en cours de <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-428">The current content and structure of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e8da-429">L’exemple suivant crée une grammaire de reconnaissance vocale pour commander un avec garniture jusqu'à quatre.</span><span class="sxs-lookup"><span data-stu-id="3e8da-429">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="3e8da-430">Il écrit l’état de la <xref:System.Speech.Recognition.GrammarBuilder> à la console avant de créer la grammaire.</span><span class="sxs-lookup"><span data-stu-id="3e8da-430">It writes the status of the <xref:System.Speech.Recognition.GrammarBuilder> to the console before creating the grammar.</span></span> <span data-ttu-id="3e8da-431">Cette méthode génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="3e8da-431">This method generates the following output:</span></span>  
  
-   `GrammarBuilder status: I would like a [cheese,mushroom,tomato,onion,anchovy,chic ken,pepperoni] and [cheese,mushroom,tomato,onion,anchovy,chicken,pepperoni] pizza`  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Write the contents and structure of the GrammarBuilder to the console.  
  Console.WriteLine("Grammar content and structure: {0}", gb.DebugShowPhrases);  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Addition">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e8da-432">Crée un nouveau <see cref="T:System.Speech.Recognition.GrammarBuilder" /> qui correspond à une séquence de deux éléments de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-432">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that corresponds to a sequence of two grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-433">L’ordre des opérandes détermine l’ordre des éléments dans le nouveau <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-433">The order of the operands determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-434">Attention est recommandée lors de la combinaison <xref:System.Speech.Recognition.Choices> ou <xref:System.Speech.Recognition.GrammarBuilder> objets qui contiennent <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances avec d’autres éléments de grammaire.</span><span class="sxs-lookup"><span data-stu-id="3e8da-434">Caution is recommended when combining <xref:System.Speech.Recognition.Choices> or <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements.</span></span> <span data-ttu-id="3e8da-435">Le module de reconnaissance vocale peut lever une exception lors de l’utilisation d’une syntaxe de reconnaissance vocale qui contient les éléments sémantiques en double portant le même nom de clé ou plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises de la valeur du même élément sémantique.</span><span class="sxs-lookup"><span data-stu-id="3e8da-435">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="3e8da-436">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultKey à l’aide et les objets SemanticResultValue](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-436">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3e8da-437">Pour plus d’informations sur la création et à l’aide de la syntaxe de reconnaissance vocale, consultez [la reconnaissance vocale](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) et [création de grammaires de GrammarBuilder](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="3e8da-437">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="choices + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="3e8da-438">Le premier élément de grammaire, qui représente un ensemble d’alternatives.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-438">The first grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="3e8da-439">Le deuxième élément de grammaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-439">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-440">Crée un <see cref="T:System.Speech.Recognition.GrammarBuilder" /> nouveau qui contient un objet <see cref="T:System.Speech.Recognition.Choices" /> suivi d’un objet <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-440">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e8da-441">Retourne un <see cref="T:System.Speech.Recognition.GrammarBuilder" /> pour la séquence du paramètre <paramref name="choices" /> suivi du paramètre <paramref name="builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-441">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> parameter followed by the <paramref name="builder" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-442"><xref:System.Speech.Recognition.GrammarBuilder> prend en charge des conversions depuis les classes suivantes.</span><span class="sxs-lookup"><span data-stu-id="3e8da-442"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3e8da-443">Cette méthode accepte les objets répertoriés ci-dessus pour le `builder` paramètre.</span><span class="sxs-lookup"><span data-stu-id="3e8da-443">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="3e8da-444">Pour plus d’informations, consultez le <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> opérateurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-444">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-445">Lorsque vous combinez <xref:System.Speech.Recognition.Choices> et <xref:System.Speech.Recognition.GrammarBuilder> objets qui contiennent <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances, assurez-vous que vous évitez de créer des éléments de sémantiques en double avec le même nom de clé ou de plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises le <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété d’un <xref:System.Speech.Recognition.SemanticValue> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-445">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3e8da-446">Le module de reconnaissance vocale peut lever une exception si elle rencontre ces circonstances.</span><span class="sxs-lookup"><span data-stu-id="3e8da-446">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3e8da-447">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultValue de présentation et les objets SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-447">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3e8da-448">La méthode équivalente pour cet opérateur est <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3e8da-448">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3e8da-449">Premier élément de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-449">The first grammar element.</span>
          </span>
        </param>
        <param name="choices">
          <span data-ttu-id="3e8da-450">Deuxième élément de syntaxe qui représente un ensemble d'autres éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-450">The second grammar element, which represents a set of alternative elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-451">Crée un nouveau <see cref="T:System.Speech.Recognition.GrammarBuilder" /> qui contient un <see cref="T:System.Speech.Recognition.GrammarBuilder" /> suivi d'un <see cref="T:System.Speech.Recognition.Choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-451">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a <see cref="T:System.Speech.Recognition.Choices" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e8da-452">Retourne un <see cref="T:System.Speech.Recognition.GrammarBuilder" /> pour la séquence du paramètre <paramref name="builder" /> suivi du paramètre <paramref name="choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-452">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="choices" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-453"><xref:System.Speech.Recognition.GrammarBuilder> prend en charge des conversions depuis les classes suivantes :</span><span class="sxs-lookup"><span data-stu-id="3e8da-453"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3e8da-454">Cette méthode accepte les objets répertoriés ci-dessus pour le `builder` paramètre.</span><span class="sxs-lookup"><span data-stu-id="3e8da-454">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="3e8da-455">Pour plus d’informations, consultez le <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> opérateurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-455">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-456">Lorsque vous combinez <xref:System.Speech.Recognition.Choices> et <xref:System.Speech.Recognition.GrammarBuilder> objets qui contiennent <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances, assurez-vous que vous évitez de créer des éléments de sémantiques en double avec le même nom de clé ou de plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises le <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété d’un <xref:System.Speech.Recognition.SemanticValue> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-456">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3e8da-457">Le module de reconnaissance vocale peut lever une exception si elle rencontre ces circonstances.</span><span class="sxs-lookup"><span data-stu-id="3e8da-457">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3e8da-458">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultValue de présentation et les objets SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-458">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3e8da-459">La méthode équivalente pour cet opérateur est <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3e8da-459">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3e8da-460">L’exemple suivant crée une grammaire de reconnaissance vocale capable de reconnaître les deux expressions, « faire arrière-plan *couleur*» et « en arrière-plan la valeur *couleur*», où *couleur* est sélectionné à partir d’un jeu de couleurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-460">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3e8da-461">Différents types sont utilisés pour générer la grammaire finale, tel que [chaîne](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, et <xref:System.Speech.Recognition.GrammarBuilder> objets.</span><span class="sxs-lookup"><span data-stu-id="3e8da-461">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder1 + builder2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1">
          <span data-ttu-id="3e8da-462">Premier élément de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-462">The first grammar element.</span>
          </span>
        </param>
        <param name="builder2">
          <span data-ttu-id="3e8da-463">Le deuxième élément de grammaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-463">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-464">Crée un nouveau <see cref="T:System.Speech.Recognition.GrammarBuilder" /> qui contient une séquence de deux objets <see cref="T:System.Speech.Recognition.GrammarBuilder" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-464">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e8da-465">Retourne un <see cref="T:System.Speech.Recognition.GrammarBuilder" /> pour la séquence du paramètre <paramref name="builder1" /> suivi du paramètre <paramref name="builder2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-465">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> parameter followed by the <paramref name="builder2" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-466"><xref:System.Speech.Recognition.GrammarBuilder> prend en charge des conversions depuis les classes suivantes.</span><span class="sxs-lookup"><span data-stu-id="3e8da-466"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3e8da-467">Cette méthode accepte les objets répertoriés ci-dessus pour le `builder1` et `builder2` paramètres.</span><span class="sxs-lookup"><span data-stu-id="3e8da-467">This method accepts the objects listed above for the `builder1` and `builder2` parameters.</span></span> <span data-ttu-id="3e8da-468">Pour plus d’informations, consultez le <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> opérateurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-468">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e8da-469">Lorsque vous combinez <xref:System.Speech.Recognition.GrammarBuilder> objets qui contiennent <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instances, assurez-vous que vous évitez de créer des éléments de sémantiques en double avec le même nom de clé ou de plusieurs éléments sémantiques qui pourraient modifier à plusieurs reprises le <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriété d’un <xref:System.Speech.Recognition.SemanticValue> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-469">When you combine <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3e8da-470">Le module de reconnaissance vocale peut lever une exception si elle rencontre ces circonstances.</span><span class="sxs-lookup"><span data-stu-id="3e8da-470">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3e8da-471">Pour plus d’informations sur la création d’une grammaire de reconnaissance vocale qui contient des informations de sémantiques, consultez [SemanticResultValue de présentation et les objets SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span><span class="sxs-lookup"><span data-stu-id="3e8da-471">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3e8da-472">La méthode équivalente pour cet opérateur est <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3e8da-472">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3e8da-473">Premier élément de syntaxe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-473">The first grammar element.</span>
          </span>
        </param>
        <param name="phrase">
          <span data-ttu-id="3e8da-474">Second élément de grammaire qui représente une séquence de mots.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-474">The second grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-475">Crée un nouveau <see cref="T:System.Speech.Recognition.GrammarBuilder" /> qui contient un <see cref="T:System.Speech.Recognition.GrammarBuilder" /> suivi d'une expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-475">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a phrase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e8da-476">Retourne un <see cref="T:System.Speech.Recognition.GrammarBuilder" /> pour la séquence du paramètre <paramref name="builder" /> suivi du paramètre <paramref name="phrase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-476">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="phrase" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-477"><xref:System.Speech.Recognition.GrammarBuilder> prend en charge des conversions depuis les classes suivantes.</span><span class="sxs-lookup"><span data-stu-id="3e8da-477"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3e8da-478">Cette méthode accepte les objets répertoriés ci-dessus pour le `builder` paramètre.</span><span class="sxs-lookup"><span data-stu-id="3e8da-478">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="3e8da-479">Pour plus d’informations, consultez le <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> opérateurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-479">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="3e8da-480">La méthode équivalente pour cet opérateur est <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3e8da-480">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="phrase + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3e8da-481">Premier élément de grammaire qui représente une séquence de mots.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-481">The first grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="3e8da-482">Le deuxième élément de grammaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-482">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-483">Crée un nouveau <see cref="T:System.Speech.Recognition.GrammarBuilder" /> qui contient une expression suivie d'un <see cref="T:System.Speech.Recognition.GrammarBuilder" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-483">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e8da-484">Retourne un <see cref="T:System.Speech.Recognition.GrammarBuilder" /> pour la séquence du paramètre <paramref name="phrase" /> suivi du paramètre <paramref name="builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-484">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> parameter followed by the <paramref name="builder" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-485"><xref:System.Speech.Recognition.GrammarBuilder> prend en charge des conversions depuis les classes suivantes.</span><span class="sxs-lookup"><span data-stu-id="3e8da-485"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3e8da-486">Cette méthode accepte les objets répertoriés ci-dessus pour le `builder` paramètre.</span><span class="sxs-lookup"><span data-stu-id="3e8da-486">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="3e8da-487">Pour plus d’informations, consultez le <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> opérateurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-487">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="3e8da-488">La méthode équivalente pour cet opérateur est <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3e8da-488">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3e8da-489">L’exemple suivant crée une grammaire de reconnaissance vocale capable de reconnaître les deux expressions, « faire arrière-plan *couleur*» et « en arrière-plan la valeur *couleur*», où *couleur* est sélectionné à partir d’un jeu de couleurs.</span><span class="sxs-lookup"><span data-stu-id="3e8da-489">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3e8da-490">Différents types sont utilisés pour générer la grammaire finale, tel que [chaîne](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, et <xref:System.Speech.Recognition.GrammarBuilder> objets.</span><span class="sxs-lookup"><span data-stu-id="3e8da-490">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e8da-491">Convertit un autre type en un <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-491">Converts another type to a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-492">Conversion implicite crée une nouvelle instance de <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-492">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3e8da-493">Vous pouvez effectuer un cast de chacune des classes suivantes à un <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-493">You can cast each of the following classes to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3e8da-494">Chacune des conversions implicites est équivalente à l’appel du constructeur.</span><span class="sxs-lookup"><span data-stu-id="3e8da-494">Each of the implicit casts is equivalent to calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="3e8da-495">Ensemble des alternatives à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-495">The set of alternatives to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-496">Convertit un objet <see cref="T:System.Speech.Recognition.Choices" /> en un objet <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-496">Converts a <see cref="T:System.Speech.Recognition.Choices" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e8da-497">Objet <see cref="T:System.Speech.Recognition.Choices" /> converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-497">The converted <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-498">Conversion implicite crée une nouvelle instance de <xref:System.Speech.Recognition.GrammarBuilder>. Cet opérateur de conversion est équivalent à l’appel <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> et en spécifiant `choices` pour le `alternateChoices`.</span><span class="sxs-lookup"><span data-stu-id="3e8da-498">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `choices` for the `alternateChoices`.</span></span>  
  
 <span data-ttu-id="3e8da-499">La méthode équivalente pour cet opérateur est <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3e8da-499">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3e8da-500">L’exemple suivant crée une grammaire de reconnaissance vocale capable de reconnaître une réponse à un « Oui » ou « non » question.</span><span class="sxs-lookup"><span data-stu-id="3e8da-500">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="3e8da-501">L’opérateur de conversion implicite est utilisé dans la construction d’un <xref:System.Speech.Recognition.SemanticResultValue> à partir de l’objet une <xref:System.Speech.Recognition.Choices> objet, dans la construction d’un <xref:System.Speech.Recognition.Choices> objet à partir de deux <xref:System.Speech.Recognition.SemanticResultValue> objets et dans la construction d’un <xref:System.Speech.Recognition.Grammar> objet à partir d’un <xref:System.Speech.Recognition.SemanticResultKey> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-501">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultKey semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultKey semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticKey As SemanticResultKey) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultKey ^ semanticKey);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticKey" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="semanticKey">
          <span data-ttu-id="3e8da-502">Touche sémantique à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-502">The semantic key to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-503">Convertit un objet <see cref="T:System.Speech.Recognition.SemanticResultKey" /> en un objet <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-503">Converts a <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e8da-504">Objet <see cref="T:System.Speech.Recognition.SemanticResultKey" /> converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-504">The converted <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-505">Conversion implicite crée une nouvelle instance de <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-505">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3e8da-506">Cet opérateur de conversion est équivalent à l’appel <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> et en spécifiant `semanticKey` pour le `key`.</span><span class="sxs-lookup"><span data-stu-id="3e8da-506">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticKey` for the `key`.</span></span>  
  
 <span data-ttu-id="3e8da-507">La méthode équivalente pour cet opérateur est <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3e8da-507">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3e8da-508">L’exemple suivant crée une grammaire de reconnaissance vocale capable de reconnaître une réponse à un « Oui » ou « non » question.</span><span class="sxs-lookup"><span data-stu-id="3e8da-508">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="3e8da-509">L’opérateur de conversion implicite est utilisé dans la construction d’un <xref:System.Speech.Recognition.SemanticResultValue> à partir de l’objet une <xref:System.Speech.Recognition.Choices> objet, dans la construction d’un <xref:System.Speech.Recognition.Choices> objet à partir de deux <xref:System.Speech.Recognition.SemanticResultValue> objets et dans la construction d’un <xref:System.Speech.Recognition.Grammar> objet à partir d’un <xref:System.Speech.Recognition.SemanticResultKey> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-509">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultValue semanticValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultValue semanticValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticValue As SemanticResultValue) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultValue ^ semanticValue);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticValue" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="semanticValue">
          <span data-ttu-id="3e8da-510">Objet <see cref="T:System.Speech.Recognition.SemanticResultValue" /> à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-510">The <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-511">Convertit un objet <see cref="T:System.Speech.Recognition.SemanticResultValue" /> en un objet <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-511">Converts a <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e8da-512">Objet <see cref="T:System.Speech.Recognition.SemanticResultValue" /> converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-512">The converted <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-513">Conversion implicite crée une nouvelle instance de <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-513">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3e8da-514">Cet opérateur de conversion est équivalent à l’appel <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> et en spécifiant `semanticValue` pour le `value`.</span><span class="sxs-lookup"><span data-stu-id="3e8da-514">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticValue` for the `value`.</span></span>  
  
 <span data-ttu-id="3e8da-515">La méthode équivalente pour cet opérateur est <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3e8da-515">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3e8da-516">L’exemple suivant crée une grammaire de reconnaissance vocale capable de reconnaître une réponse à un « Oui » ou « non » question.</span><span class="sxs-lookup"><span data-stu-id="3e8da-516">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="3e8da-517">L’opérateur de conversion implicite est utilisé dans la construction d’un <xref:System.Speech.Recognition.SemanticResultValue> à partir de l’objet une <xref:System.Speech.Recognition.Choices>objet, dans la construction d’un <xref:System.Speech.Recognition.Choices> objet à partir de deux <xref:System.Speech.Recognition.SemanticResultValue> objets et dans la construction d’un <xref:System.Speech.Recognition.Grammar> objet à partir d’un <xref:System.Speech.Recognition.SemanticResultKey> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-517">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices>object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3e8da-518">Chaîne à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-518">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e8da-519">Convertit une chaîne en objet <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-519">Converts a string to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e8da-520">Chaîne convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e8da-520">The converted string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e8da-521">Conversion implicite crée une nouvelle instance de <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3e8da-521">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3e8da-522">Cet opérateur de conversion est équivalent à l’appel <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> et en spécifiant les mêmes `phrase`.</span><span class="sxs-lookup"><span data-stu-id="3e8da-522">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying the same `phrase`.</span></span>  
  
 <span data-ttu-id="3e8da-523">La méthode équivalente pour cet opérateur est <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3e8da-523">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3e8da-524">L’exemple suivant utilise <xref:System.Speech.Recognition.GrammarBuilder> et <xref:System.Speech.Recognition.Choices> objets pour construire une grammaire qui puisse reconnaître une des deux expressions, « faire arrière-plan *colorChoice*» ou « en arrière-plan la valeur *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3e8da-524">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3e8da-525">Après avoir créé une liste de valeurs acceptables pour *colorChoice* à l’aide un <xref:System.Speech.Recognition.Choices> de l’objet, l’exemple initialise deux <xref:System.Speech.Recognition.GrammarBuilder> objets, `makePhrase` et `setPhrase`, à l’aide de la conversion implicite de chaîne objets.</span><span class="sxs-lookup"><span data-stu-id="3e8da-525">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using implicit conversion from string objects.</span></span>  
  
 <span data-ttu-id="3e8da-526">L’exemple crée enfin un <xref:System.Speech.Recognition.Grammar> de l’objet à partir d’un <xref:System.Speech.Recognition.Choices> objet converti en un <xref:System.Speech.Recognition.GrammarBuilder> objet.</span><span class="sxs-lookup"><span data-stu-id="3e8da-526">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
  </Members>
</Type>