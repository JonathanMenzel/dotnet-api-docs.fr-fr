<Type Name="PrefixEndpointAddressMessageFilter" FullName="System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="82e1feb0e4f8dba4417f1e2b6f362b6275174fa1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30518583" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PrefixEndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrefixEndpointAddressMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class PrefixEndpointAddressMessageFilter&#xA;Inherits MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrefixEndpointAddressMessageFilter : System::ServiceModel::Dispatcher::MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="eb808-101">Représente une requête qui vérifie si un message correspond à un EndpointAddress à l’aide de la *correspondance sur le préfixe le plus long* pour le composant URI.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb808-101">Represents a query that tests whether a message matches an EndpointAddress using a *Longest-Prefix Match* for the URI component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb808-102">Objet <xref:System.ServiceModel.EndpointAddress> inclut un URI et une collection facultative d'en-têtes d'adressage.</span><span class="sxs-lookup"><span data-stu-id="eb808-102">An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers.</span></span> <span data-ttu-id="eb808-103">Les en-têtes d'adressage et de message sont rendus canoniques pour effectuer une comparaison d'égalité.</span><span class="sxs-lookup"><span data-stu-id="eb808-103">The addressing and message headers are canonicalized to be compared for equality.</span></span> <span data-ttu-id="eb808-104">Si un paramètre apparaît plusieurs fois dans une <xref:System.ServiceModel.EndpointAddress>, l'en-tête correspondant doit apparaître au moins autant de fois dans le message.</span><span class="sxs-lookup"><span data-stu-id="eb808-104">If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.</span></span>  
  
 <span data-ttu-id="eb808-105">Ce filtre effectue la même requête en tant que <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>, sauf que le test pour qu’un message correspond à une adresse de point de terminaison est terminé un *correspondance du préfixe le plus long*.</span><span class="sxs-lookup"><span data-stu-id="eb808-105">This filter performs the same query as <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>, except that the test for whether a message matches an endpoint address is done by a *Longest-Prefix Match*.</span></span> <span data-ttu-id="eb808-106">Cela signifie que l'URI spécifié dans le filtre n'a pas à correspondre exactement à l'URI du message, mais doit être contenu dans cet URI en tant que préfixe.</span><span class="sxs-lookup"><span data-stu-id="eb808-106">This means that the URI specified in the filter does not have to match the message's URI exactly, but must be contained in that URI as a prefix.</span></span> <span data-ttu-id="eb808-107">Par exemple, si un filtre spécifie l'adresse « www.foo.com » et qu'un message est adressé à « www.foo.com/customerA », alors la partie URI de la condition de demande de filtre sera satisfaite.</span><span class="sxs-lookup"><span data-stu-id="eb808-107">For example, if a filter specifies the address "www.foo.com", and a message is addressed to "www.foo.com/customerA", then the URI part of the filter query condition will be met.</span></span> <span data-ttu-id="eb808-108">Toutefois, la partie en-tête de la demande de filtre doit encore être remplie.</span><span class="sxs-lookup"><span data-stu-id="eb808-108">However, the header portion of the filter query still has to be done.</span></span>  
  
 <span data-ttu-id="eb808-109">IIS (Internet Information Services) et le système de fichiers sous-jacent (NTFS ou FAT) ne sont pas sensibles à la casse.</span><span class="sxs-lookup"><span data-stu-id="eb808-109">Internet Information Services (IIS) and the underlying file system (NTFS or FAT) are case-insensitive.</span></span> <span data-ttu-id="eb808-110">Les comparaisons URI effectuées par cette classe ne sont pas sensibles à la casse non plus.</span><span class="sxs-lookup"><span data-stu-id="eb808-110">URI comparisons done by this class are also case-insensitive.</span></span> <span data-ttu-id="eb808-111">Ainsi, par exemple, http://www.microsoft.com est évalué comme équivalent à http://WWW.microsoft.com.</span><span class="sxs-lookup"><span data-stu-id="eb808-111">So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eb808-112">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrefixEndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="eb808-113">
            <see cref="T:System.ServiceModel.EndpointAddress" /> par rapport à laquelle les messages sont testés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-113">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb808-114">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-114">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb808-115">
            <paramref name="address" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-115">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, includeHostNameInComparison As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrefixEndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address, bool includeHostNameInComparison);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="includeHostNameInComparison" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="eb808-116">
            <see cref="T:System.ServiceModel.EndpointAddress" /> par rapport à laquelle les messages sont testés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-116">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span>
          </span>
        </param>
        <param name="includeHostNameInComparison">
          <span data-ttu-id="eb808-117">
            <see langword="true" /> si le nom d'hôte est inclus dans la comparaison de l'adresse du point de terminaison ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-117">
              <see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb808-118">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb808-119">Si un service Web est installé sur votre ordinateur local, il existe de nombreuses méthodes équivalentes pour le référencer, y compris les suivantes :</span><span class="sxs-lookup"><span data-stu-id="eb808-119">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="eb808-120">http://[nom-de-mon-ordinateur]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="eb808-120">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="eb808-121">http://[nom-de-mon-ordinateur].[ma-société].com/foo.svc.</span><span class="sxs-lookup"><span data-stu-id="eb808-121">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="eb808-122">Si la valeur du paramètre `includeHostNameInComparison` est `false`, les URI ci-dessus résolvent tous au même point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="eb808-122">If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb808-123">
            <paramref name="address" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-123">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ Address { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb808-124">Obtient l'adresse de point de terminaison par rapport à laquelle le <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> teste les messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-124">Gets the Endpoint Address that the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> tests messages against.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb808-125">
            <see cref="T:System.ServiceModel.EndpointAddress" /> par rapport à laquelle le <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> teste les messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-125">The <see cref="T:System.ServiceModel.EndpointAddress" /> that the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> tests messages against.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData">
          <span data-ttu-id="eb808-126">Données associées aux filtres de la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-126">Data associated with the filters in the table.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="eb808-127">Crée une nouvelle table de filtres qui teste un message par rapport à plusieurs adresses de point de terminaison adresse simultanément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-127">Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb808-128">Objet qui implémente l'interface <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> qui peut contenir des <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />s avec <paramref name="FilterData" /> associées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-128">An object that implements the <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interface that can contain <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />s with associated <paramref name="FilterData" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb808-129">La méthode retourne une instance de <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> optimisée pour tester des points de terminaison de message spécifiques.</span><span class="sxs-lookup"><span data-stu-id="eb808-129">The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints.</span></span>  
  
 <span data-ttu-id="eb808-130">Cette méthode est destinée à être utilisée par <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="eb808-130">This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeHostNameInComparison">
      <MemberSignature Language="C#" Value="public bool IncludeHostNameInComparison { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostNameInComparison" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeHostNameInComparison As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostNameInComparison { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb808-131">Obtient une valeur qui indique si le nom d'hôte est inclus dans la comparaison de l'adresse du point de terminaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-131">Gets a value that indicates whether the host name is included in the endpoint address comparison.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb808-132">
            <see langword="true" /> si le nom d'hôte est inclus dans la comparaison de l'adresse du point de terminaison ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-132">
              <see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb808-133">Si un service Web est installé sur votre ordinateur local, il existe de nombreuses méthodes équivalentes pour le référencer, y compris les suivantes :</span><span class="sxs-lookup"><span data-stu-id="eb808-133">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="eb808-134">http://[nom-de-mon-ordinateur]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="eb808-134">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="eb808-135">http://[nom-de-mon-ordinateur].[ma-société].com/foo.svc.</span><span class="sxs-lookup"><span data-stu-id="eb808-135">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="eb808-136">La valeur par défaut de cette propriété est `false`, les URI ci-dessus résolvent donc tous au même point de terminaison, sauf si vous modifiez cette propriété.</span><span class="sxs-lookup"><span data-stu-id="eb808-136">The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eb808-137">Vérifie si un message ou un message mis en mémoire tampon correspond aux critères du filtre de point de terminaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-137">Tests whether a message or buffered message satisfies the criteria of the endpoint filter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb808-138">Les deux surcharges de cette méthode sont équivalentes, car ce filtre examine uniquement l'adresse et pas le corps du message, pour établir une correspondance sur le préfixe le plus long, puis les en-têtes.</span><span class="sxs-lookup"><span data-stu-id="eb808-138">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="eb808-139">Objet <see cref="T:System.ServiceModel.Channels.Message" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-139">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb808-140">Vérifie si un message correspond à l'adresse de point de terminaison spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-140">Tests whether a message satisfies the specified endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb808-141">
            <see langword="true" /> si l'objet <see cref="T:System.ServiceModel.Channels.Message" /> correspond à l'adresse de point de terminaison spécifiée dans le filtre ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-141">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the endpoint address specified in the filter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb808-142">Les deux surcharges de cette méthode sont équivalentes, car ce filtre examine uniquement l'adresse et pas le corps du message, pour établir une correspondance sur le préfixe le plus long, puis les en-têtes.</span><span class="sxs-lookup"><span data-stu-id="eb808-142">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb808-143">
            <paramref name="message" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-143">
              <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="eb808-144">Objet <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-144">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb808-145">Vérifie si un message mis en mémoire tampon correspond à l'adresse de point de terminaison spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-145">Tests whether a buffered message satisfies the specified endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb808-146">
            <see langword="true" /> si l'objet <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> correspond à l'adresse de point de terminaison ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-146">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the endpoint address; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb808-147">Les deux surcharges de cette méthode sont équivalentes, car ce filtre examine uniquement l'adresse et pas le corps du message, pour établir une correspondance sur le préfixe le plus long, puis les en-têtes.</span><span class="sxs-lookup"><span data-stu-id="eb808-147">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb808-148">
            <paramref name="messageBuffer" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb808-148">
              <paramref name="messageBuffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>