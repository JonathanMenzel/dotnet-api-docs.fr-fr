<Type Name="IOperationInvoker" FullName="System.ServiceModel.Dispatcher.IOperationInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b0a2f00ea9c6966297f977571140e1f0ed068b3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IOperationInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationInvoker" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IOperationInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOperationInvoker" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOperationInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bd520-101">Déclare les méthodes qui prennent un objet et un tableau de paramètres extraits d'un message, appellent une méthode sur cet objet avec ces paramètres et retournent les valeurs de retour et les paramètres de sortie de la méthode.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd520-101">Declares methods that take an object and an array of parameters extracted from a message, invoke a method on that object with those parameters, and return the method's return value and output parameters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd520-102">Implémentez l'interface <xref:System.ServiceModel.Dispatcher.IOperationInvoker> pour contrôler la conversion d'un objet et d'un tableau de paramètres non typés en un appel de méthode fortement typé sur cet objet.</span><span class="sxs-lookup"><span data-stu-id="bd520-102">Implement the <xref:System.ServiceModel.Dispatcher.IOperationInvoker> interface to control the conversion from an untyped object and array of parameters to a strongly-typed method call on that object.</span></span> <span data-ttu-id="bd520-103">Elle dispose d'une méthode <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> synchrone, qui prend une instance et un ensemble d'entrées de type objet et retourne un objet et ensemble de sorties de type objet.</span><span class="sxs-lookup"><span data-stu-id="bd520-103">It has a synchronous <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> method, which takes an instance and set of inputs of type object and returns an object and a set of outputs of type object.</span></span> <span data-ttu-id="bd520-104">Elle dispose également d'une variante <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A> et <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd%2A>.</span><span class="sxs-lookup"><span data-stu-id="bd520-104">It also has a <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A> and <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd%2A> variant.</span></span>  <span data-ttu-id="bd520-105">La propriété <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A> spécifie si la méthode synchrone ou asynchrone doit être utilisée.</span><span class="sxs-lookup"><span data-stu-id="bd520-105">The <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A> property specifies whether the synchronous or asynchronous method should be used.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllocateInputs">
      <MemberSignature Language="C#" Value="public object[] AllocateInputs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] AllocateInputs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs" />
      <MemberSignature Language="VB.NET" Value="Public Function AllocateInputs () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ AllocateInputs();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd520-106">Retourne un <see cref="T:System.Array" /> d'objets de paramètre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-106">Returns an <see cref="T:System.Array" /> of parameter objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd520-107">Paramètres qui seront utilisés comme arguments de l’opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-107">The parameters that are to be used as arguments to the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd520-108">Implémentez ceci pour retourner un tableau de paramètres pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="bd520-108">Implement this to return an array of parameters for the operation.</span></span> <span data-ttu-id="bd520-109">Ce tableau est rempli par le formateur et retourné au demandeur lorsque <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="bd520-109">This array is filled by the formatter and passed back to the invoker when <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <threadsafe>
          <span data-ttu-id="bd520-110">Une implémentation de cette méthode doit allouer le tableau d’entrée sur chaque appel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-110">An implementation of this method must allocate the input array on every call.</span>
          </span>
          <span data-ttu-id="bd520-111">Retourne le même pour plusieurs appels peut entraîner un comportement imprévisible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-111">Returning the same array for multiple calls can result in unpredictable behavior.</span>
          </span>
        </threadsafe>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object instance, object[] inputs, out object[] outputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(object instance, object[] inputs, [out] object[]&amp; outputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (instance As Object, inputs As Object(), ByRef outputs As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ instance, cli::array &lt;System::Object ^&gt; ^ inputs, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % outputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="outputs" Type="System.Object[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="bd520-112">Objet à appeler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-112">The object to be invoked.</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="bd520-113">Entrées de la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-113">The inputs to the method.</span>
          </span>
        </param>
        <param name="outputs">
          <span data-ttu-id="bd520-114">Sorties de la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-114">The outputs from the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd520-115">Retourne un objet et un ensemble d'objets de sortie d'une instance et d'un ensemble d'objets d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-115">Returns an object and a set of output objects from an instance and set of input objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd520-116">Valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-116">The return value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeBegin">
      <MemberSignature Language="C#" Value="public IAsyncResult InvokeBegin (object instance, object[] inputs, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult InvokeBegin(object instance, object[] inputs, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeBegin (instance As Object, inputs As Object(), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ InvokeBegin(System::Object ^ instance, cli::array &lt;System::Object ^&gt; ^ inputs, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="bd520-117">Objet à appeler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-117">The object to be invoked.</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="bd520-118">Entrées de la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-118">The inputs to the method.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="bd520-119">Objet de rappel asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-119">The asynchronous callback object.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="bd520-120">Données d'état associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-120">Associated state data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd520-121">Implémentation asynchrone de la méthode <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-121">An asynchronous implementation of the <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd520-122">
            <see cref="T:System.IAsyncResult" /> utilisé pour terminer l'appel asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-122">A <see cref="T:System.IAsyncResult" /> used to complete the asynchronous call.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEnd">
      <MemberSignature Language="C#" Value="public object InvokeEnd (object instance, out object[] outputs, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeEnd(object instance, [out] object[]&amp; outputs, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeEnd (instance As Object, ByRef outputs As Object(), result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeEnd(System::Object ^ instance, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % outputs, IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="outputs" Type="System.Object[]&amp;" RefType="out" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="bd520-123">Objet appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-123">The object invoked.</span>
          </span>
        </param>
        <param name="outputs">
          <span data-ttu-id="bd520-124">Sorties de la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-124">The outputs from the method.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="bd520-125">Objet <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-125">The <see cref="T:System.IAsyncResult" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd520-126">Méthode End asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-126">The asynchronous end method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd520-127">Valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-127">The return value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronous">
      <MemberSignature Language="C#" Value="public bool IsSynchronous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronous" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronous { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd520-128">Obtient une valeur qui spécifie si la méthode <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> ou <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" /> est appelée par le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-128">Gets a value that specifies whether the <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> or <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" /> method is called by the dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd520-129">
            <see langword="true" /> si le répartiteur appelle l'opération synchrone ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd520-129">
              <see langword="true" /> if the dispatcher invokes the synchronous operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd520-130">Le demandeur par défaut distribue des messages à l'opération synchrone par défaut.</span><span class="sxs-lookup"><span data-stu-id="bd520-130">The default invoker dispatches messages to the synchronous operation by default.</span></span> <span data-ttu-id="bd520-131">Cette valeur est mise en cache par le répartiteur et ne doit donc pas changer au cours de la durée de vie de l'objet qui implémente <xref:System.ServiceModel.Dispatcher.IOperationInvoker>.</span><span class="sxs-lookup"><span data-stu-id="bd520-131">This value is cached by the dispatcher and therefore should not change over the lifetime of the object that implements <xref:System.ServiceModel.Dispatcher.IOperationInvoker>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>