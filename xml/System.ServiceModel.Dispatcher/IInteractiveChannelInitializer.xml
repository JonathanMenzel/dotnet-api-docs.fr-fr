<Type Name="IInteractiveChannelInitializer" FullName="System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e764d8c47caf6ddf0e2748dedaba492a73bc67b1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30517463" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInteractiveChannelInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInteractiveChannelInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInteractiveChannelInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInteractiveChannelInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="48a1e-101">Définit les méthodes qui permettent à une application cliente d'afficher une interface utilisateur pour rassembler des informations d'identité avant de créer le canal.</span>
      <span class="sxs-lookup">
        <span data-stu-id="48a1e-101">Defines the methods that enable a client application to display a user interface to collect identity information prior to creating the channel.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48a1e-102">Implémentez l'interface <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> pour permettre à une application cliente d'afficher une interface utilisateur autorise l'utilisateur de l'application à créer ou sélectionner les informations d'identification avant d'ouvrir un canal.</span><span class="sxs-lookup"><span data-stu-id="48a1e-102">Implement the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> interface to enable a client application to display a user interface that enables the user of the application to create or select the credentials prior to opening a channel.</span></span>  
  
 <span data-ttu-id="48a1e-103">Pour implémenter <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, exécutez les étapes suivantes dans <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType> :</span><span class="sxs-lookup"><span data-stu-id="48a1e-103">To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:</span></span>  
  
1.  <span data-ttu-id="48a1e-104">Invitez l'utilisateur et obtenez des <xref:System.Net.NetworkCredential?displayProperty=nameWithType>appropriées.</span><span class="sxs-lookup"><span data-stu-id="48a1e-104">Prompt the user and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.</span></span>  
  
2.  <span data-ttu-id="48a1e-105">Ajoutez un objet de paramètre de canal personnalisé à la collection retournée par la méthode <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> sur l'objet <xref:System.ServiceModel.IClientChannel> avec un paramètre de type <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="48a1e-105">Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>.</span></span> <span data-ttu-id="48a1e-106">Cet objet de paramètre de canal est utilisé par le <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> personnalisé pour établir les jetons de sécurité du canal.</span><span class="sxs-lookup"><span data-stu-id="48a1e-106">This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> to establish the security tokens for the channel.</span></span>  
  
3.  <span data-ttu-id="48a1e-107">Retour.</span><span class="sxs-lookup"><span data-stu-id="48a1e-107">Return.</span></span>  
  
 <span data-ttu-id="48a1e-108">Pour insérer <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> :</span><span class="sxs-lookup"><span data-stu-id="48a1e-108">To insert <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>:</span></span>  
  
1.  <span data-ttu-id="48a1e-109">Substituez la méthode <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType> sur la classe <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="48a1e-109">Override the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType> class.</span></span>  
  
2.  <span data-ttu-id="48a1e-110">Dans cette méthode, déterminez si le point de terminaison requiert un <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>. Si c'est le cas, ajoutez l'<xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> à la collection <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="48a1e-110">In that method, determine whether the endpoint requires an <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> and if so, add the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType> collection.</span></span>  
  
 <span data-ttu-id="48a1e-111">Les développeurs d'applications peuvent utiliser un <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>inséré de deux façons.</span><span class="sxs-lookup"><span data-stu-id="48a1e-111">There are two ways application developers can make use of an inserted <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>.</span></span> <span data-ttu-id="48a1e-112">L’application cliente peut appeler <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> ou <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (ou une version asynchrone) avant d’ouvrir le canal (le *explicite* approche) ou simplement appeler la première opération (le *implicite* approche).</span><span class="sxs-lookup"><span data-stu-id="48a1e-112">The client application can call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (or an asynchronous version) prior to opening the channel (the *explicit* approach) or simply call the first operation (the *implicit* approach).</span></span>  
  
 <span data-ttu-id="48a1e-113">Lors de l'utilisation de l'approche implicite, l'application doit appeler la première opération sur une extension <xref:System.ServiceModel.ClientBase%601> ou <xref:System.ServiceModel.IClientChannel>.</span><span class="sxs-lookup"><span data-stu-id="48a1e-113">If using the implicit approach, the application must call the first operation on an <xref:System.ServiceModel.ClientBase%601> or <xref:System.ServiceModel.IClientChannel> extension.</span></span> <span data-ttu-id="48a1e-114">Si elle appelle une autre opération que la première, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="48a1e-114">If it calls anything other than the first operation, an exception is thrown.</span></span>  
  
 <span data-ttu-id="48a1e-115">Lors de l'utilisation de l'approche explicite, l'application doit exécuter les étapes suivantes, dans l'ordre :</span><span class="sxs-lookup"><span data-stu-id="48a1e-115">If using the explicit approach, the application must perform the following steps in order:</span></span>  
  
1.  <span data-ttu-id="48a1e-116">Appelez <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> ou <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (ou une version asynchrone).</span><span class="sxs-lookup"><span data-stu-id="48a1e-116">Call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (or an asynchronous version).</span></span>  
  
2.  <span data-ttu-id="48a1e-117">Lorsque les initialiseurs ont retourné, appelez la méthode <xref:System.ServiceModel.ICommunicationObject.Open%2A> sur l'objet <xref:System.ServiceModel.IClientChannel> ou sur l'objet <xref:System.ServiceModel.IClientChannel> retourné par la propriété <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="48a1e-117">When the initializers have returned, call either the <xref:System.ServiceModel.ICommunicationObject.Open%2A> method on the <xref:System.ServiceModel.IClientChannel> object or on the <xref:System.ServiceModel.IClientChannel> object returned from the <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="48a1e-118">Appelez les opérations.</span><span class="sxs-lookup"><span data-stu-id="48a1e-118">Call operations.</span></span>  
  
 <span data-ttu-id="48a1e-119">Il est recommandé que le traitement du contrôle des applications de production de qualité de l'interface utilisateur s'effectue en adoptant l'approche explicite.</span><span class="sxs-lookup"><span data-stu-id="48a1e-119">It is recommended that production-quality applications control of the user-interface process by adopting the explicit approach.</span></span>  
  
 <span data-ttu-id="48a1e-120">Les applications qui utilisent l’approche implicite appellent les initialiseurs d’interface utilisateur, mais si l’utilisateur de l’application ne répond pas avant la fin du délai d’attente d’envoi de la liaison, une exception est levée lorsque l’interface utilisateur retourne.</span><span class="sxs-lookup"><span data-stu-id="48a1e-120">Applications that use the implicit approach invoke the user-interface initializers, but if the user of the application fails to respond within the send timeout period of the binding, an exception is thrown when the user interface returns.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.ServiceModel.IClientChannel channel, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (channel As IClientChannel, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(System::ServiceModel::IClientChannel ^ channel, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="channel">
          <span data-ttu-id="48a1e-121">Canal client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a1e-121">The client channel.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="48a1e-122">Objet de rappel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a1e-122">The callback object.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="48a1e-123">Toutes données d'état.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a1e-123">Any state data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48a1e-124">Appel asynchrone pour commencer l'utilisation d'une interface utilisateur pour obtenir les informations d'identification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a1e-124">An asynchronous call to begin using a user interface to obtain credential information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48a1e-125">
            <see cref="T:System.IAsyncResult" /> à utiliser pour rappeler lorsque le traitement est terminé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a1e-125">The <see cref="T:System.IAsyncResult" /> to use to call back when processing has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48a1e-126">Pour implémenter <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, exécutez les étapes suivantes dans <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType> :</span><span class="sxs-lookup"><span data-stu-id="48a1e-126">To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:</span></span>  
  
1.  <span data-ttu-id="48a1e-127">Invitez l'utilisateur de la façon que vous jugez appropriée et obtenez des <xref:System.Net.NetworkCredential?displayProperty=nameWithType> appropriées.</span><span class="sxs-lookup"><span data-stu-id="48a1e-127">Prompt the user in what way you see fit and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.</span></span>  
  
2.  <span data-ttu-id="48a1e-128">Ajoutez un objet de paramètre de canal personnalisé à la collection retournée par la méthode <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> sur l'objet <xref:System.ServiceModel.IClientChannel> avec un paramètre de type <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="48a1e-128">Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>.</span></span> <span data-ttu-id="48a1e-129">Cet objet de paramètre de canal est utilisé par le <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> personnalisé pour établir les jetons de sécurité du canal.</span><span class="sxs-lookup"><span data-stu-id="48a1e-129">This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> to establish the security tokens for the channel.</span></span>  
  
3.  <span data-ttu-id="48a1e-130">Retour.</span><span class="sxs-lookup"><span data-stu-id="48a1e-130">Return.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="48a1e-131">
            <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a1e-131">The <see cref="T:System.IAsyncResult" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48a1e-132">Appelé lorsque <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> est terminé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a1e-132">Called when the <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> has finished.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>