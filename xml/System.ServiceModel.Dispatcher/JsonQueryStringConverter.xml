<Type Name="JsonQueryStringConverter" FullName="System.ServiceModel.Dispatcher.JsonQueryStringConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="248ec8625d66a7ee38325416efb7548324a9f81a" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34313796" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JsonQueryStringConverter : System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonQueryStringConverter extends System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonQueryStringConverter&#xA;Inherits QueryStringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonQueryStringConverter : System::ServiceModel::Dispatcher::QueryStringConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.QueryStringConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d72bb-101">Cette classe convertit une valeur de paramètre vers et depuis un objet JSON (JavaScript Object Notation).</span>
      <span class="sxs-lookup">
        <span data-stu-id="d72bb-101">This class converts a parameter value to and from a JavaScript Object Notation (JSON).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d72bb-102">Des paramètres peuvent être spécifiés dans une chaîne de requête JSON dans une URL.</span><span class="sxs-lookup"><span data-stu-id="d72bb-102">Parameters can be specified in a JSON query string within a URL.</span></span> <span data-ttu-id="d72bb-103">Cette classe contrôle comment les paramètres de chaîne de requête JSON sont mappés vers et depuis les paramètres d'une opération de service lorsque <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> est utilisé pour traiter des requêtes HTTP de clients ASP.NET AJAX basés sur navigateur.</span><span class="sxs-lookup"><span data-stu-id="d72bb-103">This class controls how JSON query string parameters are mapped to and from a service operation's parameters when the <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> is used to process HTTP requests from browser-based ASP.NET AJAX clients.</span></span>  
  
 <span data-ttu-id="d72bb-104">Cette classe est utilisée en interne par Windows Communication Foundation (WCF)<xref:System.ServiceModel.Description.WebScriptEnablingBehavior> classe pour les points de terminaison configurés pour accepter les demandes HTTP GET/POST avec des paramètres codés dans la chaîne de requête URI.</span><span class="sxs-lookup"><span data-stu-id="d72bb-104">This class is used internally by the Windows Communication Foundation (WCF)<xref:System.ServiceModel.Description.WebScriptEnablingBehavior> class for endpoints configured to accept HTTP GET/POST requests with parameters encoded in the URI query string.</span></span> <span data-ttu-id="d72bb-105">Cette classe est utilisée pour des conversions entre objets CLR et les valeurs des paramètres de demande d'opérations individuelles dans la chaîne de requête URI.</span><span class="sxs-lookup"><span data-stu-id="d72bb-105">This class is used to convert between CLR objects and the individual operation request parameter values in the URI query string.</span></span> <span data-ttu-id="d72bb-106">Contrairement à son type de base, cette classe prend en charge à la fois des valeurs de types de base et complexes.</span><span class="sxs-lookup"><span data-stu-id="d72bb-106">Unlike its base type, this class supports values of both primitive and complex types.</span></span>  
  
 <span data-ttu-id="d72bb-107"><xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter> dérive de <xref:System.ServiceModel.Dispatcher.QueryStringConverter> et prend en charge les types suivants :</span><span class="sxs-lookup"><span data-stu-id="d72bb-107"><xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter> derives from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> and supports the following types:</span></span>  
  
-   <xref:System.Byte>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
-   <xref:System.Single>  
  
-   <xref:System.Double>  
  
-   <xref:System.Char>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.String>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.Guid>  
  
-   <span data-ttu-id="d72bb-108"><xref:System.Array> de type <xref:System.Byte>.</span><span class="sxs-lookup"><span data-stu-id="d72bb-108">An <xref:System.Array> of type <xref:System.Byte></span></span>  
  
-   <xref:System.Uri>  
  
-   <xref:System.Object>  
  
 <span data-ttu-id="d72bb-109">Contrairement à son type de base, ce convertisseur peut gérer tout type qui adhère au modèle de contrat de données.</span><span class="sxs-lookup"><span data-stu-id="d72bb-109">Unlike its base type, this converter can handle any type adhering to the Data Contract model.</span></span> <span data-ttu-id="d72bb-110">Le convertisseur substitue <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> de sorte que chaque paramètre est sérialisé sur JSON à l'aide du <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> par défaut et d'un enregistreur JSON XML configuré pour utiliser l'encodage UTF-8.</span><span class="sxs-lookup"><span data-stu-id="d72bb-110">The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding.</span></span> <span data-ttu-id="d72bb-111">`null` les paramètres sont retournés en tant que `null`.</span><span class="sxs-lookup"><span data-stu-id="d72bb-111">`null` parameters are returned as `null`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonQueryStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonQueryStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d72bb-112">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72bb-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public override bool CanConvert (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvert(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvert(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="d72bb-113">L'<see cref="T:System.Type" /> à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72bb-113">The <see cref="T:System.Type" /> to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d72bb-114">Obtient une valeur qui indique si un type CLR (Common Language Runtime) spécifié est un type connu pouvant être sérialisé et désérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72bb-114">Gets a value that indicates whether a Common Language Runtime (CLR) type specified is a known type that can be serialized and deserialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d72bb-115">
            <see langword="true" /> si le type peut être sérialisé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72bb-115">
              <see langword="true" /> if the type can be serialized; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d72bb-116">Cela vérifie si un type CLR peut être utilisé dans une chaîne de requête JSON.</span><span class="sxs-lookup"><span data-stu-id="d72bb-116">This checks whether a CLR type can be used in a JSON query string.</span></span> <span data-ttu-id="d72bb-117">Les types CLR qui peuvent être utilisés dans une telle chaîne sont uniquement ceux pris en charge par <xref:System.Runtime.Serialization.DataContractSerializer>.</span><span class="sxs-lookup"><span data-stu-id="d72bb-117">The CLR types that can be used in such a string are just those that are supported by <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d72bb-118">
            <paramref name="type" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72bb-118">The <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertStringToValue">
      <MemberSignature Language="C#" Value="public override object ConvertStringToValue (string parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertStringToValue(string parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertStringToValue (parameter As String, parameterType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertStringToValue(System::String ^ parameter, Type ^ parameterType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="d72bb-119">Le formulaire JSON de la valeur de paramètre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72bb-119">The JSON form of the parameter value.</span>
          </span>
        </param>
        <param name="parameterType">
          <span data-ttu-id="d72bb-120">La valeur <see cref="T:System.Type" /> requise pour désérialiser le paramètre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72bb-120">The <see cref="T:System.Type" /> to deserialize the parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d72bb-121">Désérialise les paramètres d'une chaîne de requête JSON (JavaScript Object Notation) sur un type CLR (Common Language Runtime) spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72bb-121">Deserializes a JavaScript Object Notation (JSON) query string parameter to a specified Common Language Runtime (CLR) type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d72bb-122">Une instance de type CLR en laquelle la valeur de paramètre a été convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72bb-122">An instance of the CLR type to which the parameter value was converted.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertValueToString">
      <MemberSignature Language="C#" Value="public override string ConvertValueToString (object parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ConvertValueToString(object parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertValueToString (parameter As Object, parameterType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ConvertValueToString(System::Object ^ parameter, Type ^ parameterType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="d72bb-123">Valeur du paramètre à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72bb-123">The parameter value to convert.</span>
          </span>
        </param>
        <param name="parameterType">
          <span data-ttu-id="d72bb-124">La valeur <see cref="T:System.Type" /> requise pour sérialiser le paramètre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72bb-124">The <see cref="T:System.Type" /> of the parameter to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d72bb-125">Sérialise un type de paramètre CLR (Common Language Runtime) selon une représentation JSON (JavaScript Objet Notation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72bb-125">Serializes a Common Language Runtime (CLR) parameter type to a JavaScript Object Notation (JSON) representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d72bb-126">Sérialisation du paramètre de chaîne de requête JSON de type CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72bb-126">The JSON query string parameter serialization of the CLR type.</span>
          </span>
          <span data-ttu-id="d72bb-127">
            <see langword="null" /> est retournée si le paramètre est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72bb-127">
              <see langword="null" /> is returned if the parameter is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d72bb-128">Le convertisseur substitue <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> de sorte que chaque paramètre est sérialisé sur JSON à l'aide du <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> par défaut et d'un enregistreur JSON XML configuré pour utiliser l'encodage UTF-8.</span><span class="sxs-lookup"><span data-stu-id="d72bb-128">The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding.</span></span> <span data-ttu-id="d72bb-129">Contrairement à son type de base, ce convertisseur peut gérer tout type qui adhère au modèle de contrat de données.</span><span class="sxs-lookup"><span data-stu-id="d72bb-129">Unlike its base type, this converter can handle any type adhering to the Data Contract model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d72bb-130">Considérez l'opération suivante.</span><span class="sxs-lookup"><span data-stu-id="d72bb-130">Consider the following operation.</span></span>  
  
```  
[WebGet]  
[OperationContract] public int GetOptionQuote(string ticker, DateTime dte, Option opt);  
```  
  
 <span data-ttu-id="d72bb-131">Cette opération produit une URL qui est une version encodée par URL des éléments suivants.</span><span class="sxs-lookup"><span data-stu-id="d72bb-131">This operation produces a URL that is a URL-encoded version of the following.</span></span>  
  
```  
http://localhost/quote.svc/GetOptionQuote?ticker="MSFT"&dte="\/Date(50067823)\/"&opt={"type":"call","strikePrice":"35"}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>