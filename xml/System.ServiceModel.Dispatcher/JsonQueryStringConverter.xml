<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="JsonQueryStringConverter.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52dfd6fa362e4123db7eb2d6f47bcb1e0bc29ad98.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2dfd6fa362e4123db7eb2d6f47bcb1e0bc29ad98</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>This class converts a parameter value to and from a JavaScript Object Notation (JSON).</source>
          <target state="translated">Cette classe convertit une valeur de paramètre vers et depuis un objet JSON (JavaScript Object Notation).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>Parameters can be specified in a JSON query string within a URL.</source>
          <target state="translated">Des paramètres peuvent être spécifiés dans une chaîne de requête JSON dans une URL.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>This class controls how JSON query string parameters are mapped to and from a service operation's parameters when the <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> is used to process HTTP requests from browser-based ASP.NET AJAX clients.</source>
          <target state="translated">Cette classe contrôle comment les paramètres de chaîne de requête JSON sont mappés vers et depuis les paramètres d'une opération de service lorsque <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> est utilisé pour traiter des requêtes HTTP de clients ASP.NET AJAX basés sur navigateur.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>This class is used internally by the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph><ph id="ph2">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> class for endpoints configured to accept HTTP GET/POST requests with parameters encoded in the URI query string.</source>
          <target state="translated">Cette classe est utilisée en interne par la classe <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph><ph id="ph2">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> pour les points de terminaison configurés pour accepter des requêtes HTTP GET/POST avec des paramètres encodés dans la chaîne de requête URI.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>This class is used to convert between CLR objects and the individual operation request parameter values in the URI query string.</source>
          <target state="translated">Cette classe est utilisée pour des conversions entre objets CLR et les valeurs des paramètres de demande d'opérations individuelles dans la chaîne de requête URI.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>Unlike its base type, this class supports values of both primitive and complex types.</source>
          <target state="translated">Contrairement à son type de base, cette classe prend en charge à la fois des valeurs de types de base et complexes.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter&gt;</ph> derives from <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt;</ph> and supports the following types:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter&gt;</ph> dérive de <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt;</ph> et prend en charge les types suivants :</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>An <ph id="ph1">&lt;xref:System.Array&gt;</ph> of type <ph id="ph2">&lt;xref:System.Byte&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Array&gt;</ph> de type <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>Unlike its base type, this converter can handle any type adhering to the Data Contract model.</source>
          <target state="translated">Contrairement à son type de base, ce convertisseur peut gérer tout type qui adhère au modèle de contrat de données.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>The converter overrides <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</ph> so that each parameter is serialized to JSON using the default <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> and a JSON XML Writer configured to use the UTF-8 encoding.</source>
          <target state="translated">Le convertisseur substitue <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</ph> de sorte que chaque paramètre est sérialisé sur JSON à l'aide du <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> par défaut et d'un enregistreur JSON XML configuré pour utiliser l'encodage UTF-8.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source><ph id="ph1">`null`</ph> parameters are returned as <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph> les paramètres sont retournés en tant que <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to verify.</source>
          <target state="translated">L'<ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> à vérifier.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>Gets a value that indicates whether a Common Language Runtime (CLR) type specified is a known type that can be serialized and deserialized.</source>
          <target state="translated">Obtient une valeur qui indique si un type CLR (Common Language Runtime) spécifié est un type connu pouvant être sérialisé et désérialisé.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the type can be serialized; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le type peut être sérialisé ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>This checks whether a CLR type can be used in a JSON query string.</source>
          <target state="translated">Cela vérifie si un type CLR peut être utilisé dans une chaîne de requête JSON.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>The CLR types that can be used in such a string are just those that are supported by <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</source>
          <target state="translated">Les types CLR qui peuvent être utilisés dans une telle chaîne sont uniquement ceux pris en charge par <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
          <source>The JSON form of the parameter value.</source>
          <target state="translated">Le formulaire JSON de la valeur de paramètre.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to deserialize the parameter to.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> requise pour désérialiser le paramètre.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
          <source>Deserializes a JavaScript Object Notation (JSON) query string parameter to a specified Common Language Runtime (CLR) type.</source>
          <target state="translated">Désérialise les paramètres d'une chaîne de requête JSON (JavaScript Object Notation) sur un type CLR (Common Language Runtime) spécifié.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
          <source>An instance of the CLR type to which the parameter value was converted.</source>
          <target state="translated">Une instance de type CLR en laquelle la valeur de paramètre a été convertie.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>The parameter value to convert.</source>
          <target state="translated">Valeur du paramètre à convertir.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the parameter to serialize.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> requise pour sérialiser le paramètre.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>Serializes a Common Language Runtime (CLR) parameter type to a JavaScript Object Notation (JSON) representation.</source>
          <target state="translated">Sérialise un type de paramètre CLR (Common Language Runtime) selon une représentation JSON (JavaScript Objet Notation).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>The JSON query string parameter serialization of the CLR type.</source>
          <target state="translated">Sérialisation du paramètre de chaîne de requête JSON de type CLR.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned if the parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> est retournée si le paramètre est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>The converter overrides <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</ph> so that each parameter is serialized to JSON using the default <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> and a JSON XML Writer configured to use the UTF-8 encoding.</source>
          <target state="translated">Le convertisseur substitue <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</ph> de sorte que chaque paramètre est sérialisé sur JSON à l'aide du <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> par défaut et d'un enregistreur JSON XML configuré pour utiliser l'encodage UTF-8.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>Unlike its base type, this converter can handle any type adhering to the Data Contract model.</source>
          <target state="translated">Contrairement à son type de base, ce convertisseur peut gérer tout type qui adhère au modèle de contrat de données.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>Consider the following operation.</source>
          <target state="translated">Considérez l'opération suivante.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>This operation produces a URL that is a URL-encoded version of the following.</source>
          <target state="translated">Cette opération produit une URL qui est une version encodée par URL des éléments suivants.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>