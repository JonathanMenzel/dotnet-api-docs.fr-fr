<Type Name="XPathMessageContext" FullName="System.ServiceModel.Dispatcher.XPathMessageContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dcc7aea8fcc1e662c3db1c6efdc7b0a63b9ed0e9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30519083" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XPathMessageContext : System.Xml.Xsl.XsltContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi XPathMessageContext extends System.Xml.Xsl.XsltContext" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
  <TypeSignature Language="VB.NET" Value="Public Class XPathMessageContext&#xA;Inherits XsltContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathMessageContext : System::Xml::Xsl::XsltContext" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Xsl.XsltContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Définit plusieurs fonctions XPath et mappages d'espaces de noms couramment utilisés lors de l'évaluation d'expressions XPath par rapport à des documents SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le moteur XPath prend entièrement en charge le contexte XPath et utilise la classe <xref:System.Xml.Xsl.XsltContext> du .NET Framework de la même façon que <xref:System.Xml.XPath.XPathNavigator> pour implémenter cette prise en charge. <xref:System.Xml.Xsl.XsltContext> est une classe abstraite qui permet aux développeurs d'implémenter des bibliothèques de fonctions XPath personnalisées et de déclarer des variables XPath. <xref:System.Xml.Xsl.XsltContext> est un <xref:System.Xml.XmlNamespaceManager> et contient donc également les mappages de préfixe d'espace de noms.  
  
 Le moteur de filtre implémente un <xref:System.Xml.Xsl.XsltContext> appelé <xref:System.ServiceModel.Dispatcher.XPathMessageContext>. <xref:System.ServiceModel.Dispatcher.XPathMessageContext> définit les fonctions personnalisées qui peuvent être utilisées dans des expressions XPath et déclare plusieurs mappages de préfixe de noms d'espace courants. Le tableau suivant répertorie les fonctions personnalisées définies par <xref:System.ServiceModel.Dispatcher.XPathMessageContext> qui peut être utilisé dans les expressions XPath.  
  
|Fonction XPath|Description |  
|--------------------|-----------------|  
|body|Retourne le nœud SOAP Body, quelle que soit la version SOAP (1.1. ou 1.2).|  
|en-tête|Retourne le nœud de l’en-tête SOAP, quelle que soit la version SOAP (1.1 ou 1.2).|  
|correlation-data|Prend une chaîne d’entrée et retourne la valeur de la propriété de message de corrélation associé.  « wsc instanceId » est une chaîne de réservée utilisée pour la corrélation basée sur le contexte.|  
|messageId|Retourne la valeur de l’en-tête MessageID WS-Addressing.|  
|relatesTo|Retourne la valeur de l’en-tête RelatesTo de WS-Addressing, quelle que soit la version (August2004 ou WSA 1.0).|  
|replyTo|Retourne la valeur de l’en-tête WS-Addressing ReplyTo, quelle que soit la version (August2004 ou WSA 1.0).|  
|de|Retourne la valeur de l’en-tête WS-Addressing à partir de, quelle que soit la version (August2004 ou WSA 1.0).|  
|faultTo|Retourne la valeur de l’en-tête FaultTo WS-Addressing, quelle que soit la version (August2004 ou WSA 1.0).|  
|par celle-ci :|Retourne la valeur de l’en-tête WS-Addressing pour le cas échéant, sinon il renvoie anonyme.|  
|action|Retourne la valeur de l’en-tête d’Action WS-Addressing.|  
|soap-uri|Retourne l’uri d’espace de noms SOAP.|  
|en-têtes avec acteur|Prend un uri SOAP acteur et retourne tous les en-têtes qui contiennent un acteur, quelle que soit la version SOAP (1.1 ou 1.2).|  
|Acteur|Retourne l’uri de SOAP acteur du premier nœud enfant, quelle que soit la version SOAP (1.1 ou 1.2).|  
|est obligatoire|Retourne le premier nœud enfant est obligatoire, quelle que soit la version SOAP (1.1 ou 1.2) ou non.|  
|is-actor-next|Retourne ou non l’uri SOAP acteur du premier nœud enfant joue le rôle suivant, quelle que soit la version SOAP (1.1 ou 1.2).|  
|is-actor-ultimate-receiver|Retourne ou non l’uri SOAP acteur du premier nœud enfant suppose que le rôle UltimateReceiver, quelle que soit la version SOAP (1.1 ou 1.2).|  
|date et heure|Accepte une chaîne de date d’entrée et retourne la valeur convertie en valeur double.|  
|duration|Accepte une chaîne de valeur timespan d’entrée et retourne la valeur sous la forme d’un nombre total de jours.|  
|UTC-maintenant|Retourne la valeur de <xref:System.DateTime.UtcNow%2A>.|  
  
 Le tableau suivant répertorie les préfixes d’espaces de noms par défaut qui sont déclarées par <xref:System.ServiceModel.Dispatcher.XPathMessageContext>.  
  
|Préfixe|Espace de noms|  
|------------|---------------|  
|s11|http://schemas.xmlsoap.org/soap/envelope|  
|s12|http://www.w3.org/2003/05/soap-envelope|  
|wsaAugust2004|http://schemas.xmlsoap.org/ws/2004/08/addressing|  
|wsa10|http://www.w3.org/2005/08/addressing|  
|sm|http://schemas.microsoft.com/serviceModel/2004/05/xpathfunctions|  
|tempuri|http://tempuri.org|  
|ser|http://schemas.microsoft.com/2003/10/Serialization|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée une instance de <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crée une instance de <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageContext (System.Xml.NameTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.NameTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor(System.Xml.NameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (table As NameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageContext(System::Xml::NameTable ^ table);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Xml.NameTable" />
      </Parameters>
      <Docs>
        <param name="table">Classe <see cref="T:System.Xml.NameTable" /> utilisée en interne pour stocker des chaînes.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" /> avec le <see cref="T:System.Xml.NameTable" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Plusieurs classes, <xref:System.Xml.XmlDocument>, <xref:System.Xml.XmlReader> celle-ci comprises, utilisent la classe <xref:System.Xml.NameTable> en interne pour stocker les noms des attributs et des éléments. Lorsqu'un nom d'élément ou d'attribut apparaît plusieurs fois dans un document XML, il n'est stocké qu'une seule fois dans le <xref:System.Xml.NameTable>. Les noms sont stockés sous la forme de types d'objets CLR. Ceci vous permet d'effectuer des comparaisons d'objets avec ces chaînes plutôt que des comparaisons de chaînes plus coûteuses.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareDocument">
      <MemberSignature Language="C#" Value="public override int CompareDocument (string baseUri, string nextBaseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 CompareDocument(string baseUri, string nextBaseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.CompareDocument(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CompareDocument (baseUri As String, nextBaseUri As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int CompareDocument(System::String ^ baseUri, System::String ^ nextBaseUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.String" />
        <Parameter Name="nextBaseUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">URI de base du premier document à comparer.</param>
        <param name="nextBaseUri">URI de base du deuxième document à comparer.</param>
        <summary>Compare les URI de base de deux documents en fonction de l'ordre dans lequel les documents ont été chargés par le processeur XSLT.</summary>
        <returns>Retourne toujours 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour pouvoir être utilisée, cette propriété doit être substituée dans une classe dérivée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveWhitespace">
      <MemberSignature Language="C#" Value="public override bool PreserveWhitespace (System.Xml.XPath.XPathNavigator node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool PreserveWhitespace(class System.Xml.XPath.XPathNavigator node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function PreserveWhitespace (node As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool PreserveWhitespace(System::Xml::XPath::XPathNavigator ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="node">Nœud d'espace blanc à préserver ou à supprimer dans le contexte actuel.</param>
        <summary>Évalue s'il faut conserver des nœuds d'espace blanc ou les supprimer du contexte donné.</summary>
        <returns>Retourne toujours <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour pouvoir être utilisée, cette propriété doit être substituée dans une classe dérivée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveFunction">
      <MemberSignature Language="C#" Value="public override System.Xml.Xsl.IXsltContextFunction ResolveFunction (string prefix, string name, System.Xml.XPath.XPathResultType[] argTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.Xsl.IXsltContextFunction ResolveFunction(string prefix, string name, valuetype System.Xml.XPath.XPathResultType[] argTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveFunction (prefix As String, name As String, argTypes As XPathResultType()) As IXsltContextFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::Xsl::IXsltContextFunction ^ ResolveFunction(System::String ^ prefix, System::String ^ name, cli::array &lt;System::Xml::XPath::XPathResultType&gt; ^ argTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.IXsltContextFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="argTypes" Type="System.Xml.XPath.XPathResultType[]" />
      </Parameters>
      <Docs>
        <param name="prefix">Préfixe de la fonction tel qu’il apparaît dans l’expression XPath.</param>
        <param name="name">Nom de la fonction.</param>
        <param name="argTypes">Tableau de types d’argument pour la fonction en cours de résolution. Ceci vous permet de faire un choix entre les méthodes portant le même nom (par exemple, méthodes surchargées).</param>
        <summary>Résout une référence de fonction et retourne un [T:System.Xml.Xsl.IXsltContextFunction](ms-help://MS.MSSDK.1033/MS.WinFXSDK.1033/cpref37/html/T_System_Xml_Xsl_IXsltContextFunction.htm) qui représente la fonction.</summary>
        <returns>[T:System.Xml.Xsl.IXsltContextFunction](ms-help://MS.MSSDK.1033/MS.WinFXSDK.1033/cpref37/html/T_System_Xml_Xsl_IXsltContextFunction.htm) qui représente la fonction.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le [T:System.Xml.Xsl.IXsltContextFunction](ms-help://MS.MSSDK.1033/MS.WinFXSDK.1033/cpref37/html/T_System_Xml_Xsl_IXsltContextFunction.htm) est utilisée au moment de l’exécution pour évaluer la fonction.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="argTypes" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveVariable">
      <MemberSignature Language="C#" Value="public override System.Xml.Xsl.IXsltContextVariable ResolveVariable (string prefix, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.Xsl.IXsltContextVariable ResolveVariable(string prefix, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveVariable(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveVariable (prefix As String, name As String) As IXsltContextVariable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::Xsl::IXsltContextVariable ^ ResolveVariable(System::String ^ prefix, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.IXsltContextVariable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Préfixe de la variable tel qu’il apparaît dans l’expression XPath.</param>
        <param name="name">Nom de la variable.</param>
        <summary>Résout une référence variable et retourne une <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> qui représente la variable.</summary>
        <returns>
          <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> qui représente la variable au moment de l'exécution.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Xsl.IXsltContextVariable> est utilisée au moment de l'exécution pour obtenir la valeur de la variable.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Whitespace">
      <MemberSignature Language="C#" Value="public override bool Whitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Whitespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageContext.Whitespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Whitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Whitespace { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique s'il faut inclure des nœuds d'espace blanc dans la sortie.</summary>
        <value>Retourne toujours <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour pouvoir être utilisée, cette propriété doit être substituée dans une classe dérivée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>