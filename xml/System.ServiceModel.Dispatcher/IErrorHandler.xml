<Type Name="IErrorHandler" FullName="System.ServiceModel.Dispatcher.IErrorHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1598e70fe551845ecee45c28edf60e852cf1f45b" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IErrorHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IErrorHandler" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IErrorHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IErrorHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IErrorHandler" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="32089-101">Permet à un implémenteur de contrôler le message d'erreur retourné à l'appelant et exécute éventuellement un traitement d'erreur personnalisé comme l'enregistrement dans le journal.</span>
      <span class="sxs-lookup">
        <span data-stu-id="32089-101">Allows an implementer to control the fault message returned to the caller and optionally perform custom error processing such as logging.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32089-102">Pour contrôler explicitement le comportement de l’application lorsqu’une exception est levée, vous devez implémenter la <xref:System.ServiceModel.Dispatcher.IErrorHandler> de l’interface et l’ajouter à la <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>de <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="32089-102">To explicitly control the behavior of the application when an exception is thrown, implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler> interface and add it to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>’s <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span> <span data-ttu-id="32089-103"><xref:System.ServiceModel.Dispatcher.IErrorHandler> vous permet de contrôler explicitement l'erreur SOAP générée, de décider de la retourner ou non au client et d'exécuter les tâches associées, comme l'enregistrement dans le journal.</span><span class="sxs-lookup"><span data-stu-id="32089-103"><xref:System.ServiceModel.Dispatcher.IErrorHandler> enables you to explicitly control the SOAP fault generated, decide whether to send it back to the client, and perform associated tasks, such as logging.</span></span> <span data-ttu-id="32089-104">Les gestionnaires d'erreurs sont appelés dans l'ordre dans lequel ils sont ajoutés à la propriété <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="32089-104">Error handlers are called in the order in which they were added to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 <span data-ttu-id="32089-105">Implémentez la méthode <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> pour contrôler le message d'erreur retourné au client.</span><span class="sxs-lookup"><span data-stu-id="32089-105">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method to control the fault message that is returned to the client.</span></span>  
  
 <span data-ttu-id="32089-106">Implémentez la méthode <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> pour contrôler les comportements lié à l'erreur, y compris l'enregistrement des erreurs, la garantie d'un échec rapide, l'arrêt de l'application, et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="32089-106">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method to ensure error-related behaviors, including error logging, assuring a fail fast, shutting down the application, and so on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="32089-107">De nombreux éléments pouvant effectuer un appel à la méthode <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, aucune garantie sur le thread d'appel de la méthode ne peut être apportée.</span><span class="sxs-lookup"><span data-stu-id="32089-107">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="32089-108">Ne vous attendez pas à ce que la méthode <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> soit appelée sur le thread des opérations.</span><span class="sxs-lookup"><span data-stu-id="32089-108">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method being called on the operation thread.</span></span>  
  
 <span data-ttu-id="32089-109">Toutes les implémentations <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> sont appelées en premier, avant d'envoyer un message de réponse.</span><span class="sxs-lookup"><span data-stu-id="32089-109">All <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations are called first, prior to sending a response message.</span></span> <span data-ttu-id="32089-110">Lorsque toutes les implémentations <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> ont été appelées et retournent, et si `fault` n'a pas la valeur `null`, elle est renvoyée au client selon les termes du contrat d'opération.</span><span class="sxs-lookup"><span data-stu-id="32089-110">When all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations have been called and return, and if `fault` is non-`null`, it is sent back to the client according to the operation contract.</span></span> <span data-ttu-id="32089-111">Si `fault` a la valeur `null` une fois que toutes les implémentations ont été appelées, le message de réponse est contrôlé par la valeur de propriété <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="32089-111">If `fault` is `null` after all implementations have been called, the response message is controlled by the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="32089-112">Les exceptions peuvent se produire une fois que toutes les implémentations <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> ont été appelées et qu'un message de réponse est transmis au canal.</span><span class="sxs-lookup"><span data-stu-id="32089-112">Exceptions can occur after all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations are called and a response message is handed to the channel.</span></span> <span data-ttu-id="32089-113">Si une exception de canal se produit (par exemple, des difficultés à sérialiser le message) <xref:System.ServiceModel.Dispatcher.IErrorHandler> de notification des objets.</span><span class="sxs-lookup"><span data-stu-id="32089-113">If a channel exception occurs (for example, difficulty serializing the message) <xref:System.ServiceModel.Dispatcher.IErrorHandler> objects are notified.</span></span> <span data-ttu-id="32089-114">Dans ce cas, vous devez quand même vous assurer que votre environnement de développement intercepte et affiche ces exceptions vous ou utilise le suivi pour détecter le problème.</span><span class="sxs-lookup"><span data-stu-id="32089-114">In this case, you should still make sure that your development environment catches and displays such exceptions to you or makes use of tracing to discover the problem.</span></span> <span data-ttu-id="32089-115">Pour plus d’informations sur le traçage, consultez [à l’aide de suivi pour résoudre les problèmes de votre Application](~/docs/framework/wcf/diagnostics/tracing/using-tracing-to-troubleshoot-your-application.md).</span><span class="sxs-lookup"><span data-stu-id="32089-115">For more information about tracing, see [Using Tracing to Troubleshoot Your Application](~/docs/framework/wcf/diagnostics/tracing/using-tracing-to-troubleshoot-your-application.md).</span></span>  
  
 <span data-ttu-id="32089-116">Une fois que le message de réponse a été envoyé, toutes les implémentations <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> sont appelées dans le même ordre.</span><span class="sxs-lookup"><span data-stu-id="32089-116">After the response message has been sent, all <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> implementations are called in the same order.</span></span>  
  
 <span data-ttu-id="32089-117">En général, une implémentation <xref:System.ServiceModel.Dispatcher.IErrorHandler> est ajoutée à la propriété <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> sur le service (et sur le client dans le cas de communication duplex).</span><span class="sxs-lookup"><span data-stu-id="32089-117">Typically, an <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation is added to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property on the service (and the client in the case of duplex communication).</span></span>  
  
 <span data-ttu-id="32089-118">Vous pouvez ajouter le <xref:System.ServiceModel.Dispatcher.IErrorHandler> à l'exécution en implémentant un comportement (objet <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>ou <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType> ) et utiliser le comportement par programme, à partir d'un fichier de configuration ou avec un attribut personnalisé pour attacher votre <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span><span class="sxs-lookup"><span data-stu-id="32089-118">You can add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> to the runtime by implementing a behavior (either an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>, or <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType> object) and use the behavior programmatically, from a configuration file or with a custom attribute to attach your <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span></span>  
  
 <span data-ttu-id="32089-119">Pour plus d’informations sur l’utilisation de comportements pour modifier l’exécution, consultez [configuration et l’extension de l’exécution des comportements](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span><span class="sxs-lookup"><span data-stu-id="32089-119">For more information about using behaviors to modify the runtime, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32089-120">L'exemple de code suivant présente un service qui implémente <xref:System.ServiceModel.Dispatcher.IErrorHandler> qui retourne uniquement <xref:System.ServiceModel.FaultException%601> de type `GreetingFault` lorsqu'une méthode de service lève une exception managée.</span><span class="sxs-lookup"><span data-stu-id="32089-120">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="32089-121">L'exemple de code suivant indique comment utiliser un comportement de service pour ajouter l'implémentation <xref:System.ServiceModel.Dispatcher.IErrorHandler> à la propriété <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="32089-121">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="32089-122">L'exemple de code suivant indique comment configurer le service pour charger le comportement de service à l'aide d'un fichier de configuration de l'application.</span><span class="sxs-lookup"><span data-stu-id="32089-122">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="32089-123">Pour plus d'informations sur la façon d'exposer un comportement de service dans un fichier de configuration, consultez <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="32089-123">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  

 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="HandleError">
      <MemberSignature Language="C#" Value="public bool HandleError (Exception error);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleError(class System.Exception error) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleError (error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HandleError(Exception ^ error);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public bool HandleError (Exception exception);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleError(class System.Exception exception) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.HandleError(System.Exception)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HandleError(Exception ^ exception);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>
          <span data-ttu-id="32089-124">Active le traitement relatifs aux erreurs et retourne une valeur qui indique si le répartiteur abandonne la session et le contexte de l'instance dans certains cas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32089-124">Enables error-related processing and returns a value that indicates whether the dispatcher aborts the session and the instance context in certain cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32089-125">
            <see langword="true" /> si [!INCLUDE[indigo1](~/includes/indigo1-md.md)] ne doit pas abandonner la session (s'il une est active) et le contexte de l'instance si ce dernier ne correspond pas à <see cref="F:System.ServiceModel.InstanceContextMode.Single" /> ; <see langword="false" /> dans le cas contraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32089-125">
              <see langword="true" /> if [!INCLUDE[indigo1](~/includes/indigo1-md.md)] should not abort the session (if there is one) and instance context if the instance context is not <see cref="F:System.ServiceModel.InstanceContextMode.Single" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="32089-126">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32089-126">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32089-127">Utilisez la méthode <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> pour implémenter des comportements propres aux erreurs, tels que la journalisation d'erreurs, la notification système, l'arrêt de l'application, etc., et pour retourner une valeur qui spécifie si l'exception a été gérée correctement.</span><span class="sxs-lookup"><span data-stu-id="32089-127">Use the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method to implement error-related behaviors such as error logging, system notifications, shutting down the application, and so on, and return a value that specifies whether the exception has been handled appropriately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="32089-128">De nombreux éléments pouvant effectuer un appel à la méthode <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, aucune garantie sur le thread d'appel de la méthode ne peut être apportée.</span><span class="sxs-lookup"><span data-stu-id="32089-128">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="32089-129">Ne vous attendez pas à ce que la méthode <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> soit appelée sur le thread des opérations.</span><span class="sxs-lookup"><span data-stu-id="32089-129">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method being called on the operation thread.</span></span>  
  
 <span data-ttu-id="32089-130">Toutes les implémentations <xref:System.ServiceModel.Dispatcher.IErrorHandler> sont appelées.</span><span class="sxs-lookup"><span data-stu-id="32089-130">All <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementations are called.</span></span> <span data-ttu-id="32089-131">Par défaut, si une exception est rencontrée et que la valeur de retour correspond à `false`, le répartiteur abandonne toute session ainsi que <xref:System.ServiceModel.InstanceContext> si <xref:System.ServiceModel.InstanceContextMode> ne correspond pas à <xref:System.ServiceModel.InstanceContextMode.Single>.</span><span class="sxs-lookup"><span data-stu-id="32089-131">By default (when the return value is `false`), if there is an exception, the dispatcher aborts any session and aborts the <xref:System.ServiceModel.InstanceContext> if the <xref:System.ServiceModel.InstanceContextMode> is anything other than <xref:System.ServiceModel.InstanceContextMode.Single>.</span></span>  <span data-ttu-id="32089-132">L'exception est alors considérée comme non gérée et tout état est jugé corrompu.</span><span class="sxs-lookup"><span data-stu-id="32089-132">The exception is then considered unhandled and any state is considered corrupt.</span></span>  
  
 <span data-ttu-id="32089-133">Forcez le retour de la valeur `true` de <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> pour empêcher ce comportement par défaut.</span><span class="sxs-lookup"><span data-stu-id="32089-133">Return `true` from <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> to prevent this default behavior.</span></span> <span data-ttu-id="32089-134">Si un gestionnaire d'erreurs quelconque retourne la valeur `true`, il indique à [!INCLUDE[indigo2](~/includes/indigo2-md.md)] que l'usage de l'état associé à la demande échouée est sécurisé.</span><span class="sxs-lookup"><span data-stu-id="32089-134">If any error handler returns `true` it instructs [!INCLUDE[indigo2](~/includes/indigo2-md.md)] that it is safe to continue using state associated with the failed request.</span></span>  
  
 <span data-ttu-id="32089-135">Si aucun gestionnaire d'erreurs ne retourne `true` de la méthode <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, l'exception est considérée comme non gérée et la réponse par défaut s'applique alors, pouvant provoquer l'abandon d'un objet <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> et d'un canal lorsque la communication se fait sur un canal de session ou si la propriété <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> présente une valeur autre que <xref:System.ServiceModel.InstanceContextMode.Single?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="32089-135">If no error handler returns `true` from the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method the exception is considered unhandled and the default response applies, potentially resulting in an aborted <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> and channel when communicating on a session channel or the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> property is not set to <xref:System.ServiceModel.InstanceContextMode.Single?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="32089-136">Le paramètre `error` n'a jamais la valeur `null` et contient l'objet exception qui a été levé.</span><span class="sxs-lookup"><span data-stu-id="32089-136">The `error` parameter is never `null` and contains the exception object that was thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32089-137">L'exemple de code suivant présente un service qui implémente <xref:System.ServiceModel.Dispatcher.IErrorHandler> qui retourne uniquement <xref:System.ServiceModel.FaultException%601> de type `GreetingFault` lorsqu'une méthode de service lève une exception managée.</span><span class="sxs-lookup"><span data-stu-id="32089-137">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="32089-138">L'exemple de code suivant indique comment utiliser un comportement de service pour ajouter l'implémentation <xref:System.ServiceModel.Dispatcher.IErrorHandler> à la propriété <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="32089-138">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="32089-139">L'exemple de code suivant indique comment configurer le service pour charger le comportement de service à l'aide d'un fichier de configuration de l'application.</span><span class="sxs-lookup"><span data-stu-id="32089-139">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="32089-140">Pour plus d'informations sur la façon d'exposer un comportement de service dans un fichier de configuration, consultez <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="32089-140">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideFault">
      <MemberSignature Language="C#" Value="public void ProvideFault (Exception error, System.ServiceModel.Channels.MessageVersion version, ref System.ServiceModel.Channels.Message fault);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideFault(class System.Exception error, class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.Message&amp; fault) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProvideFault (error As Exception, version As MessageVersion, ByRef fault As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProvideFault(Exception ^ error, System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::Message ^ % fault);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void ProvideFault (Exception exception, System.ServiceModel.Channels.MessageVersion version, ref System.ServiceModel.Channels.Message fault);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideFault(class System.Exception exception, class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.Message&amp; fault) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProvideFault(Exception ^ exception, System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::Message ^ % fault);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" Index="1" />
        <Parameter Name="fault" Type="System.ServiceModel.Channels.Message&amp;" RefType="ref" Index="2" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <param name="exception">To be added.</param>
        <param name="version">
          <span data-ttu-id="32089-141">Version SOAP du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32089-141">The SOAP version of the message.</span>
          </span>
        </param>
        <param name="fault">
          <span data-ttu-id="32089-142">Objet <see cref="T:System.ServiceModel.Channels.Message" /> retourné au client ou au service, dans le cas duplex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32089-142">The <see cref="T:System.ServiceModel.Channels.Message" /> object that is returned to the client, or service, in the duplex case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32089-143">Active la création d'un <see cref="T:System.ServiceModel.FaultException`1" /> personnalisé retourné d'une exception au cours d'une méthode de service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="32089-143">Enables the creation of a custom <see cref="T:System.ServiceModel.FaultException`1" /> that is returned from an exception in the course of a service method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32089-144">Implémentez la méthode <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> pour créer un message d'erreur personnalisé retourné au client.</span><span class="sxs-lookup"><span data-stu-id="32089-144">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method to create a custom fault message that is returned to the client.</span></span>  <span data-ttu-id="32089-145">Le <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> méthode est toujours appelée pour les exceptions qui laissent les opérations, sauf lorsque le runtime WCF reconnaît l’exception comme particulièrement irrécupérable et lève à nouveau l’exception elle-même.</span><span class="sxs-lookup"><span data-stu-id="32089-145">The <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method will always be called for exceptions that leave operations, except when the WCF runtime recognizes the exception as especially fatal and rethrows the exception itself.</span></span> <span data-ttu-id="32089-146">Lorsque toutes les implémentations <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> ont été appelées, le message d'erreur est retourné au client (si `fault` n'a pas la valeur `null`).</span><span class="sxs-lookup"><span data-stu-id="32089-146">When all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations have been called, the fault message is sent back to the client (if `fault` is non-`null`).</span></span> <span data-ttu-id="32089-147">Si le `fault` paramètre est `null` l’erreur par défaut est envoyé au client.</span><span class="sxs-lookup"><span data-stu-id="32089-147">If the `fault` parameter is `null` the default fault is sent to the client.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="32089-148">Le message entrant qui a provoqué l'erreur de traitement est disponible au cours de cette méthode à partir de la propriété <xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="32089-148">The inbound message that caused the processing error is available during this method from the <xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="32089-149">De nombreux éléments pouvant effectuer un appel à la méthode <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A>, aucune garantie sur le thread d'appel de la méthode ne peut être apportée.</span><span class="sxs-lookup"><span data-stu-id="32089-149">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="32089-150">Ne vous attendez pas à ce que la méthode <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> soit appelée sur le thread des opérations.</span><span class="sxs-lookup"><span data-stu-id="32089-150">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method being called on the operation thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32089-151">L'exemple de code suivant présente un service qui implémente <xref:System.ServiceModel.Dispatcher.IErrorHandler> qui retourne uniquement <xref:System.ServiceModel.FaultException%601> de type `GreetingFault` lorsqu'une méthode de service lève une exception managée.</span><span class="sxs-lookup"><span data-stu-id="32089-151">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="32089-152">L'exemple de code suivant indique comment utiliser un comportement de service pour ajouter l'implémentation <xref:System.ServiceModel.Dispatcher.IErrorHandler> à la propriété <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="32089-152">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="32089-153">L'exemple de code suivant indique comment configurer le service pour charger le comportement de service à l'aide d'un fichier de configuration de l'application.</span><span class="sxs-lookup"><span data-stu-id="32089-153">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="32089-154">Pour plus d'informations sur la façon d'exposer un comportement de service dans un fichier de configuration, consultez <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="32089-154">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>