<Type Name="IMessageFilterTable&lt;TFilterData&gt;" FullName="System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4bd08414c63d44d05a102e35f1dbdf6781a5005" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39728905" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMessageFilterTable&lt;TFilterData&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageFilterTable`1&lt;TFilterData&gt; implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageFilterTable(Of TFilterData)&#xA;Implements ICollection(Of KeyValuePair(Of MessageFilter, TFilterData)), IDictionary(Of MessageFilter, TFilterData), IEnumerable(Of KeyValuePair(Of MessageFilter, TFilterData))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFilterData&gt;&#xA;public interface class IMessageFilterTable : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;" />
  <TypeSignature Language="F#" Value="type IMessageFilterTable&lt;'FilterData&gt; = interface&#xA;    interface IDictionary&lt;MessageFilter, 'FilterData&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;MessageFilter, 'FilterData&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;MessageFilter, 'FilterData&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFilterData" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TFilterData">
      <span data-ttu-id="76769-101">Type de données associé à chaque filtre dans la table.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76769-101">The type of data associated with each filter in the table.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="76769-102">
        <see langword="interface" /> qui définit le contrat qu'une table de filtres doit implémenter pour inspecter les messages avec les critères de la requête dérivés d'un ou de plusieurs filtres.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76769-102">An <see langword="interface" /> that defines the contract that a filter table must implement to inspect messages with query criteria derived from one or more filters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76769-103">La table de filtres est un composant principal du moteur de filtrage.</span><span class="sxs-lookup"><span data-stu-id="76769-103">The filter table is a core component of the filter engine.</span></span> <span data-ttu-id="76769-104">La principale utilisation du moteur de filtre dans Windows Communication Foundation (WCF) doit correspondre la logique d’application pour les messages en recherchant tous les filtres qui correspondent à un message.</span><span class="sxs-lookup"><span data-stu-id="76769-104">The primary use of the filter engine in Windows Communication Foundation (WCF) is to match application logic to messages by finding all the filters that match a message.</span></span>  
  
 <span data-ttu-id="76769-105">Une table de filtres permet à plusieurs filtres d'être mis en correspondance avec un seul message plus efficacement que s'ils avaient été mis en équivalence séparément.</span><span class="sxs-lookup"><span data-stu-id="76769-105">A filter table allows multiple filters to be matched against a single message more efficiently than they can be matched separately.</span></span> <span data-ttu-id="76769-106">Une table de filtres associe des données aux filtres.</span><span class="sxs-lookup"><span data-stu-id="76769-106">A filter table associates filter data with filters.</span></span> <span data-ttu-id="76769-107">La table représente une collection de paires clé-valeur, où la clé correspond à <xref:System.ServiceModel.Dispatcher.MessageFilter>, et la valeur constitue les données de filtre associées.</span><span class="sxs-lookup"><span data-stu-id="76769-107">The table is a collection of key-value pairs, where the key is the <xref:System.ServiceModel.Dispatcher.MessageFilter>, and the value is the associated filter data.</span></span> <span data-ttu-id="76769-108">Les données de filtre peuvent correspondre à n'importe quelles données du type précisé dans le paramètre générique, et peuvent permettre de déterminer les actions à entreprendre si un message satisfait à un filtre dans la table.</span><span class="sxs-lookup"><span data-stu-id="76769-108">Filter data can be any data of the type specified in the generic parameter and can be used to specify what actions to take if a message is matched by a filter in the table.</span></span>  
  
 <span data-ttu-id="76769-109">Les entrées de la table de filtres sont accessibles à l'aide des fonctionnalités d'<xref:System.Collections.Generic.IDictionary%602> dont <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> hérite.</span><span class="sxs-lookup"><span data-stu-id="76769-109">Filter table entries can be accessed using the <xref:System.Collections.Generic.IDictionary%602> functionality that <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> inherits.</span></span>  
  
 <span data-ttu-id="76769-110">Notez qu'il n'est possible d'ajouter une instance d'un filtre à un objet <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="76769-110">Note that a filter instance can only be added to a given <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> once.</span></span> <span data-ttu-id="76769-111">Pour ajouter plusieurs instances d'un filtre à une même table de filtres, utilisez un constructeur pour en créer d'autres instances.</span><span class="sxs-lookup"><span data-stu-id="76769-111">To add multiple instances of this filter to the same filter table, use a filter constructor to create additional instances.</span></span>  
  
 <span data-ttu-id="76769-112">Un filtre correspond à un message lorsque le message satisfait le critères de requête du filtre.</span><span class="sxs-lookup"><span data-stu-id="76769-112">A filter matches a message when the message satisfies the query criteria of the filter.</span></span> <span data-ttu-id="76769-113">Il existe quatre méthodes surchargées correspondantes.</span><span class="sxs-lookup"><span data-stu-id="76769-113">There are four overloaded matching methods.</span></span> <span data-ttu-id="76769-114">Les données retournées correspondent aux données de filtre ou aux objets <xref:System.ServiceModel.Dispatcher.MessageFilter> à proprement dits.</span><span class="sxs-lookup"><span data-stu-id="76769-114">The data returned is either the filter data or the <xref:System.ServiceModel.Dispatcher.MessageFilter> objects themselves.</span></span> <span data-ttu-id="76769-115">Ces données sont retournées si plusieurs correspondances sont possibles, ou seulement une seule correspondance.</span><span class="sxs-lookup"><span data-stu-id="76769-115">This data is returned whether multiple matches are allowed or only a single match.</span></span> <span data-ttu-id="76769-116">Le tableau suivant reprend ces renseignements classés par surcharge.</span><span class="sxs-lookup"><span data-stu-id="76769-116">The following table shows this information for each overload.</span></span>  
  
|<span data-ttu-id="76769-117">Nom de la méthode</span><span class="sxs-lookup"><span data-stu-id="76769-117">Method Name</span></span>|<span data-ttu-id="76769-118">Correspondance</span><span class="sxs-lookup"><span data-stu-id="76769-118">Matches</span></span>|<span data-ttu-id="76769-119">Données retournées</span><span class="sxs-lookup"><span data-stu-id="76769-119">Data Returned</span></span>|  
|-----------------|-------------|-------------------|  
|<xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A>|<span data-ttu-id="76769-120">Single</span><span class="sxs-lookup"><span data-stu-id="76769-120">Single</span></span>|`FilterData`|  
|<xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>|<span data-ttu-id="76769-121">Single</span><span class="sxs-lookup"><span data-stu-id="76769-121">Single</span></span>|<xref:System.ServiceModel.Dispatcher.MessageFilter>|  
|<xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>|<span data-ttu-id="76769-122">Multiple</span><span class="sxs-lookup"><span data-stu-id="76769-122">Multiple</span></span>|`FilterData`|  
|<xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>|<span data-ttu-id="76769-123">Multiple</span><span class="sxs-lookup"><span data-stu-id="76769-123">Multiple</span></span>|<span data-ttu-id="76769-124">Objets <xref:System.ServiceModel.Dispatcher.MessageFilter>.</span><span class="sxs-lookup"><span data-stu-id="76769-124"><xref:System.ServiceModel.Dispatcher.MessageFilter> objects</span></span>|  
  
 <span data-ttu-id="76769-125">Chaque méthode prévoit deux surcharges.</span><span class="sxs-lookup"><span data-stu-id="76769-125">Each method contains two overloads.</span></span> <span data-ttu-id="76769-126">L'une des deux surcharges reçoit un paramètre <xref:System.ServiceModel.Channels.Message> et n'est pas en mesure d'analyser le corps du message, alors que l'autre surcharge reçoit un paramètre <xref:System.ServiceModel.Channels.MessageBuffer> et peut analyser n'importe quelle partie du message.</span><span class="sxs-lookup"><span data-stu-id="76769-126">The difference between the two overloads is that one takes a <xref:System.ServiceModel.Channels.Message> parameter and is not permitted to examine the contents of the body; the other takes a <xref:System.ServiceModel.Channels.MessageBuffer> parameter and can examine any part of the message.</span></span> <span data-ttu-id="76769-127">Si vous lancez un appel à une méthode avec le paramètre de message et que la table de filtres contient un filtre qui analyse le contenu du corps du message, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="76769-127">If you call a method with the message parameter, and the filter table contains a filter that examines the content of the message body, an exception is thrown.</span></span> <span data-ttu-id="76769-128">Si vous n'êtes pas sûr des filtres intégrant une table, appelez la surcharge qui accepte une mémoire tampon de messages.</span><span class="sxs-lookup"><span data-stu-id="76769-128">If you are unsure about the filters in a table, call the overload that takes a message buffer.</span></span>  
  
 <span data-ttu-id="76769-129">Les en-tête de messages sont automatiquement mis en mémoire tampon et peuvent être inspectés par un filtre sans être consommés.</span><span class="sxs-lookup"><span data-stu-id="76769-129">Message headers are automatically buffered and can be inspected by a filter without being consumed.</span></span> <span data-ttu-id="76769-130">Toutefois, si le corps doit être inspecté par un filtre, la totalité du message doit alors être mise en mémoire tampon sinon le message est alors consommé par une requête et son contenu détruit.</span><span class="sxs-lookup"><span data-stu-id="76769-130">But if the body is to be inspected by a filter, then the entire message must be buffered because an unbuffered message body is consumed by a query and its contents destroyed.</span></span>  
  
 <span data-ttu-id="76769-131">Les classes suivantes implémentent <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> :</span><span class="sxs-lookup"><span data-stu-id="76769-131">The following classes implement <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>:</span></span>  
  
-   <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>  
  
-   <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="76769-132">Les tables de filtres sont thread-safe en ce qui concerne les opérations correspondantes, mais ne sont pas thread-safe en ce qui concerne la modification.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76769-132">Filter tables are thread-safe with respect to matching operations, but are not thread-safe with respect to modification.</span>
      </span>
      <span data-ttu-id="76769-133">Les threads qui accèdent à une table de filtres doivent être synchronisés par le <see cref="T:System.Threading.ReaderWriterLock" /> ou une sémantique de verrouillage semblable.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76769-133">Threads that access a filter table should be synchronized by the <see cref="T:System.Threading.ReaderWriterLock" /> or similar locking semantic.</span>
      </span>
      <span data-ttu-id="76769-134">Ce verrou permet l'exécution simultanée de plusieurs lectures d'une table de filtres (par exemple, une opération de correspondance), mais pour écrire dans une table de filtres (par exemple, en ajoutant un filtre), un thread doit attendre un verrou exclusif.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76769-134">This lock allows multiple reads of a filter table (for example, a match operation) to run simultaneously, but in order to write to a filter table (for example, adding a filter), a thread must wait for an exclusive lock.</span>
      </span>
      <span data-ttu-id="76769-135">Toute la compilation est réalisée lorsque les filtres sont ajoutés à la table.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76769-135">All compilation is done when filters are added to the table.</span>
      </span>
      <span data-ttu-id="76769-136">Si vous créez une table de filtres à l'avance et que vous ne la modifiez jamais, le verrouillage n'est pas nécessaire au cours d'une correspondance.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76769-136">If you create a filter table in advance, and never edit it, locking is not necessary during a match.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetMatchingFilter">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="76769-137">Retourne un filtre issu de la table dont les critères de requête sont satisfaits par un message ou par un message mis en mémoire tampon précis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-137">Returns a filter from the table whose query criteria are satisfied by a specified message or buffered message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76769-138">Utilisez cette méthode lorsqu'un filtre unique est supposé correspondre au message et que le filtre correspondant est requis.</span><span class="sxs-lookup"><span data-stu-id="76769-138">Use this method when a single filter is expected to match the message and the matching filter is required.</span></span>  
  
 <span data-ttu-id="76769-139">Utilisez <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> si le contenu du corps ne nécessite pas de vérification.</span><span class="sxs-lookup"><span data-stu-id="76769-139">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> if the body content does not require examination.</span></span> <span data-ttu-id="76769-140">Utilisez <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> si le contenu du corps du message peut nécessiter une vérification.</span><span class="sxs-lookup"><span data-stu-id="76769-140">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> if the contents of the message body may require examination.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="76769-141">
            <para>Si plusieurs filtres correspond au message, un <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> doit être levée.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-141">
              <para>If more than one filter matches the message, a <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> must be thrown.</para>
            </span>
          </span>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; result) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.Message *  -&gt; bool" Usage="iMessageFilterTable.GetMatchingFilter (message, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" Index="0" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="result" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="76769-142">
            <see cref="T:System.ServiceModel.Channels.Message" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-142">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="76769-143">Paramètre <see langword="out" /> qui stocke le filtre respecté par <c>message</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-143">
              <see langword="out" /> parameter that stores the filter that is satisfied by the <c>message</c>.</span>
          </span>
          <span data-ttu-id="76769-144">Si aucun filtre n'a été trouvé, le paramètre est défini à sa valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-144">If no filter was found, the parameter is set to its default value.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="76769-145">Paramètre <see langword="out" /> qui stocke le filtre respecté par <c>message</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-145">
              <see langword="out" /> parameter that stores the filter that is satisfied by the <c>message</c>.</span>
          </span>
          <span data-ttu-id="76769-146">Si aucun filtre n'a été trouvé, le paramètre est défini à sa valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-146">If no filter was found, the parameter is set to its default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76769-147">Retourne une valeur qui indique si le critère de correspondance d'un et un seul filtre dans la table est respecté par le message spécifié, et retourne ce filtre dans un paramètre <see langword="out" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-147">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message, and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76769-148">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre dans la table est respecté par <paramref name="message" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-148">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76769-149">Utilisez cette méthode lorsqu'un filtre unique est supposé correspondre au message et que le filtre correspondant est requis.</span><span class="sxs-lookup"><span data-stu-id="76769-149">Use this method when a single filter is expected to match the message and the matching filter is required.</span></span>  
  
 <span data-ttu-id="76769-150">Si le corps du message doit être inspecté par un filtre dans la table de filtres, utilisez la version <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> de la méthode.</span><span class="sxs-lookup"><span data-stu-id="76769-150">If the body of the message must be inspected by a filter in the filter table, use the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> version of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="76769-151">
            <para>Si plusieurs filtres correspond au message, un <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> doit être levée.  Cette version prend une <see cref="T:System.ServiceModel.Channels.Message" /> et doit lever une <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> si elle tente d’analyser le corps du message.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-151">
              <para>If more than one filter matches the message, a <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> must be thrown.  This version takes a <see cref="T:System.ServiceModel.Channels.Message" /> and must throw an <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> if it tries to examine the message body.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer messageBuffer, out System.ServiceModel.Dispatcher.MessageFilter filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer messageBuffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer buffer, out System.ServiceModel.Dispatcher.MessageFilter result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer buffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; result) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (buffer As MessageBuffer, ByRef result As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.MessageBuffer *  -&gt; bool" Usage="iMessageFilterTable.GetMatchingFilter (buffer, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="result" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="76769-152">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-152">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="76769-153">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-153">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="76769-154">Paramètre <see langword="out" /> qui stocke le filtre respecté par <c>message</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-154">
              <see langword="out" /> parameter that stores the filter that is satisfied by the <c>message</c>.</span>
          </span>
          <span data-ttu-id="76769-155">Si aucun filtre n'a été trouvé, le paramètre est défini à sa valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-155">If no filter was found, the parameter is set to its default value.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="76769-156">Paramètre <see langword="out" /> qui stocke le filtre respecté par <c>message</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-156">
              <see langword="out" /> parameter that stores the filter that is satisfied by the <c>message</c>.</span>
          </span>
          <span data-ttu-id="76769-157">Si aucun filtre n'a été trouvé, le paramètre est défini à sa valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-157">If no filter was found, the parameter is set to its default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76769-158">Retourne une valeur qui indique si le critère de correspondance d'un et un seul filtre dans la table est respecté par le message ou le message mis en mémoire tampon spécifié, et retourne ce filtre dans un paramètre <see langword="out" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-158">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message, and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76769-159">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre dans la table est respecté par <paramref name="messageBuffer" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-159">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76769-160">Utilisez cette méthode lorsqu'un seul filtre est supposé correspondre au message mis en mémoire tampon, que le filtre correspondant doit être retourné et que le corps du message peut faire l'objet d'un inspection.</span><span class="sxs-lookup"><span data-stu-id="76769-160">Use this method when a single filter is expected to match the buffered message, the matching filter must be returned, and the body of the message may have to be inspected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilters">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="76769-161">Ajoute à une collection les filtres dont les critères de requête sont satisfaits par un message ou par un message mis en mémoire tampon précis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-161">Adds the filters whose query criteria are satisfied by a specified message or buffered message to a collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76769-162">Utilisez l'une de ces méthodes lorsque plusieurs filtres sont supposés correspondre au message et que les filtres correspondants sont requis.</span><span class="sxs-lookup"><span data-stu-id="76769-162">Use one of these methods when more than one filter is expected to match the message and the matching filters are required.</span></span> <span data-ttu-id="76769-163">Il est important de noter que la collection qui contient les filtres n'est pas effacée avant que les résultats soient ajoutés.</span><span class="sxs-lookup"><span data-stu-id="76769-163">Note that the collection that contains the filters is not cleared before the results are added.</span></span> <span data-ttu-id="76769-164">Cela permet d’accumuler toutes les correspondances de plusieurs tables de filtres en une seule collection.</span><span class="sxs-lookup"><span data-stu-id="76769-164">This allows you to accumulate all matches across multiple filter tables into a single collection.</span></span>  
  
 <span data-ttu-id="76769-165">Si le corps du message doit être inspecté par un filtre dans la table de filtres, mettez le message en mémoire tampon et transmettez-le à la méthode <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.</span><span class="sxs-lookup"><span data-stu-id="76769-165">If the body of the message must be inspected by a filter in the filter table, buffer the message and pass it to the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A> method.</span></span> <span data-ttu-id="76769-166">Dans le cas contraire, utilisez <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.</span><span class="sxs-lookup"><span data-stu-id="76769-166">Otherwise, use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 <span data-ttu-id="76769-167">Les objets <xref:System.ServiceModel.Dispatcher.MessageFilter> correspondants sont stockés dans le paramètre `results`.</span><span class="sxs-lookup"><span data-stu-id="76769-167">The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter.</span></span> <span data-ttu-id="76769-168">Les données de filtre peuvent ensuite être récupérées de la table de filtres à l'aide de ces filtres utilisés comme clés avec les méthodes fournies par <xref:System.Collections.Generic.IDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="76769-168">The filter data can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilters : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="iMessageFilterTable.GetMatchingFilters (message, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="76769-169">
            <see cref="T:System.ServiceModel.Channels.Message" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-169">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="76769-170">Paramètre de référence qui stocke les objets <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> qui correspondent dans <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-170">Reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76769-171">Retourne une valeur qui indique si le message indiqué respecte le critère de correspondance d’un filtre de la table, et ajoute les filtres correspondants à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-171">Returns a value that indicates whether the match criterion of a filter in the table is satisfied by the specified message, and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76769-172">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre dans la table est respecté par <paramref name="message" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-172">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76769-173">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au message, que les filtres correspondants sont requis et que le corps du message n'a pas à être inspecté.</span><span class="sxs-lookup"><span data-stu-id="76769-173">Use this method when more than one filter is expected to match the message, the matching filters are required, and the body of the message does not have to be inspected.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="76769-174">
            <para>Cette version prend une <see cref="T:System.ServiceModel.Channels.Message" /> et doit lever une <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> si elle tente d’analyser le corps du message.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-174">
              <para>This version takes a <see cref="T:System.ServiceModel.Channels.Message" /> and must throw an <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> if it tries to examine the message body.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.MessageBuffer messageBuffer, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.MessageBuffer buffer, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (buffer As MessageBuffer, results As ICollection(Of MessageFilter)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::ServiceModel::Channels::MessageBuffer ^ buffer, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilters : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="iMessageFilterTable.GetMatchingFilters (buffer, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" Index="1" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="76769-175">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-175">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="76769-176">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-176">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="76769-177">Paramètre de référence qui stocke les objets <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> qui correspondent dans <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-177">Reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76769-178">Retourne une valeur qui indique si le message mis en mémoire tampon indiqué respecte le critère de correspondance d’un filtre de la table, et ajoute les filtres correspondants à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-178">Returns a value that indicates whether the match criterion of a filter in the table is satisfied by the specified buffered message, and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76769-179">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre dans la table est respecté par <paramref name="messageBuffer" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-179">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76769-180">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au message mis en mémoire tampon, que le filtre correspondant est requis et que le corps du message peut devoir faire l'objet d'une inspection.</span><span class="sxs-lookup"><span data-stu-id="76769-180">Use this method when more than one filter is expected to match the buffered message, the matching filter is required, and the body of the message may have to be inspected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValue">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="76769-181">Retourne une valeur qui indique si le message ou le message mis en mémoire tampon indiqué respecte le critère de correspondance d'un filtre dans la table, et retourne les données du filtre correspondant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-181">Returns a value that indicates whether the match criterion of a filter in the table is satisfied by the specified message or buffered message, and returns the filter data for the filter that matched.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76769-182">Utilisez l'une de ces méthodes lorsqu'un seul filtre, au plus, est censé correspondre au message et que seules les données du filtre correspondant doivent être récupérées.</span><span class="sxs-lookup"><span data-stu-id="76769-182">Use one of these methods when, at most, one filter is expected to match the message and only the filter data from the matching filter must be recovered.</span></span> <span data-ttu-id="76769-183">Ces méthodes retournent une valeur booléenne qui indique si un filtre correspondant a été trouvé, et affectent au paramètre de référence `data` les données de filtre correspondantes.</span><span class="sxs-lookup"><span data-stu-id="76769-183">These methods return a boolean that indicates whether a matching filter was found and set the `data` reference parameter to the matching filter data.</span></span>  
  
 <span data-ttu-id="76769-184">Utilisez <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>, si le corps du message n'est inspecté par aucun des filtres issus de la table de filtres.</span><span class="sxs-lookup"><span data-stu-id="76769-184">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> if the body of the message is not inspected by any of the filters in the filter table.</span></span>  
  
 <span data-ttu-id="76769-185">Si le corps du message peut être inspecté par un filtre dans la table de filtres, mettez le message en mémoire tampon et transmettez-le à la version <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> de la méthode.</span><span class="sxs-lookup"><span data-stu-id="76769-185">If the body of the message may be inspected by a filter in the filter table, buffer the message and pass it to the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> version of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="76769-186">
            <para>Si plusieurs filtres correspond au message, un <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> doit être levée.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-186">
              <para>If more than one filter matches the message, a <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> must be thrown.</para>
            </span>
          </span>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData value);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.Message message, [out] !TFilterData&amp; value) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] TFilterData % value);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.Message message, [out] !TFilterData&amp; data) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] TFilterData % data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValue : System.ServiceModel.Channels.Message *  -&gt; bool" Usage="iMessageFilterTable.GetMatchingValue (message, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" Index="0" />
        <Parameter Name="value" Type="TFilterData" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="data" Type="TFilterData" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="76769-187">
            <see cref="T:System.ServiceModel.Channels.Message" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-187">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="76769-188">Paramètre <see langword="out" /> qui stocke <c>FilterData</c> pour le filtre correspondant à <c>message</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-188">
              <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <c>message</c>.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="76769-189">Paramètre <see langword="out" /> qui stocke <c>FilterData</c> pour le filtre correspondant à <c>message</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-189">
              <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <c>message</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76769-190">Retourne une valeur qui indique si le message mis en mémoire tampon indiqué respecte le critère de correspondance d’un filtre dans la table, et ajoute les données de filtre correspondantes à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-190">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message, and adds the matching filter data to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76769-191">
            <see langword="true" /> si le message respecte le critère de correspondance d'un filtre de la table ; <see langword="false" /> dans le cas contraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-191">
              <see langword="true" /> if the match criterion of exactly one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76769-192">Utilisez cette méthode lorsqu'un seul filtre est supposé correspondre au message mis en mémoire tampon et que seul les données du filtre correspondant doivent être récupérées.</span><span class="sxs-lookup"><span data-stu-id="76769-192">Use this method when a single filter is expected to match the message and only the filter data from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="76769-193">Cette méthode attend un seul filtre correspondant maximum.</span><span class="sxs-lookup"><span data-stu-id="76769-193">This method expects at most a single matching filter.</span></span> <span data-ttu-id="76769-194">Si plusieurs filtres correspondants sont retrouvés, une exception <xref:System.ServiceModel.Dispatcher.MultipleFilterMatchesException> doit être levée.</span><span class="sxs-lookup"><span data-stu-id="76769-194">If more than one filter matches, a <xref:System.ServiceModel.Dispatcher.MultipleFilterMatchesException> must be thrown.</span></span>  
  
 <span data-ttu-id="76769-195">Si le corps du message doit être inspecté par un filtre dans la table de filtres, mettez le message en mémoire tampon à l'aide de la méthode <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> puis transmettez-le à la version <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A> de la méthode.</span><span class="sxs-lookup"><span data-stu-id="76769-195">If the body of the message must be inspected by a filter in the filter table, buffer the message using <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> and pass it to the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A> version of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="76769-196">
            <para>Si plusieurs filtres correspond au message, un <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> doit être levée.  Cette surcharge prend un <see cref="T:System.ServiceModel.Channels.Message" /> et doit lever une <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> si elle tente d’analyser le corps du message.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-196">
              <para>If more than one filter matches the message, a <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> must be thrown.  This overload takes a <see cref="T:System.ServiceModel.Channels.Message" /> and must throw an <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> if it tries to examine the message body.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer messageBuffer, out TFilterData value);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.MessageBuffer messageBuffer, [out] !TFilterData&amp; value) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, [Runtime::InteropServices::Out] TFilterData % value);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer buffer, out TFilterData data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.MessageBuffer buffer, [out] !TFilterData&amp; data) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (buffer As MessageBuffer, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] TFilterData % data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValue : System.ServiceModel.Channels.MessageBuffer *  -&gt; bool" Usage="iMessageFilterTable.GetMatchingValue (buffer, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="value" Type="TFilterData" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="data" Type="TFilterData" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="76769-197">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-197">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="76769-198">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-198">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="76769-199">Paramètre <see langword="out" /> qui stocke <c>FilterData</c> pour le filtre correspondant à <c>messageBuffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-199">
              <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <c>messageBuffer</c>.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="76769-200">Paramètre <see langword="out" /> qui stocke <c>FilterData</c> pour le filtre correspondant à <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-200">
              <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76769-201">Retourne une valeur qui indique si le critère de correspondance d’exactement un filtre dans la table est respecté par le message mis en mémoire tampon spécifié, et ajoute les données de filtre correspondantes à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-201">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified buffered message, and adds the matching filter data to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76769-202">
            <see langword="true" /> si le message respecte le critère de correspondance d'un filtre de la table ; <see langword="false" /> dans le cas contraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-202">
              <see langword="true" /> if the match criterion of exactly one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76769-203">Utilisez cette méthode lorsqu'un seul filtre est supposé correspondre au message mis en mémoire tampon, que les données du filtre correspondant doivent être récupérées et que le corps du message peut être amené à être inspecté.</span><span class="sxs-lookup"><span data-stu-id="76769-203">Use this method when a single filter is expected to match the buffered message, only the filter data from the matching filter must be recovered, and the body of the message may have to be inspected.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="76769-204">
            <para>Si plusieurs filtres correspond au message, un <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> doit être levée.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-204">
              <para>If more than one filter matches the message, a <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> must be thrown.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValues">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="76769-205">Ajoute à une collection les données des filtres qui correspondent au message ou au message mis en mémoire tampon indiqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-205">Adds the filter data of the filters that match the specified message or buffered message to a collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76769-206">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au message et que seules les données de filtre sont requises.</span><span class="sxs-lookup"><span data-stu-id="76769-206">Use this method when more than one filter is expected to match and only the matching filter data is required.</span></span> <span data-ttu-id="76769-207">Ces méthodes retournent une valeur booléenne qui indique si les filtres correspondants ont été trouvés et regroupent dans une collection toutes les données de filtre correspondantes.</span><span class="sxs-lookup"><span data-stu-id="76769-207">These methods return a boolean that indicates whether matching filters were found and put any matching filter data into a collection.</span></span>  
  
 <span data-ttu-id="76769-208">Il est important de noter que la collection qui contient les données de filtre n'est pas effacée avant que les résultats soient ajoutés.</span><span class="sxs-lookup"><span data-stu-id="76769-208">Note that the collection that contains the filter data is not cleared before the results are added.</span></span> <span data-ttu-id="76769-209">Cela permet d'accumuler toutes les correspondances de plusieurs tables de filtres en une seule collection.</span><span class="sxs-lookup"><span data-stu-id="76769-209">This allows you to accumulate all matches across multiple filter tables into a single collection.</span></span>  
  
 <span data-ttu-id="76769-210">Utilisez <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A> si le contenu du corps du message ne nécessite aucune vérification.</span><span class="sxs-lookup"><span data-stu-id="76769-210">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A> if the contents of the message body do not require examination.</span></span> <span data-ttu-id="76769-211">Utilisez <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A> si le contenu du corps du message doit faire l'objet d'une analyse.</span><span class="sxs-lookup"><span data-stu-id="76769-211">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A> if the contents of the message body requires examination.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValues : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="iMessageFilterTable.GetMatchingValues (message, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="76769-212">
            <see cref="T:System.ServiceModel.Channels.Message" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-212">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="76769-213">Paramètre de référence qui stocke les données de filtre correspondants, incluses dans une collection générique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-213">Reference parameter that stores the filter data of the matching filters in a generic collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76769-214">Retourne une valeur qui indique si le message indiqué respecte le critère de correspondance d'au moins un filtre de la table, et ajoute <paramref name="FilterData" /> des filtres correspondants à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-214">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message, and adds the <paramref name="FilterData" /> of the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76769-215">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre dans la table est respecté par <paramref name="message" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-215">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76769-216">Utilisez cette méthode lorsqu'un ou plusieurs filtres sont supposés correspondre au message, que seules les données de filtre sont requises et que le contenu du corps du message n'a pas à être inspecté.</span><span class="sxs-lookup"><span data-stu-id="76769-216">Use this method when one or more filters are expected to match the message, only the filter data is required, and the contents of the body of the message are not to be inspected.</span></span>  
  
 <span data-ttu-id="76769-217">Les données de filtre des objets <xref:System.ServiceModel.Dispatcher.MessageFilter> correspondants sont stockées dans le paramètre `results`.</span><span class="sxs-lookup"><span data-stu-id="76769-217">The filter data of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects is stored in the `results` parameter.</span></span>  
  
 <span data-ttu-id="76769-218">Si le corps du message est inspecté par un filtre dans la table de filtres, mettez le message en mémoire tampon et transmettez-le à la version <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A> de la méthode.</span><span class="sxs-lookup"><span data-stu-id="76769-218">If the body of the message is inspected by a filter in the filter table, buffer the message and pass it to the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A> version of the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.MessageBuffer messageBuffer, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.MessageBuffer buffer, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (buffer As MessageBuffer, results As ICollection(Of TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::ServiceModel::Channels::MessageBuffer ^ buffer, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValues : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="iMessageFilterTable.GetMatchingValues (buffer, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" Index="1" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="76769-219">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-219">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="76769-220">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-220">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="76769-221">Paramètre de référence qui stocke les données des filtres correspondants dans un objet <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt; générique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-221">Reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76769-222">Retourne une valeur qui indique si le message mis en mémoire tampon indiqué respecte le critère de correspondance d'au moins un filtre de la table, et ajoute <paramref name="FilterData" /> des filtres correspondants à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-222">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message, and adds the <paramref name="FilterData" /> of the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76769-223">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre dans la table est respecté par <paramref name="messageBuffer" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76769-223">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76769-224">Utilisez cette méthode lorsqu'un ou plusieurs filtres sont supposés correspondre au message mis en mémoire tampon, que seules les données de filtre sont requises et que le corps du message peut faire l'objet d'une inspection.</span><span class="sxs-lookup"><span data-stu-id="76769-224">Use this method when one or more filters are expected to match the buffered message, only the filter data is required, and the body of the message may require inspection.</span></span>  
  
 <span data-ttu-id="76769-225">Les données de filtre des objets <xref:System.ServiceModel.Dispatcher.MessageFilter> correspondants sont stockées dans le paramètre `results`.</span><span class="sxs-lookup"><span data-stu-id="76769-225">The filter data of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects is stored in the `results` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>