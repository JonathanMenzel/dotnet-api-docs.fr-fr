<Type Name="MessageQuery" FullName="System.ServiceModel.Dispatcher.MessageQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="398692b5704baefe2ac60469d9fe0ceee2d1e493" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39936411" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQuery abstract" />
  <TypeSignature Language="F#" Value="type MessageQuery = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Définit le comportement principal des classes de recherche des données mettant en corrélation les données spécifiques dans un message.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.ServiceModel.Dispatcher.MessageQuery> est similaire à la classe <xref:System.ServiceModel.Dispatcher.MessageFilter>.  Toutefois, la méthode <xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A> retourne les résultats de l'évaluation d'une requête relative à un message au lieu de retourner des correspondances. Le résultat de la requête est une valeur dans le message. Utilisez la valeur comme une clé pour mettre en corrélation le message avec d'autres messages. Pour ajouter une nouvelle propriété aux données, utilisez la méthode <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add%2A> de la classe <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty>.  
  
> [!NOTE]
>  Consultez la classe <xref:System.ServiceModel.Dispatcher.MessageQuery>, pour une implémentation concrète du <xref:System.ServiceModel.XPathMessageQuery>.  
  
## <a name="using-the-xpathmessagequery-and-messagequerycollection-classes"></a>Utilisation des classes de MessageQueryCollection et XPathMessageQuery  
 Vous pouvez optimiser le processus de requête en créant un jeu d'objets de requête et les insérant dans une instance de la classe <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>.  
  
> [!NOTE]
>  Consultez la classe <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>, pour une implémentation concrète du <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection>.  
  
 Une utilisation commune consiste à remplir la collection avec les requêtes qui ont le même XPath, mais elle ne diffère que dans la dernière valeur de feuille. Par exemple, les requêtes XPath suivantes sont identiques à l’exception de la dernière clause. Les premières requêtes de tous les éléments avec l'ensemble d'attributs de quantité défini sur 1, et les deuxièmes requêtes pour les éléments avec l'ensemble d'attributs de produit défini sur « Contoso ») :  
  
```  
"/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 1]"  
"/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@product = 'Contoso']"  
```  
  
 La classe <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> vous permet de créer des tables de requêtes qui diffèrent légèrement, ce qui permet un traitement plus efficace.  
  
 Vous pouvez également utiliser la classe <xref:System.ServiceModel.Dispatcher.MessageQueryTable%601> pour stocker et évaluer des requêtes de message.  
  
   
  
## Examples  
 L’exemple suivant crée un message et des requêtes de message XPath. Les requêtes sont évaluées par les objets <xref:System.ServiceModel.XPathMessageQuery> contenus dans un objet <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection>. Les résultats de chaque requête sont testés à l'aide de la propriété <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> de la classe <xref:System.ServiceModel.Dispatcher.XPathResult>.  
  
 [!code-csharp[XPathMessageQuery#0](~/samples/snippets/csharp/VS_Snippets_CFX/xpathmessagequery/cs/source.cs#0)]
 [!code-vb[XPathMessageQuery#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xpathmessagequery/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.XPathMessageQuery" />
    <altmember cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" />
    <altmember cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
    <altmember cref="T:System.ServiceModel.Dispatcher.XPathResult" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageQuery();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.MessageQuery" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageQueryCollection">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMessageQueryCollection () As MessageQueryCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Dispatcher::MessageQueryCollection ^ CreateMessageQueryCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageQueryCollection : unit -&gt; System.ServiceModel.Dispatcher.MessageQueryCollection&#xA;override this.CreateMessageQueryCollection : unit -&gt; System.ServiceModel.Dispatcher.MessageQueryCollection" Usage="messageQuery.CreateMessageQueryCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageQueryCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une collection de requêtes qui retournent un type spécifique de données qui lui sont associées.</summary>
        <returns><see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" /> Collection de requêtes associées au type de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est destinée à être utilisée par la classe <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Evaluate&lt;TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>En cas de remplacement dans une classe dérivée, exécute une requête relative au message et retourne une valeur qui satisfait la requête.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'une des deux surcharges reçoit un paramètre <xref:System.ServiceModel.Channels.Message> et n'est pas en mesure d'analyser le corps du message, alors que l'autre surcharge reçoit un paramètre <xref:System.ServiceModel.Channels.MessageBuffer> et peut analyser n'importe quelle partie du message. Les en-têtes de messages sont automatiquement mis en mémoire tampon et peuvent être recherchés par un filtre sans être trouvés. Toutefois, si le corps doit faire l'objet d'une requête, alors, le message entier doit être mis en mémoire tampon parce que le corps du message non tamponné peut être trouvé par la requête.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract TResult Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract TResult Evaluate(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.Message -&gt; 'Result" Usage="messageQuery.Evaluate message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Type de la valeur de retour.</typeparam>
        <param name="message">Message à soumettre à la requête.</param>
        <summary>En cas de remplacement dans une classe dérivée, exécute une requête relative au message et retourne un résultat. Le corps ne peut pas être recherché.</summary>
        <returns><see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />  
  
Collection pouvant être énumérée des résultats qui satisfont la requête.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract TResult Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Evaluate(Of TResult) (buffer As MessageBuffer) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract TResult Evaluate(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.MessageBuffer -&gt; 'Result" Usage="messageQuery.Evaluate buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Type de l'objet à retourner.</typeparam>
        <param name="buffer">Message à soumettre à la requête.</param>
        <summary>En cas de remplacement dans une classe dérivée, exécute une requête relative au message et retourne un résultat.</summary>
        <returns><see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />  
  
Collection pouvant être énumérée des résultats qui satisfont la requête.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant crée un message et des requêtes de message XPath. Les requêtes sont évaluées par les objets <xref:System.ServiceModel.XPathMessageQuery> contenus dans un objet <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection>. Les résultats de chaque requête sont testés à l'aide de la propriété <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> de la classe <xref:System.ServiceModel.Dispatcher.XPathResult>.  
  
 [!code-csharp[XPathMessageQuery#0](~/samples/snippets/csharp/VS_Snippets_CFX/xpathmessagequery/cs/source.cs#0)]
 [!code-vb[XPathMessageQuery#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xpathmessagequery/vb/source.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>