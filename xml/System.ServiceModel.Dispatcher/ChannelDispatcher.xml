<Type Name="ChannelDispatcher" FullName="System.ServiceModel.Dispatcher.ChannelDispatcher">
  <TypeSignature Language="C#" Value="public class ChannelDispatcher : System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChannelDispatcher extends System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ChannelDispatcher&#xA;Inherits ChannelDispatcherBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcher : System::ServiceModel::Dispatcher::ChannelDispatcherBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.ChannelDispatcherBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="140b4-101">Composant qui accepte les canaux et les associe à un service.</span><span class="sxs-lookup"><span data-stu-id="140b4-101">A component that accepts channels and associates them with a service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-102">Un objet <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associe un <xref:System.ServiceModel.Channels.IChannelListener> d'un URI particulier (appelé un URI d'écoute) à une instance d'un service.</span><span class="sxs-lookup"><span data-stu-id="140b4-102">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI (called a listen URI) with an instance of a service.</span></span> <span data-ttu-id="140b4-103">Chaque objet <xref:System.ServiceModel.ServiceHost> peut avoir de nombreux objets <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>, chacun étant associé à un écouteur et un URI d'écoute différents pour ce service.</span><span class="sxs-lookup"><span data-stu-id="140b4-103">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different listener and listen URI for that service.</span></span>  
  
 <span data-ttu-id="140b4-104">Lorsqu'un message arrive, le <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> interroge chacun des objets <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> associés pour déterminer si le point de terminaison peut accepter le message, et passe le message à celui-ci.</span><span class="sxs-lookup"><span data-stu-id="140b4-104">When a message arrives, the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> queries each of the associated <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects whether the endpoint can accept the message, and passes the message to the one that can.</span></span> <span data-ttu-id="140b4-105">L'objet <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> est chargé du traitement des messages à partir d'un <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> lorsque l'adresse de destination d'un message correspond à la propriété <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> et que l'action de message correspond à la propriété <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A>.</span><span class="sxs-lookup"><span data-stu-id="140b4-105">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> object is responsible for processing messages from a <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> when the destination address of a message matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> property and the message action matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> property.</span></span>  
  
 <span data-ttu-id="140b4-106">Toutes les propriétés qui contrôlent la durée de vie et le comportement d'une session de canal sont disponibles pour l'inspection ou la modification sur l'objet <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>.</span><span class="sxs-lookup"><span data-stu-id="140b4-106">All properties that control the lifetime and behavior of a channel session are available for inspection or modification on the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object.</span></span> <span data-ttu-id="140b4-107">En plus du <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, ceux-ci incluent des objets <xref:System.ServiceModel.Dispatcher.IChannelInitializer> personnalisés, l'<xref:System.ServiceModel.Channels.IChannelListener>, l'<xref:System.ServiceModel.ServiceHost>, et le <xref:System.ServiceModel.InstanceContext> associé.</span><span class="sxs-lookup"><span data-stu-id="140b4-107">In addition to the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, these include custom <xref:System.ServiceModel.Dispatcher.IChannelInitializer> objects, the <xref:System.ServiceModel.Channels.IChannelListener>, the <xref:System.ServiceModel.ServiceHost>, the associated and <xref:System.ServiceModel.InstanceContext>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/service.cs#0)]
 [!code-vb[S_UE_ChannelDispatcher#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/service.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="140b4-108">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
      </Parameters>
      <Docs>
        <param name="listener"><span data-ttu-id="140b4-109"><see cref="T:System.ServiceModel.Channels.IChannelListener" /> pour le répartiteur de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-109">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the channel dispatcher.</span></span></param>
        <summary><span data-ttu-id="140b4-110">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-111">Initialise une nouvelle instance de la classe <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> à partir de l'écouteur fourni, avec les délais d'attente par défaut fournis par le système.</span><span class="sxs-lookup"><span data-stu-id="140b4-111">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener, with system-provided default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#1)]
 [!code-vb[S_UE_ChannelDispatcher#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="140b4-112"><paramref name="listener" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-112"><paramref name="listener" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener, string bindingName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener, bindingName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener, System::String ^ bindingName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
        <Parameter Name="bindingName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="listener"><span data-ttu-id="140b4-113"><see cref="T:System.ServiceModel.Channels.IChannelListener" /> pour le répartiteur de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-113">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the channel dispatcher.</span></span></param>
        <param name="bindingName"><span data-ttu-id="140b4-114">Nom de la liaison utilisée pour configurer le service.</span><span class="sxs-lookup"><span data-stu-id="140b4-114">The name of the binding used to configure the service.</span></span></param>
        <summary><span data-ttu-id="140b4-115">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-116">Initialise une nouvelle instance de la classe <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> à partir de l'écouteur et de la liaison fournis, avec les délais d'attente par défaut fournis par le système.</span><span class="sxs-lookup"><span data-stu-id="140b4-116">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with system-provided default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#2)]
 [!code-vb[S_UE_ChannelDispatcher#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="140b4-117"><paramref name="listener" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-117"><paramref name="listener" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName, System.ServiceModel.IDefaultCommunicationTimeouts timeouts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener, string bindingName, class System.ServiceModel.IDefaultCommunicationTimeouts timeouts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener, bindingName As String, timeouts As IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener, System::String ^ bindingName, System::ServiceModel::IDefaultCommunicationTimeouts ^ timeouts);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
        <Parameter Name="bindingName" Type="System.String" />
        <Parameter Name="timeouts" Type="System.ServiceModel.IDefaultCommunicationTimeouts" />
      </Parameters>
      <Docs>
        <param name="listener"><span data-ttu-id="140b4-118"><see cref="T:System.ServiceModel.Channels.IChannelListener" /> pour le service.</span><span class="sxs-lookup"><span data-stu-id="140b4-118">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the service.</span></span></param>
        <param name="bindingName"><span data-ttu-id="140b4-119">Nom de la liaison utilisée pour configurer le service.</span><span class="sxs-lookup"><span data-stu-id="140b4-119">The name of the binding used to configure the service.</span></span></param>
        <param name="timeouts"><span data-ttu-id="140b4-120"><see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> pour le service.</span><span class="sxs-lookup"><span data-stu-id="140b4-120">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> for the service.</span></span></param>
        <summary><span data-ttu-id="140b4-121">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-121">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-122">Initialise une nouvelle instance de la classe <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> à partir de l'écouteur et de la liaison fournis, avec les délais d'attente par défaut spécifiés.</span><span class="sxs-lookup"><span data-stu-id="140b4-122">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with the specified default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#3)]
 [!code-vb[S_UE_ChannelDispatcher#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="140b4-123"><paramref name="listener" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-123"><paramref name="listener" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsynchronousTransactedAcceptEnabled">
      <MemberSignature Language="C#" Value="public bool AsynchronousTransactedAcceptEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsynchronousTransactedAcceptEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AsynchronousTransactedAcceptEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsynchronousTransactedAcceptEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-124">Obtient une valeur qui indique si les appels de la méthode accept traitée sur l'écouteur sont asynchrones.</span><span class="sxs-lookup"><span data-stu-id="140b4-124">Gets a value that indicates whether the transacted accept method calls on listener are asynchronous.</span></span></summary>
        <value>
          <span data-ttu-id="140b4-125"><see langword="true" /> si les appels de la méthode accept effectués sous une transaction sont asynchrones ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-125"><see langword="true" /> if the transacted accept method calls on listener are asynchronous; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected override void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="140b4-126"><see cref="T:System.ServiceModel.ServiceHostBase" /> pour le service.</span><span class="sxs-lookup"><span data-stu-id="140b4-126">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span></span></param>
        <summary><span data-ttu-id="140b4-127">Attache le répartiteur de canal à l'hôte.</span><span class="sxs-lookup"><span data-stu-id="140b4-127">Attaches the channel dispatcher to the host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-128">Cette propriété peut uniquement être définie lorsque l'instance du <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> est à l'état <xref:System.ServiceModel.CommunicationState.Created>, étant donné qu'il s'agit du seul état qui soit à la fois mutable et non disposé.</span><span class="sxs-lookup"><span data-stu-id="140b4-128">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-129">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-129">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="140b4-130">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-130">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="140b4-131">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-131">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindingName">
      <MemberSignature Language="C#" Value="public string BindingName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-132">Obtient le nom de la liaison utilisée pour configurer le service.</span><span class="sxs-lookup"><span data-stu-id="140b4-132">Gets the name of the binding used to configure the service.</span></span></summary>
        <value><span data-ttu-id="140b4-133">Nom de liaison du service.</span><span class="sxs-lookup"><span data-stu-id="140b4-133">The binding name of the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-134">Utilisé pour obtenir le nom de liaison pour la liaison à laquelle ce répartiteur de canal est associé.</span><span class="sxs-lookup"><span data-stu-id="140b4-134">Used to obtain the binding name for the binding with which this channel dispatcher is associated.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#4)]
 [!code-vb[S_UE_ChannelDispatcher#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelInitializers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelInitializers As SynchronizedCollection(Of IChannelInitializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ ChannelInitializers { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-135">Obtient un ensemble d'objets <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> que vous pouvez utiliser pour inspecter et ajouter l'état aux canaux lors de leur création.</span><span class="sxs-lookup"><span data-stu-id="140b4-135">Gets a set of <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> objects that you can use to inspect and add state to channels when they are first created.</span></span></summary>
        <value><span data-ttu-id="140b4-136">Collection <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> d'objets de type <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-136">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of type <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-137">Utilisez cette propriété pour insérer un initialiseur de canal personnalisé dans la collection d’initialisation pour inspecter ou modifier l’état des canaux lors de leur création.</span><span class="sxs-lookup"><span data-stu-id="140b4-137">Use this property to insert a custom channel initializer into the initialization collection to inspect or modify channel state when they are created.</span></span> <span data-ttu-id="140b4-138">Cette propriété est également utile pour exécuter le même comportement sur les canaux sortants si le contrat associé à un répartiteur est un contrat duplex.</span><span class="sxs-lookup"><span data-stu-id="140b4-138">This is also useful to perform the same behavior on outgoing channels if the contract associated with a dispatcher is a duplex contract.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#5)]
 [!code-vb[S_UE_ChannelDispatcher#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public override void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CloseInput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="140b4-139">Interrompt l'acceptation de nouveaux canaux par l'écouteur.</span><span class="sxs-lookup"><span data-stu-id="140b4-139">Stops the listener from accepting new channels.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-140">L'appel à cette méthode interrompt l'écoute.</span><span class="sxs-lookup"><span data-stu-id="140b4-140">Calling this method stops the listener listening.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-141">Obtient l'intervalle de temps par défaut autorisé pour la fermeture du répartiteur de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-141">Gets the default interval of time allowed for the channel dispatcher to close.</span></span></summary>
        <value><span data-ttu-id="140b4-142"><see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps par défaut autorisé pour la fermeture du répartiteur de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-142">The <see cref="T:System.TimeSpan" /> that specifies the default interval of time allowed for the channel dispatcher to close.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-143">Ce délai d'attente de fermeture par défaut peut être défini à l'aide de <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</span><span class="sxs-lookup"><span data-stu-id="140b4-143">This default close timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</span></span> <span data-ttu-id="140b4-144">Sinon, une valeur par défaut de modèle de service de 1 minute est utilisée.</span><span class="sxs-lookup"><span data-stu-id="140b4-144">Otherwise, a service model default value of 1 minute is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-145">Obtient l'intervalle de temps par défaut autorisé pour l'ouverture du répartiteur de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-145">Gets the default interval of time allowed for the channel dispatcher to open.</span></span></summary>
        <value><span data-ttu-id="140b4-146"><see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps par défaut autorisé pour la fermeture du répartiteur de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-146">The <see cref="T:System.TimeSpan" /> that specifies the default interval of time allowed for the channel dispatcher to close.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-147">Ce délai d'attente d'ouverture par défaut peut être défini à l'aide de <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</span><span class="sxs-lookup"><span data-stu-id="140b4-147">This default open timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</span></span> <span data-ttu-id="140b4-148">Sinon, une valeur par défaut de modèle de service de 1 minute est utilisée.</span><span class="sxs-lookup"><span data-stu-id="140b4-148">Otherwise, a service model default value of 1 minute is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected override void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="140b4-149"><see cref="T:System.ServiceModel.ServiceHostBase" /> pour le service.</span><span class="sxs-lookup"><span data-stu-id="140b4-149">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span></span></param>
        <summary><span data-ttu-id="140b4-150">Détache l'hôte de service du répartiteur de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-150">Detaches the service host from the channel dispatcher.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-151"><xref:System.ServiceModel.ServiceHostBase> peut uniquement être détachée lorsqu'une instance du <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> est à l'état <xref:System.ServiceModel.CommunicationState.Created>, étant donné qu'il s'agit du seul état qui soit à la fois mutable et non disposé.</span><span class="sxs-lookup"><span data-stu-id="140b4-151">The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="140b4-152">Affecte la valeur <xref:System.ServiceModel.ServiceHostBase> à l'`null` associé au répartiteur de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-152">Sets the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#18)]
 [!code-vb[S_UE_ChannelDispatcher#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="140b4-153"><paramref name="host" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-153"><paramref name="host" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-154">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-154">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="140b4-155">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-155">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="140b4-156">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-156">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Endpoints">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.EndpointDispatcher&gt; Endpoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.EndpointDispatcher&gt; Endpoints" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endpoints As SynchronizedCollection(Of EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::EndpointDispatcher ^&gt; ^ Endpoints { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::EndpointDispatcher ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-157">Obtient les répartiteurs de point de terminaison qui transfèrent les messages aux points de terminaison de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-157">Gets the endpoint dispatchers which forward messages to the channel endpoints.</span></span></summary>
        <value><span data-ttu-id="140b4-158"><see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> de <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> qui transfère les messages aux points de terminaison de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-158">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> which forward messages to the channel endpoints.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-159"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> a un <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> distinct pour chaque point de terminaison que le canal peut prendre en charge.</span><span class="sxs-lookup"><span data-stu-id="140b4-159">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> has a distinct <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> for each endpoint that the channel can support.</span></span>  
  
 <span data-ttu-id="140b4-160">Utilisez le <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> pour obtenir l'accès aux propriétés d'exécution qui vous permettent de personnaliser l'exécution pour la totalité d'un point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="140b4-160">Use the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> to obtain access to runtime properties that enable you to customize the runtime across an entire endpoint.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#6)]
 [!code-vb[S_UE_ChannelDispatcher#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorHandlers">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.IErrorHandler&gt; ErrorHandlers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Dispatcher.IErrorHandler&gt; ErrorHandlers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorHandlers As Collection(Of IErrorHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::IErrorHandler ^&gt; ^ ErrorHandlers { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::IErrorHandler ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.IErrorHandler&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-161">Obtient un ensemble d'objets <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> qui peuvent être utilisés pour insérer les fonctionnalités de gestion des erreurs personnalisées pour un point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="140b4-161">Gets a set of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objects that can be used to insert custom error handling functionality for an endpoint.</span></span></summary>
        <value><span data-ttu-id="140b4-162"><see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> d'objets <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-162">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#7)]
 [!code-vb[S_UE_ChannelDispatcher#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Host" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-163">Obtient l'hôte pour le service associé au répartiteur.</span><span class="sxs-lookup"><span data-stu-id="140b4-163">Gets the host for the service associated with the dispatcher.</span></span></summary>
        <value><span data-ttu-id="140b4-164"><see cref="T:System.ServiceModel.ServiceHostBase" /> pour le service associé au répartiteur.</span><span class="sxs-lookup"><span data-stu-id="140b4-164">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service associated with the dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-165">Chaque objet <xref:System.ServiceModel.ServiceHost> peut avoir de nombreux objets <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>, chacun étant associé à un <xref:System.ServiceModel.Channels.IChannelListener> différent pour ce service.</span><span class="sxs-lookup"><span data-stu-id="140b4-165">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#8)]
 [!code-vb[S_UE_ChannelDispatcher#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeExceptionDetailInFaults">
      <MemberSignature Language="C#" Value="public bool IncludeExceptionDetailInFaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeExceptionDetailInFaults" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeExceptionDetailInFaults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeExceptionDetailInFaults { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-166">Obtient ou définit une valeur qui indique s'il faut inclure les détails sur une exception dans une erreur.</span><span class="sxs-lookup"><span data-stu-id="140b4-166">Gets or sets a value that indicates whether to include the details about an exception in a fault.</span></span></summary>
        <value>
          <span data-ttu-id="140b4-167"><see langword="true" /> si les détails sur une exception sont inclus dans les erreurs ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-167"><see langword="true" /> if the details about an exception are included in the faults; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-168">Cette propriété peut uniquement être définie lorsque l'instance du <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> est à l'état <xref:System.ServiceModel.CommunicationState.Created>, étant donné qu'il s'agit du seul état qui soit à la fois mutable et non disposé.</span><span class="sxs-lookup"><span data-stu-id="140b4-168">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#19)]
 [!code-vb[S_UE_ChannelDispatcher#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-169">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-169">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="140b4-170">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-170">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="140b4-171">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-171">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsTransactedAccept">
      <MemberSignature Language="C#" Value="public bool IsTransactedAccept { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactedAccept" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTransactedAccept As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTransactedAccept { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-172">Obtient une valeur qui indique si les appels de la méthode accept sur l’écouteur sont effectués sous une transaction.</span><span class="sxs-lookup"><span data-stu-id="140b4-172">Gets a value that indicates whether the accept method calls on the listener are done under a transaction.</span></span></summary>
        <value>
          <span data-ttu-id="140b4-173"><see langword="true" /> si les appels de la méthode accept sur l'écouteur sont effectués sous une transaction ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-173"><see langword="true" /> if the accept method calls on the listener are done under a transaction; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#9)]
 [!code-vb[S_UE_ChannelDispatcher#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransactedReceive">
      <MemberSignature Language="C#" Value="public bool IsTransactedReceive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactedReceive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTransactedReceive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTransactedReceive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-174">Obtient une valeur qui indique si les appels de la méthode receive sur l’écouteur sont effectués sous une transaction.</span><span class="sxs-lookup"><span data-stu-id="140b4-174">Gets a value that indicates whether the receive method calls on the listener are done under a transaction.</span></span></summary>
        <value>
          <span data-ttu-id="140b4-175"><see langword="true" /> si les appels de la méthode receive sur l'écouteur sont effectués sous une transaction ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-175"><see langword="true" /> if the receive method calls on the listener are done under a transaction; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-176">La propriété <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> peut uniquement être définie lorsqu'une instance du <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> est à l'état <xref:System.ServiceModel.CommunicationState.Created>, étant donné qu'il s'agit du seul état qui soit à la fois mutable et non disposé.</span><span class="sxs-lookup"><span data-stu-id="140b4-176">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#10)]
 [!code-vb[S_UE_ChannelDispatcher#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-177">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-177">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="140b4-178">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-178">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="140b4-179">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-179">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Listener" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-180">Obtient l'écouteur associé au répartiteur de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-180">Gets the listener associated with the channel dispatcher.</span></span></summary>
        <value><span data-ttu-id="140b4-181"><see cref="T:System.ServiceModel.Channels.IChannelListener" /> associé au répartiteur de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-181">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associated with the channel dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-182">Un <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associe un <xref:System.ServiceModel.Channels.IChannelListener> d'un URI particulier à une instance d'un service.</span><span class="sxs-lookup"><span data-stu-id="140b4-182">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI with an instance of a service.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#11)]
 [!code-vb[S_UE_ChannelDispatcher#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualAddressing">
      <MemberSignature Language="C#" Value="public bool ManualAddressing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ManualAddressing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing" />
      <MemberSignature Language="VB.NET" Value="Public Property ManualAddressing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ManualAddressing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-183">Obtient ou définit une valeur qui indique si le répartiteur de canal ajoute des en-têtes d'adressage aux messages de demande/réponse.</span><span class="sxs-lookup"><span data-stu-id="140b4-183">Gets or sets a value that indicates whether the channel dispatcher adds addressing headers to request-reply messages.</span></span></summary>
        <value>
          <span data-ttu-id="140b4-184"><see langword="true" /> si le proxy n'ajoute pas d'en-tête d'adressage ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-184"><see langword="true" /> if the proxy does not add any addressing headers; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="140b4-185">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-185">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-186">Cette propriété peut uniquement être définie lorsque l'instance du <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> est à l'état <xref:System.ServiceModel.CommunicationState.Created>, étant donné qu'il s'agit du seul état qui soit à la fois mutable et non disposé.</span><span class="sxs-lookup"><span data-stu-id="140b4-186">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="140b4-187">Affectez la valeur <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> à la propriété `true` si vous souhaitez empêcher le client d'ajouter les en-têtes d'adressage ID du message et Répondre à aux messages de demande/réponse de sorte que votre application puisse contrôler ces en-têtes.</span><span class="sxs-lookup"><span data-stu-id="140b4-187">Set the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> property to `true` if you want to prevent the client from adding Message ID and ReplyTo addressing headers to request/response messages so that your application can control these headers.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#12)]
 [!code-vb[S_UE_ChannelDispatcher#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-188">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-188">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="140b4-189">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-189">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="140b4-190">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-190">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxPendingReceives">
      <MemberSignature Language="C#" Value="public int MaxPendingReceives { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPendingReceives" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPendingReceives As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPendingReceives { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-191">Obtient ou définit les messages en attente maximaux par canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-191">Gets or sets the maximum pending messages per channel.</span></span></summary>
        <value><span data-ttu-id="140b4-192">Entier qui représente un nombre maximal de messages.</span><span class="sxs-lookup"><span data-stu-id="140b4-192">An integer representing a maximum number of messages.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTransactedBatchSize">
      <MemberSignature Language="C#" Value="public int MaxTransactedBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxTransactedBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTransactedBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxTransactedBatchSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-193">Obtient ou définit la taille maximale pour un lot traité.</span><span class="sxs-lookup"><span data-stu-id="140b4-193">Gets or sets the maximum size for a transacted batch.</span></span></summary>
        <value><span data-ttu-id="140b4-194">Taille maximale pour un lot traité.</span><span class="sxs-lookup"><span data-stu-id="140b4-194">The maximum size for a transacted batch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-195">La propriété <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> peut uniquement être définie lorsqu'une instance du <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> est à l'état <xref:System.ServiceModel.CommunicationState.Created>, étant donné qu'il s'agit du seul état qui soit à la fois mutable et non disposé.</span><span class="sxs-lookup"><span data-stu-id="140b4-195">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#13)]
 [!code-vb[S_UE_ChannelDispatcher#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="140b4-196">La valeur définie est inférieure à zéro.</span><span class="sxs-lookup"><span data-stu-id="140b4-196">The value set is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-197">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-197">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="140b4-198">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-198">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="140b4-199">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-199">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MessageVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageVersion MessageVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion MessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageVersion ^ MessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); void set(System::ServiceModel::Channels::MessageVersion ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-200">Obtient ou définit le message SOAP et les versions WS-Addressing qui sont utilisées ou attendues.</span><span class="sxs-lookup"><span data-stu-id="140b4-200">Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</span></span></summary>
        <value><span data-ttu-id="140b4-201"><see cref="T:System.ServiceModel.Channels.MessageVersion" /> qui est utilisée ou attendue.</span><span class="sxs-lookup"><span data-stu-id="140b4-201">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used or expected.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-202">Spécifie les versions de SOAP et WS-Addressing associées à un message et son échange.</span><span class="sxs-lookup"><span data-stu-id="140b4-202">Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.</span></span>  
  
 <span data-ttu-id="140b4-203">Cette propriété peut uniquement être définie lorsque l'instance du <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> est à l'état <xref:System.ServiceModel.CommunicationState.Created>, étant donné qu'il s'agit du seul état qui soit à la fois mutable et non disposé.</span><span class="sxs-lookup"><span data-stu-id="140b4-203">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#20)]
 [!code-vb[S_UE_ChannelDispatcher#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-204">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-204">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="140b4-205">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-205">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="140b4-206">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-206">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected override void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAbort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAbort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="140b4-207">Abandonne l'écouteur associé au répartiteur.</span><span class="sxs-lookup"><span data-stu-id="140b4-207">Aborts the listener associated with the dispatcher.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginClose">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="140b4-208"><see cref="T:System.TimeSpan" /> qui spécifie le délai d'exécution de l'opération de fermeture avant le dépassement du délai d'attente.</span><span class="sxs-lookup"><span data-stu-id="140b4-208">The <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="140b4-209">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</span><span class="sxs-lookup"><span data-stu-id="140b4-209">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the close operation.</span></span></param>
        <param name="state"><span data-ttu-id="140b4-210">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</span><span class="sxs-lookup"><span data-stu-id="140b4-210">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="140b4-211">Commence une opération asynchrone pour fermer un écouteur de canal pour le répartiteur qui doit être terminée dans un intervalle de temps spécifié.</span><span class="sxs-lookup"><span data-stu-id="140b4-211">Begins an asynchronous operation to close a channel listener for the dispatcher that must be completed within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="140b4-212"><see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone pour fermer un écouteur de canal pour le répartiteur.</span><span class="sxs-lookup"><span data-stu-id="140b4-212">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close a channel listener for the dispatcher.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOpen">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="140b4-213"><see cref="T:System.TimeSpan" /> qui spécifie le délai d'exécution de l'opération d'ouverture avant le dépassement du délai d'attente.</span><span class="sxs-lookup"><span data-stu-id="140b4-213">The <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="140b4-214">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone d'ouverture.</span><span class="sxs-lookup"><span data-stu-id="140b4-214">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the open operation.</span></span></param>
        <param name="state"><span data-ttu-id="140b4-215">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération d'ouverture asynchrone.</span><span class="sxs-lookup"><span data-stu-id="140b4-215">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span></span></param>
        <summary><span data-ttu-id="140b4-216">Commence une opération asynchrone pour ouvrir un écouteur de canal pour le répartiteur qui doit être terminée dans un intervalle de temps spécifié.</span><span class="sxs-lookup"><span data-stu-id="140b4-216">Begins an asynchronous operation to open a channel listener for the dispatcher that must be completed within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="140b4-217"><see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone pour ouvrir un écouteur de canal pour le répartiteur.</span><span class="sxs-lookup"><span data-stu-id="140b4-217">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to open a channel listener for the dispatcher.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-218">Le répartiteur de canal doit être associé à un hôte de service qui n'a pas la valeur `null` lorsque cette méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="140b4-218">The channel dispatcher must be associated with a non-`null` service host when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-219">L'hôte ou la version de message a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-219">The host or the message version is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected override void OnClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClose (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClose(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="140b4-220"><see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps autorisé pour la fermeture de l'écouteur.</span><span class="sxs-lookup"><span data-stu-id="140b4-220">The <see cref="T:System.TimeSpan" /> that specifies the interval of time allowed for the listener to close.</span></span></param>
        <summary><span data-ttu-id="140b4-221">Ferme l'écouteur de canal associé au répartiteur dans un intervalle de temps spécifié.</span><span class="sxs-lookup"><span data-stu-id="140b4-221">Closes the channel listener associated with the dispatcher within a specified interval of time.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="140b4-222">Fournit un suivi de la fermeture des répartiteurs de point de terminaison associés au répartiteur de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-222">Provides a trace of the closing of the endpoint dispatchers associated with the channel dispatcher.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndClose">
      <MemberSignature Language="C#" Value="protected override void OnEndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndClose(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="140b4-223"><see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-223">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="140b4-224">Termine une opération asynchrone pour fermer un écouteur de canal pour le répartiteur.</span><span class="sxs-lookup"><span data-stu-id="140b4-224">Completes an asynchronous operation to close a channel listener for the dispatcher.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndOpen">
      <MemberSignature Language="C#" Value="protected override void OnEndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndOpen(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="140b4-225"><see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-225">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="140b4-226">Termine une opération asynchrone pour ouvrir un écouteur de canal pour le répartiteur.</span><span class="sxs-lookup"><span data-stu-id="140b4-226">Completes an asynchronous operation to open a channel listener for the dispatcher.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpen">
      <MemberSignature Language="C#" Value="protected override void OnOpen (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpen(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpen (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpen(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="140b4-227"><see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps autorisé pour l'ouverture de l'écouteur.</span><span class="sxs-lookup"><span data-stu-id="140b4-227">The <see cref="T:System.TimeSpan" /> that specifies the interval of time allowed for the listener to open.</span></span></param>
        <summary><span data-ttu-id="140b4-228">Ouvre l'écouteur associé au répartiteur de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-228">Opens the listener associated with the channel dispatcher.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-229">Le répartiteur de canal doit être associé à un hôte de service qui n'a pas la valeur `null` lorsque cette méthode est appelée et la valeur `null` ne doit pas être affectée à la version de message.</span><span class="sxs-lookup"><span data-stu-id="140b4-229">The channel dispatcher must be associated with a non-`null` service host when this method is called and message version must be set to a non-`null` value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-230">L'hôte ou la version de message a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-230">The host or the message version is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected override void OnOpened ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpened() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpened ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpened();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="140b4-231">Remplit et valide la table de filtres utilisée pour distribuer aux points de terminaison.</span><span class="sxs-lookup"><span data-stu-id="140b4-231">Populates and validates filter table used to dispatch to the endpoints.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-232">Le répartiteur de canal doit être associé à un hôte de service qui n'a pas la valeur `null` lorsque cette méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="140b4-232">The channel dispatcher must be associated with a non-`null` service host when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-233">L'hôte a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-233">The host is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnOpening">
      <MemberSignature Language="C#" Value="protected override void OnOpening ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpening ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpening();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="140b4-234">Vérifie si le répartiteur de canal est attaché à un hôte.</span><span class="sxs-lookup"><span data-stu-id="140b4-234">Checks whether the channel dispatcher is attached to a host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-235">Le répartiteur de canal doit être associé à un hôte de service qui n'a pas la valeur `null` à l'ouverture.</span><span class="sxs-lookup"><span data-stu-id="140b4-235">The channel dispatcher must be associated with a non-`null` service host on opening.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-236">L'hôte a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-236">The host is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveContextEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveContextEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-237">Obtient ou définit si ReceiveContext est activé.</span><span class="sxs-lookup"><span data-stu-id="140b4-237">Gets or sets whether ReceiveContext is enabled.</span></span></summary>
        <value>
          <span data-ttu-id="140b4-238"><see langword="true" /> si ReceiveContext est activé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-238"><see langword="true" /> if ReceiveContext is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-239">ReceiveContext contrôle la manière à laquelle les messages sont contrôlés par le service, en verrouillant par exemple le message aussi longtemps que nécessaire.</span><span class="sxs-lookup"><span data-stu-id="140b4-239">The ReceiveContext controls the manner in which messages are handled by the service, for example locking of the message as long as needed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-240">Obtient ou définit une valeur qui spécifie si le répartiteur utilise des appels synchrones pour lire les messages de canaux.</span><span class="sxs-lookup"><span data-stu-id="140b4-240">Gets or sets a value that specifies whether the dispatcher uses synchronous calls to read messages from channels.</span></span></summary>
        <value>
          <span data-ttu-id="140b4-241"><see langword="true" /> si le répartiteur utilise des méthodes synchrones pour lire les messages de canaux ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-241"><see langword="true" /> if the dispatcher uses synchronous methods to read messages from channels; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="140b4-242">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-242">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-243">Si une liaison implémente <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] affecte la valeur de la propriété <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> à cette propriété.</span><span class="sxs-lookup"><span data-stu-id="140b4-243">If a binding implements <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] assigns the value of the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property to this property.</span></span> <span data-ttu-id="140b4-244">Si cette valeur est `true`, la valeur par défaut `false` de <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> est donc substituée.</span><span class="sxs-lookup"><span data-stu-id="140b4-244">So if this value is `true`, the `false` default value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> is overridden.</span></span>  
  
 <span data-ttu-id="140b4-245">Cette propriété peut uniquement être définie lorsque l'instance du <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> est à l'état <xref:System.ServiceModel.CommunicationState.Created>, étant donné qu'il s'agit du seul état qui soit à la fois mutable et non disposé.</span><span class="sxs-lookup"><span data-stu-id="140b4-245">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#14)]
 [!code-vb[S_UE_ChannelDispatcher#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-246">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-246">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="140b4-247">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-247">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="140b4-248">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-248">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsynchronously">
      <MemberSignature Language="C#" Value="public bool SendAsynchronously { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendAsynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Property SendAsynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SendAsynchronously { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-249">Obtient ou définit si les messages sont envoyés de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="140b4-249">Gets or sets whether messages are sent asynchronously.</span></span></summary>
        <value>
          <span data-ttu-id="140b4-250"><see langword="true" /> si les messages sont envoyés de façon asynchrone; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-250"><see langword="true" /> if messages are sent asynchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceThrottle">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceThrottle As ServiceThrottle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ServiceThrottle ^ ServiceThrottle { System::ServiceModel::Dispatcher::ServiceThrottle ^ get(); void set(System::ServiceModel::Dispatcher::ServiceThrottle ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ServiceThrottle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-251">Obtient ou définit la limitation de service pour le service associé au répartiteur de canal.</span><span class="sxs-lookup"><span data-stu-id="140b4-251">Gets or sets the service throttle for the service associated with the channel dispatcher.</span></span></summary>
        <value><span data-ttu-id="140b4-252">Objet <see cref="T:System.ServiceModel.Dispatcher.ServiceThrottle" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-252">A <see cref="T:System.ServiceModel.Dispatcher.ServiceThrottle" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-253">Cela fournit l'accès aux contrôles utilisés pour optimiser la disponibilité et les performances d'un service.</span><span class="sxs-lookup"><span data-stu-id="140b4-253">This provides access to the controls used to optimize the availability and performance of a service.</span></span>  
  
 <span data-ttu-id="140b4-254">Cette propriété peut uniquement être définie lorsque l'instance du <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> est à l'état <xref:System.ServiceModel.CommunicationState.Created>, étant donné qu'il s'agit du seul état qui soit à la fois mutable et non disposé.</span><span class="sxs-lookup"><span data-stu-id="140b4-254">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#15)]
 [!code-vb[S_UE_ChannelDispatcher#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-255">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-255">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="140b4-256">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-256">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="140b4-257">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-257">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionIsolationLevel">
      <MemberSignature Language="C#" Value="public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Transactions.IsolationLevel TransactionIsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionIsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Transactions::IsolationLevel TransactionIsolationLevel { System::Transactions::IsolationLevel get(); void set(System::Transactions::IsolationLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-258">Obtient ou définit le niveau d’isolement par défaut pour les transactions.</span><span class="sxs-lookup"><span data-stu-id="140b4-258">Gets or sets the default isolation level for transactions.</span></span></summary>
        <value><span data-ttu-id="140b4-259">Une des valeurs de <see cref="T:System.Transactions.IsolationLevel" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-259">One of the <see cref="T:System.Transactions.IsolationLevel" /> values.</span></span> <span data-ttu-id="140b4-260">La valeur par défaut est <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-260">The default is <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-261">Utilisez la propriété <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> pour obtenir ou définir le niveau d'isolement par défaut pour les transactions créées par le répartiteur pour le service.</span><span class="sxs-lookup"><span data-stu-id="140b4-261">Use the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> property to get or set the default isolation level for new transactions created by the dispatcher for the service.</span></span>  
  
 <span data-ttu-id="140b4-262">Cette propriété peut uniquement être définie lorsque l'instance du <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> est à l'état <xref:System.ServiceModel.CommunicationState.Created>, étant donné qu'il s'agit du seul état qui soit à la fois mutable et non disposé.</span><span class="sxs-lookup"><span data-stu-id="140b4-262">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#16)]
 [!code-vb[S_UE_ChannelDispatcher#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="140b4-263">Le niveau d'isolement n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="140b4-263">The isolation level set is not defined.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-264">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-264">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="140b4-265">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-265">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="140b4-266">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-266">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan TransactionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TransactionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TransactionTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="140b4-267">Obtient ou définit une valeur qui spécifie le délai d’attente par défaut pour les transactions créées par le répartiteur pour le compte du service.</span><span class="sxs-lookup"><span data-stu-id="140b4-267">Gets or sets a value that specifies the default timeout for new transactions created by the dispatcher on behalf of the service.</span></span></summary>
        <value><span data-ttu-id="140b4-268">Valeur <see cref="T:System.TimeSpan" /> qui représente le délai d'attente par défaut pour les transactions.</span><span class="sxs-lookup"><span data-stu-id="140b4-268">A <see cref="T:System.TimeSpan" /> value that represents the default timeout period for transactions.</span></span> <span data-ttu-id="140b4-269">La valeur par défaut est <see cref="F:System.TimeSpan.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-269">The default is <see cref="F:System.TimeSpan.Zero" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140b4-270">Cette propriété peut uniquement être définie lorsque l'instance du <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> est à l'état <xref:System.ServiceModel.CommunicationState.Created>, étant donné qu'il s'agit du seul état qui soit à la fois mutable et non disposé.</span><span class="sxs-lookup"><span data-stu-id="140b4-270">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#17)]
 [!code-vb[S_UE_ChannelDispatcher#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="140b4-271">La valeur définie est inférieure à zéro ou trop élevée.</span><span class="sxs-lookup"><span data-stu-id="140b4-271">The value set is less than zero or is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="140b4-272">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-272">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="140b4-273">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-273">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="140b4-274">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span><span class="sxs-lookup"><span data-stu-id="140b4-274">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>