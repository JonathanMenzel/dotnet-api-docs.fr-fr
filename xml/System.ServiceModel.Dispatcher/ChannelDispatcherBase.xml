<Type Name="ChannelDispatcherBase" FullName="System.ServiceModel.Dispatcher.ChannelDispatcherBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dad5e141479796dd737e2665a74ecbfdfd17ee12" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34316214" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelDispatcherBase extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelDispatcherBase&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcherBase abstract : System::ServiceModel::Channels::CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Classe de base abstraite pour le répartiteur de canal qui accepte les canaux et les associe à un service.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il est utilisé par les développeurs qui souhaitent conserver le modèle de programmation Windows Communication Foundation (WCF), mais remplacez le runtime fournie par le système. De telles applications extrairont des messages des canaux et les géreront directement avec les répartiteurs définis par l’utilisateur. Pour utiliser <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>, créez une classe qui en dérive, étendez <xref:System.ServiceModel.ServiceHost> et substituez <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, en ajoutant des instances de votre classe dérivée de <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> à <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  
  
 L'<xref:System.ServiceModel.Channels.IChannelListener> et l'<xref:System.ServiceModel.ServiceHost>, associés à l'objet <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> sont respectivement disponibles pour l'inspection ou la modification via <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> et <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>.  
  
 <xref:System.ServiceModel.ServiceHost> appelle les méthodes <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> ou <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> lors de l'ajout ou de la suppression d'un élément <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> de sa collection <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  
  
 <xref:System.ServiceModel.ServiceHost> appelle la méthode <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> au moment de l'arrêt avant la fermeture d'InstanceContexts. Windows Communication Foundation (WCF) utilise cet appel pour fermer les canaux de datagramme et attendre que tous les messages à obtenir pour un InstanceContext.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelDispatcherBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelDispatcherBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected virtual void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">
          <see cref="T:System.ServiceModel.ServiceHostBase" /> pour le service.</param>
        <summary>En cas de substitution dans une classe dérivée, attache le répartiteur de canal à un hôte spécifique.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode peut être définie uniquement lorsque l'instance du <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> est dans l'état <xref:System.ServiceModel.CommunicationState.Created>, étant donné qu'il s'agit du seul état qui soit à la fois mutable et non disposé.  
  
 Un <xref:System.ServiceModel.ServiceHost> appelle cette méthode lorsque la <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> est ajoutée à sa collection <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  Elle donne à la <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> la possibilité de raccorder des événements et d'inspecter l'<xref:System.ServiceModel.ServiceHost> et fournit la valeur qui doit être retournée par la propriété <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou l'hôte est déjà défini.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public virtual void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseInput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, supprime les répartiteurs de points de terminaison associés au répartiteur de canal.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ServiceHost> appelle cette méthode au moment de l'arrêt pour donner la possibilité au répartiteur de vider les messages. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> utilise cet appel pour fermer les canaux de datagramme.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected virtual void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">
          <see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
        <summary>En cas de substitution dans une classe dérivée, détache le répartiteur de canal d'un hôte spécifique.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ServiceHostBase> peut uniquement être détachée lorsqu'une instance du <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> est à l'état <xref:System.ServiceModel.CommunicationState.Created>, étant donné qu'il s'agit du seul état qui soit à la fois mutable et non disposé.  
  
 Doit affecter la valeur <xref:System.ServiceModel.ServiceHostBase> à la `null` associée au répartiteur de canal.  
  
 <xref:System.ServiceModel.ServiceHost> appelle cette méthode lorsque la <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> est supprimée de sa collection <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>. Elle donne à la <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> la possibilité de décrocher des événements et d'inspecter l'<xref:System.ServiceModel.ServiceHost>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">L'objet de communication est dans un état <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou l'hôte est déjà défini.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">L'objet de communication est dans l'état <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, obtient l'hôte de service associé au répartiteur de canal.</summary>
        <value>
          <see cref="T:System.ServiceModel.ServiceHostBase" /> pour le service associé au répartiteur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque objet <xref:System.ServiceModel.ServiceHost> peut avoir de nombreux objets <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>, chacun étant associé à un <xref:System.ServiceModel.Channels.IChannelListener> différent pour ce service. L'hôte conserve une liste de ces objets <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> dans la collection <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, obtient l'écouteur de canal associé au répartiteur de canal.</summary>
        <value>
          <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associé au répartiteur de canal.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associe un <xref:System.ServiceModel.Channels.IChannelListener> dont les canaux et les messages sont distribués par ce <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>