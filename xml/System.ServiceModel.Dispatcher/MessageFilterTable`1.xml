<Type Name="MessageFilterTable&lt;TFilterData&gt;" FullName="System.ServiceModel.Dispatcher.MessageFilterTable&lt;TFilterData&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7200a3750b1ac9ef66678cf2e9ec772713604b5d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39810620" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageFilterTable&lt;TFilterData&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageFilterTable`1&lt;TFilterData&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.IEnumerable, class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!TFilterData&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageFilterTable(Of TFilterData)&#xA;Implements ICollection(Of KeyValuePair(Of MessageFilter, TFilterData)), IDictionary(Of MessageFilter, TFilterData), IEnumerable(Of KeyValuePair(Of MessageFilter, TFilterData)), IMessageFilterTable(Of TFilterData)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFilterData&gt;&#xA;public ref class MessageFilterTable : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::ServiceModel::Dispatcher::IMessageFilterTable&lt;TFilterData&gt;" />
  <TypeSignature Language="F#" Value="type MessageFilterTable&lt;'FilterData&gt; = class&#xA;    interface IMessageFilterTable&lt;'FilterData&gt;&#xA;    interface IDictionary&lt;MessageFilter, 'FilterData&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;MessageFilter, 'FilterData&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;MessageFilter, 'FilterData&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFilterData" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TFilterData">
      <span data-ttu-id="f192b-101">Le type de la <c>FilterData</c> associé au filtre.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f192b-101">The type of the <c>FilterData</c> associated with the filter.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="f192b-102">Fournit l'implémentation générique d'une table de filtres.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f192b-102">Provides the generic implementation of a filter table.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-103"><xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> accepte les filtres de tout type.</span><span class="sxs-lookup"><span data-stu-id="f192b-103">A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> accepts filters of any type.</span></span> <span data-ttu-id="f192b-104">Il les regroupe en interne dans des tables qui contiennent tous les filtres d'un type donné.</span><span class="sxs-lookup"><span data-stu-id="f192b-104">It groups them internally into tables that contain all the filters of a given type.</span></span> <span data-ttu-id="f192b-105">Lorsqu'un filtre est ajouté, il est placé dans une table de filtres interne, s'il en existe une, qui contient les filtres de ce type.</span><span class="sxs-lookup"><span data-stu-id="f192b-105">When a filter is added, it is put into an internal filter table, if one already exists, which contains filters of its type.</span></span> <span data-ttu-id="f192b-106">Si cette table n'existe pas, <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.CreateFilterTable%2A> est appelé pour allouer une nouvelle table de filtres du type approprié.</span><span class="sxs-lookup"><span data-stu-id="f192b-106">If no such table exists, <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.CreateFilterTable%2A> is called to allocate a new filter table of the appropriate type.</span></span> <span data-ttu-id="f192b-107">Son opération par défaut consiste à appeler <xref:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-107">Its default operation is to call <xref:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable%2A>.</span></span>  
  
 <span data-ttu-id="f192b-108">Ce comportement par défaut peut être substitué pour spécifier explicitement le type de table de filtres associée à un type de filtre.</span><span class="sxs-lookup"><span data-stu-id="f192b-108">This default behavior can be overridden to explicitly specify the type of filter table associated with a type of filter.</span></span> <span data-ttu-id="f192b-109">La première fois qu'un type de filtre est ajouté à la table, le type de table de filtres créé est associé définitivement au type de filtre.</span><span class="sxs-lookup"><span data-stu-id="f192b-109">The first time a filter type is added to the table, the filter table type created is permanently associated with the filter type.</span></span>  
  
 <span data-ttu-id="f192b-110">La priorité est une valeur entière qui sert à regrouper les filtres dans des compartiments de priorité et à définir l'ordre de leur traitement.</span><span class="sxs-lookup"><span data-stu-id="f192b-110">The priority is an integer value used to group filters into priority buckets and order their processing.</span></span> <span data-ttu-id="f192b-111">Plus l'entier assigné à un type de filtre est élevé, plus sa priorité de traitement est haute.</span><span class="sxs-lookup"><span data-stu-id="f192b-111">The larger the integer assigned to a filter type, the higher its priority for processing.</span></span> <span data-ttu-id="f192b-112">Toutes les tables de filtres d'un compartiment de priorité sont évaluées ensemble.</span><span class="sxs-lookup"><span data-stu-id="f192b-112">All the filter tables in a priority bucket are evaluated together.</span></span> <span data-ttu-id="f192b-113">Les compartiments de priorité inférieure ne sont évalués que si les compartiments de priorité supérieure ne fournissent aucune correspondance.</span><span class="sxs-lookup"><span data-stu-id="f192b-113">Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.</span></span> <span data-ttu-id="f192b-114">Une table de filtres assigne une priorité par défaut qui peut être affectée aux filtres ajoutés.</span><span class="sxs-lookup"><span data-stu-id="f192b-114">A filter table assigns a default priority that can be set to filters being added.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f192b-115">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageFilterTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageFilterTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f192b-116">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> avec une propriété par défaut de 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-116">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> class with a default priority of 0.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-117">Plus l'entier assigné à une table de filtres est élevé, plus sa priorité d'utilisation dans la recherche d'une correspondance dans les messages est haute.</span><span class="sxs-lookup"><span data-stu-id="f192b-117">The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match.</span></span> <span data-ttu-id="f192b-118">La priorité par défaut peut être spécifiée à l'aide de <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-118">The default priority can be specified using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.%23ctor%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageFilterTable (int defaultPriority);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 defaultPriority) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultPriority As Integer)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageFilterTable(int defaultPriority);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public MessageFilterTable (int default_priority);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 default_priority) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (default_priority As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageFilterTable(int default_priority);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt; : int -&gt; System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;" Usage="new System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt; default_priority" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultPriority" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="default_priority" Type="System.Int32" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="defaultPriority">
          <span data-ttu-id="f192b-119">Priorité par défaut de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-119">The default priority for filter table.</span>
          </span>
        </param>
        <param name="default_priority">
          <span data-ttu-id="f192b-120">Priorité par défaut de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-120">The default priority for filter table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-121">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> avec la priorité initiale par défaut spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-121">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> class with the specified initial default priority.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-122">Plus l'entier assigné à une table de filtres est élevé, plus sa priorité d'utilisation dans la recherche d'une correspondance dans les messages est haute.</span><span class="sxs-lookup"><span data-stu-id="f192b-122">The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match.</span></span> <span data-ttu-id="f192b-123">Le constructeur par défaut assigne un `defaultPriority` de 0.</span><span class="sxs-lookup"><span data-stu-id="f192b-123">The default constructor assigns a `defaultPriority` of 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f192b-124">Ajoute un filtre et son <paramref name="FilterData" /> associé à la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-124">Adds a filter and its associated <paramref name="FilterData" /> to the filter table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of MessageFilter, TFilterData))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; unit&#xA;override this.Add : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; unit" Usage="messageFilterTable.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f192b-125">Paire <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; ajouté à la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-125">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; added to the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-126">Ajoute une paire filtre/<paramref name="FilterData" /> (clé/valeur) à la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-126">Adds a filter/<paramref name="FilterData" /> (key/value) pair to the filter table.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f192b-127">
            <paramref name="item" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-127">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.ServiceModel.Dispatcher.MessageFilter filter, !TFilterData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (filter As MessageFilter, data As TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData data);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.ServiceModel.Dispatcher.MessageFilter * 'FilterData -&gt; unit&#xA;override this.Add : System.ServiceModel.Dispatcher.MessageFilter * 'FilterData -&gt; unit" Usage="messageFilterTable.Add (filter, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="f192b-128">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> utilisé en tant que clé de la paire ajoutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-128">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> used as the key of the pair added.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="f192b-129">
            <c>FilterData</c> associé au filtre, utilisé comme valeur de la paire ajoutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-129">The <c>FilterData</c> associated with the filter used as the value of the pair added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-130">Ajoute un filtre et son <paramref name="FilterData" /> associé à la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-130">Adds a filter and its associated <paramref name="FilterData" /> to the filter table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-131">Cette opération assigne une priorité par défaut au filtre.</span><span class="sxs-lookup"><span data-stu-id="f192b-131">This assigns the filter a default priority.</span></span> <span data-ttu-id="f192b-132">Pour spécifier la priorité, utilisez <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-132">To specify the priority, use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f192b-133">
            <paramref name="filter" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-133">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f192b-134">
            <paramref name="filter" /> est déjà dans la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-134">
              <paramref name="filter" /> is already in the table.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data, int priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.ServiceModel.Dispatcher.MessageFilter filter, !TFilterData data, int32 priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (filter As MessageFilter, data As TFilterData, priority As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData data, int priority);" />
      <MemberSignature Language="F#" Value="member this.Add : System.ServiceModel.Dispatcher.MessageFilter * 'FilterData * int -&gt; unit" Usage="messageFilterTable.Add (filter, data, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData" />
        <Parameter Name="priority" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="f192b-135">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> utilisé en tant que clé de la paire ajoutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-135">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> used as the key of the pair added.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="f192b-136">
            <c>FilterData</c> associé au filtre, utilisé comme valeur de la paire ajoutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-136">The <c>FilterData</c> associated with the filter used as the value of the pair added.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="f192b-137">Priorité du filtre ajouté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-137">The priority of the filter added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-138">Ajoute un filtre et son <paramref name="FilterData" /> associé à la table de filtres d'action avec une priorité donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-138">Adds a filter and its associated <paramref name="FilterData" /> to the action filter table with a specified priority.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-139">La priorité est une valeur entière qui sert à regrouper les filtres dans des compartiments de priorité et à définir l'ordre de leur traitement.</span><span class="sxs-lookup"><span data-stu-id="f192b-139">The priority is an integer value used to group filters into priority buckets and order their processing.</span></span> <span data-ttu-id="f192b-140">Plus l'entier assigné à un type de filtre est élevé, plus sa priorité de traitement est haute.</span><span class="sxs-lookup"><span data-stu-id="f192b-140">The larger the integer assigned to a filter type, the higher its priority for processing.</span></span> <span data-ttu-id="f192b-141">Toutes les tables de filtres d'un compartiment de priorité sont évaluées ensemble.</span><span class="sxs-lookup"><span data-stu-id="f192b-141">All the filter tables in a priority bucket are evaluated together.</span></span> <span data-ttu-id="f192b-142">Les compartiments de priorité inférieure ne sont évalués que si les compartiments de priorité supérieure ne fournissent aucune correspondance.</span><span class="sxs-lookup"><span data-stu-id="f192b-142">Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.</span></span> <span data-ttu-id="f192b-143">Utilisez <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> pour ajouter un filtre avec la priorité par défaut.</span><span class="sxs-lookup"><span data-stu-id="f192b-143">Use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> to add a filter with the default priority.</span></span> <span data-ttu-id="f192b-144">La priorité par défaut peut être définie à l'aide de <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.DefaultPriority%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-144">The default priority can be set using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.DefaultPriority%2A>.</span></span> <span data-ttu-id="f192b-145">La priorité initiale par défaut est 0.</span><span class="sxs-lookup"><span data-stu-id="f192b-145">The default is initially set to 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f192b-146">
            <paramref name="filter" /> ne peut pas avoir la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-146">
              <paramref name="filter" /> cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f192b-147">
            <paramref name="filter" /> existe déjà dans la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-147">
              <paramref name="filter" /> already exists in the table.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f192b-148">Le type <paramref name="filter" /> ne correspond pas au type de la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-148">
              <paramref name="filter" /> type does not match table type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="messageFilterTable.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f192b-149">Supprime tous les filtres et leurs données associées de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-149">Removes all filters and their associated data from the filter table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-150">Cette méthode implémente <xref:System.Collections.Generic.ICollection%601.Clear%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-150">This method implements <xref:System.Collections.Generic.ICollection%601.Clear%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of MessageFilter, TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool&#xA;override this.Contains : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool" Usage="messageFilterTable.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f192b-151">
            <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt; <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <c>FilterData</c>&gt; à rechercher dans la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-151">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <c>FilterData</c>&gt; to find in the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-152">Détermine si la table de filtres contient un filtre spécifique et son <paramref name="FilterData" /> associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-152">Determines whether the filter table contains a specified filter and its associated <paramref name="FilterData" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-153">
            <see langword="true" /> si la paire <paramref name="filter" />/<paramref name="FilterData" /> est contenue dans la table de filtres ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-153">
              <see langword="true" /> if the <paramref name="filter" />/<paramref name="FilterData" /> pair is contained in the filter table; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-154">Cette méthode implémente la méthode `Contains` de <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="f192b-154">This method implements the `Contains` method of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool&#xA;override this.ContainsKey : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool" Usage="messageFilterTable.ContainsKey filter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="f192b-155">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> actuellement testé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-155">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> being tested for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-156">Détermine si la table de filtres contient un filtre spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-156">Determines whether the filter table contains a specified filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-157">
            <see langword="true" /> si <paramref name="filter" /> est contenu dans la table de filtres ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-157">
              <see langword="true" /> if the <paramref name="filter" /> is contained in the filter table; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-158">Cette méthode implémente la méthode `ContainsKey` de <xref:System.Collections.Generic.IDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="f192b-158">This method implements the `ContainsKey` method of <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[] array, int arrayIndex);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;[] array, int32 arrayIndex) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of MessageFilter, TFilterData)(), arrayIndex As Integer)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ array, int arrayIndex);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[] array, int index);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;[] array, int32 index) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of MessageFilter, TFilterData)(), index As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ array, int index);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;[] * int -&gt; unit" Usage="messageFilterTable.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[]" Index="0" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="f192b-159">Tableau de base zéro de type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; dans lequel les paires sont copiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-159">The zero-based array of type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to which the pairs are being copied.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="f192b-160">Index où commence la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-160">The index at which to begin copying.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f192b-161">Index où commence la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-161">The index at which to begin copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-162">Copie les paires filtre/<paramref name="FilterData" /> vers un tableau qui commence à un index spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-162">Copies the filter/<paramref name="FilterData" /> pairs to an array that starts at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-163">Cette méthode implémente la méthode `CopyTo` de <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="f192b-163">This method implements the `CopyTo` method of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f192b-164">Obtient le nombre de paires filtre/<paramref name="FilterData" /> dans la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-164">Gets the number of filter/<paramref name="FilterData" /> pairs in the filter table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f192b-165">Nombre de paires filtre/<paramref name="FilterData" /> dans la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-165">The number of filter/<paramref name="FilterData" /> pairs items in the filter table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-166">Cette propriété implémente <xref:System.Collections.Generic.ICollection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-166">This property implements <xref:System.Collections.Generic.ICollection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt; CreateFilterTable (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!TFilterData&gt; CreateFilterTable(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateFilterTable (filter As MessageFilter) As IMessageFilterTable(Of TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Dispatcher::IMessageFilterTable&lt;TFilterData&gt; ^ CreateFilterTable(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member CreateFilterTable : System.ServiceModel.Dispatcher.MessageFilter -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;&#xA;override this.CreateFilterTable : System.ServiceModel.Dispatcher.MessageFilter -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="messageFilterTable.CreateFilterTable filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="f192b-167">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> qui doit être contenu dans la table de filtres créée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-167">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> to be contained in the filter table created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-168">Instancie une table de filtres pour un type de filtre spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-168">Instantiates a filter table for a specified type of filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-169">
            <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> créé qui contient le filtre indiqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-169">The <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> that is created that contains the specified filter.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPriority">
      <MemberSignature Language="C#" Value="public int DefaultPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultPriority" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultPriority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPriority : int with get, set" Usage="System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;.DefaultPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f192b-170">Obtient ou définit la priorité par défaut pour la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-170">Gets or sets the default priority for the filter table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f192b-171">Priorité par défaut assignée par les filtres ajoutés à la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-171">The default priority assigned by filters added to the filter table.</span>
          </span>
          <span data-ttu-id="f192b-172">La valeur par défaut de la priorité par défaut est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-172">The default value for the default priority is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-173">La priorité par défaut est la priorité assignée automatiquement à un filtre ajouté à la table de filtres si aucune priorité n'est spécifiée de manière explicite.</span><span class="sxs-lookup"><span data-stu-id="f192b-173">The default priority is the priority automatically assigned a filter added to the filter table if no priority is explicitly specified.</span></span> <span data-ttu-id="f192b-174">La priorité d'un filtre est une valeur entière utilisée pour regrouper des filtres dans des compartiments servant à définir l'ordre de leur traitement.</span><span class="sxs-lookup"><span data-stu-id="f192b-174">The priority of a filter is an integer value used to group filters into buckets that are used to order their processing.</span></span> <span data-ttu-id="f192b-175">Plus l'entier assigné à un type de filtre est élevé, plus sa priorité de traitement est haute.</span><span class="sxs-lookup"><span data-stu-id="f192b-175">The larger the integer assigned to a filter type, the higher its priority for processing.</span></span> <span data-ttu-id="f192b-176">Toutes les tables de filtres d'un compartiment de priorité sont évaluées ensemble.</span><span class="sxs-lookup"><span data-stu-id="f192b-176">All the filter tables in a priority bucket are evaluated together.</span></span> <span data-ttu-id="f192b-177">Les compartiments de priorité inférieure ne sont évalués que si les compartiments de priorité supérieure ne fournissent aucune correspondance.</span><span class="sxs-lookup"><span data-stu-id="f192b-177">Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of MessageFilter, TFilterData))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;&gt;" Usage="messageFilterTable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f192b-178">Retourne un énumérateur qui effectue une itération au sein de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-178">Returns an enumerator that iterates through the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-179">
            <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, <paramref name="FilterData" />&gt;&gt; qui peut être utilisé pour itérer au sein de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-179">An <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, <paramref name="FilterData" />&gt;&gt; that can be used to iterate through the filter table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-180">Cette méthode implémente la méthode `GetEnumerator` de <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="f192b-180">This method implements the `GetEnumerator` method of <xref:System.Collections.IEnumerable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilter">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f192b-181">Retourne une valeur qui indique si le message indiqué ou la mémoire tampon du message précisée respecte le critère de correspondance d'un filtre dans la table, et retourne le filtre dans un paramètre <see langword="out" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-181">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or message buffer and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-182">Teste si un message répond à l'un des filtres dans la table de filtres.</span><span class="sxs-lookup"><span data-stu-id="f192b-182">Tests whether a message satisfies any of the filters in the filter table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; result) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.Message *  -&gt; bool&#xA;override this.GetMatchingFilter : System.ServiceModel.Channels.Message *  -&gt; bool" Usage="messageFilterTable.GetMatchingFilter (message, result)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" Index="0" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="result" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f192b-183">
            <see cref="T:System.ServiceModel.Channels.Message" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-183">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="f192b-184">Paramètre <see langword="out" /> qui stocke le filtre respecté par <c>message</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-184">The <see langword="out" /> parameter that stores the filter that is satisfied by the <c>message</c>.</span>
          </span>
          <span data-ttu-id="f192b-185">Si aucun filtre n'a été trouvé, le paramètre est défini à sa valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-185">If no filter was found, the parameter is set to its default value.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="f192b-186">Paramètre <see langword="out" /> qui stocke le filtre respecté par <c>message</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-186">The <see langword="out" /> parameter that stores the filter that is satisfied by the <c>message</c>.</span>
          </span>
          <span data-ttu-id="f192b-187">Si aucun filtre n'a été trouvé, le paramètre est défini à sa valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-187">If no filter was found, the parameter is set to its default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-188">Retourne une valeur qui indique si le message spécifié respecte le critère de correspondance d'un filtre dans la table, et retourne le filtre dans un paramètre <see langword="out" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-188">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-189">
            <see langword="true" /> si le critère de correspondance d'un <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> de la table est respecté par le message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-189">
              <see langword="true" /> if match criterion of one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-190">Utilisez cette méthode lorsqu'un filtre unique est supposé correspondre au message et que le filtre correspondant est requis.</span><span class="sxs-lookup"><span data-stu-id="f192b-190">Use this method when a single filter is expected to match the message and the matching filter is required.</span></span>  
  
 <span data-ttu-id="f192b-191">Si le corps du message doit être inspecté par un filtre dans la table de filtres, utilisez la version <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> de la méthode.</span><span class="sxs-lookup"><span data-stu-id="f192b-191">If the body of the message must be inspected by a filter in the filter table, use the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> version of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="f192b-192">Plusieurs <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> correspondent à <paramref name="messageBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-192">More than one <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> matches the <paramref name="messageBuffer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer buffer, out System.ServiceModel.Dispatcher.MessageFilter filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer buffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (buffer As MessageBuffer, ByRef filter As MessageFilter) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer buffer, out System.ServiceModel.Dispatcher.MessageFilter result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer buffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; result) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (buffer As MessageBuffer, ByRef result As MessageFilter) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.MessageBuffer *  -&gt; bool&#xA;override this.GetMatchingFilter : System.ServiceModel.Channels.MessageBuffer *  -&gt; bool" Usage="messageFilterTable.GetMatchingFilter (buffer, result)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="result" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f192b-193">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-193">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="f192b-194">Paramètre <see langword="out" /> qui stocke le filtre respecté par <c>messageBuffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-194">The <see langword="out" /> parameter that stores the filter that is satisfied by the <c>messageBuffer</c>.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="f192b-195">Paramètre <see langword="out" /> qui stocke le filtre respecté par <c>messageBuffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-195">The <see langword="out" /> parameter that stores the filter that is satisfied by the <c>messageBuffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-196">Retourne une valeur qui indique si le message spécifié respecte le critère de correspondance d'un filtre dans la table, et retourne le filtre dans un paramètre <see langword="out" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-196">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-197">
            <see langword="true" /> si le critère de correspondance d'un et un seul filtre de la table est respecté par le message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-197">
              <see langword="true" /> if match criterion of exactly one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-198">Utilisez cette méthode lorsqu'un filtre unique est censé correspondre au message et que le filtre correspondant doit être retourné.</span><span class="sxs-lookup"><span data-stu-id="f192b-198">Use this method when a single filter is expected to match the message and the matching filter must be returned.</span></span>  
  
 <span data-ttu-id="f192b-199">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-199">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="f192b-200">Plusieurs <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> correspondent à <paramref name="messageBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-200">More than one <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> matches the <paramref name="messageBuffer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilters">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f192b-201">Retourne une valeur qui indique si le critère de correspondance d'un <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> dans la table est respecté par le message ou le message mis en mémoire tampon spécifié, et ajoute les filtres correspondants à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-201">Returns a value that indicates whether the match criterion of a <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the specified message or buffered message, and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-202">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au message et que les filtres correspondants sont requis.</span><span class="sxs-lookup"><span data-stu-id="f192b-202">Use this method when more than one filter is expected to match the message and the matching filters are required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilters(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilters : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool&#xA;override this.GetMatchingFilters : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="messageFilterTable.GetMatchingFilters (message, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f192b-203">
            <see cref="T:System.ServiceModel.Channels.Message" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-203">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="f192b-204">Paramètre de référence qui stocke les objets <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> correspondant dans <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-204">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-205">Retourne une valeur qui indique si le critère de correspondance d'un <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> de la table est respecté par le message spécifié, et ajoute les filtres correspondants à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-205">Returns a value that indicates whether the match criterion of an <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the specified message, and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-206">
            <see langword="true" /> si le critère de correspondance d'au moins un <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> de la table est respecté par <paramref name="message" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-206">
              <see langword="true" /> if match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-207">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au message et que les filtres correspondants sont requis.</span><span class="sxs-lookup"><span data-stu-id="f192b-207">Use this method when more than one filter is expected to match the message and the matching filters are required.</span></span>  
  
 <span data-ttu-id="f192b-208">Cette méthode teste tous les filtres correspondants dans le compartiment de filtres de priorité supérieure dans lequel au moins une correspondance est présente.</span><span class="sxs-lookup"><span data-stu-id="f192b-208">This method tests for all of the matching filters in the highest priority bucket of filters in which at least one match occurs.</span></span>  
  
 <span data-ttu-id="f192b-209">Les filtres de la table ne peuvent pas inspecter le corps du message.</span><span class="sxs-lookup"><span data-stu-id="f192b-209">The filters in the table are not allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="f192b-210">Les objets <xref:System.ServiceModel.Dispatcher.MessageFilter> correspondants sont stockés dans le paramètre `results` de <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="f192b-210">The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span> <span data-ttu-id="f192b-211">Les `FilterData` peuvent ensuite être récupérés de la table de filtres qui utilise ces filtres comme clés avec les méthodes fournies par <xref:System.Collections.Generic.IDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="f192b-211">The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 <span data-ttu-id="f192b-212">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-212">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f192b-213">
            <paramref name="results" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-213">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
          <span data-ttu-id="f192b-214">Un filtre a essayé d'examiner le contenu du corps du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-214">A filter attempted to examine the contents of the message body.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.MessageBuffer buffer, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (buffer As MessageBuffer, results As ICollection(Of MessageFilter)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilters(System::ServiceModel::Channels::MessageBuffer ^ buffer, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilters : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool&#xA;override this.GetMatchingFilters : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="messageFilterTable.GetMatchingFilters (buffer, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f192b-215">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-215">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="f192b-216">Paramètre de référence qui stocke les objets <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> correspondant dans <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-216">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-217">Retourne une valeur qui indique si le message mis en mémoire tampon indiqué respecte le critère de correspondance d’au moins un filtre de la table, et ajoute à une collection les filtres correspondants du jeu de filtres de priorité la plus élevée qui contient au moins une correspondance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-217">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the matching filters from the highest priority set of filters in which at least one match is found to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-218">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre de la table est respecté par <paramref name="message" /> ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-218">
              <see langword="true" /> if match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-219">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au message mis en mémoire tampon et que les filtres correspondants sont requis.</span><span class="sxs-lookup"><span data-stu-id="f192b-219">Use this method when more than one filter is expected to match the buffered message and the matching filters are required.</span></span>  
  
 <span data-ttu-id="f192b-220">Les filtres de la table peuvent inspecter le corps du message.</span><span class="sxs-lookup"><span data-stu-id="f192b-220">The filters in the table are allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="f192b-221">Les objets <xref:System.ServiceModel.Dispatcher.MessageFilter> correspondants sont stockés dans le paramètre `results` de <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="f192b-221">The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span> <span data-ttu-id="f192b-222">Les `FilterData` peuvent ensuite être récupérés de la table de filtres qui utilise ces filtres comme clés avec les méthodes fournies par <xref:System.Collections.Generic.IDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="f192b-222">The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 <span data-ttu-id="f192b-223">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-223">This method implements <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f192b-224">
            <paramref name="results" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-224">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValue">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f192b-225">Retourne une valeur qui indique si le message ou le message mis en mémoire tampon indiqué respecte le critère de correspondance d'une occurrence de <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> dans la table, et ajoute à une collection les données de filtre correspondantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-225">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the specified message or buffered message and adds the matching filter data to a collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-226">Utilisez l'une de ces méthodes lorsqu'un filtre unique est censé correspondre au message et que seul le `FilterData` du filtre correspondant doit être récupéré.</span><span class="sxs-lookup"><span data-stu-id="f192b-226">Use one of these methods when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="f192b-227">Utilisez <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingValue%2A> pour inspecter les en-têtes de message et <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingValue%2A> pour inspecter un message mis en mémoire tampon, qui peut impliquer la consultation du corps du message.</span><span class="sxs-lookup"><span data-stu-id="f192b-227">Use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingValue%2A> to inspect message headers and <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingValue%2A> to inspect a buffered message, which can include looking at the message body.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.Message message, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValue(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValue : System.ServiceModel.Channels.Message *  -&gt; bool&#xA;override this.GetMatchingValue : System.ServiceModel.Channels.Message *  -&gt; bool" Usage="messageFilterTable.GetMatchingValue (message, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f192b-228">
            <see cref="T:System.ServiceModel.Channels.Message" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-228">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="f192b-229">Paramètre <see langword="out" /> qui stocke <c>FilterData</c> pour le filtre correspondant à <c>message</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-229">The <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <c>message</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-230">Retourne une valeur qui indique si le message mis en mémoire tampon indiqué respecte le critère de correspondance d'un objet <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> dans la table, et ajoute à une collection les données de filtre correspondantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-230">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the specified message and adds the matching filter data to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-231">
            <see langword="true" /> si le critère de correspondance d'un filtre de la table est respecté par le message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-231">
              <see langword="true" /> if the match criterion of one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-232">Utilisez cette méthode lorsqu'un filtre unique est supposé correspondre au message et que seul le `FilterData` du filtre correspondant doit être récupéré.</span><span class="sxs-lookup"><span data-stu-id="f192b-232">Use this method when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="f192b-233">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-233">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="f192b-234">Plusieurs filtres correspondent à <paramref name="message" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-234">More than one filter matches the <paramref name="message" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
          <span data-ttu-id="f192b-235">Un filtre a essayé d'examiner le contenu du corps du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-235">A filter attempted to examine the contents of the message body.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer buffer, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.MessageBuffer buffer, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (buffer As MessageBuffer, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValue(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValue : System.ServiceModel.Channels.MessageBuffer *  -&gt; bool&#xA;override this.GetMatchingValue : System.ServiceModel.Channels.MessageBuffer *  -&gt; bool" Usage="messageFilterTable.GetMatchingValue (buffer, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f192b-236">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-236">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="f192b-237">Paramètre <see langword="out" /> qui stocke <c>FilterData</c> pour le filtre correspondant à <c>messageBuffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-237">The <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <c>messageBuffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-238">Retourne une valeur qui indique si le message indiqué respecte le critère de correspondance d’un filtre dans la table, et ajoute les données de filtre correspondantes à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-238">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified buffered message and adds the matching filter data to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-239">
            <see langword="true" /> si le critère de correspondance d'un filtre de la table est respecté par le message mis en mémoire tampon ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-239">
              <see langword="true" /> if the match criterion of one filter in the table is satisfied by the buffered message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-240">Utilisez cette méthode lorsqu'un filtre unique est supposé correspondre au message mis en mémoire tampon et que seul le `FilterData` du filtre correspondant doit être récupéré.</span><span class="sxs-lookup"><span data-stu-id="f192b-240">Use this method when a single filter is expected to match the buffered message and only the `FilterData` from the matching filter must be recovered.</span></span> <span data-ttu-id="f192b-241">Étant donné que le filtre est mis en correspondance avec un message mis en mémoire tampon, il peut spécifier des conditions dans le corps du message.</span><span class="sxs-lookup"><span data-stu-id="f192b-241">Because the filter is being matched to a buffered message, it can specify conditions on the message body.</span></span>  
  
 <span data-ttu-id="f192b-242">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-242">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="f192b-243">Plusieurs filtres correspondent à <paramref name="messageBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-243">More than one filter matches the <paramref name="messageBuffer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValues">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f192b-244">Retourne une valeur qui indique si le message ou le message mis en mémoire tampon indiqué respecte le critère de correspondance d'au moins un filtre de la table, et ajoute <paramref name="FilterData" /> des filtres correspondants à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-244">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message or buffered message and adds the <paramref name="FilterData" /> of the matching filters to a collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-245">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au message ou au message mis en mémoire tampon et que seul `FilterData` est requis.</span><span class="sxs-lookup"><span data-stu-id="f192b-245">Use this method when more than one filter is expected to match the message or buffered message and only the `FilterData` is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValues(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValues : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool&#xA;override this.GetMatchingValues : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="messageFilterTable.GetMatchingValues (message, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="f192b-246">
            <see cref="T:System.ServiceModel.Channels.Message" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-246">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="f192b-247">Paramètre de référence qui stocke le <c>FilterData</c> des filtres d’action correspondants dans un <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt; générique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-247">The reference parameter that stores the <c>FilterData</c> of the matching action filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-248">Retourne une valeur qui indique si le message ou le message mis en mémoire tampon indiqué respecte le critère de correspondance d'au moins un filtre de la table, et ajoute <paramref name="FilterData" /> des filtres correspondants à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-248">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message or buffered message and adds the <paramref name="FilterData" /> of the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-249">
            <see langword="true" /> si le critère de correspondance d'un et un seul filtre de la table est respecté par le message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-249">
              <see langword="true" /> if match criterion of exactly one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-250">Utilisez cette méthode lorsque plusieurs filtres sont censés correspondre au message, que seul `FilterData` est requis et que le corps du message n'est pas inspecté.</span><span class="sxs-lookup"><span data-stu-id="f192b-250">Use this method when more than one filter is expected to match the message, only the `FilterData` is required, and the body of the message is not inspected.</span></span>  
  
 <span data-ttu-id="f192b-251">Le `FilterData` des objets <xref:System.ServiceModel.Dispatcher.MessageFilter> correspondants sont stockés dans le paramètre `results` de <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="f192b-251">The `FilterData` of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="f192b-252">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-252">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f192b-253">
            <paramref name="results" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-253">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
          <span data-ttu-id="f192b-254">Un filtre a essayé d'examiner le contenu du corps du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-254">A filter attempted to examine the contents of the message body.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.MessageBuffer buffer, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (buffer As MessageBuffer, results As ICollection(Of TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValues(System::ServiceModel::Channels::MessageBuffer ^ buffer, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValues : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool&#xA;override this.GetMatchingValues : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="messageFilterTable.GetMatchingValues (buffer, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f192b-255">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-255">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="f192b-256">Paramètre de référence qui stocke les données des filtres que <c>messageBuffer</c> respecte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-256">The reference parameter that stores the filter data of the filters that are satisfied by the <c>messageBuffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-257">Retourne une valeur qui indique si le critère de correspondance d'un et un seul filtre dans la table est respecté par le tampon de messages spécifié, et ajoute le <paramref name="FilterData" /> des filtres correspondants à la collection <paramref name="results" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-257">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message buffer and adds the <paramref name="FilterData" /> of the matching filters to the <paramref name="results" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-258">
            <see langword="true" /> si le message mis en mémoire tampon respecte le critère de correspondance d'une occurrence de <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> issue de la table ; <see langword="false" /> dans le cas contraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-258">
              <see langword="true" /> if the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> in the table is satisfied by the buffered message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-259">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au message mis en mémoire tampon et que seul `FilterData` est requis.</span><span class="sxs-lookup"><span data-stu-id="f192b-259">Use this method when more than one filter is expected to match the buffered message and only the `FilterData` is required.</span></span>  
  
 <span data-ttu-id="f192b-260">Les `FilterData` des objets <xref:System.ServiceModel.Dispatcher.MessageFilter> correspondants sont stockés dans `results`<xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="f192b-260">The `FilterData` of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results`<xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="f192b-261">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-261">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f192b-262">
            <paramref name="results" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-262">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPriority">
      <MemberSignature Language="C#" Value="public int GetPriority (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPriority(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPriority (filter As MessageFilter) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetPriority(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberSignature Language="F#" Value="member this.GetPriority : System.ServiceModel.Dispatcher.MessageFilter -&gt; int" Usage="messageFilterTable.GetPriority filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="f192b-263">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> contenu dans la table de filtres créée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-263">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> contained in the filter table created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-264">Retourne la priorité d'un filtre donné de la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-264">Returns the priority of a given filter in the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-265">Priorité du <paramref name="filter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-265">The priority of the <paramref name="filter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-266">La priorité est une valeur entière qui sert à regrouper les filtres dans des compartiments de priorité et à définir l'ordre de leur traitement.</span><span class="sxs-lookup"><span data-stu-id="f192b-266">The priority is an integer value used to group filters into priority buckets and order their processing.</span></span> <span data-ttu-id="f192b-267">Plus l'entier assigné à un type de filtre est élevé, plus sa priorité de traitement est haute.</span><span class="sxs-lookup"><span data-stu-id="f192b-267">The larger the integer assigned to a filter type, the higher its priority for processing.</span></span> <span data-ttu-id="f192b-268">Toutes les tables de filtres d'un compartiment de priorité sont évaluées ensemble.</span><span class="sxs-lookup"><span data-stu-id="f192b-268">All the filter tables in a priority bucket are evaluated together.</span></span> <span data-ttu-id="f192b-269">Les compartiments de priorité inférieure ne sont évalués que si les compartiments de priorité supérieure ne fournissent aucune correspondance.</span><span class="sxs-lookup"><span data-stu-id="f192b-269">Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f192b-270">Le filtre spécifié n'existe pas dans la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-270">The specified filter does not exist in the filter table.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f192b-271">Obtient une valeur qui indique si la table de filtres est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-271">Gets a value that indicates whether the filter table is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f192b-272">
            <see langword="false" /> pour toutes les tables de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-272">
              <see langword="false" /> for all filter tables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-273">Un <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> ne doit pas être en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="f192b-273">A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> must not be read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TFilterData this[System.ServiceModel.Dispatcher.MessageFilter filter] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFilterData Item(class System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(filter As MessageFilter) As TFilterData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TFilterData default[System::ServiceModel::Dispatcher::MessageFilter ^] { TFilterData get(System::ServiceModel::Dispatcher::MessageFilter ^ filter); void set(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.ServiceModel.Dispatcher.MessageFilter) : 'FilterData with get, set" Usage="System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFilterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="f192b-274">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> associé aux données de filtre à obtenir ou à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-274">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> associated with the filter data to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-275">Obtient ou définit les données de filtre associées au <paramref name="filter" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-275">Gets or sets the filter data associated with the specified <paramref name="filter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f192b-276">Données de filtre associées à <paramref name="filter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-276">The filter data associated with the <paramref name="filter" />.</span>
          </span>
          <span data-ttu-id="f192b-277">Si l'objet <paramref name="filter" /> spécifié est introuvable, une opération Get lève <see cref="T:System.Collections.Generic.KeyNotFoundException" /> et une opération Set crée un élément de données de filtre en utilisant <paramref name="filter" /> comme clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-277">If the specified <paramref name="filter" /> is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" />, and a set operation creates a new filter data element with the specified <paramref name="filter" /> as the key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-278">La propriété `Item` (l'indexeur en C#) permet d'accéder aux données de filtre associées à `filter` dans la collection de filtres de la table par la syntaxe suivante.</span><span class="sxs-lookup"><span data-stu-id="f192b-278">The `Item` property (the indexer in C#) provides the ability to access the filter data associated with a `filter` in the table's filter collection by using the following syntax.</span></span>  
  
```csharp  
myFilters[filter]  
  
```  
  
```vb  
myFilters(filter)  
  
```  
  
 <span data-ttu-id="f192b-279">Vous pouvez également utiliser la propriété `Item` pour ajouter de nouveaux éléments en définissant les valeurs d'une paire de données `filter`/filtre qui n'existe pas dans la table de filtres d'action.</span><span class="sxs-lookup"><span data-stu-id="f192b-279">You can also use the `Item` property to add new elements by setting the values of a `filter`/filter data pair that does not exist in the action filter table.</span></span> <span data-ttu-id="f192b-280">Cependant, si `filter` figure déjà dans la table, la définition de la propriété `Item` remplace l'ancienne valeur.</span><span class="sxs-lookup"><span data-stu-id="f192b-280">However if `filter` is already in the table, setting the `Item` property overwrites the old value.</span></span> <span data-ttu-id="f192b-281">Par opposition, la méthode <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> ne modifie pas les données de filtre d'un `filter` existant.</span><span class="sxs-lookup"><span data-stu-id="f192b-281">In contrast, the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> method does not modify the filter data of an existing `filter`.</span></span>  
  
 <span data-ttu-id="f192b-282">Le `item` de dictionnaire est une paire filtre/`FilterData` dans le cas de <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="f192b-282">The dictionary `item` is a filter/`FilterData` pair in the case of <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f192b-283">
            <paramref name="filter" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-283">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="f192b-284">La propriété est récupérée et <paramref name="filter" /> ne figure pas dans la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-284">The property is retrieved, and the <paramref name="filter" /> is not in the table.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of MessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" Usage="System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f192b-285">Obtient une collection de tous les filtres contenus dans la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-285">Gets a collection of all the filters contained in the filter table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f192b-286">
            <see cref="T:System.Collections.Generic.ICollection`1" /> de tous les filtres contenus dans la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-286">An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the filters contained in the filter table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-287">Cette propriété implémente <xref:System.Collections.Generic.IDictionary%602.Keys%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-287">This property implements <xref:System.Collections.Generic.IDictionary%602.Keys%2A>.</span></span> <span data-ttu-id="f192b-288">La paire <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> implémentée par la table de filtres utilise <xref:System.ServiceModel.Dispatcher.MessageFilter> comme clé et `FilterData` comme valeur de la paire.</span><span class="sxs-lookup"><span data-stu-id="f192b-288">The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.</span></span>  
  
 <span data-ttu-id="f192b-289">L'ordre des filtres retournés dans la collection n'est pas spécifié, mais il correspond systématiquement à l'ordre des `FilterData` correspondants dans la collection retournée par la propriété <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Values%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-289">The order of the filters returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding `FilterData` in the collection returned by the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Values%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f192b-290">Supprime un filtre et ses données de filtre associées de la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-290">Removes a filter and its associated filter data from the table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of MessageFilter, TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool&#xA;override this.Remove : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool" Usage="messageFilterTable.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f192b-291">
            <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; à supprimer de la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-291">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to remove from the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-292">Supprime une paire filtre/<paramref name="FilterData" /> spécifiée de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-292">Removes a specified filter/<paramref name="FilterData" /> pair from the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-293">
            <see langword="true" /> si la paire filtre/<paramref name="FilterData" /> a été trouvée et supprimée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-293">
              <see langword="true" /> if the filter/<paramref name="FilterData" /> pair was found and removed; <see langword="false" /> if it was not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-294">Si la clé de filtre de `item` est présente mais est associée à des données qui diffèrent de `FilterData`, la méthode ne parvient pas à supprimer le filtre et retourne la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="f192b-294">If the filter key of the `item` is present but is associated with data that differs from the `FilterData`, the method fails to remove the filter and returns `false`.</span></span>  
  
 <span data-ttu-id="f192b-295">Cette méthode implémente <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-295">This method implements <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f192b-296">
            <paramref name="filter" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-296">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool&#xA;override this.Remove : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool" Usage="messageFilterTable.Remove filter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="f192b-297">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-297">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-298">Supprime un filtre et ses <paramref name="FilterData" /> associés de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-298">Removes a filter and its associated <paramref name="FilterData" /> from the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-299">
            <see langword="true" /> si le filtre a été trouvé et supprimé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-299">
              <see langword="true" /> if the filter was found and removed; <see langword="false" /> if it was not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-300">Cette méthode implémente <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-300">This method implements <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f192b-301">
            <paramref name="filter" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-301">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f192b-302">Retourne un énumérateur qui effectue une itération au sein de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-302">Returns an enumerator that iterates through the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-303">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> qui peut être utilisé pour itérer au sein de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-303">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the filter table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-304">Cette méthode implémente <xref:System.Collections.IEnumerable.GetEnumerator%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-304">This method implements <xref:System.Collections.IEnumerable.GetEnumerator%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (System.ServiceModel.Dispatcher.MessageFilter filter, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(class System.ServiceModel.Dispatcher.MessageFilter filter, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (filter As MessageFilter, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::ServiceModel::Dispatcher::MessageFilter ^ filter, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : System.ServiceModel.Dispatcher.MessageFilter *  -&gt; bool&#xA;override this.TryGetValue : System.ServiceModel.Dispatcher.MessageFilter *  -&gt; bool" Usage="messageFilterTable.TryGetValue (filter, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="f192b-305">
            <c>filter</c> utilisé comme clé pour récupérer les données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-305">The <c>filter</c> that is used as a key to retrieve the data.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="f192b-306">
            <c>data</c> associé à <c>filter</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-306">The <c>data</c> associated with the <c>filter</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f192b-307">Vérifie si un filtre est stocké dans la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-307">Checks whether a filter is stored in the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f192b-308">
            <see langword="true" /> si la table de filtres comporte un filtre associé à des données ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-308">
              <see langword="true" /> if there is a filter in the filter table that has data associated with it; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-309">Cette méthode est utile pour vérifier si un filtre est présent dans la table de filtres. En effet, si le filtre n'est pas présent, elle retourne la valeur `false` au lieu de lever une exception.</span><span class="sxs-lookup"><span data-stu-id="f192b-309">This method is an efficient way to check whether a filter is in the filter table because when the filter is not present, it returns `false` instead of throwing an exception.</span></span> <span data-ttu-id="f192b-310">Si vous tentez de récupérer le filtre de la table alors qu'il n'y figure pas, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="f192b-310">If you try to retrieve the filter from the table and it is not there, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TFilterData&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ Values { System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;'FilterData&gt;" Usage="System.ServiceModel.Dispatcher.MessageFilterTable&lt;'FilterData&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TFilterData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f192b-311">Obtient une collection de tous les <paramref name="FilterData" /> contenus dans la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-311">Gets a collection of all the <paramref name="FilterData" /> contained in the filter table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f192b-312">
            <see cref="T:System.Collections.Generic.ICollection`1" /> de tous les <paramref name="FilterData" /> contenus dans la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f192b-312">An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the <paramref name="FilterData" /> contained in the filter table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f192b-313">Cette propriété implémente <xref:System.Collections.Generic.IDictionary%602.Values%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-313">This property implements <xref:System.Collections.Generic.IDictionary%602.Values%2A>.</span></span> <span data-ttu-id="f192b-314">La paire <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> implémentée par la table de filtres utilise <xref:System.ServiceModel.Dispatcher.MessageFilter> comme clé et `FilterData` comme valeur de la paire.</span><span class="sxs-lookup"><span data-stu-id="f192b-314">The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.</span></span>  
  
 <span data-ttu-id="f192b-315">L'ordre des `FilterData` retournés dans la collection n'est pas spécifié, mais il correspond systématiquement à l'ordre des filtres correspondants dans la collection retournée par la propriété <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Keys%2A>.</span><span class="sxs-lookup"><span data-stu-id="f192b-315">The order of the `FilterData` returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding filters in the collection returned by the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Keys%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>