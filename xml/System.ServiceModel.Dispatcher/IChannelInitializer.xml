<Type Name="IChannelInitializer" FullName="System.ServiceModel.Dispatcher.IChannelInitializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a4da3aac905f107e231c1edab6bef365a3dae090" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30514783" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannelInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IChannelInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannelInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Définit l'interface permettant de notifier un service ou client lorsqu'un canal est créé.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définit l'interface utilisée pour inspecter et ajouter l'état aux canaux lorsqu'ils sont créés pour la première fois. Cela peut par exemple être utilisé pour suivre toutes les sessions en attente, de sorte que le service puisse envoyer des messages à leur sujet. Ajoutez des initialiseurs de canal de service à la collection <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers%2A?displayProperty=nameWithType>. Ajoutez des initialiseurs de canal de client à la collection <xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A?displayProperty=nameWithType>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.ServiceModel.IClientChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ServiceModel.IClientChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IChannelInitializer.Initialize(System.ServiceModel.IClientChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (channel As IClientChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::ServiceModel::IClientChannel ^ channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
      </Parameters>
      <Docs>
        <param name="channel">
          <see cref="T:System.ServiceModel.IClientChannel" /> utilisé pour initialiser <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" />.</param>
        <summary>Initialise la classe <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> avec un <see cref="T:System.ServiceModel.IClientChannel" />spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>