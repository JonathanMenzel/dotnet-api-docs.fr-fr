<Type Name="FilterInvalidBodyAccessException" FullName="System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2505ba0761728c9036bf3f9f0bddf0147d1cc2a3" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55315843" /></Metadata><TypeSignature Language="C#" Value="public class FilterInvalidBodyAccessException : System.ServiceModel.Dispatcher.InvalidBodyAccessException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FilterInvalidBodyAccessException extends System.ServiceModel.Dispatcher.InvalidBodyAccessException" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />
  <TypeSignature Language="VB.NET" Value="Public Class FilterInvalidBodyAccessException&#xA;Inherits InvalidBodyAccessException" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterInvalidBodyAccessException : System::ServiceModel::Dispatcher::InvalidBodyAccessException" />
  <TypeSignature Language="F#" Value="type FilterInvalidBodyAccessException = class&#xA;    inherit InvalidBodyAccessException" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.InvalidBodyAccessException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a6b2e-101">Exception levée lorsqu'un filtre ou la table de filtres tente d'accéder au corps d'un message non mis en mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-101">The exception that is thrown when a filter or filter table attempts to access the body of an unbuffered message.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6b2e-102">Cette exception est levée lorsqu'un filtre ou la table de filtres tente d'accéder au corps d'une instance de <xref:System.ServiceModel.Channels.Message>.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-102">This exception is thrown when a filter or filter table attempts to access the body of an instance of <xref:System.ServiceModel.Channels.Message>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a6b2e-103">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-103">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterInvalidBodyAccessException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterInvalidBodyAccessException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6b2e-104">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-104">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterInvalidBodyAccessException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterInvalidBodyAccessException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException : string -&gt; System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" Usage="new System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a6b2e-105">Message d'erreur qui explique la raison de l'exception.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-105">The error message that explains the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="a6b2e-106">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> avec un message d'erreur spécifié.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> class with a specified error message.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FilterInvalidBodyAccessException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FilterInvalidBodyAccessException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" Usage="new System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="a6b2e-107"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenant toutes les données requises pour sérialiser l'exception.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-107">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</span></span></param>
        <param name="context"><span data-ttu-id="a6b2e-108">Le <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui spécifie la source et la destination du flux de données.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-108">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</span></span></param>
        <summary><span data-ttu-id="a6b2e-109">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> avec les données qui spécifient la source et la destination du flux et les informations requises pour sérialiser l'exception.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> class with data that specifies the source and destination of the stream and the information required to serialize the exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterInvalidBodyAccessException (string message, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, filters As Collection(Of MessageFilter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterInvalidBodyAccessException(System::String ^ message, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ filters);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException : string * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" Usage="new System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException (message, filters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="filters" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a6b2e-110">Message d'erreur qui explique la raison de l'exception.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-110">The error message that explains the reason for the exception.</span></span></param>
        <param name="filters"><span data-ttu-id="a6b2e-111"><see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> qui a tenté d'inspecter le corps du message.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-111">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> that attempted to inspect the body of the message.</span></span></param>
        <summary><span data-ttu-id="a6b2e-112">Initialise une nouvelle instance de l'<see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> avec un message d'erreur spécifié et les filtres qui ont tenté d'inspecter le corps du message.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> with a specified error message and the filters that attempted to inspect the body of the message.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterInvalidBodyAccessException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterInvalidBodyAccessException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException : string * Exception -&gt; System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" Usage="new System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a6b2e-113">Message d'erreur qui explique la raison de l'exception.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-113">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="a6b2e-114">L'<see cref="T:System.Exception" /> à l'origine de la levée de l'exception actuelle.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-114">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</span></span></param>
        <summary><span data-ttu-id="a6b2e-115">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> avec un message d'erreur et l'exception interne à l'origine de l'actuelle exception.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> class with a specified error message and the inner exception that caused the current exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterInvalidBodyAccessException (string message, Exception innerException, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception, filters As Collection(Of MessageFilter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterInvalidBodyAccessException(System::String ^ message, Exception ^ innerException, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ filters);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException : string * Exception * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" Usage="new System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException (message, innerException, filters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="filters" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a6b2e-116">Message d'erreur qui explique la raison de l'exception.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-116">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="a6b2e-117">L'<see cref="T:System.Exception" /> à l'origine de la levée de l'exception actuelle.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-117">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</span></span></param>
        <param name="filters"><span data-ttu-id="a6b2e-118"><see cref="T:System.Collections.ObjectModel.Collection`1" /> de type <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> qui contient le filtre qui a tenté d'inspecter le corps du message.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-118">The <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> that contains the filter that attempted to inspect the body of the message.</span></span></param>
        <summary><span data-ttu-id="a6b2e-119">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> avec un message d’erreur spécifié, l’exception interne qui a provoqué l’exception actuelle et la collection qui contient le filtre qui a tenté d’inspecter le corps.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-119">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" /> class with a specified error message, the inner exception that caused the current exception, and the collection that contains the filter that attempted to inspect the body.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; Filters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; Filters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.Filters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Filters As Collection(Of MessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ Filters { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Filters : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" Usage="System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.Filters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6b2e-120">Obtient la collection de filtres qui contient le filtre qui a provoqué la levée de l’exception.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-120">Gets the collection of filters that contains the filter that caused the exception to be thrown.</span></span></summary>
        <value><span data-ttu-id="a6b2e-121"><see cref="T:System.Collections.ObjectModel.Collection`1" /> de type <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> qui contient les filtres qui ont provoqué la levée de l'exception.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-121">The <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> that contains the filters that caused the exception to be thrown.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6b2e-122">Dans le cas d’une table de filtres, cette collection ne contient pas nécessairement tous les filtres incriminés.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-122">In the case of a filter table, this collection does not necessarily contain all offending filters.</span></span> <span data-ttu-id="a6b2e-123">Elle contient uniquement les filtres qui ont provoqué la violation.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-123">It only contains the filter(s) that caused the violation.</span></span> <span data-ttu-id="a6b2e-124">Il est possible que le traitement d’autres filtres qui auraient validé une violation semblable n’ait pas été abandonné.</span><span class="sxs-lookup"><span data-stu-id="a6b2e-124">It is quite possible there are other filters that would have committed a similar violation had processing not been aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>