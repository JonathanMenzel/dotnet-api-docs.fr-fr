<Type Name="IClientMessageFormatter" FullName="System.ServiceModel.Dispatcher.IClientMessageFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="924819027f174d4f2b58b6ee8f8b0c019da5a7e5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37616266" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IClientMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IClientMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IClientMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IClientMessageFormatter" />
  <TypeSignature Language="F#" Value="type IClientMessageFormatter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Définit les méthodes utilisées pour contrôler la conversion de messages en objets et d'objets en messages pour les applications clientes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implémentez l'interface <xref:System.ServiceModel.Dispatcher.IClientMessageFormatter> pour créer un formateur client personnalisé qui sérialise les objets en messages et désérialise les messages en objets pour une opération particulière.  
  
 Attachez des formateurs de client Windows Communication Foundation (WCF) personnalisés pour le <xref:System.ServiceModel.Dispatcher.ClientOperation.Formatter%2A> propriété pour gérer cette conversion explicitement.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DeserializeReply">
      <MemberSignature Language="C#" Value="public object DeserializeReply (System.ServiceModel.Channels.Message message, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DeserializeReply(class System.ServiceModel.Channels.Message message, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeReply(System::ServiceModel::Channels::Message ^ message, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeReply : System.ServiceModel.Channels.Message * obj[] -&gt; obj" Usage="iClientMessageFormatter.DeserializeReply (message, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="message">Message entrant.</param>
        <param name="parameters">Toute valeur <see langword="out" />.</param>
        <summary>Convertit un message en valeur de retour et les paramètres <see langword="out" /> retournés à l'opération appelante.</summary>
        <returns>Valeur de retour de l'opération.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelée après la réception d'un message de réponse. Implémentez pour convertir le message de réponse en valeur de retour (et tout paramètre `out`) retourné à l'application appelante.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message SerializeRequest (System.ServiceModel.Channels.MessageVersion messageVersion, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message SerializeRequest(class System.ServiceModel.Channels.MessageVersion messageVersion, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ SerializeRequest(System::ServiceModel::Channels::MessageVersion ^ messageVersion, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member SerializeRequest : System.ServiceModel.Channels.MessageVersion * obj[] -&gt; System.ServiceModel.Channels.Message" Usage="iClientMessageFormatter.SerializeRequest (messageVersion, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageVersion" Type="System.ServiceModel.Channels.MessageVersion" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="messageVersion">Version du message SOAP à utiliser.</param>
        <param name="parameters">Paramètres passés à l'opération du client WCF.</param>
        <summary>Convertir un tableau <see cref="T:System.Object" /> en <see cref="T:System.ServiceModel.Channels.Message" /> sortant.</summary>
        <returns>Message SOAP envoyé à l'opération de service.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelé après qu'une opération ait été appelée sur le client mais avant de sérialiser le message sortant. Implémentez pour convertir les objets de paramètre en message sortant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>