<Type Name="XPathMessageFilterTable&lt;TFilterData&gt;" FullName="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;TFilterData&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a5b9830e3a9e8ccd62b29feada9a85728203f121" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51324976" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XPathMessageFilterTable&lt;TFilterData&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XPathMessageFilterTable`1&lt;TFilterData&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.IEnumerable, class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!TFilterData&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
  <TypeSignature Language="VB.NET" Value="Public Class XPathMessageFilterTable(Of TFilterData)&#xA;Implements ICollection(Of KeyValuePair(Of MessageFilter, TFilterData)), IDictionary(Of MessageFilter, TFilterData), IEnumerable(Of KeyValuePair(Of MessageFilter, TFilterData)), IMessageFilterTable(Of TFilterData)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFilterData&gt;&#xA;public ref class XPathMessageFilterTable : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::ServiceModel::Dispatcher::IMessageFilterTable&lt;TFilterData&gt;" />
  <TypeSignature Language="F#" Value="type XPathMessageFilterTable&lt;'FilterData&gt; = class&#xA;    interface IMessageFilterTable&lt;'FilterData&gt;&#xA;    interface IDictionary&lt;MessageFilter, 'FilterData&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;MessageFilter, 'FilterData&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;MessageFilter, 'FilterData&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFilterData" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TFilterData">
      <span data-ttu-id="7430a-101">Type des données de filtre associées à chaque filtre dans la table.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7430a-101">The type of the filter data associated with each filter in the table.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="7430a-102">Contient une collection de paires filtre/données afin d’optimiser la mise en correspondance.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7430a-102">Holds a collection of filter/data pairs for efficient matching.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-103"><xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> implémente l'interface <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="7430a-103">The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> implements the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> interface.</span></span> <span data-ttu-id="7430a-104">Cette table de filtres est optimisée pour les filtres XPath déclaratifs ; la clé de table est dès lors un <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>.</span><span class="sxs-lookup"><span data-stu-id="7430a-104">This filter table is optimized for declarative XPath filters, so the table key is a <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>.</span></span>  
  
 <span data-ttu-id="7430a-105">La classe <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> optimise la correspondance pour un sous-ensemble de XPath qui couvre la plupart des scénarios de messagerie et prend également en charge la grammaire XPath 1.0 complète.</span><span class="sxs-lookup"><span data-stu-id="7430a-105">The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> class optimizes matching for a subset of XPath that covers most of the messaging scenarios and also supports the full XPath 1.0 grammar.</span></span> <span data-ttu-id="7430a-106">Elle comprend des algorithmes optimisés pour une correspondance parallèle efficace.</span><span class="sxs-lookup"><span data-stu-id="7430a-106">It has optimized algorithms for efficient parallel matching.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7430a-107">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilterTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilterTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7430a-108">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilterTable (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilterTable(int capacity);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt; : int -&gt; System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt;" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="7430a-109">Capacité initiale de la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-109">Initial capacity of the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-110">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7430a-111">Ajoute <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> et son <paramref name="FilterData" /> associé à <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-111">Adds an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> and its associated <paramref name="FilterData" /> to the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of MessageFilter, TFilterData))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; unit&#xA;override this.Add : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; unit" Usage="xPathMessageFilterTable.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="7430a-112">Paire <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; à ajouter à la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-112">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to add to the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-113">Ajoute une paire filtre/<paramref name="FilterData" /> (clé/valeur) à <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-113">Adds a filter/<paramref name="FilterData" /> (key/value) pair to the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-114">La méthode implémente <xref:System.Collections.Generic.ICollection%601.Add%2A> de la classe <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="7430a-114">This method implements the <xref:System.Collections.Generic.ICollection%601.Add%2A> method of the <xref:System.Collections.Generic.ICollection%601> class.</span></span>  <span data-ttu-id="7430a-115">La conversion implicite du paramètre `filter` du type <xref:System.ServiceModel.Dispatcher.MessageFilter> vers <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> peut être évitée en utilisant la surcharge fortement typée, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-115">The implicit conversion of the `filter` parameter from type <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> can be avoided by using the strongly-typed overload, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-116">
            <paramref name="filter" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-116">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="7430a-117">Une erreur de compilateur s'est produite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-117">A compiler error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.ServiceModel.Dispatcher.MessageFilter filter, !TFilterData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (filter As MessageFilter, data As TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData data);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.ServiceModel.Dispatcher.MessageFilter * 'FilterData -&gt; unit&#xA;override this.Add : System.ServiceModel.Dispatcher.MessageFilter * 'FilterData -&gt; unit" Usage="xPathMessageFilterTable.Add (filter, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="7430a-118">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> utilisé en tant que clé de la paire ajoutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-118">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> used as the key of the pair added.</span>
          </span>
          <span data-ttu-id="7430a-119">Il doit s'agir d'une instance de <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-119">Must be an instance of <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="7430a-120">
            <c>FilterData</c> associé au filtre, utilisé comme valeur de la paire ajoutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-120">The <c>FilterData</c> associated with the filter used as the value of the pair added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-121">Ajoute une paire filtre/données à la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-121">Adds a filter/data pair to the filter table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-122">La conversion interne du paramètre `filter` du type <xref:System.ServiceModel.Dispatcher.MessageFilter> vers <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> peut être évitée en utilisant la surcharge fortement typée, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-122">The internal conversion of the `filter` parameter from <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> can be avoided by using the strongly-typed overload, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-123">
            <paramref name="filter" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-123">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="7430a-124">
            <paramref name="filter" /> n'est pas <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-124">
              <paramref name="filter" /> is not an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="7430a-125">Une erreur de compilateur s'est produite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-125">A compiler error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Dispatcher.XPathMessageFilter filter, TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.ServiceModel.Dispatcher.XPathMessageFilter filter, !TFilterData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (filter As XPathMessageFilter, data As TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::ServiceModel::Dispatcher::XPathMessageFilter ^ filter, TFilterData data);" />
      <MemberSignature Language="F#" Value="member this.Add : System.ServiceModel.Dispatcher.XPathMessageFilter * 'FilterData -&gt; unit" Usage="xPathMessageFilterTable.Add (filter, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.XPathMessageFilter" />
        <Parameter Name="data" Type="TFilterData" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="7430a-126">
            <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> utilisé en tant que clé de la paire ajoutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-126">The <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> used as the key of the pair added.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="7430a-127">
            <c>FilterData</c> associé au filtre ; utilisé comme valeur de la paire ajoutée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-127">The <c>FilterData</c> associated with the filter; used as the value of the pair added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-128">Ajoute une paire filtre/données à la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-128">Adds a filter/data pair to the filter table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-129">Fournit une surcharge fortement typée permettant d'ajouter <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> à la table de filtres. Son exécution est plus efficace que la surcharge faiblement typée, car elle évite la conversion implicite du paramètre `filter` du type <xref:System.ServiceModel.Dispatcher.MessageFilter> vers <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>.</span><span class="sxs-lookup"><span data-stu-id="7430a-129">This provides a strongly-typed overload for adding an <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> to the filter table that performs better than the weakly-typed overload because it avoids implicit conversion of the `filter` parameter from type <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-130">
            <paramref name="filter" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-130">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="7430a-131">Une erreur de compilateur s'est produite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-131">A compiler error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="xPathMessageFilterTable.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7430a-132">Supprime toutes les paires filtre/données de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-132">Removes all filter/data pairs from the filter table.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of MessageFilter, TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool&#xA;override this.Contains : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool" Usage="xPathMessageFilterTable.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="7430a-133">
            <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt; <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <c>FilterData</c>&gt; à rechercher dans la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-133">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <c>FilterData</c>&gt; to find in the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-134">Détermine si la table de filtres contient un filtre spécifique et son <paramref name="FilterData" /> associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-134">Determines whether the filter table contains a specified filter and its associated <paramref name="FilterData" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-135">
            <see langword="true" /> si la paire filter/*FilterData* est contenue dans la table de filtres ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-135">
              <see langword="true" /> if the filter/*FilterData* pair is contained in the filter table; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-136">Cette méthode retourne la valeur `false` si le filtre est trouvé mais qu'il correspond à des données différentes.</span><span class="sxs-lookup"><span data-stu-id="7430a-136">This method returns `false` if the filter is found but corresponds to different data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool&#xA;override this.ContainsKey : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool" Usage="xPathMessageFilterTable.ContainsKey filter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="7430a-137">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> actuellement testé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-137">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> being tested for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-138">Détermine si la table de filtres contient un filtre spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-138">Determines whether the filter table contains a specified filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-139">
            <see langword="true" /> si <paramref name="filter" /> est contenu dans la table de filtres ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-139">
              <see langword="true" /> if the <paramref name="filter" /> is contained in the filter table; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-140">Cette méthode implémente la méthode `ContainsKey` de <xref:System.Collections.Generic.IDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="7430a-140">This method implements the `ContainsKey` method of <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of MessageFilter, TFilterData)(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;[] * int -&gt; unit" Usage="xPathMessageFilterTable.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="7430a-141">Tableau de type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; dans lequel les paires sont copiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-141">The array of type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to which the pairs are being copied.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="7430a-142">Index où commence la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-142">The index at which to begin copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-143">Copie les paires filtre/<paramref name="FilterData" /> vers un tableau qui commence à un index spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-143">Copies the filter/<paramref name="FilterData" /> pairs to an array that starts at a specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7430a-144">Obtient le nombre de paires filtre/données actuellement présentes dans la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-144">Gets the number of filter/data pairs currently in the filter table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7430a-145">Nombre de paires filtre/données actuellement présentes dans la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-145">The number of filter/data pairs currently in the filter table.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of MessageFilter, TFilterData))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;&gt;" Usage="xPathMessageFilterTable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7430a-146">Retourne un énumérateur qui peut itérer au sein de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-146">Returns an enumerator that can iterate through the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-147">
            <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt; qui peut être utilisé pour itérer au sein de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-147">An <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt; that can be used to iterate through the filter table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-148">Cette méthode implémente <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-148">This method implements <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilter">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7430a-149">Retourne une valeur qui indique si le message ou le message mis en mémoire tampon indiqué respecte le critère de correspondance d'un filtre dans la table, et retourne le filtre dans un paramètre <see langword="out" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-149">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-150">Teste si un message répond à exactement l'un des filtres dans la table de filtres.</span><span class="sxs-lookup"><span data-stu-id="7430a-150">Tests whether a message satisfies exactly one of the filters in the filter table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.Message *  -&gt; bool&#xA;override this.GetMatchingFilter : System.ServiceModel.Channels.Message *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilter (message, filter)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="7430a-151">
            <see cref="T:System.ServiceModel.Channels.Message" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-151">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="7430a-152">Paramètre <see langword="out" /> qui stocke le filtre respecté par <c>message</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-152">The <see langword="out" /> parameter that stores the filter that is satisfied by the <c>message</c>.</span>
          </span>
          <span data-ttu-id="7430a-153">Si aucun filtre n'a été trouvé, le paramètre est défini à sa valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-153">If no filter was found, the parameter is set to its default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-154">Retourne une valeur qui indique si le message spécifié respecte le critère de correspondance d'un filtre dans la table, et retourne le filtre dans un paramètre <see langword="out" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-154">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-155">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> dont les critères de requête sont respectés par le message ou <see langword="null" /> si aucun filtre correspondant n'a été trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-155">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the message; or <see langword="null" /> if no filters are found to match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-156">Utilisez cette méthode lorsqu'un filtre unique est supposé correspondre au message et que le filtre correspondant est requis.</span><span class="sxs-lookup"><span data-stu-id="7430a-156">Use this method when a single filter is expected to match the message and the matching filter is required.</span></span>  
  
 <span data-ttu-id="7430a-157">Cette méthode teste une correspondance de filtre unique dans le compartiment de filtres à priorité la plus élevé.</span><span class="sxs-lookup"><span data-stu-id="7430a-157">This method tests for a single filter match in the highest priority bucket of filters.</span></span> <span data-ttu-id="7430a-158">Les filtres de la table ne peuvent pas inspecter le corps du message.</span><span class="sxs-lookup"><span data-stu-id="7430a-158">The filters in the table are not allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="7430a-159">Si plusieurs filtres sont supposés correspondre au message, utilisez <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-159">If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 <span data-ttu-id="7430a-160">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-160">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-161">
            <paramref name="message" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-161">
              <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="7430a-162">Plusieurs filtres correspondent à <paramref name="message" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-162">More than one filter matches the <paramref name="message" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
          <span data-ttu-id="7430a-163">Un filtre a essayé d'examiner le contenu du corps du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-163">A filter attempted to examine the contents of the message body.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer messageBuffer, out System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer messageBuffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.MessageBuffer *  -&gt; bool&#xA;override this.GetMatchingFilter : System.ServiceModel.Channels.MessageBuffer *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilter (messageBuffer, filter)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="7430a-164">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-164">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="7430a-165">Paramètre <see langword="out" /> qui stocke le filtre respecté par <c>message</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-165">The <see langword="out" /> parameter that stores the filter that is satisfied by the <c>message</c>.</span>
          </span>
          <span data-ttu-id="7430a-166">Si aucun filtre n'a été trouvé, le paramètre est défini à sa valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-166">If no filter was found, the parameter is set to its default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-167">Retourne une valeur qui indique si le message ou le message mis en mémoire tampon indiqué respecte le critère de correspondance d'un filtre dans la table, et retourne le filtre dans un paramètre <see langword="out" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-167">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-168">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> dont les critères de requête sont respectés par le message mis en mémoire tampon ou <see langword="null" /> si aucun filtre correspondant n'a été trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-168">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the buffered message; or <see langword="null" /> if no filters are found to match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-169">Utilisez cette méthode lorsqu'un filtre unique est supposé correspondre au message mis en mémoire tampon et que le filtre correspondant est requis.</span><span class="sxs-lookup"><span data-stu-id="7430a-169">Use this method when a single filter is expected to match the buffered message and the matching filter is required.</span></span>  
  
 <span data-ttu-id="7430a-170">Les filtres de la table peuvent inspecter le corps du message.</span><span class="sxs-lookup"><span data-stu-id="7430a-170">The filters in the table are allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="7430a-171">Si plusieurs filtres sont supposés correspondre au message, utilisez <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-171">If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 <span data-ttu-id="7430a-172">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-172">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-173">
            <paramref name="messageBuffer" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-173">
              <paramref name="messageBuffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="7430a-174">Plusieurs filtres correspondent à <paramref name="messageBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-174">More than one filter matches the <paramref name="messageBuffer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, out System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingFilter(class System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (navigator As SeekableXPathNavigator, ByRef filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Dispatcher::SeekableXPathNavigator ^ navigator, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingFilter : System.ServiceModel.Dispatcher.SeekableXPathNavigator *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilter (navigator, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="7430a-175">
            <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-175">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="7430a-176">Paramètre <see langword="out" /> qui stocke le filtre respecté par <c>message</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-176">The <see langword="out" /> parameter that stores the filter that is satisfied by the <c>message</c>.</span>
          </span>
          <span data-ttu-id="7430a-177">Si aucun filtre n'a été trouvé, le paramètre est défini à sa valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-177">If no filter was found, the parameter is set to its default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-178">Retourne une valeur qui indique si le message ou le message mis en mémoire tampon indiqué respecte le critère de correspondance d'une occurrence de <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> dans la table, et retourne ce filtre dans un paramètre <see langword="out" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-178">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the specified message or buffered message and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-179">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> dont les critères de requête sont respectés par le navigateur ou <see langword="null" /> si aucun filtre correspondant n'a été trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-179">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the navigator; or <see langword="null" /> if no filters are found to match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-180">Utilisez cette méthode lorsqu'un filtre unique est supposé correspondre au message spécifié par <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> et que le filtre correspondant est requis.</span><span class="sxs-lookup"><span data-stu-id="7430a-180">Use this method when a single filter is expected to match the message specified by the <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and the matching filter is required.</span></span>  
  
 <span data-ttu-id="7430a-181">Si plusieurs filtres sont supposés correspondre au message, utilisez <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-181">If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-182">
            <paramref name="navigator" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-182">
              <paramref name="navigator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="7430a-183">Plusieurs filtres correspondent à <paramref name="navigator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-183">More than one filter matches the <paramref name="navigator" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.Xml.XPath.XPathNavigator navigator, out System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingFilter(class System.Xml.XPath.XPathNavigator navigator, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (navigator As XPathNavigator, ByRef filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::Xml::XPath::XPathNavigator ^ navigator, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingFilter : System.Xml.XPath.XPathNavigator *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilter (navigator, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="7430a-184">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-184">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="7430a-185">Paramètre <see langword="out" /> qui stocke le filtre respecté par <c>navigator</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-185">The <see langword="out" /> parameter that stores the filter that is satisfied by the <c>navigator</c>.</span>
          </span>
          <span data-ttu-id="7430a-186">Si aucun filtre n'a été trouvé, le paramètre est défini à sa valeur par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-186">If no filter was found, the parameter is set to its default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-187">Retourne une valeur qui indique si le message ou le message mis en mémoire tampon indiqué respecte le critère de correspondance d'une occurrence de <see cref="T:System.Xml.XPath.XPathNavigator" /> dans la table, et retourne ce filtre dans un paramètre <see langword="out" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-187">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.Xml.XPath.XPathNavigator" /> in the table is satisfied by the specified message or buffered message and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-188">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> dont les critères de requête sont respectés par le navigateur ou <see langword="null" /> si aucun filtre correspondant n'a été trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-188">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the navigator; or <see langword="null" /> if no filters are found to match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-189">Utilisez cette méthode lorsqu'un filtre unique est supposé correspondre au message spécifié par <xref:System.Xml.XPath.XPathNavigator> et que le filtre correspondant est requis.</span><span class="sxs-lookup"><span data-stu-id="7430a-189">Use this method when a single filter is expected to match the message specified by the <xref:System.Xml.XPath.XPathNavigator> and the matching filter is required.</span></span>  
  
 <span data-ttu-id="7430a-190">Si plusieurs filtres sont supposés correspondre au message, utilisez <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-190">If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-191">
            <paramref name="navigator" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-191">
              <paramref name="navigator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="7430a-192">Plusieurs filtres correspondent à <paramref name="navigator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-192">More than one filter matches the <paramref name="navigator" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilters">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7430a-193">Retourne une valeur qui indique si le document XML respecte le critère de correspondance d’un filtre dans la table, et ajoute les filtres correspondants à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-193">Returns a value that indicates whether the match criterion of a filter in the table is satisfied by the specified XML document and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-194">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au message et que les filtres correspondants sont requis.</span><span class="sxs-lookup"><span data-stu-id="7430a-194">Use this method when more than one filter is expected to match the message and the matching filters are required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilters(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilters : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool&#xA;override this.GetMatchingFilters : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilters (message, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="7430a-195">
            <see cref="T:System.ServiceModel.Channels.Message" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-195">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="7430a-196">Paramètre de référence qui stocke les objets <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> correspondant dans <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-196">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-197">Retourne une valeur qui indique si le message spécifié respecte le critère de correspondance d’au moins une occurrence de <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> de la table, et ajoute les filtres correspondants à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-197">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified message and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-198">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre dans la table est respecté par <paramref name="message" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-198">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-199">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au message et que les filtres correspondants sont requis.</span><span class="sxs-lookup"><span data-stu-id="7430a-199">Use this method when more than one filter is expected to match the message and the matching filters are required.</span></span>  
  
 <span data-ttu-id="7430a-200">Les filtres de la table ne peuvent pas inspecter le corps du message.</span><span class="sxs-lookup"><span data-stu-id="7430a-200">The filters in the table are not allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="7430a-201">Les objets <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> correspondants sont stockés dans le paramètre `results` de <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="7430a-201">The matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span> <span data-ttu-id="7430a-202">Les `FilterData` peuvent ensuite être récupérés de la table de filtres qui utilise ces filtres comme clés avec les méthodes fournies par <xref:System.Collections.Generic.IDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="7430a-202">The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 <span data-ttu-id="7430a-203">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-203">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-204">
            <paramref name="results" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-204">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
          <span data-ttu-id="7430a-205">Un filtre a essayé d'examiner le contenu du corps du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-205">A filter attempted to examine the contents of the message body.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.MessageBuffer messageBuffer, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilters(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilters : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool&#xA;override this.GetMatchingFilters : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilters (messageBuffer, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="7430a-206">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-206">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="7430a-207">Paramètre de référence qui stocke les objets <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> correspondant dans <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-207">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-208">Retourne une valeur qui indique si le message mis en mémoire tampon indiqué respecte le critère de correspondance d’au moins un objet <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> de la table, et ajoute les filtres correspondants à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-208">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-209">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre dans la table est respecté par <paramref name="messageBuffer" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-209">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-210">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au message mis en mémoire tampon et que les filtres correspondants sont requis.</span><span class="sxs-lookup"><span data-stu-id="7430a-210">Use this method when more than one filter is expected to match the buffered message and the matching filters are required.</span></span>  
  
 <span data-ttu-id="7430a-211">Les filtres de la table peuvent inspecter le corps du message.</span><span class="sxs-lookup"><span data-stu-id="7430a-211">The filters in the table are allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="7430a-212">Les objets <xref:System.ServiceModel.Dispatcher.MessageFilter> correspondants sont stockés dans le paramètre `results` de <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="7430a-212">The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span> <span data-ttu-id="7430a-213">Les `FilterData` peuvent ensuite être récupérés de la table de filtres qui utilise ces filtres comme clés avec les méthodes fournies par <xref:System.Collections.Generic.IDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="7430a-213">The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 <span data-ttu-id="7430a-214">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-214">This method implements <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-215">
            <paramref name="results" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-215">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingFilters(class System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (navigator As SeekableXPathNavigator, results As ICollection(Of MessageFilter)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::ServiceModel::Dispatcher::SeekableXPathNavigator ^ navigator, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingFilters : System.ServiceModel.Dispatcher.SeekableXPathNavigator * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilters (navigator, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="7430a-216">
            <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-216">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="7430a-217">Paramètre de référence qui stocke les objets <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> correspondant dans <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-217">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-218">Retourne une valeur qui indique si le message mis en mémoire tampon indiqué respecte le critère de correspondance d’au moins un objet <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> de la table, et ajoute les filtres correspondants à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-218">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-219">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre dans la table est respecté par <paramref name="messageBuffer" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-219">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-220">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au navigateur et que les filtres correspondants sont requis.</span><span class="sxs-lookup"><span data-stu-id="7430a-220">Use this method when more than one filter is expected to match the navigator and the matching filters are required.</span></span>  
  
 <span data-ttu-id="7430a-221">Si un seul filtre est supposé correspondre au message, utilisez la méthode <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-221">If only one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-222">
            <paramref name="results" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-222">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.Xml.XPath.XPathNavigator navigator, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingFilters(class System.Xml.XPath.XPathNavigator navigator, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (navigator As XPathNavigator, results As ICollection(Of MessageFilter)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::Xml::XPath::XPathNavigator ^ navigator, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingFilters : System.Xml.XPath.XPathNavigator * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilters (navigator, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="7430a-223">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-223">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="7430a-224">Paramètre de référence qui stocke les objets <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> correspondant dans <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-224">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-225">Retourne une valeur qui indique si le message mis en mémoire tampon indiqué respecte le critère de correspondance d’au moins un objet <see cref="T:System.Xml.XPath.XPathNavigator" /> de la table, et ajoute les filtres correspondants à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-225">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.Xml.XPath.XPathNavigator" /> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-226">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre dans la table est respecté par <paramref name="messageBuffer" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-226">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-227">Utilisez cette méthode lorsque plusieurs filtres peuvent correspondre au message spécifié par <xref:System.Xml.XPath.XPathNavigator> et que les filtres correspondants sont requis.</span><span class="sxs-lookup"><span data-stu-id="7430a-227">Use this method when multiple filters can be expected to match the message specified by the <xref:System.Xml.XPath.XPathNavigator> and the matching filters are required.</span></span>  
  
 <span data-ttu-id="7430a-228">Si un seul filtre est supposé correspondre au message, utilisez la méthode <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-228">If only one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-229">
            <paramref name="matches" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-229">
              <paramref name="matches" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValue">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7430a-230">Retourne une valeur qui indique si l’objet de document spécifié respecte le critère de correspondance d’une occurrence de <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> dans la table, et ajoute à une collection les données de filtre correspondantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-230">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified document object and adds the matching filter data to a collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-231">Utilisez l'une de ces quatre méthodes si un seul filtre est supposé correspondre à l'objet de document et que seul le `FilterData` du filtre correspondant doit être récupéré.</span><span class="sxs-lookup"><span data-stu-id="7430a-231">Use one of these four methods when a single filter is expected to match the document object and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="7430a-232">Les deux premières méthodes sont des implémentations de <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-232">The first two methods are implementations of <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>.</span></span>  
  
 <span data-ttu-id="7430a-233">Utilisez <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A> si le contenu du corps ne nécessite pas de vérification.</span><span class="sxs-lookup"><span data-stu-id="7430a-233">Use <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A> if the body content does not require examination.</span></span> <span data-ttu-id="7430a-234">Utilisez <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A> si le contenu du corps du message peut nécessiter une vérification.</span><span class="sxs-lookup"><span data-stu-id="7430a-234">Use <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A> if the contents of the message body may require examination.</span></span>  
  
 <span data-ttu-id="7430a-235">Les deux autres méthodes sont des surcharges spécifiques de <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="7430a-235">The remaining two methods are overloads specific to <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>.</span></span> <span data-ttu-id="7430a-236">Pour filtrer en fonction d'un document fourni via un navigateur, utilisez <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A> ou <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-236">To filter on a document provided through a navigator, use <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A> or <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.Message message, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValue(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValue : System.ServiceModel.Channels.Message *  -&gt; bool&#xA;override this.GetMatchingValue : System.ServiceModel.Channels.Message *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValue (message, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="7430a-237">
            <see cref="T:System.ServiceModel.Channels.Message" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-237">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="7430a-238">Paramètre <see langword="out" /> qui stocke <c>FilterData</c> pour le filtre correspondant à <c>message</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-238">The <see langword="out" /> parameter that stores the <c>FilterData</c> for the filter that matches the <c>message</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-239">Retourne une valeur qui indique si le message indiqué respecte le critère de correspondance d'une occurrence de <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> dans la table, et retourne les données de filtre correspondantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-239">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified message and returns the matching filter data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-240">
            <see langword="true" /> si le critère de correspondance d'un filtre de la table est respecté par le message ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-240">
              <see langword="true" /> if the match criterion of one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-241">Utilisez cette méthode lorsqu'un filtre unique est supposé correspondre au message et que seul le `FilterData` du filtre correspondant doit être récupéré.</span><span class="sxs-lookup"><span data-stu-id="7430a-241">Use this method when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="7430a-242">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-242">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-243">
            <paramref name="message" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-243">
              <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="7430a-244">Plusieurs filtres correspondent à <paramref name="message" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-244">More than one filter matches the <paramref name="message" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer messageBuffer, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.MessageBuffer messageBuffer, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValue(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValue : System.ServiceModel.Channels.MessageBuffer *  -&gt; bool&#xA;override this.GetMatchingValue : System.ServiceModel.Channels.MessageBuffer *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValue (messageBuffer, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="7430a-245">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-245">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="7430a-246">Paramètre <see langword="out" /> qui stocke <c>FilterData</c> pour le filtre correspondant à <c>messageBuffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-246">The <see langword="out" /> parameter that stores the <c>FilterData</c> for the filter that matches the <c>messageBuffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-247">Retourne une valeur qui indique si le message mis en mémoire tampon indiqué respecte le critère de correspondance d'une occurrence de <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> dans la table, et retourne les données de filtre correspondantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-247">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified buffered message and returns the matching filter data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-248">
            <see langword="true" /> si le critère de correspondance d'un filtre de la table est respecté par le message mis en mémoire tampon ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-248">
              <see langword="true" /> if the match criterion of one filter in the table is satisfied by the buffered message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-249">Utilisez cette méthode lorsqu'un filtre unique est supposé correspondre au message mis en mémoire tampon et que seul le `FilterData` du filtre correspondant doit être récupéré.</span><span class="sxs-lookup"><span data-stu-id="7430a-249">Use this method when a single filter is expected to match the buffered message and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="7430a-250">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-250">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-251">
            <paramref name="message" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-251">
              <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="7430a-252">Plusieurs filtres correspondent à <paramref name="messageBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-252">More than one filter matches the <paramref name="messageBuffer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingValue(class System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (navigator As SeekableXPathNavigator, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Dispatcher::SeekableXPathNavigator ^ navigator, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingValue : System.ServiceModel.Dispatcher.SeekableXPathNavigator *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValue (navigator, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="7430a-253">
            <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-253">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="7430a-254">Paramètre <see langword="out" /> qui stocke le <c>FilterData</c> correspondant à <c>navigator</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-254">The <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <c>navigator</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-255">Retourne une valeur qui indique si le critère de correspondance d'une occurrence de <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> dans la table est respecté par <paramref name="navigator" />, et retourne les données de filtre correspondant dans un paramètre <see langword="out" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-255">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and returns the filter data of the matching filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-256">
            <see langword="true" /> si le critère de correspondance d'un et un seul filtre de la table est respecté par <paramref name="navigator" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-256">
              <see langword="true" /> if the match criterion of exactly one filter in the table is satisfied by the <paramref name="navigator" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-257">Utilisez cette méthode pour spécifier une condition XPath que le message doit respecter.</span><span class="sxs-lookup"><span data-stu-id="7430a-257">Use this method to specify an XPath condition that the message must meet.</span></span>  
  
 <span data-ttu-id="7430a-258">Cette méthode est similaire à <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>, mais elle utilise <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>, qui étend les fonctionnalités de <xref:System.Xml.XPath.XPathNavigator> afin d'inclure des méthodes autorisant des optimisations différentes.</span><span class="sxs-lookup"><span data-stu-id="7430a-258">This method is similar to <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>, except that it uses a <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>, which extends the functionality of the <xref:System.Xml.XPath.XPathNavigator> to include methods that allow various optimizations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-259">
            <paramref name="navigator" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-259">
              <paramref name="navigator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="7430a-260">Plusieurs filtres correspondent à <paramref name="navigator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-260">More than one filter matches the <paramref name="navigator" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.Xml.XPath.XPathNavigator navigator, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingValue(class System.Xml.XPath.XPathNavigator navigator, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (navigator As XPathNavigator, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::Xml::XPath::XPathNavigator ^ navigator, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingValue : System.Xml.XPath.XPathNavigator *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValue (navigator, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="7430a-261">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-261">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="7430a-262">Paramètre <see langword="out" /> qui stocke le <c>FilterData</c> correspondant à <c>navigator</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-262">The <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <c>navigator</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-263">Retourne une valeur qui indique si le critère de correspondance d'une occurrence de <see cref="T:System.Xml.XPath.XPathNavigator" /> dans la table est respecté par <paramref name="navigator" />, et retourne les données de filtre correspondant dans un paramètre <see langword="out" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-263">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.Xml.XPath.XPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and returns the filter data of the matching filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-264">
            <see langword="true" /> si le critère de correspondance d'un et un seul filtre de la table est respecté par <paramref name="navigator" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-264">
              <see langword="true" /> if the match criterion of exactly one filter in the table is satisfied by the <paramref name="navigator" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-265">Utilisez cette méthode pour spécifier une condition XPath que le message doit respecter.</span><span class="sxs-lookup"><span data-stu-id="7430a-265">Use this method to specify an XPath condition that the message must meet.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-266">
            <paramref name="navigator" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-266">
              <paramref name="navigator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="7430a-267">Plusieurs filtres correspondent à <paramref name="navigator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-267">More than one filter matches the <paramref name="navigator" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValues">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7430a-268">Retourne une valeur qui indique si le message ou le message mis en mémoire tampon indiqué respecte le critère de correspondance d’au moins un filtre de la table, et ajoute <paramref name="FilterData" /> des filtres correspondants à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-268">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message or buffered message and adds the <paramref name="FilterData" /> of the matching filters to a collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-269">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au message ou au message mis en mémoire tampon et que seul `FilterData` est requis.</span><span class="sxs-lookup"><span data-stu-id="7430a-269">Use this method when more than one filter is expected to match the message or buffered message and only the `FilterData` is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValues(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValues : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool&#xA;override this.GetMatchingValues : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValues (message, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="7430a-270">
            <see cref="T:System.ServiceModel.Channels.Message" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-270">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="7430a-271">Paramètre de référence qui stocke les données des filtres correspondants dans un objet <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt; générique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-271">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-272">Retourne une valeur qui indique si le message indiqué respecte le critère de correspondance d’au moins un filtre de la table, et ajoute à une collection les données des filtres correspondants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-272">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message and adds the filter data of the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-273">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre de la table est respecté par <paramref name="message" /> ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-273">
              <see langword="true" /> if match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-274">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au message, que seules les données de filtre sont requises et que le corps du message n'est pas inspecté.</span><span class="sxs-lookup"><span data-stu-id="7430a-274">Use this method when more than one filter is expected to match the message, only the filter data is required, and the body of the message is not inspected.</span></span>  
  
 <span data-ttu-id="7430a-275">Les données de filtre des objets <xref:System.ServiceModel.Dispatcher.MessageFilter> correspondants sont stockées dans le paramètre `results` de <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="7430a-275">The filter data of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="7430a-276">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-276">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-277">
            <paramref name="results" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-277">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
          <span data-ttu-id="7430a-278">Un filtre a essayé d'examiner le contenu du corps du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-278">A filter attempted to examine the contents of the message body.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.MessageBuffer messageBuffer, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValues(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValues : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool&#xA;override this.GetMatchingValues : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValues (messageBuffer, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="7430a-279">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-279">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="7430a-280">Paramètre de référence qui stocke les données des filtres correspondants dans un objet <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt; générique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-280">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-281">Retourne une valeur qui indique si le message mis en mémoire tampon indiqué respecte le critère de correspondance d’au moins un filtre de la table, et ajoute à une collection les données des filtres correspondants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-281">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the filter data of the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-282">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre dans la table est respecté par <paramref name="message" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-282">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-283">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre au message mis en mémoire tampon et que seules les données de filtre sont requises.</span><span class="sxs-lookup"><span data-stu-id="7430a-283">Use this method when more than one filter is expected to match the buffered message and only the filter data is required.</span></span>  
  
 <span data-ttu-id="7430a-284">Les données de filtre des objets <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> correspondants sont stockées dans `results`<xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="7430a-284">The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results`<xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="7430a-285">Cette méthode implémente <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-285">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-286">
            <paramref name="results" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-286">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingValues(class System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (navigator As SeekableXPathNavigator, results As ICollection(Of TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::ServiceModel::Dispatcher::SeekableXPathNavigator ^ navigator, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingValues : System.ServiceModel.Dispatcher.SeekableXPathNavigator * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValues (navigator, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="7430a-287">
            <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-287">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="7430a-288">Paramètre de référence qui stocke les données des filtres correspondants dans un objet <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt; générique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-288">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-289">Retourne une valeur qui indique si le critère de correspondance d’au moins un objet <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> de la table est respecté par <paramref name="navigator" />, et ajoute à une collection les données des filtres correspondants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-289">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and adds the filter data of the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-290">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre dans la table est respecté par <paramref name="navigator" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-290">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by the <paramref name="navigator" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-291">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre aux critères de requête du document XML dérivé du navigateur XPath optimisé <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>, et que seules les données de filtre sont requises.</span><span class="sxs-lookup"><span data-stu-id="7430a-291">Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and only the filter data is required.</span></span>  
  
 <span data-ttu-id="7430a-292">Les données de filtre des objets <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> correspondants sont stockées dans le paramètre `results` de <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="7430a-292">The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-293">
            <paramref name="results" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-293">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.Xml.XPath.XPathNavigator navigator, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingValues(class System.Xml.XPath.XPathNavigator navigator, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (navigator As XPathNavigator, results As ICollection(Of TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::Xml::XPath::XPathNavigator ^ navigator, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingValues : System.Xml.XPath.XPathNavigator * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValues (navigator, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="7430a-294">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-294">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="7430a-295">Paramètre de référence qui stocke les données des filtres correspondants dans un objet <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt; générique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-295">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-296">Retourne une valeur qui indique si le critère de correspondance d’au moins un objet <see cref="T:System.Xml.XPath.XPathNavigator" /> de la table est respecté par <paramref name="navigator" />, et ajoute à une collection les données des filtres correspondants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-296">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.Xml.XPath.XPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and adds the filter data of the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-297">
            <see langword="true" /> si le critère de correspondance d'au moins un filtre dans la table est respecté par <paramref name="navigator" /> ; <see langword="false" /> si aucun filtre n'est respecté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-297">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by the <paramref name="navigator" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-298">Utilisez cette méthode lorsque plusieurs filtres sont supposés correspondre aux critères de requête du document XML dérivé du navigateur XPath optimisé <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>, et que seules les données de filtre sont requises.</span><span class="sxs-lookup"><span data-stu-id="7430a-298">Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and only the filter data is required.</span></span>  
  
 <span data-ttu-id="7430a-299">Les données de filtre des objets <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> correspondants sont stockées dans le paramètre `results` de <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="7430a-299">The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-300">
            <paramref name="results" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-300">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7430a-301">
            <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> n'est pas en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-301">The <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> is not read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7430a-302">Retourne toujours <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-302">Always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TFilterData this[System.ServiceModel.Dispatcher.MessageFilter filter] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFilterData Item(class System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(filter As MessageFilter) As TFilterData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TFilterData default[System::ServiceModel::Dispatcher::MessageFilter ^] { TFilterData get(System::ServiceModel::Dispatcher::MessageFilter ^ filter); void set(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.ServiceModel.Dispatcher.MessageFilter) : 'FilterData with get, set" Usage="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFilterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="7430a-303">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> associé aux données de filtre à obtenir ou à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-303">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> associated with the filter data to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-304">Obtient ou définit les données de filtre associées au <paramref name="filter" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-304">Gets or sets the filter data associated with the specified <paramref name="filter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7430a-305">Données de filtre associées à <paramref name="filter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-305">The filter data associated with the <paramref name="filter" />.</span>
          </span>
          <span data-ttu-id="7430a-306">Si l'objet <paramref name="filter" /> spécifié est introuvable, une opération Get lève <see cref="T:System.Collections.Generic.KeyNotFoundException" /> et une opération Set crée un élément de données de filtre en utilisant <paramref name="filter" /> comme clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-306">If the specified <paramref name="filter" /> is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" /> and a set operation creates a new filter data element with the specified <paramref name="filter" /> as key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-307">La propriété `Item` (l’indexeur en C#) permet d’accéder aux données de filtre associées à `filter` dans la collection de filtres de la table par la syntaxe suivante.</span><span class="sxs-lookup"><span data-stu-id="7430a-307">The `Item` property (the indexer in C#) provides the ability to access the filter data associated with a `filter` in the table's filter collection by using the following syntax.</span></span>  
  
```csharp  
myFilters[filter]  
```  
  
```vb  
myFilters(filter)  
```  
  
 <span data-ttu-id="7430a-308">Vous pouvez également utiliser la propriété `Item` pour ajouter de nouveaux éléments en définissant les valeurs d'une paire de données `filter`/filtre qui n'existe pas dans la table de filtres d'action.</span><span class="sxs-lookup"><span data-stu-id="7430a-308">You can also use the `Item` property to add new elements by setting the values of a `filter`/filter data pair that does not exist in the action filter table.</span></span> <span data-ttu-id="7430a-309">Cependant, si `filter` figure déjà dans la table, la définition de la propriété `Item` remplace l'ancienne valeur.</span><span class="sxs-lookup"><span data-stu-id="7430a-309">However if `filter` is already in the table, setting the `Item` property overwrites the old value.</span></span> <span data-ttu-id="7430a-310">Par opposition, la méthode <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A> ne modifie pas les données de filtre d'un `filter` existant.</span><span class="sxs-lookup"><span data-stu-id="7430a-310">In contrast, the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A> method does not modify the filter data of an existing `filter`.</span></span>  
  
 <span data-ttu-id="7430a-311">L'élément `Item` dans un dictionnaire est une paire `filter`/filtre de données dans les cas où <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> est utilisé.</span><span class="sxs-lookup"><span data-stu-id="7430a-311">The dictionary `Item` is a `filter`/filter data pair in the case of <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-312">
            <paramref name="filter" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-312">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="7430a-313">Une erreur de compilateur s'est produite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-313">A compiler error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="7430a-314">La propriété est récupérée et <paramref name="filter" /> ne figure pas dans la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-314">The property is retrieved and the <paramref name="filter" /> is not in the table.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of MessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" Usage="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7430a-315">Obtient une collection de tous les filtres contenus dans <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-315">Gets a collection of all the filters contained in the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7430a-316">
            <see cref="T:System.Collections.Generic.ICollection`1" /> de tous les <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> contenus dans la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-316">An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />s contained in the filter table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-317">Cette propriété implémente <xref:System.Collections.Generic.IDictionary%602.Keys%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-317">This property implements <xref:System.Collections.Generic.IDictionary%602.Keys%2A>.</span></span> <span data-ttu-id="7430a-318"><xref:System.Collections.Generic.IDictionary%602> implémenté par la table de filtres utilise <xref:System.ServiceModel.Dispatcher.MessageFilter> comme clé et `FilterData` comme valeur de la paire.</span><span class="sxs-lookup"><span data-stu-id="7430a-318">The <xref:System.Collections.Generic.IDictionary%602> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.</span></span>  
  
 <span data-ttu-id="7430a-319">L’ordre des filtres retournés dans la collection n’est pas spécifié, mais il correspond systématiquement à l’ordre des `FilterData` correspondants dans la collection retournée par la propriété <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Values%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-319">The order of the filters returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding `FilterData` in the collection returned by the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Values%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeQuota">
      <MemberSignature Language="C#" Value="public int NodeQuota { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeQuota" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeQuota As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeQuota { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NodeQuota : int with get, set" Usage="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt;.NodeQuota" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7430a-320">Obtient ou définit le nombre maximal de nœuds de document XML qui peuvent être examinés par les différents filtres pendant un appel unique d'une méthode <see langword="Match" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-320">Gets or sets the maximum number of XML document nodes that can be examined by the individual filters during a single call to a <see langword="Match" /> method.</span>
          </span>
          <span data-ttu-id="7430a-321">Cette valeur s'applique à chaque filtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-321">This value applies for each filter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7430a-322">Nombre de nœuds qui peuvent être examinés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-322">The number of nodes that can be examined.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-323">Cette propriété peut être utilisée pour réduire une menace pour la sécurité.</span><span class="sxs-lookup"><span data-stu-id="7430a-323">This property can be used to alleviate a security threat.</span></span> <span data-ttu-id="7430a-324">Certains filtres peuvent s'avérer extrêmement coûteux à évaluer ou présenter des temps d'exécution très longs.</span><span class="sxs-lookup"><span data-stu-id="7430a-324">Some filters can be extremely expensive to evaluate or are very long-running.</span></span> <span data-ttu-id="7430a-325">Les <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> sont généralement évalués sur un document d'une source non fiable (message SOAP issu du réseau), qui peut être malveillante.</span><span class="sxs-lookup"><span data-stu-id="7430a-325"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter>s are most often evaluated against a document from an untrusted source (SOAP message off the wire), which may be malicious.</span></span> <span data-ttu-id="7430a-326">Les filtres s'appliquant aux documents XML, pour définir des limites de calcul sur les tables de filtres, il est recommandé de spécifier le nombre maximal de nœuds examinés lors de l'évaluation d'un filtre dans cette table.</span><span class="sxs-lookup"><span data-stu-id="7430a-326">Because filters operate on XML documents, the best way to set computational limits on filter tables is to specify the maximum number of nodes that are examined while evaluating a filter in this table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7430a-327">Supprime un filtre et ses données de filtre associées de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-327">Removes a filter and its associated filter data from the filter table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of MessageFilter, TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool&#xA;override this.Remove : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool" Usage="xPathMessageFilterTable.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="7430a-328">
            <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; à supprimer de la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-328">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to remove from the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-329">Supprime un filtre et ses données de filtre associées de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-329">Removes a filter and its associated filter data from the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-330">
            <see langword="true" /> si la paire filtre/<paramref name="FilterData" /> a été trouvée et supprimée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-330">
              <see langword="true" /> if the filter/<paramref name="FilterData" /> pair was found and removed; <see langword="false" /> if it was not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-331">Si la clé de filtre de `item` est présente mais est associée à des données qui diffèrent de `FilterData`, la méthode ne parvient pas à supprimer le filtre et retourne la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="7430a-331">If the filter key of the `item` is present but is associated with data that differs from the `FilterData`, the method fails to remove the filter and returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool&#xA;override this.Remove : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool" Usage="xPathMessageFilterTable.Remove filter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="7430a-332">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-332">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-333">Supprime un filtre et ses données de filtre associées de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-333">Removes a filter and its associated filter data from the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-334">
            <see langword="true" /> si le filtre a été trouvé et supprimé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-334">
              <see langword="true" /> if the filter was found and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-335">
            <paramref name="filter" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-335">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="7430a-336">
            <paramref name="filter" /> n'est pas un <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-336">
              <paramref name="filter" /> is not a <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.ServiceModel.Dispatcher.XPathMessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(class System.ServiceModel.Dispatcher.XPathMessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (filter As XPathMessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::ServiceModel::Dispatcher::XPathMessageFilter ^ filter);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.ServiceModel.Dispatcher.XPathMessageFilter -&gt; bool" Usage="xPathMessageFilterTable.Remove filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.XPathMessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="7430a-337">
            <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-337">The <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-338">Supprime <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> et ses données de filtre associées de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-338">Removes an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> and its associated filter data from the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-339">
            <see langword="true" /> si <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> a été trouvé et supprimé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-339">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> was found and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-340">Cette méthode ne lève pas d'exception si le filtre spécifié n'existe pas dans la table de filtres.</span><span class="sxs-lookup"><span data-stu-id="7430a-340">This method does not throw an exception if the specified filter does not exist in the filter table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7430a-341">
            <paramref name="filter" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-341">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="7430a-342">
            <paramref name="filter" /> n'est pas <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-342">
              <paramref name="filter" /> is not an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7430a-343">Retourne un énumérateur qui peut itérer au sein de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-343">Returns an enumerator that can iterate through the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-344">
            <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt; qui peut être utilisé pour itérer au sein de la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-344">An <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt; that can be used to iterate through the filter table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-345">Cette méthode implémente <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-345">This method implements <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimToSize();" />
      <MemberSignature Language="F#" Value="member this.TrimToSize : unit -&gt; unit" Usage="xPathMessageFilterTable.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7430a-346">Compacte la table de filtres en vidant toutes les allocations ou les mémoires tampons superflues.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-346">Compacts the filter table, purging any excess allocations or buffers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-347">Du point de vue conceptuel, cette méthode est équivalente à l’affectation d’un compteur à la capacité d’une collection.</span><span class="sxs-lookup"><span data-stu-id="7430a-347">This method is conceptually equivalent to setting a collection's capacity to its count.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (System.ServiceModel.Dispatcher.MessageFilter filter, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(class System.ServiceModel.Dispatcher.MessageFilter filter, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (filter As MessageFilter, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::ServiceModel::Dispatcher::MessageFilter ^ filter, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : System.ServiceModel.Dispatcher.MessageFilter *  -&gt; bool&#xA;override this.TryGetValue : System.ServiceModel.Dispatcher.MessageFilter *  -&gt; bool" Usage="xPathMessageFilterTable.TryGetValue (filter, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="7430a-348">Clé permettant de récupérer les données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-348">A key to retrieve the data.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="7430a-349">
            <c>data</c> associé à <c>filter</c> quand cette méthode retourne <see langword="true" /> ; sinon, valeur par défaut pour le type du paramètre <c>data</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-349">The <c>data</c> associated with the <c>filter</c> when this method returns <see langword="true" />; otherwise, the default value for the type of the <c>data</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7430a-350">Vérifie si un filtre est stocké dans la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-350">Checks whether a filter is stored in the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7430a-351">
            <see langword="true" /> si <paramref name="filter" /> est présent dans la table de filtres ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-351">
              <see langword="true" /> if the <paramref name="filter" /> is present in the filter table; <see langword="false" /> otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-352">Cette méthode est utile pour vérifier si un filtre est présent dans la table de filtres. En effet, si le filtre n'est pas présent, elle retourne la valeur `false` au lieu de lever une exception.</span><span class="sxs-lookup"><span data-stu-id="7430a-352">This method is an efficient way to check whether a filter is in the filter table because when the filter is not present it returns `false` instead of throwing an exception.</span></span> <span data-ttu-id="7430a-353">Si vous tentez de récupérer le filtre dans la table à l'aide de sa propriété `Item` (indexeur en C#) alors qu'il en est absent, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="7430a-353">If you try to retrieve the filter from the table using its `Item` property (the indexer in C#) and it is not there, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TFilterData&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ Values { System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;'FilterData&gt;" Usage="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TFilterData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7430a-354">Obtient une collection de tous les <paramref name="FilterData" /> contenus dans <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-354">Gets a collection of all the <paramref name="FilterData" /> contained in the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7430a-355">
            <see cref="T:System.Collections.Generic.ICollection`1" /> de tous les <paramref name="FilterData" /> contenus dans la table de filtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7430a-355">An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the <paramref name="FilterData" /> contained in the filter table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7430a-356">Cette propriété implémente <xref:System.Collections.Generic.IDictionary%602.Values%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-356">This property implements <xref:System.Collections.Generic.IDictionary%602.Values%2A>.</span></span> <span data-ttu-id="7430a-357">La paire <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> implémentée par la table de filtres utilise <xref:System.ServiceModel.Dispatcher.MessageFilter> comme clé et `FilterData` comme valeur de la paire.</span><span class="sxs-lookup"><span data-stu-id="7430a-357">The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.</span></span>  
  
 <span data-ttu-id="7430a-358">L’ordre des `FilterData` retournés dans la collection n’est pas spécifié, mais il correspond systématiquement à l’ordre des filtres correspondants dans la collection retournée par la propriété <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Keys%2A>.</span><span class="sxs-lookup"><span data-stu-id="7430a-358">The order of the `FilterData` returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding filters in the collection returned by the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Keys%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>