<Type Name="DataContractAttribute" FullName="System.Runtime.Serialization.DataContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70ae7178b62cf71bd1a045e1c32a52dda9ec7f3d" /><Meta Name="ms.sourcegitcommit" Value="662f143e6be46d519ff8ab4451d543d91e651478" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/18/2018" /><Meta Name="ms.locfileid" Value="53569147" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DataContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Spécifie que le type définit ou implémente un contrat de données et qu'il est sérialisable par un sérialiseur, tel que le <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. Pour rendre un type sérialisable, les auteurs de types doivent définir un contrat de données pour ce type.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appliquez l’attribut <xref:System.Runtime.Serialization.DataContractAttribute> aux types (classes, structures ou énumérations) qui sont utilisés dans les opérations de sérialisation et de désérialisation par le <xref:System.Runtime.Serialization.DataContractSerializer>. Si vous envoyez ou recevez des messages à l’aide de l’infrastructure Windows Communication Foundation (WCF), vous devez également appliquer le <xref:System.Runtime.Serialization.DataContractAttribute> à toutes les classes qui contiennent et manipulent les données envoyées dans les messages. Pour plus d’informations sur les contrats de données, consultez [à l’aide de contrats de données](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
 Vous devez également appliquer les <xref:System.Runtime.Serialization.DataMemberAttribute> à tout champ, propriété ou événement qui contiennent des valeurs que vous voulez sérialiser. En appliquant le <xref:System.Runtime.Serialization.DataContractAttribute>, vous permettez explicitement au <xref:System.Runtime.Serialization.DataContractSerializer> de sérialiser et de désérialiser les données.  
  
> [!CAUTION]
>  Vous pouvez appliquer le <xref:System.Runtime.Serialization.DataMemberAttribute> aux champs privés. Soyez conscient que les données retournées par le champ (même s'il est privé) sont sérialisées et désérialisées, et que, par conséquent, elles peuvent être affichées ou interceptées par un utilisateur ou un processus malveillant.  
  
 Pour plus d’informations sur les contrats de données, consultez les rubriques répertoriées dans [à l’aide de contrats de données](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
## <a name="data-contracts"></a>Contrats de données  
 Un *contrat de données* est une description abstraite d’un ensemble de champs avec un nom et type de données pour chaque champ. Le contrat de données existe en dehors de toute implémentation unique pour permettre aux services sur différentes plates-formes d'interopérer. Tant que les données passées entre les services se conforment au même contrat, tous les services peuvent traiter les données. Ce traitement est également appelé un *système faiblement couplé*. Un contrat de données est également semblable à une interface dans le sens où le contrat spécifie comment les données doivent être fournies afin qu'elles puissent être traitées par une application. Par exemple, le contrat de données peut demander un type de données nommé "Person" qui comporte deux champs de texte nommés, "FirstName" et "LastName". Pour créer un contrat de données, appliquez simplement <xref:System.Runtime.Serialization.DataContractAttribute> à la classe et <xref:System.Runtime.Serialization.DataMemberAttribute> aux champs ou aux propriétés qui doivent être sérialisés. Lorsqu'elles sont sérialisées, les données se conforment au contrat de données qui est implicitement intégré au type.  
  
> [!NOTE]
>  Un contrat de données diffère considérablement d'une interface réelle dans son comportement d'héritage. Les interfaces sont héritées par les types dérivés. Lorsque vous appliquez le <xref:System.Runtime.Serialization.DataContractAttribute> à une classe de base, les types dérivés n'héritent pas de l'attribut ou du comportement. Toutefois, si un type dérivé comporte un contrat de données, les membres de données de la classe de base sont alors sérialisés. Toutefois, vous devez appliquer le <xref:System.Runtime.Serialization.DataMemberAttribute> aux nouveaux membres dans une classe dérivée pour les rendre sérialisables.  
  
## <a name="xml-schema-documents-and-the-svcutil-tool"></a>Documents de schéma XML et outil SvcUtil  
 Si vous échangez des données avec des services, vous devez décrire le contrat de données. Pour la version actuelle du <xref:System.Runtime.Serialization.DataContractSerializer>, un schéma XML peut être utilisé pour définir des contrats de données. (D'autres formes de métadonnées/description pourraient être utilisées dans le même but.) Pour créer un schéma XML à partir de votre application, utilisez le [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) avec la **/dconly** option de ligne de commande. Lorsque l'entrée de l'outil est un assembly, l'outil génère par défaut un jeu de schémas XML qui définissent tous les types de contrats de données trouvés dans cet assembly. À l’inverse, vous pouvez également utiliser l’outil Svcutil.exe pour créer des définitions de classe Visual Basic ou C# qui se conforment aux exigences des schémas XML utilisant des constructions que les contrats de données peuvent exprimer. Dans ce cas, le **/dconly** option de ligne de commande n’est pas requise.  
  
 Si l'entrée de l'outil Svcutil.exe est un schéma XML, l'outil crée par défaut un ensemble de classes. Si vous examinez ces classes, vous pouvez constater que le <xref:System.Runtime.Serialization.DataContractAttribute> a été appliqué. Vous pouvez utiliser ces classes afin de créer une application pour traiter des données qui doivent être échangées avec d'autres services.  
  
 Vous pouvez également exécuter l’outil par rapport à un point de terminaison qui retourne un document Web Services Description Language (WSDL) pour générer automatiquement le code et la configuration pour créer un client Windows Communication Foundation (WCF). Le code généré inclut des types qui sont marqués avec le <xref:System.Runtime.Serialization.DataContractAttribute>.  
  
## <a name="reusing-existing-types"></a>Réutilisation des types existants  
 Un contrat de données comporte deux exigences de base : un nom stable et une liste de membres. Le nom stable est composé de l'URI (Uniform Resource Identifier) de l'espace de noms et du nom local du contrat. Par défaut, lorsque vous appliquez le <xref:System.Runtime.Serialization.DataContractAttribute> à une classe, il utilise le nom de classe en tant que le nom local et l’espace de noms de la classe (le préfixe «http://schemas.datacontract.org/2004/07/») en tant que l’URI d’espace de noms. Vous pouvez substituer les valeurs par défaut en définissant les propriétés <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> et <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A>. Vous pouvez également modifier l'espace de noms en appliquant le <xref:System.Runtime.Serialization.ContractNamespaceAttribute> à l'espace de noms. Utilisez cette fonction lorsque vous avez un type existant qui traite les données exactement comme vous l'avez demandé mais qui contient un espace de noms et un nom de classe différents dans le contrat de données. En substituant les valeurs par défaut, vous pouvez réutiliser votre type existant et conformer les données sérialisées au contrat de données.  
  
> [!NOTE]
>  Dans du code, vous pouvez utiliser le mot `DataContract` au lieu de <xref:System.Runtime.Serialization.DataContractAttribute> qui est plus long.  
  
## <a name="versioning"></a>Gestion de version  
 Un contrat de données accepte également des versions ultérieures. Autrement dit, lorsqu'une version ultérieure du contrat inclut des données supplémentaires, ces données sont stockées et retournées intactes à un expéditeur. Pour cela, implémentez l'interface <xref:System.Runtime.Serialization.IExtensibleDataObject>.  
  
 Pour plus d’informations sur le contrôle de version, consultez [concernant les contrats de données](~/docs/framework/wcf/feature-details/data-contract-versioning.md).  
  
   
  
## Examples  
 L'exemple suivant sérialise et désérialise une classe nommée `Person` à laquelle le <xref:System.Runtime.Serialization.DataContractAttribute> a été appliqué. Notez que les propriétés <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> et <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> ont des valeurs qui substituent les paramètres par défaut.  
  
 [!code-csharp[DataContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractattribute/cs/overview.cs#1)]
 [!code-vb[DataContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractattribute/vb/overview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/using-data-contracts.md">Utilisation de contrats de données</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNameSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’information indiquant si <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> a été défini explicitement.</summary>
        <value><see langword="true" /> Si le nom a été défini explicitement ; Sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNamespaceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’information indiquant si <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> a été défini explicitement.</summary>
        <value><see langword="true" /> Si l’espace de noms a été défini explicitement ; Sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public bool IsReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReference" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReference { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReference : bool with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique s'il faut conserver les données de référence d'objet.</summary>
        <value><see langword="true" /> pour conserver les données de référence d'objet au format XML standard ; <see langword="false" /> dans le cas contraire. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la propriété `IsReference` pour que <xref:System.Runtime.Serialization.DataContractSerializer> insère des constructions XML qui conservent des références d'objet.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      </Docs>
    </Member>
    <Member MemberName="IsReferenceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsReferenceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReferenceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’information indiquant si <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> a été défini explicitement.</summary>
        <value><see langword="true" /> si la référence a été définie explicitement ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du contrat de données pour le type.</summary>
        <value>Nom local d'un contrat de données. La valeur par défaut est le nom de la classe à laquelle est appliqué l'attribut.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propriété <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> permet de donner un nom à un contrat de données, lequel correspond au nom du type dans le schéma XML. Pour plus d’informations, consultez [Data Contract Names](~/docs/framework/wcf/feature-details/data-contract-names.md).  
  
 Par défaut, le nom d'un contrat de données est le nom du type à qui le <xref:System.Runtime.Serialization.DataContractAttribute> est appliqué. Toutefois, il peut exister des raisons de modifier ce nom par défaut. Une des raisons est de permettre à un type existant de traiter des données qui doivent se conformer à un contrat de données existant. Par exemple, s'il existe un type nommé `Person` mais que le contrat de données inclus dans un schéma XML requiert que le nom soit `Customer`, le contrat peut être rempli en affectant `Customer` à la valeur de propriété.  
  
 Une deuxième raison est d'autoriser la génération de noms qui ne sont pas valides en tant que noms de type. Par exemple, si un contrat de données requiert un nom qui n'est pas autorisé comme nom de type, affectez ce nom non autorisé à la valeur de propriété. Par exemple, la chaîne "$value" n'est pas autorisée comme nom de type mais elle est autorisée comme valeur de propriété <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'espace de noms du contrat de données pour le type.</summary>
        <value>Espace de noms du contrat.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour spécifier un espace de noms particulier si votre type doit retourner des données qui se conforment avec un contrat de données spécifique.  
  
> [!TIP]
>  Pour que les données soient correctement transmises, le nom des données dans un contrat doit être identique sur le client et le serveur. Projets Visual Basic, par défaut, ajoutent un préfixe à l’espace de noms défini dans chaque fichier (appelé « espace de noms racine, « nommé d’après le projet). L'ajout de ce préfixe différencie ainsi les espaces de noms client et serveur pour un même type. La solution consiste à définir le <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> propriété à « », ou pour définir explicitement l’espace de noms de contrat de données dans cette propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>