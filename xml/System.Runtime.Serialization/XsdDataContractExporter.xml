<Type Name="XsdDataContractExporter" FullName="System.Runtime.Serialization.XsdDataContractExporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b10630be84113cc7ca50aaf4a6938af091054dba" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46689355" /></Metadata><TypeSignature Language="C#" Value="public class XsdDataContractExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XsdDataContractExporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XsdDataContractExporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XsdDataContractExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsdDataContractExporter" />
  <TypeSignature Language="F#" Value="type XsdDataContractExporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1dd0f-101">Autorise la transformation d’un ensemble de types .NET Framework qui sont utilisés dans les contrats de données en un fichier de schéma XML (.xsd).</span><span class="sxs-lookup"><span data-stu-id="1dd0f-101">Allows the transformation of a set of .NET Framework types that are used in data contracts into an XML schema file (.xsd).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dd0f-102">Utilisez la classe <xref:System.Runtime.Serialization.XsdDataContractExporter> lorsque vous avez créé un service Web qui incorpore des données représentées par les types CLR (Common Language Runtime) et que vous devez exporter des schémas XML pour chaque type à consommer par d'autres services Web.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-102">Use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by common language runtime (CLR) types and when you need to export XML schemas for each type to be consumed by other Web services.</span></span> <span data-ttu-id="1dd0f-103">Autrement dit, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforme un ensemble de types CLR en schémas XML.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-103">That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into XML schemas.</span></span> <span data-ttu-id="1dd0f-104">(Pour plus d’informations sur les types qui peuvent être utilisées, consultez [Types pris en charge par le sérialiseur de contrat de données](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).) Les schémas peuvent alors être exposés via un document WSDL (Web Services Description Language) à utiliser par d'autres qui doivent interopérer avec votre service.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-104">(For more information about the types that can be used, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).) The schemas can then be exposed through a Web Services Description Language (WSDL) document for use by others who need to interoperate with your service.</span></span>  
  
 <span data-ttu-id="1dd0f-105">À l'inverse, si vous créez un service Web qui doit interopérer avec un service Web existant, utilisez le <xref:System.Runtime.Serialization.XsdDataContractImporter> pour transformer des schémas XML et créer les types CLR qui représentent les données dans un langage de programmation sélectionné.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-105">Conversely, if you are creating a Web service that must interoperate with an existing Web service, use the <xref:System.Runtime.Serialization.XsdDataContractImporter> to transform XML schemas and create the CLR types that represent the data in a selected programming language.</span></span>  
  
 <span data-ttu-id="1dd0f-106">Le <xref:System.Runtime.Serialization.XsdDataContractExporter> génère un objet <xref:System.Xml.Schema.XmlSchemaSet> qui contient la collection de schémas.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-106">The <xref:System.Runtime.Serialization.XsdDataContractExporter> generates an <xref:System.Xml.Schema.XmlSchemaSet> object that contains the collection of schemas.</span></span> <span data-ttu-id="1dd0f-107">Accédez à l'jeu de schémas via la propriété <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-107">Access the set of schemas through the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1dd0f-108">Pour rapidement générer des fichiers XSD (XML Schema Definition) que d'autres services Web peuvent consommer, utilisez le <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-108">To quickly generate XML schema definition (XSD) files that other Web services can consume, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span></span>  
  
## <a name="exporting-schemas-into-an-xmlschemaset"></a><span data-ttu-id="1dd0f-109">Exportation de schémas vers une classe XmlSchemaSet</span><span class="sxs-lookup"><span data-stu-id="1dd0f-109">Exporting Schemas Into an XmlSchemaSet</span></span>  
 <span data-ttu-id="1dd0f-110">Pour créer une instance de la classe <xref:System.Xml.Schema.XmlSchemaSet> qui contient des fichiers de schéma XML, vous devez être conscient des éléments suivants.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-110">To create an instance of the <xref:System.Xml.Schema.XmlSchemaSet> class that contains XML schema files, you should be aware of the following.</span></span>  
  
 <span data-ttu-id="1dd0f-111">L'ensemble de types que vous exportez est enregistré comme un ensemble interne de contrats de données.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-111">The set of types you are exporting are recorded as an internal set of data contracts.</span></span> <span data-ttu-id="1dd0f-112">Vous pouvez donc appeler plusieurs fois la méthode <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> pour ajouter des types nouveaux à l'jeu de schémas sans dégrader les performances parce que seuls les types nouveaux seront ajoutés à l'ensemble.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-112">Thus, you can call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set.</span></span> <span data-ttu-id="1dd0f-113">Pendant l'opération <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A>, les schémas existants sont comparés aux nouveaux schémas qui sont ajoutés.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-113">During the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> operation, the existing schemas are compared to the new schemas being added.</span></span> <span data-ttu-id="1dd0f-114">Si des conflits existent, une exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-114">If there are conflicts, an exception will be thrown.</span></span> <span data-ttu-id="1dd0f-115">Un conflit est généralement détecté si deux types avec le même nom de contrat de données mais avec des contrats différents (membres différents) sont exportés par la même instance <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-115">A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same <xref:System.Runtime.Serialization.XsdDataContractExporter> instance.</span></span>  
  
## <a name="using-the-exporter"></a><span data-ttu-id="1dd0f-116">Utilisation de l'exportateur</span><span class="sxs-lookup"><span data-stu-id="1dd0f-116">Using the Exporter</span></span>  
 <span data-ttu-id="1dd0f-117">Une solution recommandée d'utiliser cette classe est la suivante :</span><span class="sxs-lookup"><span data-stu-id="1dd0f-117">A recommended way of using this class is as follows:</span></span>  
  
1.  <span data-ttu-id="1dd0f-118">Utilisez l'une des surcharges <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> pour déterminer si le type spécifié ou l'ensemble de types peut être exporté.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-118">Use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported.</span></span> <span data-ttu-id="1dd0f-119">Utilisez l'une des surcharges qui est appropriée pour vos spécifications.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-119">Use one of the overloads that is appropriate to your requirements.</span></span>  
  
2.  <span data-ttu-id="1dd0f-120">Appelez la méthode <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> correspondante.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-120">Call the corresponding <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method.</span></span>  
  
3.  <span data-ttu-id="1dd0f-121">Récupérez les schémas à partir de la propriété <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A>.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-121">Retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1dd0f-122">L'exemple suivant crée une instance du <xref:System.Runtime.Serialization.XsdDataContractExporter> et appelle la méthode <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29>.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-122">The following example creates an instance of the <xref:System.Runtime.Serialization.XsdDataContractExporter> and calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.</span></span>  
  
 [!code-csharp[XsdDataContractExporter#0](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#0)]
 [!code-vb[XsdDataContractExporter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md"><span data-ttu-id="1dd0f-123">Types pris en charge par le sérialiseur de contrat de données</span><span class="sxs-lookup"><span data-stu-id="1dd0f-123">Types Supported by the Data Contract Serializer</span></span></related>
    <related type="Article" href="~/docs/framework/wcf/feature-details/serialization-and-deserialization.md"><span data-ttu-id="1dd0f-124">Sérialisation et désérialisation</span><span class="sxs-lookup"><span data-stu-id="1dd0f-124">Serialization and Deserialization</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1dd0f-125">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-125">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractExporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractExporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1dd0f-126">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-126">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractExporter (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemas As XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractExporter(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.XsdDataContractExporter : System.Xml.Schema.XmlSchemaSet -&gt; System.Runtime.Serialization.XsdDataContractExporter" Usage="new System.Runtime.Serialization.XsdDataContractExporter schemas" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="1dd0f-127"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> qui contient les schémas à exporter.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-127">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to be exported.</span></span></param>
        <summary><span data-ttu-id="1dd0f-128">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> avec l'jeu de schémas spécifié.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-128">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class with the specified set of schemas.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dd0f-129">Utilisez cette surcharge lorsque vous avez un <xref:System.Xml.Schema.XmlSchemaSet> existant auquel vous souhaitez ajouter de nouveaux schémas.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-129">Use this overload when you have an existing <xref:System.Xml.Schema.XmlSchemaSet> to which you want to add new schemas.</span></span> <span data-ttu-id="1dd0f-130">Après avoir construit un <xref:System.Runtime.Serialization.XsdDataContractExporter> avec cette surcharge, appelez la méthode <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> pour ajouter des types nouveaux à l'ensemble existant.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-130">After you construct a <xref:System.Runtime.Serialization.XsdDataContractExporter> with this overload, call the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method to add new types to the existing set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanExport">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1dd0f-131">Obtient une valeur qui indique si un type CLR (Common Language Runtime) peut être exporté.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-131">Gets a value that indicates whether a common language runtime (CLR) type (or set of types) can be exported.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dd0f-132">Les types CLR ne peuvent pas tous être utilisés dans les contrats de données.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-132">Not all CLR types can be used in data contracts.</span></span> <span data-ttu-id="1dd0f-133">Pour plus d’informations sur ce qui peut être sérialisé, consultez [Types pris en charge par le sérialiseur de contrat de données](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span><span class="sxs-lookup"><span data-stu-id="1dd0f-133">For more information about what can be serialized, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (assemblies As ICollection(Of Assembly)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberSignature Language="F#" Value="member this.CanExport : System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; -&gt; bool" Usage="xsdDataContractExporter.CanExport assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="assemblies"><span data-ttu-id="1dd0f-134">Un <see cref="T:System.Collections.Generic.ICollection`1" /> de <see cref="T:System.Reflection.Assembly" /> qui contient les assemblys avec les types à exporter.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-134">A <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Reflection.Assembly" /> that contains the assemblies with the types to export.</span></span></param>
        <summary><span data-ttu-id="1dd0f-135">Obtient une valeur qui indique si l'ensemble des types CLR (Common Language Runtime) contenu dans un ensemble d'assemblys peut être exporté.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-135">Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.</span></span></summary>
        <returns><span data-ttu-id="1dd0f-136"><see langword="true" /> si les types peuvent être exportés ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-136"><see langword="true" /> if the types can be exported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (System.Collections.Generic.ICollection&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (types As ICollection(Of Type)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(System::Collections::Generic::ICollection&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="member this.CanExport : System.Collections.Generic.ICollection&lt;Type&gt; -&gt; bool" Usage="xsdDataContractExporter.CanExport types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.ICollection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="1dd0f-137"><see cref="T:System.Collections.Generic.ICollection`1" /> qui contient les types spécifiés à exporter.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-137">A <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the specified types to export.</span></span></param>
        <summary><span data-ttu-id="1dd0f-138">Obtient une valeur qui indique si l'ensemble des types CLR (Common Language Runtime) contenu dans un <see cref="T:System.Collections.Generic.ICollection`1" /> peut être exporté.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-138">Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a <see cref="T:System.Collections.Generic.ICollection`1" /> can be exported.</span></span></summary>
        <returns><span data-ttu-id="1dd0f-139"><see langword="true" /> si les types peuvent être exportés ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-139"><see langword="true" /> if the types can be exported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CanExport : Type -&gt; bool" Usage="xsdDataContractExporter.CanExport type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1dd0f-140"><see cref="T:System.Type" /> à exporter.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-140">The <see cref="T:System.Type" /> to export.</span></span></param>
        <summary><span data-ttu-id="1dd0f-141">Obtient une valeur qui indique si le type CLR spécifié peut être exporté.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-141">Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.</span></span></summary>
        <returns><span data-ttu-id="1dd0f-142"><see langword="true" /> si le type peut être exporté ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-142"><see langword="true" /> if the type can be exported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1dd0f-143">L'exemple suivant appelle la méthode <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29> avant d'appeler la méthode <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29>.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-143">The following example calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29> method before calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.</span></span>  
  
 [!code-csharp[XsdDataContractExporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#1)]
 [!code-vb[XsdDataContractExporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Export">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1dd0f-144">Transforme le type CLR ou l'ensemble de types dans un jeu de schémas XML.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-144">Transforms the common language runtime (CLR) type, or set of types, into a set of XML schemas.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dd0f-145">Une méthode recommandée est d'utiliser l'une des surcharges <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> pour déterminer si le type ou ensemble de types spécifié peut être exporté.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-145">As a recommended practice, use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported.</span></span>  
  
 <span data-ttu-id="1dd0f-146">Après avoir appelé la méthode <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A>, récupérez les schémas à partir de la propriété <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A>.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-146">After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (assemblies As ICollection(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberSignature Language="F#" Value="member this.Export : System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; -&gt; unit" Usage="xsdDataContractExporter.Export assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="assemblies"><span data-ttu-id="1dd0f-147"><see cref="T:System.Collections.Generic.ICollection`1" /> (de <see cref="T:System.Reflection.Assembly" />) qui contient les types à exporter.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-147">A <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Reflection.Assembly" />) that contains the types to export.</span></span></param>
        <summary><span data-ttu-id="1dd0f-148">Transforme les types contenus dans la collection spécifiée d’assemblys.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-148">Transforms the types contained in the specified collection of assemblies.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dd0f-149">L'argument <paramref name="assemblies" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-149">The <paramref name="assemblies" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1dd0f-150">Un <see cref="T:System.Reflection.Assembly" /> dans la collection est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-150">An <see cref="T:System.Reflection.Assembly" /> in the collection is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.Collections.Generic.ICollection&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (types As ICollection(Of Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::Collections::Generic::ICollection&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="member this.Export : System.Collections.Generic.ICollection&lt;Type&gt; -&gt; unit" Usage="xsdDataContractExporter.Export types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.ICollection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="1dd0f-151">Un <see cref="T:System.Collections.Generic.ICollection`1" /> (de <see cref="T:System.Type" />) qui contient les types à exporter.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-151">A  <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Type" />) that contains the types to export.</span></span></param>
        <summary><span data-ttu-id="1dd0f-152">Transforme les types contenus dans le <see cref="T:System.Collections.Generic.ICollection`1" /> passé à cette méthode.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-152">Transforms the types contained in the <see cref="T:System.Collections.Generic.ICollection`1" /> passed to this method.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dd0f-153">L'argument <paramref name="types" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-153">The <paramref name="types" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1dd0f-154">Un type dans la collection est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-154">A type in the collection is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.Export : Type -&gt; unit" Usage="xsdDataContractExporter.Export type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1dd0f-155"><see cref="T:System.Type" /> à transformer en schéma XML.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-155">The <see cref="T:System.Type" /> to transform into an XML schema.</span></span></param>
        <summary><span data-ttu-id="1dd0f-156">Transforme le type [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] spécifié en un schéma XSD.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-156">Transforms the specified [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] type into an XML schema definition language (XSD) schema.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dd0f-157">Appelez la <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> pour déterminer si le type peut être exporté.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-157">Call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> to determine whether the type can be exported.</span></span> <span data-ttu-id="1dd0f-158">Après avoir appelé la méthode <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A>, le schéma peut être récupéré via la propriété <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A>.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-158">After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, the schema can be retrieved through the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dd0f-159">L'argument <paramref name="type" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-159">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRootElementName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName GetRootElementName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName GetRootElementName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ GetRootElementName(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetRootElementName : Type -&gt; System.Xml.XmlQualifiedName" Usage="xsdDataContractExporter.GetRootElementName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1dd0f-160"><see cref="T:System.Type" /> à interroger.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-160">The <see cref="T:System.Type" /> to query.</span></span></param>
        <summary><span data-ttu-id="1dd0f-161">Retourne le nom de niveau supérieur et l'espace de noms pour le <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-161">Returns the top-level name and namespace for the <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="1dd0f-162"><see cref="T:System.Xml.XmlQualifiedName" /> qui représente le nom de niveau supérieur et l'espace de noms pour ce <see cref="T:System.Type" />, qui est écrit dans le flux de données lors de l'écriture de cet objet.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-162">The <see cref="T:System.Xml.XmlQualifiedName" /> that represents the top-level name and namespace for this <see cref="T:System.Type" />, which is written to the stream when writing this object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dd0f-163">L'argument <paramref name="type" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-163">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaType">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaType GetSchemaType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaType GetSchemaType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaType ^ GetSchemaType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSchemaType : Type -&gt; System.Xml.Schema.XmlSchemaType" Usage="xsdDataContractExporter.GetSchemaType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1dd0f-164">Type pour lequel retourner un schéma.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-164">The type to return a schema for.</span></span></param>
        <summary><span data-ttu-id="1dd0f-165">Retourne un type de schéma XML pour le type spécifié.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-165">Returns the XML schema type for the specified type.</span></span></summary>
        <returns><span data-ttu-id="1dd0f-166"><see cref="T:System.Xml.Schema.XmlSchemaType" /> qui contient le schéma XML.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-166">An <see cref="T:System.Xml.Schema.XmlSchemaType" /> that contains the XML schema.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dd0f-167">Le but principal de cette méthode est d'autoriser des types anonymes dans le schéma XML à représenter.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-167">The main purpose of this method is to allow anonymous types in XML schema to be represented.</span></span> <span data-ttu-id="1dd0f-168">Étant donné que les types anonymes n'ont ni nom de contrat, ni espace de noms, ils ne peuvent pas être recherchés à l'aide du <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-168">Because anonymous types do not have a contract name and namespace, they cannot be looked up using the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>.</span></span> <span data-ttu-id="1dd0f-169">Cette méthode retourne la définition <xref:System.Xml.Schema.XmlSchemaType> pour de tels types.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-169">This method returns the <xref:System.Xml.Schema.XmlSchemaType> definition for such types.</span></span> <span data-ttu-id="1dd0f-170">Pour les types pour lesquels la méthode <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> retourne un nom valide, cette méthode retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-170">The types for which the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> method returns a valid name, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dd0f-171">L'argument <paramref name="type" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-171">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTypeName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName GetSchemaTypeName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName GetSchemaTypeName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ GetSchemaTypeName(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSchemaTypeName : Type -&gt; System.Xml.XmlQualifiedName" Usage="xsdDataContractExporter.GetSchemaTypeName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1dd0f-172"><see cref="T:System.Type" /> qui a été exporté.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-172">The <see cref="T:System.Type" /> that was exported.</span></span></param>
        <summary><span data-ttu-id="1dd0f-173">Retourne le nom et l'espace de noms de contrat pour le <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-173">Returns the contract name and contract namespace for the <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="1dd0f-174">Un <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le nom de contrat du type et son espace de noms.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-174">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the contract name of the type and its namespace.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dd0f-175">L'argument <paramref name="type" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-175">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ExportOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ExportOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractExporter.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As ExportOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ExportOptions ^ Options { System::Runtime::Serialization::ExportOptions ^ get(); void set(System::Runtime::Serialization::ExportOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Runtime.Serialization.ExportOptions with get, set" Usage="System.Runtime.Serialization.XsdDataContractExporter.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ExportOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1dd0f-176">Obtient ou définit un <see cref="T:System.Runtime.Serialization.ExportOptions" /> qui contient des options qui peuvent être définies pour l'opération d'exportation.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-176">Gets or sets an <see cref="T:System.Runtime.Serialization.ExportOptions" /> that contains options that can be set for the export operation.</span></span></summary>
        <value><span data-ttu-id="1dd0f-177"><see cref="T:System.Runtime.Serialization.ExportOptions" /> qui contient des options utilisées pour personnaliser l'exportation des types vers les schémas.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-177">An <see cref="T:System.Runtime.Serialization.ExportOptions" /> that contains options used to customize how types are exported to schemas.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet" Usage="System.Runtime.Serialization.XsdDataContractExporter.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1dd0f-178">Obtient la collection de schémas XML exportés.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-178">Gets the collection of exported XML schemas.</span></span></summary>
        <value><span data-ttu-id="1dd0f-179">Un <see cref="T:System.Xml.Schema.XmlSchemaSet" /> qui contient les schémas transformés à partir de l'ensemble de types CLR après avoir appelé la méthode <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" />.</span><span class="sxs-lookup"><span data-stu-id="1dd0f-179">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas transformed from the set of common language runtime (CLR) types after calling the <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /> method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>