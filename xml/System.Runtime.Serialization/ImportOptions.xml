<Type Name="ImportOptions" FullName="System.Runtime.Serialization.ImportOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ee23b78487d370fea6599ff1b63a80236f44a2b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30488693" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImportOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ImportOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente les options qui peuvent être définies sur un <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Runtime.Serialization.XsdDataContractImporter> est utilisé pour générer le code à partir du schéma XML à l'aide du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] CodeDOM. Pour générer un schéma XML à partir d'un assembly, utilisez le <xref:System.Runtime.Serialization.XsdDataContractExporter>.  
  
 Pour plus d’informations sur l’importation et exportation de schémas, consultez [importation de schéma et d’exportation](~/docs/framework/wcf/feature-details/schema-import-and-export.md) et [l’importation de schéma pour générer des Classes](~/docs/framework/wcf/feature-details/importing-schema-to-generate-classes.md).  
  
   
  
## Examples  
 L'exemple suivant crée une instance de la classe <xref:System.Runtime.Serialization.ImportOptions> et définit les propriétés <xref:System.Runtime.Serialization.ImportOptions.EnableDataBinding%2A> et <xref:System.Runtime.Serialization.ImportOptions.GenerateInternal%2A>.  
  
 [!code-csharp[XsdDataContractImporter#3](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#3)]
 [!code-vb[XsdDataContractImporter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractExporter" />
    <altmember cref="T:System.Runtime.Serialization.ExportOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ImportOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.ImportOptions" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeProvider" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.CodeProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); void set(System::CodeDom::Compiler::CodeDomProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une instance <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> qui fournit le moyen de vérifier si des options particulières pour un langage cible sont prises en charge.</summary>
        <value>
          <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> qui fournit le moyen de vérifier si des options particulières pour un langage cible sont prises en charge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour prendre en charge une meilleure génération de code pour des langages différents, des informations à propos des options prises en charge par le langage cible doivent être passées à l'importateur de schéma. Pour ce faire, passez une instance de la classe <xref:System.CodeDom.Compiler.CodeDomProvider>, qui fournit une méthode <xref:System.CodeDom.Compiler.CodeDomProvider.Supports%2A> pour vérifier s'il prend en charge un <xref:System.CodeDom.Compiler.CodeGeneratorOptions>particulier.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractSurrogate">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.DataContractSurrogate" />
      <MemberSignature Language="VB.NET" Value="Public Property DataContractSurrogate As IDataContractSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::IDataContractSurrogate ^ DataContractSurrogate { System::Runtime::Serialization::IDataContractSurrogate ^ get(); void set(System::Runtime::Serialization::IDataContractSurrogate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.IDataContractSurrogate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un substitut de contrat de données qui peut être utilisé pour modifier le code généré pendant une opération d'importation.</summary>
        <value>Implémentation de l'interface <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> qui gère l'importation du schéma.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDataBinding">
      <MemberSignature Language="C#" Value="public bool EnableDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.EnableDataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDataBinding { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si les types dans du code généré doivent implémenter l'interface <see cref="T:System.ComponentModel.INotifyPropertyChanged" />.</summary>
        <value>
          <see langword="true" /> si le code généré doit implémenter l'interface <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette interface est utilisée par les composants [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], tels que Windows Forms ou Windows Presentation Foundation, pour capturer des modifications de données pour les mises à jour d'interface utilisateur. Les propriétés générées déclenchent un événement de modification de propriété lorsque la valeur change, permettant aux raccordements d'interface utilisateur d'agir en conséquence.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateInternal">
      <MemberSignature Language="C#" Value="public bool GenerateInternal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateInternal" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.GenerateInternal" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateInternal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateInternal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si le code généré sera marqué comme étant interne ou public.</summary>
        <value>
          <see langword="true" /> si le code sera marqué comme étant <see langword="internal" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSerializable">
      <MemberSignature Language="C#" Value="public bool GenerateSerializable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateSerializable" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.GenerateSerializable" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateSerializable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateSerializable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si les classes de contrats de données générées seront marquées avec l'attribut <see cref="T:System.SerializableAttribute" /> en plus de l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</summary>
        <value>
          <see langword="true" /> pour générer des classes avec le <see cref="T:System.SerializableAttribute" /> appliqué ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportXmlType">
      <MemberSignature Language="C#" Value="public bool ImportXmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImportXmlType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ImportXmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportXmlType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ImportXmlType { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui détermine si tous les types de schéma XML, même ceux qui ne se conforment pas à un schéma de contrat de données, seront importés.</summary>
        <value>
          <see langword="true" /> pour importer tous les types de schéma ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalement, l'importation d'un type qui ne se conforme pas à un schéma de contrat de données valide échouera. Toutefois, lorsque cette propriété a la valeur `true`, tous ces types seront importés en tant que types qui implémentent l'interface <xref:System.Xml.Serialization.IXmlSerializable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Namespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespaces As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Namespaces { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un dictionnaire qui contient le mappage des espaces de noms du contrat de données aux espaces de noms CLR qui doivent être utilisés pour générer le code pendant une opération d'importation.</summary>
        <value>
          <see cref="T:System.Collections.Generic.IDictionary`2" /> qui contient les mappages d'espace de noms.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedCollectionTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Type&gt; ReferencedCollectionTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; ReferencedCollectionTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedCollectionTypes As ICollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Type ^&gt; ^ ReferencedCollectionTypes { System::Collections::Generic::ICollection&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de types qui représente des collections de contrats de données qui doivent être référencées lors de la génération de code pour des collections, telles que des listes ou des dictionnaires d’éléments.</summary>
        <value>
          <see cref="T:System.Collections.Generic.ICollection`1" /> qui contient les types de collections référencées.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, un tableau sera généré lors de l'importation d'un schéma de collection (à moins que le schéma possède une annotation spéciale qui mentionne un type différent). Toutefois, s'il existe un type correspondant dans la collection <xref:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes%2A>, ce type sera utilisé. Par exemple, lors de l'importation du schéma qui contient une liste d'entiers, un tableau d'entiers sera généré normalement. Toutefois, si la collection contient le <xref:System.Collections.Generic.LinkedList%601> de type entier, ce type sera utilisé à la place du tableau.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Type&gt; ReferencedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; ReferencedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ReferencedTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedTypes As ICollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Type ^&gt; ^ ReferencedTypes { System::Collections::Generic::ICollection&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un <see cref="T:System.Collections.Generic.IList`1" /> contenant les types référencés dans le code généré.</summary>
        <value>
          <see cref="T:System.Collections.Generic.IList`1" /> qui contient les types référencés.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>