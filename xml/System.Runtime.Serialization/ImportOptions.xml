<Type Name="ImportOptions" FullName="System.Runtime.Serialization.ImportOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ee23b78487d370fea6599ff1b63a80236f44a2b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImportOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ImportOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="51558-101">Représente les options qui peuvent être définies sur un <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="51558-101">Represents the options that can be set on an <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51558-102">Le <xref:System.Runtime.Serialization.XsdDataContractImporter> est utilisé pour générer le code à partir du schéma XML à l'aide du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="51558-102">The <xref:System.Runtime.Serialization.XsdDataContractImporter> is used to generate code from XML schema using the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] CodeDOM.</span></span> <span data-ttu-id="51558-103">Pour générer un schéma XML à partir d'un assembly, utilisez le <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span><span class="sxs-lookup"><span data-stu-id="51558-103">To generate an XML schema from an assembly, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span></span>  
  
 <span data-ttu-id="51558-104">Pour plus d’informations sur l’importation et exportation de schémas, consultez [importation de schéma et d’exportation](~/docs/framework/wcf/feature-details/schema-import-and-export.md) et [l’importation de schéma pour générer des Classes](~/docs/framework/wcf/feature-details/importing-schema-to-generate-classes.md).</span><span class="sxs-lookup"><span data-stu-id="51558-104">For more information about importing and exporting schemas, see [Schema Import and Export](~/docs/framework/wcf/feature-details/schema-import-and-export.md) and [Importing Schema to Generate Classes](~/docs/framework/wcf/feature-details/importing-schema-to-generate-classes.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51558-105">L'exemple suivant crée une instance de la classe <xref:System.Runtime.Serialization.ImportOptions> et définit les propriétés <xref:System.Runtime.Serialization.ImportOptions.EnableDataBinding%2A> et <xref:System.Runtime.Serialization.ImportOptions.GenerateInternal%2A>.</span><span class="sxs-lookup"><span data-stu-id="51558-105">The following example creates an instance of the <xref:System.Runtime.Serialization.ImportOptions> class and sets the <xref:System.Runtime.Serialization.ImportOptions.EnableDataBinding%2A> and <xref:System.Runtime.Serialization.ImportOptions.GenerateInternal%2A> properties.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#3](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#3)]
 [!code-vb[XsdDataContractImporter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractExporter" />
    <altmember cref="T:System.Runtime.Serialization.ExportOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ImportOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51558-106">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.ImportOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-106">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.ImportOptions" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeProvider" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.CodeProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); void set(System::CodeDom::Compiler::CodeDomProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51558-107">Obtient ou définit une instance <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> qui fournit le moyen de vérifier si des options particulières pour un langage cible sont prises en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-107">Gets or sets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance that provides the means to check whether particular options for a target language are supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51558-108">
            <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> qui fournit le moyen de vérifier si des options particulières pour un langage cible sont prises en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-108">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that provides the means to check whether particular options for a target language are supported.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51558-109">Pour prendre en charge une meilleure génération de code pour des langages différents, des informations à propos des options prises en charge par le langage cible doivent être passées à l'importateur de schéma.</span><span class="sxs-lookup"><span data-stu-id="51558-109">To support better code generation for different languages, information about what is supported by the target language needs to be passed to the schema importer.</span></span> <span data-ttu-id="51558-110">Pour ce faire, passez une instance de la classe <xref:System.CodeDom.Compiler.CodeDomProvider>, qui fournit une méthode <xref:System.CodeDom.Compiler.CodeDomProvider.Supports%2A> pour vérifier s'il prend en charge un <xref:System.CodeDom.Compiler.CodeGeneratorOptions>particulier.</span><span class="sxs-lookup"><span data-stu-id="51558-110">This is done by passing an instance of the <xref:System.CodeDom.Compiler.CodeDomProvider> class, which provides a <xref:System.CodeDom.Compiler.CodeDomProvider.Supports%2A> method to check whether it supports particular <xref:System.CodeDom.Compiler.CodeGeneratorOptions>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractSurrogate">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.DataContractSurrogate" />
      <MemberSignature Language="VB.NET" Value="Public Property DataContractSurrogate As IDataContractSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::IDataContractSurrogate ^ DataContractSurrogate { System::Runtime::Serialization::IDataContractSurrogate ^ get(); void set(System::Runtime::Serialization::IDataContractSurrogate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.IDataContractSurrogate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51558-111">Obtient ou définit un substitut de contrat de données qui peut être utilisé pour modifier le code généré pendant une opération d'importation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-111">Gets or sets a data contract surrogate that can be used to modify the code generated during an import operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51558-112">Implémentation de l'interface <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> qui gère l'importation du schéma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-112">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> interface that handles schema import.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDataBinding">
      <MemberSignature Language="C#" Value="public bool EnableDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.EnableDataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDataBinding { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51558-113">Obtient ou définit une valeur qui spécifie si les types dans du code généré doivent implémenter l'interface <see cref="T:System.ComponentModel.INotifyPropertyChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-113">Gets or sets a value that specifies whether types in generated code should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51558-114">
            <see langword="true" /> si le code généré doit implémenter l'interface <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-114">
              <see langword="true" /> if the generated code should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="51558-115">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-115">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51558-116">Cette interface est utilisée par les composants [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], tels que Windows Forms ou Windows Presentation Foundation, pour capturer des modifications de données pour les mises à jour d'interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="51558-116">This interface is used by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] components, such as Windows Forms or Windows Presentation Foundation, to capture data changes for user interface updates.</span></span> <span data-ttu-id="51558-117">Les propriétés générées déclenchent un événement de modification de propriété lorsque la valeur change, permettant aux raccordements d'interface utilisateur d'agir en conséquence.</span><span class="sxs-lookup"><span data-stu-id="51558-117">The generated properties raise a property-changed event when the value changes, allowing UI hooks to act accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateInternal">
      <MemberSignature Language="C#" Value="public bool GenerateInternal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateInternal" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.GenerateInternal" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateInternal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateInternal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51558-118">Obtient ou définit une valeur qui spécifie si le code généré sera marqué comme étant interne ou public.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-118">Gets or sets a value that specifies whether generated code will be marked internal or public.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51558-119">
            <see langword="true" /> si le code sera marqué comme étant <see langword="internal" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-119">
              <see langword="true" /> if the code will be marked <see langword="internal" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="51558-120">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-120">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSerializable">
      <MemberSignature Language="C#" Value="public bool GenerateSerializable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateSerializable" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.GenerateSerializable" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateSerializable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateSerializable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51558-121">Obtient ou définit une valeur qui spécifie si les classes de contrats de données générées seront marquées avec l'attribut <see cref="T:System.SerializableAttribute" /> en plus de l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-121">Gets or sets a value that specifies whether generated data contract classes will be marked with the <see cref="T:System.SerializableAttribute" /> attribute in addition to the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51558-122">
            <see langword="true" /> pour générer des classes avec le <see cref="T:System.SerializableAttribute" /> appliqué ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-122">
              <see langword="true" /> to generate classes with the <see cref="T:System.SerializableAttribute" /> applied; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="51558-123">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-123">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportXmlType">
      <MemberSignature Language="C#" Value="public bool ImportXmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImportXmlType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ImportXmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportXmlType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ImportXmlType { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51558-124">Obtient ou définit une valeur qui détermine si tous les types de schéma XML, même ceux qui ne se conforment pas à un schéma de contrat de données, seront importés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-124">Gets or sets a value that determines whether all XML schema types, even those that do not conform to a data contract schema, will be imported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51558-125">
            <see langword="true" /> pour importer tous les types de schéma ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-125">
              <see langword="true" /> to import all schema types; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="51558-126">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-126">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51558-127">Normalement, l'importation d'un type qui ne se conforme pas à un schéma de contrat de données valide échouera.</span><span class="sxs-lookup"><span data-stu-id="51558-127">Normally, importing a type that does not conform to a valid data contract schema will fail.</span></span> <span data-ttu-id="51558-128">Toutefois, lorsque cette propriété a la valeur `true`, tous ces types seront importés en tant que types qui implémentent l'interface <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="51558-128">However, when this property is set to `true`, all such types will be imported as types that implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Namespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespaces As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Namespaces { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51558-129">Obtient un dictionnaire qui contient le mappage des espaces de noms du contrat de données aux espaces de noms CLR qui doivent être utilisés pour générer le code pendant une opération d'importation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-129">Gets a dictionary that contains the mapping of data contract namespaces to the CLR namespaces that must be used to generate code during an import operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51558-130">
            <see cref="T:System.Collections.Generic.IDictionary`2" /> qui contient les mappages d'espace de noms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-130">A <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the namespace mappings.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedCollectionTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Type&gt; ReferencedCollectionTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; ReferencedCollectionTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedCollectionTypes As ICollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Type ^&gt; ^ ReferencedCollectionTypes { System::Collections::Generic::ICollection&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51558-131">Obtient une collection de types qui représente des collections de contrats de données qui doivent être référencées lors de la génération de code pour des collections, telles que des listes ou des dictionnaires d’éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-131">Gets a collection of types that represents data contract collections that should be referenced when generating code for collections, such as lists or dictionaries of items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51558-132">
            <see cref="T:System.Collections.Generic.ICollection`1" /> qui contient les types de collections référencées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-132">An <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the referenced collection types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51558-133">Par défaut, un tableau sera généré lors de l'importation d'un schéma de collection (à moins que le schéma possède une annotation spéciale qui mentionne un type différent).</span><span class="sxs-lookup"><span data-stu-id="51558-133">By default, an array will be generated when importing a collection schema (unless the schema has a special annotation that mentions a different type).</span></span> <span data-ttu-id="51558-134">Toutefois, s'il existe un type correspondant dans la collection <xref:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes%2A>, ce type sera utilisé.</span><span class="sxs-lookup"><span data-stu-id="51558-134">However, if there is a matching type in the <xref:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes%2A> collection, that type will be used.</span></span> <span data-ttu-id="51558-135">Par exemple, lors de l'importation du schéma qui contient une liste d'entiers, un tableau d'entiers sera généré normalement.</span><span class="sxs-lookup"><span data-stu-id="51558-135">For example, when importing schema that contains a list of integers, an array of integers will normally be generated.</span></span> <span data-ttu-id="51558-136">Toutefois, si la collection contient le <xref:System.Collections.Generic.LinkedList%601> de type entier, ce type sera utilisé à la place du tableau.</span><span class="sxs-lookup"><span data-stu-id="51558-136">However, if the collection contains the <xref:System.Collections.Generic.LinkedList%601> of type integer, that type will be used instead of the array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Type&gt; ReferencedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; ReferencedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ReferencedTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedTypes As ICollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Type ^&gt; ^ ReferencedTypes { System::Collections::Generic::ICollection&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51558-137">Obtient un <see cref="T:System.Collections.Generic.IList`1" /> contenant les types référencés dans le code généré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-137">Gets a <see cref="T:System.Collections.Generic.IList`1" /> containing types referenced in generated code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51558-138">
            <see cref="T:System.Collections.Generic.IList`1" /> qui contient les types référencés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51558-138">A <see cref="T:System.Collections.Generic.IList`1" /> that contains the referenced types.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>