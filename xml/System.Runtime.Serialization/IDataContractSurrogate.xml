<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDataContractSurrogate.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53fa2320cba07ce168e131e6d44f89763ab9487b6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3fa2320cba07ce168e131e6d44f89763ab9487b6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>Provides the methods needed to substitute one type for another by the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> during serialization, deserialization, and export and import of XML schema documents (XSD).</source>
          <target state="translated">Fournit les méthodes nécessaires pour substituer un type à un autre par le <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> pendant la sérialisation, la désérialisation, l'exportation et l'importation de documents de schéma XML (XSD).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> when using the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> if you need to do one of the following: substitute one type or object for another, or to dynamically generate schema variations.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> lors de l'utilisation du <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> si vous devez effectuer l'une des opérations suivantes : la substitution d'un type ou d'un objet à un autre ou la génération dynamique des variations de schéma.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>For a sample application, see <bpt id="p1">[</bpt>DataContract Surrogate<ept id="p1">](~/docs/framework/wcf/samples/datacontract-surrogate.md)</ept>.</source>
          <target state="translated">Pour un exemple d’application, consultez <bpt id="p1">[</bpt>DataContract substitut<ept id="p1">](~/docs/framework/wcf/samples/datacontract-surrogate.md)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>For more information about data contracts, see <bpt id="p1">[</bpt>Using Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les contrats de données, consultez <bpt id="p1">[</bpt>à l’aide de contrats de données<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>At run time, you can find the specific <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> for any operation in a service by using the <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> to find the <ph id="ph3">&lt;xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior&gt;</ph> instance.</source>
          <target state="translated">Au moment de l'exécution, vous pouvez rechercher le <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> spécifique pour toute opération dans un service en utilisant le <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> pour rechercher l'instance <ph id="ph3">&lt;xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>For more information about implementing the interface to create a surrogate, see <bpt id="p1">[</bpt>Data Contract Surrogates<ept id="p1">](~/docs/framework/wcf/extending/data-contract-surrogates.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’implémentation de l’interface pour créer un caractère de substitution, consultez <bpt id="p1">[</bpt>substituts de contrat de données<ept id="p1">](~/docs/framework/wcf/extending/data-contract-surrogates.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> to affect the import and export of XML schemas when you are using the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> and <ph id="ph3">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> classes.</source>
          <target state="translated">Vous pouvez également utiliser le <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> pour affecter l'importation et l'exportation de schémas XML lorsque vous utilisez les classes <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> et <ph id="ph3">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>You can do so by assigning the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> to the <ph id="ph2">&lt;xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Runtime.Serialization.ExportOptions&gt;</ph> class, or to the <ph id="ph4">&lt;xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Runtime.Serialization.ImportOptions&gt;</ph> class.</source>
          <target state="translated">Pour ce faire, assignez le <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> à la propriété <ph id="ph2">&lt;xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A&gt;</ph> de la classe <ph id="ph3">&lt;xref:System.Runtime.Serialization.ExportOptions&gt;</ph> ou à la propriété <ph id="ph4">&lt;xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A&gt;</ph> de la classe <ph id="ph5">&lt;xref:System.Runtime.Serialization.ImportOptions&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>For more information, see <bpt id="p1">[</bpt>Schema Import and Export<ept id="p1">](~/docs/framework/wcf/feature-details/schema-import-and-export.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>importation de schéma et d’exportation<ept id="p1">](~/docs/framework/wcf/feature-details/schema-import-and-export.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>The following example shows an implementation of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> interface.</source>
          <target state="translated">L'exemple suivant illustre une implémentation de l'interface <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>The code substitutes the serialization of the <ph id="ph1">`Person`</ph> type for a <ph id="ph2">`PersonSurrogated`</ph> class.</source>
          <target state="translated">Le code substitue la sérialisation du type <ph id="ph1">`Person`</ph> à une classe <ph id="ph2">`PersonSurrogated`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>During schema export operations, inserts annotations into the schema for non-null return values.</source>
          <target state="translated">Lors des opérations d'exportation du schéma, insère des annotations dans le schéma pour les valeurs de retour non null.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> that describes the member.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> qui décrit le membre.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)">
          <source>During schema export operations, inserts annotations into the schema for non-null return values.</source>
          <target state="translated">Lors des opérations d'exportation du schéma, insère des annotations dans le schéma pour les valeurs de retour non null.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)">
          <source>An object that represents the annotation to be inserted into the XML schema definition.</source>
          <target state="translated">Objet qui représente l'annotation à insérer dans la définition du schéma XML.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)">
          <source>The CLR type to be replaced.</source>
          <target state="translated">Type CLR à remplacer.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)">
          <source>The data contract type to be annotated.</source>
          <target state="translated">Type de contrat de données à annoter.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)">
          <source>During schema export operations, inserts annotations into the schema for non-null return values.</source>
          <target state="translated">Lors des opérations d'exportation du schéma, insère des annotations dans le schéma pour les valeurs de retour non null.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)">
          <source>An object that represents the annotation to be inserted into the XML schema definition.</source>
          <target state="translated">Objet qui représente l'annotation à insérer dans la définition du schéma XML.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)">
          <source>The CLR type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to substitute.</source>
          <target state="translated">Type CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> à substituer.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)">
          <source>During serialization, deserialization, and schema import and export, returns a data contract type that substitutes the specified type.</source>
          <target state="translated">Pendant la sérialisation, la désérialisation et l’importation et exportation de schémas, retourne un type de contrat de données qui substitue le type spécifié.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to substitute for the <ph id="ph2">&lt;paramref name="type" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> à substituer pour la valeur <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)">
          <source>This type must be serializable by the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated">Ce type doit être sérialisable par le <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)">
          <source>For example, it must be marked with the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute or other mechanisms that the serializer recognizes.</source>
          <target state="translated">Par exemple, il doit être marqué avec l'attribut <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> ou d'autres mécanismes que le sérialiseur reconnaît.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)">
          <source>The following example shows an implementation of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType%2A&gt;</ph> method.</source>
          <target state="translated">L'exemple suivant illustre une implémentation de la méthode <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>The deserialized object to be substituted.</source>
          <target state="translated">Objet désérialisé à substituer.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that the substituted object should be assigned to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> auquel l'objet substitué doit être assigné.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>During deserialization, returns an object that is a substitute for the specified object.</source>
          <target state="translated">Pendant la désérialisation, retourne un objet qui est un substitut pour l’objet spécifié.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>The substituted deserialized object.</source>
          <target state="translated">Objet désérialisé substitué.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>This object must be of a type that is serializable by the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated">Cet objet doit être d'un type qui est sérialisable par le <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>For example, it must be marked with the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute or other mechanisms that the serializer recognizes.</source>
          <target state="translated">Par exemple, il doit être marqué avec l'attribut <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> ou d'autres mécanismes que le sérialiseur reconnaît.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>In a simple implementation, use an if…then…else control structure to test whether the <ph id="ph1">`obj`</ph> value is of the surrogated type.</source>
          <target state="translated">Dans une implémentation simple, utilisez une structure de contrôle if…then…else pour tester si la valeur <ph id="ph1">`obj`</ph> est du type substitué.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>If so, transform it as necessary and return the substituted object.</source>
          <target state="translated">Si tel est le cas, transformez-le en conséquence et retournez l'objet substitué.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>The substituted object can be a new instance or the same <ph id="ph1">`obj`</ph> instance.</source>
          <target state="translated">L'objet substitué peut être une nouvelle instance ou la même instance <ph id="ph1">`obj`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>The following example shows an implementation of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject%2A&gt;</ph> method.</source>
          <target state="translated">L'exemple suivant illustre une implémentation de la méthode <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> to add known types to.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> auquel ajouter des types connus.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})">
          <source>Sets the collection of known types to use for serialization and deserialization of the custom data objects.</source>
          <target state="translated">Définit la collection de types connus à utiliser pour la sérialisation et la désérialisation des objets de données personnalisés.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})">
          <source>This method is required during schema export or schema import only if annotations are inserted into the schema using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode est requise pendant l'exportation ou l'importation de schéma uniquement si les annotations sont insérées dans le schéma à l'aide de la méthode <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>The object to substitute.</source>
          <target state="translated">Objet à substituer.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that the substituted object should be assigned to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> auquel l'objet substitué doit être assigné.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>During serialization, returns an object that substitutes the specified object.</source>
          <target state="translated">Pendant la sérialisation, retourne un objet qui substitue l'objet spécifié.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>The substituted object that will be serialized.</source>
          <target state="translated">Objet substitué qui sera sérialisé.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>The object must be serializable by the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated">L'objet doit être sérialisable par le <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>For example, it must be marked with the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute or other mechanisms that the serializer recognizes.</source>
          <target state="translated">Par exemple, il doit être marqué avec l'attribut <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> ou d'autres mécanismes que le sérialiseur reconnaît.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>This method must not return <ph id="ph1">`null`</ph> because on deserialization the data will be cast to type <ph id="ph2">&lt;xref:System.Object&gt;</ph> and an <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
          <target state="translated">Cette méthode ne doit pas retourner <ph id="ph1">`null`</ph> , car lors de la désérialisation, les données seront converties en type <ph id="ph2">&lt;xref:System.Object&gt;</ph> et un <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>The following example shows an implementation of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize%2A&gt;</ph> method.</source>
          <target state="translated">L'exemple suivant illustre une implémentation de la méthode <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source>The name of the type in schema.</source>
          <target state="translated">Nom du type dans le schéma.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source>The namespace of the type in schema.</source>
          <target state="translated">Espace de noms du type dans le schéma.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source>The object that represents the annotation inserted into the XML schema definition, which is data that can be used for finding the referenced type.</source>
          <target state="translated">L'objet qui représente l'annotation insérée dans la définition de schéma XML, qui correspond à des données qui peuvent être utilisées pour rechercher le type référencé.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source>During schema import, returns the type referenced by the schema.</source>
          <target state="translated">Pendant l'importation de schéma, retourne le type référencé par le schéma.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to use for the referenced type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> à utiliser pour le type référencé.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source><ph id="ph1">`Null`</ph> should be returned if a CLR type does not exist for representing the schema type.</source>
          <target state="translated"><ph id="ph1">`Null`</ph> doit être retourné si un type CLR n'existe pas pour représenter le type de schéma.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source>This will cause a new type to be generated during schema import.</source>
          <target state="translated">Cela provoquera la génération d'un nouveau type pendant l'importation de schéma.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source>The following example shows an implementation of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport%2A&gt;</ph> method.</source>
          <target state="translated">L'exemple suivant illustre une implémentation de la méthode <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph> to process that represents the type declaration generated during schema import.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph> à traiter et qui représente la déclaration de type générée pendant l'importation de schéma.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> that contains the other code generated during schema import.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> qui contient l'autre code généré pendant l'importation de schéma.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
          <source>Processes the type that has been generated from the imported schema.</source>
          <target state="translated">Traite le type qui a été généré à partir du schéma importé.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph> that contains the processed type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph> qui contient le type traité.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
          <source>The input <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph> or other information in the <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> can be modified by the user in this method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph> d'entrée ou d'autres informations dans le <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> peuvent être modifiés par l'utilisateur dans cette méthode.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
          <source>If <ph id="ph1">`null`</ph> is returned, it will cause the type to not be generated.</source>
          <target state="translated">Si <ph id="ph1">`null`</ph> est retourné, il empêchera la génération du type.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
          <source>If a new <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph> is returned, it will replace the original type generated.</source>
          <target state="translated">Si un nouveau <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph> est retourné, il remplacera le type d'origine généré.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>