<Type Name="IDataContractSurrogate" FullName="System.Runtime.Serialization.IDataContractSurrogate">
  <TypeSignature Language="C#" Value="public interface IDataContractSurrogate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataContractSurrogate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.IDataContractSurrogate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataContractSurrogate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataContractSurrogate" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5d748-101">Fournit les méthodes nécessaires pour substituer un type à un autre par le <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> pendant la sérialisation, la désérialisation, l'exportation et l'importation de documents de schéma XML (XSD).</span><span class="sxs-lookup"><span data-stu-id="5d748-101">Provides the methods needed to substitute one type for another by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> during serialization, deserialization, and export and import of XML schema documents (XSD).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d748-102">Utilisez le <xref:System.Runtime.Serialization.IDataContractSurrogate> lors de l'utilisation du <xref:System.Runtime.Serialization.DataContractSerializer> si vous devez effectuer l'une des opérations suivantes : la substitution d'un type ou d'un objet à un autre ou la génération dynamique des variations de schéma.</span><span class="sxs-lookup"><span data-stu-id="5d748-102">Use the <xref:System.Runtime.Serialization.IDataContractSurrogate> when using the <xref:System.Runtime.Serialization.DataContractSerializer> if you need to do one of the following: substitute one type or object for another, or to dynamically generate schema variations.</span></span> <span data-ttu-id="5d748-103">Pour un exemple d’application, consultez [DataContract substitut](~/docs/framework/wcf/samples/datacontract-surrogate.md).</span><span class="sxs-lookup"><span data-stu-id="5d748-103">For a sample application, see [DataContract Surrogate](~/docs/framework/wcf/samples/datacontract-surrogate.md).</span></span> <span data-ttu-id="5d748-104">Pour plus d’informations sur les contrats de données, consultez [à l’aide de contrats de données](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="5d748-104">For more information about data contracts, see [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span></span>  
  
 <span data-ttu-id="5d748-105">Au moment de l'exécution, vous pouvez rechercher le <xref:System.Runtime.Serialization.DataContractSerializer> spécifique pour toute opération dans un service en utilisant le <xref:System.ServiceModel.Description.OperationDescription> pour rechercher l'instance <xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior>.</span><span class="sxs-lookup"><span data-stu-id="5d748-105">At run time, you can find the specific <xref:System.Runtime.Serialization.DataContractSerializer> for any operation in a service by using the <xref:System.ServiceModel.Description.OperationDescription> to find the <xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior> instance.</span></span> <span data-ttu-id="5d748-106">Pour plus d’informations sur l’implémentation de l’interface pour créer un caractère de substitution, consultez [substituts de contrat de données](~/docs/framework/wcf/extending/data-contract-surrogates.md).</span><span class="sxs-lookup"><span data-stu-id="5d748-106">For more information about implementing the interface to create a surrogate, see [Data Contract Surrogates](~/docs/framework/wcf/extending/data-contract-surrogates.md).</span></span>  
  
 <span data-ttu-id="5d748-107">Vous pouvez également utiliser le <xref:System.Runtime.Serialization.IDataContractSurrogate> pour affecter l'importation et l'exportation de schémas XML lorsque vous utilisez les classes <xref:System.Runtime.Serialization.XsdDataContractExporter> et <xref:System.Runtime.Serialization.XsdDataContractImporter>.</span><span class="sxs-lookup"><span data-stu-id="5d748-107">You can also use the <xref:System.Runtime.Serialization.IDataContractSurrogate> to affect the import and export of XML schemas when you are using the <xref:System.Runtime.Serialization.XsdDataContractExporter> and <xref:System.Runtime.Serialization.XsdDataContractImporter> classes.</span></span> <span data-ttu-id="5d748-108">Pour ce faire, assignez le <xref:System.Runtime.Serialization.IDataContractSurrogate> à la propriété <xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A> de la classe <xref:System.Runtime.Serialization.ExportOptions> ou à la propriété <xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A> de la classe <xref:System.Runtime.Serialization.ImportOptions>.</span><span class="sxs-lookup"><span data-stu-id="5d748-108">You can do so by assigning the <xref:System.Runtime.Serialization.IDataContractSurrogate> to the <xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A> property of the <xref:System.Runtime.Serialization.ExportOptions> class, or to the <xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A> property of the <xref:System.Runtime.Serialization.ImportOptions> class.</span></span>  <span data-ttu-id="5d748-109">Pour plus d’informations, consultez [importation de schéma et d’exportation](~/docs/framework/wcf/feature-details/schema-import-and-export.md).</span><span class="sxs-lookup"><span data-stu-id="5d748-109">For more information, see [Schema Import and Export](~/docs/framework/wcf/feature-details/schema-import-and-export.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d748-110">L'exemple suivant illustre une implémentation de l'interface <xref:System.Runtime.Serialization.IDataContractSurrogate>.</span><span class="sxs-lookup"><span data-stu-id="5d748-110">The following example shows an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate> interface.</span></span> <span data-ttu-id="5d748-111">Le code substitue la sérialisation du type `Person` à une classe `PersonSurrogated`.</span><span class="sxs-lookup"><span data-stu-id="5d748-111">The code substitutes the serialization of the `Person` type for a `PersonSurrogated` class.</span></span>  
  
 [!code-csharp[IDataContractSurrogate#0](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#0)]
 [!code-vb[IDataContractSurrogate#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractExporter" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCustomDataToExport">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d748-112">Lors des opérations d'exportation du schéma, insère des annotations dans le schéma pour les valeurs de retour non null.</span><span class="sxs-lookup"><span data-stu-id="5d748-112">During schema export operations, inserts annotations into the schema for non-null return values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomDataToExport">
      <MemberSignature Language="C#" Value="public object GetCustomDataToExport (System.Reflection.MemberInfo memberInfo, Type dataContractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomDataToExport(class System.Reflection.MemberInfo memberInfo, class System.Type dataContractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomDataToExport(System::Reflection::MemberInfo ^ memberInfo, Type ^ dataContractType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="dataContractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="memberInfo"><span data-ttu-id="5d748-113"><see cref="T:System.Reflection.MemberInfo" /> qui décrit le membre.</span><span class="sxs-lookup"><span data-stu-id="5d748-113">A <see cref="T:System.Reflection.MemberInfo" /> that describes the member.</span></span></param>
        <param name="dataContractType"><span data-ttu-id="5d748-114"><see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="5d748-114">A <see cref="T:System.Type" />.</span></span></param>
        <summary><span data-ttu-id="5d748-115">Lors des opérations d'exportation du schéma, insère des annotations dans le schéma pour les valeurs de retour non null.</span><span class="sxs-lookup"><span data-stu-id="5d748-115">During schema export operations, inserts annotations into the schema for non-null return values.</span></span></summary>
        <returns><span data-ttu-id="5d748-116">Objet qui représente l'annotation à insérer dans la définition du schéma XML.</span><span class="sxs-lookup"><span data-stu-id="5d748-116">An object that represents the annotation to be inserted into the XML schema definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomDataToExport">
      <MemberSignature Language="C#" Value="public object GetCustomDataToExport (Type clrType, Type dataContractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomDataToExport(class System.Type clrType, class System.Type dataContractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomDataToExport (clrType As Type, dataContractType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomDataToExport(Type ^ clrType, Type ^ dataContractType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type" />
        <Parameter Name="dataContractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="clrType"><span data-ttu-id="5d748-117">Type CLR à remplacer.</span><span class="sxs-lookup"><span data-stu-id="5d748-117">The CLR type to be replaced.</span></span></param>
        <param name="dataContractType"><span data-ttu-id="5d748-118">Type de contrat de données à annoter.</span><span class="sxs-lookup"><span data-stu-id="5d748-118">The data contract type to be annotated.</span></span></param>
        <summary><span data-ttu-id="5d748-119">Lors des opérations d'exportation du schéma, insère des annotations dans le schéma pour les valeurs de retour non null.</span><span class="sxs-lookup"><span data-stu-id="5d748-119">During schema export operations, inserts annotations into the schema for non-null return values.</span></span></summary>
        <returns><span data-ttu-id="5d748-120">Objet qui représente l'annotation à insérer dans la définition du schéma XML.</span><span class="sxs-lookup"><span data-stu-id="5d748-120">An object that represents the annotation to be inserted into the XML schema definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataContractType">
      <MemberSignature Language="C#" Value="public Type GetDataContractType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDataContractType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDataContractType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5d748-121">Type CLR <see cref="T:System.Type" /> à substituer.</span><span class="sxs-lookup"><span data-stu-id="5d748-121">The CLR type <see cref="T:System.Type" /> to substitute.</span></span></param>
        <summary><span data-ttu-id="5d748-122">Pendant la sérialisation, la désérialisation et l’importation et exportation de schémas, retourne un type de contrat de données qui substitue le type spécifié.</span><span class="sxs-lookup"><span data-stu-id="5d748-122">During serialization, deserialization, and schema import and export, returns a data contract type that substitutes the specified type.</span></span></summary>
        <returns><span data-ttu-id="5d748-123"><see cref="T:System.Type" /> à substituer pour la valeur <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="5d748-123">The <see cref="T:System.Type" /> to substitute for the <paramref name="type" /> value.</span></span> <span data-ttu-id="5d748-124">Ce type doit être sérialisable par le <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="5d748-124">This type must be serializable by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span></span> <span data-ttu-id="5d748-125">Par exemple, il doit être marqué avec l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> ou d'autres mécanismes que le sérialiseur reconnaît.</span><span class="sxs-lookup"><span data-stu-id="5d748-125">For example, it must be marked with the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute or other mechanisms that the serializer recognizes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d748-126">L'exemple suivant illustre une implémentation de la méthode <xref:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType%2A>.</span><span class="sxs-lookup"><span data-stu-id="5d748-126">The following example shows an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType%2A> method.</span></span>  
  
 [!code-csharp[IDataContractSurrogate#1](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#1)]
 [!code-vb[IDataContractSurrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeserializedObject">
      <MemberSignature Language="C#" Value="public object GetDeserializedObject (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDeserializedObject(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeserializedObject (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDeserializedObject(System::Object ^ obj, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="5d748-127">Objet désérialisé à substituer.</span><span class="sxs-lookup"><span data-stu-id="5d748-127">The deserialized object to be substituted.</span></span></param>
        <param name="targetType"><span data-ttu-id="5d748-128"><see cref="T:System.Type" /> auquel l'objet substitué doit être assigné.</span><span class="sxs-lookup"><span data-stu-id="5d748-128">The <see cref="T:System.Type" /> that the substituted object should be assigned to.</span></span></param>
        <summary><span data-ttu-id="5d748-129">Pendant la désérialisation, retourne un objet qui est un substitut pour l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5d748-129">During deserialization, returns an object that is a substitute for the specified object.</span></span></summary>
        <returns><span data-ttu-id="5d748-130">Objet désérialisé substitué.</span><span class="sxs-lookup"><span data-stu-id="5d748-130">The substituted deserialized object.</span></span> <span data-ttu-id="5d748-131">Cet objet doit être d'un type qui est sérialisable par le <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="5d748-131">This object must be of a type that is serializable by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span></span> <span data-ttu-id="5d748-132">Par exemple, il doit être marqué avec l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> ou d'autres mécanismes que le sérialiseur reconnaît.</span><span class="sxs-lookup"><span data-stu-id="5d748-132">For example, it must be marked with the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute or other mechanisms that the serializer recognizes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d748-133">Dans une implémentation simple, utilisez une structure de contrôle if…then…else pour tester si la valeur `obj` est du type substitué.</span><span class="sxs-lookup"><span data-stu-id="5d748-133">In a simple implementation, use an if…then…else control structure to test whether the `obj` value is of the surrogated type.</span></span> <span data-ttu-id="5d748-134">Si tel est le cas, transformez-le en conséquence et retournez l'objet substitué.</span><span class="sxs-lookup"><span data-stu-id="5d748-134">If so, transform it as necessary and return the substituted object.</span></span> <span data-ttu-id="5d748-135">L'objet substitué peut être une nouvelle instance ou la même instance `obj`.</span><span class="sxs-lookup"><span data-stu-id="5d748-135">The substituted object can be a new instance or the same `obj` instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d748-136">L'exemple suivant illustre une implémentation de la méthode <xref:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject%2A>.</span><span class="sxs-lookup"><span data-stu-id="5d748-136">The following example shows an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject%2A> method.</span></span>  
  
 [!code-csharp[IDataContractSurrogate#3](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#3)]
 [!code-vb[IDataContractSurrogate#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownCustomDataTypes">
      <MemberSignature Language="C#" Value="public void GetKnownCustomDataTypes (System.Collections.ObjectModel.Collection&lt;Type&gt; customDataTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetKnownCustomDataTypes(class System.Collections.ObjectModel.Collection`1&lt;class System.Type&gt; customDataTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetKnownCustomDataTypes (customDataTypes As Collection(Of Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetKnownCustomDataTypes(System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ customDataTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customDataTypes" Type="System.Collections.ObjectModel.Collection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="customDataTypes"><span data-ttu-id="5d748-137">Un <see cref="T:System.Collections.ObjectModel.Collection`1" /> de <see cref="T:System.Type" /> auquel ajouter des types connus.</span><span class="sxs-lookup"><span data-stu-id="5d748-137">A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of <see cref="T:System.Type" /> to add known types to.</span></span></param>
        <summary><span data-ttu-id="5d748-138">Définit la collection de types connus à utiliser pour la sérialisation et la désérialisation des objets de données personnalisés.</span><span class="sxs-lookup"><span data-stu-id="5d748-138">Sets the collection of known types to use for serialization and deserialization of the custom data objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d748-139">Cette méthode est requise pendant l'exportation ou l'importation de schéma uniquement si les annotations sont insérées dans le schéma à l'aide de la méthode <xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A>.</span><span class="sxs-lookup"><span data-stu-id="5d748-139">This method is required during schema export or schema import only if annotations are inserted into the schema using the <xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectToSerialize">
      <MemberSignature Language="C#" Value="public object GetObjectToSerialize (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObjectToSerialize(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectToSerialize (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetObjectToSerialize(System::Object ^ obj, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="5d748-140">Objet à substituer.</span><span class="sxs-lookup"><span data-stu-id="5d748-140">The object to substitute.</span></span></param>
        <param name="targetType"><span data-ttu-id="5d748-141"><see cref="T:System.Type" /> auquel l'objet substitué doit être assigné.</span><span class="sxs-lookup"><span data-stu-id="5d748-141">The <see cref="T:System.Type" /> that the substituted object should be assigned to.</span></span></param>
        <summary><span data-ttu-id="5d748-142">Pendant la sérialisation, retourne un objet qui substitue l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5d748-142">During serialization, returns an object that substitutes the specified object.</span></span></summary>
        <returns><span data-ttu-id="5d748-143">Objet substitué qui sera sérialisé.</span><span class="sxs-lookup"><span data-stu-id="5d748-143">The substituted object that will be serialized.</span></span> <span data-ttu-id="5d748-144">L'objet doit être sérialisable par le <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="5d748-144">The object must be serializable by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span></span> <span data-ttu-id="5d748-145">Par exemple, il doit être marqué avec l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> ou d'autres mécanismes que le sérialiseur reconnaît.</span><span class="sxs-lookup"><span data-stu-id="5d748-145">For example, it must be marked with the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute or other mechanisms that the serializer recognizes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d748-146">Cette méthode ne doit pas retourner `null` , car lors de la désérialisation, les données seront converties en type <xref:System.Object> et un <xref:System.InvalidCastException> est levée.</span><span class="sxs-lookup"><span data-stu-id="5d748-146">This method must not return `null` because on deserialization the data will be cast to type <xref:System.Object> and an <xref:System.InvalidCastException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d748-147">L'exemple suivant illustre une implémentation de la méthode <xref:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize%2A>.</span><span class="sxs-lookup"><span data-stu-id="5d748-147">The following example shows an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize%2A> method.</span></span>  
  
 [!code-csharp[IDataContractSurrogate#2](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#2)]
 [!code-vb[IDataContractSurrogate#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedTypeOnImport">
      <MemberSignature Language="C#" Value="public Type GetReferencedTypeOnImport (string typeName, string typeNamespace, object customData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReferencedTypeOnImport(string typeName, string typeNamespace, object customData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReferencedTypeOnImport (typeName As String, typeNamespace As String, customData As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReferencedTypeOnImport(System::String ^ typeName, System::String ^ typeNamespace, System::Object ^ customData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeNamespace" Type="System.String" />
        <Parameter Name="customData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="5d748-148">Nom du type dans le schéma.</span><span class="sxs-lookup"><span data-stu-id="5d748-148">The name of the type in schema.</span></span></param>
        <param name="typeNamespace"><span data-ttu-id="5d748-149">Espace de noms du type dans le schéma.</span><span class="sxs-lookup"><span data-stu-id="5d748-149">The namespace of the type in schema.</span></span></param>
        <param name="customData"><span data-ttu-id="5d748-150">L'objet qui représente l'annotation insérée dans la définition de schéma XML, qui correspond à des données qui peuvent être utilisées pour rechercher le type référencé.</span><span class="sxs-lookup"><span data-stu-id="5d748-150">The object that represents the annotation inserted into the XML schema definition, which is data that can be used for finding the referenced type.</span></span></param>
        <summary><span data-ttu-id="5d748-151">Pendant l'importation de schéma, retourne le type référencé par le schéma.</span><span class="sxs-lookup"><span data-stu-id="5d748-151">During schema import, returns the type referenced by the schema.</span></span></summary>
        <returns><span data-ttu-id="5d748-152"><see cref="T:System.Type" /> à utiliser pour le type référencé.</span><span class="sxs-lookup"><span data-stu-id="5d748-152">The <see cref="T:System.Type" /> to use for the referenced type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d748-153">`Null` doit être retourné si un type CLR n'existe pas pour représenter le type de schéma.</span><span class="sxs-lookup"><span data-stu-id="5d748-153">`Null` should be returned if a CLR type does not exist for representing the schema type.</span></span> <span data-ttu-id="5d748-154">Cela provoquera la génération d'un nouveau type pendant l'importation de schéma.</span><span class="sxs-lookup"><span data-stu-id="5d748-154">This will cause a new type to be generated during schema import.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d748-155">L'exemple suivant illustre une implémentation de la méthode <xref:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport%2A>.</span><span class="sxs-lookup"><span data-stu-id="5d748-155">The following example shows an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport%2A> method.</span></span>  
  
 [!code-csharp[IDataContractSurrogate#4](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#4)]
 [!code-vb[IDataContractSurrogate#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessImportedType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeDeclaration ProcessImportedType (System.CodeDom.CodeTypeDeclaration typeDeclaration, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration ProcessImportedType(class System.CodeDom.CodeTypeDeclaration typeDeclaration, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessImportedType (typeDeclaration As CodeTypeDeclaration, compileUnit As CodeCompileUnit) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeTypeDeclaration ^ ProcessImportedType(System::CodeDom::CodeTypeDeclaration ^ typeDeclaration, System::CodeDom::CodeCompileUnit ^ compileUnit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDeclaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="typeDeclaration"><span data-ttu-id="5d748-156"><see cref="T:System.CodeDom.CodeTypeDeclaration" /> à traiter et qui représente la déclaration de type générée pendant l'importation de schéma.</span><span class="sxs-lookup"><span data-stu-id="5d748-156">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> to process that represents the type declaration generated during schema import.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="5d748-157"><see cref="T:System.CodeDom.CodeCompileUnit" /> qui contient l'autre code généré pendant l'importation de schéma.</span><span class="sxs-lookup"><span data-stu-id="5d748-157">The <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains the other code generated during schema import.</span></span></param>
        <summary><span data-ttu-id="5d748-158">Traite le type qui a été généré à partir du schéma importé.</span><span class="sxs-lookup"><span data-stu-id="5d748-158">Processes the type that has been generated from the imported schema.</span></span></summary>
        <returns><span data-ttu-id="5d748-159"><see cref="T:System.CodeDom.CodeTypeDeclaration" /> qui contient le type traité.</span><span class="sxs-lookup"><span data-stu-id="5d748-159">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that contains the processed type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d748-160">Le <xref:System.CodeDom.CodeTypeDeclaration> d'entrée ou d'autres informations dans le <xref:System.CodeDom.CodeCompileUnit> peuvent être modifiés par l'utilisateur dans cette méthode.</span><span class="sxs-lookup"><span data-stu-id="5d748-160">The input <xref:System.CodeDom.CodeTypeDeclaration> or other information in the <xref:System.CodeDom.CodeCompileUnit> can be modified by the user in this method.</span></span> <span data-ttu-id="5d748-161">Si `null` est retourné, il empêchera la génération du type.</span><span class="sxs-lookup"><span data-stu-id="5d748-161">If `null` is returned, it will cause the type to not be generated.</span></span> <span data-ttu-id="5d748-162">Si un nouveau <xref:System.CodeDom.CodeTypeDeclaration> est retourné, il remplacera le type d'origine généré.</span><span class="sxs-lookup"><span data-stu-id="5d748-162">If a new <xref:System.CodeDom.CodeTypeDeclaration> is returned, it will replace the original type generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>