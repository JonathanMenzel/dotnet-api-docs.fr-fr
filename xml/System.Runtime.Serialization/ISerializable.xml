<Type Name="ISerializable" FullName="System.Runtime.Serialization.ISerializable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e472d101330ad3fe07ac415fe5b90af0a16de62b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30488953" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permet à un objet de contrôler ses propres sérialisation et désérialisation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Toute classe qui peut être sérialisée doit être marqué avec le <xref:System.SerializableAttribute>. Si une classe doit contrôler son processus de sérialisation, elle peut implémenter la <xref:System.Runtime.Serialization.ISerializable> interface. Le <xref:System.Runtime.Serialization.Formatter> appelle la <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> au moment de la sérialisation et remplit fourni <xref:System.Runtime.Serialization.SerializationInfo> avec toutes les données nécessaires pour représenter l’objet. Le <xref:System.Runtime.Serialization.Formatter> crée un <xref:System.Runtime.Serialization.SerializationInfo> avec le type de l’objet dans le graphique. Les objets qui doivent envoyer des proxies pour eux-mêmes peuvent utiliser le <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> et <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> méthodes sur <xref:System.Runtime.Serialization.SerializationInfo> pour modifier les informations transmises.  
  
 Dans le cas d’héritage de classe, il est possible de sérialiser une classe qui dérive d’une classe de base qui implémente <xref:System.Runtime.Serialization.ISerializable>. Dans ce cas, la classe dérivée doit appeler l’implémentation de classe de base de <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> à l’intérieur de son implémentation de <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>. Dans le cas contraire, les données à partir de la classe de base ne seront pas sérialisées.  
  
 Le <xref:System.Runtime.Serialization.ISerializable> interface implique un constructeur avec la signature (<xref:System.Runtime.Serialization.SerializationInfo> plus d’informations, <xref:System.Runtime.Serialization.StreamingContext> contexte). Au moment de la désérialisation, le constructeur en cours est appelé uniquement une fois les données dans le <xref:System.Runtime.Serialization.SerializationInfo> a été désérialisée par le formateur. En général, ce constructeur doit être protégé si la classe n’est pas scellée.  
  
 L’ordre dans lequel les objets sont désérialisés ne peut pas être garantie. Par exemple, si un type référence un type qui n’a pas encore été désérialisé, une exception se produit. Si vous créez des types qui ont de telles dépendances, vous pouvez contourner le problème en mettant en œuvre le `IDeserializationCallback` interface et le `OnDeserialization` (méthode).  
  
 L’architecture de sérialisation gère les types d’objets qui étendent <xref:System.MarshalByRefObject> le même que les types qui étendent <xref:System.Object>. Ces types peuvent être marqués avec le <xref:System.SerializableAttribute> et implémenter la <xref:System.Runtime.Serialization.ISerializable> interface comme tout autre type d’objet. Leur état de l’objet est capturé et rendu persistant dans le flux de données.  
  
 Lorsque ces types sont utilisées par le biais <xref:System.Runtime.Remoting>, l’infrastructure de communication à distance fournit un substitut qui devance sérialisation standard, à la place sérialise un proxy pour le <xref:System.MarshalByRefObject>. Un substitut est un programme d’assistance qui sait comment sérialiser et désérialiser des objets d’un type particulier. Le proxy, invisible pour l’utilisateur dans la plupart des cas, sera de type <xref:System.Runtime.Remoting.ObjRef>.  
  
 En tant que modèle de design général, il serait inhabituel pour une classe soit marquée avec l’attribut serializable et l’extension <xref:System.MarshalByRefObject>. Les développeurs doivent examiner soigneusement les sérialisation et la communication à distance les scénarios possibles lors de la combinaison de ces deux caractéristiques. Par exemple, cela s’appliquerait, avec un <xref:System.IO.MemoryStream>. Lors de la classe de base de <xref:System.IO.MemoryStream> (<xref:System.IO.Stream>) s’étend de <xref:System.MarshalByRefObject>, il est possible de capturer l’état d’un <xref:System.IO.MemoryStream> et restaurez-la à volonté. Il peut, par conséquent, être significative pour sérialiser l’état de ce flux de données dans une base de données et de restauration à un point ultérieur dans le temps. Toutefois, lorsqu’il est utilisé par la communication à distance, un objet de ce type de proxy serait.  
  
 Pour plus d’informations sur la sérialisation des classes qui étendent <xref:System.MarshalByRefObject>, consultez <xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>. Pour plus d’informations sur l’implémentation de <xref:System.Runtime.Serialization.ISerializable>, consultez [sérialisation personnalisée](~/docs/standard/serialization/custom-serialization.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de la <xref:System.Runtime.Serialization.ISerializable> interface pour définir le comportement de sérialisation personnalisé pour une classe.  
  
 [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Implémentez cette interface pour permettre à un objet de participer à sa propre sérialisation et de désérialisation.</para>
    </block>
    <altmember cref="T:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector" />
  </Docs>
  <Members>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
        <param name="context">Destination (voir <see cref="T:System.Runtime.Serialization.StreamingContext" />) de cette sérialisation.</param>
        <summary>Remplit <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'objet cible.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tous les objets qui sont inclus dans le <xref:System.Runtime.Serialization.SerializationInfo> sont automatiquement suivies et sérialisé par le formateur.  
  
 Le code qui appelle <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> requiert le <xref:System.Security.Permissions.SecurityPermission> pour fournir des services de sérialisation. Énumération associée : <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Il n’est pas garanti que cette méthode sera être appelée qu’une seule fois par instance d’objet pendant la sérialisation. Par conséquent, la méthode doit être implémentée de manière à ce que son comportement sera le même quelle que soit le nombre de fois où qu'elle est appelée.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> pour définir d’autres valeurs pour un objet sérialisé. Le code utilise le <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> méthode de la <xref:System.Runtime.Serialization.SerializationInfo> classe pour stocker les autres valeurs lorsque l’objet est sérialisé. Inversement, lorsque le constructeur de la `Person` classe est appelée pendant la désérialisation, les autres valeurs sont récupérées à l’aide de la <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> méthode et réassignées aux champs de l’objet.  
  
 [!code-csharp[ISerializable_GetObjectData#0](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable_GetObjectData/cs/ISerializable_GetObjectData.cs#0)]
 [!code-vb[ISerializable_GetObjectData#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable_GetObjectData/vb/ISerializable_GetObjectData.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
  </Members>
</Type>