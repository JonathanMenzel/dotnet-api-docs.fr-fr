<Type Name="WebService" FullName="System.Web.Services.WebService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="35d497630a3688226680ca5dce56e4541ab41e79" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53479154" /></Metadata><TypeSignature Language="C#" Value="public class WebService : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebService extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebService" />
  <TypeSignature Language="VB.NET" Value="Public Class WebService&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebService : System::ComponentModel::MarshalByValueComponent" />
  <TypeSignature Language="F#" Value="type WebService = class&#xA;    inherit MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Définit la classe de base optionnelle pour les services Web XML, fournissant l'accès direct aux objets ASP.NET communs, tels que l'état de l'application et de la session.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous ne devez accéder aux objets ASP.NET communs, vous pouvez toujours créer un service Web XML sans dériver <xref:System.Web.Services.WebService>. Objets ASP.NET supplémentaires sont accessibles via <xref:System.Web.Services.WebService.Context%2A>.  
  
 Les méthodes de service Web XML qui ont le <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> propriété du <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> ou <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> définie sur `true`, n’ont pas accès à leurs <xref:System.Web.HttpContext>. Par conséquent, l’accès à toutes les propriétés de la <xref:System.Web.Services.WebService> (classe), à partir de cette méthode de service Web XML, retourner `null`.  
  
 Si vous utilisez les méthodes de service Web XML de .NET Framework version 1.0 qui ont le <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> ou <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> attribut avec le <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> propriété du jeu de `true`, n’ont pas accès à leurs <xref:System.Web.HttpContext> à l’aide de la statique <xref:System.Web.HttpContext.Current%2A> propriété. Pour accéder à la <xref:System.Web.HttpContext>, dérivez la classe implémentant la méthode de service Web XML à partir de <xref:System.Web.Services.WebService> et accéder à la <xref:System.Web.Services.WebService.Context%2A> propriété.  
  
   
  
## Examples  
 L’exemple ci-dessous crée un service Web XML, en dérivant de <xref:System.Web.Services.WebService>, pour pouvoir utiliser le <xref:System.Web.Services.WebService.Context%2A> propriété pour obtenir l’heure de la demande sur le serveur.  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Services.WebService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : System.Web.HttpApplicationState" Usage="System.Web.Services.WebService.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Description("The ASP.NET application object for the current request.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet Application de la requête HTTP en cours.</summary>
        <value>Objet <see cref="T:System.Web.HttpApplicationState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Services Web XML peuvent utiliser l’état et l’état de session. État de l’application est conservé dans toutes les sessions accès à un service Web XML, quel que soit l’état de session est désactivée pour une méthode (à l’aide de la <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> propriété de la <xref:System.Web.Services.WebMethodAttribute>).  
  
   
  
## Examples  
 L’exemple ci-dessous montre un compteur d’accès, en incrémentant le nombre, chaque fois qu’un navigateur appelle la méthode de service Web XML.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpApplicationState" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.Services.WebService.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient <see cref="T:System.Web.HttpContext" /> ASP.NET pour la demande en cours, qui encapsule tout le contexte spécifique à HTTP utilisé par le serveur HTTP pour traiter les demandes Web.</summary>
        <value><see cref="T:System.Web.HttpContext" /> ASP.NET pour la demande en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les méthodes de service Web XML disposant du <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> ou <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> attribut avec le <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> propriété du jeu de `true`, n’ont pas accès à leurs <xref:System.Web.HttpContext> à l’aide de la méthode statique <xref:System.Web.HttpContext.Current%2A> propriété. Pour accéder à la <xref:System.Web.HttpContext>, dérivez la classe implémentant la méthode de service Web XML à partir de <xref:System.Web.Services.WebService> et accéder à la <xref:System.Web.Services.WebService.Context%2A> propriété.  
  
   
  
## Examples  
 L’exemple ci-dessous utilise le <xref:System.Web.Services.WebService.Context%2A> propriété pour obtenir l’heure de la demande sur le serveur.  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><paramref name="Context" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Web.HttpServerUtility" Usage="System.Web.Services.WebService.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Web.HttpServerUtility" /> pour la demande en cours.</summary>
        <value>Objet <see cref="T:System.Web.HttpServerUtility" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.HttpServerUtility> classe fournit plusieurs méthodes qui peuvent être utilisés dans le traitement des demandes Web, y compris <xref:System.Web.HttpServerUtility.CreateObject%2A> (pour instancier des objets COM).  
  
   
  
## Examples  
 L’exemple ci-dessous retourne le nom d’ordinateur du serveur Web en utilisant le <xref:System.Web.Services.WebService.Server%2A> propriété.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpServerUtility" />
        <altmember cref="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Session : System.Web.SessionState.HttpSessionState" Usage="System.Web.Services.WebService.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'instance <see cref="T:System.Web.SessionState.HttpSessionState" /> pour la demande en cours.</summary>
        <value><see cref="T:System.Web.SessionState.HttpSessionState" /> représentant l'objet état de session ASP.NET pour la session en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple ci-dessous l’état de session utilise pour déterminer combien de fois une session particulière accède à la méthode de service Web XML `SessionHitCounter`. Dans cet exemple, le <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> propriété de la <xref:System.Web.Services.WebMethodAttribute> a la valeur `true` afin d’obtenir l’accès à l’état de session.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.SessionState.HttpSessionState" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion" Usage="System.Web.Services.WebService.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la version du protocole SOAP utilisée pour faire la demande SOAP au service Web XML.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />. La valeur par défaut est <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le protocole SOAP n’a pas utilisé pour communiquer avec le service Web XML, tels que HTTP-GET ou HTTP-POST, la valeur de la <xref:System.Web.Services.WebService.SoapVersion%2A> propriété est <xref:System.Web.Services.Protocols.SoapProtocolVersion.Default>.  
  
 Pour les services Web XML qui ne dérivent pas de la <xref:System.Web.Services.WebService> classe, la version du protocole SOAP utilisée pour faire la demande SOAP au XML Web service est également accessible à l’aide de l’entrée « WebServiceSoapVersion » de la <xref:System.Web.HttpContext.Items%2A?displayProperty=nameWithType> propriété. Cette entrée est du type <xref:System.Web.Services.Protocols.SoapProtocolVersion>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal" Usage="System.Web.Services.WebService.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="P:System.Web.HttpContext.User" /> du serveur ASP.NET. Peut être utilisé pour déterminer par l'authentification si un utilisateur est autorisé à exécuter la demande.</summary>
        <value><see cref="T:System.Security.Principal.IPrincipal" /> représentant l'objet <see cref="P:System.Web.HttpContext.User" /> du serveur ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Internet Information Services (IIS) et le .NET Framework doivent être configurés pour l’authentification afin que le <xref:System.Web.Services.WebService.User%2A> propriété explicite. L’authentification est le processus d’acceptation des informations d’identification d’un utilisateur et de validation de ces informations d’identification auprès d’une autorité. Si les informations d’identification sont valides, vous avez une identité authentifiée. L’authentification dans le .NET Framework est configurée en plaçant des entrées dans le fichier web.config.  
  
 L’exemple suivant montre les entrées vous placer dans le fichier web.config pour activer l’authentification Windows.  
  
```  
<security>  
 <authentication mode="Windows"> <!-- Mode Options are Windows, Cookie, Passport and None or Empty String -->  
 </authentication>  
 </security>  
```  
  
 Pour plus d’informations sur la configuration de sécurité pour un service Web XML, consultez [ &#91; \<topic://cpconSecuringASPNETWebServices >&#93;](https://msdn.microsoft.com/library/354b2ab1-2782-4542-b32a-dc560178b90c).  
  
   
  
## Examples  
 L’exemple ci-dessous recherche le nom d’utilisateur authentifié et retourne ce nom.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w67h0dw7(v=vs.100)">Sécurisation des services Web XML créés à l'aide d'ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>