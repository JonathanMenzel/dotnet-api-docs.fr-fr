<Type Name="WebMethodAttribute" FullName="System.Web.Services.WebMethodAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f02edb74efbd1055b7b61d2f5bbf500649e9628" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58874564" /></Metadata><TypeSignature Language="C#" Value="public sealed class WebMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WebMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>L'ajout de cet attribut à une méthode dans un service Web XML créé à l'aide d'ASP.NET permet l'appel de cette méthode à partir de clients Web distants. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Méthodes dans une classe qui ont cet attribut sont appelées des méthodes de service Web XML. La méthode et la classe doivent être publique et en cours d’exécution à l’intérieur d’une application Web ASP.NET.  
  
   
  
## Examples  
 Dans l’exemple ci-dessous, la méthode `GetMachineName` peut être appelée à distance via le Web, car il a un <xref:System.Web.Services.WebMethodAttribute>. `GetUserName` ne peut pas être appelée à distance, car il n’a pas un <xref:System.Web.Services.WebMethodAttribute>, même s’il est `public`.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EnterpriseServices.TransactionOption" />
    <altmember cref="T:System.Web.Services.WebService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute enableSession" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">Définit si l'état de session est activé pour la méthode de service Web XML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="enableSession">Définit si l'état de session est activé pour la méthode de service Web XML.</param>
        <param name="transactionOption">Initialise la prise en charge de transactions d'une méthode de service Web XML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un appel de service web peut être uniquement la racine d’une transaction, en raison de la nature sans état du protocole HTTP. Cela signifie que les deux paramètres suivants sont équivalents, à chaque appel de création d’une nouvelle transaction :  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 Cela signifie également que tous les paramètres suivants sont équivalents ; ce qui signifie qu’aucune prise en charge de la transaction :  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption * int -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="cacheDuration" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="enableSession">Définit si l'état de session est activé pour la méthode de service Web XML.</param>
        <param name="transactionOption">Initialise la prise en charge de transactions d'une méthode de service Web XML.</param>
        <param name="cacheDuration">Initialise le nombre de secondes durant lesquelles la réponse est mise en cache.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un appel de service web peut être uniquement la racine d’une transaction, en raison de la nature sans état du protocole HTTP.  Cela signifie que les deux paramètres suivants sont équivalents, à chaque appel de création d’une nouvelle transaction :  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 Cela signifie également que tous les paramètres suivants sont équivalents ; ce qui signifie qu’aucune prise en charge de la transaction :  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption * int -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
        <Parameter Name="cacheDuration" Type="System.Int32" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption * int * bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration, bufferResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="cacheDuration" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="bufferResponse" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="enableSession">Définit si l'état de session est activé pour la méthode de service Web XML.</param>
        <param name="transactionOption">Initialise la prise en charge de transactions d'une méthode de service Web XML.</param>
        <param name="cacheDuration">Initialise le nombre de secondes durant lesquelles la réponse est mise en cache.</param>
        <param name="bufferResponse">Définit si la réponse à cette demande est placée en mémoire tampon.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un appel de service web peut être uniquement la racine d’une transaction, en raison de la nature sans état du protocole HTTP.  Cela signifie que les deux paramètres suivants sont équivalents, à chaque appel de création d’une nouvelle transaction :  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 Cela signifie également que tous les paramètres suivants sont équivalents ; ce qui signifie qu’aucune prise en charge de la transaction :  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption * int * bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration, bufferResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
        <Parameter Name="cacheDuration" Type="System.Int32" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
        <Parameter Name="bufferResponse" Type="System.Boolean" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <param name="bufferResponse">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferResponse">
      <MemberSignature Language="C#" Value="public bool BufferResponse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferResponse" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferResponse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BufferResponse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BufferResponse : bool with get, set" Usage="System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'option de mise en mémoire tampon de la réponse à cette demande.</summary>
        <value><see langword="true" /> si la réponse à cette demande est placée en mémoire tampon ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Paramètre <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> à `true`, sérialise la réponse de la méthode de service Web XML dans une mémoire tampon jusqu'à ce que la réponse est sérialisée complètement ou de la mémoire tampon est saturée. Une fois que la réponse est mis en mémoire tampon, elle est retournée au client de service Web XML sur le réseau. Lorsque <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> est `false`, la réponse à la méthode de service Web XML est envoyée au client, telle qu’elle est sérialisée. En règle générale, vous souhaitez uniquement définir <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> à `false`, s’il est connu qu’une méthode de service Web XML retourne de grandes quantités de données au client. Pour les petites quantités de données, les performances du service Web XML est mieux avec <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> à `true`.  
  
 Lorsque <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> est `false`, les extensions SOAP sont désactivées pour la méthode de service Web XML.  
  
   
  
## Examples  
 Le code suivant exemple définit le <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> propriété `false` et gère la diffusion en continu d’un fichier texte au client. L’exemple de code montre comment diffuser un important volume de données vers le client à l’aide d’une classe qui implémente le <xref:System.Collections.IEnumerable> interface.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la durée en secondes pendant laquelle la réponse doit être maintenue dans le cache.</summary>
        <value>Durée en secondes pendant laquelle la réponse doit être maintenue dans le cache. La valeur par défaut est 0 et signifie que la réponse n'est pas mise en cache.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque la mise en cache est activée demandes et réponses sont conservées en mémoire sur le serveur pour au moins la durée du cache afin de précaution doit être utilisée si vous attendez des demandes ou des réponses à être très volumineuses ou si vous pensez demandes peuvent varier.  
  
 Deux problèmes peuvent affecter la mise en cache de sortie dans une application de service Web ASP.NET 2.0.  
  
 Dans ASP.NET 2.0, la méthode HTTP de la page de test est passée de GET à POST. Toutefois, les POST ne sont normalement pas mis en cache. Si vous modifiez la page de test dans une application de service Web ASP.NET 2.0 pour utiliser GET, la mise en cache fonctionne correctement.  
  
 De plus, HTTP indique qu'un agent utilisateur (user agent) (le navigateur ou l'application appelante) doit pouvoir substituer la mise en cache sur le serveur en affectant la valeur "no-cache" au paramètre "Cache-Control". Les applications ASP.NET ignorent donc les résultats mis en cache lorsqu'elles trouvent un en-tête "no-cache".  
  
   
  
## Examples  
 L’exemple suivant place le résultat de l’appel à la `ServiceUsage` méthode de service Web XML dans le cache pendant 60 secondes. S’exécute le client du service Web XML à tout moment le `ServiceUsage` méthode de service Web XML pendant ce temps, le même résultat est retourné.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.Services.WebMethodAttribute.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Message descriptif détaillant la méthode de service Web XML.</summary>
        <value>Message descriptif détaillant la méthode de service Web XML. La valeur par défaut est <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le message descriptif s’affiche aux consommateurs potentiels du service Web XML lors de la génération de documents de description pour le service Web XML, telles que la page d’aide de la Description de Service et le Service.  
  
   
  
## Examples  
 Dans l’exemple ci-dessous, la chaîne `Obtains the Server Computer Name` est utilisé pour décrire la méthode de service Web XML dans la Description de Service et de la page d’aide pour le service Web XML.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EnableSession">
      <MemberSignature Language="C#" Value="public bool EnableSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSession { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSession : bool with get, set" Usage="System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique si l'état de session est activé pour une méthode de service Web XML.</summary>
        <value><see langword="true" /> si l'état de session est activé pour une méthode de service Web XML. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Afin de stocker l’état de session dans ASP.NET <xref:System.Web.SessionState.HttpSessionState> de l’objet, le service Web XML doit hériter de <xref:System.Web.Services.WebService> et un <xref:System.Web.Services.WebMethodAttribute> appliqué à la méthode de service Web XML, définissant le <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> propriété `true`. Si l’état de session n’est pas nécessaire pour une méthode de service Web XML, sa désactivation peut améliorer les performances.  
  
 Un client de service Web XML est identifié par un cookie HTTP retourné par un service Web XML. Pour un service Web XML maintenir l’état de session pour un client, le client doit rendre le cookie persistant. Les clients peuvent recevoir le cookie HTTP en créant une nouvelle instance de <xref:System.Net.CookieContainer> et en l’assignant à la <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> propriété de la classe proxy avant d’appeler la méthode de service Web XML. Si vous avez besoin de conserver l’état de session même lorsque l’instance de la classe proxy est hors de portée, le client doit rendre persistant le cookie HTTP entre les appels au service Web XML. Par exemple, un client Web Forms peut rendre persistant le cookie HTTP en enregistrant le <xref:System.Net.CookieContainer> dans son propre état de session. Étant donné que tous les services Web XML utilisent l’état de session et par conséquent, les clients ne sont pas toujours requis pour utiliser le <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> propriété d’un proxy client, la documentation pour le service Web XML doit indiquer si l’état de session est utilisé.  
  
   
  
## Examples  
 L’exemple ci-dessous l’état de session utilise pour déterminer combien de fois une session particulière accède à la méthode de service Web XML `SessionHitCounter`.  
  
  
  
 L’exemple de code suivant est un client Web Forms d’un service Web XML qui utilise l’état de session. Le client conserve le cookie HTTP qui identifie de façon unique la session en les stockant dans un état de session du client.  
  
 [!code-aspx-csharp[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer" />
      </Docs>
    </Member>
    <Member MemberName="MessageName">
      <MemberSignature Language="C#" Value="public string MessageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageName : string with get, set" Usage="System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nom utilisé pour la méthode de service Web XML dans les données qui sont passées à cette méthode et que celle-ci retourne.</summary>
        <value>Nom utilisé pour la méthode de service Web XML dans les données passées par et à une méthode de service Web XML. Le nom par défaut est celui de la méthode de service Web XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> propriété peut être utilisée pour les alias des noms de méthode ou propriété. L’utilisation la plus courante de la <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> propriété sera pour identifier de manière unique des méthodes polymorphes. Par défaut, <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> est définie sur le nom de la méthode de service Web XML. Par conséquent, si un service Web XML contient deux ou plusieurs méthodes de service Web XML portant le même nom, vous pouvez identifier les méthodes de service Web XML individuelles en définissant le <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> à un nom unique au sein du service Web XML, sans modifier le nom de la nom de la méthode réelle dans le code.  
  
 Lorsque les données sont transmises à un service Web XML, il est envoyé dans une requête et lorsqu’elle est retournée envoyé dans une réponse. Dans la demande et la réponse, le nom utilisé pour la méthode de service Web XML est son <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> propriété.  
  
 Le nom de message associé à une méthode de service Web XML doit être unique au sein du service Web XML.  
  
 Si une nouvelle méthode de service Web XML avec le même nom mais des paramètres différents est ajoutée après que les clients appellent la méthode d’origine, un nom de message différent doit être spécifié pour la nouvelle méthode, mais le nom du message d’origine doit être conservé tel quel pour assurer la compatibilité les clients existants.  
  
   
  
## Examples  
 Dans l’exemple ci-dessous, <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> est utilisé pour lever l’ambiguïté entre les deux `Add` méthodes.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOption">
      <MemberSignature Language="C#" Value="public System.EnterpriseServices.TransactionOption TransactionOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.EnterpriseServices.TransactionOption TransactionOption" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionOption As TransactionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::EnterpriseServices::TransactionOption TransactionOption { System::EnterpriseServices::TransactionOption get(); void set(System::EnterpriseServices::TransactionOption value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionOption : System.EnterpriseServices.TransactionOption with get, set" Usage="System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique la prise en charge de transactions d'une méthode de service Web XML.</summary>
        <value>Prise en charge de transactions d'une méthode de service Web XML. La valeur par défaut est <see cref="F:System.EnterpriseServices.TransactionOption.Disabled" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les méthodes de service Web XML peuvent uniquement participer en tant que l’objet racine dans une transaction, en raison de la nature sans état du protocole HTTP. Les méthodes de service Web XML peuvent appeler des objets COM qui participent à la même transaction que la méthode de service Web XML, si l’objet COM est marqué pour s’exécuter dans une transaction dans l’outil d’administration Services de composants. Si une méthode de service Web XML avec un <xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A> propriété du `Required` ou `RequiresNew` appelle une autre méthode de service Web XML avec un <xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A> propriété du `Required` ou `RequiresNew`, chaque méthode de service Web XML participe à sa propre transaction, car une méthode de service Web XML peut uniquement servir de l’objet racine dans une transaction.  
  
|Élément|Description |  
|----------|-----------------|  
|Désactivé|Indique que la méthode de service Web XML ne s’exécute pas dans l’étendue d’une transaction. Lorsqu’une demande est traitée, la méthode de service Web XML est exécutée sans une transaction.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Disabled`)]|  
|Non pris en charge|Indique que la méthode de service Web XML ne s’exécute pas dans l’étendue d’une transaction. Lorsqu’une demande est traitée, la méthode de service Web XML est exécutée sans une transaction.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.NotSupported`)]|  
|Prise en charge|Indique que la méthode de service Web XML ne s’exécute pas dans l’étendue de transactions. Lorsqu’une demande est traitée, le service Web XML est créé sans transaction.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Supported`)]|  
|Obligatoire|Indique que la méthode de service Web XML requiert une transaction. Étant donné que les méthodes de service Web XML peuvent uniquement participent en tant que l’objet racine dans une transaction, une nouvelle transaction sera créée pour la méthode de service Web XML.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Required`)]|  
|RequiresNew|Indique que la méthode de service Web XML requiert une nouvelle transaction. Lorsqu’une demande est traitée, le service Web XML est créé dans une nouvelle transaction.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.RequiresNew`)]|  
  
 Si une exception est levée à partir d’ou pas interceptée par une méthode de service Web XML, la transaction est automatiquement abandonnée. Si aucune exception ne se produit, la transaction est automatiquement validée, sauf si la méthode appelle explicitement `SetAbort`.  
  
   
  
## Examples  
 L’exemple ci-dessous commence une nouvelle transaction lorsque le `Transfer` méthode est appelée.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EnterpriseServices.TransactionOption" />
      </Docs>
    </Member>
  </Members>
</Type>