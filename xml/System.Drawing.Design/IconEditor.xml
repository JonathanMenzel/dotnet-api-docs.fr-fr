<Type Name="IconEditor" FullName="System.Drawing.Design.IconEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="279195e1781b2b405efed93f3f78a234331cdde3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408333" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class IconEditor : System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IconEditor extends System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.IconEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class IconEditor&#xA;Inherits UITypeEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class IconEditor : System::Drawing::Design::UITypeEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Design.UITypeEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit <see cref="T:System.Drawing.Design.UITypeEditor" /> pour choisir visuellement une icône.</summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">Pour accéder au code non managé. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IconEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IconEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.IconEditor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExtensionsString">
      <MemberSignature Language="C#" Value="protected static string CreateExtensionsString (string[] extensions, string sep);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string CreateExtensionsString(string[] extensions, string sep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateExtensionsString (extensions As String(), sep As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ CreateExtensionsString(cli::array &lt;System::String ^&gt; ^ extensions, System::String ^ sep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensions" Type="System.String[]" />
        <Parameter Name="sep" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extensions">Tableau de chaînes contenant des extensions de fichier valides.</param>
        <param name="sep">Chaîne qui spécifie le caractère de séparation.</param>
        <summary>Crée une chaîne qui représente les extensions de fichier valides pour les icônes.</summary>
        <returns>Chaîne qui contient les extensions de fichiers icône ou <see langword="null" /> si <paramref name="extensions" /> est <see langword="null" /> ou vide.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chaîne retournée par la <xref:System.Drawing.Design.IconEditor.CreateExtensionsString%2A> méthode est utilisée dans le <xref:System.Windows.Forms.OpenFileDialog> pour choisir des fichiers icône.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterEntry">
      <MemberSignature Language="C#" Value="protected static string CreateFilterEntry (System.Drawing.Design.IconEditor e);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string CreateFilterEntry(class System.Drawing.Design.IconEditor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.CreateFilterEntry(System.Drawing.Design.IconEditor)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateFilterEntry (e As IconEditor) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ CreateFilterEntry(System::Drawing::Design::IconEditor ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Design.IconEditor" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Drawing.Design.IconEditor" /> pour lequel la chaîne de filtrage sera créée.</param>
        <summary>Crée une chaîne de filtrage pour la boîte de dialogue Fichier.</summary>
        <returns>Chaîne de filtrage, créée à partir de la chaîne retournée par <see cref="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chaîne retournée par la <xref:System.Drawing.Design.IconEditor.CreateFilterEntry%2A> méthode est utilisée dans le <xref:System.Windows.Forms.OpenFileDialog> pour le filtrage de fichiers d’icône.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public override object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EditValue(class System.ComponentModel.ITypeDescriptorContext context, class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EditValue (context As ITypeDescriptorContext, provider As IServiceProvider, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EditValue(System::ComponentModel::ITypeDescriptorContext ^ context, IServiceProvider ^ provider, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
        <param name="provider">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
        <param name="value">Instance de la valeur en cours de modification.</param>
        <summary>Modifie la valeur de l'objet spécifié à l'aide du style de l'éditeur fourni par la méthode <see cref="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
        <returns>Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas changé, l'objet retourné doit être le même que celui qui a été passé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un fournisseur de services est prévu pour que tous les services d"édition requis puissent être obtenus.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEditStyle (context As ITypeDescriptorContext) As UITypeEditorEditStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Design::UITypeEditorEditStyle GetEditStyle(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
        <summary>Récupère le style de modification de la méthode <see cref="Overload:System.Drawing.Design.IconEditor.EditValue" />.</summary>
        <returns>Une des valeurs <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification fourni.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Drawing.Design.IconEditor.EditValue%2A> méthode n’est pas prise en charge, le <xref:System.Drawing.Design.IconEditor.GetEditStyle%2A> méthode retournera <xref:System.Drawing.Design.UITypeEditorEditStyle.None>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtensions">
      <MemberSignature Language="C#" Value="protected virtual string[] GetExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string[] GetExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.GetExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetExtensions () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetExtensions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère un tableau d'extensions de fichier valides pour les icônes.</summary>
        <returns>Tableau d'extensions de fichier valides pour les icônes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileDialogDescription">
      <MemberSignature Language="C#" Value="protected virtual string GetFileDialogDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetFileDialogDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.GetFileDialogDescription" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetFileDialogDescription () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetFileDialogDescription();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient la description du filtre de liste de fichiers par défaut fourni par cet éditeur.</summary>
        <returns>Description du type de fichier par défaut sur lequel la liste doit être filtrée.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPaintValueSupported">
      <MemberSignature Language="C#" Value="public override bool GetPaintValueSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPaintValueSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPaintValueSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPaintValueSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
        <summary>Détermine si cet éditeur permet de peindre une représentation de la valeur d'un objet.</summary>
        <returns>
          <see langword="true" /> si <see cref="Overload:System.Drawing.Design.UITypeEditor.PaintValue" /> est implémenté ; sinon <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromStream">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Icon LoadFromStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Drawing.Icon LoadFromStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.LoadFromStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Icon ^ LoadFromStream(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Flux source à partir duquel l'icône sera créée.</param>
        <summary>Crée un nouveau <see cref="T:System.Drawing.Icon" /> à partir du flux donné.</summary>
        <returns>Objet <see cref="T:System.Drawing.Icon" /> nouvellement créé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PaintValue">
      <MemberSignature Language="C#" Value="public override void PaintValue (System.Drawing.Design.PaintValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PaintValue(class System.Drawing.Design.PaintValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IconEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub PaintValue (e As PaintValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void PaintValue(System::Drawing::Design::PaintValueEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Design.PaintValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Indique l'élément à peindre et l'emplacement où il doit être peint.</param>
        <summary>Peint une valeur représentative de l'objet donné sur la toile fournie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La peinture doit être effectuée dans les limites du rectangle fourni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>