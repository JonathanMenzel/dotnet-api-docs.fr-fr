<Type Name="ChartSerializer" FullName="System.Web.UI.DataVisualization.Charting.ChartSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59e145f7990c9907f6917cc516248cfa6342db06" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56792666" /></Metadata><TypeSignature Language="C#" Value="public class ChartSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class ChartSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChartSerializer" />
  <TypeSignature Language="F#" Value="type ChartSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Format")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permet la sérialisation du contrôle <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe est exposée en tant que le <xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A> propriété de la racine <xref:System.Web.UI.DataVisualization.Charting.Chart> classe.  
  
 Sérialisation enregistre l’état du graphique et fournit également l’option pour charger les données sérialisées dans le graphique. Toutes les propriétés de graphique peuvent être conservées, y compris les données du graphique. En outre, toutes les propriétés de graphique marquées pour la sérialisation peuvent être réinitialisées.  
  
 Cette classe peut éventuellement être utilisée lors de la gestion d’état d’affichage défini par l’utilisateur. Un des ses `Load` méthodes peuvent être utilisées pour charger l’état d’affichage et l’autre de la `Save` méthodes peuvent être utilisées lors de la définition de l’état d’affichage.  
  
 Les formats XML ou binaires peuvent être utilisé pour stocker des données sérialisées. XML est utilisé par défaut, mais vous pouvez modifier le format avec la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> propriété.  
  
 Propriétés du graphique sont enregistrées et chargées à l’aide du `Save` et `Load` méthodes, respectivement. Notez que seules les propriétés avec les valeurs par défaut seront enregistrées. Les données peuvent être enregistrées et/ou chargées à l’aide d’un fichier de diffusion en continu, <xref:System.IO.TextWriter>, <xref:System.IO.TextReader>, <xref:System.Xml.XmlWriter> et <xref:System.Xml.XmlReader> objets. Lorsque l’enregistrement et/ou du chargement des données à l’aide d’un objet dérivé de la <xref:System.IO.TextReader>, <xref:System.IO.TextWriter>, <xref:System.Xml.XmlReader> ou <xref:System.Xml.XmlWriter> classes, le format des données doivent être XML.  
  
 La liste suivante décrit trois techniques de base à avancé, permet de définir des données sérialisables. Notez qu’il est également possible de définir des données non sérialisable. Cette technique est décrite dans le paragraphe suivant.  
  
-   Sérialiser le <xref:System.Web.UI.DataVisualization.Charting.Chart> à l’aide de la `Save` et `Load` méthodes, sans spécifier de propriétés sérialisables. Toutes les propriétés de graphique avec des valeurs par défaut, qui inclut les données du graphique, seront sérialisées.  
  
-   Sérialiser les propriétés de graphique spécifiées par le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriété. Le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriété regroupe les propriétés de graphique à sérialiser en catégories telles que les données, l’apparence et ainsi de suite. Notez que les noms des <xref:System.Web.UI.DataVisualization.Charting.ChartArea> et <xref:System.Web.UI.DataVisualization.Charting.Series> automatiquement les objets sont sérialisés ; les données sérialisées sont ensuite appliquées à des zones de graphique existante et de la série lors du chargement.  
  
> [!IMPORTANT]
>  Le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriété est implémentée en interne par le <xref:System.Web.UI.DataVisualization.Charting.Chart> contrôle comme le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propriété  
  
-   Sérialisation des propriétés de graphique spécifié par le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propriété. Il s’agit d’une liste séparée par des virgules de toutes les propriétés de graphique qui sont sérialisables. Une fois que cette propriété est définie sur une valeur explicite, il incombe au développeur de spécifier toutes les propriétés à enregistrer. En d’autres termes, contrairement à la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriété, les noms des zones de graphique et de séries ne seront pas automatiquement conservées. Le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> et <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propriétés peuvent également être utilisées conjointement. Toutefois, assurez-vous que <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> est concaténé avec lui-même lors de sa définition, sinon, les propriétés de graphique spécifiées par le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriété sera remplacée.  
  
 Pour interdire certaines propriétés de la sérialisation, utilisez le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriété. Quand une propriété est définie comme sérialisable et non sérialisable, ce qui est courant lorsque des caractères génériques sont utilisés, le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propriété a priorité. Toutefois, priorité dépend également des caractères génériques combien ont été utilisés lorsqu’une propriété a été spécifiée.  
  
 Par défaut, les propriétés sérialisables sont réinitialisées à leurs valeurs par défaut avant leur chargement. Ce comportement peut être modifié à l’aide de la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> propriété. Le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A> méthode peut également être utilisée pour réinitialiser de manière explicite des propriétés de graphique à leurs valeurs par défaut.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationContents Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationContents Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As SerializationContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationContents Content { System::Web::UI::DataVisualization::Charting::SerializationContents get(); void set(System::Web::UI::DataVisualization::Charting::SerializationContents value); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Web.UI.DataVisualization.Charting.SerializationContents with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationContents), "Default")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le type du contenu de graphique à sérialiser.</summary>
        <value>Valeur d'énumération <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" /> qui représente le contenu de graphique qui sera sérialisé lors d'une opération de chargement, d'enregistrement ou de réinitialisation. Par défaut, toutes les propriétés de graphique autres que celles par défaut, et notamment les données, sont persistantes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, toutes les propriétés de graphique seront sérialisées lorsqu’un de le `Save` et `Load` méthodes sont appelées. Pour fournir davantage de contrôle sur ce qui est sérialisé, utilisez le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriété. Notez que le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> et <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriétés peuvent également être utilisées avec le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriété.  
  
 > [!IMPORTANT]
 > Le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriété détermine les types de caractéristiques de graphique, tels que « apparence », à sérialiser et est implémentée réellement en interne comme le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propriété. Cela signifie que la configuration la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriété, puis en définissant le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propriété entraîne la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> valeur de propriété est remplacée, à moins que <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> est concaténée. Consultez l’exemple de code ci-dessous pour obtenir un exemple de cette procédure.  
  
 Si vous définissez la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriété, tous les <xref:System.Web.UI.DataVisualization.Charting.ChartArea> et <xref:System.Web.UI.DataVisualization.Charting.Series> noms d’objets sont automatiquement sérialisés ; cela signifie que les données sérialisées qui se rapportent aux zones de graphique et de la série seront appliquées aux objets existants lors du chargement.  
  
 À la définition de cette propriété affecte toutes les chargement, enregistrer et opérations de réinitialisation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationFormat Format { System::Web::UI::DataVisualization::Charting::SerializationFormat get(); void set(System::Web::UI::DataVisualization::Charting::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.Format : System.Web.UI.DataVisualization.Charting.SerializationFormat with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationFormat), "Xml")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le format utilisé lorsque le graphique est sérialisé.</summary>
        <value>Valeur d'énumération <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationFormat" /> qui représente le format des données sérialisées. La valeur par défaut est XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Données peuvent être sérialisées dans un XML ou un format binaire. Format binaire est compact et utilise moins de stockage que le XML. XML, toutefois, est un format de texte est lisible.  
  
 Lorsque vous enregistrez ou chargez des données sérialisées, le format doit être XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentString">
      <MemberSignature Language="C#" Value="protected string GetContentString (System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetContentString(valuetype System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetContentString (content As SerializationContents, serializable As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetContentString(System::Web::UI::DataVisualization::Charting::SerializationContents content, bool serializable);" />
      <MemberSignature Language="F#" Value="member this.GetContentString : System.Web.UI.DataVisualization.Charting.SerializationContents * bool -&gt; string" Usage="chartSerializer.GetContentString (content, serializable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Web.UI.DataVisualization.Charting.SerializationContents" />
        <Parameter Name="serializable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content">Contenu sérialisable.</param>
        <param name="serializable"><see langword="true" /> pour obtenir une chaîne sérialisable ; <see langword="false" /> pour obtenir une chaîne non sérialisable.</param>
        <summary>Retourne une classe sérialisable ou non sérialisable et/ou des noms de propriétés, selon la valeur d'indicateur spécifique.</summary>
        <returns>Valeur <see langword="string" /> qui représente les noms de classes et/ou de propriétés sérialisables ou non sérialisables.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResetWhenLoading">
      <MemberSignature Language="C#" Value="public bool IsResetWhenLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResetWhenLoading" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property IsResetWhenLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResetWhenLoading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsResetWhenLoading : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un indicateur qui détermine si les valeurs par défaut des propriétés d'objet sont rétablies avant le chargement de ces dernières.</summary>
        <value><see langword="true" /> si les valeurs par défaut des propriétés d'objet sont rétablies avant le chargement de ces dernières ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemplateMode">
      <MemberSignature Language="C#" Value="public bool IsTemplateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemplateMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTemplateMode : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un indicateur qui détermine si le sérialiseur de graphique fonctionne en mode de création de modèle.</summary>
        <value><see langword="true" /> si le sérialiseur de graphique fonctionne en mode de création de modèle ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknownAttributeIgnored">
      <MemberSignature Language="C#" Value="public bool IsUnknownAttributeIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknownAttributeIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnknownAttributeIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknownAttributeIgnored { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknownAttributeIgnored : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un indicateur qui détermine si les éléments et propriétés XML inconnus sont ignorés sans qu'une exception ne soit levée.</summary>
        <value><see langword="true" /> si les éléments et propriétés XML inconnus sont ignorés sans qu'une exception ne soit levée ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Charge des données sérialisées dans le contrôle <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.Stream -&gt; unit" Usage="chartSerializer.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Objet dérivé de la classe <see cref="T:System.IO.Stream" />, par exemple, un objet <see cref="T:System.IO.MemoryStream" />.</param>
        <summary>Charge des données sérialisées dans le contrôle à partir d'un objet dérivé de la classe <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez cette méthode pour charger des données sérialisées dans le <xref:System.Web.UI.DataVisualization.Charting.Chart> contrôle.  
  
 Lorsqu’une opération de chargement se produit, propriétés sérialisables sont, par défaut, tout d’abord réinitialisées à leurs valeurs par défaut avant qu’ils sont définis sur des valeurs persistantes, si enregistré. Pour modifier ce comportement, utilisez le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> propriété.  
  
 Par défaut, toutes les propriétés de graphique sérialisées seront chargées. Pour charger des propriétés sérialisées spécifiques, définissez le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> ou <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriétés avant de charger les données.  
  
 Notez que lorsque les données sont enregistrées à l’aide un `Save` (méthode), uniquement les propriétés qui ont des valeurs par défaut sont sérialisées réellement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.TextReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">Objet Reader, tel que <see cref="T:System.IO.StringReader" />, qui est dérivé de la classe <see cref="T:System.IO.TextReader" /> abstraite.</param>
        <summary>Charge des données sérialisées dans le contrôle à partir d'un objet Reader qui est dérivé de la classe <see cref="T:System.IO.TextReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez cette méthode pour charger des données sérialisées dans le <xref:System.Web.UI.DataVisualization.Charting.Chart> contrôle.  
  
 Lorsqu’une opération de chargement se produit, par défaut les propriétés sérialisables sont tout d’abord réinitialisées à leurs valeurs par défaut avant qu’ils sont définis sur des valeurs persistantes, si enregistré. Pour modifier ce comportement, utilisez le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> propriété.  
  
 Par défaut, toutes les propriétés de graphique sérialisées seront chargées. En définissant le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> ou <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriétés, un ensemble spécifique de propriétés peuvent être chargées.  
  
 Si vous utilisez cette définition, notez que le format, qui est défini par le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> propriété, doit être XML.  
  
 Si le <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> propriété de la <xref:System.Web.UI.DataVisualization.Charting.Chart> contrôle est utilisé pour conserver l’état, cette méthode peut être utilisée pour charger les données sérialisées données sont validées par le client dans le <xref:System.Web.UI.DataVisualization.Charting.Chart> contrôle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="chartSerializer.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Chemin d'accès relatif ou absolu du fichier utilisé pour stocker les données sérialisées. Si un chemin d'accès relatif est spécifié, il est relatif par rapport au répertoire actif.</param>
        <summary>Charge des données sérialisées, qui sont enregistrées sur le disque, dans le contrôle <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez cette méthode pour charger des données sérialisées dans le <xref:System.Web.UI.DataVisualization.Charting.Chart> contrôle.  
  
 Lorsqu’une opération de chargement se produit, propriétés sérialisables sont, par défaut, tout d’abord réinitialisées à leurs valeurs par défaut avant qu’ils sont définis sur des valeurs persistantes, si enregistré. Pour modifier ce comportement, utilisez le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> propriété.  
  
 Par défaut, toutes les propriétés de graphique sérialisées seront chargées. Pour charger des propriétés sérialisées spécifiques, définissez le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> ou <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriétés avant de charger les données.  
  
 Notez que lorsque les données sont enregistrées à l’aide un `Save` (méthode), uniquement les propriétés qui ont des valeurs par défaut sont sérialisées réellement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Objet à partir duquel les données persistantes doivent être lues. L'objet est dérivé de la classe <see cref="T:System.Xml.XmlReader" /> ; il peut s'agir d'un objet .NET Framework ou défini par l'utilisateur.</param>
        <summary>Charge des données sérialisées dans le contrôle à partir d'un objet dérivé de la classe <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez cette méthode pour charger des données sérialisées dans le <xref:System.Web.UI.DataVisualization.Charting.Chart> contrôle.  
  
 Lorsqu’une opération de chargement se produit, par défaut propriétés sérialisables sont tout d’abord réinitialisées à leurs valeurs par défaut avant qu’ils sont définis sur des valeurs persistantes, si enregistré. Pour modifier ce comportement, utilisez le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> propriété.  
  
 Par défaut, toutes les propriétés de graphique sérialisées seront chargées. Si vous définissez la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> ou <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriétés, un ensemble spécifique de propriétés peuvent être chargées.  
  
 Lorsque vous utilisez cette définition, le format doit être XML ; Il peut être modifié avec la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> propriété.  
  
 Lorsque vous travaillez avec des fichiers texte au format XML, à des fins de simplicité la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A> méthode à la place.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NonSerializableContent">
      <MemberSignature Language="C#" Value="public string NonSerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NonSerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property NonSerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NonSerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NonSerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les propriétés de graphique qui ne seront pas sérialisées.</summary>
        <value>Expression <see langword="string" /> séparée par des virgules représentant les propriétés de graphique qui ne seront pas sérialisées. La syntaxe est "Class.Property[,Class.Property]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, toutes les propriétés de graphique seront sérialisées lorsque le `Save` et `Load` méthodes sont appelées. Vous pouvez utiliser la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriété afin de limiter les caractéristiques de graphique à sérialiser, ainsi que par le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> et <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriétés.  
  
 Cette propriété détermine les caractéristiques de graphique ne seront pas sérialisées. Caractères génériques peuvent être utilisés dans l’expression de chaîne, de la même manière que le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propriété. Par exemple, pour exclure tous les graphiques `BackColor` propriétés de la sérialisation, définissez cette propriété sur « *. BackColor ».  
  
 Parfois, une propriété peut être définie pour être sérialisée et pas sérialisés, ce qui est courant lorsque des caractères génériques sont utilisés. Le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> expression a une priorité plus faible par rapport à la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> expression. Toutefois, notez que moins de poids est attribué aux expressions de chaîne qui utilisent des caractères génériques. Par exemple, si le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propriété est définie sur « *. BackColor » et la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriété est définie sur <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, tous les B`ackColor` propriétés à l’exception de <xref:System.Web.UI.DataVisualization.Charting.ChartArea> objets sont sérialisés.  
  
 Si le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriété a été définie, la priorité dépend de combien les caractères génériques sont utilisés dans le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> expression. Par exemple, si le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriété <xref:System.Web.UI.DataVisualization.Charting.SerializationContents.Appearance> entraîne le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propriété contenant un «\*. Retour\*« expression. Si le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriété est définie sur «\*. Retour\*», tous les `Back*` propriétés du graphique comme `BackColor`, `BackGradient`, et ainsi de suite, seront sérialisées. Il s’agit, car le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> valeur de la propriété a une priorité plus élevée par rapport à la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriété.  
  
 Cette propriété affecte toutes les enregistrement, charger et opérations de réinitialisation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="chartSerializer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Réinitialise toutes les propriétés de graphique marquées pour la sérialisation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, cette méthode réinitialise toutes les propriétés de graphique à leurs valeurs par défaut.  
  
 Pour limiter les propriétés de graphique sont réinitialisées à leurs valeurs par défaut, utilisez le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> et <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriétés.  
  
 Notez que cette méthode est également appelée automatiquement lorsqu’un `Load` méthode est utilisée et la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> propriété est définie sur `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Enregistre des propriétés de graphique dont les valeurs ne sont pas par défaut. Toutes les propriétés de graphique peuvent être sérialisées, y compris les données.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream -&gt; unit" Usage="chartSerializer.Save stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Objet dérivé de la classe <see cref="T:System.IO.Stream" />, tel que <see cref="T:System.IO.MemoryStream" />, qui est utilisé pour enregistrer les propriétés de graphique.</param>
        <summary>Enregistre les données et propriétés de graphique avec des valeurs autres que celles par défaut dans un objet qui est dérivé de la classe <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, toutes les propriétés de graphique avec des valeurs par défaut, qui inclut les points de données, seront sérialisées lorsque cette méthode est appelée. Pour contrôler les caractéristiques du graphique à sérialiser, utilisez le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> et <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriétés.  
  
 Si cette méthode est utilisée pour enregistrer les propriétés d’apparence en tant que modèle, assurez-vous que le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> propriété de la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> objet est d’abord défini `true` avant d’appeler cette méthode.  
  
 Sérialisation d’un graphique en tant que modèle se produit différemment de la sérialisation de non-modèle ; sérialisation de modèle se concentre sur les propriétés d’apparence.  
  
 Lorsqu’un modèle est sérialisé, le <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> méthode peut être utilisée pour charger le modèle, pour fournir les propriétés d’apparence d’un graphique.  
  
 Modèles peuvent être utilisés pour simuler des palettes personnalisées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objet dérivé de la classe <see cref="T:System.IO.TextWriter" /> (par exemple, <see cref="T:System.IO.StringWriter" />) qui est utilisé pour enregistrer les propriétés de graphique.</param>
        <summary>Enregistre les données et propriétés de graphique avec des valeurs autres que celles par défaut dans l'objet indiqué qui est dérivé de la classe <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, toutes les propriétés de graphique avec des valeurs par défaut, qui inclut les points de données, seront sérialisées lorsque cette méthode est appelée. Pour contrôler les caractéristiques de graphique sont sérialisées, utilisez le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> et <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriétés.  
  
 Lorsque vous utilisez cette définition, le format doit être XML ; le format peut être défini avec la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> propriété.  
  
 Si le <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> propriété de la <xref:System.Web.UI.DataVisualization.Charting.Chart> contrôle est utilisé pour conserver l’état, cette méthode peut être utilisée pour enregistrer les données sérialisées dans un objet dérivé <xref:System.IO.TextWriter>, qui est ensuite utilisé pour écrire les données à le <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="chartSerializer.Save fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Chemin d'accès relatif ou absolu du fichier utilisé pour stocker les données sérialisées. Notez que si un chemin d'accès relatif est spécifié, il est relatif par rapport au répertoire actif.</param>
        <summary>Enregistre les données et propriétés de graphique avec les valeurs non définies par défaut dans le fichier donné.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut toutes les propriétés de graphique avec des valeurs par défaut, qui inclut les points de données, seront sérialisées lorsque cette méthode est appelée. Pour contrôler les caractéristiques du graphique pour être sérialisée utilisation le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> et <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriétés.  
  
 Par défaut, les données sont enregistrées dans un format XML. Pour enregistrer les données dans un format binaire, utilisez le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> propriété.  
  
 Notez que les autorisations d’écriture doivent être activées pour le répertoire dans lequel le fichier est stocké. Par défaut, il s’agit du dossier Bin de l’application.  
  
 Si cette méthode est utilisée pour enregistrer les propriétés d’apparence en tant que modèle, assurez-vous que le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> propriété a la valeur tout d’abord `true` avant d’appeler cette méthode.  
  
 Sérialisation d’un graphique en tant que modèle se déroule différemment de la sérialisation de non-modèle, principalement parce que la sérialisation de modèle se concentre sur les propriétés d’apparence.  
  
 Lorsqu’un modèle est sérialisé, le <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> méthode peut être utilisée pour charger le modèle, pour fournir les propriétés d’apparence d’un graphique.  
  
 Modèles peuvent être utilisés pour simuler des palettes personnalisées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Xml.XmlWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objet dérivé de la classe <see cref="T:System.Xml.XmlWriter" /> qui est utilisé pour enregistrer les propriétés <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</param>
        <summary>Enregistre les données et propriétés de graphique avec des valeurs autres que celles par défaut dans l'objet indiqué qui est dérivé de la classe <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, toutes les propriétés de graphique avec des valeurs par défaut, qui inclut les points de données, seront sérialisées lorsque cette méthode est appelée. Pour contrôler les caractéristiques de graphique sont sérialisées, utilisez le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> et <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriétés.  
  
 Lorsque vous utilisez cette définition, le format doit être XML ; le format peut être modifié avec la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> propriété.  
  
 Lorsque vous travaillez avec des fichiers texte au format XML, à des fins de simplicité la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> méthode à la place.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializableContent">
      <MemberSignature Language="C#" Value="public string SerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les propriétés de graphique qui peuvent être sérialisées.</summary>
        <value>Expression <see langword="string" /> séparée par des virgules qui représente les propriétés de graphique à sérialiser. La syntaxe est "Class.Property[,Class.Property]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, toutes les propriétés de graphique seront sérialisées lorsque le `Save` et `Load` méthodes sont appelées. Vous pouvez utiliser la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriété afin de limiter les caractéristiques de graphique à sérialiser, ainsi que par le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> et <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriétés.  
  
 Le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propriété détermine les caractéristiques de graphique seront sérialisées. Caractères génériques peuvent être utilisés dans l’expression de chaîne, de la même manière que le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriété. Par exemple, pour sérialiser tous les graphiques `BackColor` propriétés, définissez cette propriété sur « *. BackColor ».  
  
 Si <xref:System.Web.UI.DataVisualization.Charting.ChartArea> et/ou <xref:System.Web.UI.DataVisualization.Charting.Series> enfant propriétés sont spécifiées, puis les noms de tous les <xref:System.Web.UI.DataVisualization.Charting.ChartArea> et <xref:System.Web.UI.DataVisualization.Charting.Series> objets doivent également être spécifiés pour activer les données persistantes à appliquer à un élément existant <xref:System.Web.UI.DataVisualization.Charting.ChartArea> et <xref:System.Web.UI.DataVisualization.Charting.Series> objets ; Autrement dit, vous devez spécifier des expressions expressions « Series.Name » et « ChartArea.Name ». Consultez l’exemple de code ci-dessous pour obtenir un exemple de cette procédure. De même, si plusieurs zones de graphique sont utilisées, le <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> propriété de tous les tracés <xref:System.Web.UI.DataVisualization.Charting.Series> doit également être enregistrée.  
  
 Parfois, une propriété peut être définie pour être sérialisée et pas sérialisés, ce qui est courant lorsque des caractères génériques sont utilisés. Le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> expression a une priorité plus faible par rapport à la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> expression. Toutefois, notez que moins de poids est attribué aux expressions de chaîne qui utilisent des caractères génériques. Par exemple, si le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propriété est définie sur « *. BackColor » et la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> propriété est définie sur <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, tous les B`ackColor` propriétés à l’exception de <xref:System.Web.UI.DataVisualization.Charting.ChartArea> objets sont sérialisés.  
  
 Si vous définissez la <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriété, le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propriété sera définie en interne. Si le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> propriété est déjà définie mais une autre propriété doit être sérialisée, assurez-vous de concaténer le <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> propriété lors de la spécification de cette propriété supplémentaire. Consultez l’exemple de code ci-dessous pour obtenir un exemple de cette procédure.  
  
 Cette propriété affecte toutes les enregistrement, charger et opérations de réinitialisation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>