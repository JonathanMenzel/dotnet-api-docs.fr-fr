<Type Name="DataPointCollection" FullName="System.Web.UI.DataVisualization.Charting.DataPointCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8771c6746ea9b25bcc0108e521e08c4ef4dd3c66" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53222354" /></Metadata><TypeSignature Language="C#" Value="public class DataPointCollection : System.Web.UI.DataVisualization.Charting.ChartElementCollection&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataPointCollection extends System.Web.UI.DataVisualization.Charting.ChartElementCollection`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DataPointCollection&#xA;Inherits ChartElementCollection(Of DataPoint)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataPointCollection : System::Web::UI::DataVisualization::Charting::ChartElementCollection&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt;" />
  <TypeSignature Language="F#" Value="type DataPointCollection = class&#xA;    inherit ChartElementCollection&lt;DataPoint&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.ChartElementCollection&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">System.Web.UI.DataVisualization.Charting.DataPoint</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente une collection d'objets <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection> classe représente une collection de <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objets, qui à son tour représentent les points de données qui font partie d’un <xref:System.Web.UI.DataVisualization.Charting.Series> objet.  
  
 Cette classe de collection est implémentée en tant que le <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> propriété d’un <xref:System.Web.UI.DataVisualization.Charting.Series> objet.  
  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objets peuvent être ajoutés ou insérés dans la collection avec leurs valeurs de X et Y-valeur (s) déjà spécifié en tant que paramètres. Notez qu’ils sont également ajoutés automatiquement lorsqu’une série est liée à une source de données à l’aide du <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY%2A> ou <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY%2A> (méthode).  
  
 Points de données sont tracées dans l’ordre où ils apparaissent dans cette collection uniquement si la série à laquelle appartient la collection a son <xref:System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed%2A> propriété définie sur `true` (la valeur par défaut est `false`), ou si toutes les valeurs X pour tous les points de données sont égales à zéro. Sinon, les points de données sont tracés à l’aide de leurs valeurs X.  
  
 Points de données peuvent être localisés et manipulés, basés sur X maximale, minimale ou spécifié ou à l’aide de surchargées de valeurs Y `FindMaxValue`, `FindMinValue` ou `FindValue` méthodes, respectivement.  
  
 Le [DataPointCollection.Count](<xref:System.Collections.ObjectModel.Collection%601.Count%2A>) propriété indique le nombre total d’éléments dans la collection et est couramment utilisée pour rechercher la limite supérieure de la collection.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint Add (params double[] y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint Add(float64[] y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.Add(System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ParamArray y As Double()) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ Add(... cli::array &lt;double&gt; ^ y);" />
      <MemberSignature Language="F#" Value="override this.Add : double[] -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.Add y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="y">Valeur Y.</param>
        <summary>Ajoute un nouvel objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> à la collection et définit sa valeur Y.</summary>
        <returns>Nouvel objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> .</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddXY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute un objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> à la fin de la collection avec la valeur X et la ou les valeurs Y spécifiées.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddXY">
      <MemberSignature Language="C#" Value="public int AddXY (double xValue, double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddXY(float64 xValue, float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddXY(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddXY (xValue As Double, yValue As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddXY(double xValue, double yValue);" />
      <MemberSignature Language="F#" Value="member this.AddXY : double * double -&gt; int" Usage="dataPointCollection.AddXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="xValue">Valeur X du point de données.</param>
        <param name="yValue">Valeur Y du point de données.</param>
        <summary>Ajoute un objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> à la fin de la collection avec les valeurs X et Y spécifiées.</summary>
        <returns><see langword="integer" /> qui représente l'index de base zéro où l'élément a été inséré dans la collection de point de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ajoute <xref:System.Web.UI.DataVisualization.Charting.DataPoint> de l’objet à le <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; l’objet est toujours ajoutée à la fin de la collection.  
  
 Utilisez le <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddXY%2A> surcharge de méthode si vos points de données requièrent plusieurs valeurs Y.  
  
 Si vos points de données est inutile une valeur X - autrement dit, si vous créez des nuages - utiliser le <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY%2A> méthode à la place.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddXY">
      <MemberSignature Language="C#" Value="public int AddXY (object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddXY(object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddXY(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddXY (xValue As Object, ParamArray yValue As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddXY(System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.AddXY : obj * obj[] -&gt; int" Usage="dataPointCollection.AddXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">Valeur X du point de données.</param>
        <param name="yValue">Une ou plusieurs valeurs séparées par des virgules qui représentent les valeurs Y du point de données.</param>
        <summary>Ajoute un objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> à la fin de la collection avec la valeur X et la ou les valeurs Y spécifiées.</summary>
        <returns>Valeur <see langword="integer" /> qui représente l'index de base zéro au sein duquel l'élément a été inséré dans la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ajoute une <xref:System.Web.UI.DataVisualization.Charting.DataPoint> de l’objet à le <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; le point de données est toujours ajouté à la fin de la collection.  
  
 Vous devez fournir au moins un (1) valeur Y, sinon une exception sera levée. Cette méthode vérifie également la <xref:System.Web.UI.DataVisualization.Charting.Series.YValueType%2A> propriété de la <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection> de l’objet auquel ces données ; si trop de valeurs Y sont spécifiées, une exception sera levée.  
  
 Dans l’ordre pour <xref:System.DateTime> mise en forme pour avoir un effet, une valeur doit être un <xref:System.DateTime> objet.  
  
 Si vos points de données est inutile une valeur X - autrement dit, si vous créez des nuages - utiliser le <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY%2A> méthode à la place  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute un objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> à la fin de la collection avec la ou les valeurs Y spécifiées.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddY">
      <MemberSignature Language="C#" Value="public int AddY (double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddY(float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddY (yValue As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddY(double yValue);" />
      <MemberSignature Language="F#" Value="member this.AddY : double -&gt; int" Usage="dataPointCollection.AddY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="yValue">Valeur Y du point de données.</param>
        <summary>Ajoute un objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> à la fin de la collection avec la valeur Y spécifiée.</summary>
        <returns><see langword="integer" /> qui représente l'index de base zéro où l'élément a été inséré dans la collection de point de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ajoute une <xref:System.Web.UI.DataVisualization.Charting.DataPoint> de l’objet à le <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; le point de données est toujours ajouté à la fin de la collection.  
  
 Utilisez la définition de méthode qui permet à un tableau de valeurs Y si vos points de données requièrent plusieurs valeurs Y.  
  
 Si vos points de données ont besoin d’une valeur X - autrement dit, si vous créez des nuages - utilisez une de le `AddXY` méthodes à la place.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddY">
      <MemberSignature Language="C#" Value="public int AddY (params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddY(object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddY (ParamArray yValue As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddY(... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.AddY : obj[] -&gt; int" Usage="dataPointCollection.AddY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">Liste séparée par des virgules des valeurs Y de l'objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ajouté à la collection.</param>
        <summary>Ajoute un objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> à la fin de la collection avec la ou les valeurs Y spécifiées.</summary>
        <returns>Valeur <see langword="integer" /> qui représente l'emplacement au sein de l'index de base zéro où l'élément a été inséré dans la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ajoute une <xref:System.Web.UI.DataVisualization.Charting.DataPoint> de l’objet à le <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; le point de données est toujours ajouté à la fin de la collection.  
  
 Vous devez fournir au moins un (1) valeur Y, sinon une exception sera levée. Cette méthode vérifie également la <xref:System.Web.UI.DataVisualization.Charting.Series.ChartType%2A> propriété de la <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objet auquel appartient cette données ; si trop de valeurs Y sont spécifiées, une exception sera levée.  
  
 La valeur X sera toujours être définie sur zéro (0), ce qui entraîne non nuages. Si vous souhaitez que les points de données à utiliser une valeur X, appelez une de la `AddXY` méthodes à la place.  
  
 Dans l’ordre pour <xref:System.DateTime> mise en forme pour avoir un effet, une valeur doit être un <xref:System.DateTime> objet.  
  
 Reportez-vous à ce qui suit pour obtenir la liste complète des types .NET Framework valides qui peut être utilisé pour les paramètres de type d’objet :  
  
||||  
|-|-|-|  
|Chaîne|DateTime|Double|  
|Decimal|Single|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public void DataBind (System.Collections.IEnumerable dataSource, string xField, string yFields, string otherFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBind(class System.Collections.IEnumerable dataSource, string xField, string yFields, string otherFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBind(System.Collections.IEnumerable,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBind (dataSource As IEnumerable, xField As String, yFields As String, otherFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBind(System::Collections::IEnumerable ^ dataSource, System::String ^ xField, System::String ^ yFields, System::String ^ otherFields);" />
      <MemberSignature Language="F#" Value="member this.DataBind : System.Collections.IEnumerable * string * string * string -&gt; unit" Usage="dataPointCollection.DataBind (dataSource, xField, yFields, otherFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">Source de données.</param>
        <param name="xField">Nom du champ correspondant aux valeurs X.</param>
        <param name="yFields">Noms séparés par des virgules des champs correspondant aux valeurs Y.</param>
        <param name="otherFields">Autres propriétés de points de données avec des règles de liaison, au format : PointProperty=Field[{Format}] [,PointProperty=Field[{Format}]].  
  
Par exemple : "Tooltip=Price{C1},Url=WebSiteName".</param>
        <summary>Lie la valeur X, la ou les valeurs Y et les valeurs de propriétés des points de données (par exemple, ToolTip ou LabelStyle) à la source de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La source de données peut être Ole (SQL) DataReader, DataView, DataSet, DataTable ou DataRow.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindXY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lie la valeur X et les valeurs Y des points de données de la collection aux premières colonnes de la source de données spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindXY">
      <MemberSignature Language="C#" Value="public void DataBindXY (System.Collections.IEnumerable xValue, params System.Collections.IEnumerable[] yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindXY(class System.Collections.IEnumerable xValue, class System.Collections.IEnumerable[] yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.Collections.IEnumerable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindXY (xValue As IEnumerable, ParamArray yValues As IEnumerable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindXY(System::Collections::IEnumerable ^ xValue, ... cli::array &lt;System::Collections::IEnumerable ^&gt; ^ yValues);" />
      <MemberSignature Language="F#" Value="member this.DataBindXY : System.Collections.IEnumerable * System.Collections.IEnumerable[] -&gt; unit" Usage="dataPointCollection.DataBindXY (xValue, yValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yValues" Type="System.Collections.IEnumerable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">Source de données qui fournit les valeurs X pour les points de données.</param>
        <param name="yValues">Liste séparée par des virgules des valeurs Y de l'objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ajouté à la collection.</param>
        <summary>Lie la valeur X et les valeurs Y des points de données de la collection aux premières colonnes de la source de données spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode lie tous les <xref:System.Web.UI.DataVisualization.Charting.DataPoint> des objets dans un <xref:System.Web.UI.DataVisualization.Charting.Series>, et utilise séparer les sources de données pour les coordonnées X et Y-ou les valeurs.  
  
 Notez que la première colonne disponible dans la source de données sera utilisée si la liaison de données à une table. Pour lier à une colonne autre que la première colonne, utilisez le <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY%2A> (méthode).  
  
 Vous pouvez lier à plusieurs valeurs Y en fournissant une liste séparée par des virgules de <xref:System.Collections.Generic.IEnumerable%601> des objets pour le `yValues` paramètre.  
  
 Si les valeurs Y ne sont pas fournies par la source de données, ou si un nombre incorrect de valeurs est fourni, une exception est levée.  
  
 Si vous ne souhaitez pas afficher des nuages, dans lequel les valeurs X et Y sont utilisées, utilisez une de le `DataBindY` méthodes à la place.  
  
 Voici une liste d’objets que vous pouvez utiliser en tant que le paramètre de source de données :  
  
-   DataView  
  
-   Lecteurs de données (SQL, OleDB).  
  
-   Tableaux  
  
-   Listes  
  
-   Tous les autres objets qui utilisent le <xref:System.Collections.Generic.IEnumerable%601> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindXY">
      <MemberSignature Language="C#" Value="public void DataBindXY (System.Collections.IEnumerable xValue, string xField, System.Collections.IEnumerable yValue, string yFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindXY(class System.Collections.IEnumerable xValue, string xField, class System.Collections.IEnumerable yValue, string yFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.String,System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindXY (xValue As IEnumerable, xField As String, yValue As IEnumerable, yFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindXY(System::Collections::IEnumerable ^ xValue, System::String ^ xField, System::Collections::IEnumerable ^ yValue, System::String ^ yFields);" />
      <MemberSignature Language="F#" Value="member this.DataBindXY : System.Collections.IEnumerable * string * System.Collections.IEnumerable * string -&gt; unit" Usage="dataPointCollection.DataBindXY (xValue, xField, yValue, yFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xValue">Source de données qui fournit les valeurs X pour les points de données.</param>
        <param name="xField">Nom de la colonne qui fournit les valeurs X des points de données.</param>
        <param name="yValue">Liste séparée par des virgules des valeurs Y de l'objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ajouté à la collection.</param>
        <param name="yFields">Liste séparée par des virgules des noms de colonnes qui fournissent les valeurs Y des points de données. Notez qu'il est possible d'insérer une virgule dans le nom d'une colonne au moyen d'une double virgule.</param>
        <summary>Lie la valeur X et les valeurs Y des points de données de la collection aux colonnes indiquées des sources de données spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lie la valeur X et les valeurs Y des points de données de la collection aux premières colonnes de la source de données spécifiée.  
  
 Vous pouvez lier à plusieurs valeurs Y en définissant le `yFields` paramètre à plusieurs noms de colonnes. Séparez les noms de colonnes par des virgules.  
  
 Si les valeurs Y ne sont pas fournies par la source de données, ou si un nombre incorrect de valeurs est fourni, une exception est levée.  
  
 Si vous ne souhaitez pas afficher des nuages, dans lequel les valeurs X et Y sont utilisées, utilisez une de le `DataBindY` méthodes à la place.  
  
 Voici une liste d’objets que vous pouvez utiliser en tant que le paramètre de source de données :  
  
-   DataView  
  
-   Lecteurs de données (SQL, OleDB).  
  
-   Tableaux  
  
-   Listes  
  
-   Tous les autres objets qui utilisent le <xref:System.Collections.Generic.IEnumerable%601> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lie la ou les valeurs Y des points de données de la collection à la première colonne de la ou des sources de données spécifiées.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindY">
      <MemberSignature Language="C#" Value="public void DataBindY (params System.Collections.IEnumerable[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindY(class System.Collections.IEnumerable[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY(System.Collections.IEnumerable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindY (ParamArray yValue As IEnumerable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindY(... cli::array &lt;System::Collections::IEnumerable ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.DataBindY : System.Collections.IEnumerable[] -&gt; unit" Usage="dataPointCollection.DataBindY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Collections.IEnumerable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">Un ou plusieurs sources de données <see cref="T:System.Collections.Generic.IEnumerable`1" /> séparées par des virgules.</param>
        <summary>Lie la ou les valeurs Y des points de données de la collection à la première colonne de la ou des sources de données spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lie la ou les valeurs Y des points de données de la collection à la première colonne de la ou des sources de données spécifiées.  
  
 Pour lier des valeurs Y à une colonne de source de données qui n’est pas la première colonne disponible, utilisez le <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY%2A> (méthode).  
  
 Vous pouvez lier plusieurs valeurs Y en spécifiant plusieurs sources de données à l’aide de le `yValue` paramètre. Notez que la première colonne disponible dans chaque source de données sera utilisée pour les valeurs Y consécutives de chaque point de données. Par exemple, la première colonne de la première <xref:System.Collections.Generic.IEnumerable%601> source de données sera liée à la première valeur Y de points de données, la première colonne de la seconde <xref:System.Collections.Generic.IEnumerable%601> source de données est lié à la deuxième valeur Y de points de données et ainsi de suite.  
  
 Si les valeurs Y ne sont pas fournies par la source de données, ou si un nombre incorrect de valeurs est fourni, une exception est levée.  
  
 Voici une liste d’objets que vous pouvez utiliser en tant que le paramètre de source de données :  
  
 Voici une liste d’objets que vous pouvez utiliser comme source de données :  
  
-   DataView  
  
-   Lecteurs de données (SQL, OleDB).  
  
-   Tableaux  
  
-   Listes  
  
-   Tous les autres objets qui utilisent le <xref:System.Collections.Generic.IEnumerable%601> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindY">
      <MemberSignature Language="C#" Value="public void DataBindY (System.Collections.IEnumerable yValue, string yFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindY(class System.Collections.IEnumerable yValue, string yFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY(System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindY (yValue As IEnumerable, yFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindY(System::Collections::IEnumerable ^ yValue, System::String ^ yFields);" />
      <MemberSignature Language="F#" Value="member this.DataBindY : System.Collections.IEnumerable * string -&gt; unit" Usage="dataPointCollection.DataBindY (yValue, yFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="yValue">Objet de source de données <see cref="T:System.Collections.Generic.IEnumerable`1" /> qui fournit les valeurs Y.</param>
        <param name="yFields">Champ(s) de la source de données au(x)quel(s) le ou les points de données doivent être liés. Notez qu'il est possible d'insérer une virgule dans le nom d'une colonne au moyen d'une double virgule.</param>
        <summary>Lie la ou les valeurs Y des points de données à la ou aux colonnes indiquées de la source de données spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode lie les valeurs Y des points de données dans la collection pour les champs spécifiés (s) de la source de données.  
  
 Pour lier uniquement sur le premier champ dans une source de données, utilisez le <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY%2A> (méthode).  
  
 Vous pouvez lier à plusieurs champs en définissant le `yFields` paramètre à plusieurs noms de champs qui sont séparés par des virgules. Notez que le premier champ est utilisé pour première valeur le point de données Y, le deuxième champ nommé sera utilisé pour deuxième valeur du point de données Y et ainsi de suite.  
  
 Si les valeurs Y ne sont pas fournies par la source de données, ou un nombre incorrect de valeurs est fourni, une exception sera levée.  
  
 Voici une liste d’objets que vous pouvez utiliser comme source de données :  
  
-   DataView  
  
-   Lecteurs de données (SQL, OleDB).  
  
-   Tableaux  
  
-   Listes  
  
-   Tous les autres objets qui utilisent le <xref:System.Collections.Generic.IEnumerable%601> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recherche tous les points de données qui correspondent à la valeur spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllByValue (valueToFind As Double) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double -&gt; seq&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue valueToFind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Valeur du point de données à rechercher.</param>
        <summary>Recherche tous les points de données qui correspondent à la valeur spécifiée.</summary>
        <returns>Interface <see cref="T:System.Collections.Generic.IEnumerable`1" /> qui représente l'énumérateur des points de données correspondants.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind, string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind, string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function FindAllByValue (valueToFind As Double, useValue As String) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind, System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double * string -&gt; seq&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue (valueToFind, useValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__23))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Valeur du point de données à rechercher.</param>
        <param name="useValue">Valeur du point de données à utiliser (X, Y1, Y2...).</param>
        <summary>Recherche tous les points de données qui correspondent à la valeur spécifiée.</summary>
        <returns>Interface <see cref="T:System.Collections.Generic.IEnumerable`1" /> qui représente l'énumérateur des points de données correspondants.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind, string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind, string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function FindAllByValue (valueToFind As Double, useValue As String, startIndex As Integer) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind, System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double * string * int -&gt; seq&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue (valueToFind, useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__22))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Valeur du point de données à rechercher.</param>
        <param name="useValue">Valeur du point de données à utiliser (X, Y1, Y2...).</param>
        <param name="startIndex">Emplacement d'index du point de données à partir duquel commencer la recherche.</param>
        <summary>Recherche tous les points de données qui correspondent à la valeur spécifiée, à partir de l'emplacement d'index spécifié.</summary>
        <returns>Interface <see cref="T:System.Collections.Generic.IEnumerable`1" /> qui représente l'énumérateur des points de données correspondants.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recherche le point de données égal à la valeur spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindByValue (double valueToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue valueToFind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Valeur du point de données à rechercher.</param>
        <summary>Recherche le point de données égal à la valeur spécifiée.</summary>
        <returns>Objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> qui correspond à la valeur spécifiée ou <see langword="null" /> en l'absence de correspondance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindByValue (double valueToFind, string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind, string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double, useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind, System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double * string -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue (valueToFind, useValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Valeur du point de données à rechercher.</param>
        <param name="useValue">Valeur du point de données à utiliser (X, Y1, Y2...).</param>
        <summary>Recherche le point de données égal à la valeur spécifiée.</summary>
        <returns>Objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> qui correspond à la valeur spécifiée ou <see langword="null" /> en l'absence de correspondance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindByValue (double valueToFind, string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind, string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double, useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind, System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double * string * int -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue (valueToFind, useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Valeur du point de données à rechercher.</param>
        <param name="useValue">Valeur du point de données à utiliser (X, Y1, Y2...).</param>
        <param name="startIndex">Emplacement d'index du point de données à partir duquel commencer la recherche.</param>
        <summary>Recherche le premier point de données qui correspond à la valeur spécifiée, à partir de l'emplacement d'index indiqué.</summary>
        <returns>Objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> qui correspond à la valeur spécifiée ou <see langword="null" /> en l'absence de correspondance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMaxByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recherche le point de données ayant la valeur maximale.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMaxByValue();" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : unit -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recherche le point de données ayant la valeur maximale.</summary>
        <returns>Objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ayant la valeur maximale.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue (string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue(string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue (useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMaxByValue(System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : string -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue useValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="useValue">Valeur du point de données à utiliser (X, Y1, Y2...).</param>
        <summary>Recherche la valeur de point de données correspondant à la valeur maximale.</summary>
        <returns>Objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ayant la valeur maximale.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue (string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue(string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue (useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMaxByValue(System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : string * int -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue (useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="useValue">Valeur du point de données à utiliser (X, Y1, Y2...).</param>
        <param name="startIndex">Emplacement d'index du point de données à partir duquel commencer la recherche.</param>
        <summary>Recherche le point de données ayant la valeur maximale, à partir de l'emplacement d'index spécifié.</summary>
        <returns>Objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ayant la valeur maximale.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMinByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recherche le point de données ayant la valeur minimale.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMinByValue();" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : unit -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recherche le point de données ayant la valeur minimale.</summary>
        <returns>Objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ayant la valeur minimale.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue (string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue(string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue (useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMinByValue(System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : string -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue useValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="useValue">Valeur du point de données à utiliser (X, Y1, Y2...).</param>
        <summary>Recherche le point de données ayant la valeur minimale.</summary>
        <returns>Objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ayant la valeur minimale.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue (string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue(string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue (useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMinByValue(System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : string * int -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue (useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="useValue">Valeur du point de données à utiliser (X, Y1, Y2...).</param>
        <param name="startIndex">Emplacement d'index du point de données à partir duquel commencer la recherche.</param>
        <summary>Recherche le point de données ayant la valeur minimale, à partir de l'emplacement d'index spécifié.</summary>
        <returns>Objet <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ayant la valeur minimale.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertXY">
      <MemberSignature Language="C#" Value="public void InsertXY (int index, object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertXY(int32 index, object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.InsertXY(System.Int32,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertXY (index As Integer, xValue As Object, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertXY(int index, System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.InsertXY : int * obj * obj[] -&gt; unit" Usage="dataPointCollection.InsertXY (index, xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">L'index après lequel le point de données sera inséré.</param>
        <param name="xValue">Valeur X du point de données.</param>
        <param name="yValue">Liste séparée par des virgules contenant les valeurs Y du point de données.</param>
        <summary>Insère un point de données avec la valeur X et une ou plusieurs valeurs Y spécifiées.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertY">
      <MemberSignature Language="C#" Value="public void InsertY (int index, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertY(int32 index, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.InsertY(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertY (index As Integer, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertY(int index, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.InsertY : int * obj[] -&gt; unit" Usage="dataPointCollection.InsertY (index, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">L'index après lequel le point de données sera inséré.</param>
        <param name="yValue">Liste séparée par des virgules contenant les valeurs Y du point de données.</param>
        <summary>Insère un point de données avec une ou plusieurs valeurs Y spécifiées.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>