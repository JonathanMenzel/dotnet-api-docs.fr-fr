<Type Name="StripLine" FullName="System.Web.UI.DataVisualization.Charting.StripLine">
  <Metadata><Meta Name="ms.openlocfilehash" Value="99dc58d3d5cabf7df8afb7b3d742a1bd1cc0a953" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53227541" /></Metadata><TypeSignature Language="C#" Value="public class StripLine : System.Web.UI.DataVisualization.Charting.ChartElement, System.Web.UI.DataVisualization.Charting.IChartMapArea" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StripLine extends System.Web.UI.DataVisualization.Charting.ChartElement implements class System.Web.UI.DataVisualization.Charting.IChartMapArea" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.StripLine" />
  <TypeSignature Language="VB.NET" Value="Public Class StripLine&#xA;Inherits ChartElement&#xA;Implements IChartMapArea" />
  <TypeSignature Language="C++ CLI" Value="public ref class StripLine : System::Web::UI::DataVisualization::Charting::ChartElement, System::Web::UI::DataVisualization::Charting::IChartMapArea" />
  <TypeSignature Language="F#" Value="type StripLine = class&#xA;    inherit ChartElement&#xA;    interface IChartMapArea" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.ChartElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.DataVisualization.Charting.IChartMapArea</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("IntervalOffset")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="316e7-101">Représente les franges d'un graphique.</span><span class="sxs-lookup"><span data-stu-id="316e7-101">Represents the strip lines on a chart.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-102">Franges, les franges sont des plages horizontales ou verticales qui assombrissent l’arrière-plan d’un graphique en intervalles réguliers ou personnalisés.</span><span class="sxs-lookup"><span data-stu-id="316e7-102">Strip lines, or strips, are horizontal or vertical ranges that shade the background of a chart in regular or custom intervals.</span></span> <span data-ttu-id="316e7-103">Vous pouvez utiliser des franges pour :</span><span class="sxs-lookup"><span data-stu-id="316e7-103">You can use strip lines to:</span></span>  
  
-   <span data-ttu-id="316e7-104">Améliorer la lisibilité des valeurs individuelles sur le graphique.</span><span class="sxs-lookup"><span data-stu-id="316e7-104">Improve readability for looking up individual values on the chart.</span></span>  
  
-   <span data-ttu-id="316e7-105">Séparez les points de données lors de la lecture du graphique.</span><span class="sxs-lookup"><span data-stu-id="316e7-105">Separate data points when reading the chart.</span></span>  
  
-   <span data-ttu-id="316e7-106">Mettez en surbrillance des dates qui se produisent à intervalles réguliers, par exemple, pour identifier les données de week-end pointe.</span><span class="sxs-lookup"><span data-stu-id="316e7-106">Highlight dates that occur at regular intervals, for example, to identify weekend data points.</span></span>  
  
-   <span data-ttu-id="316e7-107">Mettez en surbrillance une plage clé spécifique de données.</span><span class="sxs-lookup"><span data-stu-id="316e7-107">Highlight a specific key range of data.</span></span>  
  
-   <span data-ttu-id="316e7-108">Ajoutez une ligne de seuil à une valeur de constante spécifique.</span><span class="sxs-lookup"><span data-stu-id="316e7-108">Add a threshold line at a specific constant value.</span></span>  
  
 <span data-ttu-id="316e7-109">Un seul <xref:System.Web.UI.DataVisualization.Charting.StripLine> de l’objet peut être dessiné une seule fois ou à plusieurs reprises, pour un intervalle donné.</span><span class="sxs-lookup"><span data-stu-id="316e7-109">A single <xref:System.Web.UI.DataVisualization.Charting.StripLine> object can either be drawn once, or repeatedly, for a given interval.</span></span> <span data-ttu-id="316e7-110">Cette action est contrôlée par le <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="316e7-110">This action is controlled by the <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> property.</span></span> <span data-ttu-id="316e7-111">Lorsque la valeur -1 est affectée à la <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> propriété, une frange ligne sera dessinée.</span><span class="sxs-lookup"><span data-stu-id="316e7-111">When a value of -1 is assigned to the <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> property, one strip line will be drawn.</span></span> <span data-ttu-id="316e7-112">Quand une valeur différente de zéro est affectée à la <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> propriété, une frange est dessinée à plusieurs reprises selon chaque intervalle donné.</span><span class="sxs-lookup"><span data-stu-id="316e7-112">When a non-zero value is assigned to the <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> property, a strip line will be drawn repeatedly at each given interval.</span></span> <span data-ttu-id="316e7-113">L’emplacement où une frange est dessinée est également affecté par le <xref:System.Web.UI.DataVisualization.Charting.StripLine.IntervalOffset%2A> et <xref:System.Web.UI.DataVisualization.Charting.StripLine.IntervalOffsetType%2A> propriétés de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-113">The location where a strip line is drawn is also affected by the <xref:System.Web.UI.DataVisualization.Charting.StripLine.IntervalOffset%2A> and <xref:System.Web.UI.DataVisualization.Charting.StripLine.IntervalOffsetType%2A> properties of the strip line.</span></span>  
  
 <span data-ttu-id="316e7-114">Franges sont toujours associées avec un <xref:System.Web.UI.DataVisualization.Charting.Axis> objet.</span><span class="sxs-lookup"><span data-stu-id="316e7-114">Strip lines are always associated with an <xref:System.Web.UI.DataVisualization.Charting.Axis> object.</span></span> <span data-ttu-id="316e7-115">Ils peuvent être ajoutés au moment du design et le moment de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="316e7-115">They can be added at both design time and run time.</span></span>  
  
 <span data-ttu-id="316e7-116">Pour ajouter une ligne horizontale ou verticale afin d’afficher un seuil, définissez le <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> propriété à une valeur de 0.0.</span><span class="sxs-lookup"><span data-stu-id="316e7-116">To add a horizontal or vertical line to display a threshold, set the <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> property to a value of 0.0.</span></span> <span data-ttu-id="316e7-117">Ainsi, une ligne est dessinée.</span><span class="sxs-lookup"><span data-stu-id="316e7-117">This will result in a line being drawn.</span></span> <span data-ttu-id="316e7-118">Vous pouvez utiliser la <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderColor%2A>, <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderDashStyle%2A> et <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderWidth%2A> propriétés pour la couleur, la largeur et le style de la ligne.</span><span class="sxs-lookup"><span data-stu-id="316e7-118">You can use the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderColor%2A>, <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderDashStyle%2A> and <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderWidth%2A> properties for the color, width and style of the line.</span></span> <span data-ttu-id="316e7-119">Aucune propriété d’arrière-plan de graphique (`Back*`) sont utilisés lorsque le <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> propriété a la valeur 0.0.</span><span class="sxs-lookup"><span data-stu-id="316e7-119">No chart background properties (`Back*`) are used when the <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to 0.0.</span></span>  
  
 <span data-ttu-id="316e7-120">Utilisez le <xref:System.Web.UI.DataVisualization.Charting.StripLine.Text%2A> propriété de la frange pour associer du texte avec une frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-120">Use the <xref:System.Web.UI.DataVisualization.Charting.StripLine.Text%2A> property of the strip line to associate text with a strip line.</span></span> <span data-ttu-id="316e7-121">La position et l’orientation de ce texte peuvent être contrôlés par le <xref:System.Web.UI.DataVisualization.Charting.StripLine.TextAlignment%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="316e7-121">The placement and orientation of this text can be controlled by the <xref:System.Web.UI.DataVisualization.Charting.StripLine.TextAlignment%2A> property.</span></span>  
  
 <span data-ttu-id="316e7-122">Lorsque plusieurs franges sont définies pour le même axe, il est possible que les franges seront chevauchent.</span><span class="sxs-lookup"><span data-stu-id="316e7-122">When multiple strip lines are defined for the same axis, it is possible that the strip lines will overlap.</span></span> <span data-ttu-id="316e7-123">L’ordre de plan <xref:System.Web.UI.DataVisualization.Charting.StripLine> objets est déterminée par leur ordre d’occurrence dans la <xref:System.Web.UI.DataVisualization.Charting.StripLinesCollection> objet.</span><span class="sxs-lookup"><span data-stu-id="316e7-123">The Z-order of <xref:System.Web.UI.DataVisualization.Charting.StripLine> objects is determined by their order of occurrence in the <xref:System.Web.UI.DataVisualization.Charting.StripLinesCollection> object.</span></span> <span data-ttu-id="316e7-124">Cela signifie que la première occurrence est dessinée en premier ; la deuxième occurrence en deuxième position, et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="316e7-124">This means that the first occurrence is drawn first; the second occurrence is drawn second, and so on.</span></span>  
  
 <span data-ttu-id="316e7-125">Franges ne sont pas pris en charge pour les types de graphique suivants : Graphique à secteurs, en anneau, en entonnoir, en pyramide, Kagi, ThreeLineBreak, PointAndFigure, polaire et en Radar.</span><span class="sxs-lookup"><span data-stu-id="316e7-125">Strip lines are not supported for the following chart types: Pie, Doughnut, Funnel, Pyramid, Kagi, ThreeLineBreak, PointAndFigure, Polar and Radar.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="316e7-126">L’exemple de code suivant illustre trois applications des franges.</span><span class="sxs-lookup"><span data-stu-id="316e7-126">The following code example demonstrates three applications of strip lines.</span></span> <span data-ttu-id="316e7-127">Tout d’abord, horizontal franges sont ajoutés à intervalles réguliers.</span><span class="sxs-lookup"><span data-stu-id="316e7-127">First, horizontal strip lines are added at recurring intervals.</span></span> <span data-ttu-id="316e7-128">Les franges verticales, deuxième, sont ajoutées pour mettre en surbrillance des données de week-end pointe.</span><span class="sxs-lookup"><span data-stu-id="316e7-128">Second, vertical strip lines are added to highlight weekend data points.</span></span> <span data-ttu-id="316e7-129">Enfin, une frange non périodique est ajoutée pour indiquer la moyenne des points de données de la première série du graphique.</span><span class="sxs-lookup"><span data-stu-id="316e7-129">Lastly, a non-recurring strip line is added to denote the mean of the data points in the first series of the chart.</span></span>  
  
```vb  
Imports System.Web.UI.DataVisualization.Charting  
  
Public Partial Class StripLines   
    Inherits System.Web.UI.Page   
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)  
  
        ' Add chart data before adding strip lines.   
        AddChartData()   
  
        ' Adds repeating horizontal strip lines.   
        AddHorizRepeatingStripLines()   
  
        ' Highlights weekend points using strip lines.   
        HighlightWeekendsWithStripLines()   
  
        ' Adds a threshold line using strip lines.   
        AddThresholdStripLine()   
    End Sub   
  
    ' Adds a week of data with values between 20 and 35.   
    Private Sub AddChartData()   
        ' Declare new random variable   
        Dim rand As New Random()   
        For i As Integer = 0 To 6   
  
            ' Add a week of data   
            chart1.Series(0).Points.AddXY(DateTime.Now.AddDays(i), rand.[Next](20, 35))   
        Next   
    End Sub   
  
    ' Adds repeating horizontal strip lines at intervals of 5.   
    Private Sub AddHorizRepeatingStripLines()   
        ' Instantiate new strip line   
        Dim stripLine1 As New StripLine()  
        stripLine1.StripWidth = 2.5   
        stripLine1.Interval = 5   
  
        ' Consider adding transparency so that the strip lines are lighter   
        stripLine1.BackColor = Color.FromArgb(120, Color.Red)   
  
        ' Add the strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine1)   
    End Sub   
  
    ' Adds strip lines to highlight weekend values.   
    Private Sub HighlightWeekendsWithStripLines()   
        ' Set strip line to highlight weekends   
        Dim stripLine2 As New StripLine()   
        stripLine2.BackColor = Color.FromArgb(120, Color.Gold)   
        stripLine2.IntervalOffset = -1.5   
        stripLine2.IntervalOffsetType = DateTimeIntervalType.Days   
        stripLine2.Interval = 1   
        stripLine2.IntervalType = DateTimeIntervalType.Weeks   
        stripLine2.StripWidth = 2   
        stripLine2.StripWidthType = DateTimeIntervalType.Days   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisX.StripLines.Add(stripLine2)   
  
        ' Set the axis label to show the name of the day   
        ' This is done in order to demonstrate that weekends are highlighted   
        chart1.ChartAreas(0).AxisX.LabelStyle.Format = "ddd"   
    End Sub   
  
    ' Adds a horizontal threshold strip line at the mean value of the first series.  
    Private Sub AddThresholdStripLine()   
        Dim stripLine3 As New StripLine()   
  
        ' Set threshold line so that it is only shown once   
        stripLine3.Interval = 0   
  
        ' Set the threshold line to be drawn at the calculated mean of the first series   
        stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series(0).Name)   
  
        stripLine3.BackColor = Color.DarkGreen   
        stripLine3.StripWidth = 0.25   
  
        ' Set text properties for the threshold line   
        stripLine3.Text = "Mean"   
        stripLine3.ForeColor = Color.Black   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine3)   
    End Sub   
End Class  
```  
  
```csharp  
public partial class StripLines : System.Web.UI.Page   
    {  
        protected void Page_Load(object sender, EventArgs e)  
        {              
            // Add chart data  
            AddChartData();  
  
            // Adds repeating horizontal strip lines.  
            AddHorizRepeatingStripLines();  
  
            // Highlights weekend points using strip lines.  
            HighlightWeekendsWithStripLines();  
  
            // Adds a threshold line using strip lines.  
            AddThresholdStripLine();  
        }  
  
        /// <summary>  
        /// Adds a week of data with values between 20 and 35.  
        /// </summary>  
        private void AddChartData()  
        {  
            // Declare new random variable  
            Random rand = new Random();  
  
            // Add a week of data  
            for (int i = 0; i < 7; i++)   
            {  
                chart1.Series[0].Points.AddXY(DateTime.Now.AddDays(i), rand.Next(20,35));  
            }  
        }  
  
        /// <summary>  
        /// Adds repeating horizontal strip lines at intervals of 5.  
        /// </summary>  
        private void AddHorizRepeatingStripLines()  
        {  
            // Instantiate new strip line  
            StripLine stripLine1 = new StripLine();  
            stripLine1.StripWidth = 0;  
            stripLine1.BorderColor = Color.Black;  
            stripLine1.BorderWidth = 3;  
            stripLine1.Interval = 5;  
  
            // Consider adding transparency so that the strip lines are lighter  
            stripLine1.BackColor = Color.FromArgb(120, Color.Red);  
  
            stripLine1.BackSecondaryColor = Color.Black;  
            stripLine1.BackGradientStyle = GradientStyle.LeftRight;  
  
            // Add the strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine1);  
        }  
  
        /// <summary>  
        /// Adds strip lines to highlight weekend values.  
        /// </summary>  
        private void HighlightWeekendsWithStripLines()  
        {  
            // Set strip line to highlight weekends  
            StripLine stripLine2 = new StripLine();  
            stripLine2.BackColor = Color.FromArgb(120, Color.Gold);              
            stripLine2.IntervalOffset = -1.5;  
            stripLine2.IntervalOffsetType = DateTimeIntervalType.Days;  
            stripLine2.Interval = 1;  
            stripLine2.IntervalType = DateTimeIntervalType.Weeks;  
            stripLine2.StripWidth = 2;  
            stripLine2.StripWidthType = DateTimeIntervalType.Days;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisX.StripLines.Add(stripLine2);  
  
            // Set the axis label to show the name of the day  
            // This is done in order to demonstrate that weekends are highlighted  
            chart1.ChartAreas[0].AxisX.LabelStyle.Format = "ddd";  
        }  
  
        /// <summary>  
        /// Adds a horizontal threshold strip line at the calculated mean   
        /// value of all data points in the first series of the chart.  
        /// </summary>  
        private void AddThresholdStripLine()  
        {  
            StripLine stripLine3 = new StripLine();  
  
            // Set threshold line so that it is only shown once  
            stripLine3.Interval = 0;  
  
            // Set the threshold line to be drawn at the calculated mean of the first series  
            stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series[0].Name);  
  
            stripLine3.BackColor = Color.DarkGreen;  
            stripLine3.StripWidth = 0.25;  
  
            // Set text properties for the threshold line  
            stripLine3.Text = "Mean";  
            stripLine3.ForeColor = Color.Black;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine3);  
        }  
    }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StripLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StripLine.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StripLine();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="316e7-130">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.DataVisualization.Charting.StripLine" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-130">Initializes a new instance of the <see cref="T:System.Web.UI.DataVisualization.Charting.StripLine" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-131">Obtient ou définit la couleur d'arrière-plan des franges.</span><span class="sxs-lookup"><span data-stu-id="316e7-131">Gets or sets the background color of the strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-132">Structure <see cref="T:System.Drawing.Color" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-132">A <see cref="T:System.Drawing.Color" /> structure.</span></span> <span data-ttu-id="316e7-133">La couleur par défaut est <see cref="P:System.Drawing.Color.White" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-133">The default color is <see cref="P:System.Drawing.Color.White" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-134">Vous pouvez définir cette propriété à n’importe quelle valeur ARVB (alpha, rouge, vert, bleu).</span><span class="sxs-lookup"><span data-stu-id="316e7-134">You can set this property to any valid ARGB (alpha, red, green, blue) value.</span></span>  
  
 <span data-ttu-id="316e7-135">Pour définir un dégradé pour la frange, définissez le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackColor%2A> et <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="316e7-135">To set a gradient for the strip line, set the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackColor%2A> and <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> properties.</span></span>  
  
 <span data-ttu-id="316e7-136">Si vous définissez cette couleur « transparent » - en d’autres termes, la valeur est la valeur alpha de 0 - aucune couleur ne sera assignée à l’arrière-plan de l’élément.</span><span class="sxs-lookup"><span data-stu-id="316e7-136">If you set this color to "transparent" - in other words, set the alpha value to 0 - no color will be assigned to the background of the element.</span></span> <span data-ttu-id="316e7-137">Par conséquent, l’arrière-plan est transparent.</span><span class="sxs-lookup"><span data-stu-id="316e7-137">As a result, the background will be transparent.</span></span>  
  
 <span data-ttu-id="316e7-138">Si le <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> est définie sur 0.0, une ligne sera dessinée et la <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderColor%2A> propriété détermine la couleur de la ligne, pas cette propriété.</span><span class="sxs-lookup"><span data-stu-id="316e7-138">If the <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to 0.0, a line will be drawn and the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderColor%2A> property will determine the color of the line, not this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="316e7-139">L’exemple de code suivant illustre trois applications des franges.</span><span class="sxs-lookup"><span data-stu-id="316e7-139">The following code example demonstrates three applications of strip lines.</span></span> <span data-ttu-id="316e7-140">Tout d’abord, horizontal franges sont ajoutés à intervalles réguliers.</span><span class="sxs-lookup"><span data-stu-id="316e7-140">First, horizontal strip lines are added at recurring intervals.</span></span> <span data-ttu-id="316e7-141">Les franges verticales, deuxième, sont ajoutées pour mettre en surbrillance des données de week-end pointe.</span><span class="sxs-lookup"><span data-stu-id="316e7-141">Second, vertical strip lines are added to highlight weekend data points.</span></span> <span data-ttu-id="316e7-142">Enfin, une frange non périodique est ajoutée pour indiquer la moyenne des points de données de la première série du graphique.</span><span class="sxs-lookup"><span data-stu-id="316e7-142">Lastly, a non-recurring strip line is added to denote the mean of the data points in the first series of the chart.</span></span>  
  
```vb  
Imports System.Web.UI.DataVisualization.Charting  
  
Public Partial Class StripLines   
    Inherits System.Web.UI.Page   
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)  
  
        ' Add chart data before adding strip lines.   
        AddChartData()   
  
        ' Adds repeating horizontal strip lines.   
        AddHorizRepeatingStripLines()   
  
        ' Highlights weekend points using strip lines.   
        HighlightWeekendsWithStripLines()   
  
        ' Adds a threshold line using strip lines.   
        AddThresholdStripLine()   
    End Sub   
  
    ''' <summary>   
    ''' Adds a week of data with values between 20 and 35.   
    ''' </summary>   
    Private Sub AddChartData()   
        ' Declare new random variable   
        Dim rand As New Random()   
        For i As Integer = 0 To 6   
  
            ' Add a week of data   
            chart1.Series(0).Points.AddXY(DateTime.Now.AddDays(i), rand.[Next](20, 35))   
        Next   
    End Sub   
  
    ''' <summary>   
    ''' Adds repeating horizontal strip lines at intervals of 5.   
    ''' </summary>   
    Private Sub AddHorizRepeatingStripLines()   
        ' Instantiate new strip line   
        Dim stripLine1 As New StripLine()   
        stripLine1.StripWidth = 2.5   
        stripLine1.Interval = 5   
  
        ' Consider adding transparency so that the strip lines are lighter   
        stripLine1.BackColor = Color.FromArgb(120, Color.Red)   
  
        ' Add the strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine1)   
    End Sub   
  
    ''' <summary>   
    ''' Adds strip lines to highlight weekend values.   
    ''' </summary>   
    Private Sub HighlightWeekendsWithStripLines()   
        ' Set strip line to highlight weekends   
        Dim stripLine2 As New StripLine()   
        stripLine2.BackColor = Color.FromArgb(120, Color.Gold)   
        stripLine2.IntervalOffset = -1.5   
        stripLine2.IntervalOffsetType = DateTimeIntervalType.Days   
        stripLine2.Interval = 1   
        stripLine2.IntervalType = DateTimeIntervalType.Weeks   
        stripLine2.StripWidth = 2   
        stripLine2.StripWidthType = DateTimeIntervalType.Days   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisX.StripLines.Add(stripLine2)   
  
        ' Set the axis label to show the name of the day   
        ' This is done in order to demonstrate that weekends are highlighted   
        chart1.ChartAreas(0).AxisX.LabelStyle.Format = "ddd"   
    End Sub   
  
    ''' <summary>   
    ''' Adds a horizontal threshold strip line at the calculated mean   
    ''' value of all data points in the first series of the chart.   
    ''' </summary>   
    Private Sub AddThresholdStripLine()   
        Dim stripLine3 As New StripLine()   
  
        ' Set threshold line so that it is only shown once   
        stripLine3.Interval = 0   
  
        ' Set the threshold line to be drawn at the calculated mean of the first series   
        stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series(0).Name)   
  
        stripLine3.BackColor = Color.DarkGreen   
        stripLine3.StripWidth = 0.25   
  
        ' Set text properties for the threshold line   
        stripLine3.Text = "Mean"   
        stripLine3.ForeColor = Color.Black   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine3)   
    End Sub   
End Class  
```  
  
```csharp  
public partial class StripLines : System.Web.UI.Page   
    {  
        protected void Page_Load(object sender, EventArgs e)  
        {              
            // Add chart data  
            AddChartData();  
  
            // Adds repeating horizontal strip lines.  
            AddHorizRepeatingStripLines();  
  
            // Highlights weekend points using strip lines.  
            HighlightWeekendsWithStripLines();  
  
            // Adds a threshold line using strip lines.  
            AddThresholdStripLine();  
        }  
  
        /// <summary>  
        /// Adds a week of data with values between 20 and 35.  
        /// </summary>  
        private void AddChartData()  
        {  
            // Declare new random variable  
            Random rand = new Random();  
  
            // Add a week of data  
            for (int i = 0; i < 7; i++)   
            {  
                chart1.Series[0].Points.AddXY(DateTime.Now.AddDays(i), rand.Next(20,35));  
            }  
        }  
  
        /// <summary>  
        /// Adds repeating horizontal strip lines at intervals of 5.  
        /// </summary>  
        private void AddHorizRepeatingStripLines()  
        {  
            // Instantiate new strip line  
            StripLine stripLine1 = new StripLine();  
            stripLine1.StripWidth = 0;  
            stripLine1.BorderColor = Color.Black;  
            stripLine1.BorderWidth = 3;  
            stripLine1.Interval = 5;  
  
            // Consider adding transparency so that the strip lines are lighter  
            stripLine1.BackColor = Color.FromArgb(120, Color.Red);  
  
            stripLine1.BackSecondaryColor = Color.Black;  
            stripLine1.BackGradientStyle = GradientStyle.LeftRight;  
  
            // Add the strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine1);  
        }  
  
        /// <summary>  
        /// Adds strip lines to highlight weekend values.  
        /// </summary>  
        private void HighlightWeekendsWithStripLines()  
        {  
            // Set strip line to highlight weekends  
            StripLine stripLine2 = new StripLine();  
            stripLine2.BackColor = Color.FromArgb(120, Color.Gold);              
            stripLine2.IntervalOffset = -1.5;  
            stripLine2.IntervalOffsetType = DateTimeIntervalType.Days;  
            stripLine2.Interval = 1;  
            stripLine2.IntervalType = DateTimeIntervalType.Weeks;  
            stripLine2.StripWidth = 2;  
            stripLine2.StripWidthType = DateTimeIntervalType.Days;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisX.StripLines.Add(stripLine2);  
  
            // Set the axis label to show the name of the day  
            // This is done in order to demonstrate that weekends are highlighted  
            chart1.ChartAreas[0].AxisX.LabelStyle.Format = "ddd";  
        }  
  
        /// <summary>  
        /// Adds a horizontal threshold strip line at the calculated mean   
        /// value of all data points in the first series of the chart.  
        /// </summary>  
        private void AddThresholdStripLine()  
        {  
            StripLine stripLine3 = new StripLine();  
  
            // Set threshold line so that it is only shown once  
            stripLine3.Interval = 0;  
  
            // Set the threshold line to be drawn at the calculated mean of the first series  
            stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series[0].Name);  
  
            stripLine3.BackColor = Color.DarkGreen;  
            stripLine3.StripWidth = 0.25;  
  
            // Set text properties for the threshold line  
            stripLine3.Text = "Mean";  
            stripLine3.ForeColor = Color.Black;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine3);  
        }  
    }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.BackGradientStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackGradientStyle As GradientStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::GradientStyle BackGradientStyle { System::Web::UI::DataVisualization::Charting::GradientStyle get(); void set(System::Web::UI::DataVisualization::Charting::GradientStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackGradientStyle : System.Web.UI.DataVisualization.Charting.GradientStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.BackGradientStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.GradientEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.GradientEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-143">Obtient ou définit le style de dégradé de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-143">Gets or sets the gradient style of the strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-144">Énumération <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-144">A <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> enumeration.</span></span> <span data-ttu-id="316e7-145">La valeur par défaut est <see cref="F:System.Web.UI.DataVisualization.Charting.GradientStyle.None" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-145">The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.GradientStyle.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-146">Le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackGradientStyle%2A> propriété détermine si un élément de graphique affichera un dégradé, ainsi que l’orientation du dégradé, si utilisé.</span><span class="sxs-lookup"><span data-stu-id="316e7-146">The <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackGradientStyle%2A> property determines whether a chart element will display a gradient, as well as the orientation of the gradient, if used.</span></span>  
  
 <span data-ttu-id="316e7-147">Pour utiliser les couleurs de dégradé :</span><span class="sxs-lookup"><span data-stu-id="316e7-147">To use gradient colors:</span></span>  
  
-   <span data-ttu-id="316e7-148">Utilisez le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackColor%2A> propriété à définir la couleur principale.</span><span class="sxs-lookup"><span data-stu-id="316e7-148">Use the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackColor%2A> property to set the primary color.</span></span>  
  
-   <span data-ttu-id="316e7-149">Utilisez le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> propriété pour définir la couleur de la base de données secondaire.</span><span class="sxs-lookup"><span data-stu-id="316e7-149">Use the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> property to set the secondary color.</span></span>  
  
-   <span data-ttu-id="316e7-150">Définissez ce paramètre <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackGradientStyle%2A> propriété de l’élément de graphique le style de dégradé souhaité.</span><span class="sxs-lookup"><span data-stu-id="316e7-150">Set this <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackGradientStyle%2A> property of the chart element to the desired gradient style.</span></span>  
  
 <span data-ttu-id="316e7-151">Cette propriété n’est pas applicable si la <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> propriété est définie sur une valeur de 0.0.</span><span class="sxs-lookup"><span data-stu-id="316e7-151">This property is not applicable if the <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.BackHatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackHatchStyle As ChartHatchStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartHatchStyle BackHatchStyle { System::Web::UI::DataVisualization::Charting::ChartHatchStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartHatchStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackHatchStyle : System.Web.UI.DataVisualization.Charting.ChartHatchStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.BackHatchStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.HatchStyleEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.HatchStyleEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-152">Obtient ou définit le style de hachurage de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-152">Gets or sets the hatching style of the strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-153">Énumération <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-153">A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> enumeration.</span></span> <span data-ttu-id="316e7-154">La valeur par défaut est <see cref="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.None" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-154">The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-155">Le motif hachuré se compose d’une couleur d’arrière-plan unie et des lignes dessinées sur l’arrière-plan.</span><span class="sxs-lookup"><span data-stu-id="316e7-155">The hatch pattern consists of a solid background color and lines drawn over the background.</span></span> <span data-ttu-id="316e7-156">Deux couleurs utilisées dans le style de hachurage sont définies par le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackColor%2A> et <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="316e7-156">The two colors used in the hatch style are set by the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackColor%2A> and <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> properties.</span></span> <span data-ttu-id="316e7-157">Cette propriété n’est pas applicable si la <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> propriété est définie sur une valeur de 0.0.</span><span class="sxs-lookup"><span data-stu-id="316e7-157">This property is not applicable if the <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.BackImage" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BackImage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImage : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.BackImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ImageValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ImageValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-158">Obtient ou définit l'image d'arrière-plan de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-158">Gets or sets the background image of the strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-159">Valeur <see langword="string" /> qui représente l'URL d'un fichier image.</span><span class="sxs-lookup"><span data-stu-id="316e7-159">A <see langword="string" /> value that represents an image file URL.</span></span> <span data-ttu-id="316e7-160">La valeur par défaut est une chaîne vide.</span><span class="sxs-lookup"><span data-stu-id="316e7-160">The default is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-161">Le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackImage%2A> propriété définit un chemin d’accès à une image d’arrière-plan pour de nombreux éléments de graphique et est une URL absolue ou relative.</span><span class="sxs-lookup"><span data-stu-id="316e7-161">The <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackImage%2A> property defines a path to a background image for many chart elements, and is an absolute or relative URL.</span></span>  
  
 <span data-ttu-id="316e7-162">Pour positionner cette image, utilisez le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackImageAlignment%2A> et <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackImageWrapMode%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="316e7-162">To position this image, use the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackImageAlignment%2A> and <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackImageWrapMode%2A> properties.</span></span>  
  
 <span data-ttu-id="316e7-163">Vous pouvez également spécifier une couleur sera affichée par l’image en tant que « transparent » en définissant le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackImageTransparentColor%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="316e7-163">You can also specify that one color will be displayed by the image as "transparent" by setting the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackImageTransparentColor%2A> property.</span></span>  
  
 <span data-ttu-id="316e7-164">Une image peut être n’importe quel fichier graphique valide pris en charge par .NET Framework, y compris les icônes.</span><span class="sxs-lookup"><span data-stu-id="316e7-164">An image can be any valid graphics file supported by .NET Framework, including icons.</span></span>  
  
 <span data-ttu-id="316e7-165">Cette propriété n’est pas applicable si la <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> propriété est définie sur une valeur de 0.0.</span><span class="sxs-lookup"><span data-stu-id="316e7-165">This property is not applicable if the <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0.</span></span>  
  
 <span data-ttu-id="316e7-166">Images d’arrière-plan sont prioritaires sur les autres propriétés d’arrière-plan, telles que les couleurs de dégradé.</span><span class="sxs-lookup"><span data-stu-id="316e7-166">Background images take precedence over other background properties, such as gradient colors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.BackImageAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageAlignment As ChartImageAlignmentStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle BackImageAlignment { System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageAlignment : System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.BackImageAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-167">Obtient ou définit l'alignement de l'image d'arrière-plan.</span><span class="sxs-lookup"><span data-stu-id="316e7-167">Gets or sets the background image alignment.</span></span></summary>
        <value><span data-ttu-id="316e7-168">Valeur d'énumération <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-168">A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle" /> enumeration value.</span></span> <span data-ttu-id="316e7-169">La valeur par défaut est <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-169">The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-170">Cette propriété détermine l’alignement de l’image d’arrière-plan pour les bandes ; Il s’applique uniquement lorsque le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackImageWrapMode%2A> propriété est définie sur <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>.</span><span class="sxs-lookup"><span data-stu-id="316e7-170">This property determines the alignment of the background image for strip lines; it is only applied when the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackImageWrapMode%2A> property is set to <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>.</span></span>  
  
 <span data-ttu-id="316e7-171">Pour plus d’informations sur les alignements disponibles, consultez le <xref:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle> rubrique sur l’énumération.</span><span class="sxs-lookup"><span data-stu-id="316e7-171">For more information about available alignments, see the <xref:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle> enumeration topic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.BackImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageTransparentColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.BackImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-172">Obtient ou définit la couleur d'une image d'arrière-plan de frange qui sera implémentée comme transparente.</span><span class="sxs-lookup"><span data-stu-id="316e7-172">Gets or sets the color of a strip line background image that will be implemented as transparent.</span></span></summary>
        <value><span data-ttu-id="316e7-173">Valeur <see cref="T:System.Drawing.Color" /> qui sera affichée comme transparente.</span><span class="sxs-lookup"><span data-stu-id="316e7-173">A <see cref="T:System.Drawing.Color" /> value that will be displayed as transparent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-174">Cette propriété n’est pas applicable si la <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> propriété est définie sur une valeur de 0.0.</span><span class="sxs-lookup"><span data-stu-id="316e7-174">This property is not applicable if the <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.BackImageWrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageWrapMode As ChartImageWrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageWrapMode BackImageWrapMode { System::Web::UI::DataVisualization::Charting::ChartImageWrapMode get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageWrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageWrapMode : System.Web.UI.DataVisualization.Charting.ChartImageWrapMode with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.BackImageWrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-175">Obtient ou définit le mode dessin de l'image d'arrière-plan de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-175">Gets or sets the drawing mode of the background image of the strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-176">Énumération de valeurs entières <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-176">A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode" /> integer enumeration.</span></span> <span data-ttu-id="316e7-177">La valeur par défaut est <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Tile" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-177">The default is <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Tile" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-178">Cette propriété détermine comment l’image est affichée ; Autrement dit, en mosaïque, à l’échelle et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="316e7-178">This property determines how the image is displayed; that is, tiled, scaled, and so forth.</span></span>  
  
 <span data-ttu-id="316e7-179">Si une image est redimensionnée, elle sera étirée pour s’ajuster à la frange englobant.</span><span class="sxs-lookup"><span data-stu-id="316e7-179">If an image is scaled, it will be stretched to fit within the bounding strip line.</span></span> <span data-ttu-id="316e7-180">Si l’image est affichée en mosaïque, elle est dessinée à plusieurs reprises, en démarrant à partir de l’angle supérieur gauche.</span><span class="sxs-lookup"><span data-stu-id="316e7-180">If the image is tiled, it is repeatedly drawn, starting from the top-left corner.</span></span>  
  
 <span data-ttu-id="316e7-181">Pour plus d’informations sur les modes de retour à la ligne disponibles, consultez le <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode> rubrique sur l’énumération.</span><span class="sxs-lookup"><span data-stu-id="316e7-181">For more information concerning the available wrapping modes, see the <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode> enumeration topic.</span></span>  
  
 <span data-ttu-id="316e7-182">Si le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackImageWrapMode%2A> propriété est définie sur <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>, l’emplacement où l’image est dessinée sera déterminé par le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackImageAlignment%2A> paramètre de propriété.</span><span class="sxs-lookup"><span data-stu-id="316e7-182">If the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackImageWrapMode%2A> property is set to <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>, the location where the image is drawn will be determined by the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackImageAlignment%2A> property setting.</span></span>  
  
 <span data-ttu-id="316e7-183">Cette propriété n’est pas applicable si <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> est défini sur une valeur de 0.0.</span><span class="sxs-lookup"><span data-stu-id="316e7-183">This property is not applicable if <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> is set to a value of 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.BackSecondaryColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackSecondaryColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackSecondaryColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackSecondaryColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.BackSecondaryColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-184">Obtient ou définit la couleur secondaire de l'arrière-plan de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-184">Gets or sets the secondary color of the strip line background.</span></span></summary>
        <value><span data-ttu-id="316e7-185">Valeur <see cref="T:System.Drawing.Color" /> utilisée pour la couleur secondaire d'un arrière-plan avec des hachures ou un remplissage dégradé.</span><span class="sxs-lookup"><span data-stu-id="316e7-185">A <see cref="T:System.Drawing.Color" /> value used for the secondary color of a background with hatching or gradient fill.</span></span> <span data-ttu-id="316e7-186">La couleur par défaut est <see cref="F:System.Drawing.Color.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-186">The default color is <see cref="F:System.Drawing.Color.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-187">Cette propriété détermine la couleur d’arrière-plan secondaire de nombreux objets de graphique et est utilisée lorsque des couleurs de dégradé sont appliquées.</span><span class="sxs-lookup"><span data-stu-id="316e7-187">This property determines the secondary background color of many chart objects, and is used when gradient colors are being applied.</span></span>  
  
 <span data-ttu-id="316e7-188">Vous pouvez définir la couleur secondaire d’arrière-plan à n’importe quelle valeur ARVB (alpha, rouge, vert, bleu).</span><span class="sxs-lookup"><span data-stu-id="316e7-188">You can set background secondary color to any valid ARGB (alpha, red, green, blue) value.</span></span>  
  
 <span data-ttu-id="316e7-189">Si le hachurage est utilisé, le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> propriété détermine la couleur des lignes de hachurage.</span><span class="sxs-lookup"><span data-stu-id="316e7-189">If hatching is used, the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> property determines the color of the hatching lines.</span></span>  
  
 <span data-ttu-id="316e7-190">Pour utiliser les couleurs de dégradé de l’arrière-plan d’un élément de graphique :</span><span class="sxs-lookup"><span data-stu-id="316e7-190">To use gradient colors for the background of a chart element:</span></span>  
  
-   <span data-ttu-id="316e7-191">Utilisez le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackColor%2A> propriété à définir la couleur principale.</span><span class="sxs-lookup"><span data-stu-id="316e7-191">Use the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackColor%2A> property to set the primary color.</span></span>  
  
-   <span data-ttu-id="316e7-192">Utilisez cette <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> propriété pour définir la couleur de la base de données secondaire.</span><span class="sxs-lookup"><span data-stu-id="316e7-192">Use this <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> property to set the secondary color.</span></span>  
  
-   <span data-ttu-id="316e7-193">Définir le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackGradientStyle%2A> propriété le style de dégradé souhaité.</span><span class="sxs-lookup"><span data-stu-id="316e7-193">Set the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackGradientStyle%2A> property to the desired gradient style.</span></span>  
  
 <span data-ttu-id="316e7-194">Cette propriété n’est pas applicable si la <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> propriété est définie sur une valeur de 0.0.</span><span class="sxs-lookup"><span data-stu-id="316e7-194">This property is not applicable if the <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-195">Obtient ou définit la couleur de bordure d'une frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-195">Gets or sets the border color of a strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-196">Valeur <see cref="T:System.Drawing.Color" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-196">A <see cref="T:System.Drawing.Color" /> value.</span></span> <span data-ttu-id="316e7-197">La couleur par défaut est <see cref="F:System.Drawing.Color.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-197">The default color is <see cref="F:System.Drawing.Color.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-198">Vous pouvez définir cette propriété à n’importe quelle valeur ARVB (alpha, rouge, vert, bleu).</span><span class="sxs-lookup"><span data-stu-id="316e7-198">You can set this property to any valid ARGB (alpha, red, green, blue) value.</span></span>  
  
 <span data-ttu-id="316e7-199">Si le <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> propriété d’un <xref:System.Web.UI.DataVisualization.Charting.StripLine> objet est défini sur 0.0, une ligne sera dessinée, et c’est cette propriété et non le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackColor%2A> la propriété qui détermine la couleur de la ligne.</span><span class="sxs-lookup"><span data-stu-id="316e7-199">If the <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> property of a <xref:System.Web.UI.DataVisualization.Charting.StripLine> object is set to 0.0, a line will be drawn, and it is this property and not the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BackColor%2A> property setting that will determine the color of the line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderDashStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.BorderDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartDashStyle BorderDashStyle { System::Web::UI::DataVisualization::Charting::ChartDashStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderDashStyle : System.Web.UI.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.BorderDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-200">Obtient ou définit le style de bordure de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-200">Gets or sets the border style of the strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-201">Valeur d'énumération <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> qui détermine le style de la bordure de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-201">A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> enumeration value that determines the border style of the strip line.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-202">Cette propriété spécifie le style de ligne utilisé pour une bordure.</span><span class="sxs-lookup"><span data-stu-id="316e7-202">This property specifies the line style used for a border.</span></span> <span data-ttu-id="316e7-203">La ligne peut être pleine, en pointillés ou une variation de solides et en pointillés.</span><span class="sxs-lookup"><span data-stu-id="316e7-203">The line can be solid, dotted or some variation of solid and dotted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public int BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-204">Obtient ou définit l'épaisseur de la bordure de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-204">Gets or sets the border width of the strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-205">Valeur <see langword="integer" /> qui détermine l'épaisseur de la bordure de la frange, en pixels.</span><span class="sxs-lookup"><span data-stu-id="316e7-205">An <see langword="integer" /> value that determines the width of the strip line's border, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-206">Cette propriété est mesurée en pixels.</span><span class="sxs-lookup"><span data-stu-id="316e7-206">This property is measured in pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StripLine.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stripLine.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="316e7-207"><see langword="True" /> pour libérer les ressources managées et non managées ; <see langword="False" /> pour ne libérer que les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="316e7-207"><see langword="True" /> to release both managed and unmanaged resources; <see langword="False" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="316e7-208">Libère les ressources non managées utilisées par <see cref="T:System.Web.UI.DataVisualization.Charting.StripLine" /> et libère éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="316e7-208">Releases the unmanaged resources used by the <see cref="T:System.Web.UI.DataVisualization.Charting.StripLine" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-209">Obtient ou définit la police utilisée pour le texte de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-209">Gets or sets the font used for the strip line text.</span></span></summary>
        <value><span data-ttu-id="316e7-210">Valeur <see cref="T:System.Drawing.Font" /> qui représente la police du texte de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-210">A <see cref="T:System.Drawing.Font" /> value that represents the font of the strip line text.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-211">Obtient ou définit la couleur du texte de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-211">Gets or sets the color of the strip line text.</span></span></summary>
        <value><span data-ttu-id="316e7-212">Valeur <see cref="T:System.Drawing.Color" /> qui représente la couleur du texte d'une frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-212">A <see cref="T:System.Drawing.Color" /> value that represents the text color of a strip line.</span></span> <span data-ttu-id="316e7-213">La valeur par défaut est <see cref="P:System.Drawing.Color.Black" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-213">The default value is <see cref="P:System.Drawing.Color.Black" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-214">Vous pouvez spécifier n’importe quelle couleur ARVB valide pour cette propriété.</span><span class="sxs-lookup"><span data-stu-id="316e7-214">You can specify any valid ARGB color for this property.</span></span> <span data-ttu-id="316e7-215">Cette propriété s’applique uniquement lorsqu’une valeur de texte est spécifiée pour la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-215">This property is only applicable when a text value is specified for the strip line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : double with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-216">Obtient ou définit l'intervalle d'une frange et détermine si celle-ci est dessinée une ou plusieurs fois.</span><span class="sxs-lookup"><span data-stu-id="316e7-216">Gets or sets the interval for a strip line, and determines if the strip line is drawn once or repeatedly.</span></span></summary>
        <value><span data-ttu-id="316e7-217">Valeur <see langword="double" /> qui représente l'intervalle entre les franges.</span><span class="sxs-lookup"><span data-stu-id="316e7-217">A <see langword="double" /> value that represents the interval between strip lines.</span></span> <span data-ttu-id="316e7-218">La valeur par défaut est 0,0.</span><span class="sxs-lookup"><span data-stu-id="316e7-218">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-219">Lorsque vous définissez la <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> propriété une valeur zéro (0.0), une frange s’affichera, avec une largeur spécifiée par la <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="316e7-219">When you set the <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> property to a value of zero (0.0), one strip line will be displayed, with a width specified by the <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> property.</span></span> <span data-ttu-id="316e7-220">Lorsque vous définissez <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> à valeur différente de zéro, plusieurs franges seront affiche.</span><span class="sxs-lookup"><span data-stu-id="316e7-220">When you set <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> to a value of other than zero, multiple strip lines will be shown.</span></span> <span data-ttu-id="316e7-221">L’unité qui est utilisée pour le <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> propriété est définie par le <xref:System.Web.UI.DataVisualization.Charting.StripLine.IntervalType%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="316e7-221">The unit that is used for the <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> property is defined by the <xref:System.Web.UI.DataVisualization.Charting.StripLine.IntervalType%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="316e7-222">L’exemple de code suivant illustre trois applications des franges.</span><span class="sxs-lookup"><span data-stu-id="316e7-222">The following code example demonstrates three applications of strip lines.</span></span> <span data-ttu-id="316e7-223">Tout d’abord, horizontal franges sont ajoutés à intervalles réguliers.</span><span class="sxs-lookup"><span data-stu-id="316e7-223">First, horizontal strip lines are added at recurring intervals.</span></span> <span data-ttu-id="316e7-224">Les franges verticales, deuxième, sont ajoutées pour mettre en surbrillance des données de week-end pointe.</span><span class="sxs-lookup"><span data-stu-id="316e7-224">Second, vertical strip lines are added to highlight weekend data points.</span></span> <span data-ttu-id="316e7-225">Enfin, une frange non périodique est ajoutée pour indiquer la moyenne des points de données de la première série du graphique.</span><span class="sxs-lookup"><span data-stu-id="316e7-225">Lastly, a non-recurring strip line is added to denote the mean of the data points in the first series of the chart.</span></span>  
  
```vb  
Imports System.Web.UI.DataVisualization.Charting  
  
Public Partial Class StripLines   
    Inherits System.Web.UI.Page   
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)  
  
        ' Add chart data before adding strip lines.   
        AddChartData()   
  
        ' Adds repeating horizontal strip lines.   
        AddHorizRepeatingStripLines()   
  
        ' Highlights weekend points using strip lines.   
        HighlightWeekendsWithStripLines()   
  
        ' Adds a threshold line using strip lines.   
        AddThresholdStripLine()   
    End Sub   
  
    ''' <summary>   
    ''' Adds a week of data with values between 20 and 35.   
    ''' </summary>   
    Private Sub AddChartData()   
        ' Declare new random variable   
        Dim rand As New Random()   
        For i As Integer = 0 To 6   
  
            ' Add a week of data   
            chart1.Series(0).Points.AddXY(DateTime.Now.AddDays(i), rand.[Next](20, 35))   
        Next   
    End Sub   
  
    ''' <summary>   
    ''' Adds repeating horizontal strip lines at intervals of 5.   
    ''' </summary>   
    Private Sub AddHorizRepeatingStripLines()   
        ' Instantiate new strip line   
        Dim stripLine1 As New StripLine()   
        stripLine1.StripWidth = 2.5   
        stripLine1.Interval = 5   
  
        ' Consider adding transparency so that the strip lines are lighter   
        stripLine1.BackColor = Color.FromArgb(120, Color.Red)   
  
        ' Add the strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine1)   
    End Sub   
  
    ''' <summary>   
    ''' Adds strip lines to highlight weekend values.   
    ''' </summary>   
    Private Sub HighlightWeekendsWithStripLines()   
        ' Set strip line to highlight weekends   
        Dim stripLine2 As New StripLine()   
        stripLine2.BackColor = Color.FromArgb(120, Color.Gold)   
        stripLine2.IntervalOffset = -1.5   
        stripLine2.IntervalOffsetType = DateTimeIntervalType.Days   
        stripLine2.Interval = 1   
        stripLine2.IntervalType = DateTimeIntervalType.Weeks   
        stripLine2.StripWidth = 2   
        stripLine2.StripWidthType = DateTimeIntervalType.Days   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisX.StripLines.Add(stripLine2)   
  
        ' Set the axis label to show the name of the day   
        ' This is done in order to demonstrate that weekends are highlighted   
        chart1.ChartAreas(0).AxisX.LabelStyle.Format = "ddd"   
    End Sub   
  
    ''' <summary>   
    ''' Adds a horizontal threshold strip line at the calculated mean   
    ''' value of all data points in the first series of the chart.   
    ''' </summary>   
    Private Sub AddThresholdStripLine()   
        Dim stripLine3 As New StripLine()   
  
        ' Set threshold line so that it is only shown once   
        stripLine3.Interval = 0   
  
        ' Set the threshold line to be drawn at the calculated mean of the first series   
        stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series(0).Name)   
  
        stripLine3.BackColor = Color.DarkGreen   
        stripLine3.StripWidth = 0.25   
  
        ' Set text properties for the threshold line   
        stripLine3.Text = "Mean"   
        stripLine3.ForeColor = Color.Black   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine3)   
    End Sub   
End Class  
```  
  
```csharp  
public partial class StripLines : System.Web.UI.Page   
    {  
        protected void Page_Load(object sender, EventArgs e)  
        {              
            // Add chart data  
            AddChartData();  
  
            // Adds repeating horizontal strip lines.  
            AddHorizRepeatingStripLines();  
  
            // Highlights weekend points using strip lines.  
            HighlightWeekendsWithStripLines();  
  
            // Adds a threshold line using strip lines.  
            AddThresholdStripLine();  
        }  
  
        /// <summary>  
        /// Adds a week of data with values between 20 and 35.  
        /// </summary>  
        private void AddChartData()  
        {  
            // Declare new random variable  
            Random rand = new Random();  
  
            // Add a week of data  
            for (int i = 0; i < 7; i++)   
            {  
                chart1.Series[0].Points.AddXY(DateTime.Now.AddDays(i), rand.Next(20,35));  
            }  
        }  
  
        /// <summary>  
        /// Adds repeating horizontal strip lines at intervals of 5.  
        /// </summary>  
        private void AddHorizRepeatingStripLines()  
        {  
            // Instantiate new strip line  
            StripLine stripLine1 = new StripLine();  
            stripLine1.StripWidth = 0;  
            stripLine1.BorderColor = Color.Black;  
            stripLine1.BorderWidth = 3;  
            stripLine1.Interval = 5;  
  
            // Consider adding transparency so that the strip lines are lighter  
            stripLine1.BackColor = Color.FromArgb(120, Color.Red);  
  
            stripLine1.BackSecondaryColor = Color.Black;  
            stripLine1.BackGradientStyle = GradientStyle.LeftRight;  
  
            // Add the strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine1);  
        }  
  
        /// <summary>  
        /// Adds strip lines to highlight weekend values.  
        /// </summary>  
        private void HighlightWeekendsWithStripLines()  
        {  
            // Set strip line to highlight weekends  
            StripLine stripLine2 = new StripLine();  
            stripLine2.BackColor = Color.FromArgb(120, Color.Gold);              
            stripLine2.IntervalOffset = -1.5;  
            stripLine2.IntervalOffsetType = DateTimeIntervalType.Days;  
            stripLine2.Interval = 1;  
            stripLine2.IntervalType = DateTimeIntervalType.Weeks;  
            stripLine2.StripWidth = 2;  
            stripLine2.StripWidthType = DateTimeIntervalType.Days;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisX.StripLines.Add(stripLine2);  
  
            // Set the axis label to show the name of the day  
            // This is done in order to demonstrate that weekends are highlighted  
            chart1.ChartAreas[0].AxisX.LabelStyle.Format = "ddd";  
        }  
  
        /// <summary>  
        /// Adds a horizontal threshold strip line at the calculated mean   
        /// value of all data points in the first series of the chart.  
        /// </summary>  
        private void AddThresholdStripLine()  
        {  
            StripLine stripLine3 = new StripLine();  
  
            // Set threshold line so that it is only shown once  
            stripLine3.Interval = 0;  
  
            // Set the threshold line to be drawn at the calculated mean of the first series  
            stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series[0].Name);  
  
            stripLine3.BackColor = Color.DarkGreen;  
            stripLine3.StripWidth = 0.25;  
  
            // Set text properties for the threshold line  
            stripLine3.Text = "Mean";  
            stripLine3.ForeColor = Color.Black;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine3);  
        }  
    }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.IntervalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double IntervalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffset : double with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.IntervalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.AxisLabelDateValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-226">Obtient ou définit le décalage du quadrillage, des graduations, des franges et des étiquettes d'axe.</span><span class="sxs-lookup"><span data-stu-id="316e7-226">Gets or sets the offset of grid lines, tick marks, strip lines and axis labels.</span></span></summary>
        <value><span data-ttu-id="316e7-227">Valeur <see langword="double" /> qui représente le décalage de l'intervalle.</span><span class="sxs-lookup"><span data-stu-id="316e7-227">A <see langword="double" /> value that represents the interval offset.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-228">Le décalage de l’intervalle des graduations secondaires et le quadrillage n’est jamais affecté par la valeur de la <xref:System.Web.UI.DataVisualization.Charting.Axis.IntervalOffset%2A> propriété de la <xref:System.Web.UI.DataVisualization.Charting.Axis> objet.</span><span class="sxs-lookup"><span data-stu-id="316e7-228">The interval offset of minor tick marks and grid lines is never affected by the value of the <xref:System.Web.UI.DataVisualization.Charting.Axis.IntervalOffset%2A> property of the <xref:System.Web.UI.DataVisualization.Charting.Axis> object.</span></span>  
  
 <span data-ttu-id="316e7-229">Le <xref:System.Web.UI.DataVisualization.Charting.StripLine.IntervalOffset%2A> paramètre de propriété définit les unités de mesure du décalage.</span><span class="sxs-lookup"><span data-stu-id="316e7-229">The <xref:System.Web.UI.DataVisualization.Charting.StripLine.IntervalOffset%2A> property setting defines the units of measurement of the offset.</span></span>  
  
 <span data-ttu-id="316e7-230">Le <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> peut être une valeur négative.</span><span class="sxs-lookup"><span data-stu-id="316e7-230">The <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> can be a negative value.</span></span>  
  
 <span data-ttu-id="316e7-231">La valeur par défaut est `Auto` (`0`).</span><span class="sxs-lookup"><span data-stu-id="316e7-231">The default value is `Auto` (`0`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="316e7-232">L’exemple de code suivant illustre trois applications des franges.</span><span class="sxs-lookup"><span data-stu-id="316e7-232">The following code example demonstrates three applications of strip lines.</span></span> <span data-ttu-id="316e7-233">Tout d’abord, horizontal franges sont ajoutés à intervalles réguliers.</span><span class="sxs-lookup"><span data-stu-id="316e7-233">First, horizontal strip lines are added at recurring intervals.</span></span> <span data-ttu-id="316e7-234">Les franges verticales, deuxième, sont ajoutées pour mettre en surbrillance des données de week-end pointe.</span><span class="sxs-lookup"><span data-stu-id="316e7-234">Second, vertical strip lines are added to highlight weekend data points.</span></span> <span data-ttu-id="316e7-235">Enfin, une frange non périodique est ajoutée pour indiquer la moyenne des points de données de la première série du graphique.</span><span class="sxs-lookup"><span data-stu-id="316e7-235">Lastly, a non-recurring strip line is added to denote the mean of the data points in the first series of the chart.</span></span>  
  
```vb  
Imports System.Web.UI.DataVisualization.Charting  
  
Public Partial Class StripLines   
    Inherits System.Web.UI.Page   
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)  
  
        ' Add chart data before adding strip lines.   
        AddChartData()   
  
        ' Adds repeating horizontal strip lines.   
        AddHorizRepeatingStripLines()   
  
        ' Highlights weekend points using strip lines.   
        HighlightWeekendsWithStripLines()   
  
        ' Adds a threshold line using strip lines.   
        AddThresholdStripLine()   
    End Sub   
  
    ''' <summary>   
    ''' Adds a week of data with values between 20 and 35.   
    ''' </summary>   
    Private Sub AddChartData()   
        ' Declare new random variable   
        Dim rand As New Random()   
        For i As Integer = 0 To 6   
  
            ' Add a week of data   
            chart1.Series(0).Points.AddXY(DateTime.Now.AddDays(i), rand.[Next](20, 35))   
        Next   
    End Sub   
  
    ''' <summary>   
    ''' Adds repeating horizontal strip lines at intervals of 5.   
    ''' </summary>   
    Private Sub AddHorizRepeatingStripLines()   
        ' Instantiate new strip line   
        Dim stripLine1 As New StripLine()   
        stripLine1.StripWidth = 2.5   
        stripLine1.Interval = 5   
  
        ' Consider adding transparency so that the strip lines are lighter   
        stripLine1.BackColor = Color.FromArgb(120, Color.Red)   
  
        ' Add the strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine1)   
    End Sub   
  
    ''' <summary>   
    ''' Adds strip lines to highlight weekend values.   
    ''' </summary>   
    Private Sub HighlightWeekendsWithStripLines()   
        ' Set strip line to highlight weekends   
        Dim stripLine2 As New StripLine()   
        stripLine2.BackColor = Color.FromArgb(120, Color.Gold)   
        stripLine2.IntervalOffset = -1.5   
        stripLine2.IntervalOffsetType = DateTimeIntervalType.Days   
        stripLine2.Interval = 1   
        stripLine2.IntervalType = DateTimeIntervalType.Weeks   
        stripLine2.StripWidth = 2   
        stripLine2.StripWidthType = DateTimeIntervalType.Days   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisX.StripLines.Add(stripLine2)   
  
        ' Set the axis label to show the name of the day   
        ' This is done in order to demonstrate that weekends are highlighted   
        chart1.ChartAreas(0).AxisX.LabelStyle.Format = "ddd"   
    End Sub   
  
    ''' <summary>   
    ''' Adds a horizontal threshold strip line at the calculated mean   
    ''' value of all data points in the first series of the chart.   
    ''' </summary>   
    Private Sub AddThresholdStripLine()   
        Dim stripLine3 As New StripLine()   
  
        ' Set threshold line so that it is only shown once   
        stripLine3.Interval = 0   
  
        ' Set the threshold line to be drawn at the calculated mean of the first series   
        stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series(0).Name)   
  
        stripLine3.BackColor = Color.DarkGreen   
        stripLine3.StripWidth = 0.25   
  
        ' Set text properties for the threshold line   
        stripLine3.Text = "Mean"   
        stripLine3.ForeColor = Color.Black   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine3)   
    End Sub   
End Class  
```  
  
```csharp  
public partial class StripLines : System.Web.UI.Page   
    {  
        protected void Page_Load(object sender, EventArgs e)  
        {              
            // Add chart data  
            AddChartData();  
  
            // Adds repeating horizontal strip lines.  
            AddHorizRepeatingStripLines();  
  
            // Highlights weekend points using strip lines.  
            HighlightWeekendsWithStripLines();  
  
            // Adds a threshold line using strip lines.  
            AddThresholdStripLine();  
        }  
  
        /// <summary>  
        /// Adds a week of data with values between 20 and 35.  
        /// </summary>  
        private void AddChartData()  
        {  
            // Declare new random variable  
            Random rand = new Random();  
  
            // Add a week of data  
            for (int i = 0; i < 7; i++)   
            {  
                chart1.Series[0].Points.AddXY(DateTime.Now.AddDays(i), rand.Next(20,35));  
            }  
        }  
  
        /// <summary>  
        /// Adds repeating horizontal strip lines at intervals of 5.  
        /// </summary>  
        private void AddHorizRepeatingStripLines()  
        {  
            // Instantiate new strip line  
            StripLine stripLine1 = new StripLine();  
            stripLine1.StripWidth = 0;  
            stripLine1.BorderColor = Color.Black;  
            stripLine1.BorderWidth = 3;  
            stripLine1.Interval = 5;  
  
            // Consider adding transparency so that the strip lines are lighter  
            stripLine1.BackColor = Color.FromArgb(120, Color.Red);  
  
            stripLine1.BackSecondaryColor = Color.Black;  
            stripLine1.BackGradientStyle = GradientStyle.LeftRight;  
  
            // Add the strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine1);  
        }  
  
        /// <summary>  
        /// Adds strip lines to highlight weekend values.  
        /// </summary>  
        private void HighlightWeekendsWithStripLines()  
        {  
            // Set strip line to highlight weekends  
            StripLine stripLine2 = new StripLine();  
            stripLine2.BackColor = Color.FromArgb(120, Color.Gold);              
            stripLine2.IntervalOffset = -1.5;  
            stripLine2.IntervalOffsetType = DateTimeIntervalType.Days;  
            stripLine2.Interval = 1;  
            stripLine2.IntervalType = DateTimeIntervalType.Weeks;  
            stripLine2.StripWidth = 2;  
            stripLine2.StripWidthType = DateTimeIntervalType.Days;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisX.StripLines.Add(stripLine2);  
  
            // Set the axis label to show the name of the day  
            // This is done in order to demonstrate that weekends are highlighted  
            chart1.ChartAreas[0].AxisX.LabelStyle.Format = "ddd";  
        }  
  
        /// <summary>  
        /// Adds a horizontal threshold strip line at the calculated mean   
        /// value of all data points in the first series of the chart.  
        /// </summary>  
        private void AddThresholdStripLine()  
        {  
            StripLine stripLine3 = new StripLine();  
  
            // Set threshold line so that it is only shown once  
            stripLine3.Interval = 0;  
  
            // Set the threshold line to be drawn at the calculated mean of the first series  
            stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series[0].Name);  
  
            stripLine3.BackColor = Color.DarkGreen;  
            stripLine3.StripWidth = 0.25;  
  
            // Set text properties for the threshold line  
            stripLine3.Text = "Mean";  
            stripLine3.ForeColor = Color.Black;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine3);  
        }  
    }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.IntervalOffsetType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffsetType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::DateTimeIntervalType IntervalOffsetType { System::Web::UI::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Web::UI::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffsetType : System.Web.UI.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.IntervalOffsetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-236">Obtient ou définit le type de décalage de l'intervalle de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-236">Gets or sets the interval offset type of the strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-237">Valeur d'énumération <see cref="T:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType" /> qui indique le type d'intervalle.</span><span class="sxs-lookup"><span data-stu-id="316e7-237">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value that indicates the interval type.</span></span> <span data-ttu-id="316e7-238">La valeur par défaut est <see cref="F:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-238">The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-239">Par défaut, cette propriété est définie <xref:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto>; la valeur réelle de cette propriété est déterminée par le <xref:System.Web.UI.DataVisualization.Charting.StripLine.IntervalType%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="316e7-239">By default, this property is set to <xref:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto>; the actual value of this property is determined by the <xref:System.Web.UI.DataVisualization.Charting.StripLine.IntervalType%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="316e7-240">L’exemple de code suivant illustre trois applications des franges.</span><span class="sxs-lookup"><span data-stu-id="316e7-240">The following code example demonstrates three applications of strip lines.</span></span> <span data-ttu-id="316e7-241">Tout d’abord, horizontal franges sont ajoutés à intervalles réguliers.</span><span class="sxs-lookup"><span data-stu-id="316e7-241">First, horizontal strip lines are added at recurring intervals.</span></span> <span data-ttu-id="316e7-242">Les franges verticales, deuxième, sont ajoutées pour mettre en surbrillance des données de week-end pointe.</span><span class="sxs-lookup"><span data-stu-id="316e7-242">Second, vertical strip lines are added to highlight weekend data points.</span></span> <span data-ttu-id="316e7-243">Enfin, une frange non périodique est ajoutée pour indiquer la moyenne des points de données de la première série du graphique.</span><span class="sxs-lookup"><span data-stu-id="316e7-243">Lastly, a non-recurring strip line is added to denote the mean of the data points in the first series of the chart.</span></span>  
  
```vb  
Imports System.Web.UI.DataVisualization.Charting  
  
Public Partial Class StripLines   
    Inherits System.Web.UI.Page   
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)  
  
        ' Add chart data before adding strip lines.   
        AddChartData()   
  
        ' Adds repeating horizontal strip lines.   
        AddHorizRepeatingStripLines()   
  
        ' Highlights weekend points using strip lines.   
        HighlightWeekendsWithStripLines()   
  
        ' Adds a threshold line using strip lines.   
        AddThresholdStripLine()   
    End Sub   
  
    ''' <summary>   
    ''' Adds a week of data with values between 20 and 35.   
    ''' </summary>   
    Private Sub AddChartData()   
        ' Declare new random variable   
        Dim rand As New Random()   
        For i As Integer = 0 To 6   
  
            ' Add a week of data   
            chart1.Series(0).Points.AddXY(DateTime.Now.AddDays(i), rand.[Next](20, 35))   
        Next   
    End Sub   
  
    ''' <summary>   
    ''' Adds repeating horizontal strip lines at intervals of 5.   
    ''' </summary>   
    Private Sub AddHorizRepeatingStripLines()   
        ' Instantiate new strip line   
        Dim stripLine1 As New StripLine()   
        stripLine1.StripWidth = 2.5   
        stripLine1.Interval = 5   
  
        ' Consider adding transparency so that the strip lines are lighter   
        stripLine1.BackColor = Color.FromArgb(120, Color.Red)   
  
        ' Add the strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine1)   
    End Sub   
  
    ''' <summary>   
    ''' Adds strip lines to highlight weekend values.   
    ''' </summary>   
    Private Sub HighlightWeekendsWithStripLines()   
        ' Set strip line to highlight weekends   
        Dim stripLine2 As New StripLine()   
        stripLine2.BackColor = Color.FromArgb(120, Color.Gold)   
        stripLine2.IntervalOffset = -1.5   
        stripLine2.IntervalOffsetType = DateTimeIntervalType.Days   
        stripLine2.Interval = 1   
        stripLine2.IntervalType = DateTimeIntervalType.Weeks   
        stripLine2.StripWidth = 2   
        stripLine2.StripWidthType = DateTimeIntervalType.Days   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisX.StripLines.Add(stripLine2)   
  
        ' Set the axis label to show the name of the day   
        ' This is done in order to demonstrate that weekends are highlighted   
        chart1.ChartAreas(0).AxisX.LabelStyle.Format = "ddd"   
    End Sub   
  
    ''' <summary>   
    ''' Adds a horizontal threshold strip line at the calculated mean   
    ''' value of all data points in the first series of the chart.   
    ''' </summary>   
    Private Sub AddThresholdStripLine()   
        Dim stripLine3 As New StripLine()   
  
        ' Set threshold line so that it is only shown once   
        stripLine3.Interval = 0   
  
        ' Set the threshold line to be drawn at the calculated mean of the first series   
        stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series(0).Name)   
  
        stripLine3.BackColor = Color.DarkGreen   
        stripLine3.StripWidth = 0.25   
  
        ' Set text properties for the threshold line   
        stripLine3.Text = "Mean"   
        stripLine3.ForeColor = Color.Black   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine3)   
    End Sub   
End Class  
```  
  
```csharp  
public partial class StripLines : System.Web.UI.Page   
    {  
        protected void Page_Load(object sender, EventArgs e)  
        {              
            // Add chart data  
            AddChartData();  
  
            // Adds repeating horizontal strip lines.  
            AddHorizRepeatingStripLines();  
  
            // Highlights weekend points using strip lines.  
            HighlightWeekendsWithStripLines();  
  
            // Adds a threshold line using strip lines.  
            AddThresholdStripLine();  
        }  
  
        /// <summary>  
        /// Adds a week of data with values between 20 and 35.  
        /// </summary>  
        private void AddChartData()  
        {  
            // Declare new random variable  
            Random rand = new Random();  
  
            // Add a week of data  
            for (int i = 0; i < 7; i++)   
            {  
                chart1.Series[0].Points.AddXY(DateTime.Now.AddDays(i), rand.Next(20,35));  
            }  
        }  
  
        /// <summary>  
        /// Adds repeating horizontal strip lines at intervals of 5.  
        /// </summary>  
        private void AddHorizRepeatingStripLines()  
        {  
            // Instantiate new strip line  
            StripLine stripLine1 = new StripLine();  
            stripLine1.StripWidth = 0;  
            stripLine1.BorderColor = Color.Black;  
            stripLine1.BorderWidth = 3;  
            stripLine1.Interval = 5;  
  
            // Consider adding transparency so that the strip lines are lighter  
            stripLine1.BackColor = Color.FromArgb(120, Color.Red);  
  
            stripLine1.BackSecondaryColor = Color.Black;  
            stripLine1.BackGradientStyle = GradientStyle.LeftRight;  
  
            // Add the strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine1);  
        }  
  
        /// <summary>  
        /// Adds strip lines to highlight weekend values.  
        /// </summary>  
        private void HighlightWeekendsWithStripLines()  
        {  
            // Set strip line to highlight weekends  
            StripLine stripLine2 = new StripLine();  
            stripLine2.BackColor = Color.FromArgb(120, Color.Gold);              
            stripLine2.IntervalOffset = -1.5;  
            stripLine2.IntervalOffsetType = DateTimeIntervalType.Days;  
            stripLine2.Interval = 1;  
            stripLine2.IntervalType = DateTimeIntervalType.Weeks;  
            stripLine2.StripWidth = 2;  
            stripLine2.StripWidthType = DateTimeIntervalType.Days;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisX.StripLines.Add(stripLine2);  
  
            // Set the axis label to show the name of the day  
            // This is done in order to demonstrate that weekends are highlighted  
            chart1.ChartAreas[0].AxisX.LabelStyle.Format = "ddd";  
        }  
  
        /// <summary>  
        /// Adds a horizontal threshold strip line at the calculated mean   
        /// value of all data points in the first series of the chart.  
        /// </summary>  
        private void AddThresholdStripLine()  
        {  
            StripLine stripLine3 = new StripLine();  
  
            // Set threshold line so that it is only shown once  
            stripLine3.Interval = 0;  
  
            // Set the threshold line to be drawn at the calculated mean of the first series  
            stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series[0].Name);  
  
            stripLine3.BackColor = Color.DarkGreen;  
            stripLine3.StripWidth = 0.25;  
  
            // Set text properties for the threshold line  
            stripLine3.Text = "Mean";  
            stripLine3.ForeColor = Color.Black;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine3);  
        }  
    }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.IntervalType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::DateTimeIntervalType IntervalType { System::Web::UI::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Web::UI::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalType : System.Web.UI.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.IntervalType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-244">Obtient ou définit le type d'intervalle d'un objet <see cref="T:System.Web.UI.DataVisualization.Charting.StripLine" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-244">Gets or sets the interval type of a <see cref="T:System.Web.UI.DataVisualization.Charting.StripLine" /> object.</span></span></summary>
        <value><span data-ttu-id="316e7-245">Valeur d'énumération <see cref="T:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType" /> qui indique le type d'intervalle.</span><span class="sxs-lookup"><span data-stu-id="316e7-245">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value that indicates the interval type.</span></span> <span data-ttu-id="316e7-246">La valeur par défaut est <see cref="F:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-246">The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-247">Types d’intervalle peuvent être définis sur <xref:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto>, auquel cas le type dépend : les types valeur X ou Y de tracés <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objets - en fonction de l’axe auquel le <xref:System.Web.UI.DataVisualization.Charting.StripLine> objets appartiennent à - et l’axe de l’échelle.</span><span class="sxs-lookup"><span data-stu-id="316e7-247">Interval types can be set to <xref:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto>, in which case the type depends on: the X-value or Y-value types of the plotted <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objects - depending on which axis the <xref:System.Web.UI.DataVisualization.Charting.StripLine> objects belong to - and the axis scale.</span></span>  
  
 <span data-ttu-id="316e7-248">Le <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> propriété détermine la fréquence à laquelle une bande ou une ligne est dessinée.</span><span class="sxs-lookup"><span data-stu-id="316e7-248">The <xref:System.Web.UI.DataVisualization.Charting.StripLine.Interval%2A> property determines how often a strip or line is drawn.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="316e7-249">L’exemple de code suivant illustre trois applications des franges.</span><span class="sxs-lookup"><span data-stu-id="316e7-249">The following code example demonstrates three applications of strip lines.</span></span> <span data-ttu-id="316e7-250">Tout d’abord, horizontal franges sont ajoutés à intervalles réguliers.</span><span class="sxs-lookup"><span data-stu-id="316e7-250">First, horizontal strip lines are added at recurring intervals.</span></span> <span data-ttu-id="316e7-251">Les franges verticales, deuxième, sont ajoutées pour mettre en surbrillance des données de week-end pointe.</span><span class="sxs-lookup"><span data-stu-id="316e7-251">Second, vertical strip lines are added to highlight weekend data points.</span></span> <span data-ttu-id="316e7-252">Enfin, une frange non périodique est ajoutée pour indiquer la moyenne des points de données de la première série du graphique.</span><span class="sxs-lookup"><span data-stu-id="316e7-252">Lastly, a non-recurring strip line is added to denote the mean of the data points in the first series of the chart.</span></span>  
  
```vb  
Imports System.Web.UI.DataVisualization.Charting  
  
Public Partial Class StripLines   
    Inherits System.Web.UI.Page   
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)  
  
        ' Add chart data before adding strip lines.   
        AddChartData()   
  
        ' Adds repeating horizontal strip lines.   
        AddHorizRepeatingStripLines()   
  
        ' Highlights weekend points using strip lines.   
        HighlightWeekendsWithStripLines()   
  
        ' Adds a threshold line using strip lines.   
        AddThresholdStripLine()   
    End Sub   
  
    ''' <summary>   
    ''' Adds a week of data with values between 20 and 35.   
    ''' </summary>   
    Private Sub AddChartData()   
        ' Declare new random variable   
        Dim rand As New Random()   
        For i As Integer = 0 To 6   
  
            ' Add a week of data   
            chart1.Series(0).Points.AddXY(DateTime.Now.AddDays(i), rand.[Next](20, 35))   
        Next   
    End Sub   
  
    ''' <summary>   
    ''' Adds repeating horizontal strip lines at intervals of 5.   
    ''' </summary>   
    Private Sub AddHorizRepeatingStripLines()   
        ' Instantiate new strip line   
        Dim stripLine1 As New StripLine()   
        stripLine1.StripWidth = 2.5   
        stripLine1.Interval = 5   
  
        ' Consider adding transparency so that the strip lines are lighter   
        stripLine1.BackColor = Color.FromArgb(120, Color.Red)   
  
        ' Add the strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine1)   
    End Sub   
  
    ''' <summary>   
    ''' Adds strip lines to highlight weekend values.   
    ''' </summary>   
    Private Sub HighlightWeekendsWithStripLines()   
        ' Set strip line to highlight weekends   
        Dim stripLine2 As New StripLine()   
        stripLine2.BackColor = Color.FromArgb(120, Color.Gold)   
        stripLine2.IntervalOffset = -1.5   
        stripLine2.IntervalOffsetType = DateTimeIntervalType.Days   
        stripLine2.Interval = 1   
        stripLine2.IntervalType = DateTimeIntervalType.Weeks   
        stripLine2.StripWidth = 2   
        stripLine2.StripWidthType = DateTimeIntervalType.Days   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisX.StripLines.Add(stripLine2)   
  
        ' Set the axis label to show the name of the day   
        ' This is done in order to demonstrate that weekends are highlighted   
        chart1.ChartAreas(0).AxisX.LabelStyle.Format = "ddd"   
    End Sub   
  
    ''' <summary>   
    ''' Adds a horizontal threshold strip line at the calculated mean   
    ''' value of all data points in the first series of the chart.   
    ''' </summary>   
    Private Sub AddThresholdStripLine()   
        Dim stripLine3 As New StripLine()   
  
        ' Set threshold line so that it is only shown once   
        stripLine3.Interval = 0   
  
        ' Set the threshold line to be drawn at the calculated mean of the first series   
        stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series(0).Name)   
  
        stripLine3.BackColor = Color.DarkGreen   
        stripLine3.StripWidth = 0.25   
  
        ' Set text properties for the threshold line   
        stripLine3.Text = "Mean"   
        stripLine3.ForeColor = Color.Black   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine3)   
    End Sub   
End Class  
```  
  
```csharp  
public partial class StripLines : System.Web.UI.Page   
    {  
        protected void Page_Load(object sender, EventArgs e)  
        {              
            // Add chart data  
            AddChartData();  
  
            // Adds repeating horizontal strip lines.  
            AddHorizRepeatingStripLines();  
  
            // Highlights weekend points using strip lines.  
            HighlightWeekendsWithStripLines();  
  
            // Adds a threshold line using strip lines.  
            AddThresholdStripLine();  
        }  
  
        /// <summary>  
        /// Adds a week of data with values between 20 and 35.  
        /// </summary>  
        private void AddChartData()  
        {  
            // Declare new random variable  
            Random rand = new Random();  
  
            // Add a week of data  
            for (int i = 0; i < 7; i++)   
            {  
                chart1.Series[0].Points.AddXY(DateTime.Now.AddDays(i), rand.Next(20,35));  
            }  
        }  
  
        /// <summary>  
        /// Adds repeating horizontal strip lines at intervals of 5.  
        /// </summary>  
        private void AddHorizRepeatingStripLines()  
        {  
            // Instantiate new strip line  
            StripLine stripLine1 = new StripLine();  
            stripLine1.StripWidth = 0;  
            stripLine1.BorderColor = Color.Black;  
            stripLine1.BorderWidth = 3;  
            stripLine1.Interval = 5;  
  
            // Consider adding transparency so that the strip lines are lighter  
            stripLine1.BackColor = Color.FromArgb(120, Color.Red);  
  
            stripLine1.BackSecondaryColor = Color.Black;  
            stripLine1.BackGradientStyle = GradientStyle.LeftRight;  
  
            // Add the strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine1);  
        }  
  
        /// <summary>  
        /// Adds strip lines to highlight weekend values.  
        /// </summary>  
        private void HighlightWeekendsWithStripLines()  
        {  
            // Set strip line to highlight weekends  
            StripLine stripLine2 = new StripLine();  
            stripLine2.BackColor = Color.FromArgb(120, Color.Gold);              
            stripLine2.IntervalOffset = -1.5;  
            stripLine2.IntervalOffsetType = DateTimeIntervalType.Days;  
            stripLine2.Interval = 1;  
            stripLine2.IntervalType = DateTimeIntervalType.Weeks;  
            stripLine2.StripWidth = 2;  
            stripLine2.StripWidthType = DateTimeIntervalType.Days;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisX.StripLines.Add(stripLine2);  
  
            // Set the axis label to show the name of the day  
            // This is done in order to demonstrate that weekends are highlighted  
            chart1.ChartAreas[0].AxisX.LabelStyle.Format = "ddd";  
        }  
  
        /// <summary>  
        /// Adds a horizontal threshold strip line at the calculated mean   
        /// value of all data points in the first series of the chart.  
        /// </summary>  
        private void AddThresholdStripLine()  
        {  
            StripLine stripLine3 = new StripLine();  
  
            // Set threshold line so that it is only shown once  
            stripLine3.Interval = 0;  
  
            // Set the threshold line to be drawn at the calculated mean of the first series  
            stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series[0].Name);  
  
            stripLine3.BackColor = Color.DarkGreen;  
            stripLine3.StripWidth = 0.25;  
  
            // Set text properties for the threshold line  
            stripLine3.Text = "Mean";  
            stripLine3.ForeColor = Color.Black;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine3);  
        }  
    }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapAreaAttributes">
      <MemberSignature Language="C#" Value="public string MapAreaAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MapAreaAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.MapAreaAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property MapAreaAttributes As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MapAreaAttributes { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MapAreaAttributes : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.MapAreaAttributes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.DataVisualization.Charting.IChartMapArea.MapAreaAttributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-253">Obtient ou définit les attributs de zone réactive de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-253">Gets or sets the map area attributes of the strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-254">Valeur <see langword="string" /> qui représente les attributs de la zone réactive correspondante de l'élément de graphique.</span><span class="sxs-lookup"><span data-stu-id="316e7-254">A <see langword="string" /> value that represents the attributes of the chart element's corresponding map area.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.DataVisualization.Charting.StripLine.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("StripLine")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-255">Obtient le nom de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-255">Gets the name of the strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-256">Valeur <see langword="string" /> qui représente le nom de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-256">A <see langword="string" /> value that represents the name of the strip line.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostBackValue">
      <MemberSignature Language="C#" Value="public string PostBackValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.PostBackValue" />
      <MemberSignature Language="VB.NET" Value="Public Property PostBackValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PostBackValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PostBackValue : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.PostBackValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.DataVisualization.Charting.IChartMapArea.PostBackValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-257">Obtient ou définit la valeur de publication (postback) qui peut être traitée sur un événement <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-257">Gets or sets the postback value that can be processed on a <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" /> event.</span></span></summary>
        <value><span data-ttu-id="316e7-258">Valeur de chaîne qui représente la valeur de publication (postback) passée à un événement <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-258">A string value that represents the postback value that is passed to a <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" /> event.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StripWidth">
      <MemberSignature Language="C#" Value="public double StripWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StripWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property StripWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StripWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.StripWidth : double with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.StripWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-259">Obtient ou définit la largeur d'une frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-259">Gets or sets the width of a strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-260">Valeur <see langword="double" /> qui détermine si une frange ou une ligne est dessinée.</span><span class="sxs-lookup"><span data-stu-id="316e7-260">A <see langword="double" /> value that determines whether a strip or a line is drawn.</span></span> <span data-ttu-id="316e7-261">La valeur par défaut est 0,0.</span><span class="sxs-lookup"><span data-stu-id="316e7-261">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-262">Cette propriété ne peut pas être définie sur une valeur inférieure à 0.0, sinon une exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="316e7-262">This property cannot be set to a value less than 0.0, otherwise an exception will be raised.</span></span>  
  
 <span data-ttu-id="316e7-263">Un paramètre de 0.0 entraîne une ligne est dessinée ; Cette ligne utilisera le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderColor%2A>, <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderDashStyle%2A> et <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderWidth%2A> des paramètres de propriété pour sa couleur, la largeur et le style.</span><span class="sxs-lookup"><span data-stu-id="316e7-263">A setting of 0.0 will result in a line being drawn; this line will use the <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderColor%2A>, <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderDashStyle%2A> and <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderWidth%2A> property settings for its color, width and style.</span></span> <span data-ttu-id="316e7-264">Aucun de la `Back*` propriétés dans cette classe sont utilisées lorsque la valeur de <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> est 0.0.</span><span class="sxs-lookup"><span data-stu-id="316e7-264">None of the `Back*` properties in this class are utilized when the value of <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> is 0.0.</span></span>  
  
 <span data-ttu-id="316e7-265">Si vous définissez le <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> propriété une valeur supérieure à 0.0, une frange est créée.</span><span class="sxs-lookup"><span data-stu-id="316e7-265">If you set the <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> property to a value greater than 0.0, a strip will be created.</span></span> <span data-ttu-id="316e7-266">Le <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderColor%2A>, <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderDashStyle%2A> et <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderWidth%2A> propriétés s’appliquent uniquement à la bordure de la bande ; toutes les `Back*` propriétés sont ensuite utilisées pour les propriétés d’arrière-plan de la bande.</span><span class="sxs-lookup"><span data-stu-id="316e7-266">The <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderColor%2A>, <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderDashStyle%2A> and <xref:System.Web.UI.DataVisualization.Charting.StripLine.BorderWidth%2A> properties only apply to the border of the strip; all of the `Back*` properties are then used for the background properties of the strip.</span></span>  
  
 <span data-ttu-id="316e7-267">Si la valeur de la <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> propriété est supérieure à 0.0, les unités sont déterminées par l’échelle de l’axe pertinent.</span><span class="sxs-lookup"><span data-stu-id="316e7-267">If the value of the <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> property is greater than 0.0, the units are determined by the relevant axis scale.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StripWidthType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DateTimeIntervalType StripWidthType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.DateTimeIntervalType StripWidthType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.StripWidthType" />
      <MemberSignature Language="VB.NET" Value="Public Property StripWidthType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::DateTimeIntervalType StripWidthType { System::Web::UI::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Web::UI::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.StripWidthType : System.Web.UI.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.StripWidthType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-268">Obtient ou définit l'unité de mesure de la propriété <see cref="P:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-268">Gets or sets the unit of measurement for the <see cref="P:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth" /> property.</span></span></summary>
        <value><span data-ttu-id="316e7-269">Valeur d'énumération <see cref="T:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType" /> qui indique le type de largeur.</span><span class="sxs-lookup"><span data-stu-id="316e7-269">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value that indicates the width type.</span></span> <span data-ttu-id="316e7-270">La valeur par défaut est <see cref="F:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</span><span class="sxs-lookup"><span data-stu-id="316e7-270">The default value is <see cref="F:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-271">Cette propriété détermine les unités utilisées pour le <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="316e7-271">This property determines the units used for the <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> property.</span></span> <span data-ttu-id="316e7-272">Par exemple, pour définir une frange représente « une semaine », vous pouvez affecter cette propriété <xref:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Weeks> et définir le <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> propriété à un (1.0).</span><span class="sxs-lookup"><span data-stu-id="316e7-272">For example, to set a strip line to represent "one week", you could set this property to <xref:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Weeks> and set the <xref:System.Web.UI.DataVisualization.Charting.StripLine.StripWidth%2A> property to one (1.0).</span></span>  
  
 <span data-ttu-id="316e7-273">Vous pouvez modifier la valeur de cette propriété à partir de <xref:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto> à un <xref:System.DateTime> valeur lorsque l’échelle d’axe appropriée utilise un <xref:System.DateTime> valeur.</span><span class="sxs-lookup"><span data-stu-id="316e7-273">You can change the value of this property from <xref:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto> to a <xref:System.DateTime> value when the relevant axis scale uses a <xref:System.DateTime> value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-274">Obtient ou définit le texte de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-274">Gets or sets the text for the strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-275">Valeur <see langword="string" /> qui représente le texte d'une frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-275">A <see langword="string" /> value that represents the text of a strip line.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-276">Cette propriété permet d’ajouter du texte à une frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-276">Use this property to add text to a strip line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="316e7-277">L’exemple de code suivant montre comment ajouter une ligne de seuil, une fois que le contrôle de graphique a été ajouté à l’aire de conception.</span><span class="sxs-lookup"><span data-stu-id="316e7-277">The following code example demonstrates how to add a threshold line after the chart control has been added to the design surface.</span></span> <span data-ttu-id="316e7-278">Le graphique utilise une frange non périodique pour afficher un calcul de la moyenne de tous les points de données dans une série.</span><span class="sxs-lookup"><span data-stu-id="316e7-278">The chart uses a non-recurring strip line to show a calculation of the mean of all data points in a series.</span></span>  
  
```vb  
Imports System.Web.UI.DataVisualization.Charting  
  
Public Partial Class StripLines   
    Inherits System.Web.UI.Page   
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)  
  
        ' Add chart data before adding strip lines.   
        AddChartData()   
  
        ' Adds a threshold line using strip lines.   
        AddThresholdStripLine()   
    End Sub   
  
    ''' <summary>   
    ''' Adds a week of data with values between 20 and 35.   
    ''' </summary>   
    Private Sub AddChartData()   
        ' Declare new random variable   
        Dim rand As New Random()   
        For i As Integer = 0 To 6   
  
            ' Add a week of data   
            chart1.Series(0).Points.AddXY(DateTime.Now.AddDays(i), rand.[Next](20, 35))   
        Next   
    End Sub   
  
    ''' <summary>   
    ''' Adds a horizontal threshold strip line at the calculated mean   
    ''' value of all data points in the first series of the chart.   
    ''' </summary>   
    Private Sub AddThresholdStripLine()   
        Dim stripLine3 As New StripLine()   
  
        ' Set threshold line so that it is only shown once   
        stripLine3.Interval = 0   
  
        ' Set the threshold line to be drawn at the calculated mean of the first series   
        stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series(0).Name)   
  
        stripLine3.BackColor = Color.DarkGreen   
        stripLine3.StripWidth = 0.25   
  
        ' Set text properties for the threshold line   
        stripLine3.Text = "Mean"   
        stripLine3.ForeColor = Color.Black   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine3)   
    End Sub   
End Class  
```  
  
```csharp  
public partial class StripLines : System.Web.UI.Page   
    {  
        protected void Page_Load(object sender, EventArgs e)  
        {              
            // Add chart data  
            AddChartData();  
  
            // Adds a threshold line using strip lines.  
            AddThresholdStripLine();  
        }  
  
        /// <summary>  
        /// Adds a week of data with values between 20 and 35.  
        /// </summary>  
        private void AddChartData()  
        {  
            // Declare new random variable  
            Random rand = new Random();  
  
            // Add a week of data  
            for (int i = 0; i < 7; i++)   
            {  
                chart1.Series[0].Points.AddXY(DateTime.Now.AddDays(i), rand.Next(20,35));  
            }  
        }  
  
        /// <summary>  
        /// Adds a horizontal threshold strip line at the calculated mean   
        /// value of all data points in the first series of the chart.  
        /// </summary>  
        private void AddThresholdStripLine()  
        {  
            StripLine stripLine3 = new StripLine();  
  
            // Set threshold line so that it is only shown once  
            stripLine3.Interval = 0;  
  
            // Set the threshold line to be drawn at the calculated mean of the first series  
            stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series[0].Name);  
  
            stripLine3.BackColor = Color.DarkGreen;  
            stripLine3.StripWidth = 0.25;  
  
            // Set text properties for the threshold line  
            stripLine3.Text = "Mean";  
            stripLine3.ForeColor = Color.Black;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine3);  
        }  
    }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment TextAlignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Drawing.StringAlignment with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.StringAlignment), "Far")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-279">Obtient ou définit l'alignement du texte de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-279">Gets or sets the text alignment of the strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-280">Valeur <see cref="T:System.Drawing.StringAlignment" /> qui représente l'alignement du texte de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-280">A <see cref="T:System.Drawing.StringAlignment" /> value that represents the alignment of the strip line text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="316e7-281">L’exemple de code suivant montre comment ajouter une ligne de seuil, une fois que le contrôle de graphique a été ajouté à l’aire de conception.</span><span class="sxs-lookup"><span data-stu-id="316e7-281">The following code example demonstrates how to add a threshold line after the chart control has been added to the design surface.</span></span> <span data-ttu-id="316e7-282">Le graphique utilise une frange non périodique pour afficher un calcul de la moyenne de tous les points de données dans une série.</span><span class="sxs-lookup"><span data-stu-id="316e7-282">The chart uses a non-recurring strip line to show a calculation of the mean of all data points in a series.</span></span>  
  
```vb  
Imports System.Web.UI.DataVisualization.Charting  
  
Public Partial Class StripLines   
    Inherits System.Web.UI.Page   
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)  
  
        ' Add chart data before adding strip lines.   
        AddChartData()   
  
        ' Adds a threshold line using strip lines.   
        AddThresholdStripLine()   
    End Sub   
  
    ''' <summary>   
    ''' Adds a week of data with values between 20 and 35.   
    ''' </summary>   
    Private Sub AddChartData()   
        ' Declare new random variable   
        Dim rand As New Random()   
        For i As Integer = 0 To 6   
  
            ' Add a week of data   
            chart1.Series(0).Points.AddXY(DateTime.Now.AddDays(i), rand.[Next](20, 35))   
        Next   
    End Sub   
  
    ''' <summary>   
    ''' Adds a horizontal threshold strip line at the calculated mean   
    ''' value of all data points in the first series of the chart.   
    ''' </summary>   
    Private Sub AddThresholdStripLine()   
        Dim stripLine3 As New StripLine()   
  
        ' Set threshold line so that it is only shown once   
        stripLine3.Interval = 0   
  
        ' Set the threshold line to be drawn at the calculated mean of the first series   
        stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series(0).Name)   
  
        stripLine3.BackColor = Color.DarkGreen   
        stripLine3.StripWidth = 0.25   
  
        ' Set text properties for the threshold line   
        stripLine3.Text = "Mean"   
        stripLine3.ForeColor = Color.Black   
        stripLine3.TextAlignment = StringAlignment.Near   
        stripLine3.TextLineAlignment = StringAlignment.Near   
        stripLine3.TextOrientation = TextOrientation.Auto   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine3)   
    End Sub   
End Class  
```  
  
```csharp  
public partial class StripLines : System.Web.UI.Page   
    {  
        protected void Page_Load(object sender, EventArgs e)  
        {              
            // Add chart data  
            AddChartData();  
  
            // Adds a threshold line using strip lines.  
            AddThresholdStripLine();  
        }  
  
        /// <summary>  
        /// Adds a week of data with values between 20 and 35.  
        /// </summary>  
        private void AddChartData()  
        {  
            // Declare new random variable  
            Random rand = new Random();  
  
            // Add a week of data  
            for (int i = 0; i < 7; i++)   
            {  
                chart1.Series[0].Points.AddXY(DateTime.Now.AddDays(i), rand.Next(20,35));  
            }  
        }  
  
        /// <summary>  
        /// Adds a horizontal threshold strip line at the calculated mean   
        /// value of all data points in the first series of the chart.  
        /// </summary>  
        private void AddThresholdStripLine()  
        {  
            StripLine stripLine3 = new StripLine();  
  
            // Set threshold line so that it is only shown once  
            stripLine3.Interval = 0;  
  
            // Set the threshold line to be drawn at the calculated mean of the first series  
            stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series[0].Name);  
  
            stripLine3.BackColor = Color.DarkGreen;  
            stripLine3.StripWidth = 0.25;  
  
            // Set text properties for the threshold line  
            stripLine3.Text = "Mean";  
            stripLine3.ForeColor = Color.Black;  
            stripLine3.TextAlignment = StringAlignment.Near;  
            stripLine3.TextLineAlignment = StringAlignment.Near;  
            stripLine3.TextOrientation = TextOrientation.Auto;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine3);  
        }  
    }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextLineAlignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment TextLineAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment TextLineAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.TextLineAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextLineAlignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment TextLineAlignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextLineAlignment : System.Drawing.StringAlignment with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.TextLineAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.StringAlignment), "Near")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-283">Obtient ou définit l'alignement des lignes du texte de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-283">Gets or sets the text line alignment of strip line text.</span></span></summary>
        <value><span data-ttu-id="316e7-284">Valeur <see cref="T:System.Drawing.StringAlignment" /> qui représente l'alignement des lignes de texte.</span><span class="sxs-lookup"><span data-stu-id="316e7-284">A <see cref="T:System.Drawing.StringAlignment" /> value that represents the alignment of the text line.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="316e7-285">L’exemple de code suivant montre comment ajouter une ligne de seuil, une fois que le contrôle de graphique a été ajouté à l’aire de conception.</span><span class="sxs-lookup"><span data-stu-id="316e7-285">The following code example demonstrates how to add a threshold line after the chart control has been added to the design surface.</span></span> <span data-ttu-id="316e7-286">Le graphique utilise une frange non périodique pour afficher un calcul de la moyenne de tous les points de données dans une série.</span><span class="sxs-lookup"><span data-stu-id="316e7-286">The chart uses a non-recurring strip line to show a calculation of the mean of all data points in a series.</span></span>  
  
```vb  
Imports System.Web.UI.DataVisualization.Charting  
  
Public Partial Class StripLines   
    Inherits System.Web.UI.Page   
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)  
  
        ' Add chart data before adding strip lines.   
        AddChartData()   
  
        ' Adds a threshold line using strip lines.   
        AddThresholdStripLine()   
    End Sub   
  
    ''' <summary>   
    ''' Adds a week of data with values between 20 and 35.   
    ''' </summary>   
    Private Sub AddChartData()   
        ' Declare new random variable   
        Dim rand As New Random()   
        For i As Integer = 0 To 6   
  
            ' Add a week of data   
            chart1.Series(0).Points.AddXY(DateTime.Now.AddDays(i), rand.[Next](20, 35))   
        Next   
    End Sub   
  
    ''' <summary>   
    ''' Adds a horizontal threshold strip line at the calculated mean   
    ''' value of all data points in the first series of the chart.   
    ''' </summary>   
    Private Sub AddThresholdStripLine()   
        Dim stripLine3 As New StripLine()   
  
        ' Set threshold line so that it is only shown once   
        stripLine3.Interval = 0   
  
        ' Set the threshold line to be drawn at the calculated mean of the first series   
        stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series(0).Name)   
  
        stripLine3.BackColor = Color.DarkGreen   
        stripLine3.StripWidth = 0.25   
  
        ' Set text properties for the threshold line   
        stripLine3.Text = "Mean"   
        stripLine3.ForeColor = Color.Black   
        stripLine3.TextAlignment = StringAlignment.Near   
        stripLine3.TextLineAlignment = StringAlignment.Near   
        stripLine3.TextOrientation = TextOrientation.Auto   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine3)   
    End Sub   
End Class  
```  
  
```csharp  
public partial class StripLines : System.Web.UI.Page   
    {  
        protected void Page_Load(object sender, EventArgs e)  
        {              
            // Add chart data  
            AddChartData();  
  
            // Adds a threshold line using strip lines.  
            AddThresholdStripLine();  
        }  
  
        /// <summary>  
        /// Adds a week of data with values between 20 and 35.  
        /// </summary>  
        private void AddChartData()  
        {  
            // Declare new random variable  
            Random rand = new Random();  
  
            // Add a week of data  
            for (int i = 0; i < 7; i++)   
            {  
                chart1.Series[0].Points.AddXY(DateTime.Now.AddDays(i), rand.Next(20,35));  
            }  
        }  
  
        /// <summary>  
        /// Adds a horizontal threshold strip line at the calculated mean   
        /// value of all data points in the first series of the chart.  
        /// </summary>  
        private void AddThresholdStripLine()  
        {  
            StripLine stripLine3 = new StripLine();  
  
            // Set threshold line so that it is only shown once  
            stripLine3.Interval = 0;  
  
            // Set the threshold line to be drawn at the calculated mean of the first series  
            stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series[0].Name);  
  
            stripLine3.BackColor = Color.DarkGreen;  
            stripLine3.StripWidth = 0.25;  
  
            // Set text properties for the threshold line  
            stripLine3.Text = "Mean";  
            stripLine3.ForeColor = Color.Black;  
            stripLine3.TextAlignment = StringAlignment.Near;  
            stripLine3.TextLineAlignment = StringAlignment.Near;  
            stripLine3.TextOrientation = TextOrientation.Auto;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine3);  
        }  
    }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextOrientation">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.TextOrientation TextOrientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.TextOrientation TextOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.TextOrientation" />
      <MemberSignature Language="VB.NET" Value="Public Property TextOrientation As TextOrientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::TextOrientation TextOrientation { System::Web::UI::DataVisualization::Charting::TextOrientation get(); void set(System::Web::UI::DataVisualization::Charting::TextOrientation value); };" />
      <MemberSignature Language="F#" Value="member this.TextOrientation : System.Web.UI.DataVisualization.Charting.TextOrientation with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.TextOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.TextOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-287">Obtient ou définit l'orientation de texte.</span><span class="sxs-lookup"><span data-stu-id="316e7-287">Gets or sets the text orientation.</span></span></summary>
        <value><span data-ttu-id="316e7-288">Valeur <see cref="P:System.Web.UI.DataVisualization.Charting.StripLine.TextOrientation" /> qui représente l'orientation du texte.</span><span class="sxs-lookup"><span data-stu-id="316e7-288">A <see cref="P:System.Web.UI.DataVisualization.Charting.StripLine.TextOrientation" /> value that represents the alignment of the text orientation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-289">Lorsque cette propriété est définie sur la valeur <xref:System.Web.UI.DataVisualization.Charting.TextOrientation.Auto>, le texte est orienté selon le type de graphique.</span><span class="sxs-lookup"><span data-stu-id="316e7-289">When this property is set to a value of <xref:System.Web.UI.DataVisualization.Charting.TextOrientation.Auto>, the text is oriented based on the chart type.</span></span> <span data-ttu-id="316e7-290">Pour tous les X-Y graphique types autres que la barre frange de l’axe des x, le texte est orienté horizontalement de gauche à droite en bas de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-290">For all X-Y chart types other than Bar, X-axis strip line text is oriented horizontally from left to right on the bottom of the strip line.</span></span> <span data-ttu-id="316e7-291">Pour les graphiques à barres, le texte de la frange axe des abscisses est orienté verticalement de haut en bas à droite de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-291">For Bar charts, X-axis strip line text is oriented vertically from top to bottom to the right of the strip line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="316e7-292">L’exemple de code suivant montre comment ajouter une ligne de seuil, une fois que le contrôle de graphique a été ajouté à l’aire de conception.</span><span class="sxs-lookup"><span data-stu-id="316e7-292">The following code example demonstrates how to add a threshold line after the chart control has been added to the design surface.</span></span> <span data-ttu-id="316e7-293">Le graphique utilise une frange non périodique pour afficher un calcul de la moyenne de tous les points de données dans une série.</span><span class="sxs-lookup"><span data-stu-id="316e7-293">The chart uses a non-recurring strip line to show a calculation of the mean of all data points in a series.</span></span>  
  
```vb  
Imports System.Web.UI.DataVisualization.Charting  
  
Public Partial Class StripLines   
    Inherits System.Web.UI.Page   
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)  
        ' Add chart data before adding strip lines.   
        AddChartData()   
  
        ' Adds a threshold line using strip lines.   
        AddThresholdStripLine()   
    End Sub   
  
    ''' <summary>   
    ''' Adds a week of data with values between 20 and 35.   
    ''' </summary>   
    Private Sub AddChartData()   
        ' Declare new random variable   
        Dim rand As New Random()   
        For i As Integer = 0 To 6   
  
            ' Add a week of data   
            chart1.Series(0).Points.AddXY(DateTime.Now.AddDays(i), rand.[Next](20, 35))   
        Next   
    End Sub   
  
    ''' <summary>   
    ''' Adds a horizontal threshold strip line at the calculated mean   
    ''' value of all data points in the first series of the chart.   
    ''' </summary>   
    Private Sub AddThresholdStripLine()   
        Dim stripLine3 As New StripLine()   
  
        ' Set threshold line so that it is only shown once   
        stripLine3.Interval = 0   
  
        ' Set the threshold line to be drawn at the calculated mean of the first series   
        stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series(0).Name)   
  
        stripLine3.BackColor = Color.DarkGreen   
        stripLine3.StripWidth = 0.25   
  
        ' Set text properties for the threshold line   
        stripLine3.Text = "Mean"   
        stripLine3.ForeColor = Color.Black   
        stripLine3.TextAlignment = StringAlignment.Near   
        stripLine3.TextLineAlignment = StringAlignment.Near   
        stripLine3.TextOrientation = TextOrientation.Auto   
  
        ' Add strip line to the chart   
        chart1.ChartAreas(0).AxisY.StripLines.Add(stripLine3)   
    End Sub   
End Class  
```  
  
```csharp  
public partial class StripLines : System.Web.UI.Page   
    {  
        protected void Page_Load(object sender, EventArgs e)  
        {              
            // Add chart data  
            AddChartData();  
  
            // Adds a threshold line using strip lines.  
            AddThresholdStripLine();  
        }  
  
        /// <summary>  
        /// Adds a week of data with values between 20 and 35.  
        /// </summary>  
        private void AddChartData()  
        {  
            // Declare new random variable  
            Random rand = new Random();  
  
            // Add a week of data  
            for (int i = 0; i < 7; i++)   
            {  
                chart1.Series[0].Points.AddXY(DateTime.Now.AddDays(i), rand.Next(20,35));  
            }  
        }  
  
        /// <summary>  
        /// Adds a horizontal threshold strip line at the calculated mean   
        /// value of all data points in the first series of the chart.  
        /// </summary>  
        private void AddThresholdStripLine()  
        {  
            StripLine stripLine3 = new StripLine();  
  
            // Set threshold line so that it is only shown once  
            stripLine3.Interval = 0;  
  
            // Set the threshold line to be drawn at the calculated mean of the first series  
            stripLine3.IntervalOffset = chart1.DataManipulator.Statistics.Mean(chart1.Series[0].Name);  
  
            stripLine3.BackColor = Color.DarkGreen;  
            stripLine3.StripWidth = 0.25;  
  
            // Set text properties for the threshold line  
            stripLine3.Text = "Mean";  
            stripLine3.ForeColor = Color.Black;  
            stripLine3.TextAlignment = StringAlignment.Near;  
            stripLine3.TextLineAlignment = StringAlignment.Near;  
            stripLine3.TextOrientation = TextOrientation.Auto;  
  
            // Add strip line to the chart  
            chart1.ChartAreas[0].AxisY.StripLines.Add(stripLine3);  
        }  
    }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.ToolTip" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.DataVisualization.Charting.IChartMapArea.ToolTip</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-294">Obtient ou définit l'info-bulle d'une frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-294">Gets or sets the tooltip of a strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-295">Valeur <see langword="string" /> qui représente l'info-bulle de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-295">A <see langword="string" /> value that represents the tooltip of the strip line.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-296">Si vous définissez cette propriété, une image de côté client interactive sera automatiquement créée et une zone réactive sera créée avec l’attribut Title défini sur la chaîne d’info-bulle spécifiée.</span><span class="sxs-lookup"><span data-stu-id="316e7-296">If you set this property, a client-side image map will automatically be created, and a map area will be created with the Title attribute set to the specified tooltip string.</span></span> <span data-ttu-id="316e7-297">La zone réactive utilisera les dimensions qui correspondent à la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-297">The map area will use the dimensions that correspond to the strip line.</span></span>  
  
 <span data-ttu-id="316e7-298">Définition de cette propriété n’aura aucun effet si le <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> propriété est définie sur `false`.</span><span class="sxs-lookup"><span data-stu-id="316e7-298">Setting this property will have no effect if the <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> property is set to `false`.</span></span> <span data-ttu-id="316e7-299">La valeur par défaut est true.</span><span class="sxs-lookup"><span data-stu-id="316e7-299">The default value is true.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.StripLine.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.StripLine.Url" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.DataVisualization.Charting.IChartMapArea.Url</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.UrlValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.UrlValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="316e7-300">Obtient ou définit l'URL de destination ou le point d'ancrage de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-300">Gets or sets the destination URL or anchor point of the strip line.</span></span></summary>
        <value><span data-ttu-id="316e7-301">Valeur de <see langword="string" /> qui représente l'URL de destination ou le point d'ancrage de la frange.</span><span class="sxs-lookup"><span data-stu-id="316e7-301">A <see langword="string" /> value that represents the destination URL or anchor point of the strip line.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="316e7-302">Pour utiliser une URL absolue, ouvrez l'expression de chaîne par "http://" ou "www.".</span><span class="sxs-lookup"><span data-stu-id="316e7-302">To use an absolute URL, start the string expression with either "http://" or "www.".</span></span> <span data-ttu-id="316e7-303">Si la chaîne ne commence pas par l'un de ces préfixes, elle sera traitée comme une URL relative.</span><span class="sxs-lookup"><span data-stu-id="316e7-303">If the string does not start with either of these prefixes, it will be treated as a relative URL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>