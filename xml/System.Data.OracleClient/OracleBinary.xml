<Type Name="OracleBinary" FullName="System.Data.OracleClient.OracleBinary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea84bd4e08d1a60f81423e782e8c4354e7db7722" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37676617" /></Metadata><TypeSignature Language="C#" Value="public struct OracleBinary : IComparable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit OracleBinary extends System.ValueType implements class System.Data.SqlTypes.INullable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBinary" />
  <TypeSignature Language="VB.NET" Value="Public Structure OracleBinary&#xA;Implements IComparable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public value class OracleBinary : IComparable, System::Data::SqlTypes::INullable" />
  <TypeSignature Language="F#" Value="type OracleBinary = struct&#xA;    interface INullable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Représente un flux de données binaires de longueur variable à enregistrer dans une base de données ou à récupérer de celle-ci.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir un <xref:System.Data.OracleClient.OracleBinary> de l’objet, appelez le <xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A> (méthode).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleBinary (byte[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (b As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleBinary(cli::array &lt;System::Byte&gt; ^ b);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleBinary : byte[] -&gt; System.Data.OracleClient.OracleBinary" Usage="new System.Data.OracleClient.OracleBinary b" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="b">Tableau d'octets à enregistrer dans la propriété <see cref="P:System.Data.OracleClient.OracleBinary.Value" />.</param>
        <summary>Initialise une nouvelle instance de la structure <see langword="OracleBinary" /> en assignant le contenu du tableau d'octets fourni à la propriété <see cref="P:System.Data.OracleClient.OracleBinary.Value" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="oracleBinary.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Objet à comparer à cette structure <see langword="OracleBinary" />.</param>
        <summary>Compare cet objet <see cref="T:System.Data.OracleClient.OracleBinary" /> à l'objet fourni et retourne une indication de leurs valeurs relatives.</summary>
        <returns>Nombre signé indiquant les valeurs relatives de cette structure <see langword="OracleBinary" /> et de l'objet.  
  
 <list type="table"><listheader><term> Valeur retournée </term><description> Condition </description></listheader><item><term> Inférieur à zéro </term><description> La valeur de cet objet <see langword="OracleBinary" /> est inférieure à l’objet.  </description></item><item><term> Zéro </term><description> Cet objet <see langword="OracleBinary" /> est égal à l’objet.  </description></item><item><term> Supérieur à zéro </term><description> Cet objet <see langword="OracleBinary" /> est supérieur à l’objet -ou- l’objet est une référence null. </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBinary Concat (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBinary Concat(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (x As OracleBinary, y As OracleBinary) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBinary Concat(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBinary" Usage="System.Data.OracleClient.OracleBinary.Concat (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Structure <see langword="OracleBinary" />.</param>
        <param name="y">Structure <see langword="OracleBinary" />.</param>
        <summary>Concatène deux structures <see cref="T:System.Data.OracleClient.OracleBinary" /> pour créer une nouvelle structure <see langword="OracleBinary" />.</summary>
        <returns>Structure <see langword="OracleBinary" /> contenant les valeurs concaténées des paramètres <paramref name="x" /> et <paramref name="y" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Compare deux structures <see cref="T:System.Data.OracleClient.OracleBinary" /> pour déterminer si elles sont égales.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="oracleBinary.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objet à comparer.</param>
        <summary>Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> de l'objet <see cref="T:System.Data.OracleClient.OracleBinary" />.</summary>
        <returns><see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.OracleClient.OracleBinary" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean Equals (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean Equals(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean Equals(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Structure <see langword="OracleBinary" />.</param>
        <param name="y">Structure <see langword="OracleBinary" />.</param>
        <summary>Compare deux structures <see cref="T:System.Data.OracleClient.OracleBinary" /> pour déterminer si elles sont égales.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleBoolean" /> dont la valeur est <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> si les deux instances sont égales et <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see langword="OracleBinary" /> est null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> de <see langword="OracleBoolean" /> est <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="oracleBinary.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne le code de hachage pour cette structure <see cref="T:System.Data.OracleClient.OracleBinary" />.</summary>
        <returns>Code de hachage d'un entier signé 32 bits.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean GreaterThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean GreaterThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThan (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean GreaterThan(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member GreaterThan : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.GreaterThan (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Structure <see langword="OracleBinary" />.</param>
        <param name="y">Structure <see langword="OracleBinary" />.</param>
        <summary>Compare deux structures <see cref="T:System.Data.OracleClient.OracleBinary" /> pour déterminer si la première est supérieure à la seconde.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleBoolean" /> dont la valeur est <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> si la première instance est supérieure à la seconde ; sinon, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. Si l'une ou l'autre instance de <see langword="OracleBinary" /> est null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> de <see langword="OracleBoolean" /> est <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean GreaterThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean GreaterThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThanOrEqual (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean GreaterThanOrEqual(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqual : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.GreaterThanOrEqual (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Structure <see langword="OracleBinary" />.</param>
        <param name="y">Structure <see langword="OracleBinary" />.</param>
        <summary>Compare deux structures <see cref="T:System.Data.OracleClient.OracleBinary" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleBoolean" /> dont la valeur est <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> si la première instance est supérieure ou égale à la seconde ; sinon, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. Si l'une ou l'autre instance de <see langword="OracleBinary" /> est null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> de <see langword="OracleBoolean" /> est <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNull : bool" Usage="System.Data.OracleClient.OracleBinary.IsNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la propriété <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> de la structure <see cref="T:System.Data.OracleClient.OracleBinary" /> est null.</summary>
        <value><see langword="true" /> si <see langword="Value" /> est null ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public byte this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte default[int] { System::Byte get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : byte" Usage="System.Data.OracleClient.OracleBinary.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Emplacement de l'octet à récupérer.</param>
        <summary>Obtient l'octet unique de la propriété <see langword="Value" /> se trouvant à l'emplacement spécifié par le paramètre de type Entier <paramref name="index" />. Si <paramref name="index" /> indique un emplacement situé au-delà de la fin du tableau d'octets, une exception est levée.</summary>
        <value>Octet se trouvant à l'emplacement indiqué par le paramètre de type Entier.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour éviter de lever une `OracleNullValueException`, vérifiez toujours la <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> propriété et la `Length` avant la lecture `this`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Data.OracleClient.OracleBinary.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la longueur en octets de la propriété <see cref="P:System.Data.OracleClient.OracleBinary.Value" />. Cette propriété est en lecture seule.</summary>
        <value>Longueur des données binaires de la propriété <see langword="Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour éviter de lever une `OracleNullValueException`, vérifiez toujours la <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> avant la lecture du `Length` propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean LessThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean LessThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThan (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean LessThan(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member LessThan : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.LessThan (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Structure <see langword="OracleBinary" />.</param>
        <param name="y">Structure <see langword="OracleBinary" />.</param>
        <summary>Compare deux structures <see cref="T:System.Data.OracleClient.OracleBinary" /> pour déterminer si la première est inférieure à la seconde.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleBoolean" /> dont la valeur est <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> si la première instance est inférieure à la seconde ; sinon, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. Si l'une ou l'autre instance de <see langword="OracleBinary" /> est null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> de <see langword="OracleBoolean" /> est <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean LessThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean LessThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThanOrEqual (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean LessThanOrEqual(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqual : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.LessThanOrEqual (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Structure <see langword="OracleBinary" />.</param>
        <param name="y">Structure <see langword="OracleBinary" />.</param>
        <summary>Compare deux structures <see cref="T:System.Data.OracleClient.OracleBinary" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleBoolean" /> dont la valeur est <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> si la première instance est inférieure ou égale à la seconde ; sinon, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. Si l'une ou l'autre instance de <see langword="OracleBinary" /> est null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> de <see langword="OracleBoolean" /> est <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotEquals">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean NotEquals (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean NotEquals(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotEquals (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean NotEquals(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member NotEquals : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.NotEquals (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Structure <see langword="OracleBinary" />.</param>
        <param name="y">Structure <see langword="OracleBinary" />.</param>
        <summary>Compare deux structures <see cref="T:System.Data.OracleClient.OracleBinary" /> pour déterminer si elles sont inégales.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleBoolean" /> dont la valeur est <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> si les deux instances sont inégales et <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see langword="OracleBinary" /> est null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> de <see langword="OracleBoolean" /> est <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBinary Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Data.OracleClient.OracleBinary Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBinary.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleBinary " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleBinary Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.Data.OracleClient.OracleBinary" Usage="System.Data.OracleClient.OracleBinary.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente une valeur null pouvant être assignée à la propriété <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> d'une structure <see cref="T:System.Data.OracleClient.OracleBinary" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Null` fonctionne comme une constante pour le `OracleBinary` structure.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleBinary.IsNull" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBinary operator + (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBinary op_Addition(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (x As OracleBinary, y As OracleBinary) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBinary operator +(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBinary" Usage="x + y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Objet <see langword="OracleBinary" />.</param>
        <param name="y">Objet <see langword="OracleBinary" />.</param>
        <summary>Concatène les deux paramètres <see cref="T:System.Data.OracleClient.OracleBinary" /> pour créer une nouvelle structure <see langword="OracleBinary" />.</summary>
        <returns>Valeurs concaténées des paramètres <paramref name="x" /> et <paramref name="y" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `x` apparaissent en premier dans résultant `OracleBinary`, suivi par `y`.  
  
 [Visual Basic]  
  
 Dans Visual Basic, vous pouvez utiliser les opérateurs définis par une classe, mais vous ne pouvez pas les remplacer ou créer votre propre.  
  
 La méthode équivalente pour cet opérateur est <xref:System.Data.OracleClient.OracleBinary.Concat%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator == (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_Equality(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator ==(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x = y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Objet <see langword="OracleBinary" />.</param>
        <param name="y">Objet <see langword="OracleBinary" />.</param>
        <summary>Compare deux structures <see cref="T:System.Data.OracleClient.OracleBinary" /> pour déterminer si elles sont égales.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleBoolean" /> dont la valeur est <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> si les deux instances sont égales et <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see langword="OracleBinary" /> est null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> de <see langword="OracleBoolean" /> est <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[La méthode équivalente pour cet opérateur est <xref:System.Data.OracleClient.OracleBinary.Equals%28System.Object%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte[] (System.Data.OracleClient.OracleBinary x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8[] op_Explicit(valuetype System.Data.OracleClient.OracleBinary x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Explicit(System.Data.OracleClient.OracleBinary)~System.Byte[]" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (x As OracleBinary) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator cli::array &lt;System::Byte&gt; ^(System::Data::OracleClient::OracleBinary x);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Data.OracleClient.OracleBinary -&gt; byte[]" Usage="System.Data.OracleClient.OracleBinary.op_Explicit x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Élément <see cref="T:System.Data.OracleClient.OracleBinary" />.</param>
        <summary>Obtient le contenu de la propriété <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> du paramètre <see cref="T:System.Data.OracleClient.OracleBinary" /> en tant que tableau d'octets.</summary>
        <returns>Tableau d'octets.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [Visual Basic]  
  
 Dans Visual Basic, vous pouvez utiliser les conversions définies par la classe, mais vous ne pouvez pas les remplacer ou créer votre propre. Si Option Strict est défini, vous devez utiliser le \<opérateur CType > pour convertir le <xref:System.Data.OracleClient.OracleBinary> à un objet binaire.  
  
 La méthode équivalente pour cet opérateur est <xref:System.Data.OracleClient.OracleBinary.Value?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &gt; (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_GreaterThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &gt;(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x &gt; y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Objet <see langword="OracleBinary" />.</param>
        <param name="y">Objet <see langword="OracleBinary" />.</param>
        <summary>Compare deux structures <see cref="T:System.Data.OracleClient.OracleBinary" /> pour déterminer si la première est supérieure à la seconde.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleBoolean" /> dont la valeur est <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> si la première instance est supérieure à la seconde ; sinon, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. Si l'une ou l'autre instance de <see langword="OracleBinary" /> est null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> de <see langword="OracleBoolean" /> est <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[La méthode équivalente pour cet opérateur est <xref:System.Data.OracleClient.OracleBinary.GreaterThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &gt;= (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_GreaterThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &gt;=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x &gt;= y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Objet <see langword="OracleBinary" />.</param>
        <param name="y">Objet <see langword="OracleBinary" />.</param>
        <summary>Compare deux structures <see cref="T:System.Data.OracleClient.OracleBinary" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleBoolean" /> dont la valeur est <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> si la première instance est supérieure ou égale à la seconde ; sinon, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. Si l'une ou l'autre instance de <see langword="OracleBinary" /> est null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> de <see langword="OracleBoolean" /> est <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[La méthode équivalente pour cet opérateur est <xref:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Data.OracleClient.OracleBinary (byte[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBinary op_Implicit(unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Implicit(System.Byte[])~System.Data.OracleClient.OracleBinary" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (b As Byte()) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Data::OracleClient::OracleBinary(cli::array &lt;System::Byte&gt; ^ b);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte[] -&gt; System.Data.OracleClient.OracleBinary" Usage="System.Data.OracleClient.OracleBinary.op_Implicit b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="b">Tableau d'octets à convertir.</param>
        <summary>Convertit un tableau d'octets en structure <see cref="T:System.Data.OracleClient.OracleBinary" />.</summary>
        <returns>Structure <see langword="OracleBinary" /> qui représente le tableau d'octets converti.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator != (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_Inequality(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator !=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.op_Inequality (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Objet <see langword="OracleBinary" />.</param>
        <param name="y">Objet <see langword="OracleBinary" />.</param>
        <summary>Compare deux structures <see cref="T:System.Data.OracleClient.OracleBinary" /> pour déterminer si elles sont égales.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleBoolean" /> dont la valeur est <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> si les deux instances sont inégales et <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see langword="OracleBinary" /> est null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> de <see langword="OracleBoolean" /> est <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[La méthode équivalente pour cet opérateur est <xref:System.Data.OracleClient.OracleBinary.NotEquals%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &lt; (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_LessThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &lt;(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x &lt; y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Objet <see langword="OracleBinary" />.</param>
        <param name="y">Objet <see langword="OracleBinary" />.</param>
        <summary>Compare deux structures <see cref="T:System.Data.OracleClient.OracleBinary" /> pour déterminer si la première est inférieure à la seconde.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleBoolean" /> dont la valeur est <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> si la première instance est inférieure à la seconde ; sinon, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. Si l'une ou l'autre instance de <see langword="OracleBinary" /> est null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> de <see langword="OracleBoolean" /> est <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[La méthode équivalente pour cet opérateur est <xref:System.Data.OracleClient.OracleBinary.LessThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &lt;= (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_LessThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &lt;=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x &lt;= y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">Objet <see langword="OracleBinary" />.</param>
        <param name="y">Objet <see langword="OracleBinary" />.</param>
        <summary>Compare deux structures <see cref="T:System.Data.OracleClient.OracleBinary" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleBoolean" /> dont la valeur est <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> si la première instance est inférieure ou égale à la seconde ; sinon, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. Si l'une ou l'autre instance de <see langword="OracleBinary" /> est null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> de <see langword="OracleBoolean" /> est <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[La méthode équivalente pour cet opérateur est <xref:System.Data.OracleClient.OracleBinary.LessThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public byte[] Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Value { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : byte[]" Usage="System.Data.OracleClient.OracleBinary.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur de la structure <see cref="T:System.Data.OracleClient.OracleBinary" />. Cette propriété est en lecture seule.</summary>
        <value>Valeur de la structure <see langword="OracleBinary" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour éviter de lever une `OracleNullValueException`, vérifiez toujours la <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> avant la lecture du `Value` propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>