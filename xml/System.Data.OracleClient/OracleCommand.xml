<Type Name="OracleCommand" FullName="System.Data.OracleClient.OracleCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d3206433275a12c1b96ab6e176e46ba31c1fcef8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390443" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3c601-101">Représente une instruction SQL ou une procédure stockée à exécuter sur une source de données.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3c601-101">Represents an SQL statement or stored procedure to execute against a database.</span>
      </span>
      <span data-ttu-id="3c601-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3c601-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-103">Ce type est déconseillé et sera supprimé dans une future version de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="3c601-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="3c601-104">Pour plus d’informations, consultez [Oracle et ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span><span class="sxs-lookup"><span data-stu-id="3c601-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="3c601-105">La <xref:System.Data.OracleClient.OracleCommand> classe fournit les méthodes suivantes pour exécuter des commandes sur une source de données :</span><span class="sxs-lookup"><span data-stu-id="3c601-105">The <xref:System.Data.OracleClient.OracleCommand> class provides the following methods for executing commands against a data source:</span></span>  
  
|<span data-ttu-id="3c601-106">Élément</span><span class="sxs-lookup"><span data-stu-id="3c601-106">Item</span></span>|<span data-ttu-id="3c601-107">Description </span><span class="sxs-lookup"><span data-stu-id="3c601-107">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>|<span data-ttu-id="3c601-108">Exécute les commandes qui retournent des lignes.</span><span class="sxs-lookup"><span data-stu-id="3c601-108">Executes commands that return rows.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>|<span data-ttu-id="3c601-109">Exécute une instruction SQL sur <xref:System.Data.OracleClient.OracleCommand.Connection%2A> et retourne le nombre de lignes affectées.</span><span class="sxs-lookup"><span data-stu-id="3c601-109">Executes an SQL statement against the <xref:System.Data.OracleClient.OracleCommand.Connection%2A> and returns the number of rows affected.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>|<span data-ttu-id="3c601-110">Exécute des commandes telles que les instructions SQL INSERT, DELETE, UPDATE et ensemble.</span><span class="sxs-lookup"><span data-stu-id="3c601-110">Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>|<span data-ttu-id="3c601-111">Récupère une valeur unique (par exemple, une valeur d’agrégation) à partir d’une base de données comme un type de données .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="3c601-111">Retrieves a single value (for example, an aggregate value) from a database as a .NET Framework data type.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>|<span data-ttu-id="3c601-112">Récupère une valeur unique (par exemple, une valeur d’agrégation) à partir d’une base de données comme un type de données Oracle spécifique.</span><span class="sxs-lookup"><span data-stu-id="3c601-112">Retrieves a single value (for example, an aggregate value) from a database as an Oracle-specific data type.</span></span>|  
  
 <span data-ttu-id="3c601-113">Vous pouvez réinitialiser le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriété et la réutilisation du <xref:System.Data.OracleClient.OracleCommand> objet.</span><span class="sxs-lookup"><span data-stu-id="3c601-113">You can reset the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property and reuse the <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="3c601-114">Si l’exécution de la commande se traduit par une erreur fatale <xref:System.Data.OracleClient.OracleException>, le <xref:System.Data.OracleClient.OracleConnection> peut se fermer.</span><span class="sxs-lookup"><span data-stu-id="3c601-114">If execution of the command results in a fatal <xref:System.Data.OracleClient.OracleException>, the <xref:System.Data.OracleClient.OracleConnection> may close.</span></span> <span data-ttu-id="3c601-115">L'utilisateur peut toutefois rouvrir la connexion et continuer.</span><span class="sxs-lookup"><span data-stu-id="3c601-115">However, the user can reopen the connection and continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c601-116">Contrairement à la **commande** objet dans les autres fournisseurs de données .NET Framework (SQL Server, OLE DB et ODBC), le <xref:System.Data.OracleClient.OracleCommand> objet ne prend pas en charge un <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="3c601-116">Unlike the **Command** object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), the <xref:System.Data.OracleClient.OracleCommand> object does not support a <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property.</span></span> <span data-ttu-id="3c601-117">Définir un délai d’attente de commande n’a aucun effet et la valeur retournée est toujours égal à zéro.</span><span class="sxs-lookup"><span data-stu-id="3c601-117">Setting a command timeout has no effect and the value returned is always zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c601-118">L’exemple suivant utilise le <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> méthode <xref:System.Data.OracleClient.OracleCommand>, avec <xref:System.Data.OracleClient.OracleDataReader> et <xref:System.Data.OracleClient.OracleConnection>, pour sélectionner les lignes d’une table.</span><span class="sxs-lookup"><span data-stu-id="3c601-118">The following example uses the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of <xref:System.Data.OracleClient.OracleCommand>, along with <xref:System.Data.OracleClient.OracleDataReader> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a table.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3c601-119">Initialise une nouvelle instance de l'objet <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-119">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c601-120">Initialise une nouvelle instance de l'objet <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-120">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-121">Le constructeur de base Initialise tous les champs à leurs valeurs par défaut.</span><span class="sxs-lookup"><span data-stu-id="3c601-121">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="3c601-122">Le tableau suivant montre les valeurs initiales des propriétés d’une instance de <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="3c601-122">The following table shows initial property values for an instance of <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="3c601-123">Propriétés</span><span class="sxs-lookup"><span data-stu-id="3c601-123">Properties</span></span>|<span data-ttu-id="3c601-124">Valeur initiale</span><span class="sxs-lookup"><span data-stu-id="3c601-124">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|<span data-ttu-id="3c601-125">Une chaîne vide (« »)</span><span class="sxs-lookup"><span data-stu-id="3c601-125">empty string ("")</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="3c601-126">null</span><span class="sxs-lookup"><span data-stu-id="3c601-126">null</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3c601-127">L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand> et définit certaines de ses propriétés.</span><span class="sxs-lookup"><span data-stu-id="3c601-127">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="3c601-128">Texte de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-128">The text of the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c601-129">Initialise une nouvelle instance de la classe <see cref="T:System.Data.OracleClient.OracleCommand" /> avec le texte de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-129">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="3c601-130">Texte de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-130">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="3c601-131">Objet <see cref="T:System.Data.OracleClient.OracleConnection" /> qui représente la connexion à une base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-131">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c601-132">Initialise une nouvelle instance de la classe <see cref="T:System.Data.OracleClient.OracleCommand" /> avec le texte de la requête et un objet <see cref="T:System.Data.OracleClient.OracleConnection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-132">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query and an <see cref="T:System.Data.OracleClient.OracleConnection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c601-133">L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="3c601-133">The following example creates an <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection, class System.Data.OracleClient.OracleTransaction tx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection, tx As OracleTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection, System::Data::OracleClient::OracleTransaction ^ tx);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
        <Parameter Name="tx" Type="System.Data.OracleClient.OracleTransaction" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="3c601-134">Texte de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-134">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="3c601-135">Objet <see cref="T:System.Data.OracleClient.OracleConnection" /> qui représente la connexion à une base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-135">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span>
          </span>
        </param>
        <param name="tx">
          <span data-ttu-id="3c601-136">
            <see cref="T:System.Data.OracleClient.OracleTransaction" /> dans lequel <see cref="T:System.Data.OracleClient.OracleCommand" /> s’exécute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-136">The <see cref="T:System.Data.OracleClient.OracleTransaction" /> in which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c601-137">Initialise une nouvelle instance de la classe <see cref="T:System.Data.OracleClient.OracleCommand" /> avec le texte de la requête, un objet <see cref="T:System.Data.OracleClient.OracleConnection" /> et <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-137">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query, an <see cref="T:System.Data.OracleClient.OracleConnection" /> object, and an <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-138">Le tableau suivant montre les valeurs initiales des propriétés d’une instance de cette implémentation de la <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="3c601-138">The following table shows initial property values for an instance of this implementation of the <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="3c601-139">Propriétés</span><span class="sxs-lookup"><span data-stu-id="3c601-139">Properties</span></span>|<span data-ttu-id="3c601-140">Valeur initiale</span><span class="sxs-lookup"><span data-stu-id="3c601-140">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="3c601-141">Un nouveau <xref:System.Data.OracleClient.OracleConnection> qui est la valeur pour le `connection` paramètre.</span><span class="sxs-lookup"><span data-stu-id="3c601-141">A new <xref:System.Data.OracleClient.OracleConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="3c601-142">Vous pouvez modifier la valeur d’un de ces paramètres en définissant la propriété associée.</span><span class="sxs-lookup"><span data-stu-id="3c601-142">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c601-143">L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand> et définit certaines de ses propriétés.</span><span class="sxs-lookup"><span data-stu-id="3c601-143">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c601-144">Tente d'annuler l'exécution de <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-144">Attempts to cancel the execution of an <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-145">S’il n’a rien à annuler, rien ne se produit.</span><span class="sxs-lookup"><span data-stu-id="3c601-145">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="3c601-146">Cependant, si une commande est en cours et si la tentative d'annulation échoue, aucune exception n'est générée.</span><span class="sxs-lookup"><span data-stu-id="3c601-146">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c601-147">L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand>, l’exécute, puis annule l’exécution.</span><span class="sxs-lookup"><span data-stu-id="3c601-147">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, executes it, then cancels the execution.</span></span> <span data-ttu-id="3c601-148">Pour ce faire, une chaîne qui est une instruction SQL SELECT et une chaîne à utiliser pour se connecter à la base de données est passé à la méthode.</span><span class="sxs-lookup"><span data-stu-id="3c601-148">To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c601-149">Crée une copie de cet objet <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-149">Creates a copy of this <see cref="T:System.Data.OracleClient.OracleCommand" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c601-150">Nouvel objet <see cref="T:System.Data.OracleClient.OracleCommand" /> dans lequel toutes les valeurs de propriétés sont identiques à celles d'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-150">A new <see cref="T:System.Data.OracleClient.OracleCommand" /> object in which all property values are the same as the original.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c601-151">Obtient ou définit l'instruction SQL ou la procédure stockée à exécuter sur la base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-151">Gets or sets the SQL statement or stored procedure to execute against the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c601-152">Instruction SQL ou procédure stockée à exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-152">The SQL statement or stored procedure to execute.</span>
          </span>
          <span data-ttu-id="3c601-153">La valeur par défaut est une chaîne vide ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-153">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-154">Lorsque le <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> est définie sur `StoredProcedure`, le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriété doit être définie sur le nom de la procédure stockée.</span><span class="sxs-lookup"><span data-stu-id="3c601-154">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="3c601-155">L’utilisateur peut être obligé d’utiliser la syntaxe du caractère d’échappement si le nom de la procédure stockée contient des caractères spéciaux.</span><span class="sxs-lookup"><span data-stu-id="3c601-155">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="3c601-156">La commande exécute cette procédure stockée lorsque vous appelez une des méthodes Execute.</span><span class="sxs-lookup"><span data-stu-id="3c601-156">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="3c601-157">Le fournisseur de données .NET Framework pour Oracle ne prend pas en charge l’espace réservé de point d’interrogation ( ?) pour passer des paramètres à une instruction SQL appelée par un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`.</span><span class="sxs-lookup"><span data-stu-id="3c601-157">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="3c601-158">Dans ce cas, les paramètres nommés doivent être utilisés.</span><span class="sxs-lookup"><span data-stu-id="3c601-158">In this case, named parameters must be used.</span></span> <span data-ttu-id="3c601-159">Exemple :</span><span class="sxs-lookup"><span data-stu-id="3c601-159">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="3c601-160">Lorsque, à l’aide de paramètres nommés dans une instruction SQL appelée par un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`, vous devez faire précéder le nom du paramètre avec un signe deux-points ( :).</span><span class="sxs-lookup"><span data-stu-id="3c601-160">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="3c601-161">Toutefois, dans une procédure stockée, ou lorsque vous faites référence à un paramètre nommé ailleurs dans votre code (par exemple, lorsque vous ajoutez <xref:System.Data.OracleClient.OracleParameter> des objets sur le <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> propriété), ne faites pas précéder le paramètre nommé par un signe deux-points ( :).</span><span class="sxs-lookup"><span data-stu-id="3c601-161">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="3c601-162">Le fournisseur de données .NET Framework pour Oracle ajoute automatiquement les deux-points.</span><span class="sxs-lookup"><span data-stu-id="3c601-162">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c601-163">L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand> et définit certaines de ses propriétés.</span><span class="sxs-lookup"><span data-stu-id="3c601-163">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c601-164">Obtient ou définit la durée d'attente qui précède le moment où il est mis fin à une tentative d'exécution d'une commande et où une erreur est générée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-164">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c601-165">Durée (en secondes) d'attente de l'exécution de la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-165">The time (in seconds) to wait for the command to execute.</span>
          </span>
          <span data-ttu-id="3c601-166">La valeur par défaut est de 30 secondes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-166">The default value is 30 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-167">Un <xref:System.ArgumentException> est générée si assigné <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> valeur de la propriété est inférieure à 0.</span><span class="sxs-lookup"><span data-stu-id="3c601-167">An <xref:System.ArgumentException> is generated if the assigned <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property value is less than 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c601-168">Obtient ou définit une valeur indiquant la manière dont la propriété <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> est interprétée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-168">Gets or sets a value indicating how the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> property is interpreted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c601-169">Une des valeurs de <see cref="T:System.Data.CommandType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-169">One of the <see cref="T:System.Data.CommandType" /> values.</span>
          </span>
          <span data-ttu-id="3c601-170">La valeur par défaut est <see langword="Text" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-170">The default is <see langword="Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-171">Lorsque le <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> est définie sur `StoredProcedure`, vous devez définir le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriété à la syntaxe d’appel Oracle complète.</span><span class="sxs-lookup"><span data-stu-id="3c601-171">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, you should set the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property to the full Oracle call syntax.</span></span> <span data-ttu-id="3c601-172">La commande exécute cette procédure stockée lorsque vous appelez l’une des méthodes Execute (par exemple, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> ou <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</span><span class="sxs-lookup"><span data-stu-id="3c601-172">The command then executes this stored procedure when you call one of the Execute methods (for example, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</span></span>  
  
 <span data-ttu-id="3c601-173">Le <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> et <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriétés ne peut pas être définies si la connexion en cours effectue une opération d’exécution ou d’extraction.</span><span class="sxs-lookup"><span data-stu-id="3c601-173">The <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="3c601-174">Le fournisseur de données .NET Framework pour Oracle ne prend pas en charge l’espace réservé de point d’interrogation ( ?) pour passer des paramètres à une instruction SQL appelée par un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`.</span><span class="sxs-lookup"><span data-stu-id="3c601-174">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="3c601-175">Dans ce cas, les paramètres nommés doivent être utilisés.</span><span class="sxs-lookup"><span data-stu-id="3c601-175">In this case, named parameters must be used.</span></span> <span data-ttu-id="3c601-176">Exemple :</span><span class="sxs-lookup"><span data-stu-id="3c601-176">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="3c601-177">Lorsque, à l’aide de paramètres nommés dans une instruction SQL appelée par un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`, vous devez faire précéder le nom du paramètre avec un signe deux-points ( :).</span><span class="sxs-lookup"><span data-stu-id="3c601-177">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="3c601-178">Toutefois, dans une procédure stockée, ou lorsque vous faites référence à un paramètre nommé ailleurs dans votre code (par exemple, lorsque vous ajoutez <xref:System.Data.OracleClient.OracleParameter> des objets sur le <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> propriété), ne faites pas précéder le paramètre nommé par un signe deux-points ( :).</span><span class="sxs-lookup"><span data-stu-id="3c601-178">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="3c601-179">Le fournisseur de données .NET Framework pour Oracle ajoute automatiquement les deux-points.</span><span class="sxs-lookup"><span data-stu-id="3c601-179">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c601-180">L’exemple suivant crée une instance d’une classe dérivée <xref:System.Data.OracleClient.OracleCommand> et définit certaines de ses propriétés.</span><span class="sxs-lookup"><span data-stu-id="3c601-180">The following example creates an instance of a derived class <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3c601-181">La valeur n’est pas un <see cref="T:System.Data.CommandType" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-181">The value was not a valid <see cref="T:System.Data.CommandType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); void set(System::Data::OracleClient::OracleConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c601-182">Obtient ou définit le <see cref="T:System.Data.OracleClient.OracleConnection" /> utilisé par cette instance du <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-182">Gets or sets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c601-183">Connexion à une source de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-183">The connection to a data source.</span>
          </span>
          <span data-ttu-id="3c601-184">La valeur par défaut est une valeur null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-184">The default is a null value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-185">Vous ne pouvez pas définir le <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, et <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriétés si la connexion en cours effectue une opération d’exécution ou d’extraction.</span><span class="sxs-lookup"><span data-stu-id="3c601-185">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="3c601-186">Si vous définissez <xref:System.Data.OracleClient.OracleCommand.Connection%2A> alors qu'une transaction est en cours et que la propriété <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> n'a pas la valeur null, un objet <xref:System.InvalidOperationException> est généré.</span><span class="sxs-lookup"><span data-stu-id="3c601-186">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> while a transaction is in progress and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated.</span></span> <span data-ttu-id="3c601-187">Si vous définissez <xref:System.Data.OracleClient.OracleCommand.Connection%2A> une fois que la transaction a été validée ou restaurée et le <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> propriété n’est pas null, le <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> est ensuite définie sur une valeur null.</span><span class="sxs-lookup"><span data-stu-id="3c601-187">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> after the transaction has been committed or rolled back, and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is then set to a null value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c601-188">L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand> et définit certaines de ses propriétés.</span><span class="sxs-lookup"><span data-stu-id="3c601-188">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Connection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Connection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c601-189">La propriété <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> a été modifiée alors qu'une transaction était en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-189">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> property was changed while a transaction was in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OracleParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c601-190">Crée une nouvelle instance d’un objet <see cref="T:System.Data.OracleClient.OracleParameter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-190">Creates a new instance of an <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c601-191">Objet <see cref="T:System.Data.OracleClient.OracleParameter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-191">An <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-192">Le <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> méthode est une version fortement typée de <xref:System.Data.IDbCommand.CreateParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c601-192">The <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c601-193">Obtient ou définit une valeur indiquant si l'objet command doit être visible dans un contrôle d'interface personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-193">Gets or sets a value indicating whether the command object should be visible in a customized interface control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c601-194">
            <see langword="true" />, si l'objet command doit être visible dans un contrôle ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-194">
              <see langword="true" />, if the command object should be visible in a control; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3c601-195">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-195">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c601-196">Exécute une instruction SQL sur <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> et retourne le nombre de lignes affectées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-196">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c601-197">Pour les instructions UPDATE, INSERT et DELETE, les valeurs de retour représentent le nombre de lignes affectées par la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-197">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span>
          </span>
          <span data-ttu-id="3c601-198">Pour les instructions CREATE TABLE et DROP TABLE, la valeur de retour est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-198">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span>
          </span>
          <span data-ttu-id="3c601-199">Pour tous les autres types d'instructions, la valeur de retour est -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-199">For all other types of statements, the return value is -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-200">Vous pouvez utiliser <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> pour effectuer des opérations de catalogue (par exemple, interrogation de la structure d’une base de données ou création d’objets de base de données tels que des tables) ou pour modifier les données dans une base de données, sans utiliser un <xref:System.Data.DataSet>, à l’exécution de mise à jour, insérer, ou supprimer instructions.</span><span class="sxs-lookup"><span data-stu-id="3c601-200">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="3c601-201">Bien que <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> ne pas retourner toutes les lignes, les paramètres de sortie ou retourner les valeurs mappées aux paramètres sont remplis avec des données.</span><span class="sxs-lookup"><span data-stu-id="3c601-201">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="3c601-202">Pour les instructions UPDATE, INSERT et DELETE, les valeurs de retour représentent le nombre de lignes affectées par la commande.</span><span class="sxs-lookup"><span data-stu-id="3c601-202">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="3c601-203">Pour les instructions CREATE TABLE et DROP TABLE, la valeur de retour est 0.</span><span class="sxs-lookup"><span data-stu-id="3c601-203">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span></span> <span data-ttu-id="3c601-204">Pour tous les autres types d'instructions, la valeur de retour est -1.</span><span class="sxs-lookup"><span data-stu-id="3c601-204">For all other types of statements, the return value is -1.</span></span> <span data-ttu-id="3c601-205">En cas d’annulation, la valeur de retour est également -1.</span><span class="sxs-lookup"><span data-stu-id="3c601-205">If a rollback occurs, the return value is also -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c601-206">L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand> , puis l’exécute à l’aide de <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c601-206">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it by using <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="3c601-207">L’exemple est passé à une chaîne qui est une instruction SQL (par exemple, UPDATE, INSERT ou DELETE) et une chaîne à utiliser pour se connecter à la base de données.</span><span class="sxs-lookup"><span data-stu-id="3c601-207">The example is passed a string that is an SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c601-208">La connexion n’existe pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-208">The connection does not exist.</span>
          </span>
          <span data-ttu-id="3c601-209">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-209">-or-</span>
          </span>
          <span data-ttu-id="3c601-210">La connexion n'est pas ouverte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-210">The connection is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteOracleNonQuery([out] valuetype System.Data.OracleClient.OracleString&amp; rowid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleNonQuery (ByRef rowid As OracleString) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteOracleNonQuery([Runtime::InteropServices::Out] System::Data::OracleClient::OracleString % rowid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowid" Type="System.Data.OracleClient.OracleString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rowid">
          <span data-ttu-id="3c601-211">Représentation sous forme de chaîne Base64 de l'ID de ligne réel dans le serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-211">A base64 string representation of the actual row ID in the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c601-212">Exécute une instruction SQL sur <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> et retourne le nombre de lignes affectées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-212">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c601-213">Pour les instructions UPDATE, INSERT et DELETE, les valeurs de retour représentent le nombre de lignes affectées par la commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-213">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span>
          </span>
          <span data-ttu-id="3c601-214">Pour les instructions CREATE TABLE et DROP TABLE, la valeur de retour est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-214">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span>
          </span>
          <span data-ttu-id="3c601-215">Pour tous les autres types d'instructions, la valeur de retour est -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-215">For all other types of statements, the return value is -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-216">Vous pouvez utiliser <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> pour effectuer des opérations de catalogue (par exemple, interrogation de la structure d’une base de données ou création d’objets de base de données tels que des tables) ou pour modifier les données dans une base de données, sans utiliser un <xref:System.Data.DataSet>, à l’exécution de mise à jour, insérer, ou supprimer instructions.</span><span class="sxs-lookup"><span data-stu-id="3c601-216">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="3c601-217"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> diffère de <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> elle retourne `rowid` comme paramètre de sortie si vous exécutez une instruction INSERT, DELETE ou UPDATE qui affecte exactement une seule ligne.</span><span class="sxs-lookup"><span data-stu-id="3c601-217"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> differs from <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> in that it returns `rowid` as an output parameter if you are executing an INSERT, DELETE, or UPDATE statement that affects exactly one row.</span></span> <span data-ttu-id="3c601-218">Cela vous permet de vous identifier de manière unique une ligne dans la base de données Oracle, qui vous permettent d’augmenter les performances de requêtes connexes suivantes.</span><span class="sxs-lookup"><span data-stu-id="3c601-218">This allows you to uniquely identify a row in the Oracle database, which can allow you to increase performance in subsequent, related queries.</span></span>  
  
 <span data-ttu-id="3c601-219">Bien que <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> ne pas retourner toutes les lignes, les paramètres de sortie ou retourner les valeurs mappées aux paramètres sont remplis avec des données.</span><span class="sxs-lookup"><span data-stu-id="3c601-219">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c601-220">La connexion n’existe pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-220">The connection does not exist.</span>
          </span>
          <span data-ttu-id="3c601-221">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-221">-or-</span>
          </span>
          <span data-ttu-id="3c601-222">La connexion n'est pas ouverte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-222">The connection is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleScalar">
      <MemberSignature Language="C#" Value="public object ExecuteOracleScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ExecuteOracleScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteOracleScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c601-223">Exécute la requête et retourne la première colonne de la première ligne du jeu de résultats retourné par la requête en tant que type de données spécifique Oracle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-223">Executes the query, and returns the first column of the first row in the result set returned by the query as an Oracle-specific data type.</span>
          </span>
          <span data-ttu-id="3c601-224">Les colonnes ou lignes supplémentaires sont ignorées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-224">Extra columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c601-225">Première colonne de la première ligne dans le jeu de résultats en tant que de type de données spécifique Oracle ou référence null si le résultat est <see langword="REF CURSOR" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-225">The first column of the first row in the result set as an Oracle-specific data type, or a null reference if the result is a <see langword="REF CURSOR" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-226">Utilisez le <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> pour récupérer une valeur unique (par exemple, une valeur d’agrégation) à partir d’une base de données.</span><span class="sxs-lookup"><span data-stu-id="3c601-226">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="3c601-227">Cela nécessite moins de code que l’utilisation de la <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> (méthode), puis en effectuant les opérations requises pour générer la valeur unique à partir des données retournées par une <xref:System.Data.OracleClient.OracleDataReader>.</span><span class="sxs-lookup"><span data-stu-id="3c601-227">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="3c601-228">Un type <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> requête peut être mise en forme comme dans l’exemple c# suivant :</span><span class="sxs-lookup"><span data-stu-id="3c601-228">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
command.CommandText = "SELECT COUNT(*) AS NumberOfRegions FROM Region";  
count = command.ExecuteOracleScalar();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3c601-229">Envoie <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> à <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> et génère <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-229">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c601-230">Envoie <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> à <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> et génère <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-230">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c601-231">Objet <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-231">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-232">Lorsque le <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> est définie sur `StoredProcedure`, le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriété doit être définie sur le nom de la procédure stockée.</span><span class="sxs-lookup"><span data-stu-id="3c601-232">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="3c601-233">La commande exécute cette procédure stockée lorsque vous appelez <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c601-233">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="3c601-234">Plusieurs <xref:System.Data.OracleClient.OracleDataReader> peut être ouvert à un moment donné.</span><span class="sxs-lookup"><span data-stu-id="3c601-234">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c601-235">L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand>, puis l’exécute en passant une chaîne qui est une instruction SQL SELECT et une chaîne à utiliser pour se connecter à la source de données.</span><span class="sxs-lookup"><span data-stu-id="3c601-235">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="3c601-236">Une des valeurs de <see cref="T:System.Data.CommandBehavior" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-236">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c601-237">Envoie <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> à <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> et génère <see cref="T:System.Data.OracleClient.OracleDataReader" /> à l'aide d'une valeur <see cref="T:System.Data.CommandBehavior" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-237">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />, and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c601-238">Objet <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-238">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-239">Si vous pensez que votre instruction SQL pour retourner une seule ligne, en spécifiant `SingleRow` comme le <xref:System.Data.CommandBehavior> valeur peut améliorer les performances de l’application.</span><span class="sxs-lookup"><span data-stu-id="3c601-239">If you expect your SQL statement to return only a single row, specifying `SingleRow` as the <xref:System.Data.CommandBehavior> value may improve application performance.</span></span>  
  
 <span data-ttu-id="3c601-240">Lorsque le <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> est définie sur `StoredProcedure`, le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriété doit être définie sur le nom de la procédure stockée.</span><span class="sxs-lookup"><span data-stu-id="3c601-240">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="3c601-241">La commande exécute cette procédure stockée lorsque vous appelez <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c601-241">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="3c601-242">Le <xref:System.Data.OracleClient.OracleDataReader> prend en charge un mode spécial qui permet la lecture efficace de valeurs binaires volumineux.</span><span class="sxs-lookup"><span data-stu-id="3c601-242">The <xref:System.Data.OracleClient.OracleDataReader> supports a special mode that enables large binary values to be read efficiently.</span></span> <span data-ttu-id="3c601-243">Pour plus d’informations, consultez la `SequentialAccess` définition pour <xref:System.Data.CommandBehavior>.</span><span class="sxs-lookup"><span data-stu-id="3c601-243">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="3c601-244">Plusieurs <xref:System.Data.OracleClient.OracleDataReader> peut être ouvert à un moment donné.</span><span class="sxs-lookup"><span data-stu-id="3c601-244">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c601-245">L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand>, puis l’exécute en passant une chaîne qui est une instruction SQL SELECT et une chaîne à utiliser pour se connecter à la base de données.</span><span class="sxs-lookup"><span data-stu-id="3c601-245">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the database.</span></span> <span data-ttu-id="3c601-246"><xref:System.Data.CommandBehavior> est ensuite affectée à <xref:System.Data.CommandBehavior.CloseConnection>.</span><span class="sxs-lookup"><span data-stu-id="3c601-246"><xref:System.Data.CommandBehavior> is then set to <xref:System.Data.CommandBehavior.CloseConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c601-247">Exécute la requête et retourne la première colonne de la première ligne du jeu de résultats retourné par la requête en tant que type de données .NET Framework.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-247">Executes the query, and returns the first column of the first row in the result set returned by the query as a .NET Framework data type.</span>
          </span>
          <span data-ttu-id="3c601-248">Les colonnes ou lignes supplémentaires sont ignorées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-248">Extra columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c601-249">Première colonne de la première ligne dans le jeu de résultats en tant que type de données .NET Framework ou référence null si le jeu de résultats est vide ou si le résultat est <see langword="REF CURSOR" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-249">The first column of the first row in the result set as a .NET Framework data type, or a null reference if the result set is empty or the result is a <see langword="REF CURSOR" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-250">Utilisez le <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> pour récupérer une valeur unique (par exemple, une valeur d’agrégation) à partir d’une base de données.</span><span class="sxs-lookup"><span data-stu-id="3c601-250">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="3c601-251">Cela nécessite moins de code que l’utilisation de la <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> (méthode), puis en effectuant les opérations requises pour générer la valeur unique à partir des données retournées par une <xref:System.Data.OracleClient.OracleDataReader>.</span><span class="sxs-lookup"><span data-stu-id="3c601-251">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="3c601-252">Un type <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> requête peut être mise en forme comme dans l’exemple c# suivant :</span><span class="sxs-lookup"><span data-stu-id="3c601-252">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "SELECT COUNT(*) FROM Region";  
Int32 count = (int32) ExecuteScalar();  
```  
  
   
  
## Examples  
 <span data-ttu-id="3c601-253">L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand> , puis l’exécute à l’aide de <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c601-253">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it using <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="3c601-254">L’exemple est passé à une chaîne qui est une instruction SQL qui retourne un résultat d’agrégation et une chaîne à utiliser pour se connecter à la base de données.</span><span class="sxs-lookup"><span data-stu-id="3c601-254">The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OracleParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleParameterCollection ^ Parameters { System::Data::OracleClient::OracleParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c601-255">Obtient <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-255">Gets the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c601-256">Les paramètres de la procédure stockée ou de l’instruction SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-256">The parameters of the SQL statement or stored procedure.</span>
          </span>
          <span data-ttu-id="3c601-257">La valeur par défaut est une collection vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-257">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-258">Lorsque le <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> est définie sur `StoredProcedure`, le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriété doit être définie sur le nom de la procédure stockée.</span><span class="sxs-lookup"><span data-stu-id="3c601-258">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="3c601-259">L’utilisateur peut être obligé d’utiliser la syntaxe du caractère d’échappement si le nom de la procédure stockée contient des caractères spéciaux.</span><span class="sxs-lookup"><span data-stu-id="3c601-259">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="3c601-260">La commande exécute cette procédure stockée lorsque vous appelez une des méthodes Execute.</span><span class="sxs-lookup"><span data-stu-id="3c601-260">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="3c601-261">Le fournisseur de données .NET Framework pour Oracle ne prend pas en charge l’espace réservé de point d’interrogation ( ?) pour passer des paramètres à une instruction SQL appelée par un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`.</span><span class="sxs-lookup"><span data-stu-id="3c601-261">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="3c601-262">Dans ce cas, les paramètres nommés doivent être utilisés.</span><span class="sxs-lookup"><span data-stu-id="3c601-262">In this case, named parameters must be used.</span></span> <span data-ttu-id="3c601-263">Exemple :</span><span class="sxs-lookup"><span data-stu-id="3c601-263">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="3c601-264">Lorsque, à l’aide de paramètres nommés dans une instruction SQL appelée par un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`, vous devez faire précéder le nom du paramètre avec un signe deux-points ( :).</span><span class="sxs-lookup"><span data-stu-id="3c601-264">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="3c601-265">Toutefois, dans une procédure stockée, ou lorsque vous faites référence à un paramètre nommé ailleurs dans votre code (par exemple, lorsque vous ajoutez <xref:System.Data.OracleClient.OracleParameter> des objets sur le <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> propriété), ne faites pas précéder le paramètre nommé par un signe deux-points ( :).</span><span class="sxs-lookup"><span data-stu-id="3c601-265">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="3c601-266">Le fournisseur de données .NET Framework pour Oracle ajoute automatiquement les deux-points.</span><span class="sxs-lookup"><span data-stu-id="3c601-266">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c601-267">L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand> et affiche ses paramètres.</span><span class="sxs-lookup"><span data-stu-id="3c601-267">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and displays its parameters.</span></span> <span data-ttu-id="3c601-268">Pour ce faire, est passé à la méthode un <xref:System.Data.OracleClient.OracleConnection>, une chaîne de requête qui est une instruction SQL SELECT et un tableau de <xref:System.Data.OracleClient.OracleParameter> objets.</span><span class="sxs-lookup"><span data-stu-id="3c601-268">To accomplish this, the method is passed an <xref:System.Data.OracleClient.OracleConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OracleClient.OracleParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c601-269">Crée une version préparée (ou compilée) de la commande dans la source de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-269">Creates a prepared (or compiled) version of the command at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-270">Avant d’appeler <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, spécifiez le type de données de chaque paramètre dans l’instruction à préparer.</span><span class="sxs-lookup"><span data-stu-id="3c601-270">Before you call <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c601-271">
            <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> n’est pas défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-271">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not set.</span>
          </span>
          <span data-ttu-id="3c601-272">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-272">-or-</span>
          </span>
          <span data-ttu-id="3c601-273">
            <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> ne correspond pas à <see cref="M:System.Data.OracleClient.OracleConnection.Open" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-273">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not <see cref="M:System.Data.OracleClient.OracleConnection.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c601-274">Rétablit la valeur par défaut de la propriété <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-274">Resets the <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> property to the default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-275">La valeur par défaut de le <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> est de 30 secondes.</span><span class="sxs-lookup"><span data-stu-id="3c601-275">The default value of the <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleTransaction ^ Transaction { System::Data::OracleClient::OracleTransaction ^ get(); void set(System::Data::OracleClient::OracleTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c601-276">Obtient ou définit l'objet <see cref="T:System.Data.OracleClient.OracleTransaction" /> dans lequel <see cref="T:System.Data.OracleClient.OracleCommand" /> s'exécute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-276">Gets or sets the <see cref="T:System.Data.OracleClient.OracleTransaction" /> within which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c601-277">Élément <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-277">An <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span>
          </span>
          <span data-ttu-id="3c601-278">La valeur par défaut est une valeur null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-278">The default is a null value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-279">Vous ne pouvez pas définir le <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> propriété si elle est déjà définie sur une valeur spécifique, et la commande est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="3c601-279">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="3c601-280">Si vous définissez la propriété de transaction sur une <xref:System.Data.OracleClient.OracleTransaction> objet n’est pas connecté au même <xref:System.Data.OracleClient.OracleConnection> en tant que le <xref:System.Data.OracleClient.OracleCommand> de l’objet, une exception est levée la prochaine fois que vous tentez d’exécuter une instruction.</span><span class="sxs-lookup"><span data-stu-id="3c601-280">If you set the transaction property to an <xref:System.Data.OracleClient.OracleTransaction> object that is not connected to the same <xref:System.Data.OracleClient.OracleConnection> as the <xref:System.Data.OracleClient.OracleCommand> object, an exception will be thrown the next time you attempt to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c601-281">Obtient ou définit une valeur qui indique comment la méthode <see langword="Update" /> doit appliquer les résultats de la commande à <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-281">Gets or sets a value that specifies how the <see langword="Update" /> method should apply command results to the <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c601-282">Une des valeurs de <see cref="T:System.Data.UpdateRowSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-282">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c601-283">La valeur par défaut <xref:System.Data.UpdateRowSource> valeur est `Both` , sauf si la commande est générée automatiquement (comme dans le cas de la <xref:System.Data.OracleClient.OracleCommandBuilder>), auquel cas la valeur par défaut est `None`.</span><span class="sxs-lookup"><span data-stu-id="3c601-283">The default <xref:System.Data.UpdateRowSource> value is `Both` unless the command is automatically generated (as in the case of the <xref:System.Data.OracleClient.OracleCommandBuilder>), in which case the default is `None`.</span></span>  
  
 <span data-ttu-id="3c601-284">Pour plus d’informations sur l’utilisation de la <xref:System.Data.UpdateRowSource> propriété, consultez [paramètres DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).</span><span class="sxs-lookup"><span data-stu-id="3c601-284">For more information about using the <xref:System.Data.UpdateRowSource> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3c601-285">La valeur entrée ne faisait pas partie des valeurs <see cref="T:System.Data.UpdateRowSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c601-285">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>