<Type Name="OracleCommand" FullName="System.Data.OracleClient.OracleCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a202ecdb5445be69a4ec9a6ae797016c081872a3" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37676535" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <TypeSignature Language="F#" Value="type OracleCommand = class&#xA;    inherit DbCommand&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente une instruction SQL ou une procédure stockée à exécuter sur une source de données. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce type est déconseillé et sera supprimé dans une future version du .NET Framework. Pour plus d’informations, consultez [Oracle et ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).  
  
 Le <xref:System.Data.OracleClient.OracleCommand> classe fournit les méthodes suivantes pour l’exécution de commandes sur une source de données :  
  
|Élément|Description |  
|----------|-----------------|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>|Exécute les commandes qui retournent des lignes.|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>|Exécute une instruction SQL sur <xref:System.Data.OracleClient.OracleCommand.Connection%2A> et retourne le nombre de lignes affectées.|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>|Exécute les commandes telles que des instructions SQL INSERT, DELETE, UPDATE et ensemble.|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>|Récupère une valeur unique (par exemple, une valeur d’agrégation) à partir d’une base de données comme un type de données .NET Framework.|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>|Récupère une valeur unique (par exemple, une valeur d’agrégation) à partir d’une base de données comme un type de données spécifique Oracle.|  
  
 Vous pouvez réinitialiser le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriété et la réutilisation du <xref:System.Data.OracleClient.OracleCommand> objet.  
  
 Si les résultats de l’exécution de la commande dans un qui irrécupérable <xref:System.Data.OracleClient.OracleException>, le <xref:System.Data.OracleClient.OracleConnection> peut se fermer. L'utilisateur peut toutefois rouvrir la connexion et continuer.  
  
> [!NOTE]
>  Contrairement à la **commande** objet dans les autres fournisseurs de données .NET Framework (SQL Server, OLE DB et ODBC), le <xref:System.Data.OracleClient.OracleCommand> objet ne prend pas en charge un <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> propriété. Définition d’un délai d’expiration de la commande n’a aucun effet et la valeur retournée est toujours zéro.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> méthode de <xref:System.Data.OracleClient.OracleCommand>, avec <xref:System.Data.OracleClient.OracleDataReader> et <xref:System.Data.OracleClient.OracleConnection>, pour sélectionner les lignes d’une table.  
  
 [!code-csharp[Classic WebData OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de l'objet <see cref="T:System.Data.OracleClient.OracleCommand" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de l'objet <see cref="T:System.Data.OracleClient.OracleCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le constructeur de base Initialise tous les champs à leurs valeurs par défaut. Le tableau suivant montre les valeurs initiales des propriétés d’une instance de <xref:System.Data.OracleClient.OracleCommand>.  
  
|Propriétés|Valeur initiale|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|une chaîne vide ( » »)|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|null|  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand> et définit certaines de ses propriétés.  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand commandText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandText">Texte de la requête.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OracleClient.OracleCommand" /> avec le texte de la requête.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string * System.Data.OracleClient.OracleConnection -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand (commandText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="commandText">Texte de la requête.</param>
        <param name="connection">Objet <see cref="T:System.Data.OracleClient.OracleConnection" /> qui représente la connexion à une base de données.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OracleClient.OracleCommand" /> avec le texte de la requête et un objet <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand>.  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection, class System.Data.OracleClient.OracleTransaction tx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection, tx As OracleTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection, System::Data::OracleClient::OracleTransaction ^ tx);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string * System.Data.OracleClient.OracleConnection * System.Data.OracleClient.OracleTransaction -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand (commandText, connection, tx)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
        <Parameter Name="tx" Type="System.Data.OracleClient.OracleTransaction" />
      </Parameters>
      <Docs>
        <param name="commandText">Texte de la requête.</param>
        <param name="connection">Objet <see cref="T:System.Data.OracleClient.OracleConnection" /> qui représente la connexion à une base de données.</param>
        <param name="tx">
          <see cref="T:System.Data.OracleClient.OracleTransaction" /> dans lequel <see cref="T:System.Data.OracleClient.OracleCommand" /> s’exécute.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OracleClient.OracleCommand" /> avec le texte de la requête, un objet <see cref="T:System.Data.OracleClient.OracleConnection" /> et <see cref="T:System.Data.OracleClient.OracleTransaction" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés d’une instance de cette implémentation de la <xref:System.Data.OracleClient.OracleCommand>.  
  
|Propriétés|Valeur initiale|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|Un nouveau <xref:System.Data.OracleClient.OracleConnection> qui est la valeur pour le `connection` paramètre.|  
  
 Vous pouvez modifier la valeur d’un de ces paramètres en définissant la propriété associée.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand> et définit certaines de ses propriétés.  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="oracleCommand.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tente d'annuler l'exécution de <see cref="T:System.Data.OracleClient.OracleCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 S’il n’a rien à annuler, rien ne se produit. Cependant, si une commande est en cours et si la tentative d'annulation échoue, aucune exception n'est générée.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand>, l’exécute, puis annule l’exécution. Pour ce faire, une chaîne qui est une instruction SQL SELECT et une chaîne à utiliser pour se connecter à la base de données est passée à la méthode.  
  
 [!code-csharp[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleCommand.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une copie de cet objet <see cref="T:System.Data.OracleClient.OracleCommand" />.</summary>
        <returns>Nouvel objet <see cref="T:System.Data.OracleClient.OracleCommand" /> dans lequel toutes les valeurs de propriétés sont identiques à celles d'origine.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'instruction SQL ou la procédure stockée à exécuter sur la base de données.</summary>
        <value>Instruction SQL ou procédure stockée à exécuter. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> propriété est définie sur `StoredProcedure`, le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriété doit être définie sur le nom de la procédure stockée. L’utilisateur peut être obligé d’utiliser la syntaxe de caractère d’échappement si le nom de la procédure stockée contient des caractères spéciaux. La commande exécute cette procédure stockée lorsque vous appelez une des méthodes Execute.  
  
 Le fournisseur de données .NET Framework pour Oracle ne prend pas en charge l’espace réservé de point d’interrogation ( ?) pour le passage de paramètres à une instruction SQL, appelés un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`. Dans ce cas, les paramètres nommés doivent être utilisés. Exemple :  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 Lorsque, à l’aide de paramètres nommés dans une instruction SQL appelée par un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`, vous devez faire précéder le nom du paramètre avec un signe deux-points ( :)). Toutefois, dans une procédure stockée, ou lorsque vous faites référence à un paramètre nommé ailleurs dans votre code (par exemple, lorsque vous ajoutez <xref:System.Data.OracleClient.OracleParameter> des objets sur le <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> propriété), ne faites pas précéder le paramètre nommé avec un signe deux-points ( :)). Le fournisseur de données .NET Framework pour Oracle ajoute automatiquement les deux-points.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand> et définit certaines de ses propriétés.  
  
 [!code-csharp[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la durée d'attente qui précède le moment où il est mis fin à une tentative d'exécution d'une commande et où une erreur est générée.</summary>
        <value>Durée (en secondes) d'attente de l'exécution de la commande. La valeur par défaut est de 30 secondes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.ArgumentException> est générée si assigné <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> valeur de propriété est inférieure à 0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant la manière dont la propriété <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> est interprétée.</summary>
        <value>Une des valeurs de <see cref="T:System.Data.CommandType" />. La valeur par défaut est <see langword="Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> propriété est définie sur `StoredProcedure`, vous devez définir le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriété à la syntaxe d’appel Oracle complète. La commande exécute cette procédure stockée lorsque vous appelez une des méthodes Execute (par exemple, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> ou <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).  
  
 Le <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> et <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriétés ne peut pas être définies si la connexion active effectue une opération d’exécution ou d’extraction.  
  
 Le fournisseur de données .NET Framework pour Oracle ne prend pas en charge l’espace réservé de point d’interrogation ( ?) pour le passage de paramètres à une instruction SQL, appelés un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`. Dans ce cas, les paramètres nommés doivent être utilisés. Exemple :  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 Lorsque, à l’aide de paramètres nommés dans une instruction SQL appelée par un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`, vous devez faire précéder le nom du paramètre avec un signe deux-points ( :)). Toutefois, dans une procédure stockée, ou lorsque vous faites référence à un paramètre nommé ailleurs dans votre code (par exemple, lorsque vous ajoutez <xref:System.Data.OracleClient.OracleParameter> des objets sur le <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> propriété), ne faites pas précéder le paramètre nommé avec un signe deux-points ( :)). Le fournisseur de données .NET Framework pour Oracle ajoute automatiquement les deux-points.  
  
   
  
## Examples  
 L’exemple suivant crée une instance d’une classe dérivée <xref:System.Data.OracleClient.OracleCommand> et définit certaines de ses propriétés.  
  
 [!code-csharp[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La valeur n’est pas un <see cref="T:System.Data.CommandType" /> valide.</exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); void set(System::Data::OracleClient::OracleConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection with get, set" Usage="System.Data.OracleClient.OracleCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Data.OracleClient.OracleConnection" /> utilisé par cette instance du <see cref="T:System.Data.OracleClient.OracleCommand" />.</summary>
        <value>Connexion à une source de données. La valeur par défaut est une valeur null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas définir le <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, et <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriétés si la connexion active effectue une opération d’exécution ou d’extraction.  
  
 Si vous définissez <xref:System.Data.OracleClient.OracleCommand.Connection%2A> alors qu'une transaction est en cours et que la propriété <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> n'a pas la valeur null, un objet <xref:System.InvalidOperationException> est généré. Si vous définissez <xref:System.Data.OracleClient.OracleCommand.Connection%2A> une fois que la transaction a été validée ou restaurée et le <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> propriété n’est pas null, le <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> propriété est ensuite définie sur une valeur null.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand> et définit certaines de ses propriétés.  
  
 [!code-csharp[Classic WebData OracleCommand.Connection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Connection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> a été modifiée alors qu'une transaction était en cours.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="oracleCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OracleParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.OracleClient.OracleParameter" Usage="oracleCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une nouvelle instance d’un objet <see cref="T:System.Data.OracleClient.OracleParameter" />.</summary>
        <returns>Objet <see cref="T:System.Data.OracleClient.OracleParameter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> méthode est une version fortement typée de <xref:System.Data.IDbCommand.CreateParameter%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si l'objet command doit être visible dans un contrôle d'interface personnalisé.</summary>
        <value>
          <see langword="true" />, si l'objet command doit être visible dans un contrôle ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="oracleCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="oracleCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exécute une instruction SQL sur <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> et retourne le nombre de lignes affectées.</summary>
        <returns>Pour les instructions UPDATE, INSERT et DELETE, les valeurs de retour représentent le nombre de lignes affectées par la commande. Pour les instructions CREATE TABLE et DROP TABLE, la valeur de retour est 0. Pour tous les autres types d'instructions, la valeur de retour est -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> pour effectuer des opérations de catalogue (par exemple, interrogation de la structure d’une base de données ou de création d’objets de base de données tels que des tables) ; ou de modifier les données dans une base de données, sans utiliser un <xref:System.Data.DataSet>, par l’exécution UPDATE, INSERT ou DELETE instructions.  
  
 Bien que <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> ne pas retourner toutes les lignes, les paramètres de sortie ou retourner les valeurs mappées aux paramètres sont remplis avec des données.  
  
 Pour les instructions UPDATE, INSERT et DELETE, les valeurs de retour représentent le nombre de lignes affectées par la commande. Pour les instructions CREATE TABLE et DROP TABLE, la valeur de retour est 0. Pour tous les autres types d'instructions, la valeur de retour est -1. En cas d’annulation, la valeur de retour est également -1.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand> , puis l’exécute à l’aide de <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>. L’exemple est passé à une chaîne qui est une instruction SQL (par exemple, UPDATE, INSERT ou DELETE) et une chaîne à utiliser pour se connecter à la base de données.  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La connexion n’existe pas.  -ou-  La connexion n’est pas ouverte.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteOracleNonQuery([out] valuetype System.Data.OracleClient.OracleString&amp; rowid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleNonQuery (ByRef rowid As OracleString) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteOracleNonQuery([Runtime::InteropServices::Out] System::Data::OracleClient::OracleString % rowid);" />
      <MemberSignature Language="F#" Value="member this.ExecuteOracleNonQuery :  -&gt; int" Usage="oracleCommand.ExecuteOracleNonQuery rowid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowid" Type="System.Data.OracleClient.OracleString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rowid">Représentation sous forme de chaîne Base64 de l'ID de ligne réel dans le serveur.</param>
        <summary>Exécute une instruction SQL sur <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> et retourne le nombre de lignes affectées.</summary>
        <returns>Pour les instructions UPDATE, INSERT et DELETE, les valeurs de retour représentent le nombre de lignes affectées par la commande. Pour les instructions CREATE TABLE et DROP TABLE, la valeur de retour est 0. Pour tous les autres types d'instructions, la valeur de retour est -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> pour effectuer des opérations de catalogue (par exemple, interrogation de la structure d’une base de données ou de création d’objets de base de données tels que des tables) ; ou de modifier les données dans une base de données, sans utiliser un <xref:System.Data.DataSet>, par l’exécution UPDATE, INSERT ou DELETE instructions.  
  
 <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> diffère <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> elle retourne `rowid` comme paramètre de sortie si vous exécutez une instruction INSERT, DELETE ou UPDATE qui affecte exactement une seule ligne. Cela permet d’identifier de manière unique une ligne dans la base de données Oracle, ce qui vous permettent d’augmenter les performances de requêtes connexes suivantes.  
  
 Bien que <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> ne pas retourner toutes les lignes, les paramètres de sortie ou retourner les valeurs mappées aux paramètres sont remplis avec des données.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La connexion n’existe pas.  -ou-  La connexion n’est pas ouverte.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleScalar">
      <MemberSignature Language="C#" Value="public object ExecuteOracleScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ExecuteOracleScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteOracleScalar();" />
      <MemberSignature Language="F#" Value="member this.ExecuteOracleScalar : unit -&gt; obj" Usage="oracleCommand.ExecuteOracleScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exécute la requête et retourne la première colonne de la première ligne du jeu de résultats retourné par la requête en tant que type de données spécifique Oracle. Les colonnes ou lignes supplémentaires sont ignorées.</summary>
        <returns>Première colonne de la première ligne dans le jeu de résultats en tant que de type de données spécifique Oracle ou référence null si le résultat est <see langword="REF CURSOR" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> méthode pour récupérer une valeur unique (par exemple, une valeur d’agrégation) d’une base de données. Cela nécessite moins de code que l’utilisation de la <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> (méthode), puis en effectuant les opérations nécessaires pour générer la valeur unique à partir des données retournées par une <xref:System.Data.OracleClient.OracleDataReader>.  
  
 Classique <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> requête peut être mise en forme comme dans l’exemple c# suivant :  
  
```  
command.CommandText = "SELECT COUNT(*) AS NumberOfRegions FROM Region";  
count = command.ExecuteOracleScalar();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envoie <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> à <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> et génère <see cref="T:System.Data.OracleClient.OracleDataReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.OracleClient.OracleDataReader" Usage="oracleCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Envoie <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> à <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> et génère <see cref="T:System.Data.OracleClient.OracleDataReader" />.</summary>
        <returns>Objet <see cref="T:System.Data.OracleClient.OracleDataReader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> propriété est définie sur `StoredProcedure`, le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriété doit être définie sur le nom de la procédure stockée. La commande exécute cette procédure stockée lorsque vous appelez <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.  
  
 Plusieurs <xref:System.Data.OracleClient.OracleDataReader> peut être ouvert à un moment donné.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand>, puis l’exécute en passant une chaîne qui est une instruction SQL SELECT et une chaîne à utiliser pour se connecter à la source de données.  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.OracleClient.OracleDataReader" Usage="oracleCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">Une des valeurs de <see cref="T:System.Data.CommandBehavior" />.</param>
        <summary>Envoie <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> à <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> et génère <see cref="T:System.Data.OracleClient.OracleDataReader" /> à l'aide d'une valeur <see cref="T:System.Data.CommandBehavior" />.</summary>
        <returns>Objet <see cref="T:System.Data.OracleClient.OracleDataReader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous pensez que votre instruction SQL pour retourner une seule ligne, en spécifiant `SingleRow` comme le <xref:System.Data.CommandBehavior> valeur peut améliorer les performances de l’application.  
  
 Lorsque le <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> propriété est définie sur `StoredProcedure`, le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriété doit être définie sur le nom de la procédure stockée. La commande exécute cette procédure stockée lorsque vous appelez <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.  
  
 Le <xref:System.Data.OracleClient.OracleDataReader> prend en charge un mode spécial qui permet la lecture efficace de grandes valeurs binaires. Pour plus d’informations, consultez le `SequentialAccess` définition pour <xref:System.Data.CommandBehavior>.  
  
 Plusieurs <xref:System.Data.OracleClient.OracleDataReader> peut être ouvert à un moment donné.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand>, puis l’exécute en passant une chaîne qui est une instruction SQL SELECT et une chaîne à utiliser pour se connecter à la base de données. <xref:System.Data.CommandBehavior> est ensuite définie sur <xref:System.Data.CommandBehavior.CloseConnection>.  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="oracleCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exécute la requête et retourne la première colonne de la première ligne du jeu de résultats retourné par la requête en tant que type de données .NET Framework. Les colonnes ou lignes supplémentaires sont ignorées.</summary>
        <returns>Première colonne de la première ligne dans le jeu de résultats en tant que type de données .NET Framework ou référence null si le jeu de résultats est vide ou si le résultat est <see langword="REF CURSOR" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> méthode pour récupérer une valeur unique (par exemple, une valeur d’agrégation) d’une base de données. Cela nécessite moins de code que l’utilisation de la <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> (méthode), puis en effectuant les opérations nécessaires pour générer la valeur unique à partir des données retournées par une <xref:System.Data.OracleClient.OracleDataReader>.  
  
 Classique <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> requête peut être mise en forme comme dans l’exemple c# suivant :  
  
```  
CommandText = "SELECT COUNT(*) FROM Region";  
Int32 count = (int32) ExecuteScalar();  
```  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand> , puis l’exécute à l’aide de <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>. L’exemple est passé à une chaîne qui est une instruction SQL qui retourne un résultat d’agrégation et une chaîne à utiliser pour se connecter à la base de données.  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OracleParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleParameterCollection ^ Parameters { System::Data::OracleClient::OracleParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.OracleClient.OracleParameterCollection" Usage="System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</summary>
        <value>Les paramètres de la procédure stockée ou de l’instruction SQL. La valeur par défaut est une collection vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> propriété est définie sur `StoredProcedure`, le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> propriété doit être définie sur le nom de la procédure stockée. L’utilisateur peut être obligé d’utiliser la syntaxe de caractère d’échappement si le nom de la procédure stockée contient des caractères spéciaux. La commande exécute cette procédure stockée lorsque vous appelez une des méthodes Execute.  
  
 Le fournisseur de données .NET Framework pour Oracle ne prend pas en charge l’espace réservé de point d’interrogation ( ?) pour le passage de paramètres à une instruction SQL, appelés un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`. Dans ce cas, les paramètres nommés doivent être utilisés. Exemple :  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 Lorsque, à l’aide de paramètres nommés dans une instruction SQL appelée par un <xref:System.Data.OracleClient.OracleCommand> de `CommandType.Text`, vous devez faire précéder le nom du paramètre avec un signe deux-points ( :)). Toutefois, dans une procédure stockée, ou lorsque vous faites référence à un paramètre nommé ailleurs dans votre code (par exemple, lorsque vous ajoutez <xref:System.Data.OracleClient.OracleParameter> des objets sur le <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> propriété), ne faites pas précéder le paramètre nommé avec un signe deux-points ( :)). Le fournisseur de données .NET Framework pour Oracle ajoute automatiquement les deux-points.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OracleClient.OracleCommand> et affiche ses paramètres. Pour ce faire, la méthode est passée une <xref:System.Data.OracleClient.OracleConnection>, une chaîne de requête qui est une instruction SQL SELECT et un tableau de <xref:System.Data.OracleClient.OracleParameter> objets.  
  
 [!code-csharp[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="oracleCommand.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une version préparée (ou compilée) de la commande dans la source de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Avant d’appeler <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, spécifiez le type de données de chaque paramètre dans l’instruction à préparer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> n’est pas défini.  -ou-  <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> n’est pas <see cref="M:System.Data.OracleClient.OracleConnection.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="oracleCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rétablit la valeur par défaut de la propriété <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur par défaut de la <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> est de 30 secondes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.CreateParameter">
      <MemberSignature Language="C#" Value="System.Data.IDbDataParameter IDbCommand.CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbDataParameter System.Data.IDbCommand.CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.System#Data#IDbCommand#CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Function CreateParameter () As IDbDataParameter Implements IDbCommand.CreateParameter" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbDataParameter ^ System.Data.IDbCommand.CreateParameter() = System::Data::IDbCommand::CreateParameter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.CreateParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.System#Data#IDbCommand#ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader () As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader() = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader (behavior As CommandBehavior) As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader(System::Data::CommandBehavior behavior) = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleTransaction ^ Transaction { System::Data::OracleClient::OracleTransaction ^ get(); void set(System::Data::OracleClient::OracleTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.OracleClient.OracleTransaction with get, set" Usage="System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'objet <see cref="T:System.Data.OracleClient.OracleTransaction" /> dans lequel <see cref="T:System.Data.OracleClient.OracleCommand" /> s'exécute.</summary>
        <value>Élément <see cref="T:System.Data.OracleClient.OracleTransaction" />. La valeur par défaut est une valeur null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas définir le <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> propriété si elle est déjà défini sur une valeur spécifique, et la commande est en cours d’exécution. Si vous définissez la propriété de transaction sur une <xref:System.Data.OracleClient.OracleTransaction> objet qui n’est pas connecté au même <xref:System.Data.OracleClient.OracleConnection> en tant que le <xref:System.Data.OracleClient.OracleCommand> de l’objet, une exception est levée la prochaine fois que vous tentez d’exécuter une instruction.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique comment la méthode <see langword="Update" /> doit appliquer les résultats de la commande à <see cref="T:System.Data.DataRow" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Data.UpdateRowSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur par défaut <xref:System.Data.UpdateRowSource> valeur est `Both` , sauf si la commande est générée automatiquement (comme dans le cas de la <xref:System.Data.OracleClient.OracleCommandBuilder>), auquel cas la valeur par défaut est `None`.  
  
 Pour plus d’informations sur l’utilisation de la <xref:System.Data.UpdateRowSource> propriété, consultez [paramètres DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La valeur entrée ne faisait pas partie des valeurs <see cref="T:System.Data.UpdateRowSource" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>