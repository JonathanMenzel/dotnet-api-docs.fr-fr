<Type Name="OracleCommandBuilder" FullName="System.Data.OracleClient.OracleCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="38535fdcbbcd9d195d1483f39d6494a45f713b95" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48676784" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <TypeSignature Language="F#" Value="type OracleCommandBuilder = class&#xA;    inherit DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("OracleCommandBuilder has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Génère automatiquement des commandes de table simple utilisées pour harmoniser les modifications apportées à <see cref="T:System.Data.DataSet" /> avec la base de données associée. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce type est déconseillé et sera supprimé dans une future version du .NET Framework. Pour plus d’informations, consultez [Oracle et ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).  
  
 Le <xref:System.Data.OracleClient.OracleDataAdapter> ne génère pas automatiquement les instructions SQL requises pour harmoniser les modifications apportées à un <xref:System.Data.DataSet> associé à la base de données. Toutefois, vous pouvez créer un <xref:System.Data.OracleClient.OracleCommandBuilder> objet qui génère des instructions SQL pour les mises à jour de la table unique en définissant le <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> propriété de la <xref:System.Data.OracleClient.OracleDataAdapter>. Ensuite, le <xref:System.Data.OracleClient.OracleCommandBuilder> génère les instructions SQL supplémentaires que vous ne définissez pas.  
  
 La relation entre un <xref:System.Data.OracleClient.OracleDataAdapter> et de son <xref:System.Data.OracleClient.OracleCommandBuilder> est toujours un à un. Pour créer cette correspondance, vous définissez le <xref:System.Data.OracleClient.OracleDataAdapter> propriété de la <xref:System.Data.OracleClient.OracleCommandBuilder> objet. Cela entraîne le <xref:System.Data.OracleClient.OracleCommandBuilder> à s’inscrire en tant qu’écouteur, qui produit la sortie de <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> événements qui affectent la <xref:System.Data.DataSet>.  
  
 Pour générer des instructions INSERT, UPDATE ou DELETE, le <xref:System.Data.OracleClient.OracleCommandBuilder> utilise le <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> propriété à récupérer un jeu de métadonnées requis.  
  
 Le <xref:System.Data.OracleClient.OracleCommandBuilder> utilise également le <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, et <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> propriétés référencées par le <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>.  
  
 Si vous appelez <xref:System.Data.Common.DbDataAdapter.Dispose%2A>, le <xref:System.Data.OracleClient.OracleCommandBuilder> est dissocié de le <xref:System.Data.OracleClient.OracleDataAdapter>, et les commandes générées ne sont plus utilisés.  
  
   
  
## Examples  
 L’exemple suivant utilise <xref:System.Data.OracleClient.OracleCommand>, avec <xref:System.Data.OracleClient.OracleDataAdapter> et <xref:System.Data.OracleClient.OracleConnection>, pour sélectionner les lignes à partir d’une base de données. L’exemple est passé initialisé <xref:System.Data.DataSet>, une chaîne de connexion, une chaîne de requête qui est une instruction SQL SELECT et une chaîne qui est le nom de la table de base de données. L’exemple crée ensuite un <xref:System.Data.OracleClient.OracleCommandBuilder>.  
  
```vb  
Private Function SelectOracleRows(connection As String, queryString As String, tableName As String) As DataSet  
  
   Dim connection As New OracleConnection(connection)  
   Dim dataAdapter As New OracleDataAdapter()  
   Dim dataSet As DataSet = New DataSet  
  
   dataAdapter.SelectCommand = New OracleCommand(queryString, connection)  
  
   Dim cmdBuilder As OracleCommandBuilder = New OracleCommandBuilder(dataAdapter)  
  
   connection.Open()  
   dataAdapter.Fill(dataSet, tableName)  
      ' Code to modify data in DataSet here   
      ' Without the OracleCommandBuilder this line would fail.  
   dataAdapter.Update(dataSet, tableName)  
   connection.Close()  
End Function  
```  
  
```csharp  
public static DataSet SelectOracleSrvRows(string myConnection, string mySelectQuery, string myTableName)  
{  
   OracleConnection myConn = new OracleConnection(myConnection);  
   OracleDataAdapter myDataAdapter = new OracleDataAdapter();  
   myDataAdapter.SelectCommand = new OracleCommand(mySelectQuery, myConn);  
   OracleCommandBuilder cb = new OracleCommandBuilder(myDataAdapter);  
  
   myConn.Open();  
   DataSet ds = new DataSet();  
   myDataAdapter.Fill(ds, myTableName);  
  
   //Code to modify data in DataSet goes here...  
  
   //Without the OracleCommandBuilder this line would fail.  
   myDataAdapter.Update(ds, myTableName);  
   myConn.Close();  
   return ds;  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/6e3fb8b5-373b-4f9e-ab03-a22693df8e91">Génération automatique de commandes</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de l'objet <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de l'objet <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OracleClient.OracleCommandBuilder> s’inscrit lui-même en tant qu’écouteur pour <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> événements qui sont générés par le <xref:System.Data.OracleClient.OracleDataAdapter> spécifiée dans cette propriété.  
  
 Lorsque vous créez une nouvelle instance de <xref:System.Data.OracleClient.OracleCommandBuilder>, existants <xref:System.Data.OracleClient.OracleCommandBuilder> associé à cet <xref:System.Data.OracleClient.OracleDataAdapter> est libéré.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommandBuilder (System.Data.OracleClient.OracleDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OracleClient.OracleDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OracleDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommandBuilder(System::Data::OracleClient::OracleDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommandBuilder : System.Data.OracleClient.OracleDataAdapter -&gt; System.Data.OracleClient.OracleCommandBuilder" Usage="new System.Data.OracleClient.OracleCommandBuilder adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.OracleClient.OracleDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">Objet <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> à associer à ce <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> avec l'objet <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> associé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OracleClient.OracleCommandBuilder> s’inscrit lui-même en tant qu’écouteur pour <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> événements qui sont générés par le <xref:System.Data.OracleClient.OracleDataAdapter> spécifiée dans cette propriété.  
  
 Lorsque vous créez une nouvelle instance de <xref:System.Data.OracleClient.OracleCommandBuilder>, existants <xref:System.Data.OracleClient.OracleCommandBuilder> associé à cet <xref:System.Data.OracleClient.OracleDataAdapter> est libéré.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberSignature Language="F#" Value="override this.ApplyParameterInfo : System.Data.Common.DbParameter * System.Data.DataRow * System.Data.StatementType * bool -&gt; unit" Usage="oracleCommandBuilder.ApplyParameterInfo (parameter, datarow, statementType, whereClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogLocation : System.Data.Common.CatalogLocation with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.CatalogLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Définit ou obtient le <see cref="T:System.Data.Common.CatalogLocation" /> d'une instance de la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
        <value>Objet <see cref="T:System.Data.Common.CatalogLocation" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public override string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogSeparator : string with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Définit ou obtient une chaîne utilisée comme séparateur de catalogue pour une instance de la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
        <value>Chaîne indiquant le séparateur de catalogue à utiliser avec une instance de la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OracleDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleDataAdapter ^ DataAdapter { System::Data::OracleClient::OracleDataAdapter ^ get(); void set(System::Data::OracleClient::OracleDataAdapter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataAdapter : System.Data.OracleClient.OracleDataAdapter with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.DataAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'objet <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> pour lequel cet objet <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> générera des instructions SQL.</summary>
        <value>Objet <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> associé à ce <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OracleClient.OracleCommandBuilder> s’inscrit lui-même en tant qu’écouteur pour <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> événements qui sont générés par le <xref:System.Data.OracleClient.OracleDataAdapter> spécifiée dans cette propriété.  
  
 Lorsque vous créez une nouvelle instance de <xref:System.Data.OracleClient.OracleCommandBuilder>, existants <xref:System.Data.OracleClient.OracleCommandBuilder> associé à cet <xref:System.Data.OracleClient.OracleDataAdapter> est libéré.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.OracleClient.OracleCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.OracleClient.OracleCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OracleCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::OracleClient::OracleCommand ^ command);" />
      <MemberSignature Language="F#" Value="static member DeriveParameters : System.Data.OracleClient.OracleCommand -&gt; unit" Usage="System.Data.OracleClient.OracleCommandBuilder.DeriveParameters command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.OracleClient.OracleCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.OracleClient.OracleCommand" /> référençant la procédure stockée à partir de laquelle les informations sur les paramètres doivent être dérivées. Les paramètres dérivés sont ajoutés à la collection <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> de <see cref="T:System.Data.OracleClient.OracleCommand" />.</param>
        <summary>Récupère les informations sur les paramètres à partir de la procédure stockée spécifiée dans <see cref="T:System.Data.OracleClient.OracleCommand" /> et remplit la collection <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> de l'objet <see cref="T:System.Data.OracleClient.OracleCommand" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> remplace les informations existantes pour le <xref:System.Data.OracleClient.OracleCommand>.  
  
 <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> nécessite un appel supplémentaire à la base de données pour obtenir les informations. Si les informations de paramètre sont connues à l’avance, il est plus efficace pour remplir la collection de paramètres en définissant explicitement les informations.  
  
 Vous pouvez uniquement utiliser <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> avec des procédures stockées. Vous ne pouvez pas utiliser <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> pour remplir le <xref:System.Data.OracleClient.OracleParameterCollection> avec des instructions Transact-SQL arbitraires, telle qu’une instruction SELECT paramétrable.  
  
 Pour plus d’informations, consultez [configuration des paramètres et Types de données de paramètre](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le texte de la commande n'est pas un nom de procédure stockée valide, ou le <see cref="T:System.Data.CommandType" /> spécifié n'est pas <see cref="F:System.Data.CommandType.StoredProcedure" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oracleCommandBuilder.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, qui est requis pour effectuer des suppressions au niveau de la base de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> à des fins de méthode d’information et de résolution des problèmes, car elle retourne le <xref:System.Data.OracleClient.OracleCommand> objet doit être exécuté.  
  
 Vous pouvez également utiliser <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> comme base d’une commande modifiée. Par exemple, vous pouvez appeler <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> et modifier le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valeur, puis la définir explicitement sur le <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Les instructions SQL sont d’abord générées lorsque l’application appelle <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.  
  
 Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetDeleteCommand();" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetDeleteCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, qui est requis pour effectuer des suppressions au niveau de la base de données.</summary>
        <returns>Objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, requis pour effectuer des suppressions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> à des fins de méthode d’information et de résolution des problèmes, car elle retourne le <xref:System.Data.OracleClient.OracleCommand> objet doit être exécuté.  
  
 Vous pouvez également utiliser <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> comme base d’une commande modifiée. Par exemple, vous pouvez appeler <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> et modifier le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valeur, puis la définir explicitement sur le <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Les instructions SQL sont d’abord générées lorsque l’application appelle <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.  
  
 Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : bool -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetDeleteCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Si la valeur est true, génère des noms de paramètres correspondant aux noms de colonnes, dans la mesure du possible. Si la valeur est false, génère @p1, @p2, etc.</param>
        <summary>Obtient l'objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, qui est requis pour effectuer des suppressions au niveau de la base de données.</summary>
        <returns>Objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, requis pour effectuer des suppressions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> à des fins de méthode d’information et de résolution des problèmes, car elle retourne le <xref:System.Data.OracleClient.OracleCommand> objet doit être exécuté.  
  
 Vous pouvez également utiliser <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> comme base d’une commande modifiée. Par exemple, vous pouvez appeler <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> et modifier le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valeur, puis la définir explicitement sur le <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Les instructions SQL sont d’abord générées lorsque l’application appelle <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.  
  
 Le comportement par défaut, lors de la génération des noms de paramètres, consiste à utiliser @p1, @p2, et ainsi de suite pour les différents paramètres. En passant `true` pour le `useColumnsForParameterNames` paramètre vous permet de forcer le <xref:System.Data.Common.DbCommandBuilder> génère des paramètres basés sur les noms de colonne à la place. . Cette opération réussit uniquement si les conditions suivantes sont remplies :  
  
-   Le <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> a été spécifié et sa longueur est égale ou supérieure au nom du paramètre généré.  
  
-   Le nom de paramètre généré répond aux critères spécifiés dans le <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expression régulière.  
  
-   Un <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> est spécifié.  
  
 Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, qui est requis pour effectuer des suppressions au niveau de la base de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> à des fins de méthode d’information et de résolution des problèmes, car elle retourne le <xref:System.Data.OracleClient.OracleCommand> objet doit être exécuté.  
  
 Vous pouvez également utiliser <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> comme base d’une commande modifiée. Par exemple, vous pouvez appeler <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> et modifier le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valeur, puis la définir explicitement sur le <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Les instructions SQL sont d’abord générées lorsque l’application appelle <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.  
  
 Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetInsertCommand();" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetInsertCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, qui est requis pour effectuer des suppressions au niveau de la base de données.</summary>
        <returns>Objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, qui est requis pour effectuer des insertions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> à des fins de méthode d’information et de résolution des problèmes, car elle retourne le <xref:System.Data.OracleClient.OracleCommand> objet doit être exécuté.  
  
 Vous pouvez également utiliser <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> comme base d’une commande modifiée. Par exemple, vous pouvez appeler <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> et modifier le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valeur, puis la définir explicitement sur le <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Les instructions SQL sont d’abord générées lorsque l’application appelle <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.  
  
 Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : bool -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetInsertCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Si la valeur est true, génère des noms de paramètres correspondant aux noms de colonnes, dans la mesure du possible. Si la valeur est false, génère @p1, @p2, etc.</param>
        <summary>Obtient l'objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, qui est requis pour effectuer des suppressions au niveau de la base de données.</summary>
        <returns>Objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, qui est requis pour effectuer des insertions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> à des fins de méthode d’information et de résolution des problèmes, car elle retourne le <xref:System.Data.OracleClient.OracleCommand> objet doit être exécuté.  
  
 Vous pouvez également utiliser <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> comme base d’une commande modifiée. Par exemple, vous pouvez appeler <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> et modifier le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valeur, puis la définir explicitement sur le <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Les instructions SQL sont d’abord générées lorsque l’application appelle <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.  
  
 Le comportement par défaut, lors de la génération des noms de paramètres, consiste à utiliser @p1, @p2, et ainsi de suite pour les différents paramètres. En passant `true` pour le `useColumnsForParameterNames` paramètre vous permet de forcer le <xref:System.Data.Common.DbCommandBuilder> génère des paramètres basés sur les noms de colonne à la place. . Cette opération réussit uniquement si les conditions suivantes sont remplies :  
  
-   Le <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> a été spécifié et sa longueur est égale ou supérieure au nom du paramètre généré.  
  
-   Le nom de paramètre généré répond aux critères spécifiés dans le <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expression régulière.  
  
-   Un <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> est spécifié.  
  
 Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : int -&gt; string" Usage="oracleCommandBuilder.GetParameterName parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : string -&gt; string" Usage="oracleCommandBuilder.GetParameterName parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterPlaceholder : int -&gt; string" Usage="oracleCommandBuilder.GetParameterPlaceholder parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, qui est requis pour effectuer des mises à jour au niveau de la base de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> à des fins de méthode d’information et de résolution des problèmes, car elle retourne le <xref:System.Data.OracleClient.OracleCommand> objet doit être exécuté.  
  
 Vous pouvez également utiliser <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> comme base d’une commande modifiée. Par exemple, vous pouvez appeler <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> et modifier le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valeur, puis la définir explicitement sur le <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Les instructions SQL sont d’abord générées lorsque l’application appelle <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.  
  
 Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetUpdateCommand();" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetUpdateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, qui est requis pour effectuer des mises à jour au niveau de la base de données.</summary>
        <returns>Objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, requis pour effectuer des mises à jour.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> à des fins de méthode d’information et de résolution des problèmes, car elle retourne le <xref:System.Data.OracleClient.OracleCommand> objet doit être exécuté.  
  
 Vous pouvez également utiliser <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> comme base d’une commande modifiée. Par exemple, vous pouvez appeler <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> et modifier le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valeur, puis la définir explicitement sur le <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Les instructions SQL sont d’abord générées lorsque l’application appelle <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.  
  
 Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : bool -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetUpdateCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Si la valeur est true, génère des noms de paramètres correspondant aux noms de colonnes, dans la mesure du possible. Si la valeur est false, génère @p1, @p2, etc.</param>
        <summary>Obtient l'objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, qui est requis pour effectuer des mises à jour au niveau de la base de données.</summary>
        <returns>Objet <see cref="T:System.Data.OracleClient.OracleCommand" /> généré automatiquement, requis pour effectuer des mises à jour.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> à des fins de méthode d’information et de résolution des problèmes, car elle retourne le <xref:System.Data.OracleClient.OracleCommand> objet doit être exécuté.  
  
 Vous pouvez également utiliser <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> comme base d’une commande modifiée. Par exemple, vous pouvez appeler <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> et modifier le <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> valeur, puis la définir explicitement sur le <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Les instructions SQL sont d’abord générées lorsque l’application appelle <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.  
  
 Le comportement par défaut, lors de la génération des noms de paramètres, consiste à utiliser @p1, @p2, et ainsi de suite pour les différents paramètres. En passant `true` pour le `useColumnsForParameterNames` paramètre vous permet de forcer le <xref:System.Data.Common.DbCommandBuilder> génère des paramètres basés sur les noms de colonne à la place. . Cette opération réussit uniquement si les conditions suivantes sont remplies :  
  
-   Le <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> a été spécifié et sa longueur est égale ou supérieure au nom du paramètre généré.  
  
-   Le nom de paramètre généré répond aux critères spécifiés dans le <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expression régulière.  
  
-   Un <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> est spécifié.  
  
 Pour plus d’informations, consultez [générant des commandes avec CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.QuoteIdentifier : string -&gt; string" Usage="oracleCommandBuilder.QuoteIdentifier unquotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">Identificateur sans guillemets d'origine.</param>
        <summary>À partir d'un identificateur sans guillemets dans le cas du catalogue correct, retourne le formulaire correct entre guillemets de cet identificateur, y compris une séquence d'échappement correcte des guillemets incorporés dans l'identificateur.</summary>
        <returns>Version entre guillemets de l'identificateur. Les guillemets incorporés dans l'identificateur sont placés correctement dans une séquence d'échappement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuotePrefix">
      <MemberSignature Language="C#" Value="public string QuotePrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuotePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.QuotePrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property QuotePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QuotePrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuotePrefix : string with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.QuotePrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteSuffix">
      <MemberSignature Language="C#" Value="public string QuoteSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuoteSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.QuoteSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QuoteSuffix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteSuffix : string with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.QuoteSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public void RefreshSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RefreshSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.RefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshSchema ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshSchema();" />
      <MemberSignature Language="F#" Value="member this.RefreshSchema : unit -&gt; unit" Usage="oracleCommandBuilder.RefreshSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public override string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SchemaSeparator : string with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le caractère à utiliser pour le séparateur entre l'identificateur de schéma et tout autre identificateur.</summary>
        <value>Caractère à utiliser comme séparateur de schéma.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En règle générale, les serveurs de base de données indiquent le schéma d’un identificateur en séparant le nom du schéma de l’identificateur par un caractère. Par exemple, SQL Server utilise un signe deux-points, en créant des identificateurs complets tels que Person : CustomerName, où « Person » est le nom de schéma et « CustomerName » est l’identificateur. Définition de cette propriété permet aux développeurs de modifier ce comportement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="override this.SetRowUpdatingHandler : System.Data.Common.DbDataAdapter -&gt; unit" Usage="oracleCommandBuilder.SetRowUpdatingHandler adapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.UnquoteIdentifier : string -&gt; string" Usage="oracleCommandBuilder.UnquoteIdentifier quotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">Identificateur dont les guillemets incorporés seront supprimés.</param>
        <summary>À partir d'un identificateur entre guillemets, retourne le formulaire correct sans guillemets de cet identificateur, y compris une séquence d'échappement correctement annulée de guillemets incorporés dans l'identificateur.</summary>
        <returns>Identificateur sans guillemets, avec les guillemets incorporés dont la séquence d'échappement a été correctement annulée.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>