<Type Name="OracleBFile" FullName="System.Data.OracleClient.OracleBFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a84f385631cda8a090a8cb60df16389fb8377e6b" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52210645" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleBFile extends System.IO.Stream implements class System.Data.SqlTypes.INullable, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleBFile&#xA;Inherits Stream&#xA;Implements ICloneable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleBFile sealed : System::IO::Stream, ICloneable, System::Data::SqlTypes::INullable" />
  <TypeSignature Language="F#" Value="type OracleBFile = class&#xA;    inherit Stream&#xA;    interface ICloneable&#xA;    interface INullable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Représente un objet <see cref="T:System.Data.OracleClient.OracleBFile" /> managé conçu pour fonctionner avec le type de données <see langword="BFILE" /> Oracle. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oracle `BFILE` type de données est Oracle `LOB` type de données qui contient une référence à des données binaires d’une taille maximale de 4 gigaoctets. Oracle `BFILE` diffère des autres Oracle `LOB` data types, car ses données sont stockées dans un fichier physique dans le système d’exploitation au lieu de sur le serveur. Notez que le `BFILE` type de données fournit un accès en lecture seule aux données. Par conséquent, les méthodes orientées écriture héritent de la <xref:System.IO.Stream> classe ne sont pas pris en charge.  
  
 Autres caractéristiques d’un `BFILE` type de données qui le distinguent un `LOB` type de données :  
  
-   Il contient des données non structurées.  
  
-   Il prend en charge la fragmentation côté serveur.  
  
-   Il utilise une sémantique de copie de référence. Par exemple, si vous effectuez une opération de copie sur un `BFILE`, seule la `BFILE` (qui est une référence au fichier) est copiée. Les données du fichier ne sont pas copiées.  
  
 Le `BFILE` type de données doit être utilisé pour référencer `LOB`s de grande taille et par conséquent, pas pratique de stocker dans la base de données. Une surcharge de communication client et serveur pour utiliser un `BFILE` type de données par rapport à la `LOB` type de données. Il est plus efficace d’accéder à un `BFILE` si vous avez besoin uniquement d’obtenir une petite quantité de données. Il est plus efficace d’accès de base de données résidentes `LOB`si vous avez besoin d’obtenir l’objet entier.  
  
 Chaque valeur non NULL <xref:System.Data.OracleClient.OracleBFile> objet est associé à deux entités qui définissent l’emplacement du fichier physique sous-jacent :  
  
-   Un objet DIRECTORY Oracle, qui est un alias de base de données pour un répertoire du système de fichiers.  
  
-   Le nom du fichier physique sous-jacent, qui se trouve dans le répertoire associé à l'objet DIRECTORY.  
  
 Après un `BFILE` est créé, vous pouvez récupérer son localisateur sous la forme d’un <xref:System.Data.OracleClient.OracleBFile> à l’aide de l’objet le <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> ou <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> méthodes.  
  
 Pour obtenir un <xref:System.Data.OracleClient.OracleBFile> de l’objet, appelez le <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> (méthode).  
  
 Le fichier physique auquel un <xref:System.Data.OracleClient.OracleBFile> objet est associé avec ne doivent pas nécessairement exister jusqu'à ce que vous tentez d’y accéder. Une application peut lier un <xref:System.Data.OracleClient.OracleBFile> vers un fichier qui n’existe pas, créer le fichier physique à l’emplacement prévu et appelez ensuite <xref:System.Data.OracleClient.OracleBFile.Read%2A>.  
  
 Toute tentative d’accéder à un fermé <xref:System.Data.OracleClient.OracleBFile> à l’aide de la <xref:System.Data.OracleClient.OracleBFile.Read%2A> ou <xref:System.Data.OracleClient.OracleBFile.Seek%2A> méthodes rouvre un <xref:System.Data.OracleClient.OracleBFile> diffuser automatiquement.  
  
 L’exemple c# suivant montre comment vous pouvez créer un `BFILE` dans Oracle de table, puis l’extraire sous la forme d’un <xref:System.Data.OracleClient.OracleBFile> objet. L’exemple illustre l’utilisation de la <xref:System.Data.OracleClient.OracleDataReader> objet et le <xref:System.Data.OracleClient.OracleBFile> <xref:System.Data.OracleClient.OracleBFile.Seek%2A> et <xref:System.Data.OracleClient.OracleBFile.Read%2A> méthodes.  
  
 [!code-csharp[DataWorks OracleClient.BFile#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleClient.BFile/CS/source.cs#1)]  
  
 Pour plus d’informations sur la création et à l’aide d’Oracle `BFILE`, consultez la rubrique appropriée dans la documentation Oracle.  
  
> [!NOTE]
>  Le `BeginWrite`, `EndWrite`, et `WriteByte` méthodes héritées de la `System.IO.Stream` class, ne sont pas pris en charge, car le `BFILE` type de données est en lecture seule.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le flux <see langword="BFILE" /> peut être lu.</summary>
        <value>
          <see langword="false" /> si un <see langword="BFILE" /> est fermé ou supprimé ; sinon, <see langword="true" />. Toujours <see langword="true" /> pour <see cref="F:System.Data.OracleClient.OracleBFile.Null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si des opérations de recherche vers l'avant ou vers l'arrière peuvent être effectuées.</summary>
        <value>
          <see langword="false" /> si un <see langword="BFILE" /> est fermé ou supprimé ; sinon, <see langword="true" />. Toujours <see langword="true" /> pour <see cref="F:System.Data.OracleClient.OracleBFile.Null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet prend l'écriture en charge.</summary>
        <value>Retourne toujours <see langword="false" />, car le type de données <see langword="BFILE" /> Oracle est en lecture seule.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleBFile.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une copie de cet objet <see cref="T:System.Data.OracleClient.OracleBFile" /> associé au même fichier physique que l'objet d'origine.</summary>
        <returns>Nouvel objet <see cref="T:System.Data.OracleClient.OracleBFile" /> associé au même fichier physique que l'objet <see langword="OracleBFile" /> d'origine.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les propriétés du nouveau <xref:System.Data.OracleClient.OracleBFile> objet ont initialement les mêmes valeurs que celles de l’objet d’origine. Toutefois, après le <xref:System.Data.OracleClient.OracleBFile.Clone%2A> est terminée, chaque <xref:System.Data.OracleClient.OracleBFile> objet est indépendant de l’autre. Par exemple, remplacer la valeur de la <xref:System.Data.OracleClient.OracleBFile.Position%2A> propriété sur l’original <xref:System.Data.OracleClient.OracleBFile> ne modifie pas la valeur de <xref:System.Data.OracleClient.OracleBFile.Position%2A> sur la copie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection" Usage="System.Data.OracleClient.OracleBFile.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Data.OracleClient.OracleConnection" /> utilisé par cette instance de <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <value>Connexion à une source de données. La valeur par défaut est une valeur null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Copie les données de cet objet <see cref="T:System.Data.OracleClient.OracleBFile" /> vers un <see cref="T:System.Data.OracleClient.OracleLob" /> de destination.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob -&gt; int64" Usage="oracleBFile.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="destination">
          <see cref="T:System.Data.OracleClient.OracleLob" /> de destination.</param>
        <summary>Copie le contenu entier de cet objet <see cref="T:System.Data.OracleClient.OracleBFile" /> au début d'un <see cref="T:System.Data.OracleClient.OracleLob" /> de destination.</summary>
        <returns>Nombre d'octets copiés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les types de données sous-jacente de la source de <xref:System.Data.OracleClient.OracleBFile> et la destination <xref:System.Data.OracleClient.OracleLob> doivent être compatibles. Par exemple, vous ne pouvez pas copier des données binaires vers une destination <xref:System.Data.OracleClient.OracleLob> qui a un type de données caractère.  
  
 Avoir un accès en écriture à la destination <xref:System.Data.OracleClient.OracleLob> pour le <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> opération s’exécute correctement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le <see langword="OracleLob" /> de destination est une référence d'objet null.</exception>
        <exception cref="T:System.InvalidOperationException">La destination est un <see langword="OracleLob" /> null.  
  
- ou - 
La connexion à laquelle <see langword="OracleBFile" /> est associé est fermée.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet <see langword="OracleBFile" /> est fermé ou supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination, int64 destinationOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob, destinationOffset As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination, long destinationOffset);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob * int64 -&gt; int64" Usage="oracleBFile.CopyTo (destination, destinationOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination">
          <see cref="T:System.Data.OracleClient.OracleLob" /> de destination.</param>
        <param name="destinationOffset">L'offset auquel la copie doit être effectuée.</param>
        <summary>Copie le contenu entier de cet objet <see cref="T:System.Data.OracleClient.OracleBFile" /> vers un <see cref="T:System.Data.OracleClient.OracleLob" /> de destination, à l'offset spécifié.</summary>
        <returns>Nombre d'octets copiés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les types de données sous-jacente de la source de <xref:System.Data.OracleClient.OracleBFile> et la destination <xref:System.Data.OracleClient.OracleLob> doivent être compatibles. Par exemple, vous ne pouvez pas copier des données binaires vers une destination <xref:System.Data.OracleClient.OracleLob> qui a un type de données caractère.  
  
 Avoir un accès en écriture à la destination <xref:System.Data.OracleClient.OracleLob> pour le <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> opération s’exécute correctement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le <see langword="OracleLob" /> de destination est une référence d'objet null.</exception>
        <exception cref="T:System.InvalidOperationException">La destination est un <see langword="OracleLob" /> null.  
  
- ou - 
La connexion à laquelle <see langword="OracleBFile" /> est associé est fermée.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet <see langword="OracleBFile" /> est fermé ou supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(int64 sourceOffset, class System.Data.OracleClient.OracleLob destination, int64 destinationOffset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (sourceOffset As Long, destination As OracleLob, destinationOffset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(long sourceOffset, System::Data::OracleClient::OracleLob ^ destination, long destinationOffset, long amount);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : int64 * System.Data.OracleClient.OracleLob * int64 * int64 -&gt; int64" Usage="oracleBFile.CopyTo (sourceOffset, destination, destinationOffset, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOffset" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceOffset">L'offset à partir duquel la copie doit être effectuée.</param>
        <param name="destination">
          <see cref="T:System.Data.OracleClient.OracleLob" /> de destination.</param>
        <param name="destinationOffset">L'offset auquel la copie doit être effectuée.</param>
        <param name="amount">Quantité de données, en octets, à copier.</param>
        <summary>Copie de cet objet <see cref="T:System.Data.OracleClient.OracleBFile" /> vers un <see cref="T:System.Data.OracleClient.OracleLob" /> de destination selon la quantité de données, l'offset source et l'offset de destination spécifiés.</summary>
        <returns>Nombre d'octets copiés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les types de données sous-jacente de la source de <xref:System.Data.OracleClient.OracleBFile> et la destination <xref:System.Data.OracleClient.OracleLob> doivent être compatibles. Par exemple, vous ne pouvez pas copier des données binaires vers une destination <xref:System.Data.OracleClient.OracleLob> qui a un type de données caractère.  
  
 Avoir un accès en écriture à la destination <xref:System.Data.OracleClient.OracleLob> pour le <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> opération s’exécute correctement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur du paramètre amount est inférieure à zéro ou supérieure à 4 gigaoctets.</exception>
        <exception cref="T:System.ArgumentNullException">Le <see langword="OracleLob" /> de destination est une référence d'objet null.</exception>
        <exception cref="T:System.InvalidOperationException">La destination est un <see langword="OracleLob" /> null.  
  
- ou - 
La connexion à laquelle <see langword="OracleBFile" /> est associé est fermée.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet <see langword="OracleBFile" /> est fermé ou supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="DirectoryName">
      <MemberSignature Language="C#" Value="public string DirectoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryName : string" Usage="System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de l'objet DIRECTORY, auquel un objet <see cref="T:System.Data.OracleClient.OracleBFile" /> est associé.</summary>
        <value>Nom de l'objet DIRECTORY.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque valeur non NULL <xref:System.Data.OracleClient.OracleBFile> objet est associé à deux entités qui définissent l’emplacement du fichier physique sous-jacent :  
  
-   Un objet DIRECTORY Oracle, qui est un alias de base de données pour un répertoire du système de fichiers.  
  
-   Le nom du fichier physique sous-jacent, qui se trouve dans le répertoire associé à l'objet DIRECTORY.  
  
 Le <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> propriété retourne le nom de l’objet d’annuaire à partir de la base de données Oracle.  
  
 Pour plus d’informations sur la création et à l’aide d’Oracle `BFILE`, consultez la rubrique appropriée dans la documentation Oracle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Tentative d'appel à <see langword="DirectoryName" /> sur un objet <see langword="OracleBFile" /> fermé ou supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="oracleBFile.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oracleBFile.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public bool FileExists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FileExists" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FileExists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExists : bool" Usage="System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si un fichier physique contenant des données <see langword="BFILE" /> existe dans le système d'exploitation.</summary>
        <value>
          <see langword="true" /> si un fichier physique contenant des données <see langword="BFILE" /> existe ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">L'objet <see cref="T:System.Data.OracleClient.OracleBFile" /> est fermé ou supprimé.</exception>
        <exception cref="T:System.InvalidOperationException">La connexion à laquelle <see langword="BFILE" /> est associé est fermée.</exception>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Data.OracleClient.OracleBFile.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de <see langword="BFILE" /> sans le chemin d'accès.</summary>
        <value>Nom de BFILE.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour <xref:System.Data.OracleClient.OracleBFile.Null>, une chaîne vide est retournée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">L'objet <see cref="T:System.Data.OracleClient.OracleBFile" /> est fermé ou supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="oracleBFile.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Actuellement non pris en charge.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNull : bool" Usage="System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si <see cref="T:System.Data.OracleClient.OracleBFile" /> est un flux <see cref="F:System.Data.OracleClient.OracleBFile.Null" />.</summary>
        <value>
          <see langword="true" /> si <see cref="T:System.Data.OracleClient.OracleBFile" /> est un flux <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Data.OracleClient.OracleBFile.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui retourne la longueur en octets du fichier physique auquel l'objet <see cref="T:System.Data.OracleClient.OracleBFile" /> est associé.</summary>
        <value>Valeur de type Long représentant la longueur du fichier physique en octets.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Des méthodes ont été appelées après que le flux a été fermé ou supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBFile Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleBFile Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBFile.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleBFile " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleBFile ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.Data.OracleClient.OracleBFile" Usage="System.Data.OracleClient.OracleBFile.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente un objet <see cref="T:System.Data.OracleClient.OracleBFile" /> null qui n'est pas lié à un fichier physique.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Null> peut être utile lorsque vous souhaitez effectuer une opération de comparaison sur un <xref:System.Data.OracleClient.OracleBFile> pour déterminer la possibilité de valeur null.  
  
 Toute tentative d’effectuer une opération de lecture sur un <xref:System.Data.OracleClient.OracleBFile.Null> objet réussit, mais ne retournent pas de données. Toute tentative d’effectuer une opération d’écriture sur un <xref:System.Data.OracleClient.OracleBFile.Null> objet génère une exception. En sélectionnant un `BFILE` colonne qui contient une valeur null retourne <xref:System.Data.OracleClient.OracleBFile.Null>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Data.OracleClient.OracleBFile.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la position de lecture actuelle dans le flux <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <value>Position actuelle dans le flux <see cref="T:System.Data.OracleClient.OracleBFile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La recherche au-delà de la longueur du flux de données n’est pas pris en charge.  
  
 Le `Position` propriété n’assure pas le suivi du nombre d’octets à partir de flux de données qui ont été consommés, omis, ou les deux.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Tentative de définition d'une position avec une valeur négative ou supérieure à la longueur du flux.</exception>
        <exception cref="T:System.ObjectDisposedException">Des méthodes ont été appelées après que le flux a été fermé ou supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="oracleBFile.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tableau d'octets. Lorsque cette méthode est retournée, la mémoire tampon contient le tableau d’octets spécifié dont les valeurs comprises entre <paramref name="offset" /> et (<paramref name="offset" /> + <paramref name="count" />) sont remplacées par les octets lus dans la source en cours.</param>
        <param name="offset">Dans <paramref name="buffer" />, décalage d'octet de base zéro auquel commencer le stockage des données lues dans le flux actuel.</param>
        <param name="count">Nombre maximal d'octets à lire dans le flux actuel.</param>
        <summary>Lit une séquence d'octets à partir du flux <see cref="T:System.Data.OracleClient.OracleBFile" /> actuel et avance la position dans le flux du nombre d'octets lus.</summary>
        <returns>Nombre total d'octets lus dans la mémoire tampon. Il peut être inférieur au nombre d'octets demandé si ce nombre d'octets n'est pas actuellement disponible, ou être égal à zéro si la fin du fichier a été atteinte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OracleClient.OracleBFile.Read%2A> méthode lire un maximum de `count` octets à partir du flux et les stocker dans `buffer` commençant à `offset`. La position actuelle dans le flux est avancée par le nombre d’octets lus ; Toutefois, si une exception se produit, la position actuelle dans le flux de données reste inchangée. <xref:System.Data.OracleClient.OracleBFile.Read%2A> Retourne le nombre d’octets lus. La valeur de retour est zéro uniquement si la position est actuellement à la fin du flux. <xref:System.Data.OracleClient.OracleBFile.Read%2A> bloque jusqu'à ce qu’au moins un octet de données peut être lu, dans le cas où aucune donnée n’est disponible. <xref:System.Data.OracleClient.OracleBFile.Read%2A> retourne 0 uniquement lorsque la fin du fichier a été atteinte. <xref:System.Data.OracleClient.OracleBFile.Read%2A> est libre de retourner moins d’octets que demandé même si la fin du flux n’a pas été atteinte.  
  
 Toute tentative d’accéder à un fermé <xref:System.Data.OracleClient.OracleBFile> à l’aide de la <xref:System.Data.OracleClient.OracleBFile.Read%2A> ou <xref:System.Data.OracleClient.OracleBFile.Seek%2A> méthodes rouvre un <xref:System.Data.OracleClient.OracleBFile> diffuser automatiquement.  
  
 L’exemple c# suivant suppose que ce schéma dans une table Oracle :  
  
```  
(col1 number, col2 BFILE)  
```  
  
 L’exemple montre comment utiliser le <xref:System.Data.OracleClient.OracleBFile.Read%2A> et <xref:System.Data.OracleClient.OracleBFile.Seek%2A> méthodes pour accéder à un <xref:System.Data.OracleClient.OracleBFile> objet.  
  
```csharp  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La somme de <paramref name="offset" /> et <paramref name="count" /> est supérieure à la longueur de la mémoire tampon.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> ou <paramref name="count" /> est un nombre négatif.</exception>
        <exception cref="T:System.InvalidOperationException">La connexion à laquelle <see langword="BFILE" /> est associé est fermée.</exception>
        <exception cref="T:System.IO.IOException">Une erreur d'E/S s'est produite.</exception>
        <exception cref="T:System.ObjectDisposedException">Des méthodes ont été appelées après que le flux a été fermé ou supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="oracleBFile.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Offset d'octet par rapport à l'origine. Si <paramref name="offset" /> est négatif, la nouvelle position précède la position spécifiée par <paramref name="origin" /> du nombre d'octets spécifié par <paramref name="offset" />. Si <paramref name="offset" /> est égal à zéro, la nouvelle position est la position spécifiée par <paramref name="origin" />. Si <paramref name="offset" /> est positif, la nouvelle position suit la position spécifiée par <paramref name="origin" /> du nombre d'octets spécifié par <paramref name="offset" />.</param>
        <param name="origin">Valeur de type <see langword="System.IO.SeekOrigin" /> indiquant le point de référence utilisé pour obtenir la nouvelle position.</param>
        <summary>Définit la position dans le flux <see cref="T:System.Data.OracleClient.OracleBFile" /> actuel.</summary>
        <returns>Nouvelle position dans le flux actuel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `offset` est négatif, la nouvelle position doit précéder la position spécifiée par `origin` par le nombre d’octets spécifié par `offset`. Si `offset` est égal à zéro, la nouvelle position est nécessaire à la position spécifiée par `origin`. Si `offset` est un nombre positif, la nouvelle position est nécessaire pour suivre la position spécifiée par `origin` par le nombre d’octets spécifié par `offset`.  
  
 La recherche au-delà de la longueur du flux de données n’est pas pris en charge.  
  
 Toute tentative d’accéder à un fermé <xref:System.Data.OracleClient.OracleBFile> à l’aide de la <xref:System.Data.OracleClient.OracleBFile.Read%2A> ou <xref:System.Data.OracleClient.OracleBFile.Seek%2A> méthodes rouvre un <xref:System.Data.OracleClient.OracleBFile> diffuser automatiquement.  
  
 L’exemple c# suivant suppose que ce schéma dans une table Oracle :  
  
```  
(col1 number, col2 BFILE)  
```  
  
 L’exemple montre comment utiliser le <xref:System.Data.OracleClient.OracleBFile.Read%2A> et <xref:System.Data.OracleClient.OracleBFile.Seek%2A> méthodes pour accéder à un <xref:System.Data.OracleClient.OracleBFile> objet.  
  
```csharp  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Tentative de définition d'une position avec une valeur négative ou supérieure à la longueur du flux.</exception>
        <exception cref="T:System.ObjectDisposedException">Des méthodes ont été appelées après que le flux a été fermé ou supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetFileName">
      <MemberSignature Language="C#" Value="public void SetFileName (string directory, string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFileName(string directory, string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFileName (directory As String, file As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFileName(System::String ^ directory, System::String ^ file);" />
      <MemberSignature Language="F#" Value="member this.SetFileName : string * string -&gt; unit" Usage="oracleBFile.SetFileName (directory, file)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory">Alias de l'objet directory contenant un fichier physique.</param>
        <param name="file">Nom du fichier dans le système d'exploitation.</param>
        <summary>Lie l'objet <see cref="T:System.Data.OracleClient.OracleBFile" /> à un fichier différent dans le système d'exploitation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> opération doit se trouver dans une transaction pour aboutir. Appelant simplement <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> sur un `BFILE` associe le <xref:System.Data.OracleClient.OracleBFile> objet avec un autre fichier, mais ne met ne pas à jour la table Oracle. Pour mettre à jour la table Oracle après avoir appelé <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, vous devez appeler la `Update` méthode de le <xref:System.Data.OracleClient.OracleDataAdapter> puis validez la transaction.  
  
 Une fois que vous récupérez le <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> ou <xref:System.Data.OracleClient.OracleBFile.FileName%2A> propriété, ils sont mis en cache dans le <xref:System.Data.OracleClient.OracleBFile> de l’objet et ne sont pas affectées par les cloné <xref:System.Data.OracleClient.OracleBFile> appels d’objets à <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, ou par toute modification apportée à la `BFILE` dans la base de données. En d’autres termes, il peut ne pas représentent les valeurs réelles de la `BFILE` objet dans le serveur.  
  
 En outre, récupération de des propriétés (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> ou <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) entraîne les deux valeurs de propriété à récupérer à partir du serveur et mis en cache dans le <xref:System.Data.OracleClient.OracleBFile> objet.  
  
 L’exemple c# suivant suppose que ce schéma dans une table Oracle :  
  
```  
(col1 number, col2 BFILE)  
```  
  
 L’exemple montre comment utiliser le <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, <xref:System.Data.OracleClient.OracleBFile.Read%2A> et <xref:System.Data.OracleClient.OracleBFile.Seek%2A> méthodes pour accéder à un <xref:System.Data.OracleClient.OracleBFile> objet.  
  
```csharp  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
        OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
            command.Transaction = connection.BeginTransaction();  
            BFile.SetFileName("TESTDIR", "File1.jpg");  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'opération doit être effectuée dans une transaction.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="oracleBFile.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">Actuellement non pris en charge.</param>
        <summary>Actuellement non pris en charge.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Exception levée quand une méthode appelée n'est pas prise en charge ou pendant une tentative de lecture, recherche ou écriture dans un flux qui ne prend pas en charge la fonctionnalité appelée.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Data.OracleClient.OracleBFile.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un <see cref="T:System.Array" /> de type <see cref="T:System.Byte" /> contenant les données <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <value>
          <see cref="T:System.Array" /> de type <see cref="T:System.Byte" /> contenant les données <see cref="T:System.Data.OracleClient.OracleBFile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OracleClient.OracleBFile.Value%2A> propriété lit l’intégralité de `BFILE` en même temps.  
  
> [!NOTE]
>  Un avantage de l’utilisation `BFILE`s est la capacité à récupérer de grandes quantités de données dans des segments sur le client. Toutefois, lorsque vous utilisez <xref:System.Data.OracleClient.OracleBFile.Value%2A>, vous obtenez toutes les données de la colonne BFILE sous la forme d’un segment contigu unique, ce qui peut augmenter considérablement la charge de l’application.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="oracleBFile.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Actuellement non pris en charge.</param>
        <param name="offset">Actuellement non pris en charge.</param>
        <param name="count">Actuellement non pris en charge.</param>
        <summary>Actuellement non pris en charge.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Exception levée quand une méthode appelée n'est pas prise en charge ou pendant une tentative de lecture, recherche ou écriture dans un flux qui ne prend pas en charge la fonctionnalité appelée.</exception>
      </Docs>
    </Member>
  </Members>
</Type>