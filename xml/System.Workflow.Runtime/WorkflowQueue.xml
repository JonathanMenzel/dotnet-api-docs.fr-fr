<Type Name="WorkflowQueue" FullName="System.Workflow.Runtime.WorkflowQueue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c19e3d2823aa2e939090183587519bc3367e4ce1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37734385" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowQueue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowQueue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowQueue" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowQueue" />
  <TypeSignature Language="F#" Value="type WorkflowQueue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6f2d3-101">Représente une file d'attente du workflow.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f2d3-101">Represents a workflow queue.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="6f2d3-102">Les files d'attente du workflow sont utilisées pour passer des messages entre un hôte ou des services hôtes et les activités d'un workflow.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-102">Workflow queues are used to pass messages between a host or host services and activities in a workflow.</span></span> <span data-ttu-id="6f2d3-103">Toute activité peut créer une <xref:System.Workflow.Runtime.WorkflowQueue> en appelant <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=nameWithType> et un hôte, un service ou une autre activité peut appeler <xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A> pour ajouter un élément à cette <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-103">Any activity can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=nameWithType>, and a host, a service, or another activity can call <xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A> to add an item to that <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="6f2d3-104">Vous pouvez vous abonner à l'événement <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> pour être notifié lorsqu'un élément arrive dans la <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-104">You can subscribe to the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event to be notified when an item arrives on the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="6f2d3-105">Vous pouvez utiliser <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> pour examiner un élément au début de la <xref:System.Workflow.Runtime.WorkflowQueue> et <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> pour supprimer un élément de la <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-105">You can use <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> to examine an item at the beginning of the <xref:System.Workflow.Runtime.WorkflowQueue> and <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> to remove an item from the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="6f2d3-106">Chaque <xref:System.Workflow.Runtime.WorkflowQueue> est associé à un <xref:System.Workflow.Runtime.WorkflowQueuingService> que vous pouvez utiliser pour exécuter d'autres opérations de gestion sur <xref:System.Workflow.Runtime.WorkflowQueue>, telles que la suppression de la file d'attente.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-106">Each <xref:System.Workflow.Runtime.WorkflowQueue> is associated with a <xref:System.Workflow.Runtime.WorkflowQueuingService> that you can use to perform other management operations on the <xref:System.Workflow.Runtime.WorkflowQueue>, such as deleting the queue.</span></span> <span data-ttu-id="6f2d3-107"><xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A> expose le <xref:System.Workflow.Runtime.WorkflowQueuingService> associé à ce <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-107"><xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A> exposes the <xref:System.Workflow.Runtime.WorkflowQueuingService> associated with this <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f2d3-108">L'exemple de code suivant présente la création d'une <xref:System.Workflow.Runtime.WorkflowQueue> en appelant la méthode <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-108">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6f2d3-109">Il utilise également la propriété <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> pour déterminer si tous les messages existent dans la file d'attente actuelle.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-109">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="6f2d3-110">Enfin, le code utilise la méthode <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> pour supprimer et renvoyer le premier objet dans la file d'attente.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-110">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="6f2d3-111">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel File Watcher Activity (SDK) et provient du fichier FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-111">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="6f2d3-112">Pour plus d’informations, consultez [activité de l’Observateur de système de fichier](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="6f2d3-112">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Workflow.Runtime.WorkflowQueue.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f2d3-113">Obtient le nombre d'éléments contenus dans <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-113">Gets the number of items contained in the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6f2d3-114">Nombre d'éléments situés dans la file d'attente du workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-114">The number of items in the workflow queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6f2d3-115">L'exemple de code suivant présente la création d'une <xref:System.Workflow.Runtime.WorkflowQueue> en appelant la méthode <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-115">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6f2d3-116">Il utilise également la propriété <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> pour déterminer si tous les messages existent dans la file d'attente actuelle.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-116">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="6f2d3-117">Enfin, le code utilise la méthode <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> pour supprimer et renvoyer le premier objet dans la file d'attente.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-117">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="6f2d3-118">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel File Watcher Activity (SDK) et provient du fichier FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-118">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="6f2d3-119">Pour plus d’informations, consultez [activité de l’Observateur de système de fichier](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="6f2d3-119">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public object Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Dequeue" />
      <MemberSignature Language="VB.NET" Value="Public Function Dequeue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dequeue();" />
      <MemberSignature Language="F#" Value="member this.Dequeue : unit -&gt; obj" Usage="workflowQueue.Dequeue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f2d3-120">Supprime et renvoie l'objet au début de la <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-120">Removes and returns the object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f2d3-121">Objet supprimé du début de la <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-121">The object that is removed from the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f2d3-122">Vous pouvez vérifier le <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> pour déterminer si la <xref:System.Workflow.Runtime.WorkflowQueue> est vide avant d'appeler <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> ou vous pouvez intercepter la <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-122">You can check <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> to determine whether the <xref:System.Workflow.Runtime.WorkflowQueue> is empty before you call <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, or you can catch the <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f2d3-123">L'exemple de code suivant présente la création d'une <xref:System.Workflow.Runtime.WorkflowQueue> en appelant la méthode <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-123">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6f2d3-124">Il utilise également la propriété <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> pour déterminer si tous les messages existent dans la file d'attente actuelle.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-124">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="6f2d3-125">Enfin, le code utilise la méthode <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> pour supprimer et renvoyer le premier objet dans la file d'attente.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-125">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="6f2d3-126">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel File Watcher Activity (SDK) et provient du fichier FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-126">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="6f2d3-127">Pour plus d’informations, consultez [activité de l’Observateur de système de fichier](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="6f2d3-127">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6f2d3-128">La <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-128">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Workflow.Runtime.WorkflowQueue.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f2d3-129">Obtient ou définit une valeur spécifiant si la <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> est activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-129">Gets or sets a value that specifies whether the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6f2d3-130">
            <see langword="true" />, si la <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> est activée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-130">
              <see langword="true" /> if the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is enabled; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public void Enqueue (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Enqueue(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Enqueue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Enqueue (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Enqueue(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.Enqueue : obj -&gt; unit" Usage="workflowQueue.Enqueue item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="6f2d3-131">Objet à ajouter à <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-131">The object to add to the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f2d3-132">Ajoute un objet à la fin de la <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-132">Adds an object to the end of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6f2d3-133">La <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> n'est pas activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-133">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is not enabled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public object Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; obj" Usage="workflowQueue.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f2d3-134">Renvoie l'objet situé au début de la <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> sans le supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-134">Returns the object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f2d3-135">Objet situé au début de la <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-135">The object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f2d3-136">Cette méthode est analogue à la méthode <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, mais <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> ne modifie pas la <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-136">This method is similar to the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method, but <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> does not modify the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="6f2d3-137">Vous pouvez vérifier le <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> pour déterminer si la <xref:System.Workflow.Runtime.WorkflowQueue> est vide avant d'appeler <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> ou vous pouvez intercepter la <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-137">You can check <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> to determine whether the <xref:System.Workflow.Runtime.WorkflowQueue> is empty before you call <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, or you can catch the <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6f2d3-138">La <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-138">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QueueItemArrived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemArrived" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueueItemArrived As EventHandler(Of QueueEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ QueueItemArrived;" />
      <MemberSignature Language="F#" Value="member this.QueueItemArrived : EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " Usage="member this.QueueItemArrived : System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f2d3-139">Se produit lorsqu'un élément est remis à cette <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-139">Occurs when an item is delivered on this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f2d3-140">Cet événement est utilisé uniquement à des fins de traitement devant se produire de façon synchrone avec la remise d’événement à l’instance du workflow.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-140">This event is only used for processing that must occur synchronously with event delivery to the workflow instance.</span></span> <span data-ttu-id="6f2d3-141">Le gestionnaire d'événements peut ainsi s'exécuter sur un thread hors du workflow afin que l'accès à tout objet de workflow partagé, par exemple, tout <xref:System.Workflow.ComponentModel.DependencyObject>, soit protégé.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-141">The event handler may execute on a non-workflow thread so access to any shared workflow object, for example, any <xref:System.Workflow.ComponentModel.DependencyObject>, must be protected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueItemAvailable">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemAvailable;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemAvailable" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueueItemAvailable As EventHandler(Of QueueEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ QueueItemAvailable;" />
      <MemberSignature Language="F#" Value="member this.QueueItemAvailable : EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " Usage="member this.QueueItemAvailable : System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f2d3-142">Se produit lorsqu'un élément est disponible dans cette <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-142">Occurs when an item is available on this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f2d3-143">L'événement <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> est déclenché de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-143">The <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event is raised in an asynchronous manner.</span></span> <span data-ttu-id="6f2d3-144">L'expéditeur de l'événement <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> sera le <xref:System.Workflow.ComponentModel.ActivityExecutionContext> de la <xref:System.Workflow.ComponentModel.Activity> souscrivant.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-144">The sender for the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event will be the <xref:System.Workflow.ComponentModel.ActivityExecutionContext> of the subscribing <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueName">
      <MemberSignature Language="C#" Value="public IComparable QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.QueueName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueueName As IComparable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IComparable ^ QueueName { IComparable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueueName : IComparable" Usage="System.Workflow.Runtime.WorkflowQueue.QueueName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f2d3-145">Obtient le nom de la file d'attente du workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-145">Gets the name of the workflow queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6f2d3-146">Nom du <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-146">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f2d3-147">Le nom de la file d'attente du workflow est défini par la méthode <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-147">The name of the workflow queue is set by the <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuingService">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueuingService QueuingService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowQueuingService QueuingService" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.QueuingService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueuingService As WorkflowQueuingService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowQueuingService ^ QueuingService { System::Workflow::Runtime::WorkflowQueuingService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueuingService : System.Workflow.Runtime.WorkflowQueuingService" Usage="System.Workflow.Runtime.WorkflowQueue.QueuingService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueuingService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6f2d3-148">Obtient le service de mise en file d'attente associé à cette <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-148">Gets the queuing service associated with this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6f2d3-149">
            <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" /> représentant le service de mise en file d'attente associée à cette <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-149">A <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" /> that represents the queuing service associated with this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterForQueueItemArrived">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemArrived (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemArrived(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemArrived (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemArrived(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.RegisterForQueueItemArrived : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.RegisterForQueueItemArrived eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="6f2d3-150">Abonné à <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> implémentant l'interface <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-150">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f2d3-151">Inscrit un abonné à l'événement <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-151">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForQueueItemAvailable">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6f2d3-152">Inscrit un abonné à l'événement <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-152">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f2d3-153">Vous pouvez utiliser les méthodes <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> surchargées pour inscrire un abonné pour l'événement <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-153">You can use the overloaded <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> methods to register a subscriber for the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event.</span></span> <span data-ttu-id="6f2d3-154">L'événement <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> est utilisé pour notifier les abonnés qu'un élément a été remis (de façon asynchrone) dans cette <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-154">The <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event is used to notify subscribers that an item has been delivered (in an asynchronous manner) to this <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.RegisterForQueueItemAvailable : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.RegisterForQueueItemAvailable eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="6f2d3-155">Abonné à <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> implémentant l'interface <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-155">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f2d3-156">Inscrit un abonné à l'événement <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-156">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6f2d3-157">L'exemple de code suivant présente la création d'une <xref:System.Workflow.Runtime.WorkflowQueue> en appelant la méthode <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-157">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6f2d3-158">Il utilise également le <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> pour enregistrer l'écouteur spécifié.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-158">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> to register the specified listener.</span></span>  
  
 <span data-ttu-id="6f2d3-159">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel File Watcher Activity (SDK) et provient du fichier FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-159">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="6f2d3-160">Pour plus d’informations, consultez [activité de l’Observateur de système de fichier](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="6f2d3-160">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#225](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#225)]
 [!code-vb[WF_Samples#225](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#225)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f2d3-161">
            <paramref name="eventListener" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-161">
              <paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener, string subscriberQualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener, string subscriberQualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs), subscriberQualifiedName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener, System::String ^ subscriberQualifiedName);" />
      <MemberSignature Language="F#" Value="member this.RegisterForQueueItemAvailable : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; * string -&gt; unit" Usage="workflowQueue.RegisterForQueueItemAvailable (eventListener, subscriberQualifiedName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
        <Parameter Name="subscriberQualifiedName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="6f2d3-162">Abonné à <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> implémentant l'interface <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-162">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <param name="subscriberQualifiedName">
          <span data-ttu-id="6f2d3-163">
            <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> de l'activité s'abonnant à l'événement <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> ou référence Null (<see langword="Nothing" /> en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-163">The <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> of the activity that is subscribing to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event or a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f2d3-164">Inscrit un abonné à l'événement <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-164">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f2d3-165">Si le nom qualifié de l'activité s'abonnant est fourni par `subscriberQualifiedName`, il est renvoyé dans <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> de <xref:System.Workflow.Runtime.WorkflowQueueInfo> associé à cette file d'attente lorsque <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=nameWithType> est appelé.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-165">If the qualified name of the subscribing activity is supplied by `subscriberQualifiedName`, it is returned in <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> of <xref:System.Workflow.Runtime.WorkflowQueueInfo> associated with this queue when <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=nameWithType> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f2d3-166">
            <paramref name="eventListener" /> est une référence Null (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-166">
              <paramref name="eventListener" /> is a null reference (<see langword="Nothing" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForQueueItemArrived">
      <MemberSignature Language="C#" Value="public void UnregisterForQueueItemArrived (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterForQueueItemArrived(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterForQueueItemArrived (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterForQueueItemArrived(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.UnregisterForQueueItemArrived : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.UnregisterForQueueItemArrived eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="6f2d3-167">Abonné à <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> implémentant l'interface <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-167">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f2d3-168">Annule l'inscription d'un abonné à l'événement <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-168">Unregisters a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f2d3-169">Cette méthode est exclusivement réservée à un usage interne.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-169">This method is reserved for internal use only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f2d3-170">
            <paramref name="eventListener" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-170">
              <paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void UnregisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.UnregisterForQueueItemAvailable : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.UnregisterForQueueItemAvailable eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="6f2d3-171">Abonné à <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> implémentant l'interface <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-171">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f2d3-172">Annule l'inscription d'un abonné à l'événement <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-172">Unregisters a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6f2d3-173">L'exemple de code suivant présente la création d'une <xref:System.Workflow.Runtime.WorkflowQueue> en appelant la méthode <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-173">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6f2d3-174">Il utilise également <xref:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable%2A> pour annuler l'abonnement de l'écouteur spécifié.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-174">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable%2A> to unregister the specified listener.</span></span>  
  
 <span data-ttu-id="6f2d3-175">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel File Watcher Activity (SDK) et provient du fichier FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="6f2d3-175">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="6f2d3-176">Pour plus d’informations, consultez [activité de l’Observateur de système de fichier](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="6f2d3-176">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#226](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#226)]
 [!code-vb[WF_Samples#226](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#226)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f2d3-177">
            <paramref name="eventListener" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f2d3-177">
              <paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>