<Type Name="IPendingWork" FullName="System.Workflow.Runtime.IPendingWork">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="21bad8fa34f94f0b49becc96a7261028f63c4298" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39786687" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPendingWork" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPendingWork" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.IPendingWork" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPendingWork" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPendingWork" />
  <TypeSignature Language="F#" Value="type IPendingWork = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fe6c4-101">Fournit des méthodes permettant de participer à un travail en traitement par lots.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe6c4-101">Provides methods to participate in a work batch.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="fe6c4-102">L'interface <xref:System.Workflow.Runtime.IPendingWork> est fournie pour les services souhaitant participer au mécanisme de traitement par lots du moteur d'exécution de workflow.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-102">The <xref:System.Workflow.Runtime.IPendingWork> interface is provided for services that want to participate in the workflow runtime engine batching mechanism.</span></span> <span data-ttu-id="fe6c4-103">Ce mécanisme de traitement par lots est particulièrement utile pour les services qui utilisent un magasin durable.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-103">The batching mechanism is especially useful for services that use a durable store.</span></span> <span data-ttu-id="fe6c4-104">Dans ces situations, il est souvent important de maintenir la cohérence entre le magasin durable utilisé par le service et l'état interne du moteur d'exécution de workflow.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-104">It is often important in these cases to maintain consistency between the durable store used by the service and the internal state of the workflow runtime engine.</span></span>  
  
 <span data-ttu-id="fe6c4-105">Si vous souhaitez que votre service participe au traitement par lots de la transaction de workflow fournie par la <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, vous devez implémenter les méthodes définies par l'interface <xref:System.Workflow.Runtime.IPendingWork>.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-105">If you want your service to participate in workflow transaction batching provided by the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, you must implement the methods defined by the <xref:System.Workflow.Runtime.IPendingWork> interface.</span></span> <span data-ttu-id="fe6c4-106">Le moteur d'exécution de workflow doit appeler la méthode <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> à votre service pour valider le lot.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-106">The workflow runtime engine will call the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method on your service to commit the batch.</span></span>  
  
 <span data-ttu-id="fe6c4-107">La classe <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> implémente l'interface <xref:System.Workflow.Runtime.IPendingWork>.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-107">The <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class implements the <xref:System.Workflow.Runtime.IPendingWork> interface.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Transaction transaction, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Transaction ^ transaction, System::Collections::ICollection ^ items);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Transaction * System.Collections.ICollection -&gt; unit" Usage="iPendingWork.Commit (transaction, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <span data-ttu-id="fe6c4-108">
            <see cref="T:System.Transactions.Transaction" /> associée au travail en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe6c4-108">The <see cref="T:System.Transactions.Transaction" /> associated with the pending work.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="fe6c4-109">Éléments de travail à valider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe6c4-109">The work items to be committed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe6c4-110">Valide la liste d'éléments de travail en utilisant l'objet <see cref="T:System.Transactions.Transaction" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe6c4-110">Commits the list of work items by using the specified <see cref="T:System.Transactions.Transaction" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe6c4-111">Le moteur d'exécution de workflow appelle la méthode <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> lorsque sa syntaxe ordonne que le travail en attente dans le travail en traitement par lots soit validé.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-111">The workflow runtime engine calls the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method when its semantics dictate that the pending work in the work batch should be committed.</span></span> <span data-ttu-id="fe6c4-112">Lorsqu'il atteint un point de validation, le moteur d'exécution de workflow appelle la méthode <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> sur chaque objet <xref:System.Workflow.Runtime.IPendingWork> de travail en traitement par lots ; le moteur d'exécution de workflow passe la méthode <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> que la collection d'éléments a associée à cet objet <xref:System.Workflow.Runtime.IPendingWork>.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-112">When it reaches a commit point, the workflow runtime engine calls the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method on each <xref:System.Workflow.Runtime.IPendingWork> object in its work batch; the workflow runtime engine passes the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method the collection of items associated with that <xref:System.Workflow.Runtime.IPendingWork> object.</span></span> <span data-ttu-id="fe6c4-113">Soit tout le travail d'un lot réussit, soit aucun.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-113">Either all of the work in a batch succeeds or none of it succeeds.</span></span> <span data-ttu-id="fe6c4-114">Vous devez lever une exception si aucun des éléments de travail passé à la méthode <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> dans votre implémentation ne peut être validé.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-114">You should throw an exception if any of the work items passed to the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method in your implementation cannot be committed.</span></span> <span data-ttu-id="fe6c4-115">Selon votre implémentation, vous pouvez exécuter la restauration de votre méthode <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> si elle ne peut pas valider ses éléments de travail.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-115">Depending on your implementation, you may want to perform some rollback in your <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method if it cannot commit its work items.</span></span> <span data-ttu-id="fe6c4-116">Si le moteur d'exécution de workflow valide avec succès toutes les tâches du travail en traitement par lots, il appelle <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> avec le paramètre `succeeded` défini à `true` ; sinon, il appelle <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> avec `succeeded` défini à `false`.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-116">If the workflow runtime engine successfully commits all of the work in the work batch, it calls <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> with the `succeeded` parameter set to `true`; otherwise, it calls <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> with `succeeded` set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (bool succeeded, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(bool succeeded, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete (succeeded As Boolean, items As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete(bool succeeded, System::Collections::ICollection ^ items);" />
      <MemberSignature Language="F#" Value="abstract member Complete : bool * System.Collections.ICollection -&gt; unit" Usage="iPendingWork.Complete (succeeded, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="succeeded" Type="System.Boolean" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="succeeded">
          <span data-ttu-id="fe6c4-117">
            <see langword="true" /> si la transaction est réussie ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe6c4-117">
              <see langword="true" /> if the transaction succeeded; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="fe6c4-118">
            <see cref="T:System.Collections.ICollection" /> d'éléments de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe6c4-118">An <see cref="T:System.Collections.ICollection" /> of work items.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe6c4-119">Appelé lorsque la transaction est effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe6c4-119">Called when the transaction has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe6c4-120">Si `succeeded` est `true`, la transaction est réussie et toutes les ressources utilisées par le travail en traitement par lots peuvent être diffusées.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-120">If `succeeded` is `true`, the transaction succeeded and any resources used by the work batch may be released.</span></span> <span data-ttu-id="fe6c4-121">Si `succeeded` est `false`, la transaction a échoué.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-121">If `succeeded` is `false`, the transaction failed.</span></span> <span data-ttu-id="fe6c4-122">Selon votre implémentation, vous pouvez exécuter la restauration des tâches du travail en traitement par lots lorsque la transaction échoue.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-122">Depending on your implementation, you can perform any appropriate roll back on the work in the work batch when the transaction fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustCommit">
      <MemberSignature Language="C#" Value="public bool MustCommit (System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MustCommit(class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function MustCommit (items As ICollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MustCommit(System::Collections::ICollection ^ items);" />
      <MemberSignature Language="F#" Value="abstract member MustCommit : System.Collections.ICollection -&gt; bool" Usage="iPendingWork.MustCommit items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="fe6c4-123">
            <see cref="T:System.Collections.ICollection" /> d'éléments de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe6c4-123">An <see cref="T:System.Collections.ICollection" /> of work items.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe6c4-124">Autorise les éléments du travail en traitement par lots à indiquer s’ils doivent valider immédiatement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe6c4-124">Allows the items in the work batch to assert whether they must commit immediately.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe6c4-125">
            <see langword="true" /> si tout élément de la collection doit être validé immédiatement ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe6c4-125">
              <see langword="true" /> if any item in the collection must be committed immediately; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe6c4-126">Si <xref:System.Workflow.Runtime.IPendingWork.MustCommit%2A> renvoie `false`, le travail peut être remis à un futur point de validation.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-126">If <xref:System.Workflow.Runtime.IPendingWork.MustCommit%2A> returns `false`, the work can be postponed to a future commit point.</span></span> <span data-ttu-id="fe6c4-127">Si l'un des éléments doit être validé, renvoyez `true` et tous les éléments seront validés au point de validation actuel.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-127">If any of the items must be committed, then return `true` and all items will be committed at the current commit point.</span></span> <span data-ttu-id="fe6c4-128">Pour une discussion concernant les possibilités de points de validation, consultez la classe <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>.</span><span class="sxs-lookup"><span data-stu-id="fe6c4-128">For a discussion about possible commit points, see the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>