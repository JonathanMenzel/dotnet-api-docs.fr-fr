<Type Name="WorkflowInstance" FullName="System.Workflow.Runtime.WorkflowInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d6a178da4ca5a70d9c3b8a15f0604cf360da09c" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48594419" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowInstance" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowInstance sealed" />
  <TypeSignature Language="F#" Value="type WorkflowInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="62358-101">Représente une instance de workflow.</span>
      <span class="sxs-lookup">
        <span data-stu-id="62358-101">Represents a workflow instance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="62358-102">La classe <xref:System.Workflow.Runtime.WorkflowInstance> expose les méthodes et propriétés qui peuvent être utilisées pour contrôler l'exécution d'une instance de workflow ; il s'agit essentiellement d'un proxy de l'instance de workflow réelle utilisée par le moteur d'exécution de workflow.</span><span class="sxs-lookup"><span data-stu-id="62358-102">The <xref:System.Workflow.Runtime.WorkflowInstance> class exposes methods and properties that can be used to control the execution of a workflow instance; it is essentially a proxy to the actual workflow instance used by the workflow runtime engine.</span></span> <span data-ttu-id="62358-103">Un hôte ou un service peut envoyer une instruction au moteur d'exécution de workflow afin qu'il exécute des actions sur une instance de workflow en appelant les méthodes correspondantes contenues dans la classe <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="62358-103">A host or a service can instruct the workflow runtime engine to perform actions on a workflow instance by calling the appropriate methods that are contained in the <xref:System.Workflow.Runtime.WorkflowInstance> class.</span></span>  <span data-ttu-id="62358-104">Si l'action demandée n'est pas valide, par exemple, si l'hôte appelle <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> dans une instance de workflow déjà exécutée, le moteur d'exécution de workflow déclenchera une exception appropriée.</span><span class="sxs-lookup"><span data-stu-id="62358-104">If the requested action is not valid, for example, if the host calls <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> on a workflow instance that has already completed, the workflow runtime engine will raise an appropriate exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62358-105">Si une instance de workflow ne répond pas du fait qu'un appel sur l'application hôte ne renvoie rien, la seule méthode pour récupérer l'instance est de redémarrer l'exécution.</span><span class="sxs-lookup"><span data-stu-id="62358-105">If a workflow instance becomes unresponsive because a call on the host application does not return, the only way to recover the instance is to restart the runtime.</span></span> <span data-ttu-id="62358-106">Toutefois, si l'instance a été déchargée de force, interrompue ou suspendue, elle peut être poursuivie en appelant la méthode <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="62358-106">However, if the instance has been forcibly unloaded, aborted, or suspended, it can be continued by calling the <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-107">L'exemple de code suivant présente la création et le démarrage d'une <xref:System.Workflow.Runtime.WorkflowInstance> dans un hôte du workflow.</span><span class="sxs-lookup"><span data-stu-id="62358-107">The following code example demonstrates how you can create and start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host.</span></span> <span data-ttu-id="62358-108">Le code crée une instance du <xref:System.Workflow.Runtime.WorkflowRuntime>, ajoute des services à l'exécution, puis présente la méthode recommandée pour créer un objet <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="62358-108">The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="62358-109">Le code initialise <xref:System.Workflow.Runtime.WorkflowInstance> en appelant la méthode <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> et lui passant le type créé précédemment.</span><span class="sxs-lookup"><span data-stu-id="62358-109">The code initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it.</span></span> <span data-ttu-id="62358-110">La <xref:System.Workflow.Runtime.WorkflowInstance> est démarrée avec l'appel de la méthode <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="62358-110">The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.</span></span>  
  
 <span data-ttu-id="62358-111">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel Canceling a Workflow (SDK) et provient du fichier Program.cs.</span><span class="sxs-lookup"><span data-stu-id="62358-111">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="62358-112">Pour plus d’informations, consultez [annulation d’un Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="62358-112">For more information, see [Canceling a Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="62358-113">Ce type est thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="62358-113">This type is thread safe.</span>
      </span>
    </threadsafe>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)">
      <span data-ttu-id="62358-114">Annulation d’un flux de travail</span>
      <span class="sxs-lookup">
        <span data-stu-id="62358-114">Canceling a Workflow</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="workflowInstance.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62358-115">Abandonne l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-115">Aborts the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-116">L’instance de workflow est abandonnée de façon synchrone ; autrement dit, la méthode est renvoyée après que l’instance de workflow ait été abandonnée.</span><span class="sxs-lookup"><span data-stu-id="62358-116">The workflow instance is aborted in a synchronous manner; that is, the method returns after the workflow instance has been aborted.</span></span> <span data-ttu-id="62358-117">Le moteur d'exécution de workflow invalide l'instance de workflow en mémoire et efface le <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span><span class="sxs-lookup"><span data-stu-id="62358-117">The workflow runtime engine invalidates the workflow instance in memory and clears the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span> <span data-ttu-id="62358-118">Si un service de persistance a été utilisé par votre instance de workflow, tout le travail exécuté depuis le dernier point de persistance est supprimé.</span><span class="sxs-lookup"><span data-stu-id="62358-118">If a persistence service was used by your workflow instance, all work performed since the last persistence point is thrown away.</span></span> <span data-ttu-id="62358-119">Après avoir abandonné l'instance de workflow, le moteur d'exécution de workflow déclenche l'événement <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted>.</span><span class="sxs-lookup"><span data-stu-id="62358-119">After it aborts the workflow instance, the workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> event.</span></span> <span data-ttu-id="62358-120">Vous pouvez appeler <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> pour recharger l'instance de workflow et démarrer à partir de son dernier point de persistance.</span><span class="sxs-lookup"><span data-stu-id="62358-120">You can call <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> to reload the workflow instance and start from its last persistence point.</span></span>  
  
 <span data-ttu-id="62358-121">`Abort` est différent de <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> dans le sens que `Abort` efface simplement l'instance de workflow en mémoire et peut être redémarré à partir du dernier point de persistance. Terminate efface l'instance de workflow en mémoire et informe le service de persistance que celle-ci a été effacée de la mémoire.</span><span class="sxs-lookup"><span data-stu-id="62358-121">`Abort` is different from <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> in that while `Abort` simply clears the in-memory workflow instance and can be restarted from the last persistence point, Terminate clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</span></span> <span data-ttu-id="62358-122">Pour <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, cela signifie que toutes les informations sur l'état de cette instance de workflow sont supprimées de la base de données à la fin.</span><span class="sxs-lookup"><span data-stu-id="62358-122">For the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, this means that all state information for that workflow instance is deleted from the database upon termination.</span></span> <span data-ttu-id="62358-123">Vous ne serez pas en mesure de recharger l'instance de workflow à partir d'un point de persistance précédemment stocké.</span><span class="sxs-lookup"><span data-stu-id="62358-123">You will not be able to reload the workflow instance from a previously stored persistence point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-124">L'exemple suivant montre l'appel à Abort d'une instance de workflow de type Workflow1.</span><span class="sxs-lookup"><span data-stu-id="62358-124">The following example demonstrates calling Abort on a workflow instance of type Workflow1.</span></span>  
  
 [!code-csharp[WF_Samples#13](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#13)]
 [!code-vb[WF_Samples#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62358-125">Le moteur d'exécution de workflow ne s'exécute pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-125">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyWorkflowChanges">
      <MemberSignature Language="C#" Value="public void ApplyWorkflowChanges (System.Workflow.ComponentModel.WorkflowChanges workflowChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyWorkflowChanges(class System.Workflow.ComponentModel.WorkflowChanges workflowChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyWorkflowChanges(System::Workflow::ComponentModel::WorkflowChanges ^ workflowChanges);" />
      <MemberSignature Language="F#" Value="member this.ApplyWorkflowChanges : System.Workflow.ComponentModel.WorkflowChanges -&gt; unit" Usage="workflowInstance.ApplyWorkflowChanges workflowChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowChanges" Type="System.Workflow.ComponentModel.WorkflowChanges" />
      </Parameters>
      <Docs>
        <param name="workflowChanges">
          <span data-ttu-id="62358-126">
            <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> spécifiant les mises à jour dynamiques de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-126">A <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> specifying dynamic updates for the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62358-127">Applique des modifications à l'instance de workflow spécifiée par l'objet <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-127">Applies changes to the workflow instance specified by the <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-128">Si l'instance de workflow n'est pas déjà suspendue, le moteur d'exécution de workflow interrompt temporairement l'instance avant d'appliquer les modifications.</span><span class="sxs-lookup"><span data-stu-id="62358-128">If the workflow instance is not already suspended, the workflow runtime engine temporarily suspends the instance before applying the changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-129">L'exemple suivant présente l'appel ApplyWorkflowChanges à un objet <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="62358-129">The following example demonstrates calling ApplyWorkflowChanges to a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  <span data-ttu-id="62358-130">Cet exemple est issu de l'exemple du Kit de développement logiciel Ordering State Machine (SDK) et provient du fichier Mainform.cs.</span><span class="sxs-lookup"><span data-stu-id="62358-130">This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</span></span>  <span data-ttu-id="62358-131">Pour plus d’informations, consultez le [Ordering State Machine, exemple](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="62358-131">For more information, see the [Ordering State Machine Sample](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[WF_Samples#89](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#89)]
 [!code-vb[WF_Samples#89](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#89)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62358-132">Le moteur d'exécution de workflow ne s'exécute pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-132">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnqueueItem">
      <MemberSignature Language="C#" Value="public void EnqueueItem (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnqueueItem(class System.IComparable queueName, object item, class System.Workflow.Runtime.IPendingWork pendingWork, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnqueueItem (queueName As IComparable, item As Object, pendingWork As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnqueueItem(IComparable ^ queueName, System::Object ^ item, System::Workflow::Runtime::IPendingWork ^ pendingWork, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.EnqueueItem : IComparable * obj * System.Workflow.Runtime.IPendingWork * obj -&gt; unit" Usage="workflowInstance.EnqueueItem (queueName, item, pendingWork, workItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="pendingWork" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queueName">
          <span data-ttu-id="62358-133">Nom du <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-133">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="62358-134">Objet à mettre en file d'attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-134">The object to enqueue.</span>
          </span>
        </param>
        <param name="pendingWork">
          <span data-ttu-id="62358-135">
            <see cref="T:System.Workflow.Runtime.IPendingWork" /> autorisant l’expéditeur à être notifié lorsque <c>item</c> est remis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-135">An <see cref="T:System.Workflow.Runtime.IPendingWork" /> that allows the sender to be notified when <c>item</c> is delivered.</span>
          </span>
        </param>
        <param name="workItem">
          <span data-ttu-id="62358-136">Objet à passer aux méthodes <see cref="T:System.Workflow.Runtime.IPendingWork" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-136">An object to be passed to the <see cref="T:System.Workflow.Runtime.IPendingWork" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62358-137">Publie de façon synchrone un message dans la file d’attente de workflow spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-137">Posts a message to the specified workflow queue synchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-138">Envoie l'`item` dans la <xref:System.Workflow.Runtime.WorkflowQueue> spécifiée.</span><span class="sxs-lookup"><span data-stu-id="62358-138">Sends the `item` to the specified <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="62358-139">Si vous souhaitez être notifié lorsque le message est remis, vous pouvez implémenter <xref:System.Workflow.Runtime.IPendingWork> dans votre service et passer un `workItem` et un objet <xref:System.Workflow.Runtime.IPendingWork> à <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="62358-139">If you want to be notified when the message is delivered, you can implement <xref:System.Workflow.Runtime.IPendingWork> in your service and pass a `workItem` and an <xref:System.Workflow.Runtime.IPendingWork> object to <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="62358-140">Si vous ne souhaitez pas telle notification, vous pouvez passer une référence Null (`Nothing` en Visual Basic) pour `pendingWork` et `workItem`.</span><span class="sxs-lookup"><span data-stu-id="62358-140">If you do not want such notification, you can pass a null reference (`Nothing` in Visual Basic) for `pendingWork` and `workItem`.</span></span>  
  
 <span data-ttu-id="62358-141">Lorsque vous utilisez cette méthode avec un workflow de machine d’état, vous pouvez obtenir une exception avec le message « file d’attente '{0}' n’est pas activé. »</span><span class="sxs-lookup"><span data-stu-id="62358-141">When using this method with a state machine workflow, you might get an exception with the message "Queue '{0}' is not enabled."</span></span> <span data-ttu-id="62358-142">Cela arrive lorsque l'état actuel de l'ordinateur d'état ne sait pas comment gérer un événement spécifique.</span><span class="sxs-lookup"><span data-stu-id="62358-142">This happens when the current state of the state machine does not know how to handle a specific event.</span></span> <span data-ttu-id="62358-143">Par exemple, lorsqu’un état autre que l’état actuel contient la <xref:System.Workflow.Activities.EventDrivenActivity> qui contient le <xref:System.Workflow.Activities.HandleExternalEventActivity> qui est représenté par la file d’attente '{0}'.</span><span class="sxs-lookup"><span data-stu-id="62358-143">For example, when some state other than the current state contains the <xref:System.Workflow.Activities.EventDrivenActivity> that contains the <xref:System.Workflow.Activities.HandleExternalEventActivity> that is represented by the queue '{0}'.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62358-144">Il n'est pas garanti que les messages soient reçus par l'instance de workflow dans l'ordre de leur envoi.</span><span class="sxs-lookup"><span data-stu-id="62358-144">Messages are not guaranteed to be received by the workflow instance in the order that they were sent.</span></span> <span data-ttu-id="62358-145">Par exemple, si la réception d'un message dans une file d'attente existante (file d'attente A) entraîne la création d'une autre file d'attente (file d'attente B) par un workflow écoutant ensuite un message envoyé après le premier, il est possible que le deuxième message arrive en premier et ne soit pas reçu du fait que sa file d'attente n'a pas encore été créée.</span><span class="sxs-lookup"><span data-stu-id="62358-145">For example, if receiving a message in an existing queue (Queue A) causes a workflow to create another queue (Queue B), which then listens for another message sent after the first message, it is possible that the second message will arrive first, and will not be received due to its queue not being created yet.</span></span> <span data-ttu-id="62358-146">Pour empêcher ce problème, le deuxième message ne doit pas être envoyé tant que la présence de la deuxième file d'attente n'a pas été vérifiée (à l'aide de <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.)</span><span class="sxs-lookup"><span data-stu-id="62358-146">To prevent this issue, the second message should not be sent until the presence of the second queue is verified (using <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-147">L'exemple de code suivant illustre l'utilisation de <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="62358-147">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="62358-148">Lorsque l'événement <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> se produit, la méthode `OnWorkflowIdled` définie dans cet exemple est appelée.</span><span class="sxs-lookup"><span data-stu-id="62358-148">When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called.</span></span> <span data-ttu-id="62358-149">Il détermine quel workflow est désactivé à l'aide de la propriété <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> puis obtient une collection d'éléments en file d'attente pour l'instance de workflow en appelant la méthode <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.</span><span class="sxs-lookup"><span data-stu-id="62358-149">It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method.</span></span> <span data-ttu-id="62358-150">Le code itère au sein de la collection pour déterminer quelle activité attend l'événement ayant désactivé le workflow.</span><span class="sxs-lookup"><span data-stu-id="62358-150">The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</span></span> <span data-ttu-id="62358-151">Il envoie alors une exception à la file d'attente de workflow à l'aide de la méthode <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> avec le nom de l'élément de la file d'attente de l'événement.</span><span class="sxs-lookup"><span data-stu-id="62358-151">It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.</span></span>  
  
 <span data-ttu-id="62358-152">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel Canceling a Workflow (SDK) et provient du fichier Program.cs.</span><span class="sxs-lookup"><span data-stu-id="62358-152">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="62358-153">Pour plus d’informations, consultez [annulation d’un Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="62358-153">For more information, see [Canceling a Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62358-154">
            <paramref name="queueName" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-154">
              <paramref name="queueName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62358-155">Le moteur d'exécution de workflow ne s'exécute pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-155">The workflow runtime engine is not running.</span>
          </span>
          <span data-ttu-id="62358-156">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-156">-or-</span>
          </span>
          <span data-ttu-id="62358-157">La <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> spécifiée par <paramref name="queueName" /> n'existe pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-157">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> does not exist.</span>
          </span>
          <span data-ttu-id="62358-158">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-158">-or-</span>
          </span>
          <span data-ttu-id="62358-159">La <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> spécifiée par <paramref name="queueName" /> n'est pas activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-159">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> is not enabled.</span>
          </span>
        </exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)">
          <span data-ttu-id="62358-160">Annulation d’un flux de travail</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-160">Canceling a Workflow</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="EnqueueItemOnIdle">
      <MemberSignature Language="C#" Value="public void EnqueueItemOnIdle (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnqueueItemOnIdle(class System.IComparable queueName, object item, class System.Workflow.Runtime.IPendingWork pendingWork, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnqueueItemOnIdle (queueName As IComparable, item As Object, pendingWork As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnqueueItemOnIdle(IComparable ^ queueName, System::Object ^ item, System::Workflow::Runtime::IPendingWork ^ pendingWork, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.EnqueueItemOnIdle : IComparable * obj * System.Workflow.Runtime.IPendingWork * obj -&gt; unit" Usage="workflowInstance.EnqueueItemOnIdle (queueName, item, pendingWork, workItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="pendingWork" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queueName">
          <span data-ttu-id="62358-161">Nom du <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-161">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="62358-162">Objet à mettre en file d'attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-162">The object to enqueue.</span>
          </span>
        </param>
        <param name="pendingWork">
          <span data-ttu-id="62358-163">
            <see cref="T:System.Workflow.Runtime.IPendingWork" /> autorisant l’expéditeur à être notifié lorsque <c>item</c> est remis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-163">An <see cref="T:System.Workflow.Runtime.IPendingWork" /> that allows the sender to be notified when <c>item</c> is delivered.</span>
          </span>
        </param>
        <param name="workItem">
          <span data-ttu-id="62358-164">Objet à passer aux méthodes <see cref="T:System.Workflow.Runtime.IPendingWork" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-164">An object to be passed to the <see cref="T:System.Workflow.Runtime.IPendingWork" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62358-165">Publie un message dans la file d'attente de flux de travail spécifiée lorsque le flux de travail est inactif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-165">Posts a message to the specified workflow queue when the workflow is idle.</span>
          </span>
          <span data-ttu-id="62358-166">
            <see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /> attend que le flux de travail atteigne un point d'inactivité et se met en file d'attente après avoir vérifié que le programmateur de flux de travail est inactif (autrement dit, aucune opération active n'est exécutée).</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-166">
              <see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /> waits until the workflow reaches an idle point and enqueues after verifying that the workflow scheduler is idle (that is, no active operation is being executed).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-167">Attend que l'instance de workflow devienne inactive puis envoie l'`item` dans la <xref:System.Workflow.Runtime.WorkflowQueue> spécifiée.</span><span class="sxs-lookup"><span data-stu-id="62358-167">Waits for the workflow instance to become idle and then sends the `item` to the specified <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="62358-168">Si vous appelez <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A> alors que l'instance de workflow est suspendue, le moteur d'exécution de workflow va lever une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="62358-168">If you call <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A> while the workflow instance is suspended, the workflow runtime engine will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="62358-169">Si vous souhaitez être notifié lorsque le message est remis, vous pouvez implémenter <xref:System.Workflow.Runtime.IPendingWork> dans votre service et passer un `workItem` et un objet <xref:System.Workflow.Runtime.IPendingWork> à <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="62358-169">If you want to be notified when the message is delivered, you can implement <xref:System.Workflow.Runtime.IPendingWork> in your service and pass a `workItem` and an <xref:System.Workflow.Runtime.IPendingWork> object to <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="62358-170">Si vous ne souhaitez pas telle notification, vous pouvez passer une référence Null (`Nothing` en Visual Basic) pour `pendingWork` et `workItem`.</span><span class="sxs-lookup"><span data-stu-id="62358-170">If you do not want such notification, you can pass a null reference (`Nothing` in Visual Basic) for `pendingWork` and `workItem`.</span></span>  
  
 <span data-ttu-id="62358-171">Lorsque vous utilisez cette méthode avec un workflow de machine d’état, vous pouvez obtenir une exception qui contient le message « file d’attente '{0}' n’est pas activé. »</span><span class="sxs-lookup"><span data-stu-id="62358-171">When you are using this method with a state machine workflow, you might get an exception that contains the message "Queue '{0}' is not enabled."</span></span> <span data-ttu-id="62358-172">Cela se produit lorsque l'état actuel de l'ordinateur d'état ne sait pas comment gérer un événement spécifique.</span><span class="sxs-lookup"><span data-stu-id="62358-172">This occurs when the current state of the state machine does not know how to handle a specific event.</span></span> <span data-ttu-id="62358-173">Par exemple, lorsqu’un état autre que l’état actuel contient la <xref:System.Workflow.Activities.EventDrivenActivity> qui contient le <xref:System.Workflow.Activities.HandleExternalEventActivity> qui est représenté par la file d’attente '{0}'.</span><span class="sxs-lookup"><span data-stu-id="62358-173">For example, when some state other than the current state contains the <xref:System.Workflow.Activities.EventDrivenActivity> that contains the <xref:System.Workflow.Activities.HandleExternalEventActivity> that is represented by the queue '{0}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-174">L'exemple suivant présente l'envoi d'informations à une instance de workflow à l'aide de la méthode `EnqueueItemOnIdle`.</span><span class="sxs-lookup"><span data-stu-id="62358-174">The following example demonstrates sending information to a workflow instance using the `EnqueueItemOnIdle` method.</span></span> <span data-ttu-id="62358-175">En premier lieu, un objet WorkflowInstance est créé et démarré ; ensuite, un objet qui implémente l'interface <xref:System.Workflow.Runtime.IPendingWork> est créé.</span><span class="sxs-lookup"><span data-stu-id="62358-175">First, a WorkflowInstance object is created and started; next, an object that implements the <xref:System.Workflow.Runtime.IPendingWork> interface is created.</span></span> <span data-ttu-id="62358-176">`EnqueueItemOnIdle` est ensuite appelée, en passant les valeurs de chaîne pour le nom de la file d’attente, de l’élément en file d’attente et de l’élément de travail à passer aux méthodes de l’objet pendingWork.</span><span class="sxs-lookup"><span data-stu-id="62358-176">`EnqueueItemOnIdle` is then called, passing in string values for the queue name, the enqueued item, and the work item to be passed to the methods of the pendingWork object.</span></span>  
  
 [!code-csharp[WF_Samples#12](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#12)]
 [!code-vb[WF_Samples#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62358-177">
            <paramref name="queueName" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-177">
              <paramref name="queueName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62358-178">Le moteur d'exécution de workflow ne s'exécute pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-178">The workflow runtime engine is not running.</span>
          </span>
          <span data-ttu-id="62358-179">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-179">-or-</span>
          </span>
          <span data-ttu-id="62358-180">L'instance de workflow est interrompue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-180">The workflow instance is suspended.</span>
          </span>
          <span data-ttu-id="62358-181">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-181">-or-</span>
          </span>
          <span data-ttu-id="62358-182">La <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> spécifiée par <paramref name="queueName" /> n'existe pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-182">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> does not exist.</span>
          </span>
          <span data-ttu-id="62358-183">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-183">-or-</span>
          </span>
          <span data-ttu-id="62358-184">La <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> spécifiée par <paramref name="queueName" /> n'est pas activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-184">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> is not enabled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="workflowInstance.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="62358-185">Objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-185">The object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62358-186">Renvoie une valeur indiquant si l'objet spécifié est égal à la <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-186">Returns a value that indicates whether the specified object is equal to the <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62358-187">
            <see langword="true" /> si l'objet spécifié est égal à cette <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-187">
              <see langword="true" /> if the specified object is equal to this <see cref="T:System.Workflow.Runtime.WorkflowInstance" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-188">L'objet doit être une instance de la classe <xref:System.Workflow.Runtime.WorkflowInstance> et avoir le même <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> que cette <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="62358-188">The object must be an instance of the <xref:System.Workflow.Runtime.WorkflowInstance> class and have the same <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> as this <xref:System.Workflow.Runtime.WorkflowInstance>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="workflowInstance.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62358-189">Retourne le code de hachage de cette instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-189">Returns the hash code for this workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62358-190">Code de hachage pour cette <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-190">The hash code for this <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-191"><xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A> renvoie un code de hachage de basé sur la valeur de <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span><span class="sxs-lookup"><span data-stu-id="62358-191"><xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A> returns a hash code based on the value of <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowDefinition">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity GetWorkflowDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Activity GetWorkflowDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowDefinition () As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Activity ^ GetWorkflowDefinition();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowDefinition : unit -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowInstance.GetWorkflowDefinition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62358-192">Récupère l'activité racine pour cette instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-192">Retrieves the root activity for this workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62358-193">Objet <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-193">An <see cref="T:System.Workflow.ComponentModel.Activity" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-194">Vous pouvez utiliser l'activité racine pour naviguer dans la hiérarchie d'activité du workflow.</span><span class="sxs-lookup"><span data-stu-id="62358-194">You can use the root activity to navigate the activity hierarchy of the workflow.</span></span>  
  
 <span data-ttu-id="62358-195">Cette méthode n'est pas thread-safe, de ce fait, l'hôte doit synchroniser ses appels sur cette méthode.</span><span class="sxs-lookup"><span data-stu-id="62358-195">This method is not thread safe, so the host should synchronize its calls to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-196">L'exemple suivant présente la récupération de la définition du workflow d'une instance de workflow.</span><span class="sxs-lookup"><span data-stu-id="62358-196">The following example demonstrates retrieving the workflow definition from a workflow instance.</span></span>  <span data-ttu-id="62358-197">Cet exemple est issu de l'exemple du Kit de développement logiciel Ordering State Machine (SDK) et provient du fichier Mainform.cs.</span><span class="sxs-lookup"><span data-stu-id="62358-197">This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</span></span>  <span data-ttu-id="62358-198">Pour plus d’informations, consultez le [Ordering State Machine, exemple](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="62358-198">For more information, see the [Ordering State Machine Sample](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[WF_Samples#86](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#86)]
 [!code-vb[WF_Samples#86](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#86)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowNextTimerExpiration">
      <MemberSignature Language="C#" Value="public DateTime GetWorkflowNextTimerExpiration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetWorkflowNextTimerExpiration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowNextTimerExpiration () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetWorkflowNextTimerExpiration();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowNextTimerExpiration : unit -&gt; DateTime" Usage="workflowInstance.GetWorkflowNextTimerExpiration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62358-199">Renvoie le point suivant à l'heure planifiée pour la remise à cette <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> d'un message du minuteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-199">Returns the next point in time that this <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> is scheduled to be delivered a timer message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62358-200">Une valeur DateTime représentant l'heure <see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /> suivante à laquelle cette <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> se verra remettre un message du minuteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-200">A DateTime value that represents the next <see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /> time this <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> will be delivered a timer message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="62358-201">L'exemple suivant présente l'utilisation de la méthode <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A> pour déterminer si plusieurs messages du minuteur du workflow sont mis en file d'attente.</span><span class="sxs-lookup"><span data-stu-id="62358-201">The following example demonstrates using the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A> method to determine if more workflow timer messages are enqueued.</span></span> <span data-ttu-id="62358-202">Cet exemple est issu de l'exemple du Kit de développement logiciel WorkflowThreading (SDK) et provient du fichier Program.cs.</span><span class="sxs-lookup"><span data-stu-id="62358-202">This example is from the WorkflowThreading SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="62358-203">Pour plus d’informations, consultez [Workflow Threading, exemple](http://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).</span><span class="sxs-lookup"><span data-stu-id="62358-203">For more information, see [Workflow Threading Sample](http://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).</span></span>  
  
 [!code-csharp[WF_Samples#284](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#284)]
 [!code-vb[WF_Samples#284](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#284)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Workflow.Runtime.TimerEventSubscription" />
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowQueueData">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt; GetWorkflowQueueData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.Runtime.WorkflowQueueInfo&gt; GetWorkflowQueueData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowQueueData () As ReadOnlyCollection(Of WorkflowQueueInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::Runtime::WorkflowQueueInfo ^&gt; ^ GetWorkflowQueueData();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowQueueData : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt;" Usage="workflowInstance.GetWorkflowQueueData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62358-204">Obtient une collection d'objets <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> contenant les éléments en attente et les activités abonnées pour les files d'attente de workflow associées à cette instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-204">Gets a collection of <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> objects that contains the pending items and subscribed activities for the workflow queues associated with this workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62358-205">
            <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> d'objets <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-205">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-206"><xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> renvoie une collection d'objets <xref:System.Workflow.Runtime.WorkflowQueueInfo>, dont chacun contient des informations sur l'état de l'une des files d'attente de flux de travail associée à cette instance de flux de travail.</span><span class="sxs-lookup"><span data-stu-id="62358-206"><xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> returns a collection of <xref:System.Workflow.Runtime.WorkflowQueueInfo> objects, each of which contains information about the state of one of the workflow queues associated with this workflow instance.</span></span> <span data-ttu-id="62358-207"><xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType> contient les éléments en attente pour <xref:System.Workflow.Runtime.WorkflowQueue> et <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> contient une liste des activités souscrites pour la remise d'élément dans <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="62358-207"><xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType> contains the pending items for a <xref:System.Workflow.Runtime.WorkflowQueue> and <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> contains a list of the activities that are subscribed for item delivery on a <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-208">L'exemple de code suivant montre comment vous pouvez utiliser la méthode <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> pour obtenir des informations sur l'état de toutes les files d'attentes de workflow associées à un objet <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="62358-208">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method to obtain information about the state of all workflow queues associated with a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="62358-209">Lorsque l'événement <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> se produit, la méthode `OnWorkflowIdled` définie dans cet exemple est appelée.</span><span class="sxs-lookup"><span data-stu-id="62358-209">When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called.</span></span> <span data-ttu-id="62358-210">Il détermine quel workflow est désactivé à l'aide de la propriété <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> puis obtient une collection d'éléments en file d'attente pour l'instance de workflow en appelant la méthode <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.</span><span class="sxs-lookup"><span data-stu-id="62358-210">It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method.</span></span> <span data-ttu-id="62358-211">Le code itère au sein de la collection pour déterminer quelle activité attend l'événement ayant désactivé le workflow.</span><span class="sxs-lookup"><span data-stu-id="62358-211">The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</span></span> <span data-ttu-id="62358-212">Il envoie alors une exception à la file d'attente de workflow à l'aide de la méthode <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> avec le nom de l'élément de la file d'attente de l'événement.</span><span class="sxs-lookup"><span data-stu-id="62358-212">It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.</span></span>  
  
 <span data-ttu-id="62358-213">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel Canceling a Workflow (SDK) et provient du fichier Program.cs.</span><span class="sxs-lookup"><span data-stu-id="62358-213">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="62358-214">Pour plus d’informations, consultez [annulation d’un Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="62358-214">For more information, see [Canceling a Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62358-215">Le moteur d'exécution de workflow ne s'exécute pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-215">The workflow runtime engine is not running.</span>
          </span>
        </exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)">
          <span data-ttu-id="62358-216">Annulation d’un flux de travail</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-216">Canceling a Workflow</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public Guid InstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowInstance.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid InstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : Guid" Usage="System.Workflow.Runtime.WorkflowInstance.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62358-217">Obtient l'identificateur unique de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-217">Gets the unique identifier for the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62358-218">
            <see cref="T:System.Guid" /> de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-218">The <see cref="T:System.Guid" /> of the workflow instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-219">Vous pouvez utiliser <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> pour référencer l'instance de workflow.</span><span class="sxs-lookup"><span data-stu-id="62358-219">You can use <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> to reference the workflow instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-220">L'exemple de code suivant présente comment utiliser la propriété <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> pour obtenir des informations sur un objet <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="62358-220">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property to obtain information about a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="62358-221">Le premier extrait de code crée une variable <xref:System.Workflow.Runtime.WorkflowInstance> nommée `instanceId`.</span><span class="sxs-lookup"><span data-stu-id="62358-221">The first code snippet creates a <xref:System.Workflow.Runtime.WorkflowInstance> variable named `instanceId`.</span></span>  
  
 [!code-csharp[WF_Samples#210](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#210)]
 [!code-vb[WF_Samples#210](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#210)]  
  
 <span data-ttu-id="62358-222">Le second extrait de code utilise la propriété <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> comme premier objet dans un appel de constructeur `OrderEventArgs` lorsque la méthode `CallBackForApproval` est appelée.</span><span class="sxs-lookup"><span data-stu-id="62358-222">The second snippet uses the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property as the first object in an `OrderEventArgs` constructor call when the `CallBackForApproval` method is called.</span></span>  
  
 <span data-ttu-id="62358-223">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel Listen (SDK) et provient du fichier OrderServiceImple.cs.</span><span class="sxs-lookup"><span data-stu-id="62358-223">This code example is part of the Listen SDK Sample from the OrderServiceImple.cs file.</span></span> <span data-ttu-id="62358-224">Pour plus d’informations, consultez [exemple écouter](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="62358-224">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#211](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#211)]
 [!code-vb[WF_Samples#211](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#211)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)">
          <span data-ttu-id="62358-225">Listen, exemple</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-225">Listen Sample</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberSignature Language="F#" Value="member this.Load : unit -&gt; unit" Usage="workflowInstance.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62358-226">Charge une instance de workflow précédemment déchargée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-226">Loads a previously unloaded workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-227"><xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> est synchrone ; si l'instance de workflow peut être chargée, <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> sera renvoyé après le chargement de l'instance de workflow dans la mémoire et sa planification par le moteur d'exécution de workflow.</span><span class="sxs-lookup"><span data-stu-id="62358-227"><xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is synchronous; if the workflow instance can be loaded, <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> will return after the workflow instance has been loaded into memory and scheduled by the workflow runtime engine.</span></span> <span data-ttu-id="62358-228">L'exécution déclenche l'événement <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> après que le service de persistance ait restauré l'instance de workflow en mémoire, mais avant que le moteur d'exécution de workflow l'ait planifiée.</span><span class="sxs-lookup"><span data-stu-id="62358-228">The runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> event after the persistence service has restored the workflow instance in memory, but before the workflow runtime engine schedules the instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-229">L'exemple suivant montre comment charger un objet <xref:System.Workflow.Runtime.WorkflowInstance> précédemment déchargé.</span><span class="sxs-lookup"><span data-stu-id="62358-229">The following example demonstrates how to load a previously unloaded <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#10](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#10)]
 [!code-vb[WF_Samples#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62358-230">Le moteur d'exécution de workflow ne s'exécute pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-230">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReloadTrackingProfiles">
      <MemberSignature Language="C#" Value="public void ReloadTrackingProfiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReloadTrackingProfiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadTrackingProfiles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReloadTrackingProfiles();" />
      <MemberSignature Language="F#" Value="member this.ReloadTrackingProfiles : unit -&gt; unit" Usage="workflowInstance.ReloadTrackingProfiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62358-231">Rechargez les profils de suivi de cette instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-231">Reload the tracking profiles for this workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-232">L'exécution effectuant le suivi de l'infrastructure rechargera chaque <xref:System.Workflow.Runtime.Tracking.TrackingProfile> pour cette instance de workflow associée à ses canaux de suivi.</span><span class="sxs-lookup"><span data-stu-id="62358-232">The runtime tracking infrastructure will reload each <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for this workflow instance associated with its tracking channels.</span></span> <span data-ttu-id="62358-233">S'il ne se trouve pas déjà dans un état suspendu, le workflow est suspendu temporairement par l'exécution effectuant le suivi de l'infrastructure pendant le rechargement des profils de suivi.</span><span class="sxs-lookup"><span data-stu-id="62358-233">If it is not already in a suspended state, the workflow is temporarily suspended by the runtime tracking infrastructure while the tracking profiles are reloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62358-234">Le moteur d'exécution de workflow ne s'exécute pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-234">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="workflowInstance.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62358-235">Reprend l'exécution d'une instance de workflow précédemment suspendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-235">Resumes execution of a previously suspended workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-236">L'hôte peut appeler <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A> pour reprendre l'exécution d'une instance de workflow suspendue précédemment.</span><span class="sxs-lookup"><span data-stu-id="62358-236">The host can call <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A> to resume execution of a workflow instance that has been previously suspended.</span></span> <span data-ttu-id="62358-237">Si l'instance de workflow n'est pas à l'état suspendu, aucune mesure n'est prise.</span><span class="sxs-lookup"><span data-stu-id="62358-237">If the workflow instance is not in the suspended state, no action is taken.</span></span> <span data-ttu-id="62358-238">L'exécution déclenche l'événement <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> juste avant la reprise de l'exécution de l'instance de workflow.</span><span class="sxs-lookup"><span data-stu-id="62358-238">The runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event just before execution of the workflow instance is resumed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-239">L'exemple suivant montre l'appel à Resume sur une instance de workflow précédemment suspendue.</span><span class="sxs-lookup"><span data-stu-id="62358-239">The following example demonstrates calling Resume on a previously suspended workflow instance.</span></span>  <span data-ttu-id="62358-240">Cet exemple provient de l'exemple du Kit de développement logiciel Suspend and Terminate (SDK).</span><span class="sxs-lookup"><span data-stu-id="62358-240">This example is from the Suspend and Terminate SDK sample.</span></span>  <span data-ttu-id="62358-241">Pour plus d’informations, consultez [suspendre et arrêter un exemple](http://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517).</span><span class="sxs-lookup"><span data-stu-id="62358-241">For more information, see [Suspend and Terminate Sample](http://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517).</span></span>  
  
 [!code-csharp[WF_Samples#172](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#172)]
 [!code-vb[WF_Samples#172](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#172)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62358-242">Le moteur d'exécution de workflow ne s'exécute pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-242">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="workflowInstance.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62358-243">Démarre l'exécution de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-243">Starts the execution of the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-244"><xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> appelle <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> à l'activité racine de cette instance de workflow.</span><span class="sxs-lookup"><span data-stu-id="62358-244"><xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> calls <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> on the root activity of this workflow instance.</span></span> <span data-ttu-id="62358-245">Si <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> rencontre une exception, il arrête l'instance de workflow en appelant <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> avec la propriété <xref:System.Exception.Message%2A> de l'exception passée comme raison pour l'arrêt.</span><span class="sxs-lookup"><span data-stu-id="62358-245">If <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> encounters an exception, it terminates the workflow instance by calling <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> with the <xref:System.Exception.Message%2A> property of the exception passed as the reason for the termination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-246">L'exemple de code suivant montre comment vous pouvez utiliser la méthode <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> pour démarrer une <xref:System.Workflow.Runtime.WorkflowInstance> dans un hôte de workflow.</span><span class="sxs-lookup"><span data-stu-id="62358-246">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method to start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host.</span></span> <span data-ttu-id="62358-247">Le code crée une instance du <xref:System.Workflow.Runtime.WorkflowRuntime>, ajoute des services à l'exécution, puis présente la méthode recommandée pour créer un objet <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="62358-247">The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="62358-248">Il crée un objet <xref:System.Type> et le caste vers l'un des objets de workflow auxquels l'hôte est associé.</span><span class="sxs-lookup"><span data-stu-id="62358-248">It creates a <xref:System.Type> object and casts it to one of the workflow objects with which the host is associated.</span></span> <span data-ttu-id="62358-249">Le code initialise ensuite <xref:System.Workflow.Runtime.WorkflowInstance> en appelant la méthode <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> et lui passant le type créé précédemment.</span><span class="sxs-lookup"><span data-stu-id="62358-249">The code next initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it.</span></span> <span data-ttu-id="62358-250">La <xref:System.Workflow.Runtime.WorkflowInstance> est démarrée avec l'appel de la méthode <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="62358-250">The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.</span></span>  
  
 <span data-ttu-id="62358-251">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel Canceling a Workflow (SDK) et provient du fichier Program.cs.</span><span class="sxs-lookup"><span data-stu-id="62358-251">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="62358-252">Pour plus d’informations, consultez [annulation d’un Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="62358-252">For more information, see [Canceling a Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62358-253">Le moteur d'exécution de workflow ne s'exécute pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-253">The workflow runtime engine is not running.</span>
          </span>
          <span data-ttu-id="62358-254">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-254">-or-</span>
          </span>
          <span data-ttu-id="62358-255">L'instance de workflow a déjà été démarrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-255">The workflow instance has already been started.</span>
          </span>
        </exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)">
          <span data-ttu-id="62358-256">Annulation d’un flux de travail</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-256">Canceling a Workflow</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend (string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Suspend(string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Suspend (error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Suspend(System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.Suspend : string -&gt; unit" Usage="workflowInstance.Suspend error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error">
          <span data-ttu-id="62358-257">Description de la raison de la suspension de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-257">A description of the reason for suspending the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62358-258">Interrompt l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-258">Suspends the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-259">L’instance de workflow est suspendue de façon synchrone.</span><span class="sxs-lookup"><span data-stu-id="62358-259">The workflow instance is suspended in a synchronous manner.</span></span> <span data-ttu-id="62358-260">Si l'instance de workflow est déjà suspendue, aucune mesure est prise ; sinon, le moteur d'exécution de workflow interrompt l'instance, déclenche l'événement <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> et passe `reason` dans une <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="62358-260">If the workflow instance is already suspended, no action is taken; otherwise, the workflow runtime engine suspends the workflow instance, raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> event and passes `reason` in a <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62358-261"><xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> ne décharge pas l'instance de workflow.</span><span class="sxs-lookup"><span data-stu-id="62358-261"><xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> does not unload the workflow instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-262">L'exemple de code suivant montre l'appel à Suspend sur un objet <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="62358-262">The following code example demonstrates calling Suspend on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#9](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#9)]
 [!code-vb[WF_Samples#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62358-263">Le moteur d'exécution de workflow ne s'exécute pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-263">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string -&gt; unit" Usage="workflowInstance.Terminate error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error">
          <span data-ttu-id="62358-264">Description de la raison de l'arrêt de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-264">A description of the reason for terminating the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62358-265">Met fin à l’instance de workflow de façon synchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-265">Terminates the workflow instance in a synchronous manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-266">L’instance de workflow est arrêtée de façon synchrone.</span><span class="sxs-lookup"><span data-stu-id="62358-266">The workflow instance is terminated in a synchronous manner.</span></span> <span data-ttu-id="62358-267">L'hôte appelle <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> pour arrêter l'instance de workflow.</span><span class="sxs-lookup"><span data-stu-id="62358-267">The host calls <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> to terminate the workflow instance.</span></span> <span data-ttu-id="62358-268">Le moteur d'exécution de workflow efface l'instance de workflow en mémoire et en informe le service de persistance.</span><span class="sxs-lookup"><span data-stu-id="62358-268">The workflow runtime engine clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</span></span> <span data-ttu-id="62358-269">Pour <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, cela signifie que toutes les informations sur l'état de cette instance de workflow sont supprimées de la base de données à la fin.</span><span class="sxs-lookup"><span data-stu-id="62358-269">For the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, this means that all state information for that workflow instance is deleted from the database upon termination.</span></span> <span data-ttu-id="62358-270">Vous ne serez pas en mesure de recharger l'instance de workflow à partir d'un point de persistance précédemment stocké.</span><span class="sxs-lookup"><span data-stu-id="62358-270">You will not be able to reload the workflow instance from a previously stored persistence point.</span></span>  
  
 <span data-ttu-id="62358-271">Après que l'instance de workflow en mémoire ait été effacée et que le service de persistance ait été informé de l'arrêt, la méthode `Terminate` déclenche l'événement <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> et passe `reason` dans la propriété <xref:System.Exception.Message%2A> d'une <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> contenue dans le <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="62358-271">After the in-memory workflow instance is cleared and the persistence service is informed of the termination, the `Terminate` method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event and passes `reason` in the <xref:System.Exception.Message%2A> property of a <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> contained in the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.</span></span>  
  
 <span data-ttu-id="62358-272">`Terminate` est différent de <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> dans ce sens que Terminate efface l'instance de workflow en mémoire et informe le service de persistance de l'arrêt, alors que `Abort` efface simplement l'instance de workflow en mémoire, qui peut être redémarrée à partir du dernier point de persistance.</span><span class="sxs-lookup"><span data-stu-id="62358-272">`Terminate` is different from <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> in that while Terminate clears the in-memory workflow instance and informs the persistence service of the termination, `Abort` simply clears the in-memory workflow instance, which can then be restarted from the last persistence point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-273">L'exemple de code suivant présente l'appel à Terminate sur un objet <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="62358-273">The following code example demonstrates calling Terminate on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#8](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#8)]
 [!code-vb[WF_Samples#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62358-274">Le moteur d'exécution de workflow ne s'exécute pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-274">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryUnload">
      <MemberSignature Language="C#" Value="public bool TryUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.TryUnload" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUnload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryUnload();" />
      <MemberSignature Language="F#" Value="member this.TryUnload : unit -&gt; bool" Usage="workflowInstance.TryUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62358-275">Décharge l'instance de workflow de la mémoire dans le magasin de persistances lorsque l'instance est interrompue ou inactive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-275">Unloads the workflow instance from memory to the persistence store when the instance is suspended or idle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62358-276">
            <see langword="true" /> si l'instance de workflow a été déchargée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-276">
              <see langword="true" /> if the workflow instance was unloaded; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-277">Si l'instance de workflow est inactive ou suspendue, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> utilise le service de persistance pour supprimer l'instance de workflow de la mémoire et la rendre persistante dans un magasin de données.</span><span class="sxs-lookup"><span data-stu-id="62358-277">If the workflow instance is idle or suspended, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> uses the persistence service to remove the workflow instance from memory and persist it to a data store.</span></span> <span data-ttu-id="62358-278">Si aucun service de persistance n'est enregistré avec le <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="62358-278">If there is no persistence service registered with the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="62358-279">Si l’instance de workflow est rendue persistante avec succès, le runtime déclenche le <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> événements et retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="62358-279">If the workflow instance is successfully persisted, the runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event, and returns `true`.</span></span> <span data-ttu-id="62358-280"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> Retourne `false` si l’instance de workflow a déjà été déchargée, a été arrêté, a été abandonnée ou est déjà terminée.</span><span class="sxs-lookup"><span data-stu-id="62358-280"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> returns `false` if the workflow instance has already been unloaded, has been terminated, has been aborted, or has already completed.</span></span>  
  
 <span data-ttu-id="62358-281">L'hôte peut utiliser <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> pour libérer les ressources système d'un workflow inactif.</span><span class="sxs-lookup"><span data-stu-id="62358-281">The host can use <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> to reclaim system resources from an idle workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-282">L'exemple suivant présente l'utilisation de la méthode TryUnload pour décharger un workflow lorsque l'événement <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> se déclenche.</span><span class="sxs-lookup"><span data-stu-id="62358-282">The following example demonstrates using the TryUnload method to unload a workflow when the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event fires.</span></span> <span data-ttu-id="62358-283">Cet exemple est issu de l'exemple du Kit de développement logiciel Using Persistence Services (SDK) et provient du fichier Program.cs.</span><span class="sxs-lookup"><span data-stu-id="62358-283">This example is from the Using Persistence Services SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="62358-284">Pour plus d’informations, consultez [exemple des Services de persistance à l’aide de](http://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6).</span><span class="sxs-lookup"><span data-stu-id="62358-284">For more information, see [Using Persistence Services Sample](http://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6).</span></span>  
  
 [!code-csharp[WF_Samples#280](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#280)]
 [!code-vb[WF_Samples#280](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#280)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62358-285">Aucun service de persistance n'est enregistré auprès du moteur d'exécution de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-285">There is no persistence service registered with the workflow runtime engine.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; unit" Usage="workflowInstance.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62358-286">Décharge l'instance de workflow de la mémoire dans le magasin de persistances.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-286">Unloads the workflow instance from memory to the persistence store.</span>
          </span>
          <span data-ttu-id="62358-287">Cet appel se bloque jusqu’à la fin du travail planifié en cours ou à la fin de la portée d’une transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-287">This call blocks until after the currently scheduled work is finished, or the end of a transaction scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62358-288"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> est synchrone ; autrement dit, il est renvoyé après avoir effectué toute action qu'il exécute.</span><span class="sxs-lookup"><span data-stu-id="62358-288"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> is synchronous; that is, it returns after completing any action that it performs.</span></span> <span data-ttu-id="62358-289">Si l'instance de workflow n'est pas inactive, l'exécution attend que l'instance puisse être interrompue.</span><span class="sxs-lookup"><span data-stu-id="62358-289">If the workflow instance is not idle, the runtime waits until the instance can be interrupted.</span></span> <span data-ttu-id="62358-290">Une instance peut être interrompue uniquement une fois que l'élément de travail planifié en cours a été exécuté ; c'est en général ce qui se produit lorsque l'activité en cours d'exécution est renvoyée par sa méthode <xref:System.Workflow.ComponentModel.Activity.Execute%2A>.</span><span class="sxs-lookup"><span data-stu-id="62358-290">An instance can only be interrupted after the currently scheduled work item completes; this is typically when the currently running Activity returns from its <xref:System.Workflow.ComponentModel.Activity.Execute%2A> method.</span></span> <span data-ttu-id="62358-291">Toutefois, si l'instance exécute une <xref:System.Workflow.ComponentModel.TransactionScopeActivity>, la portée de transaction doit effectuer l'exécution avant que l'instance puisse être interrompue.</span><span class="sxs-lookup"><span data-stu-id="62358-291">However, if the instance is executing a <xref:System.Workflow.ComponentModel.TransactionScopeActivity>, the transaction scope must complete execution before the instance can be interrupted.</span></span> <span data-ttu-id="62358-292">Unload utilise ensuite le service de persistances pour supprimer l'instance de workflow de la mémoire et la rendre persistante dans un magasin de données.</span><span class="sxs-lookup"><span data-stu-id="62358-292">Unload then uses the persistence service to remove the workflow instance from memory and persists it to a data store.</span></span> <span data-ttu-id="62358-293">Si aucun service de persistance n'est enregistré avec le <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="62358-293">If there is no persistence service registered with the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="62358-294">Si l'instance de workflow a pu être rendue persistante, l'exécution déclenche l'événement <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>.</span><span class="sxs-lookup"><span data-stu-id="62358-294">If the workflow instance is successfully persisted, the runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="62358-295">L'hôte peut utiliser <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> pour libérer les ressources système d'un workflow inactif.</span><span class="sxs-lookup"><span data-stu-id="62358-295">The host can use <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> to reclaim system resources from an idle workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62358-296">L'exemple suivant montre comment appeler <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> sur un objet <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="62358-296">The following example demonstrates calling <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#11](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#11)]
 [!code-vb[WF_Samples#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62358-297">Aucun service de persistance n'est enregistré auprès du moteur d'exécution de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-297">There is no persistence service registered with the workflow runtime engine.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WorkflowRuntime">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkflowRuntime As WorkflowRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowRuntime ^ WorkflowRuntime { System::Workflow::Runtime::WorkflowRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowRuntime : System.Workflow.Runtime.WorkflowRuntime" Usage="System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62358-298">Obtient le <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> pour cette instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-298">Gets the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> for this workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62358-299">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> représentant l'environnement d'exécution dans lequel cette instance de workflow s'exécute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62358-299">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> that represents the execution environment in which this workflow instance is running.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="62358-300">L'exemple suivant illustre l'accès à l'exécution <xref:System.Workflow.Runtime.WorkflowRuntime> d'un objet <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="62358-300">The following example demonstrates accessing the executing <xref:System.Workflow.Runtime.WorkflowRuntime> of a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#7](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#7)]
 [!code-vb[WF_Samples#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>