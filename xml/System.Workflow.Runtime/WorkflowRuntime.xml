<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowRuntime.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b415af08fe6d71b8ce93803fae47dfb546e65be0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b415af08fe6d71b8ce93803fae47dfb546e65be0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Represents the configurable execution environment provided by the workflow run-time engine for workflows.</source>
          <target state="translated">Représente l'environnement d'exécution configurable fourni par le moteur d'exécution de workflow.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> exposes functionality required by a host application and services to configure and control the workflow run-time engine and to be notified of changes to both the workflow run-time engine and any of its workflow instances.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> expose les fonctionnalités requises par une application et des services hôtes pour configurer et contrôler le moteur d'exécution de workflow et pour être notifié des modifications apportées au moteur d'exécution de workflow et à toutes ses instances de workflow.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>It provides examples of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> constructor and the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> methods.</source>
          <target state="translated">Il fournit des exemples sur l'utilisation du constructeur <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> et du <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>et des méthodes <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>The code also shows the recommended way to create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object in a workflow host using the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">Ce code présente également la manière recommandée pour créer un objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> dans un hôte de workflow à l'aide de la méthode <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>It also shows how to set event handlers for the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph>, and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> events.</source>
          <target state="translated">Il indique aussi comment définir des gestionnaires d'événements pour les événements <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph>et <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>l’annulation d’un flux de travail<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>This type is thread safe.</source>
          <target state="translated">Ce type est thread-safe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is initialized with the default property values and contains the default core services.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> est initialisé avec les valeurs de propriété par défaut et contient les services principaux par défaut.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>To additionally configure the workflow run-time engine, you can add and remove services by using <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>, and you can set <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph>.</source>
          <target state="translated">Pour configurer également le moteur d'exécution de workflow, vous pouvez ajouter et supprimer des services à l'aide des méthodes <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>, et vous pouvez définir la propriété <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>After the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is configured, call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> to start the workflow run-time engine and its services.</source>
          <target state="translated">Après avoir configuré l'objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, appelez la méthode <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> pour démarrer le moteur d'exécution de workflow et ses services.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> class.</source>
          <target state="translated">Le tableau suivant indique les valeurs de propriétés initiales d'une instance de la classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Initial Value</source>
          <target state="translated">Valeur initiale</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>"WorkflowRuntime"</source>
          <target state="translated">"WorkflowRuntime"</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The default core services are <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph>.</source>
          <target state="translated">Les services principaux par défaut sont les objets <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> et <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment vous pouvez utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>It provides an example of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> constructor to create an instance of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and access its methods and events.</source>
          <target state="translated">Il fournit un exemple sur l'utilisation du constructeur <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> pour créer une instance de <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> et accéder à ses méthodes et événements.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>l’annulation d’un flux de travail<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>The name of a valid <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> section in the application configuration file.</source>
          <target state="translated">Nom d'une section <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> valide dans le fichier de configuration de l'application.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class by using the specified section of the application configuration file.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> en utilisant la section spécifiée du fichier de configuration de l'application.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is initialized according to the settings in the section specified by <ph id="ph2">`configSectionName`</ph> in the application configuration file.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> est initialisé d'après les paramètres dans la section spécifiée par <ph id="ph2">`configSectionName`</ph> dans le fichier de configuration de l'application.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source><ph id="ph1">`configSectionName`</ph> must correspond to a valid <ph id="ph2">`workflowSettings`</ph> section of a configuration file.</source>
          <target state="translated"><ph id="ph1">`configSectionName`</ph> doit correspondre à un élément valide <ph id="ph2">`workflowSettings`</ph> section d’un fichier de configuration.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>When the workflow run-time engine is configured by using an application configuration file, it loads and instantiates classes of the types listed in the <ph id="ph1">`Services`</ph> section of the configuration file.</source>
          <target state="translated">Lorsque le moteur d’exécution de workflow est configuré à l’aide d’un fichier de configuration, il charge et instancie les classes des types répertoriés dans le <ph id="ph1">`Services`</ph> section du fichier de configuration.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</source>
          <target state="translated">Lorsque le moteur d'exécution de workflow construit ces classes, il recherche des constructeurs de classe avec les signatures suivantes dans l'ordre suivant :</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(WorkflowRuntime runtime, NameValueCollection parameters)</source>
          <target state="translated">Service(exécution WorkflowRuntime, paramètres NameValueCollection)</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(WorkflowRuntime runtime)</source>
          <target state="translated">Service(exécution WorkflowRuntime)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(NameValueCollection parameters)</source>
          <target state="translated">Service(paramètres NameValueCollection)</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service()</source>
          <target state="translated">Service()</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>All service classes that are loaded from a configuration file must implement at least one of these constructor signatures.</source>
          <target state="translated">Toutes les classes de service chargées à partir d’un fichier de configuration doivent implémenter au moins l’une de ces signatures de constructeur.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="configSectionName" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="configSectionName" /&gt;</ph> est une référence Null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>A valid <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> section could not be found in the application configuration file.</source>
          <target state="translated">Une section <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> valide n'a pas pu être trouvée dans le fichier de configuration de l'application.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> already exists for this application domain.</source>
          <target state="translated">Il existe déjà un <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> pour ce domaine d'application.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class by using the settings in the specified <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> en utilisant les paramètres de la <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph> spécifiée.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>This constructor provides a mechanism to configure the workflow run-time engine using a single method call for hosts that do not use an application configuration file.</source>
          <target state="translated">Ce constructeur fournit un mécanisme pour configurer le moteur d'exécution de workflow à l'aide d'un appel de méthode unique pour les hôtes qui n'utilisent pas de fichier de configuration d'application.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>There are many reasons for not using the application configuration file.</source>
          <target state="translated">Il existe de nombreuses raisons pour lesquelles ne pas utiliser le fichier de configuration d'application.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A host can run in an environment that does not allow using configuration files; for example, in trusted environments that do not allow reading from the application configuration file for security reasons.</source>
          <target state="translated">Un hôte peut s'exécuter dans un environnement qui n'autorise pas l'utilisation de fichiers de configuration ; par exemple, dans les environnements approuvés qui n'autorisent pas la lecture du fichier de configuration d'application pour des raisons de sécurité.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Also, a host can use a proprietary configuration mechanism; for example, the host can store the workflow run-time engine configuration settings in a SQL database.</source>
          <target state="translated">De plus, un hôte peut utiliser un mécanisme de configuration privé ; par exemple, l'hôte peut stocker les paramètres de configuration du moteur d'exécution de workflow dans une base de données SQL.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>The workflow run-time engine loads and instantiates classes of the types contained in <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Le moteur d'exécution de workflow charge et instancie les classes des types contenus dans la propriété <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</source>
          <target state="translated">Lorsque le moteur d'exécution de workflow construit ces classes, il recherche des constructeurs de classe avec les signatures suivantes dans l'ordre suivant :</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(WorkflowRuntime runtime, NameValueCollection parameters)</source>
          <target state="translated">Service(exécution WorkflowRuntime, paramètres NameValueCollection)</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(WorkflowRuntime runtime)</source>
          <target state="translated">Service(exécution WorkflowRuntime)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(NameValueCollection parameters)</source>
          <target state="translated">Service(paramètres NameValueCollection)</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service()</source>
          <target state="translated">Service()</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>All service classes that are specified in <ph id="ph1">`settings`</ph> must implement at least one of these constructor signatures.</source>
          <target state="translated">Toutes les classes de service spécifiées dans <ph id="ph1">`settings`</ph> doivent implémenter au moins l'une de ces signatures de constructeur.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> est une référence Null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> already exists for this application domain.</source>
          <target state="translated">Il existe déjà un <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> pour ce domaine d'application.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>An object that represents the service to add.</source>
          <target state="translated">Objet représentant l'instance de service à ajouter.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Adds the specified service to the workflow run-time engine.</source>
          <target state="translated">Ajoute le service spécifié au moteur d'exécution de workflow.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>You can configure the workflow run-time engine by adding core services.</source>
          <target state="translated">Vous pouvez configurer le moteur d'exécution de workflow en ajoutant des services principaux.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Core services are those that derive from any of the following service base classes: the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">Les services principaux sont ceux qui dérivent de chacune des classes de service de base suivantes : <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> et <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Core services can only be added when the workflow run-time engine is not running; that is, when <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Services principaux ne peuvent être ajoutés lorsque le moteur d’exécution de workflow n’est pas en cours d’exécution ; Autrement dit, lorsque <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> est <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> can also be used as a storage container for other services that can be used by other workflows or by applications running on a host.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> peut également être utilisé comme conteneur de stockage pour d'autres services qui peuvent être utilisés par d'autres workflows ou par les applications s'exécutant sur un hôte.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>If you add a non-core service that derives from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class after the workflow run-time engine has been started, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> calls the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method implemented by that service.</source>
          <target state="translated">Si vous ajoutez un service non principal qui dérive de la classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> après avoir démarré le moteur d'exécution de workflow, la méthode <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> appelle la méthode <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> implémentée par ce service.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> enforces the restriction that no two services of the same <ph id="ph2">&lt;xref:System.Type&gt;</ph> can be added to the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> applique la restriction selon laquelle deux services partageant le même objet <ph id="ph2">&lt;xref:System.Type&gt;</ph> ne peuvent être ajoutés à l'objet <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>However, you can add multiple services that derive from the same base class.</source>
          <target state="translated">Toutefois, vous pouvez ajouter plusieurs services qui dérivent de la même classe de base.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>There can be only one service derived from each of the following service base classes in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>: the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class.</source>
          <target state="translated">Il ne peut y avoir qu'un seul service dérivé de chacune des classes de service de base suivantes dans <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> : <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> et <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>If you add multiple services derived from one of these classes, for example two persistence services, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si vous ajoutez plusieurs services dérivés de l'une de ces classes (par exemple, deux services de persistance), la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> lève <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>It provides example of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> method to add an <ph id="ph2">&lt;xref:System.Workflow.Activities.ExternalDataExchangeService&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> to the workflow run-time engine.</source>
          <target state="translated">Il fournit un exemple d'utilisation de la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> pour ajouter des objets <ph id="ph2">&lt;xref:System.Workflow.Activities.ExternalDataExchangeService&gt;</ph> et <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> au moteur d'exécution de workflow.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Cancelling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>l’annulation d’un flux de travail<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> est une référence Null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> est supprimé.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is already registered with the workflow run-time engine.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> est déjà enregistré auprès du moteur d'exécution de workflow.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a core service and the workflow run-time engine is already running (<ph id="ph2">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> est un service principal et le moteur d'exécution de flux de travail est déjà en cours d'exécution (<ph id="ph2">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> est <ph id="ph3">&lt;see langword="true" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">Crée une instance de workflow en utilisant les paramètres spécifiés.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>If the workflow run-time engine has not been started, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> methods call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</source>
          <target state="translated">Si le moteur d'exécution de workflow n'a pas été démarré, les méthodes <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> appellent la méthode <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>See <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> for a list of possible exceptions.</source>
          <target state="translated">Pour obtenir la liste des exceptions possibles, consultez <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>After you create the workflow instance, call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType&gt;</ph> on the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method to begin its execution.</source>
          <target state="translated">Après avoir créé l'instance de workflow, appelez <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType&gt;</ph> à l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> retourné par la méthode <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> pour commencer son exécution.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de workflow à créer.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>Creates a new workflow instance by using the specified workflow <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Crée une nouvelle instance de workflow en utilisant le workflow <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The created workflow instance.</source>
          <target state="translated">Instance de workflow créée.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Avant que la <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> soit créée, elle fait l'objet d'une validation.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">En cas d'erreurs de validation, la <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Cela fonctionne bien pour les scénarios simples, mais dans un environnement de serveur, la revalidation d'un workflow pour chaque activation peut s'avérer être un traitement inutile.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la désactivation de la validation, consultez <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The following code example demonstrates the recommended way to create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object in a workflow host using the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">L'exemple de code suivant montre la méthode recommandée pour créer un objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> dans un hôte de workflow à l'aide de la méthode <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>l’annulation d’un flux de travail<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> est une référence Null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated">Une classe <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> qui contient la définition du workflow.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>Creates a workflow instance by using the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Crée une instance de workflow en utilisant le <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The created workflow instance.</source>
          <target state="translated">Instance de workflow créée.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The workflow instance is created from a XAML workflow definition file referenced by the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">L'instance de workflow est créée à partir d'un fichier de définition du workflow XAML référencé par le <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Avant que la <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> soit créée, elle fait l'objet d'une validation.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">En cas d'erreurs de validation, la <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Cela fonctionne bien pour les scénarios simples, mais dans un environnement de serveur, la revalidation d'un workflow pour chaque activation peut s'avérer être un traitement inutile.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la désactivation de la validation, consultez <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The following example demonstrates how to create a workflow given a XAML-based workflow definition.</source>
          <target state="translated">L'exemple suivant montre comment créer un workflow avec une définition de workflow basée sur XAML.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> est une référence Null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> est supprimé.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de workflow à créer.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by string that represents the arguments to the workflow.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> d'objets indexé par une chaîne qui représente les arguments passés au workflow.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Creates a workflow instance by using the specified workflow <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> and the arguments to the workflow contained in the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Crée une instance de workflow en utilisant le <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de workflow spécifié et les arguments au workflow contenus dans le <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The created workflow instance.</source>
          <target state="translated">Instance de workflow créée.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Avant que la <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> soit créée, elle fait l'objet d'une validation.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">En cas d'erreurs de validation, la <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Cela fonctionne bien pour les scénarios simples, mais dans un environnement de serveur, la revalidation d'un workflow pour chaque activation peut s'avérer être un traitement inutile.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la désactivation de la validation, consultez <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157403)</ept>.</source>
          <target state="translated">Pour obtenir un exemple de passage de paramètres à <ph id="ph1">`CreateWorkflow`</ph>, consultez <bpt id="p1">[</bpt>exemple Workflow with Parameters<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157403)</ept>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> est une référence Null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de workflow à créer.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> d'objets indexé par une chaîne qui représente les arguments passés au workflow.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the specific <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> to create.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> de la <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> spécifique à créer.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">Crée une instance de workflow en utilisant les paramètres spécifiés.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The created workflow instance.</source>
          <target state="translated">Instance de workflow créée.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Avant que la <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> soit créée, elle fait l'objet d'une validation.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">En cas d'erreurs de validation, la <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Cela fonctionne bien pour les scénarios simples, mais dans un environnement de serveur, la revalidation d'un workflow pour chaque activation peut s'avérer être un traitement inutile.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la désactivation de la validation, consultez <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The workflow <ph id="ph1">`instanceId`</ph> for any running workflows loaded by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> must be unique.</source>
          <target state="translated">L'<ph id="ph1">`instanceId`</ph> de workflow pour tous les workflows en cours chargés par le <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> doit être unique.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If you pass an <ph id="ph1">`instanceId`</ph> to create a workflow and a running workflow is already using that <ph id="ph2">`instanceId`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Si vous passez un <ph id="ph1">`instanceId`</ph> pour créer un workflow et qu'un workflow en cours d'exécution utilise déjà cet <ph id="ph2">`instanceId`</ph>, une exception <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">Pour obtenir un exemple de passage de paramètres à <ph id="ph1">`CreateWorkflow`</ph>, consultez <bpt id="p1">[</bpt>exemple Workflow with Parameters<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> est une référence Null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated">Une classe <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> qui contient la définition du workflow.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Élément <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> d'objets indexé par une chaîne qui représente les arguments passés au workflow.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Creates a workflow instance by using the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> objects and the arguments contained in the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Crée une instance de workflow en utilisant les objets <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> spécifiés et les arguments contenus dans le <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The created workflow instance.</source>
          <target state="translated">Instance de workflow créée.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The workflow instance is created from the workflow definition referenced by the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> and the arguments supplied by <ph id="ph2">`namedArgumentValues`</ph>.</source>
          <target state="translated">L'instance de workflow est créée à partir de la définition de workflow référencée par le <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> et les arguments fournis par <ph id="ph2">`namedArgumentValues`</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Avant que la <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> soit créée, elle fait l'objet d'une validation.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">En cas d'erreurs de validation, la <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Cela fonctionne bien pour les scénarios simples, mais dans un environnement de serveur, la revalidation d'un workflow pour chaque activation peut s'avérer être un traitement inutile.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la désactivation de la validation, consultez <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">Pour obtenir un exemple de passage de paramètres à <ph id="ph1">`CreateWorkflow`</ph>, consultez <bpt id="p1">[</bpt>exemple Workflow with Parameters<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of using rules defined in XML, see <bpt id="p1">[</bpt>IfElse with Rules Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157404)</ept>.</source>
          <target state="translated">Pour obtenir un exemple d’utilisation de règles définis dans le XML, consultez <bpt id="p1">[</bpt>IfElse avec l’exemple de règles<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157404)</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> est une référence Null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> est supprimé.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated">Une classe <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> qui contient la définition du workflow.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Élément <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> d'objets indexé par une chaîne qui représente les arguments passés au workflow.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the specific <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> to create.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> de la <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> spécifique à créer.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">Crée une instance de workflow en utilisant les paramètres spécifiés.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The created workflow instance.</source>
          <target state="translated">Instance de workflow créée.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Avant que la <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> soit créée, elle fait l'objet d'une validation.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">En cas d'erreurs de validation, la <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Cela fonctionne bien pour les scénarios simples, mais dans un environnement de serveur, la revalidation d'un workflow pour chaque activation peut s'avérer être un traitement inutile.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la désactivation de la validation, consultez <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The workflow <ph id="ph1">`instanceId`</ph> for any running workflows loaded by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> must be unique.</source>
          <target state="translated">L'<ph id="ph1">`instanceId`</ph> de workflow pour tous les workflows en cours chargés par le <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> doit être unique.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If you pass an <ph id="ph1">`instanceId`</ph> to create a workflow and a running workflow is already using that <ph id="ph2">`instanceId`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Si vous passez un <ph id="ph1">`instanceId`</ph> pour créer un workflow et qu'un workflow en cours d'exécution utilise déjà cet <ph id="ph2">`instanceId`</ph>, une exception <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">Pour obtenir un exemple de passage de paramètres à <ph id="ph1">`CreateWorkflow`</ph>, consultez <bpt id="p1">[</bpt>exemple Workflow with Parameters<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of using rules defined in XML, see <bpt id="p1">[</bpt>IfElse with Rules Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157404)</ept>.</source>
          <target state="translated">Pour obtenir un exemple d’utilisation de règles définis dans le XML, consultez <bpt id="p1">[</bpt>IfElse avec l’exemple de règles<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157404)</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> est une référence Null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Libère les ressources utilisées par le <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>To shut down the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> gracefully, you should only call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> after you have called <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</source>
          <target state="translated">Pour arrêter l'objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> de façon appropriée, vous ne devez appeler la méthode <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> qu'après avoir appelé la méthode <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>This is because calling the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method alone leaves the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> in an unusable state.</source>
          <target state="translated">En effet, l'appel de la seule méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> rend <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> inutilisable.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> frees the resources used by the runtime by closing open file handles, database connections, and so on, but it does not unload workflow instances, stop services, or do any of the other actions that <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> does.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> libère les ressources utilisées par l'exécution en fermant les handles de fichiers ouverts, les connexions de la base de données et ainsi de suite, mais elle ne décharge pas d'instances de workflow, n'arrête pas les services ni aucune autre action exécutée par <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> should be called only when the host application must free the resources used by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> before they are automatically freed by the garbage collector.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> doit être appelée uniquement lorsque l'application hôte doit libérer les ressources utilisées par l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> avant qu'elles ne soient libérées automatiquement par le garbage collector.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>For general information about <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour des informations générales sur <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>implémentant une méthode de suppression<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>The following example demonstrates how to call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">L'exemple suivant montre comment appeler <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> à un objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>In this sample, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down.</source>
          <target state="translated">Dans cet exemple, la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> est appelée à partir du gestionnaire d'événements FormClosing pour le formulaire principal de l'application ; cela garantit que les objets créés par le runtime sont nettoyés correctement lorsque l'application s’arrête.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>This sample is from the <bpt id="p1">[</bpt>Speech Application Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157405)</ept>.</source>
          <target state="translated">Cet exemple est tiré le <bpt id="p1">[</bpt>exemple d’Application vocale<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157405)</ept>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that services must implement to be returned.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que les services doivent implémenter pour être retournés.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Récupère tous les services ajoutés au moteur d'exécution de workflow qui implémentent ou dérivent de l'objet <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>Services that implement or derive from the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Services qui implémentent ou dérivent de l'objet <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> indicates that no services that implement or derive from the specified <ph id="ph2">&lt;xref:System.Type&gt;</ph> have been added to the workflow run-time engine.</source>
          <target state="translated">Un objet <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> vide indique qu'aucun service qui implémente ou dérive de l'objet <ph id="ph2">&lt;xref:System.Type&gt;</ph> spécifié n'a été ajouté au moteur d'exécution de workflow.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The following example demonstrates how to retrieve all services of a given type from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">L'exemple de code suivant montre comment récupérer tous les services d'un type donné à partir d'un objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> est une référence Null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> est supprimé.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The service type.</source>
          <target state="translated">Type de service.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified generic type.</source>
          <target state="translated">Récupère tous les services ajoutés au moteur d'exécution de workflow qui implémentent ou dérivent d'un type générique spécifié.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>Services that implement or derive from the specified generic type.</source>
          <target state="translated">Services qui implémentent ou dérivent du type générique spécifié.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> indicates that no services have been added to the workflow run-time engine that implement or derive from the specified generic type.</source>
          <target state="translated">Un objet <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> vide indique qu'aucun service n'a été ajouté au moteur d'exécution de workflow qui implémente le type générique spécifié ou est dérivé de ce type.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The following example demonstrates how to retrieve all services of a given type from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">L'exemple de code suivant montre comment récupérer tous les services d'un type donné à partir d'un objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> est supprimé.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>Gets a collection that contains all the workflow instances currently loaded in memory.</source>
          <target state="translated">Obtient une collection contenant toutes les instances de workflow chargées actuellement en mémoire.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> object for each workflow instance currently loaded in memory.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> pour chaque instance de workflow actuellement chargée en mémoire.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>Note that, unlike <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph>, this method does not throw a <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if the runtime is not started.</source>
          <target state="translated">Il est à noter que, contrairement à <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph>, cette méthode ne lève pas <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> si le runtime n'est pas démarré.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>The following example demonstrates how to retrieve a collection of loaded workflows from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">L'exemple de code suivant montre comment récupérer une collection de workflows chargés à partir d'un objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> est supprimé.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the service to retrieve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> du service à récupérer.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>Retrieves a service of the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> from the workflow run-time engine.</source>
          <target state="translated">Récupère un service de l'objet <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> spécifié à partir du moteur d'exécution de workflow.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The service of the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Service de l'objet <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if more than one service exists for the specified <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> lève une <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> si plusieurs services existent pour le <ph id="ph3">&lt;xref:System.Type&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>Therefore, you should use one of the overloaded methods of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> if it is possible that multiple services of the specified type are present in the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">Par conséquent, vous devez utiliser l'une des méthodes surchargées de <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> s'il est possible que plusieurs services du type spécifié soient présents dans l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>For example, the workflow run-time engine may have multiple tracking services.</source>
          <target state="translated">Par exemple, le moteur d'exécution de workflow peut disposer de plusieurs services de suivi.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>If you request a tracking service by specifying the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> base class, it is possible that an exception will be thrown.</source>
          <target state="translated">Si vous demandez un service de suivi en spécifiant la classe de base <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>, il est possible qu'une exception soit levée.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> est une référence Null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> est déjà supprimé.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>More than one service of type <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> was found.</source>
          <target state="translated">Plusieurs services de type <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> ont été trouvés.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The service type.</source>
          <target state="translated">Type de service.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>Retrieves a service of the specified generic type from the workflow run-time engine.</source>
          <target state="translated">Récupère un service du type générique spécifié du moteur d'exécution de workflow.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>A single service of the specified generic type.</source>
          <target state="translated">Service unique du type générique spécifié.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if more than one service exists for the specified generic type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> lève une <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> si plusieurs services existent pour le type générique spécifié.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>Therefore, you should use one of the overloaded methods of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> if it is possible that multiple services of the generic type are present in the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">Par conséquent, vous devez utiliser l'une des méthodes surchargées de <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> s'il est possible que plusieurs services du type générique soient présents dans l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>For example, the workflow run-time engine may have multiple tracking services.</source>
          <target state="translated">Par exemple, le moteur d'exécution de workflow peut disposer de plusieurs services de suivi.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>If you request a tracking service by specifying the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> base class, it is possible that an exception will be thrown.</source>
          <target state="translated">Si vous demandez un service de suivi en spécifiant la classe de base <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>, il est possible qu'une exception soit levée.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The following example demonstrates how to retrieve a single service from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object; in this case, a service of type <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph>.</source>
          <target state="translated">L'exemple suivant montre comment récupérer un service unique à partir d'un objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, dans le cas présent, un service de type <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>This example is from the <bpt id="p1">[</bpt>Workflow Threading Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157350)</ept>.</source>
          <target state="translated">Cet exemple est issu le <bpt id="p1">[</bpt>exemple de flux de travail de thread<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157350)</ept>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> has already been disposed of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> a déjà été supprimé.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>More than one service of the generic type was found.</source>
          <target state="translated">Plusieurs services de type générique ont été trouvés.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of a workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> d'une instance de workflow.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>Retrieves the workflow instance that has the specified <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">Récupère l'instance de workflow contenant le <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> that has the specified <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> ayant le <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>If <ph id="ph1">`instanceId`</ph> specifies a workflow instance that is not currently in memory, the workflow instance is loaded into memory and scheduled for execution.</source>
          <target state="translated">Si <ph id="ph1">`instanceId`</ph> spécifie une instance de workflow qui n'est pas actuellement en mémoire, celle-ci est chargée en mémoire et planifiée en vue d'une exécution.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>For example, after a workflow instance is aborted, you can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> to load the workflow instance back into memory.</source>
          <target state="translated">Par exemple, après avoir abandonné une instance de workflow, vous pouvez appeler la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> pour la charger à nouveau en mémoire.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>In this case, the last persisted state of the workflow instance is loaded into memory by the persistence service.</source>
          <target state="translated">Dans ce cas, le dernier état rendu persistant de l'instance de workflow est chargé en mémoire par le service de persistance.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The following code example demonstrates a <ph id="ph1">`ReloadWorkflow`</ph> method that calls the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">L'exemple de code suivant présente une méthode <ph id="ph1">`ReloadWorkflow`</ph> permettant d'appeler la méthode <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">`ReloadWorkflow`</ph> method is part of a larger class that has a <ph id="ph2">`Runtime`</ph> property to access all of the methods, properties, and events of the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> class.</source>
          <target state="translated">La méthode <ph id="ph1">`ReloadWorkflow`</ph> fait partie d'une classe plus grande ayant une propriété <ph id="ph2">`Runtime`</ph> permettant d'accéder à toutes les méthodes, propriétés et événements de la classe <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157351)</ept> sample.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>exemple de Service de persistance personnalisé<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157351)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>In the example, the call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> is redundant because both the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> methods use the same internal helper method to load the workflow instance into memory.</source>
          <target state="translated">Dans cet exemple, l'appel à <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> est redondant du fait que les deux méthodes <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> utilisent la même méthode d'application d'assistance interne pour charger l'instance de workflow en mémoire.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The workflow runtime is not started.</source>
          <target state="translated">L'exécution du workflow n'a pas démarré.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>Gets a value that indicates whether the workflow run-time engine has been started.</source>
          <target state="translated">Obtient une valeur qui indique si le moteur d'exécution de workflow a été démarré.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow run-time engine has been started; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le moteur d'exécution de workflow a été démarré ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> indicates that the workflow run-time engine services are running.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> indique que les services de moteur d'exécution de workflow s'exécutent.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`false`</ph> until the host calls <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> est <ph id="ph2">`false`</ph> jusqu'à ce que l’hôte appelle <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>It remains <ph id="ph1">`true`</ph> until the host calls <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</source>
          <target state="translated">Il reste <ph id="ph1">`true`</ph> jusqu'à ce que l'hôte appelle <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>You cannot add core services to the workflow run-time engine while it is running.</source>
          <target state="translated">Vous ne pouvez pas ajouter de services principaux au moteur d'exécution de workflow pendant qu'il s'exécute.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">Les services principaux sont des services qui dérivent des classes <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> et <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>The following example demonstrates how to access the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">L'exemple suivant montre comment accéder à la propriété <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> d'un objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>In this example, if the runtime is started, a message is printed to the console.</source>
          <target state="translated">Dans cet exemple, si l'exécution est démarrée, un message s'imprime sur la console.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>Gets or sets the name associated with the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit le nom associé au <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>The name associated with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Nom associé à ce <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> while the workflow run-time engine is running (<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated">Vous ne pouvez pas définir <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> pendant le flux de travail du moteur d’exécution est en cours d’exécution (<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> est <ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>The following example demonstrates how to access the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">L'exemple suivant montre comment accéder à la propriété <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> d'un objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>In this example, the name of the runtime is set to "Main Runtime".</source>
          <target state="translated">Dans cet exemple, le nom de l'exécution a pour valeur "exécution Main".</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>An attempt to set <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> on a <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> that is disposed occurs.</source>
          <target state="translated">Une tentative de définition de <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> sur un <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> disposé se produit.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>An attempt to set <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> while the workflow run-time engine is running occurs.</source>
          <target state="translated">Une tentative de définition de la propriété <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> se produit lorsque le moteur d'exécution de workflow s'exécute.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>An object that represents the service to remove.</source>
          <target state="translated">Objet représentant l'instance de service à supprimer.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>Removes the specified service from the workflow run-time engine.</source>
          <target state="translated">Supprime le service spécifié du moteur d'exécution de workflow.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>You cannot remove a core service while the workflow run-time engine is running (<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`true`</ph>).</source>
          <target state="translated">Vous ne pouvez pas supprimer un service principal pendant que le moteur d’exécution du flux de travail est en cours d’exécution (<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> est <ph id="ph2">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, or the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">Les services principaux sont des services qui dérivent des classes <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> ou <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>If <ph id="ph1">`service`</ph> derives from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> calls the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method implemented by <ph id="ph5">`service`</ph>.</source>
          <target state="translated">Si <ph id="ph1">`service`</ph> dérive de la classe <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> appelle la méthode <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> implémentée par <ph id="ph5">`service`</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> is added and removed from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">Dans l'exemple suivant, une <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> est ajoutée et supprimée du <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> est une référence Null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> est déjà supprimé.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>The workflow run-time engine has started (<ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>) and <ph id="ph3">&lt;paramref name="service" /&gt;</ph> is a core service.</source>
          <target state="translated">Le moteur d'exécution du flux de travail a démarré (<ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> est <ph id="ph2">&lt;see langword="true" /&gt;</ph>) et <ph id="ph3">&lt;paramref name="service" /&gt;</ph> est un service principal.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> ou -</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is not registered with the workflow run-time engine.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> n'est pas enregistré auprès du moteur d'exécution de workflow.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>Occurs when a service that is derived from the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> class calls <ph id="ph2">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" /&gt;</ph>.</source>
          <target state="translated">Se produit lorsqu'un service dérivé de la classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> appelle <ph id="ph2">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>A service that is derived from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class can call the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> method to inform subscribers to the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> event that an exception that it was unable to handle occurred during its execution.</source>
          <target state="translated">Un service dérivé de la classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> peut appeler la méthode <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> pour informer des abonnés à l'événement <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> qu'une exception qu'il ne pouvait pas gérer s'est produite pendant son exécution.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>You can subscribe to this event to implement a recovery mechanism.</source>
          <target state="translated">Vous pouvez vous abonner à cet événement pour implémenter un mécanisme de récupération.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>This event is raised when a workflow instance has not been created yet by the workflow run-time engine and an exception occurs.</source>
          <target state="translated">Cet événement est déclenché lorsqu'une instance de workflow n'a pas encore été créée par le moteur d'exécution de workflow et qu'une exception se produit.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>In this scenario, the only way to inform a host application that an exception occurred is to raise this event.</source>
          <target state="translated">Dans ce scénario, la seule méthode pour informer une application hôte qu'une exception a eu lieu est de déclencher cet événement.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>However, the workflow run-time engine does not call this directly.</source>
          <target state="translated">Toutefois, le moteur d'exécution de workflow ne l'appelle pas directement.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>Instead, the workflow run-time engine either delivers an exception to the workflow instance or, if there is no instance, throws back to the caller, which in this case is actually the service that fires this event.</source>
          <target state="translated">À la place, le moteur d'exécution de workflow remet une exception à l'instance de workflow ou, s'il n'y a aucune instance, renvoie à l'appelant, qui dans ce cas est réellement le service qui déclenche cet événement.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>If you create your own persistence or scheduler service, you must implement this event yourself through the base <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> method.</source>
          <target state="translated">Si vous créez votre propre service de persistance ou de planificateur, vous devez implémenter cet événement vous-même à l'aide de la méthode de base <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Guid&gt;</ph> of the workflow instance that was using the service and the <ph id="ph5">&lt;xref:System.Exception&gt;</ph> that could not be handled.</source>
          <target state="translated">Pour l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph>, l'expéditeur contient l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, et l'objet <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contient l'objet <ph id="ph4">&lt;xref:System.Guid&gt;</ph> de l'instance de workflow qui utilisait le service et l'objet <ph id="ph5">&lt;xref:System.Exception&gt;</ph> qui n'a pas pu être géré.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la gestion des événements, consultez <bpt id="p1">[</bpt>consommation d’événements<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>The code associates <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> with an event handler, a method named <ph id="ph2">`OnExceptionNotHandled`</ph>.</source>
          <target state="translated">Le code associe l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> à un gestionnaire d'événements, une méthode nommée <ph id="ph2">`OnExceptionNotHandled`</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>exemple de Service de persistance personnalisé<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>Occurs when the workflow run-time engine is started.</source>
          <target state="translated">Se produit lorsque le moteur d'exécution de workflow est démarré.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event after it has validated the core service configuration of the workflow run-time engine, has invoked the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method implemented by each of its services that derive from the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, and has set <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to <ph id="ph6">`true`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> méthode déclenche le <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> événement après avoir validé la configuration du service de moteur d’exécution de workflow, core a appelé le <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> méthode implémentée par chacun de ses services qui dérivent de la <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> (classe), et a la valeur <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> à <ph id="ph6">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>There is no guarantee about the order in which the services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class are started by the workflow run-time engine, and some of these workflow run-time engine services may depend on functionality supplied by other of these services to complete their startup tasks.</source>
          <target state="translated">L'ordre de démarrage des services qui dérivent de la classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> suivi par le moteur d'exécution de workflow n'est pas garanti et certains de ces services de moteur d'exécution de workflow peuvent dépendre de fonctionnalités fournies par d'autres services afin d'effectuer leurs tâches de démarrage.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>Workflow run-time engine services can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType&gt;</ph> method to perform any final startup tasks that require the support of other workflow run-time engine services when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event is raised.</source>
          <target state="translated">Les services de moteur d'exécution de workflow peuvent substituer la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType&gt;</ph> pour effectuer toutes les tâches de démarrage finales qui requièrent la prise en charge d'autres services de moteur d'exécution de workflow lorsque l'événement <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> est déclenché.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la gestion des événements, consultez <bpt id="p1">[</bpt>consommation d’événements<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>In the following example, an event handler is added to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">Dans l'exemple suivant, un gestionnaire d'événements est ajouté à l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> de l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>In this example, the handler is an anonymous method that prints a simple message to the console.</source>
          <target state="translated">Dans cet exemple, le gestionnaire est une méthode anonyme qui imprime un message simple sur la console.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Starts the workflow run-time engine and the workflow run-time engine services.</source>
          <target state="translated">Démarre le moteur d'exécution de workflow et ses services.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>This method verifies that a valid set of core services exists and then starts any services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">Cette méthode vérifie qu'un jeu de services principaux valide existe, puis démarre tous les services qui dérivent de la classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There must be one and only one of each of the following core services: a workflow <ph id="ph1">`CommitWorkBatch`</ph> service derived from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> base class and a scheduler service derived from the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> base class.</source>
          <target state="translated">Il doit y avoir qu’un seul de services de base suivantes : un flux de travail <ph id="ph1">`CommitWorkBatch`</ph> service dérivé le <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> classe de base et un service de planificateur dérivées de la <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> classe de base.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>If either or both of these core services are missing, the workflow run-time engine supplies the appropriate default service: <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> for the workflow <ph id="ph2">`CommitWorkBatch`</ph> service and <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph> for the scheduler service.</source>
          <target state="translated">Si une ou les deux de ces services principaux sont absents, le moteur d’exécution de workflow fournit le service de valeur par défaut appropriée : <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> pour le flux de travail <ph id="ph2">`CommitWorkBatch`</ph> service et <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph> pour le service du planificateur.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>A persistence service is optional, but there can be at most only one persistence service present.</source>
          <target state="translated">Un service de persistance est facultatif, mais il ne peut y avoir qu'un seul du service de persistance présent.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>After it has validated the service configuration, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on all of the services that are derived from the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">Après avoir validé la configuration du service, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> appelle <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> pour tous les services dérivés de la classe <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Finally, the workflow run-time engine sets <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> and raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event.</source>
          <target state="translated">Enfin, le moteur d'exécution de workflow définit la propriété <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> et déclenche l'événement <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>You cannot add or remove core services after the workflow run-time engine is started.</source>
          <target state="translated">Vous ne pouvez pas ajouter ou supprimer des services principaux après le démarrage du moteur d'exécution de workflow.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, or the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">Les services principaux sont des services qui dérivent des classes <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> ou <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>If you call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> while the workflow run-time engine is running, no action is performed.</source>
          <target state="translated">Si vous appelez la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> pendant que le moteur d'exécution de workflow s'exécute, aucune action n'est effectuée.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> after the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> creates a <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> instance and after it calls <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> to add services to the runtime.</source>
          <target state="translated">Le code appelle la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> après que le <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> ait créé une instance <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> et qu'il ait appelé <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> pour ajouter des services à l'exécution.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>It also calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> before any other processing occurs.</source>
          <target state="translated">Il appelle également <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> avant que tout autre traitement se produise.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>l’annulation d’un flux de travail<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> est supprimé.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one service workflow <ph id="ph1">&lt;see langword="CommitWorkBatch" /&gt;</ph> service registered with this <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Il existe plusieurs services de flux de travail <ph id="ph1">&lt;see langword="CommitWorkBatch" /&gt;</ph> enregistrés auprès de ce <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one scheduler service registered with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Il y a plusieurs services de planificateur enregistrés auprès de ce <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one persistence service registered with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Il y a plusieurs services de persistance enregistrés auprès de ce <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>Occurs when the workflow run-time engine is stopped.</source>
          <target state="translated">Se produit lorsque le moteur d'exécution de workflow est arrêté.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event after it has invoked the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method implemented by each of its services that derive from the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> déclenche l'événement <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> après qu'il ait appelé la méthode <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> implémentée par chacun de ses services dérivant de la classe <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>There is no guarantee about the order in which these workflow run-time engine services are stopped, and some of these services may need to preserve some functionality that is relied on by other services until they too are stopped.</source>
          <target state="translated">L'ordre d'arrêt de ces services de moteur d'exécution de workflow n'est pas garanti et certains de ces services peuvent avoir besoin de conserver quelques fonctionnalités dont dépendent d'autres services jusqu'à ce qu'ils soient également arrêtés.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>Such services can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType&gt;</ph> method to perform any residual shutdown logic when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event is raised.</source>
          <target state="translated">Ces services peuvent substituer la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType&gt;</ph> pour exécuter tout arrêt résiduel logique lorsque l'événement <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> est déclenché.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la gestion des événements, consultez <bpt id="p1">[</bpt>consommation d’événements<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>In the following example, an event handler is added to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">Dans l'exemple suivant, un gestionnaire d'événements est ajouté à l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> de l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>In this example, the handler is an anonymous method that prints a simple message to the console.</source>
          <target state="translated">Dans cet exemple, le gestionnaire est une méthode anonyme qui imprime un message simple sur la console.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>Stops the workflow run-time engine and the run-time services.</source>
          <target state="translated">Arrête le moteur d'exécution de workflow et ses services.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>This method causes the workflow run-time engine to unload each of its workflow instances, stop all of its services that are derived from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, set <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to <ph id="ph3">`false`</ph>, and raise the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event.</source>
          <target state="translated">Cette méthode provoque le moteur d’exécution du flux de travail décharger chacune de ses instances de flux de travail, arrêtez tous les services qui sont dérivés de la <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> classe, définissez <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> à <ph id="ph3">`false`</ph>et de déclencher la <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>To shut down the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> gracefully, call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> before you call <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>.</source>
          <target state="translated">Pour arrêter l'objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> de façon appropriée, appelez la méthode <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> avant d'appeler la méthode <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> la méthode <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> is called after the host has completed all other processing associated with the runtime.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> est appelée après que l'hôte a terminé tout autre traitement associé au runtime.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>l’annulation d’un flux de travail<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> est déjà supprimé.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>Occurs when a workflow instance is aborted.</source>
          <target state="translated">Se produit lorsqu'une instance de workflow est abandonnée.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> occurs after all pending work for the workflow instance is cleared, but before the workflow instance is invalidated in memory.</source>
          <target state="translated">L'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> se produit après que tout le travail en attente de l'instance de workflow a été effacé, mais avant que cette dernière n'ait été invalidée dans la mémoire.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>You can abort a workflow instance by calling <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Vous pouvez abandonner une instance de workflow en appelant <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Pour cet événement, l'expéditeur contient l'objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> et l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contient l'objet <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associé à l'événement.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la gestion des événements, consultez <bpt id="p1">[</bpt>consommation d’événements<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowAborted`</ph>.</source>
          <target state="translated">Le code associe l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> à un gestionnaire d'événements, méthode qui est nommée <ph id="ph2">`OnWorkflowAborted`</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>l’annulation d’un flux de travail<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>Occurs when a workflow instance has completed.</source>
          <target state="translated">Se produit lorsqu'une instance de workflow a été effectuée.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> is raised after the workflow instance has completed but before the instance is invalidated in memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> est déclenché après que l'instance de workflow ait été effectuée mais avant qu'elle ait été invalidée dans la mémoire.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and its output parameters.</source>
          <target state="translated">Pour l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph>, l'expéditeur contient l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> et l'objet <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ph> contient l'objet <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> et ses paramètres de sortie.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la gestion des événements, consultez <bpt id="p1">[</bpt>consommation d’événements<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCompleted`</ph>.</source>
          <target state="translated">Le code associe l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> à un gestionnaire d'événements, méthode qui est nommée <ph id="ph2">`OnWorkflowCompleted`</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>l’annulation d’un flux de travail<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>Occurs when a workflow instance is created.</source>
          <target state="translated">Se produit lorsqu'une instance de workflow est créée.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> event after the workflow instance is completely constructed but before activities are processed.</source>
          <target state="translated">Le moteur d'exécution de workflow déclenche l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> après que l'instance de workflow a été complètement construite mais avant que les activités ne soient traitées.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Pour cet événement, l'expéditeur contient l'objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> et l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contient l'objet <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associé à l'événement.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la gestion des événements, consultez <bpt id="p1">[</bpt>consommation d’événements<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCreated`</ph>.</source>
          <target state="translated">Le code associe l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> à un gestionnaire d'événements, méthode qui est nommée <ph id="ph2">`OnWorkflowCreated`</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>exemple de Service de persistance personnalisé<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>Occurs when a workflow instance enters the idle state.</source>
          <target state="translated">Se produit lorsqu'une instance de workflow entre en état d'inactivité.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event when the workflow instance enters an idle state; for example, when the workflow is waiting for a <ph id="ph2">&lt;xref:System.Workflow.Activities.DelayActivity&gt;</ph> activity to complete.</source>
          <target state="translated">Le moteur d'exécution de workflow déclenche l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> lorsque l'instance de workflow entre dans l'état d'inactivité ; par exemple, lorsque le workflow attend qu'une activité <ph id="ph2">&lt;xref:System.Workflow.Activities.DelayActivity&gt;</ph> se termine.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Pour cet événement, l'expéditeur contient l'objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> et l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contient l'objet <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associé à l'événement.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowIdled`</ph>.</source>
          <target state="translated">Le code associe l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> à un gestionnaire d'événements, méthode qui est nommée <ph id="ph2">`OnWorkflowIdled`</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>l’annulation d’un flux de travail<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>Occurs when the workflow instance is loaded into memory.</source>
          <target state="translated">Se produit lorsque l'instance de workflow est chargée dans la mémoire.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> occurs after the persistence service has restored the workflow instance, but before the workflow run-time engine begins to execute any activities.</source>
          <target state="translated">L'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> se produit après que le service de persistance a restauré l'instance de workflow, mais avant que le moteur d'exécution de workflow ne commence à exécuter une autre activité.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Pour l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph>, l'expéditeur contient l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> et l'objet <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contient l'objet <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associé à l'événement.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la gestion des événements, consultez <bpt id="p1">[</bpt>consommation d’événements<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowLoad`</ph>.</source>
          <target state="translated">Le code associe l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> à un gestionnaire d'événements, méthode qui est nommée <ph id="ph2">`OnWorkflowLoad`</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept> sample.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>Service de persistance personnalisé<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>Occurs when the state of a workflow instance is persisted.</source>
          <target state="translated">Se produit lorsque l'état d'une instance de workflow est rendu persistant.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The workflow instance can be persisted for many reasons.</source>
          <target state="translated">L'instance de workflow peut être rendue persistante pour de nombreuses raisons.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>For example, the host can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph> on a workflow instance, or the workflow run-time engine can persist a workflow instance because the instance is idle or because an atomic scope has completed.</source>
          <target state="translated">Par exemple, l'hôte peut appeler la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph> sur une instance de workflow ou le moteur d'exécution de workflow peut rendre une instance de workflow persistante parce que l'instance est inactive ou parce qu'une étendue atomique a été effectuée.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If a persistence service is present in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> is raised by the runtime after the state of the workflow instance is saved to memory.</source>
          <target state="translated">Si un service de persistance est présent dans l'objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, l'événement <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> est déclenché par le runtime après que l'état de l'instance de workflow a été enregistré en mémoire.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If a persistence service is not present, the event is still raised but the instance state is not saved.</source>
          <target state="translated">Si aucun service de persistance n'est présent, l'événement est tout de même déclenché, mais l'état de l'instance n'est pas enregistré.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event occurs because the workflow instance is being unloaded, it is followed by a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event.</source>
          <target state="translated">Si l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> se produit parce que l'instance de workflow est déchargée, il est suivi par un événement <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Pour l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph>, l'expéditeur contient l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> et l'objet <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contient l'objet <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associé à l'événement.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la gestion des événements, consultez <bpt id="p1">[</bpt>consommation d’événements<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment vous pouvez utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowPersisted`</ph>.</source>
          <target state="translated">Le code associe l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> à un gestionnaire d'événements, méthode qui est nommée <ph id="ph2">`OnWorkflowPersisted`</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>exemple de Service de persistance personnalisé<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>Occurs when execution of a workflow instance is resumed following a suspension.</source>
          <target state="translated">Se produit lorsque l'exécution d'une instance de workflow est reprise suite à un arrêt.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event just before the workflow instance is scheduled.</source>
          <target state="translated">Le moteur d'exécution de workflow déclenche l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> juste avant la planification de l'instance de workflow.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event is usually raised because of an explicit call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">L'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> est habituellement déclenché à cause d'un appel explicite à <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>However, the workflow run-time engine can temporarily suspend an instance to perform an operation, for example, to apply a workflow change.</source>
          <target state="translated">Toutefois, le moteur d'exécution de workflow peut interrompre temporairement une instance pour effectuer une opération (par exemple, pour appliquer une modification de workflow).</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event is raised when the runtime resumes execution of the workflow instance following the operation.</source>
          <target state="translated">Dans ce cas, l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> est déclenché lorsque le runtime reprend l'exécution de l'instance de workflow à la suite de l'opération.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Pour l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph>, l'expéditeur contient l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> et l'objet <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contient l'objet <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associé à l'événement.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la gestion des événements, consultez <bpt id="p1">[</bpt>consommation d’événements<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment vous pouvez utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowResume`</ph>.</source>
          <target state="translated">Le code associe l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> à un gestionnaire d'événements, méthode qui est nommée <ph id="ph2">`OnWorkflowResume`</ph>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>This code example is part of the <bpt id="p1">[</bpt>Suspend and Terminate Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157402)</ept>.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>suspendre et arrêter l’exemple<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157402)</ept>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>Occurs when a workflow instance has been started.</source>
          <target state="translated">Se produit lors du démarrage d'une instance de workflow.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> event after the workflow instance is started by scheduling the root activity for execution.</source>
          <target state="translated">Le moteur d'exécution de workflow déclenche l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> après que l'instance de workflow a été démarrée en planifiant l'activité racine à des fins d'exécution.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Pour cet événement, l'expéditeur contient l'objet <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> et l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contient l'objet <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associé à l'événement.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la gestion des événements, consultez <bpt id="p1">[</bpt>consommation d’événements<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowStarted`</ph>.</source>
          <target state="translated">Le code associe l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> à un gestionnaire d'événements, méthode qui est nommée <ph id="ph2">`OnWorkflowStarted`</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Host Communication Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157406)</ept>.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>Host (exemple) Communication<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157406)</ept>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>Occurs when a workflow instance is suspended.</source>
          <target state="translated">Se produit lorsqu'une instance de workflow est interrompue.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The workflow instance can be suspended by the host through a call to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> method, by a <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.SuspendActivity&gt;</ph> activity, or implicitly by the workflow run-time engine.</source>
          <target state="translated">L'instance de workflow peut être interrompue par l'hôte via un appel à la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph>, par une activité <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.SuspendActivity&gt;</ph> ou implicitement par le moteur d'exécution de workflow.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>For example, the workflow run-time engine temporarily suspends the instance when it applies dynamic changes to the instance.</source>
          <target state="translated">Par exemple, le moteur d'exécution de workflow interrompt temporairement l'instance lorsqu'il lui applique des modifications dynamiques.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and a string that describes the reason the instance was suspended.</source>
          <target state="translated">Pour l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph>, l'expéditeur contient l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, et l'objet <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph> contient l'objet <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> et une chaîne qui décrit la raison de l'interruption de l'instance.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la gestion des événements, consultez <bpt id="p1">[</bpt>consommation d’événements<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowSuspended`</ph>.</source>
          <target state="translated">Le code associe l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> à un gestionnaire d'événements, méthode qui est nommée <ph id="ph2">`OnWorkflowSuspended`</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>This code example is part of the <bpt id="p1">[</bpt>Suspend and Terminate Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157402)</ept>.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>suspendre et arrêter l’exemple<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157402)</ept>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>Occurs when a workflow instance is terminated.</source>
          <target state="translated">Se produit lorsqu'une instance de workflow est arrêtée.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The workflow can be terminated by the host through a call to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> method, by a <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.TerminateActivity&gt;</ph> activity, or by the workflow run-time engine when an unhandled exception occurs.</source>
          <target state="translated">Le workflow peut être arrêté par l'hôte via un appel à la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph>, par une activité <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.TerminateActivity&gt;</ph> ou par le moteur d'exécution de workflow lorsqu'une exception non prise en charge se produit.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> event after the workflow instance is terminated, but before it is invalidated in memory.</source>
          <target state="translated">Le moteur d'exécution de workflow déclenche l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> après avoir arrêté l'instance de workflow, mais avant qu'elle ne soit invalidée dans la mémoire.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and information about the reason the instance was terminated in the <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Pour l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph>, l'expéditeur contient l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, et l'objet <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph> contient l'objet <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> et les informations sur la raison de l'arrêt de l'instance dans la propriété <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la gestion des événements, consultez <bpt id="p1">[</bpt>consommation d’événements<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCompleted`</ph>.</source>
          <target state="translated">Le code associe l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> à un gestionnaire d'événements, méthode qui est nommée <ph id="ph2">`OnWorkflowCompleted`</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>l’annulation d’un flux de travail<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>Occurs when the workflow instance is unloaded from memory.</source>
          <target state="translated">Se produit lorsque l'instance de workflow est déchargée de la mémoire.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>A workflow instance can be unloaded from memory by an explicit call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph>, or implicitly by the workflow run-time engine according to its own semantics.</source>
          <target state="translated">Une instance de workflow peut être déchargée de la mémoire par un appel explicite à la méthode <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> ou implicitement par le moteur d'exécution de workflow, en fonction de sa propre sémantique.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>For example, the workflow run-time engine unloads a workflow instance if the instance becomes idle and the runtime has a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> added for which <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Par exemple, le moteur d’exécution de workflow décharge une instance de workflow si l’instance devient inactive et que le runtime a une <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> ajouté pour lequel <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The workflow run-time engine raises the</source>
          <target state="translated">Le moteur d'exécution de workflow déclenche</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event after the state of the workflow instance has been successfully persisted but before the instance is invalidated in memory.</source>
          <target state="translated">l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> après que l'état de l'instance de workflow ait pu être rendu persistant, mais avant que l'instance ait été invalidée dans la mémoire.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>Therefore, a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event precedes the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event.</source>
          <target state="translated">Par conséquent, un événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> précède l'événement <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Pour l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph>, l'expéditeur contient l'objet <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> et l'objet <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contient l'objet <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associé à l'événement.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> la gestion des événements, consultez <bpt id="p1">[</bpt>consommation d’événements<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">L'exemple de code suivant montre comment utiliser les fonctionnalités <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> d'un hôte de workflow.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowUnload`</ph>.</source>
          <target state="translated">Le code associe l'événement <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> à un gestionnaire d'événements, méthode qui est nommée <ph id="ph2">`OnWorkflowUnload`</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</source>
          <target state="translated">Cet exemple de code fait partie de la <bpt id="p1">[</bpt>exemple de Service de persistance personnalisé<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>