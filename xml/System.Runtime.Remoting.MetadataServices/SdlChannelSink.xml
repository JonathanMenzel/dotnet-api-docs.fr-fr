<Type Name="SdlChannelSink" FullName="System.Runtime.Remoting.MetadataServices.SdlChannelSink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="683508203c017286bb3e14969c1ea7f20d99b9bc" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53514111" /></Metadata><TypeSignature Language="C#" Value="public class SdlChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SdlChannelSink extends System.Object implements class System.Runtime.Remoting.Channels.IChannelSinkBase, class System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />
  <TypeSignature Language="VB.NET" Value="Public Class SdlChannelSink&#xA;Implements IServerChannelSink" />
  <TypeSignature Language="C++ CLI" Value="public ref class SdlChannelSink : System::Runtime::Remoting::Channels::IServerChannelSink" />
  <TypeSignature Language="F#" Value="type SdlChannelSink = class&#xA;    interface IServerChannelSink&#xA;    interface IChannelSinkBase" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSinkBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IServerChannelSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a055d-101">Fournit l'implémentation d'un récepteur de canal serveur qui génère le langage WSDL (Web Services Description Language) dynamiquement sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="a055d-101">Provides the implementation for a server channel sink that generates Web Services Description Language (WSDL) dynamically on the server.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a055d-102">Le <xref:System.Runtime.Remoting.MetadataServices.SdlChannelSink> est utilisé pour créer WSDL lorsque l’URL se termine par la chaîne « ? wsdl ».</span><span class="sxs-lookup"><span data-stu-id="a055d-102">The <xref:System.Runtime.Remoting.MetadataServices.SdlChannelSink> is used to create WSDL in situations where the URL ends with the string "?wsdl".</span></span>  
  
 <span data-ttu-id="a055d-103">Le tableau suivant montre le canal des propriétés de configuration qui peuvent être spécifiées pour ce récepteur de canal.</span><span class="sxs-lookup"><span data-stu-id="a055d-103">The following table shows the channel configuration properties that can be specified for this channel sink.</span></span> <span data-ttu-id="a055d-104">Les deux premières propriétés s’associent pour contrôler la publication WSDL des objets publiés par le domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="a055d-104">The first two properties combine to control the WSDL publication of objects published by the application domain.</span></span> <span data-ttu-id="a055d-105">Si `false` est spécifié pour la première propriété, aucun WSDL n’est retournée, indépendamment de la seconde propriété.</span><span class="sxs-lookup"><span data-stu-id="a055d-105">If `false` is specified for the first property, no WSDL is returned, regardless of the second property.</span></span> <span data-ttu-id="a055d-106">(La valeur par défaut est `true`). Sinon, le second contrôle si l’URI d’objet de métadonnées global est autorisé à y répondre.</span><span class="sxs-lookup"><span data-stu-id="a055d-106">(The default is `true`.) Otherwise, the second controls whether the global metadata object URI is permitted to respond.</span></span> <span data-ttu-id="a055d-107">(La valeur par défaut est `false`).</span><span class="sxs-lookup"><span data-stu-id="a055d-107">(The default is `false`.)</span></span>  
  
|<span data-ttu-id="a055d-108">Property</span><span class="sxs-lookup"><span data-stu-id="a055d-108">Property</span></span>|<span data-ttu-id="a055d-109">Description </span><span class="sxs-lookup"><span data-stu-id="a055d-109">Description</span></span>|  
|--------------|-----------------|  
|`metadataEnabled`|<span data-ttu-id="a055d-110">Valeur booléenne qui spécifie s’il faut honorer les demandes qui se terminent par « ? wsdl » si ce récepteur est dans la chaîne de récepteurs de canal.</span><span class="sxs-lookup"><span data-stu-id="a055d-110">A Boolean value that specifies whether to honor requests that end in "?wsdl" if this sink is in the channel sink chain.</span></span> <span data-ttu-id="a055d-111">Le paramètre par défaut est `true`.</span><span class="sxs-lookup"><span data-stu-id="a055d-111">The default setting is `true`.</span></span> <span data-ttu-id="a055d-112">Si la valeur est `false`, le récepteur lève une exception dans tous les cas où des métadonnées sont demandées pour n'importe quel objet du domaine d'application.</span><span class="sxs-lookup"><span data-stu-id="a055d-112">If `false`, the sink throws an exception in all cases where metadata is requested for any object in the application domain.</span></span><br /><br /> <span data-ttu-id="a055d-113">Cette propriété n’est prise en charge que dans le .NET Framework version 1.1 sur les plateformes suivantes : Windows 98, Windows NT 4.0, Windows Millennium, Windows 2000, Windows XP Édition Familiale, Windows XP Professionnel et la famille Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="a055d-113">This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.</span></span>|  
|`remoteApplicationMetadataEnabled`|<span data-ttu-id="a055d-114">Valeur booléenne qui spécifie s’il faut honorer les demandes pour l’URI d’objet « RemoteApplicationMetadata ? wsdl », qui retourne WSDL qui décrit tous les objets qui sont publiés par le domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="a055d-114">A Boolean value that specifies whether to honor requests for the object URI "RemoteApplicationMetadata?wsdl", which returns WSDL that describes all objects that are published by the application domain.</span></span> <span data-ttu-id="a055d-115">Si `false`, toute demande de « RemoteApplicationMetadata.rem » lève une exception.</span><span class="sxs-lookup"><span data-stu-id="a055d-115">If `false`, then any request to "RemoteApplicationMetadata.rem" throws an exception.</span></span> <span data-ttu-id="a055d-116">Tous les autres « ? wsdl » pour l’URI d’objet particuliers qui lui sont accordées.</span><span class="sxs-lookup"><span data-stu-id="a055d-116">All other "?wsdl" requests for particular object URIs are honored.</span></span> <span data-ttu-id="a055d-117">Si la valeur est `true`, la demande de métadonnées globales est honorée.</span><span class="sxs-lookup"><span data-stu-id="a055d-117">If `true`, the global metadata request is honored.</span></span> <span data-ttu-id="a055d-118">Le paramètre par défaut est `false`.</span><span class="sxs-lookup"><span data-stu-id="a055d-118">The default setting is `false`.</span></span><br /><br /> <span data-ttu-id="a055d-119">Cette propriété n’est prise en charge que dans le .NET Framework version 1.1 sur les plateformes suivantes : Windows 98, Windows NT 4.0, Windows Millennium, Windows 2000, Windows XP Édition Familiale, Windows XP Professionnel et la famille Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="a055d-119">This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.</span></span>|  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/77axffs8(v=vs.100)"><span data-ttu-id="a055d-120">Description de service Web XML</span><span class="sxs-lookup"><span data-stu-id="a055d-120">XML Web Service Description</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SdlChannelSink (System.Runtime.Remoting.Channels.IChannelReceiver receiver, System.Runtime.Remoting.Channels.IServerChannelSink nextSink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Remoting.Channels.IChannelReceiver receiver, class System.Runtime.Remoting.Channels.IServerChannelSink nextSink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (receiver As IChannelReceiver, nextSink As IServerChannelSink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SdlChannelSink(System::Runtime::Remoting::Channels::IChannelReceiver ^ receiver, System::Runtime::Remoting::Channels::IServerChannelSink ^ nextSink);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.MetadataServices.SdlChannelSink : System.Runtime.Remoting.Channels.IChannelReceiver * System.Runtime.Remoting.Channels.IServerChannelSink -&gt; System.Runtime.Remoting.MetadataServices.SdlChannelSink" Usage="new System.Runtime.Remoting.MetadataServices.SdlChannelSink (receiver, nextSink)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="receiver" Type="System.Runtime.Remoting.Channels.IChannelReceiver" />
        <Parameter Name="nextSink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
      </Parameters>
      <Docs>
        <param name="receiver"><span data-ttu-id="a055d-121">Indique le canal qui recevra les messages sérialisés par la nouvelle instance de <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />.</span><span class="sxs-lookup"><span data-stu-id="a055d-121">Indicates the channel that will receive the messages serialized by the new instance of <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />.</span></span></param>
        <param name="nextSink"><span data-ttu-id="a055d-122">Récepteur de messages suivant dans la chaîne de récepteurs.</span><span class="sxs-lookup"><span data-stu-id="a055d-122">The next sink in the sink chain.</span></span></param>
        <summary><span data-ttu-id="a055d-123">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />.</span><span class="sxs-lookup"><span data-stu-id="a055d-123">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessResponse">
      <MemberSignature Language="C#" Value="public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessResponse(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AsyncProcessResponse(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit&#xA;override this.AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit" Usage="sdlChannelSink.AsyncProcessResponse (sinkStack, state, msg, headers, stream)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sinkStack"><span data-ttu-id="a055d-124">Pile de récepteurs permettant de retourner au récepteur de transport serveur.</span><span class="sxs-lookup"><span data-stu-id="a055d-124">A stack of sinks that lead back to the server transport sink.</span></span></param>
        <param name="state"><span data-ttu-id="a055d-125">Informations associées au récepteur en cours, générées du côté demande et nécessaires du côté réponse.</span><span class="sxs-lookup"><span data-stu-id="a055d-125">Information associated with the current sink, generated on the request side, and needed on the response side.</span></span></param>
        <param name="msg"><span data-ttu-id="a055d-126">Message de réponse.</span><span class="sxs-lookup"><span data-stu-id="a055d-126">The response message.</span></span></param>
        <param name="headers"><span data-ttu-id="a055d-127">En-têtes à ajouter au message de retour envoyé au client.</span><span class="sxs-lookup"><span data-stu-id="a055d-127">The headers to add to the return message heading to the client.</span></span></param>
        <param name="stream"><span data-ttu-id="a055d-128">Flux retournant au récepteur de transport.</span><span class="sxs-lookup"><span data-stu-id="a055d-128">The stream heading back to the transport sink.</span></span></param>
        <summary><span data-ttu-id="a055d-129">Demande le traitement, à partir du récepteur en cours, de la réponse à un appel de méthode envoyé de manière asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a055d-129">Requests processing from the current sink of the response from a method call that was sent asynchronously.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetResponseStream(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResponseStream (sinkStack As IServerResponseChannelSinkStack, state As Object, msg As IMessage, headers As ITransportHeaders) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetResponseStream(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream&#xA;override this.GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream" Usage="sdlChannelSink.GetResponseStream (sinkStack, state, msg, headers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
      </Parameters>
      <Docs>
        <param name="sinkStack"><span data-ttu-id="a055d-130">Pile de récepteurs permettant de retourner au récepteur de transport serveur.</span><span class="sxs-lookup"><span data-stu-id="a055d-130">A stack of sinks that lead back to the server transport sink.</span></span></param>
        <param name="state"><span data-ttu-id="a055d-131">Informations associées au récepteur en cours, générées du côté demande et nécessaires du côté réponse.</span><span class="sxs-lookup"><span data-stu-id="a055d-131">Information associated with the current sink, generated on the request side, and needed on the response side.</span></span></param>
        <param name="msg"><span data-ttu-id="a055d-132">Message de réponse à sérialiser.</span><span class="sxs-lookup"><span data-stu-id="a055d-132">The response message to serialize.</span></span></param>
        <param name="headers"><span data-ttu-id="a055d-133">En-têtes à placer dans le flux de réponse vers le client.</span><span class="sxs-lookup"><span data-stu-id="a055d-133">The headers to put in the response stream to the client.</span></span></param>
        <summary><span data-ttu-id="a055d-134">Retourne <see cref="T:System.IO.Stream" /> sur lequel le message de réponse fourni doit être sérialisé.</span><span class="sxs-lookup"><span data-stu-id="a055d-134">Returns the <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</span></span></summary>
        <returns><span data-ttu-id="a055d-135"><see cref="T:System.IO.Stream" /> sur lequel le message de réponse fourni doit être sérialisé.</span><span class="sxs-lookup"><span data-stu-id="a055d-135">The <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a055d-136">La méthode actuelle est appelée quand un flux de réponse doit être créé.</span><span class="sxs-lookup"><span data-stu-id="a055d-136">The current method is called when a response stream needs to be created.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tdzwhfy3(v=vs.100)"><span data-ttu-id="a055d-137">Récepteurs et chaînes de récepteurs</span><span class="sxs-lookup"><span data-stu-id="a055d-137">Sinks and Sink Chains</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NextChannelSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextChannelSink As IServerChannelSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Channels::IServerChannelSink ^ NextChannelSink { System::Runtime::Remoting::Channels::IServerChannelSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink" Usage="System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.IServerChannelSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a055d-138">Obtient le <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> suivant de la chaîne de récepteurs.</span><span class="sxs-lookup"><span data-stu-id="a055d-138">Gets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</span></span></summary>
        <value><span data-ttu-id="a055d-139"><see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> suivant de la chaîne de récepteurs.</span><span class="sxs-lookup"><span data-stu-id="a055d-139">The next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage(class System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, class System.Runtime.Remoting.Messaging.IMessage requestMsg, class System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, class System.IO.Stream requestStream, [out] class System.Runtime.Remoting.Messaging.IMessage&amp; responseMsg, [out] class System.Runtime.Remoting.Channels.ITransportHeaders&amp; responseHeaders, [out] class System.IO.Stream&amp; responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessMessage (sinkStack As IServerChannelSinkStack, requestMsg As IMessage, requestHeaders As ITransportHeaders, requestStream As Stream, ByRef responseMsg As IMessage, ByRef responseHeaders As ITransportHeaders, ByRef responseStream As Stream) As ServerProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Channels::ServerProcessing ProcessMessage(System::Runtime::Remoting::Channels::IServerChannelSinkStack ^ sinkStack, System::Runtime::Remoting::Messaging::IMessage ^ requestMsg, System::Runtime::Remoting::Channels::ITransportHeaders ^ requestHeaders, System::IO::Stream ^ requestStream, [Runtime::InteropServices::Out] System::Runtime::Remoting::Messaging::IMessage ^ % responseMsg, [Runtime::InteropServices::Out] System::Runtime::Remoting::Channels::ITransportHeaders ^ % responseHeaders, [Runtime::InteropServices::Out] System::IO::Stream ^ % responseStream);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream *  *  *  -&gt; System.Runtime.Remoting.Channels.ServerProcessing&#xA;override this.ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream *  *  *  -&gt; System.Runtime.Remoting.Channels.ServerProcessing" Usage="sdlChannelSink.ProcessMessage (sinkStack, requestMsg, requestHeaders, requestStream, responseMsg, responseHeaders, responseStream)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.ServerProcessing</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerChannelSinkStack" />
        <Parameter Name="requestMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="requestHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="requestStream" Type="System.IO.Stream" />
        <Parameter Name="responseMsg" Type="System.Runtime.Remoting.Messaging.IMessage" RefType="out" />
        <Parameter Name="responseHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" RefType="out" />
        <Parameter Name="responseStream" Type="System.IO.Stream" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sinkStack"><span data-ttu-id="a055d-140">Pile de récepteurs de canal qui a appelé le récepteur en cours.</span><span class="sxs-lookup"><span data-stu-id="a055d-140">A stack of channel sinks that called the current sink.</span></span></param>
        <param name="requestMsg"><span data-ttu-id="a055d-141">Message qui contient la demande.</span><span class="sxs-lookup"><span data-stu-id="a055d-141">The message that contains the request.</span></span></param>
        <param name="requestHeaders"><span data-ttu-id="a055d-142">En-têtes récupérés du message entrant provenant du client.</span><span class="sxs-lookup"><span data-stu-id="a055d-142">The headers that are retrieved from the incoming message from the client.</span></span></param>
        <param name="requestStream"><span data-ttu-id="a055d-143">Flux qui doit être traité et passé sur le récepteur de désérialisation.</span><span class="sxs-lookup"><span data-stu-id="a055d-143">The stream that needs to be processed and passed on to the deserialization sink.</span></span></param>
        <param name="responseMsg"><span data-ttu-id="a055d-144">Cette méthode retourne un <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> contenant le message de réponse.</span><span class="sxs-lookup"><span data-stu-id="a055d-144">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that holds the response message.</span></span> <span data-ttu-id="a055d-145">Ce paramètre est passé sans être initialisé.</span><span class="sxs-lookup"><span data-stu-id="a055d-145">This parameter is passed uninitialized.</span></span></param>
        <param name="responseHeaders"><span data-ttu-id="a055d-146">Cette méthode retourne un <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> contenant les en-têtes à ajouter au message de retour envoyé au client.</span><span class="sxs-lookup"><span data-stu-id="a055d-146">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> that holds the headers to add to return message heading to the client.</span></span> <span data-ttu-id="a055d-147">Ce paramètre est passé sans être initialisé.</span><span class="sxs-lookup"><span data-stu-id="a055d-147">This parameter is passed uninitialized.</span></span></param>
        <param name="responseStream"><span data-ttu-id="a055d-148">Cette méthode retourne un <see cref="T:System.IO.Stream" /> destiné au récepteur de transport.</span><span class="sxs-lookup"><span data-stu-id="a055d-148">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is heading to the transport sink.</span></span> <span data-ttu-id="a055d-149">Ce paramètre est passé sans être initialisé.</span><span class="sxs-lookup"><span data-stu-id="a055d-149">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="a055d-150">Demande le traitement de messages à partir du récepteur en cours.</span><span class="sxs-lookup"><span data-stu-id="a055d-150">Requests message processing from the current sink.</span></span></summary>
        <returns><span data-ttu-id="a055d-151">Valeur d'état de <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> qui fournit des informations sur le mode de traitement du message.</span><span class="sxs-lookup"><span data-stu-id="a055d-151">A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> status value that provides information about how the message was processed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a055d-152">Tâche d’un proxy consiste à convertir un appel de méthode est appelé sur ce dernier dans un objet de message.</span><span class="sxs-lookup"><span data-stu-id="a055d-152">The proxy's job is to convert a method call that is invoked on it into a message object.</span></span> <span data-ttu-id="a055d-153">L’objet de Message, qui implémente le <xref:System.Runtime.Remoting.Messaging.IMessage> l’interface, est passé à partir de l’extrémité cliente à l’extrémité serveur en appelant <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> sur des objets de récepteur de messages.</span><span class="sxs-lookup"><span data-stu-id="a055d-153">The Message object, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects.</span></span> <span data-ttu-id="a055d-154">Les récepteurs de messages sont chaînées ensemble, ce qui signifie que chaque récepteur de messages est chargée d’appeler <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> sur le récepteur de messages suivant après qu’il a effectué son travail.</span><span class="sxs-lookup"><span data-stu-id="a055d-154">Message sinks are chained together, which means that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after it has performed its work.</span></span> <span data-ttu-id="a055d-155">Par exemple, un récepteur de messages de synchronisation peut entraîner un verrou acquis ou libération et le délégué au récepteur de messages en aval.</span><span class="sxs-lookup"><span data-stu-id="a055d-155">For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.</span></span>  
  
 <span data-ttu-id="a055d-156">Lorsque le récepteur de canal de formateur obtient un message qui doit être envoyé sur le canal, il appelle <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, en passant le message en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="a055d-156">When the formatter channel sink gets a message that needs to be sent over the channel, it calls <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passing the message as a parameter.</span></span> <span data-ttu-id="a055d-157">Le récepteur de formateur crée ensuite le tableau d’en-têtes de transport et appelle <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> sur le récepteur de formateur.</span><span class="sxs-lookup"><span data-stu-id="a055d-157">The formatter sink then creates the transport header array and calls <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> on the formatter sink.</span></span> <span data-ttu-id="a055d-158">Cet appel est renvoyé dans la chaîne de récepteurs; n'importe quel récepteur peut créer un flux de demande qui est alors repassé au récepteur de formateur.</span><span class="sxs-lookup"><span data-stu-id="a055d-158">This call is forwarded down the sink chain, and any sink can create a request stream that is passed back to the formatter sink.</span></span> <span data-ttu-id="a055d-159">Après cela, appelez retourne, le message est sérialisé, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> est appelée sur la première chaîne dans la chaîne de récepteurs, et le message est passé aux récepteurs de canal.</span><span class="sxs-lookup"><span data-stu-id="a055d-159">After this call returns, the message is serialized, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> is called on the first chain in the sink chain, and the message is passed to the channel sinks.</span></span>  
  
 <span data-ttu-id="a055d-160">Une fois que le canal récepteurs obtenir le message, ils peuvent écrire des données dans le flux de données, ajouter des en-têtes au tableau d’en-tête et s’ajoutent à la pile de récepteurs avant de transférer l’appel au récepteur suivant.</span><span class="sxs-lookup"><span data-stu-id="a055d-160">After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink.</span></span> <span data-ttu-id="a055d-161">Lorsque l’appel atteint le récepteur de transport à la fin de la chaîne, le récepteur de transport envoie les en-têtes et le message sérialisé sur le canal au serveur, où le processus est inversé.</span><span class="sxs-lookup"><span data-stu-id="a055d-161">When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.</span></span>  
  
 <span data-ttu-id="a055d-162">Lorsque le message n’atteigne le côté serveur, le récepteur de transport récupère les en-têtes de message à partir du flux sérialisé et transfère ces éléments dans la chaîne de récepteurs jusqu'à ce qu’ils atteignent le récepteur de formateur.</span><span class="sxs-lookup"><span data-stu-id="a055d-162">When the message reaches the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until they reach the formatter sink.</span></span> <span data-ttu-id="a055d-163">Le récepteur de formateur désérialise le message, puis transfère à distance, où le message est converti en un appel de méthode et l’objet serveur est appelée.</span><span class="sxs-lookup"><span data-stu-id="a055d-163">The formatter sink then deserializes the message and forwards it to remoting, where the message is turned into a method call and the server object is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.IDictionary" Usage="System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannelSinkBase.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a055d-164">Obtient un <see cref="T:System.Collections.IDictionary" /> de propriétés pour le récepteur de canal en cours.</span><span class="sxs-lookup"><span data-stu-id="a055d-164">Gets a <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</span></span></summary>
        <value><span data-ttu-id="a055d-165"><see cref="T:System.Collections.IDictionary" /> de propriétés pour le récepteur de canal en cours.</span><span class="sxs-lookup"><span data-stu-id="a055d-165">A <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a055d-166">Pour plus d’informations, consultez [ &#91; \<topic://cpconchannelformatterconfigurationproperties >&#93;](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="a055d-166">For more information, see [&#91;\<topic://cpconchannelformatterconfigurationproperties>&#93;](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="a055d-167">Propriétés de configuration du canal et du formateur</span><span class="sxs-lookup"><span data-stu-id="a055d-167">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>