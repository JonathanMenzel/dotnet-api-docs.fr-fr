<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TaskStatus.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50a2ca7ad7514f89eae0caf096423414b7d815e73.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a2ca7ad7514f89eae0caf096423414b7d815e73</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.TaskStatus">
          <source>Represents the current stage in the lifecycle of a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</source>
          <target state="translated">Représente l'étape en cours dans le cycle de vie d'une <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.TaskStatus">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Task.Status%2A?displayProperty=nameWithType&gt;</ph> property returns a member of the <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> enumeration to indicate the task's current status.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Threading.Tasks.Task.Status%2A?displayProperty=nameWithType&gt;</ph> propriété retourne un membre de la <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> énumération pour indiquer l’état actuel de la tâche.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.TaskStatus">
          <source>The following example creates 20 tasks that will loop until a counter is incremented to a value of 2 million.</source>
          <target state="translated">L’exemple suivant crée des 20 tâches en boucle jusqu'à ce qu’un compteur est incrémenté à une valeur de 2 millions.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.TaskStatus">
          <source>When the first 10 tasks reach 2 million, the cancellation token is cancelled, and any tasks whose counters have not reached 2 million are cancelled.</source>
          <target state="translated">Lorsque les 10 premières tâches atteint 2 millions, le jeton d’annulation est annulé et toutes les tâches dont les compteurs n’ont pas atteint 2 millions sont annulées.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.TaskStatus">
          <source>The example then examines the <ph id="ph1">&lt;xref:System.Threading.Tasks.Task.Status%2A?displayProperty=nameWithType&gt;</ph> property of each task to indicate whether the task has completed successfully or been cancelled.</source>
          <target state="translated">L’exemple examine ensuite le <ph id="ph1">&lt;xref:System.Threading.Tasks.Task.Status%2A?displayProperty=nameWithType&gt;</ph> propriété de chaque tâche pour indiquer si la tâche a réussi ou a été annulée.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.TaskStatus">
          <source>For those that have completed, it displays the value returned by the task.</source>
          <target state="translated">Pour ceux qui ont été effectuées, il affiche la valeur retournée par la tâche.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Threading.Tasks.TaskStatus.Canceled">
          <source>The task acknowledged cancellation by throwing an OperationCanceledException with its own CancellationToken while the token was in signaled state, or the task's CancellationToken was already signaled before the task started executing.</source>
          <target state="translated">La tâche a accepté l’annulation en levant OperationCanceledException avec son propre CancellationToken, alors que l’état du jeton était défini comme signalé ou que le CancellationToken de la tâche était déjà signalé avant le début de l’exécution de la tâche.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Threading.Tasks.TaskStatus.Canceled">
          <source>For more information, see <bpt id="p1">[</bpt>Task Cancellation<ept id="p1">](~/docs/standard/parallel-programming/task-cancellation.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, voir <bpt id="p1">[</bpt>Annulation de tâches<ept id="p1">](~/docs/standard/parallel-programming/task-cancellation.md)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Threading.Tasks.TaskStatus.Created">
          <source>The task has been initialized but has not yet been scheduled.</source>
          <target state="translated">La tâche a été initialisée mais n’a pas encore été planifiée.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Threading.Tasks.TaskStatus.Faulted">
          <source>The task completed due to an unhandled exception.</source>
          <target state="translated">Tâche terminée suite à une exception non gérée.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Threading.Tasks.TaskStatus.RanToCompletion">
          <source>The task completed execution successfully.</source>
          <target state="translated">L'exécution de la tâche s'est terminée avec succès.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Threading.Tasks.TaskStatus.Running">
          <source>The task is running but has not yet completed.</source>
          <target state="translated">La tâche est en cours d’exécution mais n’est pas encore terminée.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Threading.Tasks.TaskStatus.WaitingForActivation">
          <source>The task is waiting to be activated and scheduled internally by the .NET Framework infrastructure.</source>
          <target state="translated">La tâche attend son activation et sa planification en interne par l’infrastructure .NET Framework.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Threading.Tasks.TaskStatus.WaitingForChildrenToComplete">
          <source>The task has finished executing and is implicitly waiting for attached child tasks to complete.</source>
          <target state="translated">L'exécution de la tâche est terminée et cette dernière attend implicitement la fin des tâches enfants associées.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Threading.Tasks.TaskStatus.WaitingToRun">
          <source>The task has been scheduled for execution but has not yet begun executing.</source>
          <target state="translated">L’exécution de la tâche a été planifiée mais n’a pas encore démarré.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>