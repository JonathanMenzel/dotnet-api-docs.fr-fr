<Type Name="ConcurrentExclusiveSchedulerPair" FullName="System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b5248ad7e7e0f6bc3956cbd1431ef8db29c52bd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36606992" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConcurrentExclusiveSchedulerPair" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConcurrentExclusiveSchedulerPair extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />
  <TypeSignature Language="VB.NET" Value="Public Class ConcurrentExclusiveSchedulerPair" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConcurrentExclusiveSchedulerPair" />
  <TypeSignature Language="F#" Value="type ConcurrentExclusiveSchedulerPair = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Concurrent={ConcurrentTaskCountForDebugger}, Exclusive={ExclusiveTaskCountForDebugger}, Mode={ModeForDebugger}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.ConcurrentExclusiveSchedulerPair/DebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d72f7-101">Fournit les planificateurs de tâches qui se coordonnent pour exécuter les tâches tout en garantissant que les tâches simultanées peuvent s'exécuter simultanément et que les tâches exclusives ne s'exécutent jamais simultanément.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d72f7-101">Provides task schedulers that coordinate to execute tasks while ensuring that concurrent tasks may run concurrently and exclusive tasks never do.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d72f7-102">L’exemple suivant illustre l’utilisation de la <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair> classe.</span><span class="sxs-lookup"><span data-stu-id="d72f7-102">The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair> class.</span></span> <span data-ttu-id="d72f7-103">Lecteurs de s’exécuter sur la partie simultanée du planificateur.</span><span class="sxs-lookup"><span data-stu-id="d72f7-103">Readers run on the concurrent part of the scheduler.</span></span> <span data-ttu-id="d72f7-104">L’enregistreur s’exécute sur la partie exclusive du planificateur.</span><span class="sxs-lookup"><span data-stu-id="d72f7-104">The writer runs on the exclusive part of the scheduler.</span></span> <span data-ttu-id="d72f7-105">Cet exemple de code fait partie d’un exemple plus complet fourni pour le [Comment : spécifier un planificateur de tâches dans un Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="d72f7-105">This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]
 [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d72f7-106">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-106">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentExclusiveSchedulerPair ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentExclusiveSchedulerPair();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d72f7-107">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-107">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d72f7-108">L’exemple suivant illustre l’utilisation de la <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.%23ctor%2A> constructeur pour créer un nouveau <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair> objet.</span><span class="sxs-lookup"><span data-stu-id="d72f7-108">The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.%23ctor%2A> constructor to create a new <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair> object.</span></span> <span data-ttu-id="d72f7-109">Cet exemple de code fait partie d’un exemple plus complet fourni pour le [Comment : spécifier un planificateur de tâches dans un Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="d72f7-109">This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]
 [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler taskScheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentExclusiveSchedulerPair(System::Threading::Tasks::TaskScheduler ^ taskScheduler);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.ConcurrentExclusiveSchedulerPair : System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" Usage="new System.Threading.Tasks.ConcurrentExclusiveSchedulerPair taskScheduler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskScheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="taskScheduler">
          <span data-ttu-id="d72f7-110">Planificateur cible sur lequel cette paire doit s'exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-110">The target scheduler on which this pair should execute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d72f7-111">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> qui cible le planificateur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-111">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> class that targets the specified scheduler.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler, int maxConcurrencyLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler taskScheduler, int32 maxConcurrencyLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentExclusiveSchedulerPair(System::Threading::Tasks::TaskScheduler ^ taskScheduler, int maxConcurrencyLevel);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.ConcurrentExclusiveSchedulerPair : System.Threading.Tasks.TaskScheduler * int -&gt; System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" Usage="new System.Threading.Tasks.ConcurrentExclusiveSchedulerPair (taskScheduler, maxConcurrencyLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskScheduler" Type="System.Threading.Tasks.TaskScheduler" />
        <Parameter Name="maxConcurrencyLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="taskScheduler">
          <span data-ttu-id="d72f7-112">Planificateur cible sur lequel cette paire doit s'exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-112">The target scheduler on which this pair should execute.</span>
          </span>
        </param>
        <param name="maxConcurrencyLevel">
          <span data-ttu-id="d72f7-113">Nombre maximal de tâches à exécuter simultanément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-113">The maximum number of tasks to run concurrently.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d72f7-114">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> qui cible le planificateur spécifié avec un niveau de concurrence maximal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-114">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> class that targets the specified scheduler with a maximum concurrency level.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler, int maxConcurrencyLevel, int maxItemsPerTask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler taskScheduler, int32 maxConcurrencyLevel, int32 maxItemsPerTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentExclusiveSchedulerPair(System::Threading::Tasks::TaskScheduler ^ taskScheduler, int maxConcurrencyLevel, int maxItemsPerTask);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.ConcurrentExclusiveSchedulerPair : System.Threading.Tasks.TaskScheduler * int * int -&gt; System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" Usage="new System.Threading.Tasks.ConcurrentExclusiveSchedulerPair (taskScheduler, maxConcurrencyLevel, maxItemsPerTask)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskScheduler" Type="System.Threading.Tasks.TaskScheduler" />
        <Parameter Name="maxConcurrencyLevel" Type="System.Int32" />
        <Parameter Name="maxItemsPerTask" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="taskScheduler">
          <span data-ttu-id="d72f7-115">Planificateur cible sur lequel cette paire doit s'exécuter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-115">The target scheduler on which this pair should execute.</span>
          </span>
        </param>
        <param name="maxConcurrencyLevel">
          <span data-ttu-id="d72f7-116">Nombre maximal de tâches à exécuter simultanément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-116">The maximum number of tasks to run concurrently.</span>
          </span>
        </param>
        <param name="maxItemsPerTask">
          <span data-ttu-id="d72f7-117">Nombre maximal de tâches à traiter pour chaque tâche planifiée sous-jacente utilisée par la paire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-117">The maximum number of tasks to process for each underlying scheduled task used by the pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d72f7-118">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> qui cible le planificateur spécifié avec un niveau de concurrence maximal et un nombre maximal de tâches planifiées qui peuvent être traités en tant qu'unité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-118">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /> class that targets the specified scheduler with a maximum concurrency level and a maximum number of scheduled tasks that may be processed as a unit.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberSignature Language="F#" Value="member this.Complete : unit -&gt; unit" Usage="concurrentExclusiveSchedulerPair.Complete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d72f7-119">Informe la paire de planificateur qu'elle ne doit plus accepter de tâches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-119">Informs the scheduler pair that it should not accept any more tasks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d72f7-120">Appel de <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete%2A> est facultatif.</span><span class="sxs-lookup"><span data-stu-id="d72f7-120">Calling <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete%2A> is optional.</span></span> <span data-ttu-id="d72f7-121">Il n’est nécessaire uniquement si vous faites confiance le <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion%2A> propriété pour la notification que tout le traitement a été effectuée.</span><span class="sxs-lookup"><span data-stu-id="d72f7-121">It is necessary only if you're relying on the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion%2A> property for notification that all processing has been completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d72f7-122">Obtient une <see cref="T:System.Threading.Tasks.Task" /> qui ne se termine lorsque le planificateur est achevé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-122">Gets a <see cref="T:System.Threading.Tasks.Task" /> that will complete when the scheduler has completed processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d72f7-123">Opération asynchrone qui se termine lorsque le planificateur termine le traitement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-123">The asynchronous operation that will complete when the scheduler finishes processing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrentScheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler ConcurrentScheduler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler ConcurrentScheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConcurrentScheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ ConcurrentScheduler { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConcurrentScheduler : System.Threading.Tasks.TaskScheduler" Usage="System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d72f7-124">Obtient un <see cref="T:System.Threading.Tasks.TaskScheduler" /> qui peut être utilisé pour planifier des tâches à cette paire qui peut s'exécuter simultanément avec d'autres tâches sur cette paire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-124">Gets a <see cref="T:System.Threading.Tasks.TaskScheduler" /> that can be used to schedule tasks to this pair that may run concurrently with other tasks on this pair.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d72f7-125">Objet qui peut être utilisé pour planifier des tâches simultanément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-125">An object that can be used to schedule tasks concurrently.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d72f7-126">L’exemple suivant illustre l’utilisation de la <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler%2A> propriété pour exécuter un lecteur.</span><span class="sxs-lookup"><span data-stu-id="d72f7-126">The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler%2A> property to run a reader.</span></span> <span data-ttu-id="d72f7-127">Cet exemple de code fait partie d’un exemple plus complet fourni pour le [Comment : spécifier un planificateur de tâches dans un Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="d72f7-127">This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]
 [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveScheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler ExclusiveScheduler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler ExclusiveScheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExclusiveScheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ ExclusiveScheduler { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveScheduler : System.Threading.Tasks.TaskScheduler" Usage="System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d72f7-128">Obtient un <see cref="T:System.Threading.Tasks.TaskScheduler" /> qui peut être utilisé pour planifier des tâches à cette paire qui doit s'exécuter de manière exclusive par rapport à d'autres tâches sur cette paire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-128">Gets a <see cref="T:System.Threading.Tasks.TaskScheduler" /> that can be used to schedule tasks to this pair that must run exclusively with regards to other tasks on this pair.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d72f7-129">Objet qui peut être utilisé pour planifier les tâches qui ne sont pas exécutés simultanément avec d'autres tâches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d72f7-129">An object that can be used to schedule tasks that do not run concurrently with other tasks.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d72f7-130">L’exemple suivant illustre l’utilisation de la <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler%2A> propriété pour exécuter un writer.</span><span class="sxs-lookup"><span data-stu-id="d72f7-130">The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler%2A> property to run a writer.</span></span> <span data-ttu-id="d72f7-131">Cet exemple de code fait partie d’un exemple plus complet fourni pour le [Comment : spécifier un planificateur de tâches dans un Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="d72f7-131">This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]
 [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>