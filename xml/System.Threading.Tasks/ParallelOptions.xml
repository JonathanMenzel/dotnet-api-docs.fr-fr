<Type Name="ParallelOptions" FullName="System.Threading.Tasks.ParallelOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47d80a70cbbd4bd17560003c948e41ca31dca239" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36606456" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ParallelOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ParallelOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ParallelOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParallelOptions" />
  <TypeSignature Language="F#" Value="type ParallelOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stocke des options qui configurent l'opération de méthodes sur la classe <see cref="T:System.Threading.Tasks.Parallel" />.</summary>
    <remarks>To be added.</remarks>
    <threadsafe>Le constructeur est thread-safe et peut-être être utilisé simultanément par plusieurs threads pour construire plusieurs instances. Aucun des autres membres publics sont thread-safe.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ParallelOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise l’instance avec les valeurs par défaut. <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> est initialisé à -1, ce qui signifie qu’il n’existe aucune limite supérieure définissant le parallélisme à employer. <xref:System.Threading.Tasks.ParallelOptions.CancellationToken%2A> est initialisé sur un jeton non annulable, et <xref:System.Threading.Tasks.ParallelOptions.TaskScheduler%2A> est initialisé sur le planificateur par défaut (TaskScheduler.Default).  
  
 Toutes ces valeurs par défaut peuvent être remplacées à l’aide d’accesseurs set de propriété sur l’instance.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property CancellationToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); void set(System::Threading::CancellationToken value); };" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken with get, set" Usage="System.Threading.Tasks.ParallelOptions.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Threading.CancellationToken" /> associé à cette instance <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
        <value>Jeton associé à cette instance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En fournissant un <xref:System.Threading.CancellationToken> à un <xref:System.Threading.Tasks.Parallel> méthode permet à l’opération d’être arrêtée tôt. Le code externe à l’opération peut annuler le jeton, et si l’opération observe le jeton défini, il peut s’arrêter prématurément en levant une <xref:System.OperationCanceledException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDegreeOfParallelism">
      <MemberSignature Language="C#" Value="public int MaxDegreeOfParallelism { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDegreeOfParallelism" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDegreeOfParallelism As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDegreeOfParallelism { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDegreeOfParallelism : int with get, set" Usage="System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nombre maximal de tâches simultanées activées par cette instance <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
        <value>Entier qui représente le degré maximal de parallélisme.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> propriété affecte le nombre d’opérations simultanées exécuté par <xref:System.Threading.Tasks.Parallel> des appels de méthode qui sont passés à cette <xref:System.Threading.Tasks.ParallelOptions> instance. Une valeur de propriété positif limite le nombre d’opérations simultanées à la valeur définie. S’il est -1, il n’existe aucune limite sur le nombre d’opérations exécutées simultanément.  
  
 Par défaut, <xref:System.Threading.Tasks.Parallel.For%2A> et <xref:System.Threading.Tasks.Parallel.ForEach%2A> utilisent toutefois le nombre de threads fournit le planificateur sous-jacent, modification <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> à partir de la valeur par défaut seulement limite le nombre de tâches simultané sera utilisé.  
  
 En règle générale, vous n’avez pas besoin de modifier ce paramètre. Toutefois, vous pouvez choisir de définir explicitement dans les scénarios d’utilisation avancées telles que celles-ci :  
  
-   Lorsque vous savez qu’un algorithme particulier que vous utilisez ne sera pas mise à l’échelle au-delà d’un certain nombre de cœurs. Vous pouvez définir la propriété pour éviter de gaspiller des cycles sur les cœurs supplémentaires.  
  
-   Lorsque vous exécutez simultanément plusieurs algorithmes et que vous voulez définir manuellement la quantité du système chaque algorithme peut utiliser. Vous pouvez définir un <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> valeur pour chacun.  
  
-   Lorsque l’heuristique du pool de threads est impossible de déterminer le nombre approprié de threads à utiliser et pourrait finir injection trop de threads. Par exemple, dans les itérations de corps de boucle longue, le pool de threads n’est peut-être pas en mesure de faire la différence entre les cours raisonnable ou verrou actif ou un interblocage et ne peut pas être en mesure de libérer les threads qui ont été ajoutés pour améliorer les performances. Dans ce cas, vous pouvez définir la propriété pour vous assurer que vous n’utilisez pas un nombre raisonnable de threads.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Une valeur égale à 0 ou inférieure à -1 est assignée à la propriété.</exception>
      </Docs>
    </Member>
    <Member MemberName="TaskScheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler TaskScheduler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler TaskScheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.TaskScheduler" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskScheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ TaskScheduler { System::Threading::Tasks::TaskScheduler ^ get(); void set(System::Threading::Tasks::TaskScheduler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TaskScheduler : System.Threading.Tasks.TaskScheduler with get, set" Usage="System.Threading.Tasks.ParallelOptions.TaskScheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Threading.Tasks.TaskScheduler" /> associé à cette instance <see cref="T:System.Threading.Tasks.ParallelOptions" />. L'affectation de la valeur null à cette propriété indique que le planificateur actuel doit être utilisé.</summary>
        <value>Planificateur de tâches associé à cette instance.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>