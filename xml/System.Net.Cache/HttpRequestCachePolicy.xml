<Type Name="HttpRequestCachePolicy" FullName="System.Net.Cache.HttpRequestCachePolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2765c8c0d8f6d2510303adde3f7f0925627d5365" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36476752" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpRequestCachePolicy : System.Net.Cache.RequestCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpRequestCachePolicy extends System.Net.Cache.RequestCachePolicy" />
  <TypeSignature Language="DocId" Value="T:System.Net.Cache.HttpRequestCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpRequestCachePolicy&#xA;Inherits RequestCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestCachePolicy : System::Net::Cache::RequestCachePolicy" />
  <TypeSignature Language="F#" Value="type HttpRequestCachePolicy = class&#xA;    inherit RequestCachePolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Cache.RequestCachePolicy</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Définit les exigences de mise en cache d'une application pour des ressources obtenues à l'aide d'objets <see cref="T:System.Net.HttpWebRequest" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez spécifier une stratégie de cache par défaut pour votre application en utilisant le <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> propriété ou l’ordinateur ou l’application des fichiers de configuration. Pour plus d’informations, consultez [ &lt;requestCaching&gt; élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md).  
  
 Vous pouvez spécifier la stratégie de cache pour une demande à l’aide de la <xref:System.Net.WebRequest.CachePolicy%2A> propriété.  
  
 La mise en cache pour les services Web n’est pas pris en charge.  
  
   
  
## Examples  
 L’exemple de code suivant crée une stratégie de cache par défaut pour le domaine d’application et substitue à elle pour une demande.  
  
 [!code-cpp[NclSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NclSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la propriété <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> à la valeur <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la définition la stratégie de cache à l’aide de ce constructeur.  
  
 [!code-cpp[NclSimpleCache#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#11)]
 [!code-csharp[NclSimpleCache#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (DateTime cacheSyncDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime cacheSyncDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheSyncDate As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(DateTime cacheSyncDate);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : DateTime -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy cacheSyncDate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheSyncDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="cacheSyncDate">Objet <see cref="T:System.DateTime" /> qui spécifie l'heure à laquelle les ressources stockées dans le cache doivent être revalidées.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> avec la date de synchronisation de cache spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La date de synchronisation du cache vous permet de spécifier une date fixe à laquelle le contenu en cache doit être revalidé. Si l’entrée du cache a été revalidée dernière avant la date de synchronisation du cache, la revalidation avec le serveur se produit. Si l’entrée du cache a été revalidée après la date de synchronisation du cache et il n’existe aucune exigence de revalidation de serveur qui rend l’entrée mise en cache non valides, l’entrée du cache est utilisée. Si la date de synchronisation du cache est définie à une date ultérieure, l’entrée est revalidée à chaque nouvelle requête jusqu’à ce que la date de synchronisation du cache soit atteinte.  
  
 Ce constructeur initialise la propriété <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> à la valeur <xref:System.Net.Cache.HttpRequestCacheLevel.Default>. La propriété <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> est initialisée à `cacheSyncDate`.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la création d’une stratégie de cache basée sur une date de synchronisation du cache.  
  
 [!code-cpp[NclSimpleCache#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#3)]
 [!code-csharp[NclSimpleCache#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpRequestCacheLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpRequestCacheLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (level As HttpRequestCacheLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpRequestCacheLevel level);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpRequestCacheLevel -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy level" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="level" Type="System.Net.Cache.HttpRequestCacheLevel" />
      </Parameters>
      <Docs>
        <param name="level">Valeur <see cref="T:System.Net.Cache.HttpRequestCacheLevel" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> avec la stratégie de cache spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la propriété <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> à la valeur `level`.  
  
 Le <xref:System.Net.Cache.HttpRequestCacheLevel> valeur contrôle si la mise en cache est activée, et lorsque le cache peut être utilisé. Pour plus d’informations, consultez le <xref:System.Net.Cache.HttpRequestCacheLevel> documentation.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la création d’une stratégie de cache qui permet de trouver des ressources dans le cache à utiliser à partir du cache.  
  
 [!code-cpp[NclSimpleCache#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#12)]
 [!code-csharp[NclSimpleCache#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan ageOrFreshOrStale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, ageOrFreshOrStale As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, ageOrFreshOrStale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="ageOrFreshOrStale" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">Une des valeurs d'énumération <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> suivantes : <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxAge" />, <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxStale" /> ou <see cref="F:System.Net.Cache.HttpCacheAgeControl.MinFresh" />.</param>
        <param name="ageOrFreshOrStale">Valeur <see cref="T:System.TimeSpan" /> qui spécifie une durée.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> en utilisant les valeurs de date et de contrôle d'âge spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `cacheAgeControl` valeur définit la signification de la `ageOrFreshOrStale` la valeur du paramètre et est utilisée pour définir la propriété associée. Par exemple, lorsque vous spécifiez <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>, le <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> est définie sur la valeur de le `ageOrFreshOrStale` paramètre.  
  
 Ce constructeur initialise la propriété <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> à la valeur <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la création d’une stratégie de cache basée sur actualisation minimale.  
  
 [!code-cpp[NclSimpleCache#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#5)]
 [!code-csharp[NclSimpleCache#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La valeur spécifiée pour le paramètre <paramref name="cacheAgeControl" /> ne peut pas être utilisée avec ce constructeur.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan maxAge, valuetype System.TimeSpan freshOrStale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, maxAge As TimeSpan, freshOrStale As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan * TimeSpan -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, maxAge, freshOrStale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">Valeur <see cref="T:System.Net.Cache.HttpCacheAgeControl" />.</param>
        <param name="maxAge">Valeur <see cref="T:System.TimeSpan" /> qui spécifie l'âge maximal des ressources.</param>
        <param name="freshOrStale">Valeur <see cref="T:System.TimeSpan" /> qui spécifie une durée.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> à l'aide de l'âge maximal, de la valeur de contrôle d'âge et de la valeur temporelle spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `cacheAgeControl` valeur est utilisée pour interpréter la signification de la `freshOrStale` valeur de paramètre et définir la propriété associée. Par exemple, lorsque vous spécifiez <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>, le <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> est définie sur la valeur de le `freshOrStale` paramètre. Lorsque vous spécifiez <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale>, le <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> est définie à l’aide de la valeur de la `maxAge` paramètre et le <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> est définie à l’aide de la valeur de le `freshOrStale` paramètre.  
  
 Notez que, sauf si vous spécifiez <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> ou <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh>, le <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> propriété n’est pas définie.  
  
 Ce constructeur initialise la propriété <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> à la valeur <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la création d’une stratégie de cache basée sur actualisation minimale et l’âge maximal.  
  
 [!code-cpp[NclSimpleCache#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#9)]
 [!code-csharp[NclSimpleCache#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La valeur spécifiée pour le paramètre <paramref name="cacheAgeControl" /> n'est pas valide.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan maxAge, valuetype System.TimeSpan freshOrStale, valuetype System.DateTime cacheSyncDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, maxAge As TimeSpan, freshOrStale As TimeSpan, cacheSyncDate As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan * TimeSpan * DateTime -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, maxAge, freshOrStale, cacheSyncDate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" />
        <Parameter Name="cacheSyncDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">Valeur <see cref="T:System.Net.Cache.HttpCacheAgeControl" />.</param>
        <param name="maxAge">Valeur <see cref="T:System.TimeSpan" /> qui spécifie l'âge maximal des ressources.</param>
        <param name="freshOrStale">Valeur <see cref="T:System.TimeSpan" /> qui spécifie une durée.</param>
        <param name="cacheSyncDate">Objet <see cref="T:System.DateTime" /> qui spécifie l'heure à laquelle les ressources stockées dans le cache doivent être revalidées.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> à l'aide de l'âge maximal, de la valeur de contrôle d'âge, de la valeur temporelle et de la date de synchronisation du cache spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `cacheAgeControl` valeur est utilisée pour interpréter la signification de la `freshOrStale` valeur de paramètre et définir la propriété associée. Par exemple, lorsque vous spécifiez <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>, le <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> est définie sur la valeur de le `freshOrStale` paramètre. Lorsque vous spécifiez <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale>, le <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> est définie à l’aide de la valeur de la `maxAge` paramètre et le <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> est définie à l’aide de la valeur de le `freshOrStale` paramètre.  
  
 Notez que, sauf si vous spécifiez <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> ou <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh>, le <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> propriété n’est pas définie.  
  
 Ce constructeur initialise la <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> propriété `cacheSyncDate`et initialise le <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> propriété <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la création d’une stratégie de cache basée sur actualisation minimale, l’âge maximal et une date de synchronisation du cache.  
  
 [!code-cpp[NclSimpleCache#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#10)]
 [!code-csharp[NclSimpleCache#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheSyncDate">
      <MemberSignature Language="C#" Value="public DateTime CacheSyncDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CacheSyncDate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheSyncDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CacheSyncDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheSyncDate : DateTime" Usage="System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la date de synchronisation du cache pour cette instance.</summary>
        <value>Valeur <see cref="T:System.DateTime" /> définie à la date spécifiée quand cette instance a été créée. Si aucune date n'a été spécifiée, la valeur de cette propriété est <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La date de synchronisation du cache vous permet de spécifier une date fixe à laquelle le contenu en cache doit être revalidé. Si l’entrée du cache a été revalidée dernière avant la date de synchronisation du cache, la revalidation avec le serveur se produit. Si l’entrée du cache a été revalidée après la date de synchronisation du cache et il n’existe aucune exigence de revalidation de serveur qui rend l’entrée mise en cache non valides, l’entrée du cache est utilisée. Si la date de synchronisation du cache est définie à une date ultérieure, l’entrée est revalidée à chaque nouvelle requête jusqu’à ce que la date de synchronisation du cache soit atteinte.  
  
   
  
## Examples  
 L’exemple de code suivant affiche la valeur de cette propriété.  
  
 [!code-cpp[NclSimpleCache#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#3)]
 [!code-csharp[NclSimpleCache#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Net.Cache.HttpRequestCacheLevel Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Cache.HttpRequestCacheLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As HttpRequestCacheLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::HttpRequestCacheLevel Level { System::Net::Cache::HttpRequestCacheLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Net.Cache.HttpRequestCacheLevel" Usage="System.Net.Cache.HttpRequestCachePolicy.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> qui a été spécifiée lors de la création de cette instance.</summary>
        <value>Valeur de <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> qui spécifie le comportement de cache pour les ressources qui ont été obtenues à l'aide d'objets <see cref="T:System.Net.HttpWebRequest" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les applications utilisent généralement <xref:System.Net.Cache.HttpRequestCacheLevel.Default> comme niveau de stratégie de cache. Le <xref:System.Net.WebRequest.CachePolicy%2A> si une propriété, pas `null`, détermine la stratégie de cache en vigueur pour une demande. La stratégie par défaut pour le domaine d’application peut être définie à l’aide de la <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> propriété ou par les paramètres de l’ordinateur ou les fichiers de configuration d’application. Pour plus d’informations, consultez [ &lt;requestCaching&gt; élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.  
  
 [!code-cpp[NclSimpleCache#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#11)]
 [!code-csharp[NclSimpleCache#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAge">
      <MemberSignature Language="C#" Value="public TimeSpan MaxAge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxAge" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxAge As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxAge { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxAge : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MaxAge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'âge maximal autorisé pour une ressource retournée à partir du cache.</summary>
        <value>Valeur <see cref="T:System.TimeSpan" /> définie à la valeur d'âge maximale spécifiée quand cette instance a été créée. Si aucune date n'a été spécifiée, la valeur de cette propriété est <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la copie mise en cache de la ressource est antérieure à la valeur d’heure spécifiée, la ressource doit être revalidée. La valeur de cette propriété est spécifiée lors de l’instance est créée.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.  
  
 [!code-cpp[NclSimpleCache#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#7)]
 [!code-csharp[NclSimpleCache#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxStale">
      <MemberSignature Language="C#" Value="public TimeSpan MaxStale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxStale" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxStale As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxStale { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxStale : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MaxStale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur de péremption maximale qui est autorisée pour une ressource retournée à partir du cache.</summary>
        <value>Valeur <see cref="T:System.TimeSpan" /> définie à la valeur de péremption maximale spécifiée quand cette instance a été créée. Si aucune date n'a été spécifiée, la valeur de cette propriété est <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété spécifie la quantité de temps après l’expiration du contenu pendant laquelle la copie mise en cache de la ressource est acceptable. La valeur de cette propriété est spécifiée lors de l’instance est créée.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.  
  
 [!code-cpp[NclSimpleCache#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#6)]
 [!code-csharp[NclSimpleCache#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinFresh">
      <MemberSignature Language="C#" Value="public TimeSpan MinFresh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MinFresh" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinFresh As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MinFresh { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MinFresh : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MinFresh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la nouveauté minimale qui est autorisée pour une ressource retournée à partir du cache.</summary>
        <value>Valeur <see cref="T:System.TimeSpan" /> qui spécifie la nouveauté minimale spécifiée quand cette instance a été créée. Si aucune date n'a été spécifiée, la valeur de cette propriété est <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette valeur spécifie la durée avant expiration du contenu pendant laquelle la copie mise en cache de la ressource est acceptable. La valeur de cette propriété est spécifiée lors de l’instance est créée.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’affichage de la valeur de cette propriété.  
  
 [!code-cpp[NclSimpleCache#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#5)]
 [!code-csharp[NclSimpleCache#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="httpRequestCachePolicy.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une représentation sous forme de chaîne de cette instance.</summary>
        <returns>Valeur <see cref="T:System.String" /> qui contient les valeurs de propriété pour cette instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chaîne contient une étiquette qui identifie la propriété, suivie du signe deux-points (« : ») et la valeur. Les propriétés sont séparées par un espace unique.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appeler cette méthode.  
  
 [!code-cpp[NclSimpleCache#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#1)]
 [!code-csharp[NclSimpleCache#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>