<Type Name="DSACryptoServiceProvider" FullName="System.Security.Cryptography.DSACryptoServiceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="33512625a99610ed0fa15f42e883b445c06c47e7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DSACryptoServiceProvider : System.Security.Cryptography.DSA, System.Security.Cryptography.ICspAsymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DSACryptoServiceProvider extends System.Security.Cryptography.DSA implements class System.Security.Cryptography.ICspAsymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DSACryptoServiceProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DSACryptoServiceProvider&#xA;Inherits DSA&#xA;Implements ICspAsymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class DSACryptoServiceProvider sealed : System::Security::Cryptography::DSA, System::Security::Cryptography::ICspAsymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DSA</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICspAsymmetricAlgorithm</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0c101-101">Définit un objet de wrapper pour accéder à l'implémentation du fournisseur de services de chiffrement (CSP) de l'algorithme <see cref="T:System.Security.Cryptography.DSA" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c101-101">Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <see cref="T:System.Security.Cryptography.DSA" /> algorithm.</span>
      </span>
      <span data-ttu-id="0c101-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c101-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c101-103">Vous pouvez utiliser la <xref:System.Security.Cryptography.DSACryptoServiceProvider> classe pour créer des signatures numériques et protéger l’intégrité de vos données.</span><span class="sxs-lookup"><span data-stu-id="0c101-103">You can use the <xref:System.Security.Cryptography.DSACryptoServiceProvider> class to create digital signatures and protect the integrity of your data.</span></span>  
  
 <span data-ttu-id="0c101-104">Pour utiliser un système de clé publique pour signer numériquement un message, l’expéditeur applique d’abord une fonction de hachage au message pour créer un résumé du message.</span><span class="sxs-lookup"><span data-stu-id="0c101-104">To use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</span></span> <span data-ttu-id="0c101-105">L’expéditeur chiffre ensuite le résumé du message avec la clé privée de l’expéditeur pour créer la signature personnelle de l’expéditeur.</span><span class="sxs-lookup"><span data-stu-id="0c101-105">The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</span></span> <span data-ttu-id="0c101-106">Lorsqu’il reçoit le message et la signature, le destinataire déchiffre la signature à l’aide de la clé publique de l’expéditeur pour récupérer le condensat du message et hache le message en utilisant le même algorithme de hachage utilisé par l’expéditeur.</span><span class="sxs-lookup"><span data-stu-id="0c101-106">Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</span></span> <span data-ttu-id="0c101-107">Si la synthèse du message que le destinataire traite correspond exactement au digest du message reçu de l’expéditeur, le récepteur peut être sûr que le message n’a pas été modifié en transit.</span><span class="sxs-lookup"><span data-stu-id="0c101-107">If the message digest that the receiver computes exactly matches the message digest received from the sender, the receiver can be sure that the message was not altered while in transit.</span></span> <span data-ttu-id="0c101-108">Notez qu’une signature peut être vérifiée par n’importe qui, car la clé publique de l’expéditeur est connue.</span><span class="sxs-lookup"><span data-stu-id="0c101-108">Note that a signature can be verified by anyone, because the sender's public key is common knowledge.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c101-109">Les algorithmes asymétriques plus récents sont disponibles.</span><span class="sxs-lookup"><span data-stu-id="0c101-109">Newer asymmetric algorithms are available.</span></span> <span data-ttu-id="0c101-110">Envisagez d’utiliser le <xref:System.Security.Cryptography.RSACryptoServiceProvider> classe au lieu du <xref:System.Security.Cryptography.DSACryptoServiceProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="0c101-110">Consider using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class instead of the <xref:System.Security.Cryptography.DSACryptoServiceProvider> class.</span></span> <span data-ttu-id="0c101-111">Utilisez <xref:System.Security.Cryptography.DSACryptoServiceProvider> uniquement pour la compatibilité avec les applications héritées et des données.</span><span class="sxs-lookup"><span data-stu-id="0c101-111">Use <xref:System.Security.Cryptography.DSACryptoServiceProvider> only for compatibility with legacy applications and data.</span></span>  
  
 <span data-ttu-id="0c101-112">Cet algorithme prend en charge des longueurs de clé allant de 512 bits à 1 024 bits par incréments de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="0c101-112">This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c101-113">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c101-114">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0c101-115">pour avoir la possibilité d’appeler du code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-115">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="0c101-116">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-116">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider (int dwKeySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwKeySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwKeySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider(int dwKeySize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwKeySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwKeySize">
          <span data-ttu-id="0c101-117">Taille de la clé utilisée par l'algorithme asymétrique en bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-117">The size of the key for the asymmetric algorithm in bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-118">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> avec la taille de clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified key size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0c101-119">pour avoir la possibilité d’appeler du code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-119">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="0c101-120">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-120">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider (System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider(System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="0c101-121">Paramètres pour le CSP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-121">The parameters for the CSP.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-122">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> avec les paramètres spécifiés pour le fournisseur de services de chiffrement (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified parameters for the cryptographic service provider (CSP).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0c101-123">pour avoir la possibilité d’appeler du code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-123">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="0c101-124">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-124">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider (int dwKeySize, System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwKeySize, class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwKeySize As Integer, parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider(int dwKeySize, System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwKeySize" Type="System.Int32" />
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="dwKeySize">
          <span data-ttu-id="0c101-125">Taille de la clé utilisée par l'algorithme de chiffrement en bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-125">The size of the key for the cryptographic algorithm in bits.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="0c101-126">Paramètres pour le CSP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-126">The parameters for the CSP.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-127">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> avec la taille de clé et les paramètres spécifiés pour le fournisseur de services de chiffrement (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-127">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified key size and parameters for the cryptographic service provider (CSP).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0c101-128">Impossible d’acquérir le fournisseur de services de chiffrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-128">The CSP cannot be acquired.</span>
          </span>
          <span data-ttu-id="0c101-129">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-129">-or-</span>
          </span>
          <span data-ttu-id="0c101-130">Impossible de créer la clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-130">The key cannot be created.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0c101-131">
            <paramref name="dwKeySize" /> est hors limites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-131">
              <paramref name="dwKeySize" /> is out of range.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0c101-132">pour avoir la possibilité d’appeler du code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-132">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="0c101-133">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-133">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateSignature">
      <MemberSignature Language="C#" Value="public override byte[] CreateSignature (byte[] rgbHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] CreateSignature(unsigned int8[] rgbHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.CreateSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSignature (rgbHash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ CreateSignature(cli::array &lt;System::Byte&gt; ^ rgbHash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="0c101-134">Données à signer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-134">The data to be signed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-135">Crée la signature <see cref="T:System.Security.Cryptography.DSA" /> pour les données spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-135">Creates the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c101-136">Signature numérique pour les données spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-136">The digital signature for the specified data.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CspKeyContainerInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CspKeyContainerInfo As CspKeyContainerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspKeyContainerInfo ^ CspKeyContainerInfo { System::Security::Cryptography::CspKeyContainerInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspKeyContainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c101-137">Obtient un objet <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> qui comprend des informations supplémentaires concernant une paire de clés de chiffrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-137">Gets a <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> object that describes additional information about a cryptographic key pair.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c101-138">Objet <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> qui comprend des informations supplémentaires concernant une paire de clés de chiffrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-138">A <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> object that describes additional information about a cryptographic key pair.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c101-139">Utilisez le <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> propriété à récupérer des informations supplémentaires sur une paire de clés de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="0c101-139">Use the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property to retrieve additional information about a cryptographic key pair.</span></span>  <span data-ttu-id="0c101-140">Retourné <xref:System.Security.Cryptography.CspKeyContainerInfo> objet décrit si la clé est exportable et spécifie le nom du conteneur de clé, d’informations sur le fournisseur et d’autres informations.</span><span class="sxs-lookup"><span data-stu-id="0c101-140">The returned <xref:System.Security.Cryptography.CspKeyContainerInfo> object describes whether the key is exportable, and specifies the key container name, information about the provider, and other information.</span></span>  
  
 <span data-ttu-id="0c101-141">Dans les cas où une clé aléatoire est générée, un conteneur de clé ne sera pas créé jusqu'à ce que vous appelez une méthode qui utilise la clé.</span><span class="sxs-lookup"><span data-stu-id="0c101-141">In cases where a random key is generated, a key container will not be created until you call a method that uses the key.</span></span>  <span data-ttu-id="0c101-142">Certaines propriétés de la <xref:System.Security.Cryptography.CspKeyContainerInfo> objet retourné par la <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> propriété lèvera une <xref:System.Security.Cryptography.CryptographicException> si un conteneur de clé n’a pas été créé.</span><span class="sxs-lookup"><span data-stu-id="0c101-142">Some properties of the <xref:System.Security.Cryptography.CspKeyContainerInfo> object returned by the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property will throw a <xref:System.Security.Cryptography.CryptographicException> if a key container has not been created.</span></span>  <span data-ttu-id="0c101-143">Pour vous assurer qu’un conteneur de clé a été créé, appelez une méthode telle que <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A>, et ainsi de suite, avant d’appeler le <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0c101-143">To make sure that a key container has been created, call a method such as <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A>, and so on, before you call the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportCspBlob">
      <MemberSignature Language="C#" Value="public byte[] ExportCspBlob (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ExportCspBlob(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportCspBlob (includePrivateParameters As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ExportCspBlob(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="0c101-144">
            <see langword="true" /> pour inclure la clé privée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-144">
              <see langword="true" /> to include the private key; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-145">Exporte un blob qui contient les informations de clés associées à un objet <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-145">Exports a blob containing the key information associated with a <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c101-146">Tableau d'octets qui contient les informations de clés associées à un objet <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-146">A byte array containing the key information associated with a <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c101-147">Le <xref:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob%2A> méthode retourne un objet blob contenant les informations de clé qui sont compatibles avec l’API Microsoft Cryptographic API (CAPI) non managée.</span><span class="sxs-lookup"><span data-stu-id="0c101-147">The <xref:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob%2A> method returns a blob containing key information that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="0c101-148">autorisation d’accéder à un conteneur de clé lors de l’exportation d’une clé privée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-148">for permission to access a key container when exporting a private key.</span>
          </span>
          <span data-ttu-id="0c101-149">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-149">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="0c101-150">Énumération associée : <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-150">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.DSAParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.DSAParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As DSAParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::DSAParameters ExportParameters(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSAParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="0c101-151">
            <see langword="true" /> pour inclure les paramètres privés ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-151">
              <see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-152">Exporte l’élément <see cref="T:System.Security.Cryptography.DSAParameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-152">Exports the <see cref="T:System.Security.Cryptography.DSAParameters" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c101-153">Paramètres pour <see cref="T:System.Security.Cryptography.DSA" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-153">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0c101-154">Impossible d’exporter la clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-154">The key cannot be exported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="0c101-155">pour l’autorisation d’exporter une clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-155">for permission to export a key.</span>
          </span>
          <span data-ttu-id="0c101-156">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-156">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="0c101-157">Énumération associée : <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-157">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DSACryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!DSACryptoServiceProvider ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportCspBlob">
      <MemberSignature Language="C#" Value="public void ImportCspBlob (byte[] keyBlob);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportCspBlob(unsigned int8[] keyBlob) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportCspBlob (keyBlob As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ImportCspBlob(cli::array &lt;System::Byte&gt; ^ keyBlob);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBlob" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keyBlob">
          <span data-ttu-id="0c101-158">Tableau d'octets qui représente un blob de clés DSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-158">A byte array that represents a DSA key blob.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-159">Importe un blob qui représente les informations relatives aux clés DSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-159">Imports a blob that represents DSA key information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c101-160">Le <xref:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob%2A> méthode initialise les données de clé d’un <xref:System.Security.Cryptography.DSACryptoServiceProvider> de l’objet à l’aide d’un objet blob qui est compatible avec l’API Microsoft Cryptographic API (CAPI) non managée.</span><span class="sxs-lookup"><span data-stu-id="0c101-160">The <xref:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob%2A> method initializes the key data of a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object using a blob that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="0c101-161">autorisation d’accéder à un conteneur de clé lors de l’importation d’une clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-161">for permission to access a key container when importing a key.</span>
          </span>
          <span data-ttu-id="0c101-162">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-162">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="0c101-163">Énumération associée : <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-163">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.DSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.DSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As DSAParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::DSAParameters parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="0c101-164">Paramètres pour <see cref="T:System.Security.Cryptography.DSA" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-164">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-165">Importe le <see cref="T:System.Security.Cryptography.DSAParameters" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-165">Imports the specified <see cref="T:System.Security.Cryptography.DSAParameters" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0c101-166">Le fournisseur de services de chiffrement ne peut pas être acquis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-166">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="0c101-167">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-167">-or-</span>
          </span>
          <span data-ttu-id="0c101-168">Le <paramref name="parameters" /> paramètre a des champs manquants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-168">The <paramref name="parameters" /> parameter has missing fields.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="0c101-169">pour l’autorisation d’importer une clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-169">for permission to import a key.</span>
          </span>
          <span data-ttu-id="0c101-170">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-170">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="0c101-171">Énumération associée : <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-171">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public override string KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyExchangeAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c101-172">Obtient le nom de l'algorithme d'échange de clés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-172">Gets the name of the key exchange algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c101-173">Nom de l'algorithme d'échange de clés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-173">The name of the key exchange algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c101-174">Obtient la taille de la clé utilisée par l'algorithme asymétrique en bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-174">Gets the size of the key used by the asymmetric algorithm in bits.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c101-175">Taille de la clé utilisée par l'algorithme asymétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-175">The size of the key used by the asymmetric algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c101-176">Cet algorithme prend en charge des longueurs de clé allant de 512 bits à 1 024 bits par incréments de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="0c101-176">This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</span></span>  
  
 <span data-ttu-id="0c101-177">Le <xref:System.Security.Cryptography.DSACryptoServiceProvider> classe ne vous permet pas de modifier la taille de clé à l’aide de la <xref:System.Security.Cryptography.DSACryptoServiceProvider.KeySize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0c101-177">The <xref:System.Security.Cryptography.DSACryptoServiceProvider> class does not allow you to change key sizes using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.KeySize%2A> property.</span></span>  <span data-ttu-id="0c101-178">Toute valeur écrite dans cette propriété ne sera pas mise à jour de la propriété sans erreur.</span><span class="sxs-lookup"><span data-stu-id="0c101-178">Any value written to this property will fail to update the property without error.</span></span>  <span data-ttu-id="0c101-179">Pour modifier la taille de clé, utilisez une des surcharges de constructeur.</span><span class="sxs-lookup"><span data-stu-id="0c101-179">To change the key size, use one of the constructor overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistKeyInCsp">
      <MemberSignature Language="C#" Value="public bool PersistKeyInCsp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistKeyInCsp" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistKeyInCsp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistKeyInCsp { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c101-180">Obtient ou définit une valeur qui indique si la clé doit être persistante dans le fournisseur de services de chiffrement (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-180">Gets or sets a value indicating whether the key should be persisted in the cryptographic service provider (CSP).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c101-181">
            <see langword="true" /> si la clé doit être persistante dans le CSP ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-181">
              <see langword="true" /> if the key should be persisted in the CSP; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c101-182">Utilisez cette propriété lorsque vous souhaitez conserver une clé dans un conteneur de clé.</span><span class="sxs-lookup"><span data-stu-id="0c101-182">Use this property when you want to persist a key in a key container.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry">
          <span data-ttu-id="0c101-183">pour l’autorisation de supprimer une clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-183">for permission to delete a key.</span>
          </span>
          <span data-ttu-id="0c101-184">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-184">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="0c101-185">Énumération associée : <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-185">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /></span>
          </span>
          <span data-ttu-id="0c101-186">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-186">-or-</span>
          </span>
          <span data-ttu-id="0c101-187">autorisation de créer une clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-187">for permission to create a key.</span>
          </span>
          <span data-ttu-id="0c101-188">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-188">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="0c101-189">Énumération associée : <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-189">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PublicOnly">
      <MemberSignature Language="C#" Value="public bool PublicOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PublicOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PublicOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c101-190">Obtient une valeur qui indique si l’objet <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> contient uniquement une clé publique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-190">Gets a value that indicates whether the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object contains only a public key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c101-191">
            <see langword="true" /> si l’objet <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> contient uniquement une clé publique ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-191">
              <see langword="true" /> if the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object contains only a public key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c101-192">La <xref:System.Security.Cryptography.DSACryptoServiceProvider> classe peut être initialisée avec une clé publique seule ou avec les deux un public et privée la clé.</span><span class="sxs-lookup"><span data-stu-id="0c101-192">The <xref:System.Security.Cryptography.DSACryptoServiceProvider> class can be initialized either with a public key only or with both a public and private key.</span></span>  <span data-ttu-id="0c101-193">Utilisez le <xref:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly%2A> propriété pour déterminer si l’instance actuelle contient uniquement une clé publique ou une clé publique et privée.</span><span class="sxs-lookup"><span data-stu-id="0c101-193">Use the <xref:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly%2A> property to determine whether the current instance contains only a public key or both a public and private key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public override string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c101-194">Obtient le nom de l'algorithme de signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-194">Gets the name of the signature algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c101-195">Nom de l'algorithme de signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-195">The name of the signature algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c101-196">Calcule la valeur de hachage des données spécifiées et la signe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-196">Computes the hash value of the specified data and signs it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (buffer As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0c101-197">Données d'entrée pour lesquelles calculer le hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-197">The input data for which to compute the hash.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-198">Calcule la valeur de hachage du tableau d'octets spécifié et signe la valeur de hachage résultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-198">Computes the hash value of the specified byte array and signs the resulting hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c101-199">Signature <see cref="T:System.Security.Cryptography.DSA" /> pour les données spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-199">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c101-200">Cette méthode crée une signature numérique est vérifiée à l’aide du <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0c101-200">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> method.</span></span>  
  
 <span data-ttu-id="0c101-201"><xref:System.Security.Cryptography.DSA> utilise le <xref:System.Security.Cryptography.SHA1> algorithme de hachage.</span><span class="sxs-lookup"><span data-stu-id="0c101-201"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(class System.IO.Stream inputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (inputStream As Stream) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ inputStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputStream">
          <span data-ttu-id="0c101-202">Données d'entrée pour lesquelles calculer le hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-202">The input data for which to compute the hash.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-203">Calcule la valeur de hachage du flux d'entrée spécifié et signe la valeur de hachage résultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-203">Computes the hash value of the specified input stream and signs the resulting hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c101-204">Signature <see cref="T:System.Security.Cryptography.DSA" /> pour les données spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-204">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c101-205"><xref:System.Security.Cryptography.DSA> utilise le <xref:System.Security.Cryptography.SHA1> algorithme de hachage.</span><span class="sxs-lookup"><span data-stu-id="0c101-205"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (buffer As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0c101-206">Données d'entrée à signer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-206">The input data to sign.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="0c101-207">Offset dans le tableau à partir duquel l’utilisation de données commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-207">The offset into the array from which to begin using data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0c101-208">Nombre d'octets dans le tableau à utiliser comme données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-208">The number of bytes in the array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-209">Signe un tableau d'octets depuis le point de départ spécifié jusqu'au point de terminaison spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-209">Signs a byte array from the specified start point to the specified end point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c101-210">Signature <see cref="T:System.Security.Cryptography.DSA" /> pour les données spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-210">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c101-211">Cette méthode crée une signature numérique est vérifiée à l’aide du <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0c101-211">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> method.</span></span>  
  
 <span data-ttu-id="0c101-212"><xref:System.Security.Cryptography.DSA> utilise le <xref:System.Security.Cryptography.SHA1> algorithme de hachage.</span><span class="sxs-lookup"><span data-stu-id="0c101-212"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public byte[] SignHash (byte[] rgbHash, string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignHash(unsigned int8[] rgbHash, string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignHash (rgbHash As Byte(), str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ rgbHash, System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="0c101-213">Valeur de hachage des données à signer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-213">The hash value of the data to be signed.</span>
          </span>
        </param>
        <param name="str">
          <span data-ttu-id="0c101-214">Nom de l’algorithme de hachage utilisé pour créer la valeur de hachage des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-214">The name of the hash algorithm used to create the hash value of the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-215">Calcule la signature pour la valeur de hachage spécifiée en la chiffrant avec la clé privée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-215">Computes the signature for the specified hash value by encrypting it with the private key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c101-216">Signature <see cref="T:System.Security.Cryptography.DSA" /> pour la valeur de hachage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-216">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified hash value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c101-217">Cette méthode crée une signature numérique est vérifiée à l’aide du <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0c101-217">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A> method.</span></span>  
  
 <span data-ttu-id="0c101-218"><xref:System.Security.Cryptography.DSA> utilise le <xref:System.Security.Cryptography.SHA1> algorithme de hachage.</span><span class="sxs-lookup"><span data-stu-id="0c101-218"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c101-219">Le paramètre <paramref name="rgbHash" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-219">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0c101-220">Le fournisseur de services de chiffrement ne peut pas être acquis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-220">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="0c101-221">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-221">-or-</span>
          </span>
          <span data-ttu-id="0c101-222">Il n’existe aucune clé privée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-222">There is no private key.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="0c101-223">pour l’autorisation signer un fichier à l’aide de la clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-223">for permission to sign a file using the key.</span>
          </span>
          <span data-ttu-id="0c101-224">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-224">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="0c101-225">Énumération associée : <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-225">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="UseMachineKeyStore">
      <MemberSignature Language="C#" Value="public static bool UseMachineKeyStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseMachineKeyStore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseMachineKeyStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseMachineKeyStore { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c101-226">Obtient ou définit une valeur qui indique si la clé doit être persistante dans le magasin de clés de l’ordinateur plutôt que le magasin de profils utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-226">Gets or sets a value indicating whether the key should be persisted in the computer's key store instead of the user profile store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c101-227">
            <see langword="true" /> si la clé doit être persistante dans le magasin de clés de l’ordinateur ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-227">
              <see langword="true" /> if the key should be persisted in the computer key store; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c101-228">Définition de cette propriété sur true équivaut à passer le <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> indicateur sur une <xref:System.Security.Cryptography.CspParameters> objet.</span><span class="sxs-lookup"><span data-stu-id="0c101-228">Setting this property to true is equivalent to passing the <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> flag to a <xref:System.Security.Cryptography.CspParameters> object.</span></span> <span data-ttu-id="0c101-229">Le <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> propriété s’applique à tout le code dans le domaine d’application actuel, tandis que le <xref:System.Security.Cryptography.CspParameters> objet s’applique uniquement aux classes qui le référencent explicitement.</span><span class="sxs-lookup"><span data-stu-id="0c101-229">The <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> property applies to all code in the current application domain, while the <xref:System.Security.Cryptography.CspParameters> object applies only to classes that explicitly reference it.</span></span> <span data-ttu-id="0c101-230">Ces paramètres sont utiles lors de l’emprunt d’identité ou en cours d’exécution sous un compte dont le profil utilisateur n’est pas chargé.</span><span class="sxs-lookup"><span data-stu-id="0c101-230">These settings are useful when impersonating or running under an account whose user profile is not loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c101-231">Vérifie qu’une signature numérique est valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-231">Verifies that a digital signature is valid.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] rgbData, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] rgbData, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (rgbData As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ rgbData, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbData">
          <span data-ttu-id="0c101-232">les données qui ont été signées ;</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-232">The data that was signed.</span>
          </span>
        </param>
        <param name="rgbSignature">
          <span data-ttu-id="0c101-233">Données de la signature à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-233">The signature data to be verified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-234">Vérifie les données de signature spécifiées en les comparant à la signature calculée pour les données spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-234">Verifies the specified signature data by comparing it to the signature computed for the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c101-235">
            <see langword="true" /> si la signature est valide ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-235">
              <see langword="true" /> if the signature verifies as valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c101-236">Cette méthode vérifie le <xref:System.Security.Cryptography.DSA> résultant de la signature numérique <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c101-236">This method verifies the <xref:System.Security.Cryptography.DSA> digital signature produced by <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>.</span></span>  
  
 <span data-ttu-id="0c101-237"><xref:System.Security.Cryptography.DSA> utilise le <xref:System.Security.Cryptography.SHA1> algorithme de hachage.</span><span class="sxs-lookup"><span data-stu-id="0c101-237"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public bool VerifyHash (byte[] rgbHash, string str, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyHash(unsigned int8[] rgbHash, string str, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyHash (rgbHash As Byte(), str As String, rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyHash(cli::array &lt;System::Byte&gt; ^ rgbHash, System::String ^ str, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="0c101-238">Valeur de hachage des données à signer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-238">The hash value of the data to be signed.</span>
          </span>
        </param>
        <param name="str">
          <span data-ttu-id="0c101-239">Nom de l’algorithme de hachage utilisé pour créer la valeur de hachage des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-239">The name of the hash algorithm used to create the hash value of the data.</span>
          </span>
        </param>
        <param name="rgbSignature">
          <span data-ttu-id="0c101-240">Données de la signature à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-240">The signature data to be verified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-241">Vérifie les données de signature spécifiées en les comparant à la signature calculée pour la valeur de hachage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-241">Verifies the specified signature data by comparing it to the signature computed for the specified hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c101-242">
            <see langword="true" /> si la signature est valide ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-242">
              <see langword="true" /> if the signature verifies as valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c101-243">Cette méthode vérifie le <xref:System.Security.Cryptography.DSA> résultant de la signature numérique <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c101-243">This method verifies the <xref:System.Security.Cryptography.DSA> digital signature produced by <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>.</span></span>  
  
 <span data-ttu-id="0c101-244">Si le `str` paramètre est `null`, l’algorithme de hachage par défaut (SHA1) est utilisé.</span><span class="sxs-lookup"><span data-stu-id="0c101-244">If the `str` parameter is `null`, the default hash algorithm (SHA1) is used.</span></span> <span data-ttu-id="0c101-245">Les algorithmes de hachage valide est <xref:System.Security.Cryptography.SHA1>.</span><span class="sxs-lookup"><span data-stu-id="0c101-245">The valid hash algorithms is <xref:System.Security.Cryptography.SHA1>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c101-246">Le paramètre <paramref name="rgbHash" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-246">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0c101-247">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-247">-or-</span>
          </span>
          <span data-ttu-id="0c101-248">Le paramètre <paramref name="rgbSignature" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-248">The <paramref name="rgbSignature" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0c101-249">Le fournisseur de services de chiffrement ne peut pas être acquis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-249">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="0c101-250">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-250">-or-</span>
          </span>
          <span data-ttu-id="0c101-251">La signature ne peut pas être vérifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-251">The signature cannot be verified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifySignature(unsigned int8[] rgbHash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifySignature(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifySignature (rgbHash As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifySignature(cli::array &lt;System::Byte&gt; ^ rgbHash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="0c101-252">Données signées avec <c>rgbSignature</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-252">The data signed with <c>rgbSignature</c>.</span>
          </span>
        </param>
        <param name="rgbSignature">
          <span data-ttu-id="0c101-253">Signature à vérifier pour <c>rgbData</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-253">The signature to be verified for <c>rgbData</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c101-254">Vérifie la signature <see cref="T:System.Security.Cryptography.DSA" /> pour les données spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-254">Verifies the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c101-255">
            <see langword="true" /> si <paramref name="rgbSignature" /> correspond à la signature calculée à l'aide de l'algorithme de hachage et de la clé spécifiés sur <paramref name="rgbHash" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c101-255">
              <see langword="true" /> if <paramref name="rgbSignature" /> matches the signature computed using the specified hash algorithm and key on <paramref name="rgbHash" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>