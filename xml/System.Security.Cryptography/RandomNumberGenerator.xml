<Type Name="RandomNumberGenerator" FullName="System.Security.Cryptography.RandomNumberGenerator">
  <TypeSignature Language="C#" Value="public abstract class RandomNumberGenerator : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RandomNumberGenerator extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RandomNumberGenerator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RandomNumberGenerator&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RandomNumberGenerator abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cc372-101">Représente la classe abstraite dont toutes les implémentations des générateurs de nombres aléatoires de chiffrement doivent hériter.</span><span class="sxs-lookup"><span data-stu-id="cc372-101">Represents the abstract class from which all implementations of cryptographic random number generators derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="cc372-102">Les générateurs de nombres aléatoires cryptographiques créent des valeurs aléatoires forts.</span><span class="sxs-lookup"><span data-stu-id="cc372-102">Cryptographic random number generators create cryptographically strong random values.</span></span>

<span data-ttu-id="cc372-103">Pour créer un générateur de nombres aléatoires, appelez le @System.Security.Cryptography.RandomNumberGenerator.Create (méthode).</span><span class="sxs-lookup"><span data-stu-id="cc372-103">To create a random number generator, call the @System.Security.Cryptography.RandomNumberGenerator.Create method.</span></span> <span data-ttu-id="cc372-104">Cela est préféré sur l’appel du constructeur de la classe dérivée @System.Security.Cryptography.RNGCryptoServiceProvider, ce qui n’est pas disponible sur toutes les plateformes.</span><span class="sxs-lookup"><span data-stu-id="cc372-104">This is prefered over calling the constructor of the derived class @System.Security.Cryptography.RNGCryptoServiceProvider, which is not available on all platforms.</span></span>
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RandomNumberGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RandomNumberGenerator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc372-105">Initialise une nouvelle instance de <see cref="T:System.Security.Cryptography.RandomNumberGenerator" />.</span><span class="sxs-lookup"><span data-stu-id="cc372-105">Initializes a new instance of <see cref="T:System.Security.Cryptography.RandomNumberGenerator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc372-106">Vous ne pouvez pas créer une instance d’une classe abstraite.</span><span class="sxs-lookup"><span data-stu-id="cc372-106">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="cc372-107">Code d’application créera une nouvelle instance d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="cc372-107">Application code will create a new instance of a derived class.</span></span> <span data-ttu-id="cc372-108">Pour une implémentation d’un générateur de nombres aléatoires de chiffrement, utilisez la classe dérivée <xref:System.Security.Cryptography.RNGCryptoServiceProvider>.</span><span class="sxs-lookup"><span data-stu-id="cc372-108">For an implementation of a cryptographic random number generator, use the derived class <xref:System.Security.Cryptography.RNGCryptoServiceProvider>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc372-109">Crée une instance d'une implémentation d'un générateur de nombres aléatoires de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="cc372-109">Creates an instance of an implementation of a cryptographic random number generator.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.RandomNumberGenerator Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.RandomNumberGenerator Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As RandomNumberGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::RandomNumberGenerator ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RandomNumberGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc372-110">Crée une instance de l’implémentation par défaut d’un générateur de nombres aléatoires de chiffrement permettant de générer des données aléatoires.</span><span class="sxs-lookup"><span data-stu-id="cc372-110">Creates an instance of the default implementation of a cryptographic random number generator that can be used to generate random data.</span></span></summary>
        <returns><span data-ttu-id="cc372-111">Nouvelle instance d'un générateur de nombres aléatoires de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="cc372-111">A new instance of a cryptographic random number generator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.RandomNumberGenerator Create (string rngName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.RandomNumberGenerator Create(string rngName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (rngName As String) As RandomNumberGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::RandomNumberGenerator ^ Create(System::String ^ rngName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RandomNumberGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rngName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rngName"><span data-ttu-id="cc372-112">Nom de l'implémentation du générateur de nombres aléatoires à utiliser.</span><span class="sxs-lookup"><span data-stu-id="cc372-112">The name of the random number generator implementation to use.</span></span></param>
        <summary><span data-ttu-id="cc372-113">Crée une instance de l’implémentation spécifiée d’un générateur de nombres aléatoires de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="cc372-113">Creates an instance of the specified implementation of a cryptographic random number generator.</span></span></summary>
        <returns><span data-ttu-id="cc372-114">Nouvelle instance d'un générateur de nombres aléatoires de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="cc372-114">A new instance of a cryptographic random number generator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc372-115">En cas de substitution dans une classe dérivée, libère les ressources non managées utilisées par l'instance actuelle de la classe <see cref="T:System.Security.Cryptography.RandomNumberGenerator" />.</span><span class="sxs-lookup"><span data-stu-id="cc372-115">When overridden in a derived class, releases the unmanaged resources used by the current instance of the <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc372-116">En cas de substitution dans une classe dérivée, libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Security.Cryptography.RandomNumberGenerator" />.</span><span class="sxs-lookup"><span data-stu-id="cc372-116">When overridden in a derived class, releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc372-117">Appelez la méthode `Dispose` une fois que vous avez terminé d'utiliser <xref:System.Security.Cryptography.RandomNumberGenerator>.</span><span class="sxs-lookup"><span data-stu-id="cc372-117">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.RandomNumberGenerator>.</span></span> <span data-ttu-id="cc372-118">La méthode `Dispose` rend le <xref:System.Security.Cryptography.RandomNumberGenerator> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="cc372-118">The `Dispose` method leaves the <xref:System.Security.Cryptography.RandomNumberGenerator> in an unusable state.</span></span> <span data-ttu-id="cc372-119">Après avoir appelé `Dispose`, vous devez libérer toutes les références à la <xref:System.Security.Cryptography.RandomNumberGenerator> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Security.Cryptography.RandomNumberGenerator> occupée.</span><span class="sxs-lookup"><span data-stu-id="cc372-119">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.RandomNumberGenerator> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.RandomNumberGenerator> was occupying.</span></span>  
  
 <span data-ttu-id="cc372-120">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="cc372-120">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc372-121">Appelez toujours `Dispose` avant de libérer votre dernière référence à <xref:System.Security.Cryptography.RandomNumberGenerator>.</span><span class="sxs-lookup"><span data-stu-id="cc372-121">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.RandomNumberGenerator>.</span></span> <span data-ttu-id="cc372-122">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Security.Cryptography.RandomNumberGenerator> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="cc372-122">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.RandomNumberGenerator> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="cc372-123"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="cc372-123"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="cc372-124">En cas de substitution dans une classe dérivée, libère les ressources non managées utilisées par <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> et libère éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="cc372-124">When overridden in a derived class, releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc372-125">Cette méthode est appelée par le public `Dispose()` (méthode) et le `Finalize` (méthode).</span><span class="sxs-lookup"><span data-stu-id="cc372-125">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="cc372-126">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec la `disposing` paramètre la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="cc372-126">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="cc372-127">`Finalize` appelle `Dispose` avec `disposing` la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="cc372-127">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="cc372-128">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Security.Cryptography.RandomNumberGenerator>.</span><span class="sxs-lookup"><span data-stu-id="cc372-128">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.RandomNumberGenerator> references.</span></span> <span data-ttu-id="cc372-129">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="cc372-129">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="cc372-130"><see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span><span class="sxs-lookup"><span data-stu-id="cc372-130"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="cc372-131">Lors de la substitution <see langword="Dispose(Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d’un appel antérieur à <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="cc372-131">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="cc372-132">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="cc372-132">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="cc372-133">Pour plus d’informations sur <see langword="Dispose" /> et <see langword="Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="cc372-133">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public static void Fill (Span&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(valuetype System.Span`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Fill(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (data As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(Span&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc372-134">Remplit un tableau d'octets avec une séquence de valeurs aléatoire forte du point de vue du chiffrement.</span><span class="sxs-lookup"><span data-stu-id="cc372-134">Fills an array of bytes with a cryptographically strong random sequence of values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract void GetBytes (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetBytes(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub GetBytes (data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void GetBytes(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="cc372-135">Tableau à remplir avec les octets aléatoires forts du point de vue du chiffrement.</span><span class="sxs-lookup"><span data-stu-id="cc372-135">The array to fill with cryptographically strong random bytes.</span></span></param>
        <summary><span data-ttu-id="cc372-136">En cas de substitution dans une classe dérivée, remplit un tableau d'octets avec une séquence de valeurs aléatoire et forte du point de vue du chiffrement.</span><span class="sxs-lookup"><span data-stu-id="cc372-136">When overridden in a derived class, fills an array of bytes with a cryptographically strong random sequence of values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc372-137">La longueur du tableau d’octets détermine le nombre d’octets aléatoire est généré.</span><span class="sxs-lookup"><span data-stu-id="cc372-137">The length of the byte array determines how many random bytes are produced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc372-138">L’exemple suivant crée une séquence aléatoire de 100 octets de long et la stocke dans `random`.</span><span class="sxs-lookup"><span data-stu-id="cc372-138">The following example creates a random sequence 100 bytes long and stores it in `random`.</span></span>  
  
 [!code-cpp[Classic RandomNumberGenerator.GetBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetBytes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RandomNumberGenerator.GetBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetBytes Example/CS/source.cs#1)]
 [!code-vb[Classic RandomNumberGenerator.GetBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetBytes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual void GetBytes (Span&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetBytes(valuetype System.Span`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetBytes (data As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetBytes(Span&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual void GetBytes (byte[] data, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetBytes(unsigned int8[] data, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetBytes (data As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetBytes(cli::array &lt;System::Byte&gt; ^ data, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="cc372-139">Tableau à remplir avec les octets aléatoires forts du point de vue du chiffrement.</span><span class="sxs-lookup"><span data-stu-id="cc372-139">The array to fill with cryptographically strong random bytes.</span></span></param>
        <param name="offset"><span data-ttu-id="cc372-140">Index du tableau auquel commencer l'opération de remplissage.</span><span class="sxs-lookup"><span data-stu-id="cc372-140">The index of the array to start the fill operation.</span></span></param>
        <param name="count"><span data-ttu-id="cc372-141">Nombre d'octets à remplir.</span><span class="sxs-lookup"><span data-stu-id="cc372-141">The number of bytes to fill.</span></span></param>
        <summary><span data-ttu-id="cc372-142">Remplit le tableau d'octets spécifié avec une séquence de valeurs aléatoire et forte du point de vue du chiffrement.</span><span class="sxs-lookup"><span data-stu-id="cc372-142">Fills the specified byte array with a cryptographically strong random sequence of values.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc372-143"><paramref name="data" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc372-143"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cc372-144"><paramref name="offset" /> ou <paramref name="count" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="cc372-144"><paramref name="offset" /> or <paramref name="count" /> is less than 0</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cc372-145"><paramref name="offset" /> plus <paramref name="count" /> excède la longueur de <paramref name="data" />.</span><span class="sxs-lookup"><span data-stu-id="cc372-145"><paramref name="offset" /> plus <paramref name="count" /> exceeds the length of <paramref name="data" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNonZeroBytes">
      <MemberSignature Language="C#" Value="public virtual void GetNonZeroBytes (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetNonZeroBytes(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetNonZeroBytes (data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetNonZeroBytes(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="cc372-146">Tableau à remplir avec les octets aléatoires forts du point de vue du chiffrement, différents de zéro.</span><span class="sxs-lookup"><span data-stu-id="cc372-146">The array to fill with cryptographically strong random nonzero bytes.</span></span></param>
        <summary><span data-ttu-id="cc372-147">En cas de substitution dans une classe dérivée, remplit un tableau d'octets avec une séquence de valeurs différentes de zéro, aléatoire et forte du point de vue du chiffrement.</span><span class="sxs-lookup"><span data-stu-id="cc372-147">When overridden in a derived class, fills an array of bytes with a cryptographically strong random sequence of nonzero values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc372-148">La longueur du tableau d’octets détermine le nombre d’octets aléatoire est généré.</span><span class="sxs-lookup"><span data-stu-id="cc372-148">The length of the byte array determines how many random bytes are produced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc372-149">L’exemple suivant crée une séquence aléatoire de 100 octets différents de zéro et la stocke dans `random`.</span><span class="sxs-lookup"><span data-stu-id="cc372-149">The following example creates a random sequence of 100 nonzero bytes and stores it in `random`.</span></span>  
  
 [!code-cpp[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetNonZeroBytes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetNonZeroBytes Example/CS/source.cs#1)]
 [!code-vb[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetNonZeroBytes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNonZeroBytes">
      <MemberSignature Language="C#" Value="public virtual void GetNonZeroBytes (Span&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetNonZeroBytes(valuetype System.Span`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetNonZeroBytes (data As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetNonZeroBytes(Span&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>