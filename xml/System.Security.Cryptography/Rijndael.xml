<Type Name="Rijndael" FullName="System.Security.Cryptography.Rijndael">
  <TypeSignature Language="C#" Value="public abstract class Rijndael : System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Rijndael extends System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Rijndael" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Rijndael&#xA;Inherits SymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rijndael abstract : System::Security::Cryptography::SymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.SymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b7179-101">Représente la classe de base dont toutes les implémentations de l'algorithme de chiffrement symétrique <see cref="T:System.Security.Cryptography.Rijndael" /> doivent hériter.</span><span class="sxs-lookup"><span data-stu-id="b7179-101">Represents the base class from which all implementations of the <see cref="T:System.Security.Cryptography.Rijndael" /> symmetric encryption algorithm must inherit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7179-102">Cet algorithme prend en charge des longueurs de clé de 128, 192 ou 256 bits. par défaut de 256 bits.</span><span class="sxs-lookup"><span data-stu-id="b7179-102">This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits.</span></span> <span data-ttu-id="b7179-103">Cet algorithme prend en charge les tailles de bloc de 128, 192 ou 256 bits. valeur par défaut : 128 bits (<xref:System.Security.Cryptography.Aes>-compatibles).</span><span class="sxs-lookup"><span data-stu-id="b7179-103">This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible).</span></span>  
  
 <span data-ttu-id="b7179-104">Le <xref:System.Security.Cryptography.Rijndael> classe est le prédécesseur de la <xref:System.Security.Cryptography.Aes> algorithme.</span><span class="sxs-lookup"><span data-stu-id="b7179-104">The <xref:System.Security.Cryptography.Rijndael> class is the predecessor of the <xref:System.Security.Cryptography.Aes> algorithm.</span></span> <span data-ttu-id="b7179-105">Vous devez utiliser le <xref:System.Security.Cryptography.Aes> algorithme au lieu de <xref:System.Security.Cryptography.Rijndael>.</span><span class="sxs-lookup"><span data-stu-id="b7179-105">You should use the <xref:System.Security.Cryptography.Aes> algorithm instead of <xref:System.Security.Cryptography.Rijndael>.</span></span> <span data-ttu-id="b7179-106">Pour plus d’informations, consultez l’entrée [les différences entre Rijndael et AES](http://go.microsoft.com/fwlink/?LinkId=200932) dans le blog de sécurité .NET.</span><span class="sxs-lookup"><span data-stu-id="b7179-106">For more information, see the entry [The Differences Between Rijndael and AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7179-107">Le code suivant exemple utilise la <xref:System.Security.Cryptography.Rijndael> classe pour chiffrer et déchiffrer des données.</span><span class="sxs-lookup"><span data-stu-id="b7179-107">The following code example uses the <xref:System.Security.Cryptography.Rijndael> class to encrypt and then decrypt data.</span></span>  
  
 [!code-csharp[Cryptography.Rijndael.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.rijndael.create.file/cs/fileexample.cs#1)]
 [!code-vb[Cryptography.Rijndael.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.rijndael.create.file/vb/fileexample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Rijndael ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rijndael.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Rijndael();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7179-108">Initialise une nouvelle instance de <see cref="T:System.Security.Cryptography.Rijndael" />.</span><span class="sxs-lookup"><span data-stu-id="b7179-108">Initializes a new instance of <see cref="T:System.Security.Cryptography.Rijndael" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7179-109">Vous ne pouvez pas créer une instance d’une classe abstraite.</span><span class="sxs-lookup"><span data-stu-id="b7179-109">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="b7179-110">Code d’application créera une nouvelle instance d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="b7179-110">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="b7179-111">Cette méthode initialise les champs protégés de <xref:System.Security.Cryptography.SymmetricAlgorithm> aux valeurs par défaut répertoriées dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="b7179-111">This method initializes the protected fields of <xref:System.Security.Cryptography.SymmetricAlgorithm> to the default values listed in the following table.</span></span>  
  
|<span data-ttu-id="b7179-112">Champ</span><span class="sxs-lookup"><span data-stu-id="b7179-112">Field</span></span>|<span data-ttu-id="b7179-113">Valeur par défaut</span><span class="sxs-lookup"><span data-stu-id="b7179-113">Default Value</span></span>|  
|-----------|-------------------|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|<span data-ttu-id="b7179-114">256</span><span class="sxs-lookup"><span data-stu-id="b7179-114">256</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|<span data-ttu-id="b7179-115">128</span><span class="sxs-lookup"><span data-stu-id="b7179-115">128</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|<span data-ttu-id="b7179-116">128</span><span class="sxs-lookup"><span data-stu-id="b7179-116">128</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b7179-117">Le code suivant exemple utilise la <xref:System.Security.Cryptography.Rijndael> classe pour chiffrer et déchiffrer des données.</span><span class="sxs-lookup"><span data-stu-id="b7179-117">The following code example uses the <xref:System.Security.Cryptography.Rijndael> class to encrypt and then decrypt data.</span></span>  
  
 [!code-csharp[Cryptography.Rijndael.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.rijndael.create.file/cs/fileexample.cs#1)]
 [!code-vb[Cryptography.Rijndael.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.rijndael.create.file/vb/fileexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7179-118">Crée un objet de chiffrement pour exécuter l'algorithme <see cref="T:System.Security.Cryptography.Rijndael" />.</span><span class="sxs-lookup"><span data-stu-id="b7179-118">Creates a cryptographic object to perform the <see cref="T:System.Security.Cryptography.Rijndael" /> algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Rijndael Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Rijndael Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rijndael.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As Rijndael" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Rijndael ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Rijndael</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7179-119">Crée un objet de chiffrement pour exécuter l'algorithme <see cref="T:System.Security.Cryptography.Rijndael" />.</span><span class="sxs-lookup"><span data-stu-id="b7179-119">Creates a cryptographic object to perform the <see cref="T:System.Security.Cryptography.Rijndael" /> algorithm.</span></span></summary>
        <returns><span data-ttu-id="b7179-120">Objet de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="b7179-120">A cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7179-121">L’implémentation par défaut de <xref:System.Security.Cryptography.Rijndael> est <xref:System.Security.Cryptography.RijndaelManaged>.</span><span class="sxs-lookup"><span data-stu-id="b7179-121">The default implementation of <xref:System.Security.Cryptography.Rijndael> is <xref:System.Security.Cryptography.RijndaelManaged>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7179-122">Le code suivant exemple utilise la <xref:System.Security.Cryptography.Rijndael> classe pour chiffrer et déchiffrer des données.</span><span class="sxs-lookup"><span data-stu-id="b7179-122">The following code example uses the <xref:System.Security.Cryptography.Rijndael> class to encrypt and then decrypt data.</span></span>  
  
 [!code-csharp[Cryptography.Rijndael.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.rijndael.create.file/cs/fileexample.cs#1)]
 [!code-vb[Cryptography.Rijndael.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.rijndael.create.file/vb/fileexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="b7179-123">L’algorithme a été utilisé en mode FIPS (Federal Information Processing Standards), mais il n’est pas compatible avec la norme FIPS.</span><span class="sxs-lookup"><span data-stu-id="b7179-123">The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Rijndael Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Rijndael Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rijndael.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As Rijndael" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Rijndael ^ Create(System::String ^ algName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Rijndael</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="b7179-124">Nom de l'implémentation spécifique de <see cref="T:System.Security.Cryptography.Rijndael" /> à créer.</span><span class="sxs-lookup"><span data-stu-id="b7179-124">The name of the specific implementation of <see cref="T:System.Security.Cryptography.Rijndael" /> to create.</span></span></param>
        <summary><span data-ttu-id="b7179-125">Crée un objet de chiffrement pour effectuer l'implémentation spécifiée de l'algorithme <see cref="T:System.Security.Cryptography.Rijndael" />.</span><span class="sxs-lookup"><span data-stu-id="b7179-125">Creates a cryptographic object to perform the specified implementation of the <see cref="T:System.Security.Cryptography.Rijndael" /> algorithm.</span></span></summary>
        <returns><span data-ttu-id="b7179-126">Objet de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="b7179-126">A cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7179-127">Les valeurs acceptables pour le `algName` paramètre sont `Rijndael` et `System.Security.Cryptography.RijndaelManaged`.</span><span class="sxs-lookup"><span data-stu-id="b7179-127">Acceptable values for the `algName` parameter are `Rijndael` and `System.Security.Cryptography.RijndaelManaged`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="b7179-128">L'algorithme décrit par le paramètre <paramref name="algName" /> a été utilisé avec mode FIPS activé, mais n'est pas compatible FIPS.</span><span class="sxs-lookup"><span data-stu-id="b7179-128">The algorithm described by the <paramref name="algName" /> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>