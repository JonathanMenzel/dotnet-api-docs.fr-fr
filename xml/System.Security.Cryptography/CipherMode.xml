<Type Name="CipherMode" FullName="System.Security.Cryptography.CipherMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea806a620aacc18a629589505e86376de25a87da" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52231003" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum CipherMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed CipherMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CipherMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum CipherMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class CipherMode" />
  <TypeSignature Language="F#" Value="type CipherMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0d4ed-101">Spécifie le mode de chiffrement par bloc à utiliser pour le chiffrement.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d4ed-101">Specifies the block cipher mode to use for encryption.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d4ed-102">Les algorithmes de chiffrement par bloc chiffrement les données dans des blocs, plutôt qu’un seul octet à la fois.</span><span class="sxs-lookup"><span data-stu-id="0d4ed-102">Block cipher algorithms encrypt data in block units, rather than a single byte at a time.</span></span> <span data-ttu-id="0d4ed-103">La taille de bloc plus courante est de 8 octets.</span><span class="sxs-lookup"><span data-stu-id="0d4ed-103">The most common block size is 8 bytes.</span></span> <span data-ttu-id="0d4ed-104">Étant donné que chaque bloc est un traitement intensif, les chiffrements par bloc offrent un niveau de sécurité supérieur chiffrements de flux.</span><span class="sxs-lookup"><span data-stu-id="0d4ed-104">Because each block is heavily processed, block ciphers provide a higher level of security than stream ciphers.</span></span> <span data-ttu-id="0d4ed-105">Toutefois, les algorithmes de chiffrement par bloc ont tendance à s’exécuter plus lentement que les chiffrements de flux.</span><span class="sxs-lookup"><span data-stu-id="0d4ed-105">However, block cipher algorithms tend to execute more slowly than stream ciphers.</span></span>  
  
 <span data-ttu-id="0d4ed-106">Chiffrements par bloc utilisent le même algorithme de chiffrement pour chaque bloc.</span><span class="sxs-lookup"><span data-stu-id="0d4ed-106">Block ciphers use the same encryption algorithm for each block.</span></span> <span data-ttu-id="0d4ed-107">Pour cette raison, un bloc de texte brut retourne toujours le même texte de chiffrement lorsque chiffrée avec la même clé et le même algorithme.</span><span class="sxs-lookup"><span data-stu-id="0d4ed-107">Because of this, a block of plain text will always return the same cipher text when encrypted with the same key and algorithm.</span></span> <span data-ttu-id="0d4ed-108">Étant donné que ce comportement peut être utilisé pour craquer un chiffrement, les modes de chiffrement sont introduites qui modifient le processus de chiffrement en fonction des commentaires à partir des précédents Chiffrements par bloc.</span><span class="sxs-lookup"><span data-stu-id="0d4ed-108">Because this behavior can be used to crack a cipher, cipher modes are introduced that modify the encryption process based on feedback from earlier block encryptions.</span></span> <span data-ttu-id="0d4ed-109">Chiffrement résultant offre un niveau supérieur de sécurité à un simple chiffrement par bloc.</span><span class="sxs-lookup"><span data-stu-id="0d4ed-109">The resulting encryption provides a higher level of security than a simple block encryption.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
      <span data-ttu-id="0d4ed-110">services de chiffrement</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d4ed-110">Cryptographic Services</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="CBC">
      <MemberSignature Language="C#" Value="CBC" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CBC = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CBC" />
      <MemberSignature Language="VB.NET" Value="CBC" />
      <MemberSignature Language="C++ CLI" Value="CBC" />
      <MemberSignature Language="F#" Value="CBC = 1" Usage="System.Security.Cryptography.CipherMode.CBC" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d4ed-111">Le mode <see langword="CBC" /> (Cipher Block Chaining) introduit des commentaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-111">The Cipher Block Chaining (<see langword="CBC" />) mode introduces feedback.</span>
          </span>
          <span data-ttu-id="0d4ed-112">Avant que chaque bloc de texte brut ne soit chiffré, il est combiné au texte de chiffrement du bloc précédent à l'aide d'une opération de bits XOR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-112">Before each plain text block is encrypted, it is combined with the cipher text of the previous block by a bitwise exclusive OR operation.</span>
          </span>
          <span data-ttu-id="0d4ed-113">Cela permet de garantir que même si le texte brut contient de nombreux blocs identiques, chacun d'eux sera chiffré à l'aide d'un bloc de texte de chiffrement différent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-113">This ensures that even if the plain text contains many identical blocks, they will each encrypt to a different cipher text block.</span>
          </span>
          <span data-ttu-id="0d4ed-114">Le vecteur d'initialisation est combiné au premier bloc de texte brut à l'aide d'une opération de bits XOR, avant que le bloc ne soit chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-114">The initialization vector is combined with the first plain text block by a bitwise exclusive OR operation before the block is encrypted.</span>
          </span>
          <span data-ttu-id="0d4ed-115">Si un seul bit du bloc de texte de chiffrement est tronqué, le bloc de texte brut correspondant est également tronqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-115">If a single bit of the cipher text block is mangled, the corresponding plain text block will also be mangled.</span>
          </span>
          <span data-ttu-id="0d4ed-116">En outre, un bit du bloc suivant, situé au même emplacement que le bit tronqué d'origine, est lui aussi tronqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-116">In addition, a bit in the subsequent block, in the same position as the original mangled bit, will be mangled.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CFB">
      <MemberSignature Language="C#" Value="CFB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CFB = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CFB" />
      <MemberSignature Language="VB.NET" Value="CFB" />
      <MemberSignature Language="C++ CLI" Value="CFB" />
      <MemberSignature Language="F#" Value="CFB = 4" Usage="System.Security.Cryptography.CipherMode.CFB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d4ed-117">Le mode <see langword="CFB" /> (Cipher Feedback) convertit de petits incréments de texte brut en texte de chiffrement, au lieu de convertir tout un bloc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-117">The Cipher Feedback (<see langword="CFB" />) mode processes small increments of plain text into cipher text, instead of processing an entire block at a time.</span>
          </span>
          <span data-ttu-id="0d4ed-118">Ce mode utilise un registre à décalage d'un bloc de longueur, qui se décompose en sections.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-118">This mode uses a shift register that is one block in length and is divided into sections.</span>
          </span>
          <span data-ttu-id="0d4ed-119">Par exemple, si la taille du bloc est de 8 octets, et qu'un seul octet est converti à la fois, le registre à décalage se décompose en huit sections.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-119">For example, if the block size is 8 bytes, with one byte processed at a time, the shift register is divided into eight sections.</span>
          </span>
          <span data-ttu-id="0d4ed-120">Si un bit du texte de chiffrement est tronqué, un bit du texte brut est également tronqué ; en outre, le registre à décalage est endommagé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-120">If a bit in the cipher text is mangled, one plain text bit is mangled and the shift register is corrupted.</span>
          </span>
          <span data-ttu-id="0d4ed-121">Par conséquent, les incréments de texte brut suivants sont tronqués jusqu'à ce que le bit incorrect soit exclu du registre à décalage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-121">This results in the next several plain text increments being mangled until the bad bit is shifted out of the shift register.</span>
          </span>
          <span data-ttu-id="0d4ed-122">La taille des commentaires par défaut peut varier en fonction de l'algorithme, mais est généralement de 8 bits ou du nombre de bits de la taille du bloc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-122">The default feedback size can vary by algorithm, but is typically either 8 bits or the number of bits of the block size.</span>
          </span>
          <span data-ttu-id="0d4ed-123">Vous pouvez modifier le nombre de bits des commentaires à l'aide de la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-123">You can alter the number of feedback bits by using the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> property.</span>
          </span>
          <span data-ttu-id="0d4ed-124">Les algorithmes qui prennent en charge le mode CFB (Cipher Feedback) utilisent cette propriété pour définir les commentaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-124">Algorithms that support CFB use this property to set the feedback.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CTS">
      <MemberSignature Language="C#" Value="CTS" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CTS = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CTS" />
      <MemberSignature Language="VB.NET" Value="CTS" />
      <MemberSignature Language="C++ CLI" Value="CTS" />
      <MemberSignature Language="F#" Value="CTS = 5" Usage="System.Security.Cryptography.CipherMode.CTS" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d4ed-125">Le mode <see langword="CTS" /> (Cipher Text Stealing) gère toutes les longueurs de texte brut et produit un texte de chiffrement dont la longueur correspond à celle du texte brut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-125">The Cipher Text Stealing (<see langword="CTS" />) mode handles any length of plain text and produces cipher text whose length matches the plain text length.</span>
          </span>
          <span data-ttu-id="0d4ed-126">Ce mode a un comportement similaire au mode <see langword="CBC" />, sauf en ce qui concerne les deux derniers blocs de texte brut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-126">This mode behaves like the <see langword="CBC" /> mode for all but the last two blocks of the plain text.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ECB">
      <MemberSignature Language="C#" Value="ECB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode ECB = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.ECB" />
      <MemberSignature Language="VB.NET" Value="ECB" />
      <MemberSignature Language="C++ CLI" Value="ECB" />
      <MemberSignature Language="F#" Value="ECB = 2" Usage="System.Security.Cryptography.CipherMode.ECB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d4ed-127">Le mode <see langword="ECB" /> (Electronic Codebook) chiffre chaque bloc individuellement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-127">The Electronic Codebook (<see langword="ECB" />) mode encrypts each block individually.</span>
          </span>
          <span data-ttu-id="0d4ed-128">Tous les blocs de texte brut identiques qui se trouvent dans le même message, ou qui se trouvent dans un message différent chiffré à l'aide de la même clé, sont transformés en blocs de texte de chiffrement identiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-128">Any blocks of plain text that are identical and in the same message, or that are in a different message encrypted with the same key, will be transformed into identical cipher text blocks.</span>
          </span>
          <span data-ttu-id="0d4ed-129">**Important** : Ce mode n’est pas recommandé, car il rend possible plusieurs exploitations de la sécurité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-129">**Important**:  This mode is not recommended because it opens the door for multiple security exploits.</span>
          </span>
          <span data-ttu-id="0d4ed-130">Si le texte brut à chiffrer contient de nombreuses répétitions, le texte de chiffrement peut être déchiffré bloc par bloc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-130">If the plain text to be encrypted contains substantial repetition, it is feasible for the cipher text to be broken one block at a time.</span>
          </span>
          <span data-ttu-id="0d4ed-131">Il est également possible d'utiliser l'analyse des blocs pour déterminer la clé de chiffrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-131">It is also possible to use block analysis to determine the encryption key.</span>
          </span>
          <span data-ttu-id="0d4ed-132">En outre, un adversaire suffisamment tenace peut substituer et d'échanger des blocs individuels sans être détecté, ce qui permet l'enregistrement et l'insertion de blocs dans le flux à des points différents sans risque de détection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-132">Also, an active adversary can substitute and exchange individual blocks without detection, which allows blocks to be saved and inserted into the stream at other points without detection.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OFB">
      <MemberSignature Language="C#" Value="OFB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode OFB = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.OFB" />
      <MemberSignature Language="VB.NET" Value="OFB" />
      <MemberSignature Language="C++ CLI" Value="OFB" />
      <MemberSignature Language="F#" Value="OFB = 3" Usage="System.Security.Cryptography.CipherMode.OFB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d4ed-133">Le mode <see langword="OFB" /> (Output Feedback) convertit de petits incréments de texte brut en texte de chiffrement, au lieu de convertir tout un bloc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-133">The Output Feedback (<see langword="OFB" />) mode processes small increments of plain text into cipher text instead of processing an entire block at a time.</span>
          </span>
          <span data-ttu-id="0d4ed-134">Ce mode est similaire au mode <see langword="CFB" /> ; la seule différence entre ces deux modes réside dans la méthode de remplissage du registre à décalage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-134">This mode is similar to <see langword="CFB" />; the only difference between the two modes is the way that the shift register is filled.</span>
          </span>
          <span data-ttu-id="0d4ed-135">Si un bit du texte de chiffrement est tronqué, le bit de texte brut correspondant est également tronqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-135">If a bit in the cipher text is mangled, the corresponding bit of plain text will be mangled.</span>
          </span>
          <span data-ttu-id="0d4ed-136">Cependant, si des bits manquent dans le texte de chiffrement, ou si ce dernier contient des bits supplémentaires, le texte brut est tronqué à partir de cet emplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d4ed-136">However, if there are extra or missing bits from the cipher text, the plain text will be mangled from that point on.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>