<Type Name="SymmetricAlgorithm" FullName="System.Security.Cryptography.SymmetricAlgorithm">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd8f4728aa22b7f8c3f88bfb67e6afe3d635c6f4" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37624248" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SymmetricAlgorithm : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SymmetricAlgorithm extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SymmetricAlgorithm&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymmetricAlgorithm abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type SymmetricAlgorithm = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0e6ff-101">Représente la classe de base abstraite dont toutes les implémentations des algorithmes symétriques doivent hériter.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0e6ff-101">Represents the abstract base class from which all implementations of symmetric algorithms must inherit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-102">Les classes qui dérivent de la <xref:System.Security.Cryptography.SymmetricAlgorithm> classe utilisent un mode de chaînage appelé chiffrement de blocs chaînage CBC (), qui requiert une clé (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) et un vecteur d’initialisation (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) pour effectuer des transformations de chiffrement sur les données.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-102">The classes that derive from the <xref:System.Security.Cryptography.SymmetricAlgorithm> class use a chaining mode called cipher block chaining (CBC), which requires a key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and an initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to perform cryptographic transformations on data.</span></span>  <span data-ttu-id="0e6ff-103">Pour déchiffrer les données qui ont été chiffrées à l’aide d’une de la <xref:System.Security.Cryptography.SymmetricAlgorithm> classes, vous devez définir le <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> propriété et le <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> propriété sur les valeurs qui ont été utilisés pour le chiffrement.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-103">To decrypt data that was encrypted using one of the <xref:System.Security.Cryptography.SymmetricAlgorithm> classes, you must set the <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property to the same values that were used for encryption.</span></span>  <span data-ttu-id="0e6ff-104">Pour un algorithme symétrique soit utile, la clé secrète doit être connue uniquement à l’expéditeur et le récepteur.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-104">For a symmetric algorithm to be useful, the secret key must be known only to the sender and the receiver.</span></span>  
  
 <span data-ttu-id="0e6ff-105"><xref:System.Security.Cryptography.RijndaelManaged>, <xref:System.Security.Cryptography.DESCryptoServiceProvider>, <xref:System.Security.Cryptography.RC2CryptoServiceProvider>, et <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> sont des implémentations d’algorithmes symétriques.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-105"><xref:System.Security.Cryptography.RijndaelManaged>, <xref:System.Security.Cryptography.DESCryptoServiceProvider>, <xref:System.Security.Cryptography.RC2CryptoServiceProvider>, and <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> are implementations of symmetric algorithms.</span></span>  
  
 <span data-ttu-id="0e6ff-106">Notez que lors de l’utilisation de classes dérivées, il est insuffisant dans une perspective de sécurité, pour simplement forcer un garbage collection une fois que vous avez fini d’utiliser l’objet.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-106">Note that when using derived classes, it is not enough, from a security perspective, to simply force a garbage collection after you have finished using the object.</span></span> <span data-ttu-id="0e6ff-107">Vous devez appeler explicitement la <xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A> méthode sur l’objet à zéro toutes les données sensibles au sein de l’objet avant sa publication.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-107">You must explicitly call the <xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A> method on the object to zero out any sensitive data within the object before it is released.</span></span> <span data-ttu-id="0e6ff-108">Notez que le garbage collection ne pas à zéro le contenu des objets récupérés mais marque simplement la mémoire comme pouvant être réallouée.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-108">Note that garbage collection does not zero out the contents of collected objects but simply marks the memory as available for reallocation.</span></span> <span data-ttu-id="0e6ff-109">Par conséquent, les données contenues dans un objet collector garbage toujours peut-être présentes dans le segment de mémoire dans la mémoire non allouée.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-109">Thus the data contained within a garbage collected object may still be present in the memory heap in unallocated memory.</span></span> <span data-ttu-id="0e6ff-110">Dans le cas des objets de chiffrement, ces données peut contenir des informations sensibles telles que les données de clé ou un bloc de texte brut.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-110">In the case of cryptographic objects, this data could contain sensitive information such as key data or a block of plain text.</span></span>  
  
 <span data-ttu-id="0e6ff-111">Chiffrement de toutes les classes dans le .NET Framework qui contiennent des données sensibles implémentent un `Clear` (méthode).</span><span class="sxs-lookup"><span data-stu-id="0e6ff-111">All cryptographic classes in the .NET Framework that hold sensitive data implement a `Clear` method.</span></span> <span data-ttu-id="0e6ff-112">Lorsqu’elle est appelée, le `Clear` méthode remplace toutes les données sensibles au sein de l’objet avec les zéros et libère l’objet afin qu’il peut être en toute sécurité par le garbage collecté.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-112">When called, the `Clear` method overwrites all sensitive data within the object with zeros and then releases the object so that it can be safely garbage collected.</span></span> <span data-ttu-id="0e6ff-113">Lorsque l’objet a été remis à zéro et publié, vous devez ensuite appeler la `Dispose` méthode avec le `disposing` paramètre la valeur `True` pour supprimer toutes les ressources managées et associés à l’objet.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-113">When the object has been zeroed and released, you should then call the `Dispose` method with the `disposing` parameter set to `True` to dispose of all managed and unmanaged resources associated with the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6ff-114">Le code suivant exemple utilise le <xref:System.Security.Cryptography.RijndaelManaged> classe avec la valeur <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> propriété et vecteur d’initialisation (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) pour chiffrer un fichier spécifié par `inName`et renvoie le résultat chiffré dans le fichier spécifié par `outName`.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-114">The following code example uses the <xref:System.Security.Cryptography.RijndaelManaged> class with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`, and outputs the encrypted result to the file specified by `outName`.</span></span> <span data-ttu-id="0e6ff-115">Le `desKey` et `desIV` paramètres à la méthode sont des tableaux de 8 octets.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-115">The `desKey` and `desIV` parameters to the method are 8-byte arrays.</span></span> <span data-ttu-id="0e6ff-116">Vous devez disposer du pack de cryptage élevé pour exécuter cet exemple.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-116">You must have the high encryption pack installed to run this example.</span></span>  
  
 [!code-cpp[Classic CryptoStream Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic CryptoStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CryptoStream Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic CryptoStream Example/CS/source.cs#1)]
 [!code-vb[Classic CryptoStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic CryptoStream Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="0e6ff-117">
        <para>Lorsque vous héritez de la <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> (classe), vous devez substituer les membres suivants : <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])" />, <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])" />, <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV" />, et <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey" />.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="0e6ff-117">
          <para>When you inherit from the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class, you must override the following members: <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])" />, <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])" />, <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV" />, and <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey" />.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SymmetricAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SymmetricAlgorithm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-118">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-119">Vous ne pouvez pas créer une instance d’une classe abstraite.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-119">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="0e6ff-120">Code d’application crée une nouvelle instance d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-120">Application code creates a new instance of a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0e6ff-121">L'implémentation de la classe dérivée de l'algorithme symétrique n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-121">The implementation of the class derived from the symmetric algorithm is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public virtual int BlockSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int BlockSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int with get, set" Usage="System.Security.Cryptography.SymmetricAlgorithm.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-122">Obtient ou définit la taille de bloc, en bits, de l'opération de chiffrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-122">Gets or sets the block size, in bits, of the cryptographic operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e6ff-123">Taille de bloc en bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-123">The block size, in bits.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-124">La taille de bloc est l’unité de base de données qui peuvent être chiffrées ou déchiffrées en une seule opération.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-124">The block size is the basic unit of data that can be encrypted or decrypted in one operation.</span></span> <span data-ttu-id="0e6ff-125">Messages dépasse la taille de bloc sont gérées comme des blocs successifs ; les messages plus courtes que la taille de bloc doivent être remplis de bits supplémentaires afin d’atteindre la taille d’un bloc.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-125">Messages longer than the block size are handled as successive blocks; messages shorter than the block size must be padded with extra bits to reach the size of a block.</span></span> <span data-ttu-id="0e6ff-126">Tailles de bloc valides sont déterminés par l’algorithme symétrique utilisé.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-126">Valid block sizes are determined by the symmetric algorithm used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0e6ff-127">La taille du bloc n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-127">The block size is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="protected int BlockSizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected BlockSizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int BlockSizeValue;" />
      <MemberSignature Language="F#" Value="val mutable BlockSizeValue : int" Usage="System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-128">Représente la taille de bloc, en bits, de l'opération de chiffrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-128">Represents the block size, in bits, of the cryptographic operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-129">La taille de bloc est l’unité de base de données qui peuvent être chiffrées ou déchiffrées en une seule opération.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-129">The block size is the basic unit of data that can be encrypted or decrypted in one operation.</span></span> <span data-ttu-id="0e6ff-130">Messages dépasse la taille de bloc sont gérées comme des blocs successifs ; les messages plus courtes que la taille de bloc doivent être remplis de bits supplémentaires afin d’atteindre la taille d’un bloc.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-130">Messages longer than the block size are handled as successive blocks; messages shorter than the block size must be padded with extra bits to reach the size of a block.</span></span> <span data-ttu-id="0e6ff-131">Tailles de bloc valides sont déterminés par l’algorithme symétrique utilisé.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-131">Valid block sizes are determined by the symmetric algorithm used.</span></span>  
  
 <span data-ttu-id="0e6ff-132">Ce champ est accessible via la <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-132">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="symmetricAlgorithm.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-133">Libère toutes les ressources utilisées par la classe <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-133">Releases all resources used by the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-134">Notez que lors de l’utilisation de classes dérivées, il est insuffisant dans une perspective de sécurité, pour simplement forcer un garbage collection une fois que vous avez fini d’utiliser l’objet.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-134">Note that when using derived classes, it is not enough, from a security perspective, to simply force a garbage collection after you have finished using the object.</span></span> <span data-ttu-id="0e6ff-135">Vous devez appeler explicitement la <xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A> méthode sur l’objet à zéro toutes les données sensibles au sein de l’objet avant sa publication.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-135">You must explicitly call the <xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A> method on the object to zero out any sensitive data within the object before it is released.</span></span> <span data-ttu-id="0e6ff-136">Notez que le garbage collection ne pas à zéro le contenu des objets récupérés mais marque simplement la mémoire comme pouvant être réallouée.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-136">Note that garbage collection does not zero out the contents of collected objects but simply marks the memory as available for reallocation.</span></span> <span data-ttu-id="0e6ff-137">Par conséquent, les données contenues dans un objet collector garbage toujours peut-être présentes dans le segment de mémoire dans la mémoire non allouée.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-137">Thus the data contained within a garbage collected object may still be present in the memory heap in unallocated memory.</span></span> <span data-ttu-id="0e6ff-138">Dans le cas des objets de chiffrement, ces données peut contenir des informations sensibles telles que les données de clé ou un bloc de texte brut.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-138">In the case of cryptographic objects, this data could contain sensitive information such as key data or a block of plain text.</span></span>  
  
 <span data-ttu-id="0e6ff-139">Chiffrement de toutes les classes dans le .NET Framework qui contiennent des données sensibles implémentent un `Clear` (méthode).</span><span class="sxs-lookup"><span data-stu-id="0e6ff-139">All cryptographic classes in the .NET Framework that hold sensitive data implement a `Clear` method.</span></span> <span data-ttu-id="0e6ff-140">Lorsqu’elle est appelée, le `Clear` méthode remplace toutes les données sensibles au sein de l’objet avec les zéros et libère l’objet afin qu’il peut être en toute sécurité par le garbage collecté.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-140">When called, the `Clear` method overwrites all sensitive data within the object with zeros and then releases the object so that it can be safely garbage collected.</span></span> <span data-ttu-id="0e6ff-141">Lorsque l’objet a été remis à zéro et publié, vous devez ensuite appeler la `Dispose` méthode avec le `disposing` paramètre la valeur `True` pour supprimer toutes les ressources managées et associés à l’objet.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-141">When the object has been zeroed and released, you should then call the `Dispose` method with the `disposing` parameter set to `True` to dispose of all managed and unmanaged resources associated with the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-142">Crée un objet de chiffrement pour exécuter l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-142">Creates a cryptographic object used to perform the symmetric algorithm.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.SymmetricAlgorithm Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.SymmetricAlgorithm Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As SymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::SymmetricAlgorithm ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="System.Security.Cryptography.SymmetricAlgorithm.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-143">Crée un objet de chiffrement par défaut utilisé pour exécuter l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-143">Creates a default cryptographic object used to perform the symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e6ff-144">Objet de chiffrement par défaut utilisé pour exécuter l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-144">A default cryptographic object used to perform the symmetric algorithm.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0e6ff-145">Le code suivant exemple utilise le <xref:System.Security.Cryptography.RijndaelManaged> classe avec la valeur <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> propriété et vecteur d’initialisation (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) pour chiffrer un fichier spécifié par `inName`et renvoie le résultat chiffré dans le fichier spécifié par `outName`.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-145">The following code example uses the <xref:System.Security.Cryptography.RijndaelManaged> class with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`, and outputs the encrypted result to the file specified by `outName`.</span></span> <span data-ttu-id="0e6ff-146">Le `desKey` et `desIV` paramètres à la méthode sont des tableaux de 8 octets.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-146">The `desKey` and `desIV` parameters to the method are 8-byte arrays.</span></span> <span data-ttu-id="0e6ff-147">Vous devez disposer du pack de cryptage élevé pour exécuter cet exemple.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-147">You must have the high encryption pack installed to run this example.</span></span>  
  
 [!code-cpp[Classic CryptoStream Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic CryptoStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CryptoStream Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic CryptoStream Example/CS/source.cs#1)]
 [!code-vb[Classic CryptoStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic CryptoStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.SymmetricAlgorithm Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.SymmetricAlgorithm Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As SymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::SymmetricAlgorithm ^ Create(System::String ^ algName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="System.Security.Cryptography.SymmetricAlgorithm.Create algName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName">
          <span data-ttu-id="0e6ff-148">Nom de l'implémentation spécifique de la classe <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-148">The name of the specific implementation of the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e6ff-149">Crée l'objet de chiffrement spécifié utilisé pour exécuter l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-149">Creates the specified cryptographic object used to perform the symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e6ff-150">Objet de chiffrement utilisé pour exécuter l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-150">A cryptographic object used to perform the symmetric algorithm.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDecryptor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-151">Crée un objet déchiffreur symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-151">Creates a symmetric decryptor object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.ICryptoTransform CreateDecryptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDecryptor () As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor();" />
      <MemberSignature Language="F#" Value="abstract member CreateDecryptor : unit -&gt; System.Security.Cryptography.ICryptoTransform&#xA;override this.CreateDecryptor : unit -&gt; System.Security.Cryptography.ICryptoTransform" Usage="symmetricAlgorithm.CreateDecryptor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-152">Crée un objet déchiffreur symétrique avec la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> et le vecteur d'initialisation (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) actuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-152">Creates a symmetric decryptor object with the current <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e6ff-153">Objet déchiffreur symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-153">A symmetric decryptor object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-154">Cette méthode déchiffre un message chiffré créé à l’aide de la <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A> avec la même signature de surcharge.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-154">This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A> overload with the same signature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateDecryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="abstract member CreateDecryptor : byte[] * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="symmetricAlgorithm.CreateDecryptor (rgbKey, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">
          <span data-ttu-id="0e6ff-155">Clé secrète à utiliser pour l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-155">The secret key to use for the symmetric algorithm.</span>
          </span>
        </param>
        <param name="rgbIV">
          <span data-ttu-id="0e6ff-156">Vecteur d'initialisation à utiliser pour l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-156">The initialization vector to use for the symmetric algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e6ff-157">En cas de substitution dans une classe dérivée, crée un objet déchiffreur symétrique avec la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> et le vecteur d'initialisation (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-157">When overridden in a derived class, creates a symmetric decryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e6ff-158">Objet déchiffreur symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-158">A symmetric decryptor object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-159">Cette méthode déchiffre un message chiffré créé à l’aide de la <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A> surcharge avec les mêmes paramètres.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-159">This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A> overload with the same parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEncryptor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-160">Crée un objet chiffreur symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-160">Creates a symmetric encryptor object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.ICryptoTransform CreateEncryptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEncryptor () As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor();" />
      <MemberSignature Language="F#" Value="abstract member CreateEncryptor : unit -&gt; System.Security.Cryptography.ICryptoTransform&#xA;override this.CreateEncryptor : unit -&gt; System.Security.Cryptography.ICryptoTransform" Usage="symmetricAlgorithm.CreateEncryptor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-161">Crée un objet chiffreur symétrique avec la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> et le vecteur d'initialisation (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) actuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-161">Creates a symmetric encryptor object with the current <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e6ff-162">Objet chiffreur symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-162">A symmetric encryptor object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-163">Si actuel <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> propriété est `null`, le <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> méthode est appelée pour créer un nouveau aléatoire <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-163">If the current <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property is `null`, the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> method is called to create a new random <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>.</span></span> <span data-ttu-id="0e6ff-164">Si actuel <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> propriété est `null`, le <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> méthode est appelée pour créer un nouveau aléatoire <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-164">If the current <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property is `null`, the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> method is called to create a new random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>.</span></span>  
  
 <span data-ttu-id="0e6ff-165">Utilisez le <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A> avec la même signature pour déchiffrer le résultat de cette méthode de surcharge.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-165">Use the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A> overload with the same signature to decrypt the result of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6ff-166">L’exemple suivant chiffre une chaîne à l’aide de l’objet de transformation retourné par la <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0e6ff-166">The following example encrypts a string using the transform object returned from the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A> method.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.SymmetricAlgorithm#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm/cpp/encryptor.cpp#1)]
 [!code-csharp[System.Security.Cryptography.SymmetricAlgorithm#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm/cs/encryptor.cs#1)]
 [!code-vb[System.Security.Cryptography.SymmetricAlgorithm#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm/vb/encryptor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateEncryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="abstract member CreateEncryptor : byte[] * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="symmetricAlgorithm.CreateEncryptor (rgbKey, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">
          <span data-ttu-id="0e6ff-167">Clé secrète à utiliser pour l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-167">The secret key to use for the symmetric algorithm.</span>
          </span>
        </param>
        <param name="rgbIV">
          <span data-ttu-id="0e6ff-168">Vecteur d'initialisation à utiliser pour l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-168">The initialization vector to use for the symmetric algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e6ff-169">En cas de substitution dans une classe dérivée, crée un objet chiffreur symétrique avec la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> et le vecteur d'initialisation (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-169">When overridden in a derived class, creates a symmetric encryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e6ff-170">Objet chiffreur symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-170">A symmetric encryptor object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-171">Utilisez la <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A> avec les mêmes paramètres pour déchiffrer le résultat de cette méthode de surcharge.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-171">Use the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-172">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-172">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="symmetricAlgorithm.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-173">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-173">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-174">Appelez la méthode `Dispose` une fois que vous avez terminé d'utiliser <xref:System.Security.Cryptography.SymmetricAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-174">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.SymmetricAlgorithm>.</span></span> <span data-ttu-id="0e6ff-175">La méthode `Dispose` rend le <xref:System.Security.Cryptography.SymmetricAlgorithm> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-175">The `Dispose` method leaves the <xref:System.Security.Cryptography.SymmetricAlgorithm> in an unusable state.</span></span> <span data-ttu-id="0e6ff-176">Après avoir appelé `Dispose`, vous devez libérer toutes les références à la <xref:System.Security.Cryptography.SymmetricAlgorithm> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Security.Cryptography.SymmetricAlgorithm> occupée.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-176">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.SymmetricAlgorithm> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.SymmetricAlgorithm> was occupying.</span></span>  
  
 <span data-ttu-id="0e6ff-177">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="0e6ff-177">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0e6ff-178">Appelez toujours `Dispose` avant de libérer votre dernière référence à <xref:System.Security.Cryptography.SymmetricAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-178">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.SymmetricAlgorithm>.</span></span> <span data-ttu-id="0e6ff-179">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Security.Cryptography.SymmetricAlgorithm> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-179">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.SymmetricAlgorithm> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="symmetricAlgorithm.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0e6ff-180">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-180">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e6ff-181">Libère les ressources non managées utilisées par <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-181">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-182">Cette méthode est appelée par le public `Dispose()` (méthode) et le `Finalize` (méthode).</span><span class="sxs-lookup"><span data-stu-id="0e6ff-182">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="0e6ff-183">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec le `disposing` paramètre défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-183">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="0e6ff-184">`Finalize` appelle `Dispose` avec `disposing` défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-184">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="0e6ff-185">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Security.Cryptography.SymmetricAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-185">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.SymmetricAlgorithm> references.</span></span> <span data-ttu-id="0e6ff-186">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-186">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0e6ff-187">
            <para>
              <see langword="Dispose" /> peut être appelée plusieurs fois par d’autres objets. Lors de la substitution <see langword="Dispose(Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d’un précédent appel à <see langword="Dispose" />. Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Pour plus d’informations sur <see langword="Dispose" /> et <see langword="Finalize" />, consultez [nettoyage des non managé Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-187">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FeedbackSize">
      <MemberSignature Language="C#" Value="public virtual int FeedbackSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FeedbackSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FeedbackSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FeedbackSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FeedbackSize : int with get, set" Usage="System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-188">Obtient ou définit la taille des commentaires, en bits, de l'opération de chiffrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-188">Gets or sets the feedback size, in bits, of the cryptographic operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e6ff-189">Taille des commentaires en bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-189">The feedback size in bits.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-190">La taille des commentaires détermine la quantité de données qui sont transmises au chiffrement successif ou des opérations de déchiffrement.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-190">The feedback size determines the amount of data that is fed back to successive encryption or decryption operations.</span></span> <span data-ttu-id="0e6ff-191">La taille des commentaires ne peut pas être supérieure à la taille de bloc.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-191">The feedback size cannot be greater than the block size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0e6ff-192">La taille des commentaires est supérieure à la taille du bloc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-192">The feedback size is larger than the block size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FeedbackSizeValue">
      <MemberSignature Language="C#" Value="protected int FeedbackSizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 FeedbackSizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected FeedbackSizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int FeedbackSizeValue;" />
      <MemberSignature Language="F#" Value="val mutable FeedbackSizeValue : int" Usage="System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-193">Représente la taille des commentaires, en bits, de l'opération de chiffrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-193">Represents the feedback size, in bits, of the cryptographic operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-194">La taille des commentaires détermine la quantité de données qui sont transmises au chiffrement successif ou des opérations de déchiffrement.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-194">The feedback size determines the amount of data that is fed back to successive encryption or decryption operations.</span></span> <span data-ttu-id="0e6ff-195">La taille des commentaires ne peut pas être supérieure à la taille de bloc.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-195">The feedback size cannot be greater than the block size.</span></span>  
  
 <span data-ttu-id="0e6ff-196">Ce champ est accessible via la <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-196">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymmetricAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymmetricAlgorithm ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="symmetricAlgorithm.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateIV">
      <MemberSignature Language="C#" Value="public abstract void GenerateIV ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateIV() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub GenerateIV ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void GenerateIV();" />
      <MemberSignature Language="F#" Value="abstract member GenerateIV : unit -&gt; unit" Usage="symmetricAlgorithm.GenerateIV " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-197">En cas de substitution dans une classe dérivée, génère un vecteur d'initialisation aléatoire (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) à utiliser pour l'algorithme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-197">When overridden in a derived class, generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) to use for the algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-198">En règle générale, il est inutile d’utiliser cette méthode, car `CreateEncryptor()` ou `CreateEncryptor(null, null)` génère automatiquement un vecteur d’initialisation et une clé.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-198">In general, there is no reason to use this method, because `CreateEncryptor()` or `CreateEncryptor(null, null)` automatically generates both an initialization vector and a key.</span></span> <span data-ttu-id="0e6ff-199">Toutefois, vous souhaitez utiliser le <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> méthode pour réutiliser une instance de l’algorithme symétrique avec un vecteur d’initialisation différents.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-199">However, you may want to use the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> method to reuse a symmetric algorithm instance with a different initialization vector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public abstract void GenerateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub GenerateKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void GenerateKey();" />
      <MemberSignature Language="F#" Value="abstract member GenerateKey : unit -&gt; unit" Usage="symmetricAlgorithm.GenerateKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-200">En cas de substitution dans une classe dérivée, génère une clé aléatoire (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) à utiliser pour l'algorithme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-200">When overridden in a derived class, generates a random key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) to use for the algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-201">En règle générale, il est inutile d’utiliser cette méthode, car `CreateEncryptor()` ou `CreateEncryptor(null, null)` génère automatiquement un vecteur d’initialisation et une clé.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-201">In general, there is no reason to use this method, because `CreateEncryptor()` or `CreateEncryptor(null, null)` automatically generates both an initialization vector and a key.</span></span> <span data-ttu-id="0e6ff-202">Toutefois, vous souhaitez utiliser le <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> méthode réutiliser une instance de l’algorithme symétrique avec une clé différente.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-202">However, you may want to use the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> method to reuse a symmetric algorithm instance with a different key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IV">
      <MemberSignature Language="C#" Value="public virtual byte[] IV { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] IV" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IV As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ IV { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IV : byte[] with get, set" Usage="System.Security.Cryptography.SymmetricAlgorithm.IV" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-203">Obtient ou définit le vecteur d'initialisation (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) pour l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-203">Gets or sets the initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) for the symmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e6ff-204">Vecteur d'initialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-204">The initialization vector.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-205">Le <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> propriété est automatiquement définie sur une nouvelle valeur aléatoire chaque fois que vous créez une nouvelle instance de l’un de le <xref:System.Security.Cryptography.SymmetricAlgorithm> classes ou lorsque vous appelez manuellement la <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0e6ff-205">The <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property is automatically set to a new random value whenever you create a new instance of one of the <xref:System.Security.Cryptography.SymmetricAlgorithm> classes or when you manually call the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> method.</span></span>  <span data-ttu-id="0e6ff-206">La taille de la <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> propriété doit être le même que le <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A> propriété divisé par 8.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-206">The size of the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property must be the same as the <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A> property divided by 8.</span></span>  
  
 <span data-ttu-id="0e6ff-207">Les classes qui dérivent de la <xref:System.Security.Cryptography.SymmetricAlgorithm> classe utilisent un mode de chaînage appelé chiffrement de blocs chaînage CBC (), ce qui nécessite une clé et un vecteur d’initialisation pour effectuer des transformations de chiffrement sur les données.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-207">The classes that derive from the <xref:System.Security.Cryptography.SymmetricAlgorithm> class use a chaining mode called cipher block chaining (CBC), which requires a key and an initialization vector to perform cryptographic transformations on data.</span></span>  <span data-ttu-id="0e6ff-208">Pour déchiffrer les données qui ont été chiffrées à l’aide d’une de la <xref:System.Security.Cryptography.SymmetricAlgorithm> classes, vous devez définir le <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> propriété et <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> propriété sur les valeurs qui ont été utilisés pour le chiffrement.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-208">To decrypt data that was encrypted using one of the <xref:System.Security.Cryptography.SymmetricAlgorithm> classes, you must set the <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property to the same values that were used for encryption.</span></span>  
  
 <span data-ttu-id="0e6ff-209">Pour une clé secrète donnée *k*, un simple chiffrement par blocs qui n’utilise pas un vecteur d’initialisation chiffre le même bloc d’entrée de texte brut en bloc de sortie de texte de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-209">For a given secret key *k*, a simple block cipher that does not use an initialization vector will encrypt the same input block of plain text into the same output block of cipher text.</span></span> <span data-ttu-id="0e6ff-210">Si vous avez des blocs dupliqués au sein de votre flux de texte brut, vous aurez des blocs dupliqués au sein de votre flux de texte de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-210">If you have duplicate blocks within your plain text stream, you will have duplicate blocks within your cipher text stream.</span></span> <span data-ttu-id="0e6ff-211">Si les utilisateurs non autorisés connaissent la structure d’un bloc de votre texte brut, ils peuvent utiliser ces informations pour déchiffrer le bloc de texte de chiffrement connu et éventuellement récupérer votre clé.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-211">If unauthorized users know anything about the structure of a block of your plain text, they can use that information to decipher the known cipher text block and possibly recover your key.</span></span> <span data-ttu-id="0e6ff-212">Pour combattre ce problème, les informations à partir du bloc précédent sont mélangées dans le processus de chiffrement du bloc suivant.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-212">To combat this problem, information from the previous block is mixed into the process of encrypting the next block.</span></span> <span data-ttu-id="0e6ff-213">Par conséquent, la sortie de deux blocs de texte brut identiques est différente.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-213">Thus, the output of two identical plain text blocks is different.</span></span> <span data-ttu-id="0e6ff-214">Étant donné que cette technique utilise le bloc précédent pour chiffrer le bloc suivant, un vecteur d’initialisation est nécessaire pour chiffrer le premier bloc de données.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-214">Because this technique uses the previous block to encrypt the next block, an initialization vector is needed to encrypt the first block of data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e6ff-215">Une tentative d'affecter la valeur <see langword="null" /> au vecteur d'initialisation a été effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-215">An attempt was made to set the initialization vector to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0e6ff-216">Une tentative d'affecter une taille non valide au vecteur d'initialisation a été effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-216">An attempt was made to set the initialization vector to an invalid size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IVValue">
      <MemberSignature Language="C#" Value="protected byte[] IVValue;" />
      <MemberSignature Language="ILAsm" Value=".field family unsigned int8[] IVValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.IVValue" />
      <MemberSignature Language="VB.NET" Value="Protected IVValue As Byte() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Byte&gt; ^ IVValue;" />
      <MemberSignature Language="F#" Value="val mutable IVValue : byte[]" Usage="System.Security.Cryptography.SymmetricAlgorithm.IVValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-217">Représente le vecteur d'initialisation (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) pour l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-217">Represents the initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) for the symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-218">Ce champ est accessible via la <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-218">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public virtual byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.SymmetricAlgorithm.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-219">Obtient ou définit la clé secrète pour l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-219">Gets or sets the secret key for the symmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e6ff-220">Clé secrète à utiliser pour l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-220">The secret key to use for the symmetric algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-221">La clé secrète est utilisée à la fois pour le chiffrement et de déchiffrement.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-221">The secret key is used both for encryption and for decryption.</span></span> <span data-ttu-id="0e6ff-222">Pour un algorithme symétrique réussisse, la clé secrète doit être connue uniquement à l’expéditeur et le récepteur.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-222">For a symmetric algorithm to be successful, the secret key must be known only to the sender and the receiver.</span></span> <span data-ttu-id="0e6ff-223">Les tailles de clé valides sont spécifiées par l’implémentation de l’algorithme symétrique particulière et sont répertoriées dans le <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-223">The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 <span data-ttu-id="0e6ff-224">Si cette propriété est `null` lorsqu’il est utilisé, le <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> méthode est appelée pour créer une nouvelle valeur aléatoire.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-224">If this property is `null` when it is used, the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> method is called to create a new random value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e6ff-225">Une tentative d’affectation de la valeur <see langword="null" /> à la clé a été effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-225">An attempt was made to set the key to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0e6ff-226">La taille de la clé n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-226">The key size is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public virtual int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int with get, set" Usage="System.Security.Cryptography.SymmetricAlgorithm.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-227">Obtient ou définit la taille, en bits, de la clé secrète utilisée par l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-227">Gets or sets the size, in bits, of the secret key used by the symmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e6ff-228">Taille, en bits, de la clé secrète utilisée par l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-228">The size, in bits, of the secret key used by the symmetric algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-229">Les tailles de clé valides sont spécifiées par l’implémentation de l’algorithme symétrique particulière et sont répertoriées dans le <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-229">The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0e6ff-230">La taille de la clé n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-230">The key size is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="KeySizeValue">
      <MemberSignature Language="C#" Value="protected int KeySizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 KeySizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected KeySizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int KeySizeValue;" />
      <MemberSignature Language="F#" Value="val mutable KeySizeValue : int" Usage="System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-231">Représente la taille, en bits, de la clé secrète utilisée par l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-231">Represents the size, in bits, of the secret key used by the symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-232">Les tailles de clé valides sont spécifiées par l’implémentation de l’algorithme symétrique particulière et sont répertoriées dans le <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-232">The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 <span data-ttu-id="0e6ff-233">Ce champ est accessible via la <xref:System.Security.Cryptography.SymmetricAlgorithm.KeySize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-233">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.KeySize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="protected byte[] KeyValue;" />
      <MemberSignature Language="ILAsm" Value=".field family unsigned int8[] KeyValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.KeyValue" />
      <MemberSignature Language="VB.NET" Value="Protected KeyValue As Byte() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Byte&gt; ^ KeyValue;" />
      <MemberSignature Language="F#" Value="val mutable KeyValue : byte[]" Usage="System.Security.Cryptography.SymmetricAlgorithm.KeyValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-234">Représente la clé secrète pour l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-234">Represents the secret key for the symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-235">La clé secrète est utilisée à la fois pour le chiffrement et de déchiffrement.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-235">The secret key is used both for encryption and for decryption.</span></span> <span data-ttu-id="0e6ff-236">Pour un algorithme symétrique réussisse, la clé secrète doit être connue uniquement à l’expéditeur et le récepteur.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-236">For a symmetric algorithm to be successful, the secret key must be known only to the sender and the receiver.</span></span> <span data-ttu-id="0e6ff-237">Les tailles de clé valides sont spécifiées par l’implémentation de l’algorithme symétrique particulière et sont répertoriées dans le <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-237">The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 <span data-ttu-id="0e6ff-238">Ce champ est accessible via la <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-238">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalBlockSizes">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.KeySizes[] LegalBlockSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalBlockSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LegalBlockSizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalBlockSizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalBlockSizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-239">Obtient les tailles de bloc, en octets, prises en charge par l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-239">Gets the block sizes, in bits, that are supported by the symmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e6ff-240">Tableau qui contient les tailles de bloc prises en charge par l'algorithme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-240">An array that contains the block sizes supported by the algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-241">L’algorithme symétrique prend en charge uniquement les tailles de bloc qui correspondent à une entrée dans ce tableau.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-241">The symmetric algorithm supports only block sizes that match an entry in this array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6ff-242">L’exemple suivant affiche la valeur de <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A> pour les algorithmes symétriques.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-242">The following example shows the value of <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A> for the symmetric algorithms.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm.blocksize/cs/program.cs#1)]
 [!code-vb[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm.blocksize/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalBlockSizesValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.KeySizes[] LegalBlockSizesValue;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.KeySizes[] LegalBlockSizesValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue" />
      <MemberSignature Language="VB.NET" Value="Protected LegalBlockSizesValue As KeySizes() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalBlockSizesValue;" />
      <MemberSignature Language="F#" Value="val mutable LegalBlockSizesValue : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-243">Spécifie les tailles de bloc, en octets, prises en charge par l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-243">Specifies the block sizes, in bits, that are supported by the symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-244">L’algorithme symétrique prend en charge uniquement les tailles de bloc qui correspondent à une entrée dans ce tableau.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-244">The symmetric algorithm supports only block sizes that match an entry in this array.</span></span>  
  
 <span data-ttu-id="0e6ff-245">Ce champ est accessible via la <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-245">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-246">Obtient les tailles de clé, en octets, prises en charge par l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-246">Gets the key sizes, in bits, that are supported by the symmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e6ff-247">Tableau qui contient les tailles de clé prises en charge par l'algorithme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-247">An array that contains the key sizes supported by the algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-248">L’algorithme symétrique prend en charge uniquement les tailles de clé qui correspondent à une entrée dans ce tableau.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-248">The symmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e6ff-249">L’exemple suivant affiche la valeur de <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> pour les algorithmes symétriques.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-249">The following example shows the value of <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> for the symmetric algorithms.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm.blocksize/cs/program.cs#1)]
 [!code-vb[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm.blocksize/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizesValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.KeySizes[] LegalKeySizesValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue" />
      <MemberSignature Language="VB.NET" Value="Protected LegalKeySizesValue As KeySizes() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizesValue;" />
      <MemberSignature Language="F#" Value="val mutable LegalKeySizesValue : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-250">Spécifie les tailles de clé, en octets, prises en charge par l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-250">Specifies the key sizes, in bits, that are supported by the symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-251">L’algorithme symétrique prend en charge uniquement les tailles de clé qui correspondent à une entrée dans ce tableau.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-251">The symmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
 <span data-ttu-id="0e6ff-252">Ce champ est accessible via la <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-252">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.CipherMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CipherMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Mode As CipherMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::CipherMode Mode { System::Security::Cryptography::CipherMode get(); void set(System::Security::Cryptography::CipherMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Security.Cryptography.CipherMode with get, set" Usage="System.Security.Cryptography.SymmetricAlgorithm.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-253">Obtient ou définit le mode de fonctionnement pour l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-253">Gets or sets the mode for operation of the symmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e6ff-254">Mode de fonctionnement de l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-254">The mode for operation of the symmetric algorithm.</span>
          </span>
          <span data-ttu-id="0e6ff-255">La valeur par défaut est <see cref="F:System.Security.Cryptography.CipherMode.CBC" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-255">The default is <see cref="F:System.Security.Cryptography.CipherMode.CBC" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-256">Consultez <xref:System.Security.Cryptography.CipherMode> pour obtenir une description des modes spécifiques.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-256">See <xref:System.Security.Cryptography.CipherMode> enumeration for a description of specific modes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0e6ff-257">Le mode de chiffrement ne fait pas partie des valeurs <see cref="T:System.Security.Cryptography.CipherMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-257">The cipher mode is not one of the <see cref="T:System.Security.Cryptography.CipherMode" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ModeValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.CipherMode ModeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype System.Security.Cryptography.CipherMode ModeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.ModeValue" />
      <MemberSignature Language="VB.NET" Value="Protected ModeValue As CipherMode " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Security::Cryptography::CipherMode ModeValue;" />
      <MemberSignature Language="F#" Value="val mutable ModeValue : System.Security.Cryptography.CipherMode" Usage="System.Security.Cryptography.SymmetricAlgorithm.ModeValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-258">Représente le mode de chiffrement utilisé dans l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-258">Represents the cipher mode used in the symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-259">Consultez <xref:System.Security.Cryptography.CipherMode> pour obtenir une description des modes spécifiques.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-259">See <xref:System.Security.Cryptography.CipherMode> enumeration for a description of specific modes.</span></span>  
  
 <span data-ttu-id="0e6ff-260">Ce champ est accessible via la <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-260">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Security.Cryptography.PaddingMode with get, set" Usage="System.Security.Cryptography.SymmetricAlgorithm.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-261">Obtient ou définit le mode de remplissage utilisé dans l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-261">Gets or sets the padding mode used in the symmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e6ff-262">Mode de remplissage utilisé dans l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-262">The padding mode used in the symmetric algorithm.</span>
          </span>
          <span data-ttu-id="0e6ff-263">La valeur par défaut est <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-263">The default is <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-264">La plupart des messages en texte brut ne consistent pas d’un nombre d’octets qui remplit complètement les blocs.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-264">Most plain text messages do not consist of a number of bytes that completely fill blocks.</span></span> <span data-ttu-id="0e6ff-265">Souvent, il ne sont pas assez d’octets pour remplir le dernier bloc.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-265">Often, there are not enough bytes to fill the last block.</span></span> <span data-ttu-id="0e6ff-266">Dans ce cas, une chaîne de remplissage est ajoutée au texte.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-266">When this happens, a padding string is added to the text.</span></span> <span data-ttu-id="0e6ff-267">Par exemple, si la longueur du bloc est de 64 bits et le dernier bloc contient seulement 40 bits, 24 bits de remplissage sont ajoutés.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-267">For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</span></span> <span data-ttu-id="0e6ff-268">Consultez le <xref:System.Security.Cryptography.PaddingMode> pour obtenir une description des modes spécifiques.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-268">See the <xref:System.Security.Cryptography.PaddingMode> enumeration for a description of specific modes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="0e6ff-269">Le mode de remplissage ne fait pas partie des valeurs <see cref="T:System.Security.Cryptography.PaddingMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-269">The padding mode is not one of the <see cref="T:System.Security.Cryptography.PaddingMode" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PaddingValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.PaddingMode PaddingValue;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype System.Security.Cryptography.PaddingMode PaddingValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.PaddingValue" />
      <MemberSignature Language="VB.NET" Value="Protected PaddingValue As PaddingMode " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Security::Cryptography::PaddingMode PaddingValue;" />
      <MemberSignature Language="F#" Value="val mutable PaddingValue : System.Security.Cryptography.PaddingMode" Usage="System.Security.Cryptography.SymmetricAlgorithm.PaddingValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e6ff-270">Représente le mode de remplissage utilisé dans l'algorithme symétrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-270">Represents the padding mode used in the symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e6ff-271">La plupart des messages en texte brut ne consistent pas d’un nombre d’octets qui remplit complètement les blocs.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-271">Most plain text messages do not consist of a number of bytes that completely fill blocks.</span></span> <span data-ttu-id="0e6ff-272">Souvent, il ne sont pas assez d’octets pour remplir le dernier bloc.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-272">Often, there are not enough bytes to fill the last block.</span></span> <span data-ttu-id="0e6ff-273">Dans ce cas, une chaîne de remplissage est ajoutée au texte.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-273">When this happens, a padding string is added to the text.</span></span> <span data-ttu-id="0e6ff-274">Par exemple, si la longueur du bloc est de 64 bits et le dernier bloc contient seulement 40 bits, 24 bits de remplissage sont ajoutés.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-274">For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</span></span> <span data-ttu-id="0e6ff-275">Consultez le <xref:System.Security.Cryptography.PaddingMode> pour obtenir une description des modes spécifiques.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-275">See the <xref:System.Security.Cryptography.PaddingMode> enumeration for a description of specific modes.</span></span>  
  
 <span data-ttu-id="0e6ff-276">Ce champ est accessible via la <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0e6ff-276">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidKeySize">
      <MemberSignature Language="C#" Value="public bool ValidKeySize (int bitLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidKeySize(int32 bitLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidKeySize (bitLength As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidKeySize(int bitLength);" />
      <MemberSignature Language="F#" Value="member this.ValidKeySize : int -&gt; bool" Usage="symmetricAlgorithm.ValidKeySize bitLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bitLength">
          <span data-ttu-id="0e6ff-277">Longueur, en bits, à vérifier pour une taille de clé valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-277">The length, in bits, to check for a valid key size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e6ff-278">Détermine si la taille de clé spécifiée est valide pour l'algorithme actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-278">Determines whether the specified key size is valid for the current algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e6ff-279">
            <see langword="true" /> si la taille de clé spécifiée est valide pour l'algorithme en cours ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e6ff-279">
              <see langword="true" /> if the specified key size is valid for the current algorithm; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>