<Type Name="AsymmetricSignatureDeformatter" FullName="System.Security.Cryptography.AsymmetricSignatureDeformatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c3ee5c95cf52cd4d08afd0815e5b7ced38181a8d" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48712137" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class AsymmetricSignatureDeformatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsymmetricSignatureDeformatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsymmetricSignatureDeformatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsymmetricSignatureDeformatter abstract" />
  <TypeSignature Language="F#" Value="type AsymmetricSignatureDeformatter = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e7f24-101">Représente la classe de base abstraite dont toutes les implémentations des modules de déformatage de signature asymétriques dérivent.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7f24-101">Represents the abstract base class from which all implementations of asymmetric signature deformatters derive.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f24-102">Modules de déformatage de signature asymétrique vérifient les signatures numériques qui sont créés à l’aide d’implémentations de <xref:System.Security.Cryptography.AsymmetricSignatureFormatter>.</span><span class="sxs-lookup"><span data-stu-id="e7f24-102">Asymmetric signature deformatters verify the digital signatures that are created using implementations of <xref:System.Security.Cryptography.AsymmetricSignatureFormatter>.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
      <span data-ttu-id="e7f24-103">services de chiffrement</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7f24-103">Cryptographic Services</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsymmetricSignatureDeformatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsymmetricSignatureDeformatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7f24-104">Initialise une nouvelle instance de <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-104">Initializes a new instance of <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f24-105">Vous ne pouvez pas créer une instance d’une classe abstraite.</span><span class="sxs-lookup"><span data-stu-id="e7f24-105">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="e7f24-106">Code d’application créera une nouvelle instance d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="e7f24-106">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="e7f24-107">Utilisez des implémentations de <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A> et <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A> pour définir l’algorithme de hachage et de la clé avant d’appeler une implémentation de <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7f24-107">Use implementations of <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A> and <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A> to set the key and hash algorithm before calling an implementation of <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="e7f24-108">services de chiffrement</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-108">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SetHashAlgorithm">
      <MemberSignature Language="C#" Value="public abstract void SetHashAlgorithm (string strName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHashAlgorithm(string strName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetHashAlgorithm (strName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetHashAlgorithm(System::String ^ strName);" />
      <MemberSignature Language="F#" Value="abstract member SetHashAlgorithm : string -&gt; unit" Usage="asymmetricSignatureDeformatter.SetHashAlgorithm strName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strName">
          <span data-ttu-id="e7f24-109">Nom de l’algorithme de hachage à utiliser pour vérifier la signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-109">The name of the hash algorithm to use for verifying the signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f24-110">En cas de remplacement dans une classe dérivée, définit l’algorithme de hachage à utiliser pour vérifier la signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-110">When overridden in a derived class, sets the hash algorithm to use for verifying the signature.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f24-111">Vous devez définir un algorithme de hachage avant d’appeler une implémentation de <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7f24-111">You must set a hash algorithm before calling an implementation of <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="e7f24-112">services de chiffrement</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-112">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SetKey">
      <MemberSignature Language="C#" Value="public abstract void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetKey(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetKey (key As AsymmetricAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetKey(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberSignature Language="F#" Value="abstract member SetKey : System.Security.Cryptography.AsymmetricAlgorithm -&gt; unit" Usage="asymmetricSignatureDeformatter.SetKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e7f24-113">Instance d'une implémentation de <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> qui contient la clé publique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-113">The instance of an implementation of <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that holds the public key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f24-114">En cas de substitution dans une classe dérivée, définit la clé publique à utiliser pour vérifier la signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-114">When overridden in a derived class, sets the public key to use for verifying the signature.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f24-115">Vous devez définir une clé avant d’appeler une implémentation de <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7f24-115">You must set a key before calling an implementation of <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="e7f24-116">services de chiffrement</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-116">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifySignature">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7f24-117">Vérifie la signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-117">Verifies the signature.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public abstract bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifySignature(unsigned int8[] rgbHash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function VerifySignature (rgbHash As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool VerifySignature(cli::array &lt;System::Byte&gt; ^ rgbHash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberSignature Language="F#" Value="abstract member VerifySignature : byte[] * byte[] -&gt; bool" Usage="asymmetricSignatureDeformatter.VerifySignature (rgbHash, rgbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="e7f24-118">Données signées avec <c>rgbSignature</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-118">The data signed with <c>rgbSignature</c>.</span>
          </span>
        </param>
        <param name="rgbSignature">
          <span data-ttu-id="e7f24-119">Signature à vérifier pour <c>rgbHash</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-119">The signature to be verified for <c>rgbHash</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f24-120">En cas de substitution dans une classe dérivée, vérifie la signature des données spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-120">When overridden in a derived class, verifies the signature for the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f24-121">
            <see langword="true" /> si <paramref name="rgbSignature" /> correspond à la signature calculée à l'aide de l'algorithme de hachage et de la clé spécifiés sur <paramref name="rgbHash" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-121">
              <see langword="true" /> if <paramref name="rgbSignature" /> matches the signature computed using the specified hash algorithm and key on <paramref name="rgbHash" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f24-122">Avant d’appeler cette méthode, vous devez spécifier une clé publique et un algorithme de hachage.</span><span class="sxs-lookup"><span data-stu-id="e7f24-122">You must specify a public key and a hash algorithm before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="e7f24-123">services de chiffrement</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-123">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public virtual bool VerifySignature (System.Security.Cryptography.HashAlgorithm hash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifySignature(class System.Security.Cryptography.HashAlgorithm hash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifySignature (hash As HashAlgorithm, rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifySignature(System::Security::Cryptography::HashAlgorithm ^ hash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberSignature Language="F#" Value="abstract member VerifySignature : System.Security.Cryptography.HashAlgorithm * byte[] -&gt; bool&#xA;override this.VerifySignature : System.Security.Cryptography.HashAlgorithm * byte[] -&gt; bool" Usage="asymmetricSignatureDeformatter.VerifySignature (hash, rgbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash">
          <span data-ttu-id="e7f24-124">Algorithme de hachage à utiliser pour vérifier la signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-124">The hash algorithm to use to verify the signature.</span>
          </span>
        </param>
        <param name="rgbSignature">
          <span data-ttu-id="e7f24-125">Signature à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-125">The signature to be verified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f24-126">Vérifie la signature de la valeur de hachage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-126">Verifies the signature from the specified hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f24-127">
            <see langword="true" /> si la signature est valide pour le hachage ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-127">
              <see langword="true" /> if the signature is valid for the hash; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f24-128">Cette méthode définit l’algorithme de hachage à utiliser avant de vérifier la signature de la valeur d’algorithme de hachage d’entrée.</span><span class="sxs-lookup"><span data-stu-id="e7f24-128">This method sets the hash algorithm to be used before verifying the signature of the input hash algorithm value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7f24-129">Le paramètre <paramref name="hash" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-129">The <paramref name="hash" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="e7f24-130">services de chiffrement</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f24-130">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>