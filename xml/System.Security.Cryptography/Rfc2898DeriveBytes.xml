<Type Name="Rfc2898DeriveBytes" FullName="System.Security.Cryptography.Rfc2898DeriveBytes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33ee2fd66fc05f288789835988a052f4e50d1055" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51877136" /></Metadata><TypeSignature Language="C#" Value="public class Rfc2898DeriveBytes : System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Rfc2898DeriveBytes extends System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Rfc2898DeriveBytes" />
  <TypeSignature Language="VB.NET" Value="Public Class Rfc2898DeriveBytes&#xA;Inherits DeriveBytes" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rfc2898DeriveBytes : System::Security::Cryptography::DeriveBytes" />
  <TypeSignature Language="F#" Value="type Rfc2898DeriveBytes = class&#xA;    inherit DeriveBytes" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DeriveBytes</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6d206-101">Implémente une fonctionnalité de dérivation de clé basée sur mot de passe, PBKDF2, en utilisant un générateur de nombres pseudo-aléatoires basé sur <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span><span class="sxs-lookup"><span data-stu-id="6d206-101">Implements password-based key derivation functionality, PBKDF2, by using a pseudo-random number generator based on <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d206-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> prend un mot de passe, un salt et un nombre d’itérations, puis génère des clés via des appels à la <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6d206-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span>  
  
 <span data-ttu-id="6d206-103">La RFC 2898 comporte des méthodes pour la création d’un vecteur de clé et d’initialisation (IV) à partir d’un mot de passe et le salt.</span><span class="sxs-lookup"><span data-stu-id="6d206-103">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="6d206-104">Vous pouvez utiliser PBKDF2, une fonction de dérivation de clé basée sur mot de passe, pour dériver les clés à l’aide d’une fonction pseudo-aléatoire qui autorise des clés de longueur quasi-illimitée doit être généré.</span><span class="sxs-lookup"><span data-stu-id="6d206-104">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="6d206-105">Le <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe peut être utilisée pour produire une clé dérivée d’une clé de base et d’autres paramètres.</span><span class="sxs-lookup"><span data-stu-id="6d206-105">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="6d206-106">Dans une fonction de dérivation de clé basée sur mot de passe, la clé de base est un mot de passe et les autres paramètres sont une valeur salt et un nombre d’itérations.</span><span class="sxs-lookup"><span data-stu-id="6d206-106">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="6d206-107">Pour plus d’informations sur PBKDF2, consultez la RFC 2898, « PKCS #5 : Password-Based Cryptography Specification Version 2.0, » disponible sur le [site Web de commentaires des](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="6d206-107">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="6d206-108">Pour plus d’informations, consultez la section 5.2, « PBKDF2, ».</span><span class="sxs-lookup"><span data-stu-id="6d206-108">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d206-109">Ne codez jamais un mot de passe dans votre code source.</span><span class="sxs-lookup"><span data-stu-id="6d206-109">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="6d206-110">Codé en dur les mots de passe peuvent être récupérées à partir d’un assembly à l’aide de la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), à l’aide d’un éditeur hexadécimal, ou en ouvrant simplement l’assembly dans un éditeur de texte tel que Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="6d206-110">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d206-111">Le code suivant exemple utilise le <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clés de la classe pour créer deux identiques pour la <xref:System.Security.Cryptography.TripleDES> classe.</span><span class="sxs-lookup"><span data-stu-id="6d206-111">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="6d206-112">Ensuite, il chiffre et déchiffre des données à l’aide des clés.</span><span class="sxs-lookup"><span data-stu-id="6d206-112">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="6d206-113">services de chiffrement</span><span class="sxs-lookup"><span data-stu-id="6d206-113">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d206-114">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />.</span><span class="sxs-lookup"><span data-stu-id="6d206-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="6d206-115">Mot de passe utilisé pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-115">The password used to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="6d206-116">Salt de clé utilisé pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-116">The key salt used to derive the key.</span></span></param>
        <summary><span data-ttu-id="6d206-117">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> à l'aide d'un mot de passe et d'un salt pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password and salt to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d206-118">La taille de salt doit être de 8 octets ou plus.</span><span class="sxs-lookup"><span data-stu-id="6d206-118">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="6d206-119">La RFC 2898 comporte des méthodes pour la création d’un vecteur de clé et d’initialisation (IV) à partir d’un mot de passe et le salt.</span><span class="sxs-lookup"><span data-stu-id="6d206-119">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="6d206-120">Vous pouvez utiliser PBKDF2, une fonction de dérivation de clé basée sur mot de passe, pour dériver les clés à l’aide d’une fonction pseudo-aléatoire qui autorise des clés de longueur quasi-illimitée doit être généré.</span><span class="sxs-lookup"><span data-stu-id="6d206-120">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="6d206-121">Le <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe peut être utilisée pour produire une clé dérivée d’une clé de base et d’autres paramètres.</span><span class="sxs-lookup"><span data-stu-id="6d206-121">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="6d206-122">Dans une fonction de dérivation de clé basée sur mot de passe, la clé de base est un mot de passe et les autres paramètres sont une valeur salt et un nombre d’itérations.</span><span class="sxs-lookup"><span data-stu-id="6d206-122">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="6d206-123">Pour plus d’informations sur PBKDF2, consultez la RFC 2898, « PKCS #5 : Password-Based Cryptography Specification Version 2.0, » disponible sur le [site Web de commentaires des](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="6d206-123">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="6d206-124">Pour plus d’informations, consultez la section 5.2, « PBKDF2, ».</span><span class="sxs-lookup"><span data-stu-id="6d206-124">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d206-125">Ne codez jamais un mot de passe dans votre code source.</span><span class="sxs-lookup"><span data-stu-id="6d206-125">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="6d206-126">Codé en dur les mots de passe peuvent être récupérées à partir d’un assembly à l’aide de la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), à l’aide d’un éditeur hexadécimal, ou en ouvrant simplement l’assembly dans un éditeur de texte tel que Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="6d206-126">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d206-127">Le code suivant exemple utilise le <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clés de la classe pour créer deux identiques pour la <xref:System.Security.Cryptography.TripleDES> classe.</span><span class="sxs-lookup"><span data-stu-id="6d206-127">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="6d206-128">Ensuite, il chiffre et déchiffre des données à l’aide des clés.</span><span class="sxs-lookup"><span data-stu-id="6d206-128">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d206-129">La taille de salt spécifiée est inférieure à 8 octets ou le nombre d'itérations est inférieur à 1.</span><span class="sxs-lookup"><span data-stu-id="6d206-129">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d206-130">Le mot de passe ou le salt est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6d206-130">The password or salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="6d206-131">services de chiffrement</span><span class="sxs-lookup"><span data-stu-id="6d206-131">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="6d206-132">Mot de passe utilisé pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-132">The password used to derive the key.</span></span></param>
        <param name="saltSize"><span data-ttu-id="6d206-133">Taille du salt aléatoire que vous souhaitez que la classe génère.</span><span class="sxs-lookup"><span data-stu-id="6d206-133">The size of the random salt that you want the class to generate.</span></span></param>
        <summary><span data-ttu-id="6d206-134">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> à l'aide du mot de passe et de la taille de salt pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-134">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the password and salt size to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d206-135">La taille de salt doit être de 8 octets ou plus.</span><span class="sxs-lookup"><span data-stu-id="6d206-135">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="6d206-136">La RFC 2898 comporte des méthodes pour la création d’un vecteur de clé et d’initialisation (IV) à partir d’un mot de passe et le salt.</span><span class="sxs-lookup"><span data-stu-id="6d206-136">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="6d206-137">Vous pouvez utiliser PBKDF2, une fonction de dérivation de clé basée sur mot de passe, pour dériver les clés à l’aide d’une fonction pseudo-aléatoire qui autorise des clés de longueur quasi-illimitée doit être généré.</span><span class="sxs-lookup"><span data-stu-id="6d206-137">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="6d206-138">Le <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe peut être utilisée pour produire une clé dérivée d’une clé de base et d’autres paramètres.</span><span class="sxs-lookup"><span data-stu-id="6d206-138">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="6d206-139">Dans une fonction de dérivation de clé basée sur mot de passe, la clé de base est un mot de passe et les autres paramètres sont une valeur salt et un nombre d’itérations.</span><span class="sxs-lookup"><span data-stu-id="6d206-139">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="6d206-140">Pour plus d’informations sur PBKDF2, consultez la RFC 2898, « PKCS #5 : Password-Based Cryptography Specification Version 2.0, » disponible sur le [site Web de commentaires des](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="6d206-140">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="6d206-141">Pour plus d’informations, consultez la section 5.2, « PBKDF2, ».</span><span class="sxs-lookup"><span data-stu-id="6d206-141">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d206-142">Ne codez jamais un mot de passe dans votre code source.</span><span class="sxs-lookup"><span data-stu-id="6d206-142">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="6d206-143">Codé en dur les mots de passe peuvent être récupérées à partir d’un assembly à l’aide de la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), à l’aide d’un éditeur hexadécimal, ou en ouvrant simplement l’assembly dans un éditeur de texte tel que Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="6d206-143">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d206-144">La taille de salt spécifiée est inférieure à 8 octets.</span><span class="sxs-lookup"><span data-stu-id="6d206-144">The specified salt size is smaller than 8 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d206-145">Le mot de passe ou le salt est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6d206-145">The password or salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="6d206-146">services de chiffrement</span><span class="sxs-lookup"><span data-stu-id="6d206-146">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : byte[] * byte[] * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="6d206-147">Mot de passe utilisé pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-147">The password used to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="6d206-148">Salt de clé utilisé pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-148">The key salt used to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="6d206-149">Nombre d'itérations pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="6d206-149">The number of iterations for the operation.</span></span></param>
        <summary><span data-ttu-id="6d206-150">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> à l'aide d'un mot de passe, d'un salt et d'un nombre d'itérations pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-150">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d206-151">La taille de salt doit être de 8 octets ou plus et le nombre d’itérations doit être supérieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="6d206-151">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="6d206-152">Le nombre minimal recommandé d’itérations est 1000.</span><span class="sxs-lookup"><span data-stu-id="6d206-152">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="6d206-153">La RFC 2898 comporte des méthodes pour la création d’un vecteur de clé et d’initialisation (IV) à partir d’un mot de passe et le salt.</span><span class="sxs-lookup"><span data-stu-id="6d206-153">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="6d206-154">Vous pouvez utiliser PBKDF2, une fonction de dérivation de clé basée sur mot de passe, pour dériver les clés à l’aide d’une fonction pseudo-aléatoire qui autorise des clés de longueur quasi-illimitée doit être généré.</span><span class="sxs-lookup"><span data-stu-id="6d206-154">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="6d206-155">Le <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe peut être utilisée pour produire une clé dérivée d’une clé de base et d’autres paramètres.</span><span class="sxs-lookup"><span data-stu-id="6d206-155">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="6d206-156">Dans une fonction de dérivation de clé basée sur mot de passe, la clé de base est un mot de passe et les autres paramètres sont une valeur salt et un nombre d’itérations.</span><span class="sxs-lookup"><span data-stu-id="6d206-156">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="6d206-157">Pour plus d’informations sur PBKDF2, consultez la RFC 2898, « PKCS #5 : Password-Based Cryptography Specification Version 2.0, » disponible sur le [site Web de commentaires des](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="6d206-157">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="6d206-158">Pour plus d’informations, consultez la section 5.2, « PBKDF2, ».</span><span class="sxs-lookup"><span data-stu-id="6d206-158">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d206-159">Ne codez jamais un mot de passe dans votre code source.</span><span class="sxs-lookup"><span data-stu-id="6d206-159">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="6d206-160">Codé en dur les mots de passe peuvent être récupérées à partir d’un assembly à l’aide de la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), à l’aide d’un éditeur hexadécimal, ou en ouvrant simplement l’assembly dans un éditeur de texte tel que Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="6d206-160">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d206-161">La taille de salt spécifiée est inférieure à 8 octets ou le nombre d'itérations est inférieur à 1.</span><span class="sxs-lookup"><span data-stu-id="6d206-161">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d206-162">Le mot de passe ou le salt est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6d206-162">The password or salt is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="6d206-163">Mot de passe utilisé pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-163">The password used to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="6d206-164">Salt de clé utilisé pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-164">The key salt used to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="6d206-165">Nombre d'itérations pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="6d206-165">The number of iterations for the operation.</span></span></param>
        <summary><span data-ttu-id="6d206-166">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> à l'aide d'un mot de passe, d'un salt et d'un nombre d'itérations pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-166">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d206-167">La taille de salt doit être de 8 octets ou plus et le nombre d’itérations doit être supérieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="6d206-167">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="6d206-168">Le nombre minimal recommandé d’itérations est 1000.</span><span class="sxs-lookup"><span data-stu-id="6d206-168">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="6d206-169">La RFC 2898 comporte des méthodes pour la création d’un vecteur de clé et d’initialisation (IV) à partir d’un mot de passe et le salt.</span><span class="sxs-lookup"><span data-stu-id="6d206-169">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="6d206-170">Vous pouvez utiliser PBKDF2, une fonction de dérivation de clé basée sur mot de passe, pour dériver les clés à l’aide d’une fonction pseudo-aléatoire qui autorise des clés de longueur quasi-illimitée doit être généré.</span><span class="sxs-lookup"><span data-stu-id="6d206-170">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="6d206-171">Le <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe peut être utilisée pour produire une clé dérivée d’une clé de base et d’autres paramètres.</span><span class="sxs-lookup"><span data-stu-id="6d206-171">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="6d206-172">Dans une fonction de dérivation de clé basée sur mot de passe, la clé de base est un mot de passe et les autres paramètres sont une valeur salt et un nombre d’itérations.</span><span class="sxs-lookup"><span data-stu-id="6d206-172">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="6d206-173">Pour plus d’informations sur PBKDF2, consultez la RFC 2898, « PKCS #5 : Password-Based Cryptography Specification Version 2.0, » disponible sur le [site Web de commentaires des](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="6d206-173">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="6d206-174">Pour plus d’informations, consultez la section 5.2, « PBKDF2, ».</span><span class="sxs-lookup"><span data-stu-id="6d206-174">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d206-175">Ne codez jamais un mot de passe dans votre code source.</span><span class="sxs-lookup"><span data-stu-id="6d206-175">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="6d206-176">Codé en dur les mots de passe peuvent être récupérées à partir d’un assembly à l’aide de la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), à l’aide d’un éditeur hexadécimal, ou en ouvrant simplement l’assembly dans un éditeur de texte tel que Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="6d206-176">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d206-177">Le code suivant exemple utilise le <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clés de la classe pour créer deux identiques pour la <xref:System.Security.Cryptography.TripleDES> classe.</span><span class="sxs-lookup"><span data-stu-id="6d206-177">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="6d206-178">Ensuite, il chiffre et déchiffre des données à l’aide des clés.</span><span class="sxs-lookup"><span data-stu-id="6d206-178">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d206-179">La taille de salt spécifiée est inférieure à 8 octets ou le nombre d'itérations est inférieur à 1.</span><span class="sxs-lookup"><span data-stu-id="6d206-179">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d206-180">Le mot de passe ou le salt est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6d206-180">The password or salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="6d206-181">services de chiffrement</span><span class="sxs-lookup"><span data-stu-id="6d206-181">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="6d206-182">Mot de passe utilisé pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-182">The password used to derive the key.</span></span></param>
        <param name="saltSize"><span data-ttu-id="6d206-183">Taille du salt aléatoire que vous souhaitez que la classe génère.</span><span class="sxs-lookup"><span data-stu-id="6d206-183">The size of the random salt that you want the class to generate.</span></span></param>
        <param name="iterations"><span data-ttu-id="6d206-184">Nombre d'itérations pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="6d206-184">The number of iterations for the operation.</span></span></param>
        <summary><span data-ttu-id="6d206-185">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> à l'aide d'un mot de passe, d'une taille de salt et d'un nombre d'itérations pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-185">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt size, and number of iterations to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d206-186">La taille de salt doit être de 8 octets ou plus et le nombre d’itérations doit être supérieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="6d206-186">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="6d206-187">Le nombre minimal recommandé d’itérations est 1000.</span><span class="sxs-lookup"><span data-stu-id="6d206-187">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="6d206-188">La RFC 2898 comporte des méthodes pour la création d’un vecteur de clé et d’initialisation (IV) à partir d’un mot de passe et le salt.</span><span class="sxs-lookup"><span data-stu-id="6d206-188">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="6d206-189">Vous pouvez utiliser PBKDF2, une fonction de dérivation de clé basée sur mot de passe, pour dériver les clés à l’aide d’une fonction pseudo-aléatoire qui autorise des clés de longueur quasi-illimitée doit être généré.</span><span class="sxs-lookup"><span data-stu-id="6d206-189">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="6d206-190">Le <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe peut être utilisée pour produire une clé dérivée d’une clé de base et d’autres paramètres.</span><span class="sxs-lookup"><span data-stu-id="6d206-190">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="6d206-191">Dans une fonction de dérivation de clé basée sur mot de passe, la clé de base est un mot de passe et les autres paramètres sont une valeur salt et un nombre d’itérations.</span><span class="sxs-lookup"><span data-stu-id="6d206-191">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="6d206-192">Pour plus d’informations sur PBKDF2, consultez la RFC 2898, « PKCS #5 : Password-Based Cryptography Specification Version 2.0, » disponible sur le [site Web de commentaires des](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="6d206-192">For more information on PBKDF2, see RFC 2898,"PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="6d206-193">Pour plus d’informations, consultez la section 5.2, « PBKDF2, ».</span><span class="sxs-lookup"><span data-stu-id="6d206-193">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d206-194">Ne codez jamais un mot de passe dans votre code source.</span><span class="sxs-lookup"><span data-stu-id="6d206-194">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="6d206-195">Codé en dur les mots de passe peuvent être récupérées à partir d’un assembly à l’aide de la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), à l’aide d’un éditeur hexadécimal, ou en ouvrant simplement l’assembly dans un éditeur de texte tel que Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="6d206-195">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d206-196">La taille de salt spécifiée est inférieure à 8 octets ou le nombre d'itérations est inférieur à 1.</span><span class="sxs-lookup"><span data-stu-id="6d206-196">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d206-197">Le mot de passe ou le salt est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6d206-197">The password or salt is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6d206-198"><paramref name="iterations" /> est hors limites.</span><span class="sxs-lookup"><span data-stu-id="6d206-198"><paramref name="iterations" /> is out of range.</span></span> <span data-ttu-id="6d206-199">Ce paramètre requiert un nombre non négatif.</span><span class="sxs-lookup"><span data-stu-id="6d206-199">This parameter requires a non-negative number.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="6d206-200">services de chiffrement</span><span class="sxs-lookup"><span data-stu-id="6d206-200">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : byte[] * byte[] * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="6d206-201">Mot de passe à utiliser pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-201">The password to use to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="6d206-202">Salt de clé à utiliser pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-202">The key salt to use to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="6d206-203">Nombre d'itérations pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="6d206-203">The number of iterations for the operation.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="6d206-204">Algorithme de hachage à utiliser pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-204">The hash algorithm to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="6d206-205">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> en utilisant le mot de passe, le salt, le nombre d’itérations et le nom de l’algorithme de hachage spécifiés pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-205">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt, number of iterations and the hash algorithm name to derive the key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6d206-206"><paramref name="saltSize" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="6d206-206"><paramref name="saltSize" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d206-207">La propriété <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> de <paramref name="hashAlgorithm" /> est <see langword="null" /> ou <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="6d206-207">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="6d206-208">Le nom de l’algorithme de hachage n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="6d206-208">Hash algorithm name is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="6d206-209">Mot de passe à utiliser pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-209">The password to use to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="6d206-210">Salt de clé à utiliser pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-210">The key salt to use to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="6d206-211">Nombre d'itérations pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="6d206-211">The number of iterations for the operation.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="6d206-212">Algorithme de hachage à utiliser pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-212">The hash algorithm to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="6d206-213">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> en utilisant le mot de passe, le salt, le nombre d’itérations et le nom de l’algorithme de hachage spécifiés pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-213">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt, number of iterations and the hash algorithm name to derive the key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d206-214">La propriété <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> de <paramref name="hashAlgorithm" /> est <see langword="null" /> ou <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="6d206-214">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="6d206-215">Le nom de l’algorithme de hachage n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="6d206-215">Hash algorithm name is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="6d206-216">Mot de passe à utiliser pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-216">The password to use to derive the key.</span></span></param>
        <param name="saltSize"><span data-ttu-id="6d206-217">Taille du salt aléatoire que vous souhaitez que la classe génère.</span><span class="sxs-lookup"><span data-stu-id="6d206-217">The size of the random salt that you want the class to generate.</span></span></param>
        <param name="iterations"><span data-ttu-id="6d206-218">Nombre d'itérations pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="6d206-218">The number of iterations for the operation.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="6d206-219">Algorithme de hachage à utiliser pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-219">The hash algorithm to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="6d206-220">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> en utilisant le mot de passe, la taille de salt, le nombre d’itérations et le nom de l’algorithme de hachage spécifiés pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-220">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt size, number of iterations and the hash algorithm name to derive the key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6d206-221"><paramref name="saltSize" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="6d206-221"><paramref name="saltSize" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d206-222">La propriété <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> de <paramref name="hashAlgorithm" /> est <see langword="null" /> ou <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="6d206-222">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="6d206-223">Le nom de l’algorithme de hachage n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="6d206-223">Hash algorithm name is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CryptDeriveKey">
      <MemberSignature Language="C#" Value="public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] CryptDeriveKey(string algname, string alghashname, int32 keySize, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CryptDeriveKey (algname As String, alghashname As String, keySize As Integer, rgbIV As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ CryptDeriveKey(System::String ^ algname, System::String ^ alghashname, int keySize, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="member this.CryptDeriveKey : string * string * int * byte[] -&gt; byte[]" Usage="rfc2898DeriveBytes.CryptDeriveKey (algname, alghashname, keySize, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algname" Type="System.String" />
        <Parameter Name="alghashname" Type="System.String" />
        <Parameter Name="keySize" Type="System.Int32" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algname"><span data-ttu-id="6d206-224">Nom de l'algorithme pour lequel la clé doit être dérivée.</span><span class="sxs-lookup"><span data-stu-id="6d206-224">The algorithm name for which to derive the key.</span></span></param>
        <param name="alghashname"><span data-ttu-id="6d206-225">Nom de l'algorithme de hachage à utiliser pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-225">The hash algorithm name to use to derive the key.</span></span></param>
        <param name="keySize"><span data-ttu-id="6d206-226">Taille de la clé à dériver, en bits.</span><span class="sxs-lookup"><span data-stu-id="6d206-226">The size of the key, in bits, to derive.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="6d206-227">Vecteur d'initialisation (IV) à utiliser pour dériver la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-227">The initialization vector (IV) to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="6d206-228">Dérive une clé de chiffrement de l'objet <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />.</span><span class="sxs-lookup"><span data-stu-id="6d206-228">Derives a cryptographic key from the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> object.</span></span></summary>
        <returns><span data-ttu-id="6d206-229">Clé dérivée.</span><span class="sxs-lookup"><span data-stu-id="6d206-229">The derived key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d206-230">Cette fonction est un wrapper pour la fonction de l’API Crypto CryptDeriveKey() et est destinée à offrir une interopérabilité avec les applications à l’aide de l’API Crypto.</span><span class="sxs-lookup"><span data-stu-id="6d206-230">This function is a wrapper for the Crypto API function CryptDeriveKey(), and is intended to offer interoperability with applications using the Crypto API.</span></span>  
  
 <span data-ttu-id="6d206-231">Si le `keySize` paramètre est défini sur les bits 0, la taille de clé par défaut pour l’algorithme spécifié est utilisée.</span><span class="sxs-lookup"><span data-stu-id="6d206-231">If the `keySize` parameter is set to 0 bits, the default key size for the specified algorithm is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="6d206-232">Le paramètre <paramref name="keySize" /> est incorrect.</span><span class="sxs-lookup"><span data-stu-id="6d206-232">The <paramref name="keySize" /> parameter is incorrect.</span></span>  
  
<span data-ttu-id="6d206-233">- ou -</span><span class="sxs-lookup"><span data-stu-id="6d206-233">-or-</span></span> 
<span data-ttu-id="6d206-234">Le fournisseur de services de chiffrement ne peut pas être acquis.</span><span class="sxs-lookup"><span data-stu-id="6d206-234">The cryptographic service provider (CSP) cannot be acquired.</span></span>  
  
<span data-ttu-id="6d206-235">- ou -</span><span class="sxs-lookup"><span data-stu-id="6d206-235">-or-</span></span> 
<span data-ttu-id="6d206-236">Le paramètre <paramref name="algname" /> n'est pas un nom d'algorithme valide.</span><span class="sxs-lookup"><span data-stu-id="6d206-236">The <paramref name="algname" /> parameter is not a valid algorithm name.</span></span>  
  
<span data-ttu-id="6d206-237">- ou -</span><span class="sxs-lookup"><span data-stu-id="6d206-237">-or-</span></span> 
<span data-ttu-id="6d206-238">Le paramètre <paramref name="alghashname" /> n'est pas un nom d'algorithme de hachage valide.</span><span class="sxs-lookup"><span data-stu-id="6d206-238">The <paramref name="alghashname" /> parameter is not a valid hash algorithm name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="rfc2898DeriveBytes.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="6d206-239"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="6d206-239"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="6d206-240">Libère les ressources non managées utilisées par la classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> et libère éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="6d206-240">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d206-241">Cette méthode est appelée par le public `Dispose()` (méthode) et le `Finalize` (méthode).</span><span class="sxs-lookup"><span data-stu-id="6d206-241">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="6d206-242">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec le `disposing` paramètre défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="6d206-242">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="6d206-243">`Finalize` appelle `Dispose` avec `disposing` défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="6d206-243">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="6d206-244">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="6d206-244">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.Rfc2898DeriveBytes> references.</span></span> <span data-ttu-id="6d206-245">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="6d206-245">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6d206-246">
            <see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span><span class="sxs-lookup"><span data-stu-id="6d206-246">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="6d206-247">Lors de la substitution <see langword="Dispose(Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d’un précédent appel à <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="6d206-247">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="6d206-248">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="6d206-248">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="6d206-249">Pour plus d’informations sur <see langword="Dispose" /> et <see langword="Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="6d206-249">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (cb As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(int cb);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int -&gt; byte[]" Usage="rfc2898DeriveBytes.GetBytes cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb"><span data-ttu-id="6d206-250">Nombre d'octets de clé pseudo-aléatoires à générer.</span><span class="sxs-lookup"><span data-stu-id="6d206-250">The number of pseudo-random key bytes to generate.</span></span></param>
        <summary><span data-ttu-id="6d206-251">Retourne la clé pseudo-aléatoire de cet objet.</span><span class="sxs-lookup"><span data-stu-id="6d206-251">Returns the pseudo-random key for this object.</span></span></summary>
        <returns><span data-ttu-id="6d206-252">Tableau d'octets rempli avec des octets de clé pseudo-aléatoires.</span><span class="sxs-lookup"><span data-stu-id="6d206-252">A byte array filled with pseudo-random key bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d206-253">Le <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe implémente la fonctionnalité PBKDF2 en utilisant un générateur de nombres pseudo-aléatoires basé sur <xref:System.Security.Cryptography.HMACSHA1>.</span><span class="sxs-lookup"><span data-stu-id="6d206-253">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class implements PBKDF2 functionality by using a pseudorandom number generator based on <xref:System.Security.Cryptography.HMACSHA1>.</span></span> <span data-ttu-id="6d206-254">Le <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe prend un mot de passe, un salt et un nombre d’itérations, puis génère des clés via des appels à la <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6d206-254">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span> <span data-ttu-id="6d206-255">Les appels répétés à cette méthode ne génèrent pas de la même clé. au lieu de cela, ajoutez deux appels de la <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> méthode avec un `cb` valeur du paramètre de `20` est l’équivalent de l’appel le <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> méthode une fois avec un `cb` valeur du paramètre de `40`.</span><span class="sxs-lookup"><span data-stu-id="6d206-255">Repeated calls to this method will not generate the same key; instead, appending two calls of the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method with a `cb` parameter value of `20` is the equivalent of calling the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method once with a `cb` parameter value of `40`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d206-256">L’exemple suivant montre comment utiliser le <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> méthode pour obtenir la clé d’une instance de <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="6d206-256">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method to get the key for an instance of <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span></span> <span data-ttu-id="6d206-257">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe.</span><span class="sxs-lookup"><span data-stu-id="6d206-257">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#2](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#2)]
 [!code-csharp[rfc28981#2](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#2)]
 [!code-vb[rfc28981#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6d206-258"><paramref name="cb" /> est hors limites.</span><span class="sxs-lookup"><span data-stu-id="6d206-258"><paramref name="cb" /> is out of range.</span></span> <span data-ttu-id="6d206-259">Ce paramètre requiert un nombre non négatif.</span><span class="sxs-lookup"><span data-stu-id="6d206-259">This parameter requires a non-negative number.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="6d206-260">services de chiffrement</span><span class="sxs-lookup"><span data-stu-id="6d206-260">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.HashAlgorithmName HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.HashAlgorithmName HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HashAlgorithm As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::HashAlgorithmName HashAlgorithm { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Cryptography.HashAlgorithmName" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IterationCount">
      <MemberSignature Language="C#" Value="public int IterationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IterationCount" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IterationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IterationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IterationCount : int with get, set" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d206-261">Obtient ou définit le nombre d'itérations pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="6d206-261">Gets or sets the number of iterations for the operation.</span></span></summary>
        <value><span data-ttu-id="6d206-262">Nombre d'itérations pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="6d206-262">The number of iterations for the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d206-263">Nombre d’itérations est le nombre de fois où qu'une opération est effectuée.</span><span class="sxs-lookup"><span data-stu-id="6d206-263">Iteration count is the number of times an operation is performed.</span></span> <span data-ttu-id="6d206-264">Pour cette méthode, le nombre doit être supérieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="6d206-264">For this method, the count should be greater than zero.</span></span> <span data-ttu-id="6d206-265">Le nombre minimal recommandé d’itérations est 1000.</span><span class="sxs-lookup"><span data-stu-id="6d206-265">The minimum recommended number of iterations is 1000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d206-266">L’exemple suivant montre comment utiliser le <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> propriété pour afficher le nombre d’itérations utilisées dans la génération de la clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-266">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> property to display the number of iterations used in the generation of the key.</span></span> <span data-ttu-id="6d206-267">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe.</span><span class="sxs-lookup"><span data-stu-id="6d206-267">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#3](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#3)]
 [!code-csharp[rfc28981#3](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#3)]
 [!code-vb[rfc28981#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6d206-268">Le nombre d'itérations est inférieur à 1.</span><span class="sxs-lookup"><span data-stu-id="6d206-268">The number of iterations is less than 1.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="6d206-269">services de chiffrement</span><span class="sxs-lookup"><span data-stu-id="6d206-269">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="rfc2898DeriveBytes.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d206-270">Rétablit l'état de l'opération.</span><span class="sxs-lookup"><span data-stu-id="6d206-270">Resets the state of the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d206-271">Cette méthode est appelée automatiquement si le nombre de salt ou d’itération est modifié.</span><span class="sxs-lookup"><span data-stu-id="6d206-271">This method is automatically called if the salt or iteration count is modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d206-272">L'exemple suivant illustre l'utilisation de la méthode <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="6d206-272">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A> method.</span></span> <span data-ttu-id="6d206-273">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe.</span><span class="sxs-lookup"><span data-stu-id="6d206-273">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#5](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#5)]
 [!code-csharp[rfc28981#5](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#5)]
 [!code-vb[rfc28981#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="6d206-274">services de chiffrement</span><span class="sxs-lookup"><span data-stu-id="6d206-274">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Salt">
      <MemberSignature Language="C#" Value="public byte[] Salt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Salt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt" />
      <MemberSignature Language="VB.NET" Value="Public Property Salt As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Salt { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Salt : byte[] with get, set" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.Salt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d206-275">Obtient ou définit la valeur salt de clé pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="6d206-275">Gets or sets the key salt value for the operation.</span></span></summary>
        <value><span data-ttu-id="6d206-276">Valeur salt de clé pour l'opération.</span><span class="sxs-lookup"><span data-stu-id="6d206-276">The key salt value for the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d206-277">Salt, jeu aléatoire d’octets, est utilisé pour rendre le déchiffrement non autorisé d’un message plus difficile.</span><span class="sxs-lookup"><span data-stu-id="6d206-277">Salt, a random set of bytes, is used to make unauthorized decrypting of a message more difficult.</span></span> <span data-ttu-id="6d206-278">Une attaque par dictionnaire est une attaque dans laquelle l’attaquant tente de déchiffrer un message chiffré en comparant la valeur chiffrée avec des valeurs chiffrées précédemment calculées pour les clés les plus probables.</span><span class="sxs-lookup"><span data-stu-id="6d206-278">A dictionary attack is an attack in which the attacker attempts to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys.</span></span> <span data-ttu-id="6d206-279">Cette attaque est rendue beaucoup plus difficile par l’introduction d’octets de salt ou aléatoire, à la fin du mot de passe avant la dérivation de clé.</span><span class="sxs-lookup"><span data-stu-id="6d206-279">This attack is made much more difficult by the introduction of salt, or random bytes, at the end of the password before the key derivation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d206-280">La taille de salt spécifiée est inférieure à 8 octets.</span><span class="sxs-lookup"><span data-stu-id="6d206-280">The specified salt size is smaller than 8 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d206-281">Le salt est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6d206-281">The salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="6d206-282">services de chiffrement</span><span class="sxs-lookup"><span data-stu-id="6d206-282">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>