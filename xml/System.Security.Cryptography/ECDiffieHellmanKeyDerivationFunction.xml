<Type Name="ECDiffieHellmanKeyDerivationFunction" FullName="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bbf71cf032ec91bba5c847d230bd5a72aa8047a6" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56773868" /></Metadata><TypeSignature Language="C#" Value="public enum ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ECDiffieHellmanKeyDerivationFunction extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="VB.NET" Value="Public Enum ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="C++ CLI" Value="public enum class ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="F#" Value="type ECDiffieHellmanKeyDerivationFunction = " />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Spécifie la fonction de dérivation de clés que la classe <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> utilisera pour convertir des accords secrets en matériel clé.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> énumération définit le type d’algorithme qui sera utilisé pour transformer un accord secret brut en matériel de clé. L’accord secret est la valeur qui est générée à partir d’une clé privée et la clé publique de l’autre partie, dans le cadre de l’échange de clés. Il est la valeur initiale pour le matériel de clé généré par le <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> (méthode).  
  
 Le <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> propriété utilise cette énumération pour obtenir la fonction de dérivation de clé pour la <xref:System.Security.Cryptography.ECDiffieHellmanCng> classe.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="Hash" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hash = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />
      <MemberSignature Language="VB.NET" Value="Hash" />
      <MemberSignature Language="C++ CLI" Value="Hash" />
      <MemberSignature Language="F#" Value="Hash = 0" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Un algorithme de hachage est utilisé pour générer le matériel clé. La propriété <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /> spécifie le nom de l'algorithme à utiliser. Si le nom de l'algorithme n'est pas spécifié, <see cref="T:System.Security.Cryptography.SHA256" /> est utilisé comme algorithme par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez également spécifier le <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> et <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> , mais elles ne sont pas requis.  
  
 La quantité de matériel de clé généré est équivalente à la taille de la valeur de hachage pour l’algorithme spécifié.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hmac">
      <MemberSignature Language="C#" Value="Hmac" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hmac = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />
      <MemberSignature Language="VB.NET" Value="Hmac" />
      <MemberSignature Language="C++ CLI" Value="Hmac" />
      <MemberSignature Language="F#" Value="Hmac = 1" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Un algorithme HMAC (Hash-based Message Authentication Code) est utilisé pour générer le matériel clé. La propriété <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /> spécifie la clé à utiliser. Soit cette propriété doit être définie, soit la propriété <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /> doit être définie sur <see langword="true" /> ; sinon, une exception <see cref="T:System.Security.Cryptography.CryptographicException" /> est levée lorsque vous utilisez <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />. Si les deux propriétés sont définies, l'accord secret est utilisé comme clé HMAC.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez également spécifier le <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> et <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> , mais elles ne sont pas requis.  
  
 La quantité de matériel de clé généré est équivalente à la taille de la valeur HMAC.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tls">
      <MemberSignature Language="C#" Value="Tls" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Tls = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />
      <MemberSignature Language="VB.NET" Value="Tls" />
      <MemberSignature Language="C++ CLI" Value="Tls" />
      <MemberSignature Language="F#" Value="Tls = 2" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Le protocole TLS est utilisé pour générer le matériel clé. Les propriétés <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> et <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> doivent être définies ; sinon, une exception <see cref="T:System.Security.Cryptography.CryptographicException" /> est levée lorsque vous utilisez <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette valeur génère 160 bits de matériel de clé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>