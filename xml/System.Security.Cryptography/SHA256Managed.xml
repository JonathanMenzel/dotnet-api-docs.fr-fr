<Type Name="SHA256Managed" FullName="System.Security.Cryptography.SHA256Managed">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bac4d1983bbb1e1cafc8e14aa8cfe5be8706c5b0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SHA256Managed : System.Security.Cryptography.SHA256" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SHA256Managed extends System.Security.Cryptography.SHA256" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.SHA256Managed" />
  <TypeSignature Language="VB.NET" Value="Public Class SHA256Managed&#xA;Inherits SHA256" />
  <TypeSignature Language="C++ CLI" Value="public ref class SHA256Managed : System::Security::Cryptography::SHA256" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.SHA256</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="580f1-101">Calcule le hachage <see cref="T:System.Security.Cryptography.SHA256" /> pour les données d'entrée à l'aide de la bibliothèque managée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="580f1-101">Computes the <see cref="T:System.Security.Cryptography.SHA256" /> hash for the input data using the managed library.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="580f1-102">Le hachage est utilisé comme une valeur unique de taille fixe représentant une grande quantité de données.</span><span class="sxs-lookup"><span data-stu-id="580f1-102">The hash is used as a unique value of fixed size representing a large amount of data.</span></span> <span data-ttu-id="580f1-103">Hachages de deux jeux de données doivent correspondre si et seulement si les données correspondantes correspond également à.</span><span class="sxs-lookup"><span data-stu-id="580f1-103">Hashes of two sets of data should match if and only if the corresponding data also matches.</span></span> <span data-ttu-id="580f1-104">Petites modifications apportées aux données entraîne des modifications importantes et imprévisibles dans le code de hachage.</span><span class="sxs-lookup"><span data-stu-id="580f1-104">Small changes to the data result in large unpredictable changes in the hash.</span></span>  
  
 <span data-ttu-id="580f1-105">La taille de hachage pour le <xref:System.Security.Cryptography.SHA256Managed> algorithme est de 256 bits.</span><span class="sxs-lookup"><span data-stu-id="580f1-105">The hash size for the <xref:System.Security.Cryptography.SHA256Managed> algorithm is 256 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="580f1-106">L’exemple suivant calcule le hachage SHA-256 pour tous les fichiers dans un répertoire.</span><span class="sxs-lookup"><span data-stu-id="580f1-106">The following example calculates the SHA-256 hash for all files in a directory.</span></span>  
  
 [!code-cpp[Classic SHA256 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SHA256 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SHA256 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SHA256 Example/CS/source.cs#1)]
 [!code-vb[Classic SHA256 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SHA256 Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SHA256Managed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA256Managed.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SHA256Managed();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="580f1-107">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.SHA256Managed" /> à l'aide de la bibliothèque managée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="580f1-107">Initializes a new instance of the <see cref="T:System.Security.Cryptography.SHA256Managed" /> class using the managed library.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="580f1-108">Le hachage est utilisé comme une valeur unique de taille fixe représentant une grande quantité de données.</span><span class="sxs-lookup"><span data-stu-id="580f1-108">The hash is used as a unique value of fixed size representing a large amount of data.</span></span> <span data-ttu-id="580f1-109">Hachages de deux jeux de données doivent correspondre si et seulement si les données correspondantes correspond également à.</span><span class="sxs-lookup"><span data-stu-id="580f1-109">Hashes of two sets of data should match if and only if the corresponding data also matches.</span></span> <span data-ttu-id="580f1-110">Petites modifications apportées aux données entraîne des modifications importantes et imprévisibles dans le code de hachage.</span><span class="sxs-lookup"><span data-stu-id="580f1-110">Small changes to the data result in large unpredictable changes in the hash.</span></span>  
  
 <span data-ttu-id="580f1-111">La taille de hachage pour le <xref:System.Security.Cryptography.SHA256Managed> algorithme est de 256 bits.</span><span class="sxs-lookup"><span data-stu-id="580f1-111">The hash size for the <xref:System.Security.Cryptography.SHA256Managed> algorithm is 256 bits.</span></span>  
  
 <span data-ttu-id="580f1-112">**Important** si vous activez la paramètre dans la stratégie de sécurité locale de sécurité suivante ou dans le cadre de la stratégie de groupe, vous obtenez un <xref:System.InvalidOperationException> lorsque vous essayez d’utiliser ce constructeur :</span><span class="sxs-lookup"><span data-stu-id="580f1-112">**Important** If you enable the following security setting either in the Local Security Policy or as part of Group Policy you will get an <xref:System.InvalidOperationException> when you attempt to use this constructor:</span></span>  
  
 <span data-ttu-id="580f1-113">**Cryptographie système : utilisez FIPS pour le chiffrement, le hachage et la signature des algorithmes compatibles**</span><span class="sxs-lookup"><span data-stu-id="580f1-113">**System cryptography: Use FIPS compliant algorithms for encryption, hashing, and signing**</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="580f1-114">Le paramètre de sécurité FIPS (Federal Information Processing Standards) est activé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="580f1-114">The Federal Information Processing Standards (FIPS) security setting is enabled.</span>
          </span>
          <span data-ttu-id="580f1-115">Cette implémentation ne fait pas partie des algorithmes de chiffrement validés FIPS pour les plateformes Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="580f1-115">This implementation is not part of the Windows Platform FIPS-validated cryptographic algorithms.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA256Managed.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SHA256Managed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA256Managed.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SHA256Managed ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override sealed void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA256Managed.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override sealed void HashCore (byte[] array, int ibStart, int cbSize);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] array, int32 ibStart, int32 cbSize) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA256Managed.HashCore(System.Byte[],System.Int32,System.Int32)" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub HashCore (array As Byte(), ibStart As Integer, cbSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ array, int ibStart, int cbSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="ibStart" Type="System.Int32" Index="1" />
        <Parameter Name="cbSize" Type="System.Int32" Index="2" />
      </Parameters>
      <Docs>
        <param name="rgb">
          <span data-ttu-id="580f1-116">Données d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="580f1-116">The input data.</span>
          </span>
        </param>
        <param name="array">To be added.</param>
        <param name="ibStart">
          <span data-ttu-id="580f1-117">Offset dans le tableau d'octets à partir duquel l'utilisation de données commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="580f1-117">The offset into the byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="cbSize">
          <span data-ttu-id="580f1-118">Nombre d'octets dans le tableau à utiliser comme données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="580f1-118">The number of bytes in the array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="580f1-119">En cas de substitution dans une classe dérivée, achemine les données écrites dans l'objet vers l'algorithme de hachage <see cref="T:System.Security.Cryptography.SHA256" /> pour calculer le hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="580f1-119">When overridden in a derived class, routes data written to the object into the <see cref="T:System.Security.Cryptography.SHA256" /> hash algorithm for computing the hash.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="580f1-120">Cette méthode n’est pas appelée par le code d’application.</span><span class="sxs-lookup"><span data-stu-id="580f1-120">This method is not called by application code.</span></span>  
  
 <span data-ttu-id="580f1-121">Cette méthode abstraite effectue le calcul de hachage.</span><span class="sxs-lookup"><span data-stu-id="580f1-121">This abstract method performs the hash computation.</span></span> <span data-ttu-id="580f1-122">Chaque écriture à l’objet de flux de chiffrement passe les données via cette méthode.</span><span class="sxs-lookup"><span data-stu-id="580f1-122">Every write to the cryptographic stream object passes the data through this method.</span></span> <span data-ttu-id="580f1-123">Pour chaque bloc de données, cette méthode met à jour l’état de l’objet de hachage pour une valeur de hachage correcte est retournée à la fin du flux de données.</span><span class="sxs-lookup"><span data-stu-id="580f1-123">For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA256Managed.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="580f1-124">En cas de substitution dans une classe dérivée, finalise le calcul de hachage une fois les dernières données traitées par l'objet de flux de chiffrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="580f1-124">When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="580f1-125">Code de hachage calculé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="580f1-125">The computed hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="580f1-126">Cette méthode n’est pas appelée par le code d’application.</span><span class="sxs-lookup"><span data-stu-id="580f1-126">This method is not called by application code.</span></span> <span data-ttu-id="580f1-127">Cette méthode finalise les calculs partiels et retourne la valeur de hachage correcte du flux de données.</span><span class="sxs-lookup"><span data-stu-id="580f1-127">This method finalizes any partial computation and returns the correct hash value of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA256Managed.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="580f1-128">Initialise une instance de <see cref="T:System.Security.Cryptography.SHA256Managed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="580f1-128">Initializes an instance of <see cref="T:System.Security.Cryptography.SHA256Managed" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="580f1-129">Le hachage est utilisé comme une valeur unique de taille fixe représentant une grande quantité de données.</span><span class="sxs-lookup"><span data-stu-id="580f1-129">The hash is used as a unique value of fixed size representing a large amount of data.</span></span> <span data-ttu-id="580f1-130">Hachages de deux jeux de données doivent correspondre si et seulement si les données correspondantes correspond également à.</span><span class="sxs-lookup"><span data-stu-id="580f1-130">Hashes of two sets of data should match if and only if the corresponding data also matches.</span></span> <span data-ttu-id="580f1-131">Petites modifications apportées aux données entraîne des modifications importantes et imprévisibles dans le code de hachage.</span><span class="sxs-lookup"><span data-stu-id="580f1-131">Small changes to the data result in large unpredictable changes in the hash.</span></span>  
  
 <span data-ttu-id="580f1-132">La taille de hachage pour le <xref:System.Security.Cryptography.SHA256Managed> algorithme est de 256 bits.</span><span class="sxs-lookup"><span data-stu-id="580f1-132">The hash size for the <xref:System.Security.Cryptography.SHA256Managed> algorithm is 256 bits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected override sealed bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SHA256Managed.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>