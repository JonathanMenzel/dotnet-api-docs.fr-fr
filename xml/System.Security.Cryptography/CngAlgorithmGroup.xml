<Type Name="CngAlgorithmGroup" FullName="System.Security.Cryptography.CngAlgorithmGroup">
  <TypeSignature Language="C#" Value="public sealed class CngAlgorithmGroup : IEquatable&lt;System.Security.Cryptography.CngAlgorithmGroup&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CngAlgorithmGroup extends System.Object implements class System.IEquatable`1&lt;class System.Security.Cryptography.CngAlgorithmGroup&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CngAlgorithmGroup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CngAlgorithmGroup&#xA;Implements IEquatable(Of CngAlgorithmGroup)" />
  <TypeSignature Language="C++ CLI" Value="public ref class CngAlgorithmGroup sealed : IEquatable&lt;System::Security::Cryptography::CngAlgorithmGroup ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Security.Cryptography.CngAlgorithmGroup&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3bf10-101">Encapsule le nom d’un groupe d’algorithmes de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="3bf10-101">Encapsulates the name of an encryption algorithm group.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bf10-102">Le <xref:System.Security.Cryptography.CngAlgorithmGroup> est une classe utilitaire.</span><span class="sxs-lookup"><span data-stu-id="3bf10-102">The <xref:System.Security.Cryptography.CngAlgorithmGroup> class is a utility class.</span></span> <span data-ttu-id="3bf10-103">Il se compose de propriétés statiques, les méthodes de comparaison et une chaîne gérée en interne qui définit un nom de groupe d’algorithme.</span><span class="sxs-lookup"><span data-stu-id="3bf10-103">It consists of static properties, comparison methods, and a private, internally maintained string that defines an algorithm group name.</span></span>  
  
 <span data-ttu-id="3bf10-104">Les propriétés statiques retournent <xref:System.Security.Cryptography.CngAlgorithmGroup> objets.</span><span class="sxs-lookup"><span data-stu-id="3bf10-104">The static properties return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects.</span></span> <span data-ttu-id="3bf10-105">Chaque chaîne de l’objet interne est initialisé au nom du groupe d’algorithme qui correspond au nom de la propriété statique.</span><span class="sxs-lookup"><span data-stu-id="3bf10-105">Each object's internal string is initialized to the algorithm group name that corresponds to the name of the static property.</span></span>  
  
 <span data-ttu-id="3bf10-106">Vous pouvez également utiliser cette classe pour créer des objets pour les groupes d’algorithmes qui ne sont pas couvertes par les propriétés statiques.</span><span class="sxs-lookup"><span data-stu-id="3bf10-106">You can also use this class to create objects for algorithm groups that are not covered by the static properties.</span></span>  
  
 <span data-ttu-id="3bf10-107">Plusieurs classes de Cryptography Next Generation (CNG) (tel que <xref:System.Security.Cryptography.CngKey>) retournent <xref:System.Security.Cryptography.CngAlgorithmGroup> objets.</span><span class="sxs-lookup"><span data-stu-id="3bf10-107">Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects.</span></span> <span data-ttu-id="3bf10-108">Les classes qui reçoivent <xref:System.Security.Cryptography.CngAlgorithm> objets peuvent récupérer le nom du groupe algorithme incorporé en appelant l’objet <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="3bf10-108">Classes that receive <xref:System.Security.Cryptography.CngAlgorithm> objects can retrieve the embedded algorithm group name by calling the object's <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> property.</span></span>  
  
 <span data-ttu-id="3bf10-109">Par conséquent, <xref:System.Security.Cryptography.CngAlgorithmGroup> sert d’énumération de groupes d’algorithmes bien connus.</span><span class="sxs-lookup"><span data-stu-id="3bf10-109">Therefore, <xref:System.Security.Cryptography.CngAlgorithmGroup> serves as an enumeration of well-known algorithm groups.</span></span> <span data-ttu-id="3bf10-110">Il vous permet de spécifier un nom d’algorithme groupe à l’aide d’une valeur fortement typée au lieu d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="3bf10-110">It lets you specify an algorithm group name by using a strongly typed value instead of a string.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CngAlgorithmGroup (string algorithmGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string algorithmGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (algorithmGroup As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CngAlgorithmGroup(System::String ^ algorithmGroup);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="algorithmGroup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithmGroup"><span data-ttu-id="3bf10-111">Nom du groupe d'algorithmes à initialiser.</span><span class="sxs-lookup"><span data-stu-id="3bf10-111">The name of the algorithm group to initialize.</span></span></param>
        <summary><span data-ttu-id="3bf10-112">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />.</span><span class="sxs-lookup"><span data-stu-id="3bf10-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bf10-113">Instances de la <xref:System.Security.Cryptography.CngAlgorithmGroup> classe gèrent en interne le nom du groupe algorithme spécifié par le `algorithmGroup` paramètre.</span><span class="sxs-lookup"><span data-stu-id="3bf10-113">Instances of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class internally maintain the algorithm group name that is specified by the `algorithmGroup` parameter.</span></span>  
  
 <span data-ttu-id="3bf10-114">Le principal objectif de ce constructeur est de fournir une méthode de création <xref:System.Security.Cryptography.CngAlgorithmGroup> objets pour les groupes d’algorithmes qui ne sont pas représentées par les propriétés statiques de la <xref:System.Security.Cryptography.CngAlgorithmGroup> classe.</span><span class="sxs-lookup"><span data-stu-id="3bf10-114">The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithmGroup> objects for algorithm groups that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class.</span></span> <span data-ttu-id="3bf10-115">Cette capacité permet aux futures [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] versions, service packs et aux développeurs de tiers d’ajouter de nouveaux groupes d’algorithmes, qui est accessible comme les groupes d’algorithmes qui sont actuellement disponibles.</span><span class="sxs-lookup"><span data-stu-id="3bf10-115">This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithm groups, which can be accessed just like the algorithm groups that are currently available.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3bf10-116">Le paramètre <paramref name="algorithmGroup" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3bf10-116">The <paramref name="algorithmGroup" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3bf10-117">La longueur du paramètre <paramref name="algorithmGroup" /> est 0 (zéro).</span><span class="sxs-lookup"><span data-stu-id="3bf10-117">The <paramref name="algorithmGroup" /> parameter length is 0 (zero).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmGroup">
      <MemberSignature Language="C#" Value="public string AlgorithmGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlgorithmGroup" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlgorithmGroup { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bf10-118">Obtient le nom du groupe d'algorithmes que l'objet <see cref="T:System.Security.Cryptography.CngAlgorithm" /> actuel spécifie.</span><span class="sxs-lookup"><span data-stu-id="3bf10-118">Gets the name of the algorithm group that the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object specifies.</span></span></summary>
        <value><span data-ttu-id="3bf10-119">Nom du groupe d'algorithmes incorporé.</span><span class="sxs-lookup"><span data-stu-id="3bf10-119">The embedded algorithm group name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffieHellman">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup DiffieHellman { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup DiffieHellman" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DiffieHellman As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ DiffieHellman { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bf10-120">Obtient un objet <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> qui spécifie la famille d'algorithmes Diffie-Hellman.</span><span class="sxs-lookup"><span data-stu-id="3bf10-120">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Diffie-Hellman family of algorithms.</span></span></summary>
        <value><span data-ttu-id="3bf10-121">Un objet qui spécifie la famille d'algorithmes Diffie-Hellman.</span><span class="sxs-lookup"><span data-stu-id="3bf10-121">An object that specifies the Diffie-Hellman family of algorithms.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup Dsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup Dsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.Dsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Dsa As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ Dsa { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bf10-122">Obtient un objet <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> qui spécifie la famille d'algorithmes DSA (Digital Signature Algorithm).</span><span class="sxs-lookup"><span data-stu-id="3bf10-122">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Digital Signature Algorithm (DSA) family of algorithms.</span></span></summary>
        <value><span data-ttu-id="3bf10-123">Un objet qui spécifie la famille d'algorithmes DSA.</span><span class="sxs-lookup"><span data-stu-id="3bf10-123">An object that specifies the DSA family of algorithms.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellman">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup ECDiffieHellman { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup ECDiffieHellman" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellman As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ ECDiffieHellman { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bf10-124">Obtient un objet <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> qui spécifie la famille d'algorithmes ECDH (Elliptic Curve Diffie-Hellman).</span><span class="sxs-lookup"><span data-stu-id="3bf10-124">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Elliptic Curve Diffie-Hellman (ECDH) family of algorithms.</span></span></summary>
        <value><span data-ttu-id="3bf10-125">Un objet qui spécifie la famille d'algorithmes ECDH.</span><span class="sxs-lookup"><span data-stu-id="3bf10-125">An object that specifies the ECDH family of algorithms.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup ECDsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup ECDsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.ECDsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsa As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ ECDsa { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bf10-126">Obtient un objet <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> qui spécifie la famille d'algorithmes ECDSA (Elliptic Curve Digital Signature Algorithm).</span><span class="sxs-lookup"><span data-stu-id="3bf10-126">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Elliptic Curve Digital Signature Algorithm (ECDSA) family of algorithms.</span></span></summary>
        <value><span data-ttu-id="3bf10-127">Un objet qui spécifie la famille d'algorithmes ECDSA.</span><span class="sxs-lookup"><span data-stu-id="3bf10-127">An object that specifies the ECDSA family of algorithms.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3bf10-128">Compare deux objets <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />.</span><span class="sxs-lookup"><span data-stu-id="3bf10-128">Compares two <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> objects.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3bf10-129">Objet à comparer avec l'objet <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="3bf10-129">An object to be compared to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span></span></param>
        <summary><span data-ttu-id="3bf10-130">Compare l'objet spécifié à l'objet <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="3bf10-130">Compares the specified object to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="3bf10-131"><see langword="true" /> si le paramètre <paramref name="obj" /> est un <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> qui spécifie le même groupe d'algorithmes que l'objet actuel ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3bf10-131"><see langword="true" /> if the <paramref name="obj" /> parameter is a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> that specifies the same algorithm group as the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Security.Cryptography.CngAlgorithmGroup other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Security.Cryptography.CngAlgorithmGroup other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CngAlgorithmGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Security::Cryptography::CngAlgorithmGroup ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Cryptography.CngAlgorithmGroup" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="3bf10-132">Objet à comparer avec l'objet <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="3bf10-132">An object to be compared to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span></span></param>
        <summary><span data-ttu-id="3bf10-133">Compare l'objet <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> spécifié à l'objet <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="3bf10-133">Compares the specified <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="3bf10-134"><see langword="true" /> si le paramètre <paramref name="other" /> spécifie le même groupe d'algorithmes que l'objet actuel ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3bf10-134"><see langword="true" /> if the <paramref name="other" /> parameter specifies the same algorithm group as the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bf10-135">Génère une valeur de hachage pour le nom du groupe d'algorithmes incorporé dans l'objet <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="3bf10-135">Generates a hash value for the algorithm group name that is embedded in the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span></span></summary>
        <returns><span data-ttu-id="3bf10-136">La valeur de hachage du nom du groupe d'algorithmes incorporé.</span><span class="sxs-lookup"><span data-stu-id="3bf10-136">The hash value of the embedded algorithm group name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Security.Cryptography.CngAlgorithmGroup left, class System.Security.Cryptography.CngAlgorithmGroup right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CngAlgorithmGroup, right As CngAlgorithmGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Security::Cryptography::CngAlgorithmGroup ^ left, System::Security::Cryptography::CngAlgorithmGroup ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithmGroup" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithmGroup" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="3bf10-137">Un objet qui spécifie un groupe d'algorithmes.</span><span class="sxs-lookup"><span data-stu-id="3bf10-137">An object that specifies an algorithm group.</span></span></param>
        <param name="right"><span data-ttu-id="3bf10-138">Second objet, à comparer avec l’objet identifié par le paramètre <c>left</c>.</span><span class="sxs-lookup"><span data-stu-id="3bf10-138">A second object, to be compared to the object that is identified by the <c>left</c> parameter.</span></span></param>
        <summary><span data-ttu-id="3bf10-139">Détermine si deux objets <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> spécifient le même groupe d'algorithmes.</span><span class="sxs-lookup"><span data-stu-id="3bf10-139">Determines whether two <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> objects specify the same algorithm group.</span></span></summary>
        <returns>
          <span data-ttu-id="3bf10-140"><see langword="true" /> si les deux objets spécifient le même groupe d'algorithmes ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3bf10-140"><see langword="true" /> if the two objects specify the same algorithm group; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Security.Cryptography.CngAlgorithmGroup left, class System.Security.Cryptography.CngAlgorithmGroup right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CngAlgorithmGroup, right As CngAlgorithmGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Security::Cryptography::CngAlgorithmGroup ^ left, System::Security::Cryptography::CngAlgorithmGroup ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithmGroup" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithmGroup" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="3bf10-141">Un objet qui spécifie un groupe d'algorithmes.</span><span class="sxs-lookup"><span data-stu-id="3bf10-141">An object that specifies an algorithm group.</span></span></param>
        <param name="right"><span data-ttu-id="3bf10-142">Second objet, à comparer avec l’objet identifié par le paramètre <c>left</c>.</span><span class="sxs-lookup"><span data-stu-id="3bf10-142">A second object, to be compared to the object that is identified by the <c>left</c> parameter.</span></span></param>
        <summary><span data-ttu-id="3bf10-143">Détermine si deux objets <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> ne spécifient pas le même groupe d'algorithmes.</span><span class="sxs-lookup"><span data-stu-id="3bf10-143">Determines whether two <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> objects do not specify the same algorithm group.</span></span></summary>
        <returns>
          <span data-ttu-id="3bf10-144"><see langword="true" /> si les deux objets ne spécifient pas le même groupe d'algorithmes ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3bf10-144"><see langword="true" /> if the two objects do not specify the same algorithm group; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup Rsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup Rsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.Rsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Rsa As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ Rsa { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3bf10-145">Obtient un objet <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> qui spécifie la famille d'algorithmes RSA (Rivest-Shamir-Adleman).</span><span class="sxs-lookup"><span data-stu-id="3bf10-145">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Rivest-Shamir-Adleman (RSA) family of algorithms.</span></span></summary>
        <value><span data-ttu-id="3bf10-146">Un objet qui spécifie la famille d'algorithmes RSA.</span><span class="sxs-lookup"><span data-stu-id="3bf10-146">An object that specifies the RSA family of algorithms.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bf10-147">Obtient le nom du groupe d'algorithmes que l'objet <see cref="T:System.Security.Cryptography.CngAlgorithm" /> actuel spécifie.</span><span class="sxs-lookup"><span data-stu-id="3bf10-147">Gets the name of the algorithm group that the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object specifies.</span></span></summary>
        <returns><span data-ttu-id="3bf10-148">Nom du groupe d'algorithmes incorporé.</span><span class="sxs-lookup"><span data-stu-id="3bf10-148">The embedded algorithm group name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>