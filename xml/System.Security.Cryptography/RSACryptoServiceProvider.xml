<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RSACryptoServiceProvider.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bfe362923836f8d655205816ab48c0277ab4a988.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bfe362923836f8d655205816ab48c0277ab4a988</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Performs asymmetric encryption and decryption using the implementation of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm provided by the cryptographic service provider (CSP).</source>
          <target state="translated">Effectue un chiffrement et un déchiffrement asymétriques à l’aide de l’implémentation de l’algorithme <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> fourni par le fournisseur de services de chiffrement.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>This is the default implementation of <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph>.</source>
          <target state="translated">C’est l’implémentation par défaut de <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> supports key sizes from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> prend en charge des tailles de clé allant de 384 bits à 16 384 bits par incréments de 8 bits si vous avez Microsoft Enhanced Cryptographic Provider est installé.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>It supports key sizes from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.</source>
          <target state="translated">Il prend en charge des tailles de clé allant de 384 bits à 512 bits par incréments de 8 bits si vous avez Microsoft Base Cryptographic Provider est installé.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Valid key sizes are dependent on the cryptographic service provider (CSP) that is used by the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> instance.</source>
          <target state="translated">Tailles de clé valides sont dépendants sur le fournisseur de services de chiffrement (CSP) qui est utilisé par le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Windows CSPs enable keys sizes of 384 to 16384 bits for Windows versions prior to <ph id="ph1">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>, and key sizes of 512 to 16384 bits for <ph id="ph2">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>.</source>
          <target state="translated">Activer des fournisseurs de services cryptographiques Windows clés des tailles des bits de 384 et 16 384 pour les versions de Windows antérieures à <ph id="ph1">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>et les tailles de 512 et 16 384 bits de clé <ph id="ph2">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>For more information, see <bpt id="p1">[</bpt>CryptGenKey<ept id="p1">](http://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx)</ept> function in the Windows documentation.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>CryptGenKey<ept id="p1">](http://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx)</ept> fonction dans la documentation de Windows.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Interoperation with the Microsoft Cryptographic API (CAPI)</source>
          <target state="translated">Interopérabilité avec l’API Microsoft Cryptography API (CAPI)</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Unlike the RSA implementation in unmanaged CAPI, the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class reverses the order of an encrypted array of bytes after encryption and before decryption.</source>
          <target state="translated">Contrairement à l’implémentation RSA dans CAPI non managée, la <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> classe inverse l’ordre d’un tableau d’octets chiffré, après le chiffrement et avant le déchiffrement.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>By default, data encrypted by the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class cannot be decrypted by the CAPI <ph id="ph2">`CryptDecrypt`</ph> function and data encrypted by the CAPI <ph id="ph3">`CryptEncrypt`</ph> method cannot be decrypted by the <ph id="ph4">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class.</source>
          <target state="translated">Par défaut, les données chiffrées par le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> classe ne peut pas être déchiffrée par l’API CAPI <ph id="ph2">`CryptDecrypt`</ph> fonction et les données chiffrées par l’API CAPI <ph id="ph3">`CryptEncrypt`</ph> méthode ne peut pas être déchiffrée par la <ph id="ph4">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>If you do not compensate for the reverse ordering when interoperating between APIs, the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class throws a <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph>.</source>
          <target state="translated">Si vous ne compensez pas l’ordre inverse lors de l’interaction entre les API, le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> classe lève un <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>To interoperate with CAPI, you must manually reverse the order of encrypted bytes before the encrypted data interoperates with another API.</source>
          <target state="translated">Pour interagir avec CAPI, vous devez manuellement inverser l’ordre d’octets chiffrés avant que les données chiffrées interagissent avec une autre API.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>You can easily reverse the order of a managed byte array by calling the <ph id="ph1">&lt;xref:System.Array.Reverse%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Vous pouvez facilement inverser l’ordre d’un tableau d’octets managé en appelant le <ph id="ph1">&lt;xref:System.Array.Reverse%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class to encrypt a string into an array of bytes and then decrypt the bytes back into a string.</source>
          <target state="translated">Le code suivant exemple utilise la <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> classe pour chiffrer une chaîne en un tableau d’octets, puis de le déchiffrer les octets en une chaîne.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>The following code example exports the key information created using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> into an <ph id="ph2">&lt;xref:System.Security.Cryptography.RSAParameters&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant exporte les informations de clé créées à l’aide de la <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> dans un <ph id="ph2">&lt;xref:System.Security.Cryptography.RSAParameters&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> class using the default key.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> en utilisant la clé par défaut.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
          <source>If no default key is found, a new key is created.</source>
          <target state="translated">Si aucune clé par défaut n’est trouvée, une nouvelle clé est créée.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</source>
          <target state="translated">Ce constructeur crée un <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> clés de la paire de clés adaptée chiffrer la session afin qu’ils peuvent être stockées en toute sécurité et échangés avec d’autres utilisateurs.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
          <source>The generated key corresponds to a key generated using the <ph id="ph1">`AT_KEYEXCHANGE`</ph> value used in the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated">La clé générée correspond à une clé générée à l’aide de la <ph id="ph1">`AT_KEYEXCHANGE`</ph> valeur utilisée dans l’API Microsoft Cryptographic API (CAPI) non managée.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class to encrypt a string into an array of bytes and then decrypt the bytes back into a string.</source>
          <target state="translated">Le code suivant exemple utilise la <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> classe pour chiffrer une chaîne en un tableau d’octets, puis de le déchiffrer les octets en une chaîne.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">Le fournisseur de services de chiffrement ne peut pas être acquis.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
          <source>The size of the key to use in bits.</source>
          <target state="translated">Taille de la clé à utiliser, en bits.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> class with the specified key size.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> avec la taille de clé spécifiée.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
          <source>If no default key is found, a new key is created.</source>
          <target state="translated">Si aucune clé par défaut n’est trouvée, une nouvelle clé est créée.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</source>
          <target state="translated">Ce constructeur crée un <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> clés de la paire de clés adaptée chiffrer la session afin qu’ils peuvent être stockées en toute sécurité et échangés avec d’autres utilisateurs.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
          <source>The generated key corresponds to a key generated using the <ph id="ph1">`AT_KEYEXCHANGE`</ph> value used in the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated">La clé générée correspond à une clé générée à l’aide de la <ph id="ph1">`AT_KEYEXCHANGE`</ph> valeur utilisée dans l’API Microsoft Cryptographic API (CAPI) non managée.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>, generates a new key, and stores it in a key container.</source>
          <target state="translated">L’exemple de code suivant crée un <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>, génère une nouvelle clé et la stocke dans un conteneur de clé.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">Le fournisseur de services de chiffrement ne peut pas être acquis.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>The parameters to be passed to the cryptographic service provider (CSP).</source>
          <target state="translated">Paramètres à passer au fournisseur de services de chiffrement (CSP).</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> class with the specified parameters.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> avec les paramètres spécifiés.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>This constructor creates or reuses a key container specified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.CspParameters.KeyContainerName&gt;</ph> field of the <ph id="ph2">`parameters`</ph> parameter.</source>
          <target state="translated">Ce constructeur crée ou réutilise un conteneur de clé spécifié à l’aide de la <ph id="ph1">&lt;xref:System.Security.Cryptography.CspParameters.KeyContainerName&gt;</ph> champ le <ph id="ph2">`parameters`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>By default, this constructor creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</source>
          <target state="translated">Par défaut, ce constructeur crée un <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> clés de la paire de clés adaptée chiffrer la session afin qu’ils peuvent être stockées en toute sécurité et échangés avec d’autres utilisateurs.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>The generated key corresponds to a key generated using the <ph id="ph1">`AT_KEYEXCHANGE`</ph> value used in the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated">La clé générée correspond à une clé générée à l’aide de la <ph id="ph1">`AT_KEYEXCHANGE`</ph> valeur utilisée dans l’API Microsoft Cryptographic API (CAPI) non managée.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>You can create a <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> key pair suitable for authenticating (digitally signed) messages or files by setting the <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters.KeyNumber&gt;</ph> field of the <ph id="ph3">`parameters`</ph> parameter to the <ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> value.</source>
          <target state="translated">Vous pouvez créer un <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> approprié pour l’authentification des messages (signature numérique) ou des fichiers en définissant de paire de clés le <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters.KeyNumber&gt;</ph> champ le <ph id="ph3">`parameters`</ph> paramètre à la <ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>This type of key corresponds to the <ph id="ph1">`AT_SIGNATURE`</ph> value used in CAPI.</source>
          <target state="translated">Ce type de clé correspond à la <ph id="ph1">`AT_SIGNATURE`</ph> valeur utilisée dans CAPI.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>If you create an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object with the <ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> value specified and then create another <ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object with the <ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> value specified, both keys will be placed in a single container if both objects specify the same key container name.</source>
          <target state="translated">Si vous créez un <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> de l’objet avec la <ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> valeur, puis créez un autre <ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> de l’objet avec la <ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> valeur spécifiée, les deux clés sont effectués dans un seul conteneur si les deux objets spécifient le même nom de conteneur de clé .</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>To create a key that is compatible with stong-name signing using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class, you must create a <ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> key pair.</source>
          <target state="translated">Pour créer une clé qui est compatible avec la signature à l’aide du nom de régulière la <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> (classe), vous devez créer un <ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> paire de clés.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object, generates a new key, and stores it in a key container.</source>
          <target state="translated">L’exemple de code suivant crée un <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> objet, génère une nouvelle clé et la stocke dans un conteneur de clé.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>The CSP cannot be acquired.</source>
          <target state="translated">Impossible d’acquérir le fournisseur de services de chiffrement.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The size of the key to use in bits.</source>
          <target state="translated">Taille de la clé à utiliser, en bits.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The parameters to be passed to the cryptographic service provider (CSP).</source>
          <target state="translated">Paramètres à passer au fournisseur de services de chiffrement (CSP).</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> class with the specified key size and parameters.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> avec les paramètres et la taille de clé spécifiés.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>This constructor creates or reuses a key container specified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.CspParameters.KeyContainerName&gt;</ph> field of the <ph id="ph2">`parameters`</ph> parameter.</source>
          <target state="translated">Ce constructeur crée ou réutilise un conteneur de clé spécifié à l’aide de la <ph id="ph1">&lt;xref:System.Security.Cryptography.CspParameters.KeyContainerName&gt;</ph> champ le <ph id="ph2">`parameters`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>By default, this constructor creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</source>
          <target state="translated">Par défaut, ce constructeur crée un <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> clés de la paire de clés adaptée chiffrer la session afin qu’ils peuvent être stockées en toute sécurité et échangés avec d’autres utilisateurs.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The generated key corresponds to a key generated using the <ph id="ph1">`AT_KEYEXCHANGE`</ph> value used in the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated">La clé générée correspond à une clé générée à l’aide de la <ph id="ph1">`AT_KEYEXCHANGE`</ph> valeur utilisée dans l’API Microsoft Cryptographic API (CAPI) non managée.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>You can create a <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> key pair suitable for authenticating (digitally signed) messages or files by setting the <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters.KeyNumber&gt;</ph> field of the <ph id="ph3">`parameters`</ph> parameter to the <ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> value.</source>
          <target state="translated">Vous pouvez créer un <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> approprié pour l’authentification des messages (signature numérique) ou des fichiers en définissant de paire de clés le <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters.KeyNumber&gt;</ph> champ le <ph id="ph3">`parameters`</ph> paramètre à la <ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>This type of key corresponds to the <ph id="ph1">`AT_SIGNATURE`</ph> value used in CAPI.</source>
          <target state="translated">Ce type de clé correspond à la <ph id="ph1">`AT_SIGNATURE`</ph> valeur utilisée dans CAPI.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>If you create an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object with the <ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> value specified and then create another <ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object with the <ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> value specified, both keys will be placed in a single container if both objects specify the same key container name.</source>
          <target state="translated">Si vous créez un <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> de l’objet avec la <ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> valeur, puis créez un autre <ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> de l’objet avec la <ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> valeur spécifiée, les deux clés sont effectués dans un seul conteneur si les deux objets spécifient le même nom de conteneur de clé .</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>To create a key that is compatible with stong-name signing using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class, you must create a <ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> key pair.</source>
          <target state="translated">Pour créer une clé qui est compatible avec la signature à l’aide du nom de régulière la <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> (classe), vous devez créer un <ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> paire de clés.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>, generates a new key, and stores it in a key container.</source>
          <target state="translated">L’exemple de code suivant crée un <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>, génère une nouvelle clé et la stocke dans un conteneur de clé.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The CSP cannot be acquired.</source>
          <target state="translated">Impossible d’acquérir le fournisseur de services de chiffrement.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The key cannot be created.</source>
          <target state="translated">Impossible de créer la clé.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> object that describes additional information about a cryptographic key pair.</source>
          <target state="translated">Obtient un objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> qui comprend des informations supplémentaires concernant une paire de clés de chiffrement.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> object that describes additional information about a cryptographic key pair.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> qui comprend des informations supplémentaires concernant une paire de clés de chiffrement.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> property to retrieve additional information about a cryptographic key pair.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> propriété à récupérer des informations supplémentaires sur une paire de clés de chiffrement.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>The returned <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> object describes whether the key is exportable, and specifies the key container name, information about the provider, and other information.</source>
          <target state="translated">Retourné <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> objet décrit si la clé est exportable et spécifie le nom du conteneur de clé, d’informations sur le fournisseur et d’autres informations.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>In cases where a random key is generated, a key container will not be created until you call a method that uses the key.</source>
          <target state="translated">Dans les cas où une clé aléatoire est générée, un conteneur de clé ne sera pas créé jusqu'à ce que vous appelez une méthode qui utilise la clé.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>Some properties of the <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> property will throw a <ph id="ph3">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph> if a key container has not been created.</source>
          <target state="translated">Certaines propriétés de la <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> objet retourné par la <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> propriété lèvera une <ph id="ph3">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph> si un conteneur de clé n’a pas été créé.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>To make sure that a key container has been created, call a method such as <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A&gt;</ph>, and so on, before you call the <ph id="ph5">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> property.</source>
          <target state="translated">Pour vous assurer qu’un conteneur de clé a été créé, appelez une méthode telle que <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A&gt;</ph>, et ainsi de suite, avant d’appeler le <ph id="ph5">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> property.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler le <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Decrypts data that was previously encrypted.</source>
          <target state="translated">Déchiffre les données précédemment chiffrées.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The data to be decrypted.</source>
          <target state="translated">Données à déchiffrer.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to perform direct <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> decryption using OAEP padding (only available on a computer running Microsoft Windows XP or later); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph> to use PKCS#1 v1.5 padding.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour effectuer un déchiffrement <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> direct à l’aide du remplissage OAEP (disponible uniquement sur un ordinateur exécutant Microsoft Windows XP ou une version ultérieure) ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph> pour utiliser le remplissage PKCS#1 v1.5.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>Decrypts data with the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm.</source>
          <target state="translated">Déchiffre les données avec l’algorithme <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The decrypted data, which is the original plain text before encryption.</source>
          <target state="translated">Les données déchiffrées, qui est le texte brut d’origine avant le chiffrement.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A&gt;</ph> to encrypt data for decryption with this method.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A&gt;</ph> pour chiffrer les données pour le déchiffrement avec cette méthode.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The following code example encrypts and decrypts data.</source>
          <target state="translated">L’exemple de code suivant chiffre et déchiffre les données.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> class; however, the <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> class may be preferable in large data operations.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> classe ; Toutefois, la <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> classe peut être préférable des opérations de données de grande taille.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The encrypted value can be saved as an <ph id="ph1">`nvarchar`</ph> data type in Microsoft SQL Server 2005.</source>
          <target state="translated">La valeur chiffrée peut être enregistrée en tant qu’un <ph id="ph1">`nvarchar`</ph> type de données dans Microsoft SQL Server 2005.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">Le fournisseur de services de chiffrement ne peut pas être acquis.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="fOAEP" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the length of the <ph id="ph3">&lt;paramref name="rgb" /&gt;</ph> parameter is greater than <ph id="ph4">&lt;see cref="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="fOAEP" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph> et la longueur du paramètre <ph id="ph3">&lt;paramref name="rgb" /&gt;</ph> est supérieure à <ph id="ph4">&lt;see cref="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="fOAEP" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and OAEP is not supported.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="fOAEP" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="true" /&gt;</ph> et OAEP n’est pas pris en charge.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The key does not match the encrypted data.</source>
          <target state="translated">La clé ne correspond pas les données chiffrées.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>However, the exception wording may not be accurate.</source>
          <target state="translated">Toutefois, la formulation de l’exception peut être inexacte.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>For example, it may say <bpt id="p1">&lt;c&gt;</bpt>Not enough storage is available to process this command<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Par exemple, elle peut indiquer <bpt id="p1">&lt;c&gt;</bpt>Espace insuffisant pour traiter cette commande<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>for permission to decrypt.</source>
          <target state="translated">pour l’autorisation à déchiffrer.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Action de sécurité : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The data to decrypt.</source>
          <target state="translated">Données à déchiffrer.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The padding.</source>
          <target state="translated">Remplissage.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>Decrypts data that was previously encrypted with the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm by using the specified padding.</source>
          <target state="translated">Déchiffre les données précédemment chiffrées avec l’algorithme <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> à l’aide du remplissage spécifié.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The decrypted data.</source>
          <target state="translated">Données déchiffrées.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source><ph id="ph1">`padding`</ph> must be either <ph id="ph2">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`padding`</ph> doit être <ph id="ph2">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph3">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The padding mode is not supported.</source>
          <target state="translated">Le mode de remplissage n’est pas pris en charge.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])">
          <source>The data to be decrypted.</source>
          <target state="translated">Données à déchiffrer.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])">
          <source>This method is not supported in the current version.</source>
          <target state="translated">Cette méthode n’est pas prise en charge dans la version actuelle.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])">
          <source>The decrypted data, which is the original plain text before encryption.</source>
          <target state="translated">Les données déchiffrées, qui est le texte brut d’origine avant le chiffrement.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])">
          <source>This method is not supported in the current version.</source>
          <target state="translated">Cette méthode n’est pas prise en charge dans la version actuelle.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Encrypts data with the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm.</source>
          <target state="translated">Chiffre les données avec l’algorithme <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The data to be encrypted.</source>
          <target state="translated">Données à chiffrer.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to perform direct <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> encryption using OAEP padding (only available on a computer running Windows XP or later); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph> to use PKCS#1 v1.5 padding.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour effectuer directement le chiffrement <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> à l’aide du remplissage OAEP (uniquement disponible sur un ordinateur exécutant Windows XP ou ultérieur) ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph> pour utiliser le remplissage PKCS #1 v1.5.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Encrypts data with the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm.</source>
          <target state="translated">Chiffre les données avec l’algorithme <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The encrypted data.</source>
          <target state="translated">Données chiffrées.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The following table describes the padding supported by different versions of Microsoft Windows and the maximum length of <ph id="ph1">`rgb`</ph> allowed by the different combinations of operating systems and padding.</source>
          <target state="translated">Le tableau suivant décrit le remplissage pris en charge par les différentes versions de Microsoft Windows et la longueur maximale de <ph id="ph1">`rgb`</ph> autorisées par les différentes combinaisons de systèmes d’exploitation et de remplissage.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Padding</source>
          <target state="translated">Padding</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Operating System Supported</source>
          <target state="translated">Système d’exploitation pris en charge</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Maximum Length of rgb Parameter</source>
          <target state="translated">Longueur maximale du paramètre rgb</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>OAEP padding (PKCS#1 v2)</source>
          <target state="translated">Remplissage OAEP (PKCS #1 v2)</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Windows XP or later.</source>
          <target state="translated">Windows XP ou version ultérieure.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Modulus size -2 -2*hLen, where hLen is the size of the hash.</source>
          <target state="translated">Taille du modulo-2 2 * représentant, où représentant est la taille du hachage.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Direct Encryption (PKCS#1 v1.5)</source>
          <target state="translated">Diriger le chiffrement (PKCS #1 v1.5)</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Microsoft Windows 2000 or later with the high encryption pack installed.</source>
          <target state="translated">Microsoft Windows 2000 ou version ultérieure avec le pack de chiffrement élevé installé.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Modulus size - 11.</source>
          <target state="translated">Taille du modulo - 11.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>(11 bytes is the minimum padding possible.)</source>
          <target state="translated">(11 octets sont le remplissage minimum possible.)</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Direct Encryption and OAEP padding not supported</source>
          <target state="translated">Diriger le remplissage OAEP et de chiffrement non pris en charge</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Microsoft Windows 98, Windows Millennium Edition, or Windows 2000 or later without the high encryption pack installed.</source>
          <target state="translated">Microsoft Windows 98, Windows Millennium Edition ou Windows 2000 ou version ultérieure sans le pack de chiffrement élevé installé.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The maximum size allowed for a symmetric key.</source>
          <target state="translated">La taille maximale autorisée pour une clé symétrique.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A&gt;</ph> to decrypt the results of this method.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A&gt;</ph> pour déchiffrer les résultats de cette méthode.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The following code example initializes an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object to the value of a public key (sent by another party), generates a session key using the <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> algorithm, and then encrypts the session key using the <ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object.</source>
          <target state="translated">Le code suivant initialise de l’exemple un <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> objet à la valeur d’une clé publique (envoyée par un autre tiers), génère une clé de session à l’aide du <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> algorithme, puis chiffre la clé de session à l’aide du <ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Using this scheme, the session key could be sent back to the owner of the private RSA key and the two parties could use the session key to exchange encrypted data.</source>
          <target state="translated">À l’aide de ce schéma, la clé de session peut être envoyée au propriétaire de la clé privée RSA et les deux parties peuvent utiliser la clé de session pour échanger des données chiffrées.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">Le fournisseur de services de chiffrement ne peut pas être acquis.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The length of the <ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> parameter is greater than the maximum allowed length.</source>
          <target state="translated">La longueur du paramètre <ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> est supérieure à la longueur maximale autorisée.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="fOAEP" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and OAEP padding is not supported.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="fOAEP" /&gt;</ph> est <ph id="ph2">&lt;see langword="true" /&gt;</ph> et le remplissage OAEP n’est pas pris en charge.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The data to encrypt.</source>
          <target state="translated">Données à chiffrer.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The padding.</source>
          <target state="translated">Remplissage.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>Encrypts data with the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm using the specified padding.</source>
          <target state="translated">Chiffre les données avec l’algorithme <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> à l’aide du remplissage spécifié.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The encrypted data.</source>
          <target state="translated">Données chiffrées.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source><ph id="ph1">`padding`</ph> must be either <ph id="ph2">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`padding`</ph> doit être <ph id="ph2">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph3">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The padding mode is not supported.</source>
          <target state="translated">Le mode de remplissage n’est pas pris en charge.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])">
          <source>The data to be encrypted.</source>
          <target state="translated">Données à chiffrer.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])">
          <source>This method is not supported in the current version.</source>
          <target state="translated">Cette méthode n’est pas prise en charge dans la version actuelle.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])">
          <source>The encrypted data.</source>
          <target state="translated">Données chiffrées.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])">
          <source>This method is not supported in the current version.</source>
          <target state="translated">Cette méthode n’est pas prise en charge dans la version actuelle.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the private key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour inclure la clé privée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>Exports a blob containing the key information associated with an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> object.</source>
          <target state="translated">Exporte un objet blob qui contient les informations clés associées à un objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>A byte array containing the key information associated with an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> object.</source>
          <target state="translated">Tableau d’octets contenant les informations clés associées à un objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob%2A&gt;</ph> method returns a blob containing key information that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob%2A&gt;</ph> méthode retourne un objet blob contenant les informations de clé qui sont compatibles avec l’API Microsoft Cryptographic API (CAPI) non managée.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>for permission to access a key container when exporting a private key.</source>
          <target state="translated">autorisation d’accéder à un conteneur de clé lors de l’exportation d’une clé privée.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Action de sécurité : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour inclure les paramètres privés ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>Exports the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSAParameters" /&gt;</ph>.</source>
          <target state="translated">Exporte l’élément <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSAParameters" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>The parameters for <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated">Paramètres pour <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>The following code example exports the key information created using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> into an <ph id="ph2">&lt;xref:System.Security.Cryptography.RSAParameters&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant exporte les informations de clé créées à l’aide de la <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> dans un <ph id="ph2">&lt;xref:System.Security.Cryptography.RSAParameters&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>The key cannot be exported.</source>
          <target state="translated">Impossible d’exporter la clé.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>for permission to export a key.</source>
          <target state="translated">pour l’autorisation d’exporter une clé.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Action de sécurité : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>A byte array that represents an RSA key blob.</source>
          <target state="translated">Tableau d’octets qui représente un objet de clé RSA.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>Imports a blob that represents RSA key information.</source>
          <target state="translated">Importe un objet blob qui représente des informations de clé RSA.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob%2A&gt;</ph> method initializes the key data of an <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object using a blob that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob%2A&gt;</ph> méthode initialise les données de clé d’un <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> de l’objet à l’aide d’un objet blob qui est compatible avec l’API Microsoft Cryptographic API (CAPI) non managée.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>for permission to access a key container when importing a key.</source>
          <target state="translated">autorisation d’accéder à un conteneur de clé lors de l’importation d’une clé.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Action de sécurité : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>The parameters for <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated">Paramètres pour <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>Imports the specified <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSAParameters" /&gt;</ph>.</source>
          <target state="translated">Importe le <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSAParameters" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>The following code example imports key information created from an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSAParameters&gt;</ph> object into an <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant importe des informations de clé créées à partir d’un <ph id="ph1">&lt;xref:System.Security.Cryptography.RSAParameters&gt;</ph> de l’objet dans un <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">Le fournisseur de services de chiffrement ne peut pas être acquis.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>The <ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> parameter has missing fields.</source>
          <target state="translated">Le <ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> paramètre a des champs manquants.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>for permission to import a key.</source>
          <target state="translated">pour l’autorisation d’importer une clé.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Action de sécurité : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm">
          <source>Gets the name of the key exchange algorithm available with this implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated">Obtient le nom de l'algorithme d'échange de clés disponible avec cette implémentation de <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm">
          <source>The name of the key exchange algorithm if it exists; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Nom de l'algorithme d'échange de clés s'il existe ; sinon, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm">
          <source>This property indicates the name of the algorithm, not of the type.</source>
          <target state="translated">Cette propriété indique le nom de l’algorithme et non du type.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm">
          <source>For example, RSA-PKCS1-KeyEx is a key exchange algorithm name.</source>
          <target state="translated">Par exemple, RSA-PKCS1-KeyEx est un nom d’algorithme échange de clés.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>Gets the size of the current key.</source>
          <target state="translated">Obtient la taille de la clé actuelle.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>The size of the key in bits.</source>
          <target state="translated">Taille de la clé, en bits.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> supports key sizes from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> prend en charge des tailles de clé allant de 384 bits à 16 384 bits par incréments de 8 bits si vous avez Microsoft Enhanced Cryptographic Provider est installé.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>It supports key sizes from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.</source>
          <target state="translated">Il prend en charge des tailles de clé allant de 384 bits à 512 bits par incréments de 8 bits si vous avez Microsoft Base Cryptographic Provider est installé.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>Valid key sizes are dependent on the cryptographic service provider (CSP) that is used by the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> instance.</source>
          <target state="translated">Tailles de clé valides sont dépendants sur le fournisseur de services de chiffrement (CSP) qui est utilisé par le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>Windows CSPs enable key sizes of 384 to 16384 bits for Windows versions prior to <ph id="ph1">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>, and key sizes of 512 to 16384 bits for <ph id="ph2">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>.</source>
          <target state="translated">Tailles de clé activer Windows CSP de bits 384 et 16 384 pour les versions de Windows antérieures à <ph id="ph1">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>et les tailles de 512 et 16 384 bits de clé <ph id="ph2">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>For more information, see <bpt id="p1">[</bpt>CryptGenKey<ept id="p1">](http://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx)</ept> function in the Windows documentation.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>CryptGenKey<ept id="p1">](http://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx)</ept> fonction dans la documentation de Windows.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class does not allow you to change key sizes using the <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize%2A&gt;</ph> property.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> classe ne vous permet pas de modifier la taille de clé à l’aide de la <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>Any value written to this property will fail to update the property without error.</source>
          <target state="translated">Toute valeur écrite dans cette propriété ne sera pas mise à jour de la propriété sans erreur.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>To change the key size, use one of the constructor overloads.</source>
          <target state="translated">Pour modifier la taille de clé, utilisez une des surcharges de constructeur.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>Gets or sets a value indicating whether the key should be persisted in the cryptographic service provider (CSP).</source>
          <target state="translated">Obtient ou définit une valeur qui indique si la clé doit être persistante dans le fournisseur de services de chiffrement (CSP).</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key should be persisted in the CSP; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la clé doit être persistante dans le CSP ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>Use this property to persist a key in a key container.</source>
          <target state="translated">Cette propriété permet de conserver une clé dans un conteneur de clé.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A&gt;</ph> property is automatically set to <ph id="ph2">`true`</ph> when you specify a key container name in the <ph id="ph3">&lt;xref:System.Security.Cryptography.CspParameters.KeyContainerName&gt;</ph> field of a <ph id="ph4">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object and use it to initialize an <ph id="ph5">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object by calling one of the constructors with a <ph id="ph6">`parameters`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A&gt;</ph> est automatiquement définie sur <ph id="ph2">`true`</ph> lorsque vous spécifiez un nom de conteneur de clé dans le <ph id="ph3">&lt;xref:System.Security.Cryptography.CspParameters.KeyContainerName&gt;</ph> champ un <ph id="ph4">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> de l’objet et l’utiliser pour initialiser un <ph id="ph5">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> en appelant un des constructeurs avec un <ph id="ph6">`parameters`</ph>paramètre.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A&gt;</ph> property has no effect if the <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object is created with a <ph id="ph3">`null`</ph> key container name.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A&gt;</ph> propriété n’a aucun effet si la <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> objet est créé avec un <ph id="ph3">`null`</ph> nom du conteneur de clé.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object and persists the key to a key container.</source>
          <target state="translated">L’exemple de code suivant crée un <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> de l’objet et conserve la clé dans un conteneur de clé.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>for permission to delete a key.</source>
          <target state="translated">pour l’autorisation de supprimer une clé.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>for permission to create a key.</source>
          <target state="translated">autorisation de créer une clé.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> object contains only a public key.</source>
          <target state="translated">Obtient une valeur qui indique si l’objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> contient uniquement une clé publique.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> object contains only a public key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l’objet <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> contient uniquement une clé publique ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class can be initialized either with a public key only or with both a public and private key.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> classe peut être initialisée avec une clé publique seule ou avec les deux un public et privée la clé.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly%2A&gt;</ph> property to determine whether the current instance contains only a public key or both a public and private key.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly%2A&gt;</ph> propriété pour déterminer si l’instance actuelle contient uniquement une clé publique ou une clé publique et privée.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm">
          <source>Gets the name of the signature algorithm available with this implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated">Obtient le nom de l'algorithme de signature disponible avec cette implémentation de <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm">
          <source>The name of the signature algorithm.</source>
          <target state="translated">Nom de l'algorithme de signature.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm">
          <source>This property is used in XML digital signature classes to indicate the algorithm URI.</source>
          <target state="translated">Cette propriété est utilisée dans les classes de signature numérique XML pour indiquer l’URI de l’algorithme.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm">
          <source>In this implementation, this property always returns <ph id="ph1">http://www.w3.org/2000/09/xmldsig#rsa-sha1</ph>.</source>
          <target state="translated">Dans cette implémentation, cette propriété retourne toujours <ph id="ph1">http://www.w3.org/2000/09/xmldsig#rsa-sha1</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Computes the hash value of the specified data and signs it.</source>
          <target state="translated">Calcule la valeur de hachage des données spécifiées et la signe.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>The input data for which to compute the hash.</source>
          <target state="translated">Données d'entrée pour lesquelles calculer le hachage.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">Algorithme de hachage à utiliser pour créer la valeur de hachage.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>Computes the hash value of the specified byte array using the specified hash algorithm, and signs the resulting hash value.</source>
          <target state="translated">Calcule la valeur de hachage du tableau d’octets indiqué à l’aide de l’algorithme de hachage spécifié et signe la valeur de hachage obtenue.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> signature for the specified data.</source>
          <target state="translated">Signature <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> pour les données spécifiées.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>This method creates a digital signature that is verified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode crée une signature numérique est vérifiée à l’aide du <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>The <ph id="ph1">`halg`</ph> parameter can accept a <ph id="ph2">&lt;xref:System.String&gt;</ph>, a <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>, or a <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`halg`</ph> paramètre peut accepter un <ph id="ph2">&lt;xref:System.String&gt;</ph>, un <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>, ou un <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>The following code example signs and verifies data.</source>
          <target state="translated">L’exemple de code suivant signe et vérifie les données.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is not a valid type.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> n’est pas un type valide.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>The input data for which to compute the hash.</source>
          <target state="translated">Données d'entrée pour lesquelles calculer le hachage.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">Algorithme de hachage à utiliser pour créer la valeur de hachage.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>Computes the hash value of the specified input stream using the specified hash algorithm, and signs the resulting hash value.</source>
          <target state="translated">Calcule la valeur de hachage du flux d’entrée spécifié à l’aide de l’algorithme de hachage spécifié, puis signe la valeur de hachage obtenue.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> signature for the specified data.</source>
          <target state="translated">Signature <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> pour les données spécifiées.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">`halg`</ph> parameter can accept a <ph id="ph2">&lt;xref:System.String&gt;</ph>, a <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>, or a <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`halg`</ph> paramètre peut accepter un <ph id="ph2">&lt;xref:System.String&gt;</ph>, un <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>, ou un <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>The following code example signs and verifies data.</source>
          <target state="translated">L’exemple de code suivant signe et vérifie les données.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is not a valid type.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> n’est pas un type valide.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The input data for which to compute the hash.</source>
          <target state="translated">Données d'entrée pour lesquelles calculer le hachage.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The offset into the array from which to begin using data.</source>
          <target state="translated">Offset dans le tableau à partir duquel l’utilisation de données commence.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The number of bytes in the array to use as data.</source>
          <target state="translated">Nombre d'octets dans le tableau à utiliser comme données.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">Algorithme de hachage à utiliser pour créer la valeur de hachage.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>Computes the hash value of a subset of the specified byte array using the specified hash algorithm, and signs the resulting hash value.</source>
          <target state="translated">Calcule la valeur de hachage d’un sous-ensemble du tableau d’octets indiqué à l’aide de l’algorithme de hachage spécifié et signe la valeur de hachage obtenue.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> signature for the specified data.</source>
          <target state="translated">Signature <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> pour les données spécifiées.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>This method creates a digital signature that is verified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode crée une signature numérique est vérifiée à l’aide du <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The <ph id="ph1">`halg`</ph> parameter can accept a <ph id="ph2">&lt;xref:System.String&gt;</ph>, a <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>, or a <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`halg`</ph> paramètre peut accepter un <ph id="ph2">&lt;xref:System.String&gt;</ph>, un <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>, ou un <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The string value can be one of the following:</source>
          <target state="translated">La valeur de chaîne peut être une des opérations suivantes :</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The object identifier (OID) friendly name of the hash algorithm to use, either a name registered in the crypto config file or one in the Crypto API OID table.</source>
          <target state="translated">L’objet (OID) convivial nom d’identificateur de l’algorithme de hachage à utiliser, soit un nom enregistré dans le fichier de configuration du chiffrement ou une dans la table de l’OID de l’API de chiffrement.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The OID value.</source>
          <target state="translated">Valeur de l'identificateur d'objet.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The OID must be one recognized by the Crypto API.</source>
          <target state="translated">L’OID doit être reconnu par l’API de chiffrement.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>For example, you could use SignData(new byte[5], "1.3.14.3.2.26") or SignData(new byte[5], "sha1"), or SignData(new byte[5], "SHA1").</source>
          <target state="translated">Par exemple, vous pouvez utiliser SignData (nouvel octet [5], « 1.3.14.3.2.26 ») ou SignData (nouvel octet [5], « sha1 ») ou SignData (nouvel octet [5], « SHA1 »).</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The following code example signs and verifies data.</source>
          <target state="translated">L’exemple de code suivant signe et vérifie les données.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is not a valid type.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> n’est pas un type valide.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Computes the signature for the specified hash value by encrypting it with the private key.</source>
          <target state="translated">Calcule la signature pour la valeur de hachage spécifiée en la chiffrant avec la clé privée.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The hash value of the data to be signed.</source>
          <target state="translated">Valeur de hachage des données à signer.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The hash algorithm identifier (OID) used to create the hash value of the data.</source>
          <target state="translated">Identificateur d’algorithme de hachage utilisé pour créer la valeur de hachage des données.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>Computes the signature for the specified hash value by encrypting it with the private key.</source>
          <target state="translated">Calcule la signature pour la valeur de hachage spécifiée en la chiffrant avec la clé privée.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> signature for the specified hash value.</source>
          <target state="translated">Signature <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> pour la valeur de hachage spécifiée.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>This method creates a digital signature that is verified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode crée une signature numérique est vérifiée à l’aide du <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The valid hash algorithms are <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Cryptography.MD5&gt;</ph>.</source>
          <target state="translated">Les algorithmes de hachage valides sont <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> et <ph id="ph2">&lt;xref:System.Security.Cryptography.MD5&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The algorithm identifier can be derived from the hash name by using the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A&gt;</ph> method.</source>
          <target state="translated">L’identificateur d’algorithme peut être dérivé du nom de hachage à l’aide de la <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The following code example encrypts some data, creates a hash of the encrypted data, and then signs hash with a digital signature.</source>
          <target state="translated">L’exemple de code suivant chiffre certaines données, crée un hachage des données chiffrées, puis signe le hachage avec une signature numérique.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The <ph id="ph1">&lt;paramref name="rgbHash" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="rgbHash" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">Le fournisseur de services de chiffrement ne peut pas être acquis.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>There is no private key.</source>
          <target state="translated">Il n’existe aucune clé privée.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>for permission to sign a file using the key.</source>
          <target state="translated">pour l’autorisation signer un fichier à l’aide de la clé.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Action de sécurité : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash value of the data to be signed.</source>
          <target state="translated">Valeur de hachage des données à signer.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash algorithm name used to create the hash value of the data.</source>
          <target state="translated">Nom de l’algorithme de hachage utilisé pour créer la valeur de hachage des données.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The padding.</source>
          <target state="translated">Remplissage.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>Computes the signature for the specified hash value by encrypting it with the private key using the specified padding.</source>
          <target state="translated">Calcule la signature pour la valeur de hachage spécifiée en la chiffrant avec la clé privée à l’aide du remplissage spécifié.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> signature for the specified hash value.</source>
          <target state="translated">Signature <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> pour la valeur de hachage spécifiée.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph> ou <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> does not equal <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> n’est pas égal à <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
          <source>Gets or sets a value indicating whether the key should be persisted in the computer's key store instead of the user profile store.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si la clé doit être persistante dans le magasin de clés de l’ordinateur plutôt que le magasin de profils utilisateur.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key should be persisted in the computer key store; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la clé doit être persistante dans le magasin de clés de l’ordinateur ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
          <source>Setting this property to <ph id="ph1">`true`</ph> is equivalent to passing the <ph id="ph2">&lt;xref:System.Security.Cryptography.CspProviderFlags.UseMachineKeyStore&gt;</ph> flag to a <ph id="ph3">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object.</source>
          <target state="translated">Si cette propriété <ph id="ph1">`true`</ph> équivaut à passer le <ph id="ph2">&lt;xref:System.Security.Cryptography.CspProviderFlags.UseMachineKeyStore&gt;</ph> indicateur sur une <ph id="ph3">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> property applies to all code in the current application domain, whereas the <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object applies only to classes that explicitly reference it.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> propriété s’applique à tout le code dans le domaine d’application actuel, tandis que le <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> objet s’applique uniquement aux classes qui le référencent explicitement.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
          <source>These settings are useful when impersonating or running under an account whose user profile is not loaded.</source>
          <target state="translated">Ces paramètres sont utiles lors de l’emprunt d’identité ou en cours d’exécution sous un compte dont le profil utilisateur n’est pas chargé.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
          <source>Setting <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> affects the key store location only if <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> is initialized with no parameters.</source>
          <target state="translated">Paramètre <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> affecte l’emplacement de magasin de clés uniquement si <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> est initialisé sans paramètres.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object and sets the static <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> property to use the machine key store instead of the user profile key store.</source>
          <target state="translated">L’exemple de code suivant crée un <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> de l’objet et définit la méthode statique <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> propriété à utiliser le magasin de clés d’ordinateur plutôt que le magasin de clés de profil utilisateur.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Verifies that a digital signature is valid.</source>
          <target state="translated">Vérifie qu’une signature numérique est valide.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The data that was signed.</source>
          <target state="translated">les données qui ont été signées ;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The name of the hash algorithm used to create the hash value of the data.</source>
          <target state="translated">Nom de l’algorithme de hachage utilisé pour créer la valeur de hachage des données.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The signature data to be verified.</source>
          <target state="translated">Données de la signature à vérifier.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the hash value of the provided data.</source>
          <target state="translated">Vérifie qu’une signature numérique est valide en déterminant la valeur de hachage dans la signature en utilisant la clé publique fournie et en la comparant à la valeur de hachage des données fournies.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la signature est valide ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>This method verifies the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> digital signature produced by the <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode vérifie le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> signature numérique produite par le <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The signature is verified by obtaining the hash value from the signature using the public key it was signed with, and comparing that value to the hash value of the provided data.</source>
          <target state="translated">La signature est vérifiée en obtenant la valeur de hachage de la signature à l’aide de la clé publique qu’il a été signé avec, et en comparant cette valeur à la valeur de hachage des données fournies.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The <ph id="ph1">`halg`</ph> parameter can accept a <ph id="ph2">&lt;xref:System.String&gt;</ph>, a <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>, or a <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`halg`</ph> paramètre peut accepter un <ph id="ph2">&lt;xref:System.String&gt;</ph>, un <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>, ou un <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A&gt;</ph> method to verify a signature.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A&gt;</ph> méthode pour vérifier une signature.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A&gt;</ph> method.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is not a valid type.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> n’est pas un type valide.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Verifies that a digital signature is valid.</source>
          <target state="translated">Vérifie qu’une signature numérique est valide.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The hash value of the signed data.</source>
          <target state="translated">Valeur de hachage des données signées.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The hash algorithm identifier (OID) used to create the hash value of the data.</source>
          <target state="translated">Identificateur d’algorithme de hachage (OID) utilisé pour créer la valeur de hachage des données.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The signature data to be verified.</source>
          <target state="translated">Données de la signature à vérifier.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the provided hash value.</source>
          <target state="translated">Vérifie qu’une signature numérique est valide en déterminant la valeur de hachage dans la signature en utilisant la clé publique fournie et en la comparant à la valeur de hachage fournie.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la signature est valide ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>This method verifies the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> digital signature produced by the <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode vérifie le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> signature numérique produite par le <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The signature is verified by obtaining the hash value from the signature using the public key it was signed with, and comparing that value to the hash value of the provided data.</source>
          <target state="translated">La signature est vérifiée en obtenant la valeur de hachage de la signature à l’aide de la clé publique qu’il a été signé avec, et en comparant cette valeur à la valeur de hachage des données fournies.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The valid hash algorithms are <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Cryptography.MD5&gt;</ph>.</source>
          <target state="translated">Les algorithmes de hachage valides sont <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> et <ph id="ph2">&lt;xref:System.Security.Cryptography.MD5&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The algorithm identifier can be derived from the hash name by using the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A&gt;</ph> method.</source>
          <target state="translated">L’identificateur d’algorithme peut être dérivé du nom de hachage à l’aide de la <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A&gt;</ph> method to verify a signature.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A&gt;</ph> méthode pour vérifier une signature.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A&gt;</ph> method.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour le <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="rgbHash" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="rgbHash" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="rgbSignature" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="rgbSignature" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">Le fournisseur de services de chiffrement ne peut pas être acquis.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The signature cannot be verified.</source>
          <target state="translated">La signature ne peut pas être vérifiée.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash value of the signed data.</source>
          <target state="translated">Valeur de hachage des données signées.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The signature data to be verified.</source>
          <target state="translated">Données de la signature à vérifier.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash algorithm name used to create the hash value.</source>
          <target state="translated">Nom de l’algorithme de hachage utilisé pour créer la valeur de hachage.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The padding.</source>
          <target state="translated">Remplissage.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>Verifies that a digital signature is valid by determining the hash value in the signature using the specified hashing algorithm and padding, and comparing it to the provided hash value.</source>
          <target state="translated">Vérifie qu’une signature numérique est valide en déterminant la valeur de hachage dans la signature en utilisant l’algorithme de hachage et le remplissage spécifiés, et en la comparant à la valeur de hachage fournie.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la signature est valide ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph> ou <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> does not equal <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> n’est pas égal à <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>