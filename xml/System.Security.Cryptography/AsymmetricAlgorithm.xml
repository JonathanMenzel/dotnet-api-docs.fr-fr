<Type Name="AsymmetricAlgorithm" FullName="System.Security.Cryptography.AsymmetricAlgorithm">
  <TypeSignature Language="C#" Value="public abstract class AsymmetricAlgorithm : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsymmetricAlgorithm extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.AsymmetricAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsymmetricAlgorithm&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsymmetricAlgorithm abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c0f37-101">Représente la classe de base abstraite dont toutes les implémentations des algorithmes asymétriques doivent hériter.</span><span class="sxs-lookup"><span data-stu-id="c0f37-101">Represents the abstract base class from which all implementations of asymmetric algorithms must inherit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f37-102">Algorithmes de chiffrement asymétriques, également appelés algorithmes à clé publique, requièrent que l’expéditeur et récepteur mettre à jour une paire de clés associées : une clé privée et une clé publique.</span><span class="sxs-lookup"><span data-stu-id="c0f37-102">Asymmetric cryptographic algorithms, also known as public-key algorithms, require that both sender and receiver maintain a pair of related keys: a private key and a public key.</span></span> <span data-ttu-id="c0f37-103">Les deux clés sont uniques à l’entité.</span><span class="sxs-lookup"><span data-stu-id="c0f37-103">Both keys are unique to the entity.</span></span> <span data-ttu-id="c0f37-104">La clé publique peut être rendue disponible pour tout le monde ; Cette clé est utilisée pour l’encodage des données qui sont envoyées à un récepteur.</span><span class="sxs-lookup"><span data-stu-id="c0f37-104">The public key can be made available to anyone; this key is used for encoding data that is sent to a receiver.</span></span> <span data-ttu-id="c0f37-105">La clé privée doit être gardée privée par le destinataire. Cette clé est utilisée pour décoder les messages encodés à l’aide de la clé publique du destinataire.</span><span class="sxs-lookup"><span data-stu-id="c0f37-105">The private key must be kept private by the receiver; this key is used for decoding messages encoded using the receiver's public key.</span></span> <span data-ttu-id="c0f37-106">La <xref:System.Security.Cryptography.RSACryptoServiceProvider> classe est une implémentation d’un algorithme de clé publique.</span><span class="sxs-lookup"><span data-stu-id="c0f37-106">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> class is an implementation of a public-key algorithm.</span></span> <span data-ttu-id="c0f37-107">Pour une discussion détaillée de chiffrement à clé publique et les algorithmes, consultez la section « Chiffrement de clé publique » dans [Services de chiffrement](~/docs/standard/security/cryptographic-services.md).</span><span class="sxs-lookup"><span data-stu-id="c0f37-107">For an in-depth discussion of public-key encryption and algorithms, see the "Public-Key Encryption" section in [Cryptographic Services](~/docs/standard/security/cryptographic-services.md).</span></span> <span data-ttu-id="c0f37-108">Pour plus d’informations sur l’utilisation de l’outil Strong Name tool (Sn.exe) pour créer des paires de clés, consultez [Comment : créer une paire de clés publique-privée](~/docs/framework/app-domains/how-to-create-a-public-private-key-pair.md).</span><span class="sxs-lookup"><span data-stu-id="c0f37-108">For information about how to use the Strong Name tool (Sn.exe) to create key pairs, see [How to: Create a Public-Private Key Pair](~/docs/framework/app-domains/how-to-create-a-public-private-key-pair.md).</span></span>  
  
 <span data-ttu-id="c0f37-109">Vous pouvez utiliser des systèmes de clé publique pour créer des signatures numériques.</span><span class="sxs-lookup"><span data-stu-id="c0f37-109">You can use public-key systems to form digital signatures.</span></span> <span data-ttu-id="c0f37-110">Signatures numériques sont utilisées pour protéger l’intégrité des données.</span><span class="sxs-lookup"><span data-stu-id="c0f37-110">Digital signatures are used to help to protect the integrity of data.</span></span> <span data-ttu-id="c0f37-111">Par exemple, pour utiliser un système de clé publique pour signer numériquement un message, l’expéditeur applique d’abord une fonction de hachage au message pour créer un résumé du message.</span><span class="sxs-lookup"><span data-stu-id="c0f37-111">For example, to use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</span></span> <span data-ttu-id="c0f37-112">L’expéditeur chiffre ensuite le résumé du message avec la clé privée de l’expéditeur pour créer la signature personnelle de l’expéditeur.</span><span class="sxs-lookup"><span data-stu-id="c0f37-112">The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</span></span> <span data-ttu-id="c0f37-113">Lorsqu’il reçoit le message et la signature, le destinataire déchiffre la signature à l’aide de la clé publique de l’expéditeur pour récupérer le condensat du message et hache le message en utilisant le même algorithme de hachage utilisé par l’expéditeur.</span><span class="sxs-lookup"><span data-stu-id="c0f37-113">Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</span></span> <span data-ttu-id="c0f37-114">Si le résumé du message que le destinataire traite correspond à la synthèse du message reçue de l’expéditeur, le destinataire peut supposer que le message n’a pas été modifié en transit.</span><span class="sxs-lookup"><span data-stu-id="c0f37-114">If the message digest that the receiver computes matches the message digest received from the sender, the receiver can assume that the message was not altered while in transit.</span></span> <span data-ttu-id="c0f37-115">Notez que tout le monde peut vérifier une signature, car la clé publique de l’expéditeur est connue.</span><span class="sxs-lookup"><span data-stu-id="c0f37-115">Note that anyone can verify a signature, because the sender's public key is common knowledge.</span></span> <span data-ttu-id="c0f37-116">Cette technique ne conserve pas la confidentialité du message ; pour le message peut être divulgué, il doit également être chiffré.</span><span class="sxs-lookup"><span data-stu-id="c0f37-116">This technique does not retain the secrecy of the message; for the message to be secret, it must also be encrypted.</span></span>  
  
 <span data-ttu-id="c0f37-117">Le .NET Framework fournit les classes suivantes qui implémentent des algorithmes de signature numérique : <xref:System.Security.Cryptography.DSACryptoServiceProvider>, <xref:System.Security.Cryptography.RSACryptoServiceProvider>, <xref:System.Security.Cryptography.ECDsa> (classe de base), et <xref:System.Security.Cryptography.ECDsaCng>.</span><span class="sxs-lookup"><span data-stu-id="c0f37-117">The .NET Framework provides the following classes that implement digital signature algorithms: <xref:System.Security.Cryptography.DSACryptoServiceProvider>, <xref:System.Security.Cryptography.RSACryptoServiceProvider>, <xref:System.Security.Cryptography.ECDsa> (base class), and <xref:System.Security.Cryptography.ECDsaCng>.</span></span>  
  
 <span data-ttu-id="c0f37-118">Le <xref:System.Security.Cryptography> espace de noms fournit des classes concrètes pour <xref:System.Security.Cryptography.RSA> et <xref:System.Security.Cryptography.DSA> uniquement.</span><span class="sxs-lookup"><span data-stu-id="c0f37-118">The <xref:System.Security.Cryptography> namespace provides concrete classes for <xref:System.Security.Cryptography.RSA> and <xref:System.Security.Cryptography.DSA> only.</span></span>  
  
 <span data-ttu-id="c0f37-119">Pour savoir comment utiliser l’algorithme RSA pour chiffrer et déchiffrer les données XML et créer et vérifier des signatures numériques XML, consultez les articles suivants :</span><span class="sxs-lookup"><span data-stu-id="c0f37-119">To learn how to use the RSA algorithm to encrypt and decrypt XML data, and create and verify XML digital signatures, see these articles:</span></span>  
  
-   [<span data-ttu-id="c0f37-120">Comment : chiffrer des éléments XML avec des clés asymétriques</span><span class="sxs-lookup"><span data-stu-id="c0f37-120">How to: Encrypt XML Elements with Asymmetric Keys</span></span>](~/docs/standard/security/how-to-encrypt-xml-elements-with-asymmetric-keys.md)  
  
-   [<span data-ttu-id="c0f37-121">Comment : déchiffrer des éléments XML avec des clés asymétriques</span><span class="sxs-lookup"><span data-stu-id="c0f37-121">How to: Decrypt XML Elements with Asymmetric Keys</span></span>](~/docs/standard/security/how-to-decrypt-xml-elements-with-asymmetric-keys.md)  
  
-   [<span data-ttu-id="c0f37-122">Comment : signer des documents XML avec des signatures numériques</span><span class="sxs-lookup"><span data-stu-id="c0f37-122">How to: Sign XML Documents with Digital Signatures</span></span>](~/docs/standard/security/how-to-sign-xml-documents-with-digital-signatures.md)  
  
-   [<span data-ttu-id="c0f37-123">Comment : vérifier les signatures numériques de documents XML</span><span class="sxs-lookup"><span data-stu-id="c0f37-123">How to: Verify the Digital Signatures of XML Documents</span></span>](~/docs/standard/security/how-to-verify-the-digital-signatures-of-xml-documents.md)  
  
   
  
## Examples  
 <span data-ttu-id="c0f37-124">L’exemple de code suivant montre comment implémenter un algorithme asymétrique personnalisé hérité de la <xref:System.Security.Cryptography.AsymmetricAlgorithm> classe.</span><span class="sxs-lookup"><span data-stu-id="c0f37-124">The following code example demonstrates how to implement a custom asymmetric algorithm inherited from the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  <span data-ttu-id="c0f37-125">Une classe supplémentaire est fournie pour illustrer l’utilisation de la classe personnalisée.</span><span class="sxs-lookup"><span data-stu-id="c0f37-125">An additional class is provided to demonstrate how to use the custom class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#2)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#2)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#2)]  
  
 <span data-ttu-id="c0f37-126">Voici une classe supplémentaire qui montre comment utiliser la classe personnalisée.</span><span class="sxs-lookup"><span data-stu-id="c0f37-126">Here's an additional class that demonstrates how to use the custom class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#3)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#3)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsymmetricAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsymmetricAlgorithm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0f37-127">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="c0f37-127">Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f37-128">Vous ne pouvez pas créer une instance d’une classe abstraite.</span><span class="sxs-lookup"><span data-stu-id="c0f37-128">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="c0f37-129">Code de l’application crée une instance d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="c0f37-129">Application code creates a new instance of a derived class.</span></span> <span data-ttu-id="c0f37-130">Le <xref:System.Security.Cryptography.RSACryptoServiceProvider> et <xref:System.Security.Cryptography.DSACryptoServiceProvider> les classes sont les seules implémentations actuellement prises en charge.</span><span class="sxs-lookup"><span data-stu-id="c0f37-130">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> and <xref:System.Security.Cryptography.DSACryptoServiceProvider> classes are the only currently supported implementations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c0f37-131">L’implémentation de la classe dérivée n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="c0f37-131">The implementation of the derived class is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0f37-132">Libère toutes les ressources utilisées par la classe <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="c0f37-132">Releases all resources used by the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f37-133">Cette méthode est un simple appel à la <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0f37-133">This method is a simple call to the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="c0f37-134">Appel de `Dispose` autorise les ressources utilisées par la <xref:System.Security.Cryptography.AsymmetricAlgorithm> classe pour être réaffectés à d’autres fins.</span><span class="sxs-lookup"><span data-stu-id="c0f37-134">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class to be reallocated for other purposes.</span></span> <span data-ttu-id="c0f37-135">Pour plus d’informations sur `Dispose`, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="c0f37-135">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f37-136">L’exemple de code suivant montre comment appeler le <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> méthode pour libérer les ressources d’actuel `customCrypto` objet.</span><span class="sxs-lookup"><span data-stu-id="c0f37-136">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method to release the resources of the current `customCrypto` object.</span></span> <span data-ttu-id="c0f37-137">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Cryptography.AsymmetricAlgorithm> classe.</span><span class="sxs-lookup"><span data-stu-id="c0f37-137">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#1)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#1)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0f37-138">Crée un objet de chiffrement utilisé pour exécuter l'algorithme asymétrique.</span><span class="sxs-lookup"><span data-stu-id="c0f37-138">Creates a cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.AsymmetricAlgorithm Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.AsymmetricAlgorithm Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::AsymmetricAlgorithm ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0f37-139">Crée un objet de chiffrement par défaut utilisé pour exécuter l'algorithme asymétrique.</span><span class="sxs-lookup"><span data-stu-id="c0f37-139">Creates a default cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="c0f37-140">Nouvelle instance de <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />, à moins que les paramètres par défaut aient été modifiés avec l’[élément &lt;cryptoClass&gt;](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span><span class="sxs-lookup"><span data-stu-id="c0f37-140">A new <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> instance, unless the default settings have been changed with the [&lt;cryptoClass&gt; element](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c0f37-141">L’exemple de code suivant montre comment implémenter la <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> méthode dans une classe étendue.</span><span class="sxs-lookup"><span data-stu-id="c0f37-141">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> method in an extended class.</span></span> <span data-ttu-id="c0f37-142">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Cryptography.AsymmetricAlgorithm> classe.</span><span class="sxs-lookup"><span data-stu-id="c0f37-142">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#11)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#11)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.AsymmetricAlgorithm Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.AsymmetricAlgorithm Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::AsymmetricAlgorithm ^ Create(System::String ^ algName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="c0f37-143">Implémentation de l'algorithme asymétrique à utiliser.</span><span class="sxs-lookup"><span data-stu-id="c0f37-143">The asymmetric algorithm implementation to use.</span></span> <span data-ttu-id="c0f37-144">Le tableau suivant indique les valeurs valides du paramètre <c>algName</c> et les algorithmes auxquels elles sont mappées.</span><span class="sxs-lookup"><span data-stu-id="c0f37-144">The following table shows the valid values for the <c>algName</c> parameter and the algorithms they map to.</span></span>  
  
 <span data-ttu-id="c0f37-145"><list type="table"><listheader><term> Valeur de paramètre</span><span class="sxs-lookup"><span data-stu-id="c0f37-145"><list type="table"><listheader><term> Parameter value</span></span>  
  
 <span data-ttu-id="c0f37-146"></term><description> Implémente</span><span class="sxs-lookup"><span data-stu-id="c0f37-146"></term><description> Implements</span></span>  
  
 <span data-ttu-id="c0f37-147"></description></listheader><item><term> System.Security.Cryptography.AsymmetricAlgorithm</span><span class="sxs-lookup"><span data-stu-id="c0f37-147"></description></listheader><item><term> System.Security.Cryptography.AsymmetricAlgorithm</span></span>  
  
 <span data-ttu-id="c0f37-148"></term><description><see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /></description></item><item><term> RSA</span><span class="sxs-lookup"><span data-stu-id="c0f37-148"></term><description><see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /></description></item><item><term> RSA</span></span>  
  
 <span data-ttu-id="c0f37-149"></term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> System.Security.Cryptography.RSA</span><span class="sxs-lookup"><span data-stu-id="c0f37-149"></term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> System.Security.Cryptography.RSA</span></span>  
  
 <span data-ttu-id="c0f37-150"></term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> DSA</span><span class="sxs-lookup"><span data-stu-id="c0f37-150"></term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> DSA</span></span>  
  
 <span data-ttu-id="c0f37-151"></term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> System.Security.Cryptography.DSA</span><span class="sxs-lookup"><span data-stu-id="c0f37-151"></term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> System.Security.Cryptography.DSA</span></span>  
  
 <span data-ttu-id="c0f37-152"></term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> ECDsa</span><span class="sxs-lookup"><span data-stu-id="c0f37-152"></term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> ECDsa</span></span>  
  
 <span data-ttu-id="c0f37-153"></term><description><see cref="T:System.Security.Cryptography.ECDsa" /></description></item><item><term> ECDsaCng</span><span class="sxs-lookup"><span data-stu-id="c0f37-153"></term><description><see cref="T:System.Security.Cryptography.ECDsa" /></description></item><item><term> ECDsaCng</span></span>  
  
 <span data-ttu-id="c0f37-154"></term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> System.Security.Cryptography.ECDsaCng</span><span class="sxs-lookup"><span data-stu-id="c0f37-154"></term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> System.Security.Cryptography.ECDsaCng</span></span>  
  
 <span data-ttu-id="c0f37-155"></term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> ECDH</span><span class="sxs-lookup"><span data-stu-id="c0f37-155"></term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> ECDH</span></span>  
  
 <span data-ttu-id="c0f37-156"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> ECDiffieHellman</span><span class="sxs-lookup"><span data-stu-id="c0f37-156"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> ECDiffieHellman</span></span>  
  
 <span data-ttu-id="c0f37-157"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> ECDiffieHellmanCng</span><span class="sxs-lookup"><span data-stu-id="c0f37-157"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> ECDiffieHellmanCng</span></span>  
  
 <span data-ttu-id="c0f37-158"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /></description></item><item><term> System.Security.Cryptography.ECDiffieHellmanCng</span><span class="sxs-lookup"><span data-stu-id="c0f37-158"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /></description></item><item><term> System.Security.Cryptography.ECDiffieHellmanCng</span></span>  
  
 </term><description><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /></description></item></list></param>
        <summary><span data-ttu-id="c0f37-159">Crée une instance de l'implémentation spécifiée d'un algorithme asymétrique.</span><span class="sxs-lookup"><span data-stu-id="c0f37-159">Creates an instance of the specified implementation of an asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="c0f37-160">Nouvelle instance de l'implémentation de l'algorithme asymétrique spécifiée.</span><span class="sxs-lookup"><span data-stu-id="c0f37-160">A new instance of the specified asymmetric algorithm implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c0f37-161">L’exemple de code suivant montre comment implémenter la <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> méthode dans une classe étendue.</span><span class="sxs-lookup"><span data-stu-id="c0f37-161">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> method in an extended class.</span></span> <span data-ttu-id="c0f37-162">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Cryptography.AsymmetricAlgorithm> classe.</span><span class="sxs-lookup"><span data-stu-id="c0f37-162">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#12)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#12)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0f37-163">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="c0f37-163">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0f37-164">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="c0f37-164">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f37-165">Appelez la méthode `Dispose` une fois que vous avez terminé d'utiliser <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="c0f37-165">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</span></span> <span data-ttu-id="c0f37-166">La méthode `Dispose` rend le <xref:System.Security.Cryptography.AsymmetricAlgorithm> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="c0f37-166">The `Dispose` method leaves the <xref:System.Security.Cryptography.AsymmetricAlgorithm> in an unusable state.</span></span> <span data-ttu-id="c0f37-167">Après avoir appelé `Dispose`, vous devez libérer toutes les références à la <xref:System.Security.Cryptography.AsymmetricAlgorithm> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Security.Cryptography.AsymmetricAlgorithm> occupée.</span><span class="sxs-lookup"><span data-stu-id="c0f37-167">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.AsymmetricAlgorithm> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.AsymmetricAlgorithm> was occupying.</span></span>  
  
 <span data-ttu-id="c0f37-168">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="c0f37-168">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0f37-169">Appelez toujours `Dispose` avant de libérer votre dernière référence à <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="c0f37-169">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</span></span> <span data-ttu-id="c0f37-170">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Security.Cryptography.AsymmetricAlgorithm> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="c0f37-170">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.AsymmetricAlgorithm> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c0f37-171"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="c0f37-171"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="c0f37-172">Libère les ressources non managées utilisées par la classe <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> et libère éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="c0f37-172">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f37-173">Cette méthode est appelée par le public `Dispose()` (méthode) et le `Finalize` (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0f37-173">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="c0f37-174">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec la `disposing` paramètre la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="c0f37-174">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="c0f37-175">`Finalize` appelle `Dispose` avec `disposing` la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="c0f37-175">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="c0f37-176">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="c0f37-176">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.AsymmetricAlgorithm> references.</span></span> <span data-ttu-id="c0f37-177">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="c0f37-177">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c0f37-178"><see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span><span class="sxs-lookup"><span data-stu-id="c0f37-178"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="c0f37-179">Lors de la substitution <see langword="Dispose(Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d’un appel antérieur à <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="c0f37-179">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="c0f37-180">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="c0f37-180">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="c0f37-181">Pour plus d’informations sur <see langword="Dispose" /> et <see langword="Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="c0f37-181">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public virtual void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXmlString(System::String ^ xmlString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlString"><span data-ttu-id="c0f37-182">Chaîne XML à utiliser pour reconstruire l'objet <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="c0f37-182">The XML string to use to reconstruct the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span></span></param>
        <summary><span data-ttu-id="c0f37-183">En cas de substitution dans une classe dérivée, reconstruit un objet <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> à partir d'une chaîne XML.</span><span class="sxs-lookup"><span data-stu-id="c0f37-183">When overridden in a derived class, reconstructs an <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object from an XML string.</span></span> <span data-ttu-id="c0f37-184">Sinon, lève un <see cref="T:System.NotImplementedException" />.</span><span class="sxs-lookup"><span data-stu-id="c0f37-184">Otherwise, throws a <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c0f37-185">L’exemple de code suivant montre comment implémenter la <xref:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString%2A> méthode pour analyser la chaîne XML spécifiée pour remplir l’actuel <xref:System.Security.Cryptography.CspParameters> objet.</span><span class="sxs-lookup"><span data-stu-id="c0f37-185">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString%2A> method to parse the specified XML string to populate the current <xref:System.Security.Cryptography.CspParameters> object.</span></span> <span data-ttu-id="c0f37-186">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Cryptography.AsymmetricAlgorithm> classe.</span><span class="sxs-lookup"><span data-stu-id="c0f37-186">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#4)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#4)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public virtual string KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0f37-187">En cas de substitution dans une classe dérivée, obtient le nom de l'algorithme d'échange de clés.</span><span class="sxs-lookup"><span data-stu-id="c0f37-187">When overridden in a derived class, gets the name of the key exchange algorithm.</span></span> <span data-ttu-id="c0f37-188">Sinon, lève un <see cref="T:System.NotImplementedException" />.</span><span class="sxs-lookup"><span data-stu-id="c0f37-188">Otherwise, throws an <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <value><span data-ttu-id="c0f37-189">Nom de l'algorithme d'échange de clés.</span><span class="sxs-lookup"><span data-stu-id="c0f37-189">The name of the key exchange algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c0f37-190">L’exemple de code suivant montre comment substituer la <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm%2A> propriété pour retourner le nom de l’algorithme d’échange de clés.</span><span class="sxs-lookup"><span data-stu-id="c0f37-190">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm%2A> property to return the name for the key exchange algorithm.</span></span> <span data-ttu-id="c0f37-191">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Cryptography.AsymmetricAlgorithm> classe.</span><span class="sxs-lookup"><span data-stu-id="c0f37-191">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#6)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#6)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public virtual int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0f37-192">Obtient ou définit la taille, en bits, du modulo de clé utilisé par l'algorithme asymétrique.</span><span class="sxs-lookup"><span data-stu-id="c0f37-192">Gets or sets the size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="c0f37-193">Taille, en bits, du modulo de clé utilisé par l'algorithme asymétrique.</span><span class="sxs-lookup"><span data-stu-id="c0f37-193">The size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f37-194">Les tailles de clé valides sont spécifiées par l’implémentation particulière de l’algorithme asymétrique et sont répertoriées dans le <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c0f37-194">The valid key sizes are specified by the particular implementation of the asymmetric algorithm and are listed in the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f37-195">L’exemple de code suivant montre comment substituer la <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> propriété pour vérifier qu’il se trouve dans la plage identifiée locaux `keySizes` variable membre.</span><span class="sxs-lookup"><span data-stu-id="c0f37-195">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> property to verify that it falls within the range identified in the local `keySizes` member variable.</span></span> <span data-ttu-id="c0f37-196">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Cryptography.AsymmetricAlgorithm> classe.</span><span class="sxs-lookup"><span data-stu-id="c0f37-196">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#9)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#9)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c0f37-197">La taille du modulo de la clé n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="c0f37-197">The key modulus size is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeySizeValue">
      <MemberSignature Language="C#" Value="protected int KeySizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 KeySizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected KeySizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int KeySizeValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0f37-198">Représente la taille, en bits, du modulo de la clé utilisé par l'algorithme asymétrique.</span><span class="sxs-lookup"><span data-stu-id="c0f37-198">Represents the size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f37-199">Les tailles de clé valides sont spécifiées par l’implémentation particulière de l’algorithme asymétrique et sont répertoriées dans le <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c0f37-199">The valid key sizes are specified by the particular implementation of the asymmetric algorithm and are listed in the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 <span data-ttu-id="c0f37-200">Ce champ est accessible via la <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c0f37-200">This field is accessed through the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0f37-201">Obtient les tailles de clé prises en charge par l'algorithme asymétrique.</span><span class="sxs-lookup"><span data-stu-id="c0f37-201">Gets the key sizes that are supported by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="c0f37-202">Tableau qui contient les tailles de clé prises en charge par l'algorithme asymétrique.</span><span class="sxs-lookup"><span data-stu-id="c0f37-202">An array that contains the key sizes supported by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f37-203">L’algorithme asymétrique prend en charge uniquement les tailles de clé qui correspondent à une entrée dans ce tableau.</span><span class="sxs-lookup"><span data-stu-id="c0f37-203">The asymmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f37-204">L’exemple de code suivant montre comment appeler le <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> propriété à récupérer le <xref:System.Security.Cryptography.KeySizes.MinSize%2A>, <xref:System.Security.Cryptography.KeySizes.MaxSize%2A>, et <xref:System.Security.Cryptography.KeySizes.SkipSize%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="c0f37-204">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property to retrieve the <xref:System.Security.Cryptography.KeySizes.MinSize%2A>, <xref:System.Security.Cryptography.KeySizes.MaxSize%2A>, and <xref:System.Security.Cryptography.KeySizes.SkipSize%2A> properties.</span></span> <span data-ttu-id="c0f37-205">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Cryptography.AsymmetricAlgorithm> classe.</span><span class="sxs-lookup"><span data-stu-id="c0f37-205">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#10)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#10)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizesValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.KeySizes[] LegalKeySizesValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue" />
      <MemberSignature Language="VB.NET" Value="Protected LegalKeySizesValue As KeySizes() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizesValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0f37-206">Spécifie les tailles de clé prises en charge par l'algorithme asymétrique.</span><span class="sxs-lookup"><span data-stu-id="c0f37-206">Specifies the key sizes that are supported by the asymmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f37-207">L’algorithme asymétrique prend en charge uniquement les tailles de clé qui correspondent à une entrée dans ce tableau.</span><span class="sxs-lookup"><span data-stu-id="c0f37-207">The asymmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
 <span data-ttu-id="c0f37-208">Ce champ est accessible via la <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c0f37-208">This field is accessed through the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public virtual string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0f37-209">En cas d'implémentation dans une classe dérivée, obtient le nom de l'algorithme de signature.</span><span class="sxs-lookup"><span data-stu-id="c0f37-209">When implemented in a derived class, gets the name of the signature algorithm.</span></span> <span data-ttu-id="c0f37-210">Sinon, lève toujours un <see cref="T:System.NotImplementedException" />.</span><span class="sxs-lookup"><span data-stu-id="c0f37-210">Otherwise, always throws a <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <value><span data-ttu-id="c0f37-211">Nom de l'algorithme de signature.</span><span class="sxs-lookup"><span data-stu-id="c0f37-211">The name of the signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c0f37-212">L’exemple de code suivant montre comment substituer la <xref:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm%2A> propriété pour retourner le nom de l’algorithme de signature.</span><span class="sxs-lookup"><span data-stu-id="c0f37-212">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm%2A> property to return the name of the signature algorithm.</span></span> <span data-ttu-id="c0f37-213">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Cryptography.AsymmetricAlgorithm> classe.</span><span class="sxs-lookup"><span data-stu-id="c0f37-213">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#7)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#7)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public virtual string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="c0f37-214"><see langword="true" /> pour inclure les paramètres privés ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c0f37-214"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c0f37-215">En cas de substitution dans une classe dérivée, crée et retourne une représentation sous forme de chaîne XML de l'objet <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="c0f37-215">When overridden in a derived class, creates and returns an XML string representation of the current <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span></span> <span data-ttu-id="c0f37-216">Sinon, lève un <see cref="T:System.NotImplementedException" />.</span><span class="sxs-lookup"><span data-stu-id="c0f37-216">Otherwise, throws a <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <returns><span data-ttu-id="c0f37-217">Encodage de la chaîne XML de l'objet <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="c0f37-217">An XML string encoding of the current <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c0f37-218">L’exemple de code suivant montre comment appeler le <xref:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString%2A> méthode pour créer une représentation XML des paramètres en cours <xref:System.Security.Cryptography.AsymmetricAlgorithm> objet.</span><span class="sxs-lookup"><span data-stu-id="c0f37-218">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString%2A> method to create an XML representation of the parameters in the current <xref:System.Security.Cryptography.AsymmetricAlgorithm> object.</span></span> <span data-ttu-id="c0f37-219">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Cryptography.AsymmetricAlgorithm> classe.</span><span class="sxs-lookup"><span data-stu-id="c0f37-219">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#5)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#5)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>