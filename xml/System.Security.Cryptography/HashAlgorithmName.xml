<Type Name="HashAlgorithmName" FullName="System.Security.Cryptography.HashAlgorithmName">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b5929e1824962b9fae40068441f17bc7ef41a4b" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52238829" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct HashAlgorithmName : IEquatable&lt;System.Security.Cryptography.HashAlgorithmName&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HashAlgorithmName extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Security.Cryptography.HashAlgorithmName&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HashAlgorithmName" />
  <TypeSignature Language="VB.NET" Value="Public Structure HashAlgorithmName&#xA;Implements IEquatable(Of HashAlgorithmName)" />
  <TypeSignature Language="C++ CLI" Value="public value class HashAlgorithmName : IEquatable&lt;System::Security::Cryptography::HashAlgorithmName&gt;" />
  <TypeSignature Language="F#" Value="type HashAlgorithmName = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Security.Cryptography.HashAlgorithmName&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8f08d-101">Spécifie le nom d'un algorithme de hachage de chiffrement.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8f08d-101">Specifies the name of a cryptographic hash algorithm.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f08d-102">Le <xref:System.Security.Cryptography.HashAlgorithmName> structure inclut certaines propriétés statiques qui retournent des noms d’algorithmes de hachage prédéfini ainsi qu’un <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> propriété qui peut représenter un nom d’algorithme de hachage personnalisé sous forme de chaîne fortement typée.</span><span class="sxs-lookup"><span data-stu-id="8f08d-102">The <xref:System.Security.Cryptography.HashAlgorithmName> structure includes some static properties that return predefined hash algorithm names, as well as a <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property that can represent a custom hash algorithm name as a strongly-typed string.</span></span> <span data-ttu-id="8f08d-103">Noms d’algorithmes de hachage respectent la casse.</span><span class="sxs-lookup"><span data-stu-id="8f08d-103">Hash algorithm names are case-sensitive.</span></span>  
  
 <span data-ttu-id="8f08d-104">Les algorithmes asymétriques implémentés à l’aide CNG (cryptographie nouvelle génération) API de Microsoft interprètent la valeur de chaîne sous-jacente qu’un [identificateur d’algorithme CNG](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx).</span><span class="sxs-lookup"><span data-stu-id="8f08d-104">Asymmetric algorithms implemented using Microsoft's CNG (Cryptographic Next Generation) API interpret the underlying string value as a [CNG algorithm identifier](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx).</span></span>  
  
 <span data-ttu-id="8f08d-105">Algorithmes asymétriques implémentés à l’aide d’autres technologies :</span><span class="sxs-lookup"><span data-stu-id="8f08d-105">Asymmetric algorithms implemented using other technologies:</span></span>  
  
-   <span data-ttu-id="8f08d-106">Cet effet doit reconnaître au moins « MD5 », « SHA1 », « SHA256 », « SHA384 » et « SHA512 ».</span><span class="sxs-lookup"><span data-stu-id="8f08d-106">Must recognize at least "MD5", "SHA1", "SHA256", "SHA384", and "SHA512".</span></span>  
  
-   <span data-ttu-id="8f08d-107">Doit reconnaître les identificateurs CNG supplémentaires pour tous les algorithmes de hachage supplémentaires pris en charge.</span><span class="sxs-lookup"><span data-stu-id="8f08d-107">Should recognize additional CNG identifiers for any additional hash algorithms that they support.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HashAlgorithmName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HashAlgorithmName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.HashAlgorithmName : string -&gt; System.Security.Cryptography.HashAlgorithmName" Usage="new System.Security.Cryptography.HashAlgorithmName name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8f08d-108">Nom personnalisé de l'algorithme de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-108">The custom hash algorithm name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f08d-109">Initialise une nouvelle instance de la structure <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> avec un nom personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-109">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> structure with a custom name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f08d-110">Le constructeur n’effectue aucune validation sur `name`.</span><span class="sxs-lookup"><span data-stu-id="8f08d-110">The constructor performs no validation on `name`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8f08d-111">Retourne une valeur qui indique si deux valeurs <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> sont égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-111">Returns a value that indicates whether two <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> values are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="hashAlgorithmName.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="8f08d-112">Objet à comparer à l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-112">The object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f08d-113">Retourne une valeur qui indique si l'instance actuelle et un objet spécifié sont égaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-113">Returns a value that indicates whether the current instance and a specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f08d-114">
            <see langword="true" /> si <paramref name="obj" /> est un objet <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> et si sa propriété <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> est égale à celle de l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-114">
              <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> object and its <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property is equal to that of the current instance.</span>
          </span>
          <span data-ttu-id="8f08d-115">La comparaison est ordinale et respecte la casse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-115">The comparison is ordinal and case-sensitive.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Security.Cryptography.HashAlgorithmName other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Security.Cryptography.HashAlgorithmName other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Security::Cryptography::HashAlgorithmName other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Security.Cryptography.HashAlgorithmName -&gt; bool" Usage="hashAlgorithmName.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="8f08d-116">Objet à comparer à l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-116">The object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f08d-117">Retourne une valeur qui indique si deux instances de <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> sont égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-117">Returns a value that indicates whether two <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> instances are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f08d-118">
            <see langword="true" /> si la propriété <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> de <paramref name="other" /> est égale à celle de l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-118">
              <see langword="true" /> if the <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="other" /> is equal to that of the current instance.</span>
          </span>
          <span data-ttu-id="8f08d-119">La comparaison est ordinale et respecte la casse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-119">The comparison is ordinal and case-sensitive.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="hashAlgorithmName.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f08d-120">Retourne le code de hachage pour l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-120">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f08d-121">Code de hachage de l'instance actuelle, ou 0 si aucune valeur <paramref name="name" /> n'a été fournie au constructeur <see cref="T:System.Security.Cryptography.HashAlgorithmName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-121">The hash code for the current instance, or 0 if no <paramref name="name" /> value was supplied to the <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> constructor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MD5">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName MD5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName MD5" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.MD5" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MD5 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName MD5 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberSignature Language="F#" Value="member this.MD5 : System.Security.Cryptography.HashAlgorithmName" Usage="System.Security.Cryptography.HashAlgorithmName.MD5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f08d-122">Obtient un nom d'algorithme de hachage qui représente « MD5 ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-122">Gets a hash algorithm name that represents "MD5".</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f08d-123">Nom d'algorithme de hachage qui représente « MD5 ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-123">A hash algorithm name that represents "MD5".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Security.Cryptography.HashAlgorithmName.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f08d-124">Obtient la représentation de chaîne sous-jacente du nom de l'algorithme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-124">Gets the underlying string representation of the algorithm name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f08d-125">Représentation de chaîne du nom de l'algorithme, ou <see langword="null" /> ou <see cref="F:System.String.Empty" /> si aucun algorithme de hachage n'est disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-125">The string representation of the algorithm name, or <see langword="null" /> or <see cref="F:System.String.Empty" /> if no hash algorithm is available.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Security.Cryptography.HashAlgorithmName left, System.Security.Cryptography.HashAlgorithmName right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Security.Cryptography.HashAlgorithmName left, valuetype System.Security.Cryptography.HashAlgorithmName right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As HashAlgorithmName, right As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Security::Cryptography::HashAlgorithmName left, System::Security::Cryptography::HashAlgorithmName right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Security.Cryptography.HashAlgorithmName * System.Security.Cryptography.HashAlgorithmName -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="right" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="8f08d-126">Premier objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-126">The first object to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="8f08d-127">Deuxième objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-127">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f08d-128">Détermine si deux objets <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> spécifiés sont identiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-128">Determines whether two specified <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f08d-129">
            <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ont la même valeur <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-129">
              <see langword="true" /> if both <paramref name="left" /> and <paramref name="right" /> have the same <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f08d-130">Le <xref:System.Security.Cryptography.HashAlgorithmName.op_Equality%2A> méthode définit l’opération de l’opérateur d’égalité pour <xref:System.Security.Cryptography.HashAlgorithmName> valeurs.</span><span class="sxs-lookup"><span data-stu-id="8f08d-130">The <xref:System.Security.Cryptography.HashAlgorithmName.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Security.Cryptography.HashAlgorithmName left, System.Security.Cryptography.HashAlgorithmName right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Security.Cryptography.HashAlgorithmName left, valuetype System.Security.Cryptography.HashAlgorithmName right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As HashAlgorithmName, right As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Security::Cryptography::HashAlgorithmName left, System::Security::Cryptography::HashAlgorithmName right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Security.Cryptography.HashAlgorithmName * System.Security.Cryptography.HashAlgorithmName -&gt; bool" Usage="System.Security.Cryptography.HashAlgorithmName.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="right" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="8f08d-131">Premier objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-131">The first object to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="8f08d-132">Deuxième objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-132">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f08d-133">Détermine si deux objets <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> spécifiés ne sont pas identiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-133">Determines whether two specified <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f08d-134">
            <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> n'ont pas la même valeur <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-134">
              <see langword="true" /> if both <paramref name="left" /> and <paramref name="right" /> do not have the same <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f08d-135">Le <xref:System.Security.Cryptography.HashAlgorithmName.op_Inequality%2A> méthode définit l’opération de l’opérateur d’inégalité pour <xref:System.Security.Cryptography.HashAlgorithmName> valeurs.</span><span class="sxs-lookup"><span data-stu-id="8f08d-135">The <xref:System.Security.Cryptography.HashAlgorithmName.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA1">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName SHA1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName SHA1" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.SHA1" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SHA1 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName SHA1 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberSignature Language="F#" Value="member this.SHA1 : System.Security.Cryptography.HashAlgorithmName" Usage="System.Security.Cryptography.HashAlgorithmName.SHA1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f08d-136">Obtient un nom d'algorithme de hachage qui représente « SHA1 ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-136">Gets a hash algorithm name that represents "SHA1".</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f08d-137">Nom d'algorithme de hachage qui représente « SHA1 ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-137">A hash algorithm name that represents "SHA1".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA256">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName SHA256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName SHA256" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.SHA256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SHA256 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName SHA256 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberSignature Language="F#" Value="member this.SHA256 : System.Security.Cryptography.HashAlgorithmName" Usage="System.Security.Cryptography.HashAlgorithmName.SHA256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f08d-138">Obtient un nom d'algorithme de hachage qui représente « SHA256 ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-138">Gets a hash algorithm name that represents "SHA256".</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f08d-139">Nom d'algorithme de hachage qui représente « SHA256 ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-139">A hash algorithm name that represents "SHA256".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA384">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName SHA384 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName SHA384" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.SHA384" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SHA384 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName SHA384 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberSignature Language="F#" Value="member this.SHA384 : System.Security.Cryptography.HashAlgorithmName" Usage="System.Security.Cryptography.HashAlgorithmName.SHA384" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f08d-140">Obtient un nom d'algorithme de hachage qui représente « SHA384 ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-140">Gets a hash algorithm name that represents "SHA384".</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f08d-141">Nom d'algorithme de hachage qui représente « SHA384 ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-141">A hash algorithm name that represents "SHA384".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA512">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName SHA512 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName SHA512" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.SHA512" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SHA512 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName SHA512 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberSignature Language="F#" Value="member this.SHA512 : System.Security.Cryptography.HashAlgorithmName" Usage="System.Security.Cryptography.HashAlgorithmName.SHA512" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f08d-142">Obtient un nom d'algorithme de hachage qui représente « SHA512 ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-142">Gets a hash algorithm name that represents "SHA512".</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f08d-143">Nom d'algorithme de hachage qui représente « SHA512 ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-143">A hash algorithm name that represents "SHA512".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="hashAlgorithmName.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f08d-144">Retourne la représentation sous forme de chaîne de l'instance <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-144">Returns the string representation of the current <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f08d-145">Représentation sous forme de chaîne de l'instance <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f08d-145">The string representation of the current <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f08d-146">Le <xref:System.Security.Cryptography.HashAlgorithmName.ToString%2A> méthode retourne le <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> propriété, si elle a été affectée.</span><span class="sxs-lookup"><span data-stu-id="8f08d-146">The <xref:System.Security.Cryptography.HashAlgorithmName.ToString%2A> method returns the <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property, if it has been assigned.</span></span> <span data-ttu-id="8f08d-147">Sinon, il retourne <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8f08d-147">Otherwise, it returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>