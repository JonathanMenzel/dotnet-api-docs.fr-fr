<Type Name="ECDsaCng" FullName="System.Security.Cryptography.ECDsaCng">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9146c1f35bf2f9d913e01e050bac7d26770cc7f4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30500743" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ECDsaCng : System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ECDsaCng extends System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDsaCng" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ECDsaCng&#xA;Inherits ECDsa" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDsaCng sealed : System::Security::Cryptography::ECDsa" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.ECDsa</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3a6bc-101">Fournit une implémentation CNG (Cryptography Next Generation) de l’algorithme ECDSA (Elliptic Curve Digital Signature Algorithm).</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a6bc-101">Provides a Cryptography Next Generation (CNG) implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-102">Cette classe dérive de la <xref:System.Security.Cryptography.ECDsa> classe de base abstraite.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-102">This class derives from the <xref:System.Security.Cryptography.ECDsa> abstract base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6bc-103">L’exemple suivant montre comment utiliser la <xref:System.Security.Cryptography.ECDsaCng> classe pour signer un message et l’utilisation de la signature pour vérifier que le message n’a pas été modifié.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-103">The following example shows how to use the <xref:System.Security.Cryptography.ECDsaCng> class to sign a message and how to use the signature to verify that the message has not been altered.</span></span>  
  
 [!code-csharp[ECDsaCng#1](~/samples/snippets/csharp/VS_Snippets_CLR/ecdsacng/cs/program.cs#1)]
 [!code-vb[ECDsaCng#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ecdsacng/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a6bc-104">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.ECDsaCng" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-104">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a6bc-105">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.ECDsaCng" /> avec une paire de clés aléatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-105">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class with a random key pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-106">La paire de clés aléatoire a une longueur de clé publique de 521 bits.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-106">The random key pair has a public key length of 521 bits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="3a6bc-107">Les classes CNG (Cryptography Next Generation) ne sont pas prises en charge sur ce système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-107">Cryptography Next Generation (CNG) classes are not supported on this system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(int keySize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize">
          <span data-ttu-id="3a6bc-108">Taille de la clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-108">The size of the key.</span>
          </span>
          <span data-ttu-id="3a6bc-109">Les tailles de clé valides sont 256, 384 et 521 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-109">Valid key sizes are 256, 384, and 521 bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-110">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.ECDsaCng" /> avec une paire de clés aléatoire, à l’aide de la taille de clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class with a random key pair, using the specified key size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-111">La paire de clés aléatoire aura la longueur de clé publique définie par le `keySize` paramètre.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-111">The random key pair will have the public key length defined by the `keySize` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="3a6bc-112">Les classes CNG (Cryptography Next Generation) ne sont pas prises en charge sur ce système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-112">Cryptography Next Generation (CNG) classes are not supported on this system.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="3a6bc-113">
            <paramref name="keySize" /> spécifie une longueur non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-113">
              <paramref name="keySize" /> specifies an invalid length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (System.Security.Cryptography.CngKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CngKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As CngKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(System::Security::Cryptography::CngKey ^ key);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3a6bc-114">Clé utilisée comme entrée pour les opérations de chiffrement effectuées par l’objet actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-114">The key that will be used as input to the cryptographic operations performed by the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-115">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.ECDsaCng" /> à l'aide de l'objet <see cref="T:System.Security.Cryptography.CngKey" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class by using the specified <see cref="T:System.Security.Cryptography.CngKey" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a6bc-116">
            <paramref name="key" /> ne spécifie pas un groupe ECDSA (Elliptic Curve Digital Signature Algorithm).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-116">
              <paramref name="key" /> does not specify an Elliptic Curve Digital Signature Algorithm (ECDSA) group.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a6bc-117">
            <paramref name="key" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-117">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="3a6bc-118">Les classes CNG (Cryptography Next Generation) ne sont pas prises en charge sur ce système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-118">Cryptography Next Generation (CNG) classes are not supported on this system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(System::Security::Cryptography::ECCurve curve);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve">
          <span data-ttu-id="3a6bc-119">La courbe utilisée pour générer la paire de clés publique/privée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-119">The curve used to generate the public/private key pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-120">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.ECDsaCng" /> dont la paire de clés publique/privée est générée sur la courbe spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class whose public/private key pair is generated over the specified curve.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-121">`curve` doit valider (autrement dit, elle doit retourner `true`) lorsqu’il est passé à la <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> (méthode) et doit être une prime nommée ou explicite.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-121">`curve` must validate (that is, it must return `true`) when passed to the <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> method and must be either a named or explicit prime.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="3a6bc-122">
            <paramref name="curve" /> ne valide pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-122">
              <paramref name="curve" /> does not validate.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportExplicitParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportExplicitParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportExplicitParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportExplicitParameters(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="3a6bc-123">
            <see langword="true" /> pour inclure les paramètres privés ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-123">
              <see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-124">Exporte les paramètres de clé et de courbe explicite utilisés par l’objet ECC dans un objet <see cref="T:System.Security.Cryptography.ECParameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-124">Exports the key and explicit curve parameters used by the Elliptic curve cryptography (ECC) object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6bc-125">Les paramètres de clé et de courbe explicite utilisés par l’objet ECC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-125">The key and explicit curve parameters used by the ECC object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="3a6bc-126">Une erreur s'est produite pendant la recherche des valeurs de courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-126">An error occurred while obtaining the curve values.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="3a6bc-127">L’exportation explicite n’est pas prise en charge par cette plateforme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-127">Explicit export is not supported by this platform.</span>
          </span>
          <span data-ttu-id="3a6bc-128">Windows 10 ou version ultérieure requis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-128">Windows 10 or higher is required.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportParameters(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="3a6bc-129">
            <see langword="true" /> pour inclure les paramètres privés ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-129">
              <see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-130">Exporte la clé utilisée par l’objet ECC dans un objet <see cref="T:System.Security.Cryptography.ECParameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-130">Exports the key used by the Elliptic curve cryptography (ECC) object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span>
          </span>
          <span data-ttu-id="3a6bc-131">Si la clé a été créée en tant que courbe nommée, le champ <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> contient les paramètres de la courbe nommée, sinon il contient des paramètres explicites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-131">If the key was created as a named curve, the <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> field contains named curve parameters; otherwise, it contains explicit parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6bc-132">Les paramètres de clé et de courbe nommée utilisés par l’objet ECC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-132">The key and named curve parameters used by the ECC object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="3a6bc-133">Une erreur s'est produite pendant la recherche des valeurs de courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-133">An error occurred while obtaining the curve values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a6bc-134">Désérialise les informations de clés à partir d'une chaîne XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-134">Deserializes the key information from an XML string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public override void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXmlString(System::String ^ xmlString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlString">
          <span data-ttu-id="3a6bc-135">Les informations de clés basées sur XML à désérialiser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-135">The XML-based key information to be deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-136">Cette méthode n’est pas implémentée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-136">This method is not implemented.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-137">Pour désérialiser une clé XML, utilisez la <xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29> à la place de surcharge.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-137">To deserialize an XML key, use the <xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3a6bc-138">Cette méthode n'a pas été substituée pour cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-138">This method was not overridden for this instance.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public void FromXmlString (string xml, System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromXmlString(string xml, valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXmlString (xml As String, format As ECKeyXmlFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromXmlString(System::String ^ xml, System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="3a6bc-139">Les informations de clés basées sur XML à désérialiser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-139">The XML-based key information to be deserialized.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="3a6bc-140">L'une des valeurs d'énumération qui spécifie le format de la chaîne XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-140">One of the enumeration values that specifies the format of the XML string.</span>
          </span>
          <span data-ttu-id="3a6bc-141">Le seul format accepté actuellement est <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-141">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-142">Désérialise les informations de clés d'une chaîne XML en utilisant le format spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-142">Deserializes the key information from an XML string by using the specified format.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a6bc-143">
            <paramref name="xml" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-143">
              <paramref name="xml" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3a6bc-144">
            <paramref name="format" /> spécifie un format non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-144">
              <paramref name="format" /> specifies an invalid format.</span>
          </span>
          <span data-ttu-id="3a6bc-145">La seule valeur acceptée est <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-145">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="3a6bc-146">Toutes les autres erreurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-146">All other errors.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey(System::Security::Cryptography::ECCurve curve);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve">
          <span data-ttu-id="3a6bc-147">La courbe à utiliser pour générer la clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-147">The curve to use to generate the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-148">Génère une clé à utiliser pour l’algorithme ECDsaCng.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-148">Generates a key to use for the ECDsaCng algorithm.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="3a6bc-149">
            <paramref name="curve" /> ne valide pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-149">
              <paramref name="curve" /> does not validate.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngAlgorithm ^ HashAlgorithm { System::Security::Cryptography::CngAlgorithm ^ get(); void set(System::Security::Cryptography::CngAlgorithm ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6bc-150">Obtient ou définit l'algorithme de hachage à utiliser pour la signature et la vérification des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-150">Gets or sets the hash algorithm to use when signing and verifying data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6bc-151">Objet qui spécifie l'algorithme de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-151">An object that specifies the hash algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-152">Cette propriété accepte les algorithmes suivants : <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>, et <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-152">This property accepts the following algorithms: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>, and <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</span></span>  
  
 <span data-ttu-id="3a6bc-153">D’autres algorithmes de hachage personnalisés peuvent également être utilisées.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-153">Other custom hash algorithms may also be used.</span></span>  
  
 <span data-ttu-id="3a6bc-154">L’algorithme par défaut est <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-154">The default algorithm is <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span></span>  
  
 <span data-ttu-id="3a6bc-155">Cette propriété n’est pas utilisée si vous signez ou vérifiez des données qui sont déjà hachées.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-155">This property is not used if you are signing or verifying data that is already hashed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a6bc-156">La valeur est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-156">The value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.ECParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.ECParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As ECParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::ECParameters parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="3a6bc-157">Les paramètres de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-157">The curve parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-158">Remplace la clé existante utilisée par l'instance actuelle en créant un <see cref="T:System.Security.Cryptography.CngKey" /> pour la structure des paramètres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-158">Replaces the existing key that the current instance is working with by creating a new <see cref="T:System.Security.Cryptography.CngKey" /> for the parameters structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-159">Si `parameters` ne contient que <xref:System.Security.Cryptography.ECParameters.Q>uniquement une clé publique est importée.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-159">If `parameters` contains only <xref:System.Security.Cryptography.ECParameters.Q>, only a public key is imported.</span></span> <span data-ttu-id="3a6bc-160">Si `parameters` contient également <xref:System.Security.Cryptography.ECParameters.D>, une paire de clés complète est importée.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-160">If `parameters` also contains <xref:System.Security.Cryptography.ECParameters.D>, a full key pair is imported.</span></span> <span data-ttu-id="3a6bc-161">Le <xref:System.Security.Cryptography.ECParameters.Curve> champ spécifie le type de la courbe à importer.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-161">The <xref:System.Security.Cryptography.ECParameters.Curve> field specifies the type of the curve to import.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="3a6bc-162">
            <paramref name="parameters" /> ne contient pas de valeurs valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-162">
              <paramref name="parameters" /> does not contain valid values.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3a6bc-163">
            <paramref name="parameters" /> fait référence à une courbe qui ne peut pas être importée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-163">
              <paramref name="parameters" /> references a curve that cannot be imported.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="3a6bc-164">
            <paramref name="parameters" /> fait référence à une courbe qui n’est pas prise en charge par cette plateforme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-164">
              <paramref name="parameters" /> references a curve that is not supported by this platform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngKey ^ Key { System::Security::Cryptography::CngKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6bc-165">Obtient ou définit la clé à utiliser lors de la signature et de la vérification des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-165">Gets or sets the key to use when signing and verifying data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6bc-166">Objet qui spécifie la clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-166">An object that specifies the key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a6bc-167">Génère une signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-167">Generates a signature.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="3a6bc-168">Les données de message à signer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-168">The message data to be signed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-169">Génère une signature pour les données spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-169">Generates a signature for the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6bc-170">Une signature numérique pour les données spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-170">A digital signature for the specified data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-171">Cette méthode génère une signature pour les données spécifiées en hachant les données d’entrée à l’aide du <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> propriété et en signant ensuite le résultat.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-171">This method generates a signature for the specified data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 <span data-ttu-id="3a6bc-172">Le <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> l’indicateur est nécessaire si la clé de Cryptography Next Generation (CNG) n’est pas générée aléatoirement par le <xref:System.Security.Cryptography.ECDsaCng> objet.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-172">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a6bc-173">
            <paramref name="data" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-173">
              <paramref name="data" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="3a6bc-174">Les informations de clé associées à l’instance n’ont pas de clé privée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-174">The key information that is associated with the instance does not have a private key.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission">
          <span data-ttu-id="3a6bc-175">pour l’autorisation signer des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-175">for permission to sign data.</span>
          </span>
          <span data-ttu-id="3a6bc-176">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-176">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="3a6bc-177">Énumération associée : <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-177">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (System.IO.Stream data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(class System.IO.Stream data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Stream) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="3a6bc-178">Le flux de données à signer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-178">The data stream to be signed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-179">Génère une signature pour le flux de données spécifié, en lisant jusqu'à la fin le flux de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-179">Generates a signature for the specified data stream, reading to the end of the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6bc-180">Une signature numérique pour le flux de données spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-180">A digital signature for the specified data stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-181">Cette méthode génère une signature pour le flux de données spécifié en hachant les données d’entrée à l’aide du <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> propriété et en signant ensuite le résultat.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-181">This method generates a signature for the specified data stream by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 <span data-ttu-id="3a6bc-182">Le <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> l’indicateur est nécessaire si la clé de Cryptography Next Generation (CNG) n’est pas générée aléatoirement par le <xref:System.Security.Cryptography.ECDsaCng> objet.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-182">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a6bc-183">
            <paramref name="data" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-183">
              <paramref name="data" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="3a6bc-184">Les informations de clé associées à l’instance n’ont pas de clé privée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-184">The key information that is associated with the instance does not have a private key.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission">
          <span data-ttu-id="3a6bc-185">pour l’autorisation signer des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-185">for permission to sign data.</span>
          </span>
          <span data-ttu-id="3a6bc-186">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-186">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="3a6bc-187">Énumération associée : <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-187">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] data, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] data, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="3a6bc-188">Les données de message à signer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-188">The message data to be signed.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3a6bc-189">L'emplacement dans la chaîne à partir duquel démarrer la signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-189">The location in the string at which to start signing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3a6bc-190">La longueur de la chaîne, en caractères, à partir de <c>offset</c> qui sera signée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-190">The length of the string, in characters, following <c>offset</c> that will be signed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-191">Génère une signature numérique pour la longueur spécifiée de données, en commençant à l'offset spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-191">Generates a digital signature for the specified length of data, beginning at the specified offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6bc-192">Une signature numérique pour la longueur de données spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-192">A digital signature for the specified length of data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-193">Cette méthode génère une signature pour les données spécifiées en hachant les données d’entrée à l’aide du <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> propriété et en signant ensuite le résultat</span><span class="sxs-lookup"><span data-stu-id="3a6bc-193">This method generates a signature for the specified data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result</span></span>  
  
 <span data-ttu-id="3a6bc-194">Le <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> l’indicateur est nécessaire si la clé de Cryptography Next Generation (CNG) n’est pas générée aléatoirement par le <xref:System.Security.Cryptography.ECDsaCng> objet.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-194">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a6bc-195">
            <paramref name="data" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-195">
              <paramref name="data" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3a6bc-196">
            <paramref name="count" /> ou <paramref name="offset" /> a provoqué la lecture au delà des limites de la chaîne de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-196">
              <paramref name="count" /> or <paramref name="offset" /> caused reading outside the bounds of the data string.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="3a6bc-197">Les informations de clé associées à l’instance n’ont pas de clé privée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-197">The key information that is associated with the instance does not have a private key.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission">
          <span data-ttu-id="3a6bc-198">pour l’autorisation signer des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-198">for permission to sign data.</span>
          </span>
          <span data-ttu-id="3a6bc-199">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-199">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="3a6bc-200">Énumération associée : <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-200">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public override byte[] SignHash (byte[] hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignHash(unsigned int8[] hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignHash (hash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ hash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash">
          <span data-ttu-id="3a6bc-201">Valeur de hachage des données à signer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-201">The hash value of the data to be signed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-202">Génère une signature pour la valeur de hachage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-202">Generates a signature for the specified hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6bc-203">Signature numérique pour la valeur de hachage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-203">A digital signature for the specified hash value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-204">Le <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> l’indicateur est nécessaire si la clé de Cryptography Next Generation (CNG) n’est pas générée aléatoirement par le <xref:System.Security.Cryptography.ECDsaCng> objet.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-204">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a6bc-205">
            <paramref name="hash" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-205">
              <paramref name="hash" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="3a6bc-206">Les informations de clé associées à l’instance n’ont pas de clé privée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-206">The key information that is associated with the instance does not have a private key.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission">
          <span data-ttu-id="3a6bc-207">pour l’autorisation signer des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-207">for permission to sign data.</span>
          </span>
          <span data-ttu-id="3a6bc-208">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-208">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="3a6bc-209">Énumération associée : <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-209">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a6bc-210">Sérialise les informations de clés en une chaîne XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-210">Serializes the key information to an XML string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public override string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="3a6bc-211">
            <see langword="true" /> pour inclure les paramètres privés ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-211">
              <see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-212">Cette méthode n’est pas implémentée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-212">This method is not implemented.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6bc-213">Non applicable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-213">Not applicable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-214">Pour convertir la clé actuelle en une représentation XML, utilisez la <xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29> à la place de surcharge.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-214">To convert the current key to an XML representation, use the <xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3a6bc-215">Cette méthode n’est pas implémentée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-215">This method is not implemented.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public string ToXmlString (System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXmlString(valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXmlString (format As ECKeyXmlFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXmlString(System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="3a6bc-216">L'une des valeurs d'énumération qui spécifie le format de la chaîne XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-216">One of the enumeration values that specifies the format of the XML string.</span>
          </span>
          <span data-ttu-id="3a6bc-217">Le seul format accepté actuellement est <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-217">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-218">Sérialise les informations de clés en une chaîne XML en utilisant le format spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-218">Serializes the key information to an XML string by using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6bc-219">Un objet chaîne qui contient les informations de clés, sérialisées en une chaîne XML, conformément au format demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-219">A string object that contains the key information, serialized to an XML string according to the requested format.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3a6bc-220">
            <paramref name="format" /> spécifie un format non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-220">
              <paramref name="format" /> specifies an invalid format.</span>
          </span>
          <span data-ttu-id="3a6bc-221">La seule valeur acceptée est <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-221">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="3a6bc-222">Toutes les autres erreurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-222">All other errors.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a6bc-223">Vérifie une signature numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-223">Verifies a digital signature.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] data, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] data, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Byte(), signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="3a6bc-224">les données qui ont été signées ;</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-224">The data that was signed.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="3a6bc-225">Signature à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-225">The signature to be verified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-226">Vérifie la signature numérique des données spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-226">Verifies the digital signature of the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6bc-227">
            <see langword="true" /> si la signature est valide ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-227">
              <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-228">Cette méthode génère une signature pour les données fournies par les données d’entrée à l’aide de hachage le <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> propriété et en signant ensuite le résultat.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-228">This method generates a signature for the given data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a6bc-229">
            <paramref name="data" /> ou <paramref name="signature" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-229">
              <paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (System.IO.Stream data, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(class System.IO.Stream data, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Stream, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(System::IO::Stream ^ data, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="3a6bc-230">Le flux de données qui a été signé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-230">The data stream that was signed.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="3a6bc-231">Signature à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-231">The signature to be verified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-232">Vérifie la signature numérique du flux de données spécifié, en lisant jusqu'à la fin le flux de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-232">Verifies the digital signature of the specified data stream, reading to the end of the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6bc-233">
            <see langword="true" /> si la signature est valide ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-233">
              <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-234">Cette méthode hache les données d’entrée à l’aide de le <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> avant la vérification.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-234">This method hashes the input data by using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property before verification.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a6bc-235">
            <paramref name="data" /> ou <paramref name="signature" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-235">
              <paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] data, int offset, int count, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] data, int32 offset, int32 count, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Byte(), offset As Integer, count As Integer, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="3a6bc-236">les données qui ont été signées ;</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-236">The data that was signed.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3a6bc-237">L'emplacement dans les données où les données signées commencent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-237">The location in the data at which the signed data begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3a6bc-238">La longueur des données, en caractères, à partir de <c>offset</c> qui sera signée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-238">The length of the data, in characters, following <c>offset</c> that will be signed.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="3a6bc-239">Signature à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-239">The signature to be verified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-240">Vérifie une signature pour la longueur spécifiée de données, en commençant à l'offset spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-240">Verifies a signature for the specified length of data, beginning at the specified offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6bc-241">
            <see langword="true" /> si la signature est valide ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-241">
              <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6bc-242">Cette méthode hache les données d’entrée à l’aide de le <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> avant la vérification.</span><span class="sxs-lookup"><span data-stu-id="3a6bc-242">This method hashes the input data by using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property before verification.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3a6bc-243">
            <paramref name="offset" /> ou <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-243">
              <paramref name="offset" /> or <paramref name="count" /> is less then zero.</span>
          </span>
          <span data-ttu-id="3a6bc-244">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-244">-or-</span>
          </span>
          <span data-ttu-id="3a6bc-245">
            <paramref name="offset" /> ou <paramref name="count" /> est supérieur à la longueur du tableau d'octets transmis dans le paramètre <paramref name="data" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-245">
              <paramref name="offset" /> or <paramref name="count" /> is larger than the length of the byte array passed in the <paramref name="data" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a6bc-246">
            <paramref name="data" /> ou <paramref name="signature" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-246">
              <paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public override bool VerifyHash (byte[] hash, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyHash(unsigned int8[] hash, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyHash (hash As Byte(), signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyHash(cli::array &lt;System::Byte&gt; ^ hash, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash">
          <span data-ttu-id="3a6bc-247">Valeur de hachage des données à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-247">The hash value of the data to be verified.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="3a6bc-248">Signature numérique des données à vérifier par rapport à la valeur de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-248">The digital signature of the data to be verified against the hash value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6bc-249">Vérifie la signature numérique spécifiée par rapport à une valeur de hachage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-249">Verifies the specified digital signature against a specified hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6bc-250">
            <see langword="true" /> si la signature est valide ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-250">
              <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a6bc-251">
            <paramref name="hash" /> ou <paramref name="signature" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6bc-251">
              <paramref name="hash" /> or <paramref name="signature" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>