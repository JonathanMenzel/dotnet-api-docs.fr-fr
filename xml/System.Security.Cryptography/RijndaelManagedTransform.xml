<Type Name="RijndaelManagedTransform" FullName="System.Security.Cryptography.RijndaelManagedTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7da90a5889af5bb3715a18000a76ab97e64f2913" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30499373" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RijndaelManagedTransform : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RijndaelManagedTransform extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RijndaelManagedTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RijndaelManagedTransform&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class RijndaelManagedTransform sealed : System::Security::Cryptography::ICryptoTransform" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Exécute une transformation de chiffrement de données à l'aide de l'algorithme Rijndael. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  À l’aide de cette classe n’est pas recommandée. La meilleure pratique consiste à utiliser <xref:System.Security.Cryptography.RijndaelManaged> avec un <xref:System.Security.Cryptography.CryptoStream> objet. Le <xref:System.Security.Cryptography.CryptoStream> objet gère les problèmes de remplissage qui peuvent se produire lorsque vous utilisez <xref:System.Security.Cryptography.RijndaelManagedTransform> directement. Pour obtenir un exemple, consultez la <xref:System.Security.Cryptography.RijndaelManaged> classe.  
  
 À la fois le <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> et <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> méthodes retournent une instance de la <xref:System.Security.Cryptography.RijndaelManagedTransform> classe qui est initialisée avec les informations de clé d’actuel <xref:System.Security.Cryptography.RijndaelManaged> objet.  Pour chiffrer ou déchiffrer des données à l’aide de l’algorithme Rijndael, passez le <xref:System.Security.Cryptography.RijndaelManagedTransform> objet retourné par ces méthodes vers un <xref:System.Security.Cryptography.CryptoStream> objet.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="public int BlockSizeValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockSizeValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSizeValue { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la taille du bloc.</summary>
        <value>Taille des blocs de données en octets.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanReuseTransform { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la transformation actuelle peut être réutilisée.</summary>
        <value>Toujours <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si plusieurs blocs peuvent être transformés.</summary>
        <value>
          <see langword="true" /> si plusieurs blocs peuvent être transformés ; sinon <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources utilisées par la classe <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est un simple appel à <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> classe.  
  
 Appel de `Dispose` autorise les ressources utilisées par le <xref:System.Security.Cryptography.RijndaelManagedTransform> à être réaffectés à d’autres fins. Pour plus d’informations sur `Dispose`, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez la méthode `Dispose` une fois que vous avez terminé d'utiliser <xref:System.Security.Cryptography.RijndaelManagedTransform>. La méthode `Dispose` rend le <xref:System.Security.Cryptography.RijndaelManagedTransform> inutilisable. Après avoir appelé `Dispose`, vous devez libérer toutes les références à la <xref:System.Security.Cryptography.RijndaelManagedTransform> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Security.Cryptography.RijndaelManagedTransform> occupée.  
  
 Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Appelez toujours `Dispose` avant de libérer votre dernière référence à <xref:System.Security.Cryptography.RijndaelManagedTransform>. Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Security.Cryptography.RijndaelManagedTransform> de l'objet `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la taille du bloc d'entrée.</summary>
        <value>Taille des blocs de données d'entrée en octets.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la taille du bloc de sortie.</summary>
        <value>Taille des blocs de données de sortie en octets.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Réinitialise l'état interne de <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /> afin qu'il puisse être réutilisé pour faire un chiffrement ou déchiffrement différent.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> méthode est appelée automatiquement lorsque vous appelez <xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A>. Le <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> méthode n’est pas appelée lorsque, par exemple, les données d’entrée chiffrées sont garbage et ne peut pas être déchiffrées. Dans ce cas, une exception est levée et <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> n’est pas appelée. Vous pouvez choisir d’appeler manuellement la <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> méthode dans ce cas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">Entrée sur laquelle effectuer l'opération.</param>
        <param name="inputOffset">Offset dans le tableau d'octets d'entrée à partir duquel l'utilisation des données commence.</param>
        <param name="inputCount">Nombre d'octets dans le tableau d'octets d'entrée à utiliser comme données.</param>
        <param name="outputBuffer">Sortie vers laquelle écrire les données.</param>
        <param name="outputOffset">Offset dans le tableau d'octets de sortie à partir duquel l'écriture des données commence.</param>
        <summary>Calcule la transformation de la zone spécifiée du tableau d'octets d'entrée et copie la transformation qui en résulte dans la zone spécifiée du tableau d'octets de sortie.</summary>
        <returns>Nombre d'octets écrits.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="inputBuffer" /> a la valeur <see langword="null" />.  
  
 - ou -  
  
 Le paramètre <paramref name="outputBuffer" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La longueur de la mémoire tampon d'entrée est inférieure à la somme de l'offset d'entrée et du nombre d'entrées.  
  
 - ou -  
  
 La valeur du paramètre <paramref name="inputCount" /> est inférieure ou égale à zéro.  
  
 - ou -  
  
 La valeur du paramètre <paramref name="inputCount" /> est supérieure à la longueur du paramètre <paramref name="inputBuffer" />.  
  
 - ou -  
  
 La longueur du paramètre <paramref name="inputCount" /> n'est pas divisible de manière égale par taille de bloc d'entrée.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur du paramètre <paramref name="inputOffset" /> est négative.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">Entrée sur laquelle effectuer l'opération.</param>
        <param name="inputOffset">Offset dans le tableau d'octets à partir duquel l'utilisation des données commence.</param>
        <param name="inputCount">Nombre d'octets dans le tableau d'octets à utiliser comme données.</param>
        <summary>Calcule la transformation pour la zone spécifiée du tableau d'octets spécifié.</summary>
        <returns>Transformation calculée.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="inputBuffer" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La valeur du paramètre <paramref name="inputCount" /> est inférieure à 0.  
  
 - ou -  
  
 La valeur du paramètre <paramref name="inputCount" /> est supérieure à la longueur du paramètre <paramref name="inputBuffer" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur du paramètre <paramref name="inputOffset" /> est négative.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La longueur du paramètre <paramref name="inputCount" /> n'est pas divisible de manière égale par taille de bloc d'entrée.</exception>
      </Docs>
    </Member>
  </Members>
</Type>