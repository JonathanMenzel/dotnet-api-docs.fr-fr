<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AmbiguousMatchException.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5911cf30906a42c5385f0853056fca9293ff264b8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">911cf30906a42c5385f0853056fca9293ff264b8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.AmbiguousMatchException">
          <source>The exception that is thrown when binding to a member results in more than one member matching the binding criteria.</source>
          <target state="translated">Exception levée si, lors de la liaison à un membre, plusieurs membres correspondent aux critères de liaison.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Reflection.AmbiguousMatchException">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AmbiguousMatchException">
          <source><ph id="ph1">`AmbiguousMatchException`</ph> uses the HRESULT COR_E_AMBIGUOUSMATCH which has the value 0x8000211D.</source>
          <target state="translated"><ph id="ph1">`AmbiguousMatchException`</ph> utilise HRESULT COR_E_AMBIGUOUSMATCH dont la valeur est 0x8000211D.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AmbiguousMatchException">
          <source>An <ph id="ph1">`AmbiguousMatchException`</ph> is thrown when a member is invoked late-bound and multiple overloads satisfy the binding criteria, or when more than one member matches the binding criteria passed to a reflection method that can return only a single result (for example, <ph id="ph2">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">Un <ph id="ph1">`AmbiguousMatchException`</ph> est levée lorsqu’un membre est appelée à liaison tardive et que plusieurs surcharges satisfont aux critères de liaison, ou lorsque plusieurs membres correspondent aux critères de liaison passés à une méthode de réflexion qui peut retourner uniquement un résultat unique (par exemple, <ph id="ph2">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph>ou <ph id="ph3">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Reflection.AmbiguousMatchException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> class with an empty message string and the root cause exception set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> avec une chaîne de message vide et la cause première de l'exception ayant la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source><ph id="ph1">`AmbiguousMatchException`</ph> inherits from <ph id="ph2">&lt;xref:System.Exception&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`AmbiguousMatchException`</ph> hérite de <ph id="ph2">&lt;xref:System.Exception&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>This constructor sets the properties of the <ph id="ph1">`Exception`</ph> object as shown in the following table.</source>
          <target state="translated">Ce constructeur définit les propriétés de la <ph id="ph1">`Exception`</ph> de l’objet comme indiqué dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>The empty string ("").</source>
          <target state="translated">La chaîne vide (« »).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>A string indicating the reason this exception was thrown.</source>
          <target state="translated">Chaîne indiquant la raison de la levée de cette exception.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> class with its message string set to the given message and the root cause exception set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> dont la chaîne de message est égale au message donné et la cause première de l'exception a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source><ph id="ph1">`AmbiguousMatchException`</ph> inherits from <ph id="ph2">&lt;xref:System.Exception&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`AmbiguousMatchException`</ph> hérite de <ph id="ph2">&lt;xref:System.Exception&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>This constructor sets the properties of the <ph id="ph1">`Exception`</ph> object as shown in the following table.</source>
          <target state="translated">Ce constructeur définit les propriétés de la <ph id="ph1">`Exception`</ph> de l’objet comme indiqué dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>The <ph id="ph1">`message`</ph> string.</source>
          <target state="translated">Le <ph id="ph1">`message`</ph> chaîne.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Message d'erreur qui explique la raison de l'exception.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Exception ayant provoqué l'exception actuelle.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Si le paramètre <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> n’est pas <ph id="ph1">&lt;see langword="null" /&gt;</ph> l’exception actuelle est levée dans un bloc <ph id="ph2">&lt;see langword="catch" /&gt;</ph> qui gère l’exception interne.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Une exception levée en conséquence directe d'une exception précédente doit contenir une référence à celle-ci dans la propriété <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> retourne la même valeur que celle qui a été passée dans le constructeur ou retourne <ph id="ph2">`null`</ph> si la propriété <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> ne fournit pas la valeur d'exception interne au constructeur.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Reflection.AmbiguousMatchException&gt;</ph>.</source>
          <target state="translated">Le tableau suivant montre les valeurs initiales des propriétés d'une instance de <ph id="ph1">&lt;xref:System.Reflection.AmbiguousMatchException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">La référence à l'exception interne.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">Chaîne du message d'erreur.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The following example shows two classes, each named <ph id="ph1">`Mymethod`</ph>.</source>
          <target state="translated">L’exemple suivant illustre deux classes, chacun nommé <ph id="ph1">`Mymethod`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>One class takes an integer and the other takes a string.</source>
          <target state="translated">Une classe accepte un entier et l’autre prend une chaîne.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>If an integer is passed to <ph id="ph1">`Mymethod`</ph>, the first class is used.</source>
          <target state="translated">Si un entier est passé à <ph id="ph1">`Mymethod`</ph>, la première classe est utilisée.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>If a string is passed, the second class is used.</source>
          <target state="translated">Si une chaîne est passée, la deuxième classe est utilisée.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>If it cannot be determined which <ph id="ph1">`Mymethod`</ph> to use, <ph id="ph2">`AmbiguousMatchException`</ph> is thrown.</source>
          <target state="translated">S’il est impossible de déterminer quel <ph id="ph1">`Mymethod`</ph> à utiliser, <ph id="ph2">`AmbiguousMatchException`</ph> est levée.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>