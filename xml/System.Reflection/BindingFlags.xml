<Type Name="BindingFlags" FullName="System.Reflection.BindingFlags">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c137730a6b4d6d9bb9c9fd203d41013008a8591" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55400122" /></Metadata><TypeSignature Language="C#" Value="public enum BindingFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed BindingFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.BindingFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum BindingFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class BindingFlags" />
  <TypeSignature Language="F#" Value="type BindingFlags = " />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a3957-101">Spécifie des indicateurs qui contrôlent la liaison et la manière dont la recherche de membres et de types est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="a3957-101">Specifies flags that control binding and the way in which the search for members and types is conducted by reflection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3957-102">Ces `BindingFlags` contrôlent la liaison pour de très nombreuses classes dans le `System`, `System.Reflection`, et `System.Runtime` espaces de noms appeler, créer, obtenir, définir et rechercher des types et membres.</span><span class="sxs-lookup"><span data-stu-id="a3957-102">These `BindingFlags` control binding for a great many classes in the `System`, `System.Reflection`, and `System.Runtime` namespaces that invoke, create, get, set, and find members and types.</span></span>  
  
 <span data-ttu-id="a3957-103">`BindingFlags` sont utilisées dans l’exemple suivant <xref:System.Type> méthodes et autres endroits tels que <xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="a3957-103">`BindingFlags` are used in the following <xref:System.Type> methods and other places such as <xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=nameWithType>:</span></span>  
  
-   <xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=nameWithType>  
  
-   <xref:System.Type.GetMembers%2A>  
  
-   <xref:System.Type.GetEvents%2A>  
  
-   <xref:System.Type.InvokeMember%2A>  
  
-   <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType>  
  
-   <xref:System.Type.GetConstructor%2A>  
  
-   <xref:System.Type.GetConstructors%2A>  
  
-   <xref:System.Type.GetMethod%2A>  
  
-   <xref:System.Type.GetMethods%2A>  
  
-   <xref:System.Type.GetField%2A>  
  
-   <xref:System.Type.GetFields%2A>  
  
-   <xref:System.Type.GetEvent%2A>  
  
-   <xref:System.Type.GetProperty%2A>  
  
-   <xref:System.Type.GetProperties%2A>  
  
-   <xref:System.Type.GetMember%2A>  
  
-   <xref:System.Type.FindMembers%2A>  
  
 <span data-ttu-id="a3957-104">`InvokeMember` et `GetMethod` sont particulièrement importants.</span><span class="sxs-lookup"><span data-stu-id="a3957-104">`InvokeMember` and `GetMethod` are especially important.</span></span>  
  
 <span data-ttu-id="a3957-105">Indicateurs de liaison peuvent être classés par la façon dont ils identifient un membre de type, comme indiqué dans le tableau suivant.</span><span class="sxs-lookup"><span data-stu-id="a3957-105">The binding flags can be categorized by how they identify a type member, as listed in the following table.</span></span>  
  
|<span data-ttu-id="a3957-106">Identifié par l’accessibilité</span><span class="sxs-lookup"><span data-stu-id="a3957-106">Identified by Accessibility</span></span>|<span data-ttu-id="a3957-107">Identifié par l’Argument de liaison</span><span class="sxs-lookup"><span data-stu-id="a3957-107">Identified by Binding Argument</span></span>|<span data-ttu-id="a3957-108">Identifié par opération</span><span class="sxs-lookup"><span data-stu-id="a3957-108">Identified by Operation</span></span>|  
|---------------------------------|------------------------------------|-----------------------------|  
|<span data-ttu-id="a3957-109">DeclaredOnly</span><span class="sxs-lookup"><span data-stu-id="a3957-109">DeclaredOnly</span></span><br /><br /> <span data-ttu-id="a3957-110">FlattenHierarchy</span><span class="sxs-lookup"><span data-stu-id="a3957-110">FlattenHierarchy</span></span><br /><br /> <span data-ttu-id="a3957-111">IgnoreCase</span><span class="sxs-lookup"><span data-stu-id="a3957-111">IgnoreCase</span></span><br /><br /> <span data-ttu-id="a3957-112">IgnoreReturn</span><span class="sxs-lookup"><span data-stu-id="a3957-112">IgnoreReturn</span></span><br /><br /> <span data-ttu-id="a3957-113">Instance</span><span class="sxs-lookup"><span data-stu-id="a3957-113">Instance</span></span><br /><br /> <span data-ttu-id="a3957-114">NonPublic</span><span class="sxs-lookup"><span data-stu-id="a3957-114">NonPublic</span></span><br /><br /> <span data-ttu-id="a3957-115">Public</span><span class="sxs-lookup"><span data-stu-id="a3957-115">Public</span></span><br /><br /> <span data-ttu-id="a3957-116">Statique</span><span class="sxs-lookup"><span data-stu-id="a3957-116">Static</span></span>|<span data-ttu-id="a3957-117">ExactBinding</span><span class="sxs-lookup"><span data-stu-id="a3957-117">ExactBinding</span></span><br /><br /> <span data-ttu-id="a3957-118">OptionalParamBinding</span><span class="sxs-lookup"><span data-stu-id="a3957-118">OptionalParamBinding</span></span>|<span data-ttu-id="a3957-119">CreateInstance</span><span class="sxs-lookup"><span data-stu-id="a3957-119">CreateInstance</span></span><br /><br /> <span data-ttu-id="a3957-120">GetField</span><span class="sxs-lookup"><span data-stu-id="a3957-120">GetField</span></span><br /><br /> <span data-ttu-id="a3957-121">SetField</span><span class="sxs-lookup"><span data-stu-id="a3957-121">SetField</span></span><br /><br /> <span data-ttu-id="a3957-122">GetProperty</span><span class="sxs-lookup"><span data-stu-id="a3957-122">GetProperty</span></span><br /><br /> <span data-ttu-id="a3957-123">SetProperty</span><span class="sxs-lookup"><span data-stu-id="a3957-123">SetProperty</span></span><br /><br /> <span data-ttu-id="a3957-124">InvokeMethod</span><span class="sxs-lookup"><span data-stu-id="a3957-124">InvokeMethod</span></span><br /><br /> <span data-ttu-id="a3957-125">PutDispProperty</span><span class="sxs-lookup"><span data-stu-id="a3957-125">PutDispProperty</span></span><br /><br /> <span data-ttu-id="a3957-126">PutRefDispProperty</span><span class="sxs-lookup"><span data-stu-id="a3957-126">PutRefDispProperty</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="a3957-127">Vous devez spécifier `Instance` ou `Static` avec `Public` ou `NonPublic` ou aucun membre n’est retourné.</span><span class="sxs-lookup"><span data-stu-id="a3957-127">You must specify `Instance` or `Static` along with `Public` or `NonPublic` or no members will be returned.</span></span>  
  
 <span data-ttu-id="a3957-128">Le tableau suivant répertorie les contraintes effectuées par la valeur par défaut <xref:System.Reflection.Binder.ChangeType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3957-128">The following table lists the coercions performed by the default <xref:System.Reflection.Binder.ChangeType%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a3957-129">Ce tableau s’applique en particulier à la `BindingFlags.ExactBinding` indicateur de liaison.</span><span class="sxs-lookup"><span data-stu-id="a3957-129">This table applies especially to the `BindingFlags.ExactBinding` binding flag.</span></span> <span data-ttu-id="a3957-130">Le principe général est que <xref:System.Reflection.Binder.ChangeType%2A> doit effectuer que des contraintes étendues, qui ne perdent jamais de données.</span><span class="sxs-lookup"><span data-stu-id="a3957-130">The general principle is that <xref:System.Reflection.Binder.ChangeType%2A> should perform only widening coercions, which never lose data.</span></span> <span data-ttu-id="a3957-131">La conversion forcée d’une valeur qui est un entier signé 32 bits à une valeur qui est un entier signé 64 bits est un exemple de contrainte étendue.</span><span class="sxs-lookup"><span data-stu-id="a3957-131">An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</span></span> <span data-ttu-id="a3957-132">Elle se distingue d’une contrainte restrictive, ce qui peut perdre des données.</span><span class="sxs-lookup"><span data-stu-id="a3957-132">This is distinguished from a narrowing coercion, which may lose data.</span></span> <span data-ttu-id="a3957-133">La conversion forcée d’un entier signé 64 bits à un entier signé 32 bits est un exemple de contrainte restrictive.</span><span class="sxs-lookup"><span data-stu-id="a3957-133">An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</span></span> 
  
|<span data-ttu-id="a3957-134">Type de source</span><span class="sxs-lookup"><span data-stu-id="a3957-134">Source Type</span></span>|<span data-ttu-id="a3957-135">Type de cible</span><span class="sxs-lookup"><span data-stu-id="a3957-135">Target Type</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="a3957-136">Tout type</span><span class="sxs-lookup"><span data-stu-id="a3957-136">Any type</span></span>|<span data-ttu-id="a3957-137">Son type de base.</span><span class="sxs-lookup"><span data-stu-id="a3957-137">Its base type.</span></span>|  
|<span data-ttu-id="a3957-138">Tout type</span><span class="sxs-lookup"><span data-stu-id="a3957-138">Any type</span></span>|<span data-ttu-id="a3957-139">L’interface qu’elle implémente.</span><span class="sxs-lookup"><span data-stu-id="a3957-139">The interface it implements.</span></span>|  
|`Char`|<span data-ttu-id="a3957-140">`UInt16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="a3957-140">`UInt16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span></span>|  
|`Byte`|<span data-ttu-id="a3957-141">`Char`, `UInt16`, `Int16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="a3957-141">`Char`, `UInt16`, `Int16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span></span>|  
|`SByte`|<span data-ttu-id="a3957-142">`Int16`, `Int32`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="a3957-142">`Int16`, `Int32`, `Int64`, `Single`, `Double`</span></span>|  
|`UInt16`|<span data-ttu-id="a3957-143">`UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="a3957-143">`UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span></span>|  
|`Int16`|<span data-ttu-id="a3957-144">`Int32`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="a3957-144">`Int32`, `Int64`, `Single`, `Double`</span></span>|  
|`UInt32`|<span data-ttu-id="a3957-145">`UInt64`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="a3957-145">`UInt64`, `Int64`, `Single`, `Double`</span></span>|  
|`Int32`|<span data-ttu-id="a3957-146">`Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="a3957-146">`Int64`, `Single`, `Double`</span></span>|  
|`UInt64`|<span data-ttu-id="a3957-147">`Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="a3957-147">`Single`, `Double`</span></span>|  
|`Int64`|<span data-ttu-id="a3957-148">`Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="a3957-148">`Single`, `Double`</span></span>|  
|`Single`|`Double`|  
|<span data-ttu-id="a3957-149">Non-reference</span><span class="sxs-lookup"><span data-stu-id="a3957-149">Non-reference</span></span>|<span data-ttu-id="a3957-150">Par référence.</span><span class="sxs-lookup"><span data-stu-id="a3957-150">By-reference.</span></span>|  

<span data-ttu-id="a3957-151">Lorsque le `BindingFlags.ExactBinding` indicateur de liaison est utilisée, la réflexion modélise les règles d’accessibilité du système de type commun.</span><span class="sxs-lookup"><span data-stu-id="a3957-151">When the `BindingFlags.ExactBinding` binding flag is used, reflection models the accessibility rules of the common type system.</span></span> <span data-ttu-id="a3957-152">Par exemple, si l’appelant est dans le même assembly, l’appelant n’a besoin pas des autorisations spéciales pour les membres internes.</span><span class="sxs-lookup"><span data-stu-id="a3957-152">For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</span></span> <span data-ttu-id="a3957-153">Sinon, l’appelant doit <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="a3957-153">Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>.</span></span> <span data-ttu-id="a3957-154">Cela est cohérent avec la recherche de membres qui sont protégées, privées et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="a3957-154">This is consistent with the lookup of members that are protected, private, and so on.</span></span>  
  
   
  
   
     
  
## Examples  
 <span data-ttu-id="a3957-155">L’exemple suivant illustre plusieurs indicateurs de liaison.</span><span class="sxs-lookup"><span data-stu-id="a3957-155">The following example demonstrates many of the binding flags.</span></span>  
  
 [!code-cpp[BindingFlags#1](~/samples/snippets/cpp/VS_Snippets_CLR/BindingFlags/CPP/bindingflagssample.cpp#1)]
 [!code-csharp[BindingFlags#1](~/samples/snippets/csharp/VS_Snippets_CLR/BindingFlags/CS/bindingflagssample.cs#1)]
 [!code-vb[BindingFlags#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/BindingFlags/VB/bindingflagssample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="CreateInstance" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags CreateInstance = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="CreateInstance" />
      <MemberSignature Language="C++ CLI" Value="CreateInstance" />
      <MemberSignature Language="F#" Value="CreateInstance = 512" Usage="System.Reflection.BindingFlags.CreateInstance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-156">Spécifie que la réflexion doit créer une instance du type spécifié.</span><span class="sxs-lookup"><span data-stu-id="a3957-156">Specifies that reflection should create an instance of the specified type.</span></span> <span data-ttu-id="a3957-157">Appelle le constructeur qui correspond aux arguments donnés.</span><span class="sxs-lookup"><span data-stu-id="a3957-157">Calls the constructor that matches the given arguments.</span></span> <span data-ttu-id="a3957-158">Le nom de membre fourni est ignoré.</span><span class="sxs-lookup"><span data-stu-id="a3957-158">The supplied member name is ignored.</span></span> <span data-ttu-id="a3957-159">Si le type de recherche n’est pas spécifié, (Instance | Public) s’applique.</span><span class="sxs-lookup"><span data-stu-id="a3957-159">If the type of lookup is not specified, (Instance | Public) will apply.</span></span> <span data-ttu-id="a3957-160">Il n’est pas possible d’appeler un initialiseur de type.</span><span class="sxs-lookup"><span data-stu-id="a3957-160">It is not possible to call a type initializer.</span></span>  
  
<span data-ttu-id="a3957-161">Cet indicateur est passé à une méthode <see langword="InvokeMember" /> pour appeler un constructeur.</span><span class="sxs-lookup"><span data-stu-id="a3957-161">This flag is passed to an <see langword="InvokeMember" /> method to invoke a constructor.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DeclaredOnly">
      <MemberSignature Language="C#" Value="DeclaredOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags DeclaredOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.DeclaredOnly" />
      <MemberSignature Language="VB.NET" Value="DeclaredOnly" />
      <MemberSignature Language="C++ CLI" Value="DeclaredOnly" />
      <MemberSignature Language="F#" Value="DeclaredOnly = 2" Usage="System.Reflection.BindingFlags.DeclaredOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-162">Spécifie que seuls les membres déclarés au niveau de la hiérarchie du type fourni doivent être pris en compte.</span><span class="sxs-lookup"><span data-stu-id="a3957-162">Specifies that only members declared at the level of the supplied type's hierarchy should be considered.</span></span> <span data-ttu-id="a3957-163">Les membres hérités ne sont pas pris en compte.</span><span class="sxs-lookup"><span data-stu-id="a3957-163">Inherited members are not considered.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="System.Reflection.BindingFlags.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-164">Spécifie qu’aucun indicateur de liaison n’est défini.</span><span class="sxs-lookup"><span data-stu-id="a3957-164">Specifies that no binding flags are defined.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DoNotWrapExceptions">
      <MemberSignature Language="C#" Value="DoNotWrapExceptions" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags DoNotWrapExceptions = int32(33554432)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.DoNotWrapExceptions" />
      <MemberSignature Language="VB.NET" Value="DoNotWrapExceptions" />
      <MemberSignature Language="C++ CLI" Value="DoNotWrapExceptions" />
      <MemberSignature Language="F#" Value="DoNotWrapExceptions = 33554432" Usage="System.Reflection.BindingFlags.DoNotWrapExceptions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>33554432</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="ExactBinding">
      <MemberSignature Language="C#" Value="ExactBinding" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags ExactBinding = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.ExactBinding" />
      <MemberSignature Language="VB.NET" Value="ExactBinding" />
      <MemberSignature Language="C++ CLI" Value="ExactBinding" />
      <MemberSignature Language="F#" Value="ExactBinding = 65536" Usage="System.Reflection.BindingFlags.ExactBinding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-165">Spécifie que les types des arguments fournis doivent correspondre exactement aux types des paramètres formels correspondants.</span><span class="sxs-lookup"><span data-stu-id="a3957-165">Specifies that types of the supplied arguments must exactly match the types of the corresponding formal parameters.</span></span> <span data-ttu-id="a3957-166">La réflexion lève une exception si l’appelant fournit un objet <see langword="Binder" /> non null, car cela implique que l’appelant fournisse des implémentations de <see langword="BindToXXX" /> qui sélectionnent la méthode appropriée.</span><span class="sxs-lookup"><span data-stu-id="a3957-166">Reflection throws an exception if the caller supplies a non-null <see langword="Binder" /> object, since that implies that the caller is supplying <see langword="BindToXXX" /> implementations that will pick the appropriate method.</span></span> <span data-ttu-id="a3957-167">Le binder par défaut ignore cet indicateur, tandis que les binders personnalisés peuvent implémenter la sémantique de cet indicateur.</span><span class="sxs-lookup"><span data-stu-id="a3957-167">The default binder ignores this flag, while custom binders can implement the semantics of this flag.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FlattenHierarchy">
      <MemberSignature Language="C#" Value="FlattenHierarchy" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags FlattenHierarchy = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.FlattenHierarchy" />
      <MemberSignature Language="VB.NET" Value="FlattenHierarchy" />
      <MemberSignature Language="C++ CLI" Value="FlattenHierarchy" />
      <MemberSignature Language="F#" Value="FlattenHierarchy = 64" Usage="System.Reflection.BindingFlags.FlattenHierarchy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-168">Spécifie que les membres statiques publics et protégés en haut de la hiérarchie doivent être retournés.</span><span class="sxs-lookup"><span data-stu-id="a3957-168">Specifies that public and protected static members up the hierarchy should be returned.</span></span> <span data-ttu-id="a3957-169">Les membres statiques privés des classes héritées ne sont pas retournés.</span><span class="sxs-lookup"><span data-stu-id="a3957-169">Private static members in inherited classes are not returned.</span></span> <span data-ttu-id="a3957-170">Les membres statiques comprennent les champs, les méthodes, les propriétés et les événements.</span><span class="sxs-lookup"><span data-stu-id="a3957-170">Static members include fields, methods, events, and properties.</span></span> <span data-ttu-id="a3957-171">Les types imbriqués ne sont pas retournés.</span><span class="sxs-lookup"><span data-stu-id="a3957-171">Nested types are not returned.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="GetField" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags GetField = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.GetField" />
      <MemberSignature Language="VB.NET" Value="GetField" />
      <MemberSignature Language="C++ CLI" Value="GetField" />
      <MemberSignature Language="F#" Value="GetField = 1024" Usage="System.Reflection.BindingFlags.GetField" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-172">Spécifie que la valeur du champ spécifié doit être retournée.</span><span class="sxs-lookup"><span data-stu-id="a3957-172">Specifies that the value of the specified field should be returned.</span></span>  
  
<span data-ttu-id="a3957-173">Cet indicateur est passé à une méthode <see langword="InvokeMember" /> pour obtenir la valeur d’un champ.</span><span class="sxs-lookup"><span data-stu-id="a3957-173">This flag is passed to an <see langword="InvokeMember" /> method to get a field value.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="GetProperty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags GetProperty = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.GetProperty" />
      <MemberSignature Language="VB.NET" Value="GetProperty" />
      <MemberSignature Language="C++ CLI" Value="GetProperty" />
      <MemberSignature Language="F#" Value="GetProperty = 4096" Usage="System.Reflection.BindingFlags.GetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-174">Spécifie que la valeur de la propriété spécifiée doit être retournée.</span><span class="sxs-lookup"><span data-stu-id="a3957-174">Specifies that the value of the specified property should be returned.</span></span>  
  
<span data-ttu-id="a3957-175">Cet indicateur est passé à une méthode <see langword="InvokeMember" /> pour appeler la méthode getter d’une propriété.</span><span class="sxs-lookup"><span data-stu-id="a3957-175">This flag is passed to an <see langword="InvokeMember" /> method to invoke a property getter.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="IgnoreCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags IgnoreCase = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.IgnoreCase" />
      <MemberSignature Language="VB.NET" Value="IgnoreCase" />
      <MemberSignature Language="C++ CLI" Value="IgnoreCase" />
      <MemberSignature Language="F#" Value="IgnoreCase = 1" Usage="System.Reflection.BindingFlags.IgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-176">Spécifie que la casse du nom de membre ne doit pas être prise en compte lors de la liaison.</span><span class="sxs-lookup"><span data-stu-id="a3957-176">Specifies that the case of the member name should not be considered when binding.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreReturn">
      <MemberSignature Language="C#" Value="IgnoreReturn" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags IgnoreReturn = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.IgnoreReturn" />
      <MemberSignature Language="VB.NET" Value="IgnoreReturn" />
      <MemberSignature Language="C++ CLI" Value="IgnoreReturn" />
      <MemberSignature Language="F#" Value="IgnoreReturn = 16777216" Usage="System.Reflection.BindingFlags.IgnoreReturn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-177">Utilisé dans COM Interop pour spécifier que la valeur de retour du membre peut être ignorée.</span><span class="sxs-lookup"><span data-stu-id="a3957-177">Used in COM interop to specify that the return value of the member can be ignored.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="Instance" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags Instance = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.Instance" />
      <MemberSignature Language="VB.NET" Value="Instance" />
      <MemberSignature Language="C++ CLI" Value="Instance" />
      <MemberSignature Language="F#" Value="Instance = 4" Usage="System.Reflection.BindingFlags.Instance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-178">Spécifie que les membres d’instance doivent être inclus dans la recherche.</span><span class="sxs-lookup"><span data-stu-id="a3957-178">Specifies that instance members are to be included in the search.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InvokeMethod">
      <MemberSignature Language="C#" Value="InvokeMethod" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags InvokeMethod = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.InvokeMethod" />
      <MemberSignature Language="VB.NET" Value="InvokeMethod" />
      <MemberSignature Language="C++ CLI" Value="InvokeMethod" />
      <MemberSignature Language="F#" Value="InvokeMethod = 256" Usage="System.Reflection.BindingFlags.InvokeMethod" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-179">Spécifie qu’une méthode doit être appelée.</span><span class="sxs-lookup"><span data-stu-id="a3957-179">Specifies that a method is to be invoked.</span></span> <span data-ttu-id="a3957-180">Il ne doit pas s’agir d’un constructeur ou d’un initialiseur de type.</span><span class="sxs-lookup"><span data-stu-id="a3957-180">This must not be a constructor or a type initializer.</span></span>  
  
<span data-ttu-id="a3957-181">Cet indicateur est passé à une méthode <see langword="InvokeMember" /> pour appeler une méthode.</span><span class="sxs-lookup"><span data-stu-id="a3957-181">This flag is passed to an <see langword="InvokeMember" /> method to invoke a method.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NonPublic">
      <MemberSignature Language="C#" Value="NonPublic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags NonPublic = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.NonPublic" />
      <MemberSignature Language="VB.NET" Value="NonPublic" />
      <MemberSignature Language="C++ CLI" Value="NonPublic" />
      <MemberSignature Language="F#" Value="NonPublic = 32" Usage="System.Reflection.BindingFlags.NonPublic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-182">Spécifie que les membres non publics doivent être inclus dans la recherche.</span><span class="sxs-lookup"><span data-stu-id="a3957-182">Specifies that non-public members are to be included in the search.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OptionalParamBinding">
      <MemberSignature Language="C#" Value="OptionalParamBinding" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags OptionalParamBinding = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.OptionalParamBinding" />
      <MemberSignature Language="VB.NET" Value="OptionalParamBinding" />
      <MemberSignature Language="C++ CLI" Value="OptionalParamBinding" />
      <MemberSignature Language="F#" Value="OptionalParamBinding = 262144" Usage="System.Reflection.BindingFlags.OptionalParamBinding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-183">Retourne l’ensemble de membres dont le nombre de paramètres correspond au nombre d’arguments fournis.</span><span class="sxs-lookup"><span data-stu-id="a3957-183">Returns the set of members whose parameter count matches the number of supplied arguments.</span></span> <span data-ttu-id="a3957-184">Cet indicateur de liaison est utilisé pour les méthodes avec des paramètres qui ont des valeurs par défaut et pour les méthodes avec des arguments de variable (varargs).</span><span class="sxs-lookup"><span data-stu-id="a3957-184">This binding flag is used for methods with parameters that have default values and methods with variable arguments (varargs).</span></span> <span data-ttu-id="a3957-185">Cet indicateur doit être utilisé seulement avec <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="a3957-185">This flag should only be used with <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span><br /><br /><span data-ttu-id="a3957-186">Les paramètres avec des valeurs par défaut sont utilisés uniquement dans les appels où les arguments de fin sont omis.</span><span class="sxs-lookup"><span data-stu-id="a3957-186">Parameters with default values are used only in calls where trailing arguments are omitted.</span></span> <span data-ttu-id="a3957-187">Ils doivent être les derniers arguments.</span><span class="sxs-lookup"><span data-stu-id="a3957-187">They must be the last arguments.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Public">
      <MemberSignature Language="C#" Value="Public" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags Public = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.Public" />
      <MemberSignature Language="VB.NET" Value="Public" />
      <MemberSignature Language="C++ CLI" Value="Public" />
      <MemberSignature Language="F#" Value="Public = 16" Usage="System.Reflection.BindingFlags.Public" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-188">Spécifie que les membres publics doivent être inclus dans la recherche.</span><span class="sxs-lookup"><span data-stu-id="a3957-188">Specifies that public members are to be included in the search.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PutDispProperty">
      <MemberSignature Language="C#" Value="PutDispProperty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags PutDispProperty = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.PutDispProperty" />
      <MemberSignature Language="VB.NET" Value="PutDispProperty" />
      <MemberSignature Language="C++ CLI" Value="PutDispProperty" />
      <MemberSignature Language="F#" Value="PutDispProperty = 16384" Usage="System.Reflection.BindingFlags.PutDispProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-189">Spécifie que le membre <see langword="PROPPUT" /> sur un objet COM doit être appelé.</span><span class="sxs-lookup"><span data-stu-id="a3957-189">Specifies that the <see langword="PROPPUT" /> member on a COM object should be invoked.</span></span> <span data-ttu-id="a3957-190"><see langword="PROPPUT" /> spécifie une fonction de définition de propriété qui utilise une valeur.</span><span class="sxs-lookup"><span data-stu-id="a3957-190"><see langword="PROPPUT" /> specifies a property-setting function that uses a value.</span></span> <span data-ttu-id="a3957-191">Utilisez <see langword="PutDispProperty" /> si une propriété a à la fois <see langword="PROPPUT" /> et <see langword="PROPPUTREF" />, et que vous devez distinguer celle qui est appelée.</span><span class="sxs-lookup"><span data-stu-id="a3957-191">Use <see langword="PutDispProperty" /> if a property has both <see langword="PROPPUT" /> and <see langword="PROPPUTREF" /> and you need to distinguish which one is called.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PutRefDispProperty">
      <MemberSignature Language="C#" Value="PutRefDispProperty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags PutRefDispProperty = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.PutRefDispProperty" />
      <MemberSignature Language="VB.NET" Value="PutRefDispProperty" />
      <MemberSignature Language="C++ CLI" Value="PutRefDispProperty" />
      <MemberSignature Language="F#" Value="PutRefDispProperty = 32768" Usage="System.Reflection.BindingFlags.PutRefDispProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-192">Spécifie que le membre <see langword="PROPPUTREF" /> sur un objet COM doit être appelé.</span><span class="sxs-lookup"><span data-stu-id="a3957-192">Specifies that the <see langword="PROPPUTREF" /> member on a COM object should be invoked.</span></span> <span data-ttu-id="a3957-193"><see langword="PROPPUTREF" /> spécifie une fonction de définition de propriété qui utilise une référence au lieu d’une valeur.</span><span class="sxs-lookup"><span data-stu-id="a3957-193"><see langword="PROPPUTREF" /> specifies a property-setting function that uses a reference instead of a value.</span></span> <span data-ttu-id="a3957-194">Utilisez <see langword="PutRefDispProperty" /> si une propriété a à la fois <see langword="PROPPUT" /> et <see langword="PROPPUTREF" />, et que vous devez distinguer celle qui est appelée.</span><span class="sxs-lookup"><span data-stu-id="a3957-194">Use <see langword="PutRefDispProperty" /> if a property has both <see langword="PROPPUT" /> and <see langword="PROPPUTREF" /> and you need to distinguish which one is called.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SetField">
      <MemberSignature Language="C#" Value="SetField" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags SetField = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.SetField" />
      <MemberSignature Language="VB.NET" Value="SetField" />
      <MemberSignature Language="C++ CLI" Value="SetField" />
      <MemberSignature Language="F#" Value="SetField = 2048" Usage="System.Reflection.BindingFlags.SetField" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-195">Spécifie que la valeur du champ spécifié doit être définie.</span><span class="sxs-lookup"><span data-stu-id="a3957-195">Specifies that the value of the specified field should be set.</span></span>  
  
<span data-ttu-id="a3957-196">Cet indicateur est passé à une méthode <see langword="InvokeMember" /> pour définir la valeur d’un champ.</span><span class="sxs-lookup"><span data-stu-id="a3957-196">This flag is passed to an <see langword="InvokeMember" /> method to set a field value.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="SetProperty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags SetProperty = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.SetProperty" />
      <MemberSignature Language="VB.NET" Value="SetProperty" />
      <MemberSignature Language="C++ CLI" Value="SetProperty" />
      <MemberSignature Language="F#" Value="SetProperty = 8192" Usage="System.Reflection.BindingFlags.SetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-197">Spécifie que la valeur de la propriété spécifiée doit être définie.</span><span class="sxs-lookup"><span data-stu-id="a3957-197">Specifies that the value of the specified property should be set.</span></span> <span data-ttu-id="a3957-198">Pour les propriétés COM, la spécification de cet indicateur de liaison est équivalente à la spécification de <see langword="PutDispProperty" /> et de <see langword="PutRefDispProperty" />.</span><span class="sxs-lookup"><span data-stu-id="a3957-198">For COM properties, specifying this binding flag is equivalent to specifying <see langword="PutDispProperty" /> and <see langword="PutRefDispProperty" />.</span></span>  
  
<span data-ttu-id="a3957-199">Cet indicateur est passé à une méthode <see langword="InvokeMember" /> pour appeler la méthode setter d’une propriété.</span><span class="sxs-lookup"><span data-stu-id="a3957-199">This flag is passed to an <see langword="InvokeMember" /> method to invoke a property setter.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Static">
      <MemberSignature Language="C#" Value="Static" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags Static = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.Static" />
      <MemberSignature Language="VB.NET" Value="Static" />
      <MemberSignature Language="C++ CLI" Value="Static" />
      <MemberSignature Language="F#" Value="Static = 8" Usage="System.Reflection.BindingFlags.Static" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-200">Spécifie que les membres statiques doivent être inclus dans la recherche.</span><span class="sxs-lookup"><span data-stu-id="a3957-200">Specifies that static members are to be included in the search.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SuppressChangeType">
      <MemberSignature Language="C#" Value="SuppressChangeType" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags SuppressChangeType = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.SuppressChangeType" />
      <MemberSignature Language="VB.NET" Value="SuppressChangeType" />
      <MemberSignature Language="C++ CLI" Value="SuppressChangeType" />
      <MemberSignature Language="F#" Value="SuppressChangeType = 131072" Usage="System.Reflection.BindingFlags.SuppressChangeType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a3957-201">Non implémenté.</span><span class="sxs-lookup"><span data-stu-id="a3957-201">Not implemented.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>