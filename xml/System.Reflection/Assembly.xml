<Type Name="Assembly" FullName="System.Reflection.Assembly">
  <TypeSignature Language="C#" Value="public abstract class Assembly : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._Assembly, System.Runtime.Serialization.ISerializable, System.Security.IEvidenceFactory" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract serializable beforefieldinit Assembly extends System.Object implements class System.Reflection.ICustomAttributeProvider, class System.Runtime.InteropServices._Assembly, class System.Runtime.Serialization.ISerializable, class System.Security.IEvidenceFactory" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Assembly" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Assembly&#xA;Implements _Assembly, ICustomAttributeProvider, IEvidenceFactory, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Assembly abstract : System::Reflection::ICustomAttributeProvider, System::Runtime::InteropServices::_Assembly, System::Runtime::Serialization::ISerializable, System::Security::IEvidenceFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.ICustomAttributeProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Assembly</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IEvidenceFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Assembly))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1e947-101">Représente un assembly, qui est un bloc de construction réutilisable, avec un numéro de version et autodescriptif d'une application du Common Language Runtime.</span><span class="sxs-lookup"><span data-stu-id="1e947-101">Represents an assembly, which is a reusable, versionable, and self-describing building block of a common language runtime application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-102">Utilisez la <xref:System.Reflection.Assembly> classe pour charger des assemblys, pour Explorer les parties constituant et les métadonnées d’assemblys, pour découvrir les types contenus dans des assemblys et pour créer des instances de ces types.</span><span class="sxs-lookup"><span data-stu-id="1e947-102">Use the <xref:System.Reflection.Assembly> class to load assemblies, to explore the metadata and constituent parts of assemblies, to discover the types contained in assemblies, and to create instances of those types.</span></span>  
  
 <span data-ttu-id="1e947-103">Pour obtenir un tableau de <xref:System.Reflection.Assembly> objets représentant les assemblys actuellement chargés dans un domaine d’application (par exemple, la valeur par défaut domaine d’application d’un projet simple), utilisez le <xref:System.AppDomain.GetAssemblies%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="1e947-103">To get an array of <xref:System.Reflection.Assembly> objects representing the assemblies currently loaded into an application domain (for example, the default application domain of a simple project), use the <xref:System.AppDomain.GetAssemblies%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1e947-104">Pour charger les assemblys dynamiquement, le <xref:System.Reflection.Assembly> classe fournit les méthodes statiques suivantes (`Shared` méthodes en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1e947-104">To load assemblies dynamically, the <xref:System.Reflection.Assembly> class provides the following static methods (`Shared` methods in Visual Basic).</span></span> <span data-ttu-id="1e947-105">Les assemblys sont chargés dans le domaine d’application où l’opération de chargement se produit.</span><span class="sxs-lookup"><span data-stu-id="1e947-105">Assemblies are loaded into the application domain where the load operation occurs.</span></span>  
  
-   <span data-ttu-id="1e947-106">La méthode recommandée pour charger des assemblys consiste à utiliser le <xref:System.AppDomain.Load%2A> (méthode), qui identifie l’assembly à charger par son nom complet (par exemple, « System.Windows.Forms, Version = 2.0.0.0, Culture = neutral, PublicKeyToken = b77a5c561934e089 »).</span><span class="sxs-lookup"><span data-stu-id="1e947-106">The recommended way to load assemblies is to use the <xref:System.AppDomain.Load%2A> method, which identifies the assembly to be loaded by its display name (for example, "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089").</span></span> <span data-ttu-id="1e947-107">La recherche de l’assembly suit les règles décrites dans [méthode de localisation des assemblys par le Runtime](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span><span class="sxs-lookup"><span data-stu-id="1e947-107">The search for the assembly follows the rules described in [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span>  
  
-   <span data-ttu-id="1e947-108">Le <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> et <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> méthodes permettent de charger un assembly pour la réflexion, mais pas pour l’exécution.</span><span class="sxs-lookup"><span data-stu-id="1e947-108">The <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods enable you to load an assembly for reflection, but not for execution.</span></span> <span data-ttu-id="1e947-109">Par exemple, un assembly qui cible une plateforme 64 bits peut être examiné par le code qui s’exécute sur une plateforme 32 bits.</span><span class="sxs-lookup"><span data-stu-id="1e947-109">For example, an assembly that targets a 64-bit platform can be examined by code that is running on a 32-bit platform.</span></span>  
  
-   <span data-ttu-id="1e947-110">Le <xref:System.Reflection.Assembly.LoadFile%2A> et <xref:System.Reflection.Assembly.LoadFrom%2A> méthodes sont fournies pour les rares scénarios dans lesquels un assembly doit être identifié par le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="1e947-110">The <xref:System.Reflection.Assembly.LoadFile%2A> and <xref:System.Reflection.Assembly.LoadFrom%2A> methods are provided for rare scenarios in which an assembly must be identified by path.</span></span>  
  
 <span data-ttu-id="1e947-111">Pour obtenir un <xref:System.Reflection.Assembly> objet pour l’assembly en cours d’exécution, utilisez la <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="1e947-111">To get an <xref:System.Reflection.Assembly> object for the currently executing assembly, use the <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> method.</span></span>  
  
 <span data-ttu-id="1e947-112">De nombreux membres de la <xref:System.Reflection.Assembly> classe fournissent des informations sur un assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-112">Many members of the <xref:System.Reflection.Assembly> class provide information about an assembly.</span></span> <span data-ttu-id="1e947-113">Exemple :</span><span class="sxs-lookup"><span data-stu-id="1e947-113">For example:</span></span>  
  
-   <span data-ttu-id="1e947-114">Le <xref:System.Reflection.Assembly.GetName%2A> méthode retourne un <xref:System.Reflection.AssemblyName> objet qui fournit l’accès aux parties du nom complet d’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-114">The <xref:System.Reflection.Assembly.GetName%2A> method returns an <xref:System.Reflection.AssemblyName> object that provides access to the parts of the assembly display name.</span></span>  
  
-   <span data-ttu-id="1e947-115">Le <xref:System.Reflection.Assembly.GetCustomAttributes%2A> méthode répertorie les attributs appliqués à l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-115">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method lists the attributes applied to the assembly.</span></span>  
  
-   <span data-ttu-id="1e947-116">Le <xref:System.Reflection.Assembly.GetFiles%2A> méthode fournit l’accès aux fichiers dans le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-116">The <xref:System.Reflection.Assembly.GetFiles%2A> method provides access to the files in the assembly manifest.</span></span>  
  
-   <span data-ttu-id="1e947-117">Le <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> méthode fournit les noms des ressources dans le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-117">The <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> method provides the names of the resources in the assembly manifest.</span></span>  
  
 <span data-ttu-id="1e947-118">Le <xref:System.Reflection.Assembly.GetTypes%2A> méthode répertorie tous les types dans l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-118">The <xref:System.Reflection.Assembly.GetTypes%2A> method lists all the types in the assembly.</span></span> <span data-ttu-id="1e947-119">Le <xref:System.Reflection.Assembly.GetExportedTypes%2A> méthode répertorie les types qui sont visibles par les appelants à l’extérieur de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-119">The <xref:System.Reflection.Assembly.GetExportedTypes%2A> method lists the types that are visible to callers outside the assembly.</span></span> <span data-ttu-id="1e947-120">Le <xref:System.Reflection.Assembly.GetType%2A> méthode peut être utilisée pour rechercher un type particulier dans l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-120">The <xref:System.Reflection.Assembly.GetType%2A> method can be used to search for a particular type in the assembly.</span></span> <span data-ttu-id="1e947-121">Le <xref:System.Reflection.Assembly.CreateInstance%2A> méthode peut être utilisée pour rechercher et créer des instances de types dans l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-121">The <xref:System.Reflection.Assembly.CreateInstance%2A> method can be used to search for and create instances of types in the assembly.</span></span>  
  
 <span data-ttu-id="1e947-122">Pour plus d’informations sur les assemblys, consultez la section « Domaines d’Application et assemblys » dans le [domaines d’Application](~/docs/framework/app-domains/application-domains.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="1e947-122">For more information on assemblies, see the "Application Domains and Assemblies" section in the [Application Domains](~/docs/framework/app-domains/application-domains.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-123">L’exemple de code suivant montre comment obtenir l’assembly en cours d’exécution, créez une instance d’un type contenu dans cet assembly et appeler une des méthodes du type avec une liaison tardive.</span><span class="sxs-lookup"><span data-stu-id="1e947-123">The following code example shows how to obtain the currently executing assembly, create an instance of a type contained in that assembly, and invoke one of the type's methods with late binding.</span></span> <span data-ttu-id="1e947-124">Pour cela, l’exemple de code définit une classe nommée `Example`, avec une méthode nommée `SampleMethod`.</span><span class="sxs-lookup"><span data-stu-id="1e947-124">For this purpose, the code example defines a class named `Example`, with a method named `SampleMethod`.</span></span> <span data-ttu-id="1e947-125">Le constructeur de la classe accepte un entier, qui est utilisé pour calculer la valeur de retour de la méthode.</span><span class="sxs-lookup"><span data-stu-id="1e947-125">The constructor of the class accepts an integer, which is used to compute the return value of the method.</span></span>  
  
 <span data-ttu-id="1e947-126">L’exemple de code illustre également l’utilisation de la <xref:System.Reflection.Assembly.GetName%2A> méthode pour obtenir un <xref:System.Reflection.AssemblyName> objet qui peut être utilisé pour analyser le nom complet de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-126">The code example also demonstrates the use of the <xref:System.Reflection.Assembly.GetName%2A> method to obtain an <xref:System.Reflection.AssemblyName> object that can be used to parse the full name of the assembly.</span></span> <span data-ttu-id="1e947-127">L’exemple affiche le numéro de version de l’assembly, le <xref:System.Reflection.Assembly.CodeBase%2A> propriété et le <xref:System.Reflection.Assembly.EntryPoint%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1e947-127">The example displays the version number of the assembly, the <xref:System.Reflection.Assembly.CodeBase%2A> property, and the <xref:System.Reflection.Assembly.EntryPoint%2A> property.</span></span>  
  
 [!code-cpp[AssemblyClass#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyClass/cpp/source.cpp#1)]
 [!code-csharp[AssemblyClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyClass/cs/source.cs#1)]
 [!code-vb[AssemblyClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyClass/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="1e947-128">pour la confiance totale pour les héritiers de.</span><span class="sxs-lookup"><span data-stu-id="1e947-128">for full trust for inheritors.</span></span> <span data-ttu-id="1e947-129">Cette classe ne peut pas être héritée par du code partiellement fiable.</span><span class="sxs-lookup"><span data-stu-id="1e947-129">This class cannot be inherited by partially trusted code.</span></span></permission>
    <threadsafe><span data-ttu-id="1e947-130">Ce type est thread-safe.</span><span class="sxs-lookup"><span data-stu-id="1e947-130">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.AppDomain" />
    <altmember cref="T:System.Reflection.AssemblyName" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Assembly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Assembly();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-131">Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.Assembly" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-131">Initializes a new instance of the <see cref="T:System.Reflection.Assembly" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-132">Ce constructeur est appelé par les classes dérivées lors de la construction de <xref:System.Reflection.Assembly> objets.</span><span class="sxs-lookup"><span data-stu-id="1e947-132">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.Assembly> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public virtual string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.CodeBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-133">Obtient l'emplacement de l'assembly tel qu'il a été spécifié à l'origine, par exemple dans un objet <see cref="T:System.Reflection.AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-133">Gets the location of the assembly as specified originally, for example, in an <see cref="T:System.Reflection.AssemblyName" /> object.</span></span></summary>
        <value><span data-ttu-id="1e947-134">Emplacement de l'assembly tel qu'il a été spécifié à l'origine.</span><span class="sxs-lookup"><span data-stu-id="1e947-134">The location of the assembly as specified originally.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-135">Pour obtenir le chemin d’accès absolu du fichier chargé qui contient le manifeste, utilisez le <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> propriété à la place.</span><span class="sxs-lookup"><span data-stu-id="1e947-135">To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 <span data-ttu-id="1e947-136">Si l’assembly a été chargé comme un tableau d’octets, à l’aide d’une surcharge de la <xref:System.Reflection.Assembly.Load%2A> méthode qui prend un tableau d’octets, cette propriété retourne l’emplacement de l’appelant de la méthode, et non l’emplacement de l’assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-136">If the assembly was loaded as a byte array, using an overload of the <xref:System.Reflection.Assembly.Load%2A> method that takes an array of bytes, this property returns the location of the caller of the method, not the location of the loaded assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-137">L’exemple suivant utilise le <xref:System.Reflection.Assembly.CodeBase%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1e947-137">The following example uses the <xref:System.Reflection.Assembly.CodeBase%2A> property.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/codebase1.cpp#1)]
 [!code-csharp[System.Reflection.Assembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/codebase1.cs#1)]
 [!code-vb[System.Reflection.Assembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/codebase1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-138">Pour accéder au chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="1e947-138">for access to the path.</span></span> <span data-ttu-id="1e947-139">Énumération associée : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="1e947-139">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-140">Recherche un type dans cet assembly et en crée une instance à l'aide de l'activateur système.</span><span class="sxs-lookup"><span data-stu-id="1e947-140">Locates a type from this assembly and creates an instance of it using the system activator.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="1e947-141">Propriété <see cref="P:System.Type.FullName" /> du type à rechercher.</span><span class="sxs-lookup"><span data-stu-id="1e947-141">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <summary><span data-ttu-id="1e947-142">Recherche le type spécifié dans cet assembly et en crée une instance à l'aide de l'activateur système, avec une recherche respectant la casse.</span><span class="sxs-lookup"><span data-stu-id="1e947-142">Locates the specified type from this assembly and creates an instance of it using the system activator, using case-sensitive search.</span></span></summary>
        <returns><span data-ttu-id="1e947-143">Une instance du type spécifié créée avec le constructeur par défaut, ou <see langword="null" /> si <paramref name="typeName" /> est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-143">An instance of the specified type created with the default constructor; or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span> <span data-ttu-id="1e947-144">Le type est résolu à l'aide du binder par défaut, sans spécifier d'attributs de culture ou d'activation, et avec <see cref="T:System.Reflection.BindingFlags" /> défini sur <see langword="Public" /> ou <see langword="Instance" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-144">The type is resolved using the default binder, without specifying culture or activation attributes, and with <see cref="T:System.Reflection.BindingFlags" /> set to <see langword="Public" /> or <see langword="Instance" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-145">Si le runtime ne peut pas trouver `typeName` dans les <xref:System.Reflection.Assembly> de l’instance, elle retourne `null` au lieu de lever une exception.</span><span class="sxs-lookup"><span data-stu-id="1e947-145">If the runtime is unable to find `typeName` in the <xref:System.Reflection.Assembly> instance, it returns `null` instead of throwing an exception.</span></span> <span data-ttu-id="1e947-146">Cela peut se produire si :</span><span class="sxs-lookup"><span data-stu-id="1e947-146">This might happen because:</span></span>  
  
-   <span data-ttu-id="1e947-147">Vous n’avez pas spécifié le nom qualifié complet du type.</span><span class="sxs-lookup"><span data-stu-id="1e947-147">You haven't specified the fully qualified name of the type.</span></span>  
  
-   <span data-ttu-id="1e947-148">Vous avez spécifié le nom de type qualifié complet, mais sa casse ne correspond pas à la casse de du type <xref:System.Type.FullName%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="1e947-148">You've specified the fully qualified type name, but its case doesn’t match the case of the type's <xref:System.Type.FullName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="1e947-149">Pour une comparaison respectant la casse de `typeName` avec le nom du type complet, appelez le <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> de surcharge et spécifiez `true` pour la `ignoreCase` argument.</span><span class="sxs-lookup"><span data-stu-id="1e947-149">For a case-insensitive comparison of `typeName` with the type's full name, call the <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> overload and specify `true` for the `ignoreCase` argument.</span></span>  
  
-   <span data-ttu-id="1e947-150">Le type n’existe pas en cours <xref:System.Reflection.Assembly> instance.</span><span class="sxs-lookup"><span data-stu-id="1e947-150">The type doesn’t exist in the current <xref:System.Reflection.Assembly> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-151">L’exemple suivant définit un `Person` classe et appelle le <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> méthode à instancier.</span><span class="sxs-lookup"><span data-stu-id="1e947-151">The following example defines a `Person` class and calls the <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> method to instantiate it.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/cs/createinstance1.cs#1)]
 [!code-vb[System.Reflection.Assembly.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/vb/createinstance1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e947-152"><paramref name="typeName" /> est une chaîne vide ("") ou une chaîne commençant par un caractère Null.</span><span class="sxs-lookup"><span data-stu-id="1e947-152"><paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span></span>  
  
 <span data-ttu-id="1e947-153">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-153">-or-</span></span>  
  
 <span data-ttu-id="1e947-154">L’assembly actuel a été chargé dans le contexte ReflectionOnly.</span><span class="sxs-lookup"><span data-stu-id="1e947-154">The current assembly was loaded into the reflection-only context.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-155"><paramref name="typeName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-155"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="1e947-156">Aucun constructeur correspondant n’a été trouvé.</span><span class="sxs-lookup"><span data-stu-id="1e947-156">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-157"><paramref name="typeName" /> requiert un assembly dépendant qui est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-157"><paramref name="typeName" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1e947-158"><paramref name="typeName" /> nécessite un assembly dépendant qui a été trouvé, mais qui n’a pas pu être chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-158"><paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
 <span data-ttu-id="1e947-159">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-159">-or-</span></span>  
  
 <span data-ttu-id="1e947-160">L’assembly actuel a été chargé dans le contexte ReflectionOnly, et <paramref name="typeName" /> nécessite un assembly dépendant qui n’a pas été préchargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-160">The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-161"><paramref name="typeName" /> nécessite un assembly dépendant, mais le fichier n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-161"><paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-162">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-162">-or-</span></span>  
  
 <span data-ttu-id="1e947-163"><paramref name="typeName" /> nécessite un assembly dépendant qui a été compilé pour une version du runtime ultérieure à la version actuellement chargée.</span><span class="sxs-lookup"><span data-stu-id="1e947-163"><paramref name="typeName" /> requires a dependent assembly that was compiled for a version of the runtime that is later than the currently loaded version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="1e947-164">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-164">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="1e947-165">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="1e947-165">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="1e947-166">Propriété <see cref="P:System.Type.FullName" /> du type à rechercher.</span><span class="sxs-lookup"><span data-stu-id="1e947-166">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="1e947-167"><see langword="true" /> pour ignorer la casse du nom de type ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-167"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1e947-168">Recherche le type spécifié dans cet assembly et en crée une instance à l'aide de l'activateur système, avec une recherche facultative respectant la casse.</span><span class="sxs-lookup"><span data-stu-id="1e947-168">Locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search.</span></span></summary>
        <returns><span data-ttu-id="1e947-169">Une instance du type spécifié créée avec le constructeur par défaut, ou <see langword="null" /> si <paramref name="typeName" /> est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-169">An instance of the specified type created with the default constructor; or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span> <span data-ttu-id="1e947-170">Le type est résolu à l'aide du binder par défaut, sans spécifier d'attributs de culture ou d'activation, et avec <see cref="T:System.Reflection.BindingFlags" /> défini sur <see langword="Public" /> ou <see langword="Instance" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-170">The type is resolved using the default binder, without specifying culture or activation attributes, and with <see cref="T:System.Reflection.BindingFlags" /> set to <see langword="Public" /> or <see langword="Instance" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-171">Si le runtime ne peut pas trouver `typeName` dans les <xref:System.Reflection.Assembly> de l’instance, elle retourne `null` au lieu de lever une exception.</span><span class="sxs-lookup"><span data-stu-id="1e947-171">If the runtime is unable to find `typeName` in the <xref:System.Reflection.Assembly> instance, it returns `null` instead of throwing an exception.</span></span> <span data-ttu-id="1e947-172">Cela peut se produire si :</span><span class="sxs-lookup"><span data-stu-id="1e947-172">This might happen because:</span></span>  
  
-   <span data-ttu-id="1e947-173">Vous n’avez pas spécifié le nom qualifié complet du type.</span><span class="sxs-lookup"><span data-stu-id="1e947-173">You haven't specified the fully qualified name of the type.</span></span>  
  
-   <span data-ttu-id="1e947-174">Le type n’existe pas en cours <xref:System.Reflection.Assembly> instance.</span><span class="sxs-lookup"><span data-stu-id="1e947-174">The type doesn’t exist in the current <xref:System.Reflection.Assembly> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-175">L’exemple suivant définit un `Person` classe.</span><span class="sxs-lookup"><span data-stu-id="1e947-175">The following example defines a `Person` class.</span></span> <span data-ttu-id="1e947-176">Il appelle ensuite la <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> méthode instancier, mais étant donné que la casse de la `typeName` argument ne correspond pas à celui du type <xref:System.Type.FullName%2A> propriété, la méthode retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="1e947-176">It then calls the <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> method to instantiate it, but because the casing of the `typeName` argument doesn’t match that of the type's <xref:System.Type.FullName%2A> property, the method returns `null`.</span></span> <span data-ttu-id="1e947-177">Lorsque l’exemple passe la même chaîne à la <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> de surcharge et indique que la comparaison doit être pas la casse, le `Person` classe est trouvée et une `Person` objet est instancié avec succès.</span><span class="sxs-lookup"><span data-stu-id="1e947-177">When the example passes the same string to the <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> overload and specifies that the comparison should be case-insensitive, the `Person` class is found, and a `Person` object is successfully instantiated.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/cs/createinstance2.cs#2)]
 [!code-vb[System.Reflection.Assembly.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/vb/createinstance2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e947-178"><paramref name="typeName" /> est une chaîne vide ("") ou une chaîne commençant par un caractère Null.</span><span class="sxs-lookup"><span data-stu-id="1e947-178"><paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span></span>  
  
 <span data-ttu-id="1e947-179">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-179">-or-</span></span>  
  
 <span data-ttu-id="1e947-180">L’assembly actuel a été chargé dans le contexte ReflectionOnly.</span><span class="sxs-lookup"><span data-stu-id="1e947-180">The current assembly was loaded into the reflection-only context.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="1e947-181">Aucun constructeur correspondant n’a été trouvé.</span><span class="sxs-lookup"><span data-stu-id="1e947-181">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-182"><paramref name="typeName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-182"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-183"><paramref name="typeName" /> nécessite un assembly dépendant qui est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-183"><paramref name="typeName" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1e947-184"><paramref name="typeName" /> nécessite un assembly dépendant qui a été trouvé, mais qui n’a pas pu être chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-184"><paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
 <span data-ttu-id="1e947-185">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-185">-or-</span></span>  
  
 <span data-ttu-id="1e947-186">L’assembly actuel a été chargé dans le contexte ReflectionOnly, et <paramref name="typeName" /> nécessite un assembly dépendant qui n’a pas été préchargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-186">The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-187"><paramref name="typeName" /> nécessite un assembly dépendant, mais le fichier n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-187"><paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-188">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-188">-or-</span></span>  
  
 <span data-ttu-id="1e947-189"><paramref name="typeName" /> nécessite un assembly dépendant qui a été compilé pour une version du runtime ultérieure à la version actuellement chargée.</span><span class="sxs-lookup"><span data-stu-id="1e947-189"><paramref name="typeName" /> requires a dependent assembly that was compiled for a version of the runtime that is later than the currently loaded version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="1e947-190">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-190">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="1e947-191">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="1e947-191">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="1e947-192">Propriété <see cref="P:System.Type.FullName" /> du type à rechercher.</span><span class="sxs-lookup"><span data-stu-id="1e947-192">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="1e947-193"><see langword="true" /> pour ignorer la casse du nom de type ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-193"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="1e947-194">Masque de bits qui affecte la manière dont la recherche est effectuée.</span><span class="sxs-lookup"><span data-stu-id="1e947-194">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="1e947-195">La valeur est une combinaison de bits indicateurs de <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-195">The value is a combination of bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <param name="binder"><span data-ttu-id="1e947-196">Objet qui active la liaison, la contrainte de types d'arguments, l'appel des membres et la récupération d'objets <see langword="MemberInfo" /> par le biais de la réflexion.</span><span class="sxs-lookup"><span data-stu-id="1e947-196">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span></span> <span data-ttu-id="1e947-197">Si <c>binder</c> a la valeur <see langword="null" />, le binder par défaut est utilisé.</span><span class="sxs-lookup"><span data-stu-id="1e947-197">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="1e947-198">Tableau qui contient les arguments à passer au constructeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-198">An array that contains the arguments to be passed to the constructor.</span></span> <span data-ttu-id="1e947-199">Ce tableau d'arguments doit posséder les mêmes nombres, ordre et type que les paramètres du constructeur à appeler.</span><span class="sxs-lookup"><span data-stu-id="1e947-199">This array of arguments must match in number, order, and type the parameters of the constructor to be invoked.</span></span> <span data-ttu-id="1e947-200">Si vous souhaitez utiliser le constructeur par défaut, <c>args</c> doit être un tableau vide ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-200">If the default constructor is desired, <c>args</c> must be an empty array or <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="1e947-201">Instance de <see langword="CultureInfo" /> utilisée pour régir la contrainte des types.</span><span class="sxs-lookup"><span data-stu-id="1e947-201">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="1e947-202">Si la valeur est <see langword="null" />, le <see langword="CultureInfo" /> du thread actuel est utilisé.</span><span class="sxs-lookup"><span data-stu-id="1e947-202">If this is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span></span> <span data-ttu-id="1e947-203">(Par exemple, cela est nécessaire pour convertir un <see langword="String" /> représentant 1000 en valeur <see langword="Double" />, car 1000 est représenté de différentes manières selon la culture.)</span><span class="sxs-lookup"><span data-stu-id="1e947-203">(This is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, for example, since 1000 is represented differently by different cultures.)</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="1e947-204">Tableau à un ou plusieurs attributs pouvant participer à l'activation.</span><span class="sxs-lookup"><span data-stu-id="1e947-204">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="1e947-205">En général, tableau contenant un seul objet <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> qui spécifie l'URL nécessaire pour activer un objet distant.</span><span class="sxs-lookup"><span data-stu-id="1e947-205">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  <span data-ttu-id="1e947-206">Ce paramètre est lié aux objets activés par le client.</span><span class="sxs-lookup"><span data-stu-id="1e947-206">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="1e947-207">L'activation des clients est une technologie héritée qui est conservée pour la compatibilité descendante, mais elle n'est pas recommandée pour un nouveau développement.</span><span class="sxs-lookup"><span data-stu-id="1e947-207">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="1e947-208">Les applications distribuées doivent à la place utiliser Windows Communication Foundation.</span><span class="sxs-lookup"><span data-stu-id="1e947-208">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="1e947-209">Recherche le type spécifié dans cet assembly et en crée une instance à l'aide de l'activateur système, avec une recherche facultative respectant la casse et possédant la culture, les arguments, ainsi que les attributs de liaison et d'activation spécifiés.</span><span class="sxs-lookup"><span data-stu-id="1e947-209">Locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search and having the specified culture, arguments, and binding and activation attributes.</span></span></summary>
        <returns><span data-ttu-id="1e947-210">Une instance du type spécifié ou <see langword="null" /> si <paramref name="typeName" /> est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-210">An instance of the specified type, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span> <span data-ttu-id="1e947-211">Les arguments fournis sont utilisés pour résoudre le type, et lier le constructeur utilisé pour créer l'instance.</span><span class="sxs-lookup"><span data-stu-id="1e947-211">The supplied arguments are used to resolve the type, and to bind the constructor that is used to create the instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e947-212"><paramref name="typeName" /> est une chaîne vide ("") ou une chaîne commençant par un caractère null.</span><span class="sxs-lookup"><span data-stu-id="1e947-212"><paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span></span>  
  
 <span data-ttu-id="1e947-213">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-213">-or-</span></span>  
  
 <span data-ttu-id="1e947-214">L’assembly actuel a été chargé dans le contexte ReflectionOnly.</span><span class="sxs-lookup"><span data-stu-id="1e947-214">The current assembly was loaded into the reflection-only context.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-215"><paramref name="typeName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-215"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="1e947-216">Aucun constructeur correspondant n’a été trouvé.</span><span class="sxs-lookup"><span data-stu-id="1e947-216">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1e947-217">Un tableau d’attributs d’activation non vides est passé à un type qui n’hérite pas de <see cref="T:System.MarshalByRefObject" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-217">A non-empty activation attributes array is passed to a type that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-218"><paramref name="typeName" /> requiert un assembly dépendant qui est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-218"><paramref name="typeName" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1e947-219"><paramref name="typeName" /> nécessite un assembly dépendant qui a été trouvé, mais qui n’a pas pu être chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-219"><paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
 <span data-ttu-id="1e947-220">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-220">-or-</span></span>  
  
 <span data-ttu-id="1e947-221">L’assembly actuel a été chargé dans le contexte ReflectionOnly, et <paramref name="typeName" /> nécessite un assembly dépendant qui n’a pas été préchargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-221">The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-222"><paramref name="typeName" /> nécessite un assembly dépendant, mais le fichier n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-222"><paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-223">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-223">-or-</span></span>  
  
 <span data-ttu-id="1e947-224"><paramref name="typeName" /> nécessite un assembly dépendant qui a été compilé pour une version du runtime ultérieure à la version actuellement chargée.</span><span class="sxs-lookup"><span data-stu-id="1e947-224"><paramref name="typeName" /> requires a dependent assembly which that was compiled for a version of the runtime that is later than the currently loaded version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="1e947-225">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-225">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="1e947-226">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="1e947-226">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-227">Pour créer une instance d’un délégué.</span><span class="sxs-lookup"><span data-stu-id="1e947-227">to create an instance of a delegate.</span></span> <span data-ttu-id="1e947-228">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="1e947-228">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateQualifiedName">
      <MemberSignature Language="C#" Value="public static string CreateQualifiedName (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateQualifiedName(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateQualifiedName (assemblyName As String, typeName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CreateQualifiedName(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="1e947-229">Nom complet d'un assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-229">The display name of an assembly.</span></span></param>
        <param name="typeName"><span data-ttu-id="1e947-230">Nom complet d'un type.</span><span class="sxs-lookup"><span data-stu-id="1e947-230">The full name of a type.</span></span></param>
        <summary><span data-ttu-id="1e947-231">Crée le nom d'un type qualifié par le nom complet de son assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-231">Creates the name of a type qualified by the display name of its assembly.</span></span></summary>
        <returns><span data-ttu-id="1e947-232">Nom complet du type complet par le nom d'affichage de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-232">The full name of the type qualified by the display name of the assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-233">Le format de la chaîne retournée est :</span><span class="sxs-lookup"><span data-stu-id="1e947-233">The format of the returned string is:</span></span>  
  
 <span data-ttu-id="1e947-234">\<FullTypeName>, \<AssemblyDisplayName></span><span class="sxs-lookup"><span data-stu-id="1e947-234">\<FullTypeName>, \<AssemblyDisplayName></span></span>  
  
 <span data-ttu-id="1e947-235">Consultez <xref:System.Reflection.AssemblyName> pour obtenir une description du format du nom d’affichage d’un assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-235">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
 <span data-ttu-id="1e947-236">Pour prendre en compte les modifications dans les versions du common language runtime, utilisez cette méthode, plutôt que de construire le nom qualifié vous-même.</span><span class="sxs-lookup"><span data-stu-id="1e947-236">To accommodate changes in versions of the common language runtime, use this method rather than constructing the qualified name yourself.</span></span>  <span data-ttu-id="1e947-237">Pour plus d’informations sur les noms d’assemblys qualifiés, consultez <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1e947-237">For information about qualified assembly names, see <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt; CustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.CustomAttributeData&gt; CustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.CustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CustomAttributes As IEnumerable(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ CustomAttributes { System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-238">Obtient une collection qui contient les attributs personnalisés de cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-238">Gets a collection that contains this assembly's custom attributes.</span></span></summary>
        <value><span data-ttu-id="1e947-239">Collection qui contient les attributs personnalisés de cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-239">A collection that contains this assembly's custom attributes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefinedTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt; DefinedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.TypeInfo&gt; DefinedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.DefinedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefinedTypes As IEnumerable(Of TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ DefinedTypes { System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-240">Obtient une collection des types définis dans cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-240">Gets a collection of the types defined in this assembly.</span></span></summary>
        <value><span data-ttu-id="1e947-241">Collection des types définis dans cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-241">A collection of the types defined in this assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-242">Le <xref:System.Reflection.Assembly.DefinedTypes%2A> propriété est comparable à la <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> (méthode), à ceci près que le <xref:System.Reflection.Assembly.DefinedTypes%2A> propriété retourne une collection de <xref:System.Reflection.TypeInfo> objets et le <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> méthode retourne un tableau de <xref:System.Type> objets.</span><span class="sxs-lookup"><span data-stu-id="1e947-242">The <xref:System.Reflection.Assembly.DefinedTypes%2A> property is comparable to the <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> method, except that the <xref:System.Reflection.Assembly.DefinedTypes%2A> property returns a collection of <xref:System.Reflection.TypeInfo> objects, and the <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> method returns an array of <xref:System.Type> objects.</span></span>  
  
 <span data-ttu-id="1e947-243">Le tableau retourné inclut des types imbriqués.</span><span class="sxs-lookup"><span data-stu-id="1e947-243">The returned array includes nested types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetTypes" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.EntryPoint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-244">Obtient le point d'entrée de cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-244">Gets the entry point of this assembly.</span></span></summary>
        <value><span data-ttu-id="1e947-245">Objet qui représente le point d'entrée de cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-245">An object that represents the entry point of this assembly.</span></span> <span data-ttu-id="1e947-246">Si aucun point d'entrée n'est détecté (par exemple, si l'assembly est une DLL), <see langword="null" /> est retourné.</span><span class="sxs-lookup"><span data-stu-id="1e947-246">If no entry point is found (for example, the assembly is a DLL), <see langword="null" /> is returned.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="1e947-247">Objet à comparer avec cette instance.</span><span class="sxs-lookup"><span data-stu-id="1e947-247">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="1e947-248">Détermine si cet assembly et l'objet spécifié sont égaux.</span><span class="sxs-lookup"><span data-stu-id="1e947-248">Determines whether this assembly and the specified object are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="1e947-249"><see langword="true" /> si <paramref name="o" /> est égal à cette instance ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-249"><see langword="true" /> if <paramref name="o" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-250">Le <xref:System.Reflection.Assembly.Equals%2A> méthode effectue un test d’égalité de référence déterminer si l’instance actuelle et `o` sont égales.</span><span class="sxs-lookup"><span data-stu-id="1e947-250">The <xref:System.Reflection.Assembly.Equals%2A> method performs a test for reference equality to determine whether the current instance and `o` are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public virtual string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.EscapedCodeBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-251">Obtient l'URI, y compris les caractères d'espacement, qui représente le code base.</span><span class="sxs-lookup"><span data-stu-id="1e947-251">Gets the URI, including escape characters, that represents the codebase.</span></span></summary>
        <value><span data-ttu-id="1e947-252">Un URI avec des caractères d'espacement.</span><span class="sxs-lookup"><span data-stu-id="1e947-252">A URI with escape characters.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-253">Pour accéder au chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="1e947-253">for access to the path.</span></span> <span data-ttu-id="1e947-254">Énumération associée : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="1e947-254">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.Evidence</InterfaceMember>
        <InterfaceMember>P:System.Security.IEvidenceFactory.Evidence</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-255">Obtient la preuve pour cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-255">Gets the evidence for this assembly.</span></span></summary>
        <value><span data-ttu-id="1e947-256">Preuve pour cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-256">The evidence for this assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-257">La preuve est le jeu d'informations qui alimente les décisions de stratégie de sécurité, telles que les autorisations qui peuvent être accordées au code.</span><span class="sxs-lookup"><span data-stu-id="1e947-257">Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-258">pour charger un assembly avec la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-258">to load an assembly with evidence.</span></span> <span data-ttu-id="1e947-259">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1e947-259">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="ExportedTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; ExportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; ExportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ExportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ ExportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-260">Obtient une collection des types publics définis dans cet assembly qui sont visibles à l’extérieur de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-260">Gets a collection of the public types defined in this assembly that are visible outside the assembly.</span></span></summary>
        <value><span data-ttu-id="1e947-261">Collection des types publics définis dans cet assembly qui sont visibles à l’extérieur de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-261">A collection of the public types defined in this assembly that are visible outside the assembly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public virtual string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.FullName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-262">Obtient le nom complet de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-262">Gets the display name of the assembly.</span></span></summary>
        <value><span data-ttu-id="1e947-263">Nom complet de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-263">The display name of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-264">Consultez <xref:System.Reflection.AssemblyName> pour obtenir une description du format du nom d’affichage d’un assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-264">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-265">L’écriture de votre propre code pour analyser les noms d’affichage n’est pas recommandée.</span><span class="sxs-lookup"><span data-stu-id="1e947-265">Writing your own code to parse display names is not recommended.</span></span> <span data-ttu-id="1e947-266">Au lieu de cela, passez le nom complet à la <xref:System.Reflection.AssemblyName.%23ctor%2A> constructeur, qui analyse et remplit les champs appropriés du nouveau <xref:System.Reflection.AssemblyName>.</span><span class="sxs-lookup"><span data-stu-id="1e947-266">Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.</span></span>  
  
 <span data-ttu-id="1e947-267">Dans le .NET Framework version 2.0, architecture de processeur est ajoutée à l’identité de l’assembly et peut être spécifié en tant que partie de chaînes de nom d’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-267">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="1e947-268">Toutefois, il n’est pas inclus dans la chaîne retournée par la <xref:System.Reflection.Assembly.FullName%2A> propriété, pour des raisons de compatibilité.</span><span class="sxs-lookup"><span data-stu-id="1e947-268">However, it is not included in the string returned by the <xref:System.Reflection.Assembly.FullName%2A> property, for compatibility reasons.</span></span> <span data-ttu-id="1e947-269">Consultez <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1e947-269">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-270">L’exemple suivant récupère le nom complet de l’assembly en cours d’exécution et le nom complet de l’assembly qui contient le <xref:System.Int32> type (`int` en c#, `Integer` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1e947-270">The following example retrieves the display name of the currently executing assembly, and the display name of the assembly that contains the <xref:System.Int32> type (`int` in C#, `Integer` in Visual Basic).</span></span>  
  
 [!code-cpp[Assembly.FullName#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.FullName/CPP/Example.cpp#1)]
 [!code-csharp[Assembly.FullName#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.FullName/CS/Example.cs#1)]
 [!code-vb[Assembly.FullName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.FullName/VB/Example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetAssembly (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetAssembly(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetAssembly(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetAssembly(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1e947-271">Objet représentant un type de l’assembly retourné.</span><span class="sxs-lookup"><span data-stu-id="1e947-271">An object representing a type in the assembly that will be returned.</span></span></param>
        <summary><span data-ttu-id="1e947-272">Obtient l’assembly actuellement chargé dans lequel le type spécifié est défini.</span><span class="sxs-lookup"><span data-stu-id="1e947-272">Gets the currently loaded assembly in which the specified type is defined.</span></span></summary>
        <returns><span data-ttu-id="1e947-273">Assembly dans lequel le type spécifié est défini.</span><span class="sxs-lookup"><span data-stu-id="1e947-273">The assembly in which the specified type is defined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-274">Appel de cette méthode est équivalente à la récupération de la valeur de la <xref:System.Type.Assembly?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="1e947-274">Calling this method is equivalent to retrieving the value of the  <xref:System.Type.Assembly?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="1e947-275">Toutefois, le <xref:System.Type.Assembly?displayProperty=nameWithType> propriété offre généralement de meilleures performances.</span><span class="sxs-lookup"><span data-stu-id="1e947-275">However, the <xref:System.Type.Assembly?displayProperty=nameWithType> property typically offers superior performance.</span></span>  
  
 <span data-ttu-id="1e947-276">Afin d’appeler cette méthode, vous devez avoir un <xref:System.Type> objet, ce qui signifie que l’assembly dans lequel la classe est définie doit déjà être chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-276">In order to call this method, you must have a <xref:System.Type> object, which means that the assembly in which the class is defined must already be loaded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-277">L’exemple suivant récupère l’assembly qui contient le <xref:System.Int32> de type et affiche son nom et chaque emplacement.</span><span class="sxs-lookup"><span data-stu-id="1e947-277">The following example retrieves the assembly that contains the <xref:System.Int32> type and displays its name and file location.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/GetAssembly1.cpp#12)]
 [!code-csharp[System.Reflection.Assembly#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/GetAssembly1.cs#12)]
 [!code-vb[System.Reflection.Assembly#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/GetAssembly1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-278"><paramref name="type" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-278"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="1e947-279">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-279">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="1e947-280">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="1e947-280">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCallingAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetCallingAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetCallingAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCallingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCallingAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetCallingAssembly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-281">Retourne le <see cref="T:System.Reflection.Assembly" /> de la méthode ayant appelé la méthode en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="1e947-281">Returns the <see cref="T:System.Reflection.Assembly" /> of the method that invoked the currently executing method.</span></span></summary>
        <returns><span data-ttu-id="1e947-282">Objet <see langword="Assembly" /> de la méthode ayant appelé la méthode en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="1e947-282">The <see langword="Assembly" /> object of the method that invoked the currently executing method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-283">Si la méthode qui appelle le <xref:System.Reflection.Assembly.GetCallingAssembly%2A> méthode est développée inline par le compilateur juste-à-temps (JIT), ou si son appelant est développé inline, l’assembly qui est retourné par <xref:System.Reflection.Assembly.GetCallingAssembly%2A> peut différer de façon inattendue.</span><span class="sxs-lookup"><span data-stu-id="1e947-283">If the method that calls the <xref:System.Reflection.Assembly.GetCallingAssembly%2A> method is expanded inline by the just-in-time (JIT) compiler, or if its caller is expanded inline, the assembly that is returned by <xref:System.Reflection.Assembly.GetCallingAssembly%2A> may differ unexpectedly.</span></span> <span data-ttu-id="1e947-284">Par exemple, considérez les méthodes et les assemblys suivants :</span><span class="sxs-lookup"><span data-stu-id="1e947-284">For example, consider the following methods and assemblies:</span></span>  
  
-   <span data-ttu-id="1e947-285">Méthode `M1` dans l’assembly `A1` appelle <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="1e947-285">Method `M1` in assembly `A1` calls <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span></span>  
  
-   <span data-ttu-id="1e947-286">Méthode `M2` dans l’assembly `A2` appelle `M1`.</span><span class="sxs-lookup"><span data-stu-id="1e947-286">Method `M2` in assembly `A2` calls `M1`.</span></span>  
  
-   <span data-ttu-id="1e947-287">Méthode `M3` dans l’assembly `A3` appelle `M2`.</span><span class="sxs-lookup"><span data-stu-id="1e947-287">Method `M3` in assembly `A3` calls `M2`.</span></span>  
  
 <span data-ttu-id="1e947-288">Lorsque `M1` n’est pas mise inline, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> retourne `A2`.</span><span class="sxs-lookup"><span data-stu-id="1e947-288">When `M1` is not inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A2`.</span></span> <span data-ttu-id="1e947-289">Lorsque `M1` est inline, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> retourne `A3`.</span><span class="sxs-lookup"><span data-stu-id="1e947-289">When `M1` is inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A3`.</span></span> <span data-ttu-id="1e947-290">De même, lorsque `M2` n’est pas mise inline, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> retourne `A2`.</span><span class="sxs-lookup"><span data-stu-id="1e947-290">Similarly, when `M2` is not inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A2`.</span></span> <span data-ttu-id="1e947-291">Lorsque `M2` est inline, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> retourne `A3`.</span><span class="sxs-lookup"><span data-stu-id="1e947-291">When `M2` is inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A3`.</span></span>  
  
 <span data-ttu-id="1e947-292">Cela se produit également lorsque `M1` s’exécute comme un appel tail de `M2`, ou lorsque `M2` s’exécute comme un appel tail de `M3`.</span><span class="sxs-lookup"><span data-stu-id="1e947-292">This effect also occurs when `M1` executes as a tail call from `M2`, or when `M2` executes as a tail call from `M3`.</span></span> <span data-ttu-id="1e947-293">Vous pouvez empêcher le compilateur JIT d’incorporation (inlining) la méthode qui appelle <xref:System.Reflection.Assembly.GetCallingAssembly%2A>, en appliquant le <xref:System.Runtime.CompilerServices.MethodImplAttribute> attribut avec le <xref:System.Runtime.CompilerServices.MethodImplOptions.NoInlining?displayProperty=nameWithType> indicateur, mais il n’existe aucun mécanisme similaire pour empêcher les appels tail.</span><span class="sxs-lookup"><span data-stu-id="1e947-293">You can prevent the JIT compiler from inlining the method that calls <xref:System.Reflection.Assembly.GetCallingAssembly%2A>, by applying the <xref:System.Runtime.CompilerServices.MethodImplAttribute> attribute with the <xref:System.Runtime.CompilerServices.MethodImplOptions.NoInlining?displayProperty=nameWithType> flag, but there is no similar mechanism for preventing tail calls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-294">L’exemple suivant obtient l’assembly appelant de la méthode actuelle.</span><span class="sxs-lookup"><span data-stu-id="1e947-294">The following example gets the calling assembly of the current method.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/getcallingassembly1.cpp#4)]
 [!code-csharp[System.Reflection.Assembly#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/getcallingassembly1.cs#4)]
 [!code-vb[System.Reflection.Assembly#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/getcallingassembly1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-295">Obtient les attributs personnalisés pour cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-295">Gets the custom attributes for this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="1e947-296">Cet argument est ignoré pour les objets de type <see cref="T:System.Reflection.Assembly" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-296">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span></span></param>
        <summary><span data-ttu-id="1e947-297">Obtient tous les attributs personnalisés pour cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-297">Gets all the custom attributes for this assembly.</span></span></summary>
        <returns><span data-ttu-id="1e947-298">Tableau qui contient les attributs personnalisés pour cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-298">An array that contains the custom attributes for this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-299">Cette méthode implémente correspondant <xref:System.Reflection.ICustomAttributeProvider> méthode d’interface.</span><span class="sxs-lookup"><span data-stu-id="1e947-299">This method implements the corresponding <xref:System.Reflection.ICustomAttributeProvider> interface method.</span></span> <span data-ttu-id="1e947-300">Par conséquent, le `inherit` paramètre doit être spécifié même s’il est ignoré.</span><span class="sxs-lookup"><span data-stu-id="1e947-300">Therefore, the `inherit` parameter must be specified even though it is ignored.</span></span>  
  
 <span data-ttu-id="1e947-301">Un attribut pseudo-aléatoire indique les bits des métadonnées de base qui doit être définie lorsque l’attribut est présent.</span><span class="sxs-lookup"><span data-stu-id="1e947-301">A pseudo-attribute indicates bits of the core metadata that must be set when the attribute is present.</span></span> <span data-ttu-id="1e947-302">Contrairement à un attribut personnalisé qui étend les métadonnées d’un type et est enregistré avec le type, un attribut pseudo-aléatoire modifie les métadonnées pour le type et qu’elle est ensuite ignoré.</span><span class="sxs-lookup"><span data-stu-id="1e947-302">Unlike a custom attribute that extends the metadata for a type and is saved along with the type, a pseudo-attribute modifies the metadata for the type and then is discarded.</span></span> <span data-ttu-id="1e947-303">Certains bits obtenus ne sont pas accessibles à l’aide des API de réflexion existantes.</span><span class="sxs-lookup"><span data-stu-id="1e947-303">Some of the resulting bits cannot be accessed using existing reflection APIs.</span></span>  
  
 <span data-ttu-id="1e947-304">Le tableau suivant résume les différents attributs de pseudo et les accesseurs pour les bits qui sont disponibles dans la réflexion.</span><span class="sxs-lookup"><span data-stu-id="1e947-304">The following table summarizes the different pseudo-attributes and the accessors for the bits that are available in reflection.</span></span>  
  
|<span data-ttu-id="1e947-305">Pseudo-Attribute</span><span class="sxs-lookup"><span data-stu-id="1e947-305">Pseudo-Attribute</span></span>|<span data-ttu-id="1e947-306">Bits de métadonnées</span><span class="sxs-lookup"><span data-stu-id="1e947-306">Metadata Bits</span></span>|<span data-ttu-id="1e947-307">Accesseur de réflexion</span><span class="sxs-lookup"><span data-stu-id="1e947-307">Reflection Accessor</span></span>|  
|-----------------------|-------------------|-------------------------|  
|<span data-ttu-id="1e947-308">DllImportAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-308">DllImportAttribute</span></span>|<span data-ttu-id="1e947-309">CorPInvokeMap</span><span class="sxs-lookup"><span data-stu-id="1e947-309">CorPInvokeMap</span></span><br /><br /> <span data-ttu-id="1e947-310">Nom de la DLL</span><span class="sxs-lookup"><span data-stu-id="1e947-310">DLL name</span></span>|<span data-ttu-id="1e947-311">Aucun accesseur pour PInvokeMap pour les attributs de méthode méthode/globale ordinaires.</span><span class="sxs-lookup"><span data-stu-id="1e947-311">No accessor for PInvokeMap for ordinary method/global method attributes.</span></span><br /><br /> <span data-ttu-id="1e947-312">Aucun accesseur pour le nom de la DLL.</span><span class="sxs-lookup"><span data-stu-id="1e947-312">No accessor for DLL name.</span></span>|  
|<span data-ttu-id="1e947-313">GuidAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-313">GuidAttribute</span></span>|<span data-ttu-id="1e947-314">Stocké comme un attribut personnalisé réel.</span><span class="sxs-lookup"><span data-stu-id="1e947-314">Stored as a real custom attribute.</span></span>|<span data-ttu-id="1e947-315">Accessible en tant qu’un attribut personnalisé réel.</span><span class="sxs-lookup"><span data-stu-id="1e947-315">Accessed as a real custom attribute.</span></span>|  
|<span data-ttu-id="1e947-316">ComImportAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-316">ComImportAttribute</span></span>|<span data-ttu-id="1e947-317">CorTypeAttr.tdImport</span><span class="sxs-lookup"><span data-stu-id="1e947-317">CorTypeAttr.tdImport</span></span>|<span data-ttu-id="1e947-318">Type.Attributes.Import</span><span class="sxs-lookup"><span data-stu-id="1e947-318">Type.Attributes.Import</span></span>|  
|<span data-ttu-id="1e947-319">SerializableAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-319">SerializableAttribute</span></span>|<span data-ttu-id="1e947-320">CorTypeAttr.tdSerializable</span><span class="sxs-lookup"><span data-stu-id="1e947-320">CorTypeAttr.tdSerializable</span></span>|<span data-ttu-id="1e947-321">Type.Attributes.Serializable</span><span class="sxs-lookup"><span data-stu-id="1e947-321">Type.Attributes.Serializable</span></span>|  
|<span data-ttu-id="1e947-322">NonSerializedAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-322">NonSerializedAttribute</span></span>|<span data-ttu-id="1e947-323">CorFieldAttr.fdNotSerialized</span><span class="sxs-lookup"><span data-stu-id="1e947-323">CorFieldAttr.fdNotSerialized</span></span>|<span data-ttu-id="1e947-324">FieldInfo.Attributes.NotSerialized</span><span class="sxs-lookup"><span data-stu-id="1e947-324">FieldInfo.Attributes.NotSerialized</span></span>|  
|<span data-ttu-id="1e947-325">MethodImplAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-325">MethodImplAttribute</span></span>|<span data-ttu-id="1e947-326">CorMethodImpl</span><span class="sxs-lookup"><span data-stu-id="1e947-326">CorMethodImpl</span></span>|<span data-ttu-id="1e947-327">MethodInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="1e947-327">MethodInfo.GetMethodImplementationFlags()</span></span><br /><br /> <span data-ttu-id="1e947-328">ConstructorInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="1e947-328">ConstructorInfo.GetMethodImplementationFlags()</span></span>|  
|<span data-ttu-id="1e947-329">MarshalAsAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-329">MarshalAsAttribute</span></span>|<span data-ttu-id="1e947-330">Divers bits.</span><span class="sxs-lookup"><span data-stu-id="1e947-330">Various bits.</span></span>|<span data-ttu-id="1e947-331">Pas d’accesseur.</span><span class="sxs-lookup"><span data-stu-id="1e947-331">No accessor.</span></span>|  
|<span data-ttu-id="1e947-332">PreserveSigAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-332">PreserveSigAttribute</span></span>|<span data-ttu-id="1e947-333">CorMethodImpl.miOLE</span><span class="sxs-lookup"><span data-stu-id="1e947-333">CorMethodImpl.miOLE</span></span>|<span data-ttu-id="1e947-334">MethodInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="1e947-334">MethodInfo.GetMethodImplementationFlags().OLE</span></span><br /><br /> <span data-ttu-id="1e947-335">ConstructorInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="1e947-335">ConstructorInfo.GetMethodImplementationFlags().OLE</span></span>|  
|<span data-ttu-id="1e947-336">InAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-336">InAttribute</span></span>|<span data-ttu-id="1e947-337">CorParamAttr.pdIn</span><span class="sxs-lookup"><span data-stu-id="1e947-337">CorParamAttr.pdIn</span></span>|<span data-ttu-id="1e947-338">ParameterInfo.Attributes.In</span><span class="sxs-lookup"><span data-stu-id="1e947-338">ParameterInfo.Attributes.In</span></span>|  
|<span data-ttu-id="1e947-339">OutAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-339">OutAttribute</span></span>|<span data-ttu-id="1e947-340">CorParamAttr.pdOut</span><span class="sxs-lookup"><span data-stu-id="1e947-340">CorParamAttr.pdOut</span></span>|<span data-ttu-id="1e947-341">ParameterInfo.Attributes.Out</span><span class="sxs-lookup"><span data-stu-id="1e947-341">ParameterInfo.Attributes.Out</span></span>|  
|<span data-ttu-id="1e947-342">StructLayoutAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-342">StructLayoutAttribute</span></span>|<span data-ttu-id="1e947-343">CorTypeAttr.tdLayoutSequential</span><span class="sxs-lookup"><span data-stu-id="1e947-343">CorTypeAttr.tdLayoutSequential</span></span><br /><br /> <span data-ttu-id="1e947-344">CorTypeAttr.tdExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="1e947-344">CorTypeAttr.tdExplicitLayout</span></span><br /><br /> <span data-ttu-id="1e947-345">CorTypeAttr.tdAnsiClass</span><span class="sxs-lookup"><span data-stu-id="1e947-345">CorTypeAttr.tdAnsiClass</span></span><br /><br /> <span data-ttu-id="1e947-346">CorTypeAttr.tdUnicodeClass</span><span class="sxs-lookup"><span data-stu-id="1e947-346">CorTypeAttr.tdUnicodeClass</span></span><br /><br /> <span data-ttu-id="1e947-347">CorTypeAttr.tdAutoClass</span><span class="sxs-lookup"><span data-stu-id="1e947-347">CorTypeAttr.tdAutoClass</span></span><br /><br /> <span data-ttu-id="1e947-348">Compression de la classe.</span><span class="sxs-lookup"><span data-stu-id="1e947-348">Class packing.</span></span>|<span data-ttu-id="1e947-349">Type.Attributes.LayoutSequential</span><span class="sxs-lookup"><span data-stu-id="1e947-349">Type.Attributes.LayoutSequential</span></span><br /><br /> <span data-ttu-id="1e947-350">Type.Attributes.ExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="1e947-350">Type.Attributes.ExplicitLayout</span></span><br /><br /> <span data-ttu-id="1e947-351">Type.Attributes.AnsiClass</span><span class="sxs-lookup"><span data-stu-id="1e947-351">Type.Attributes.AnsiClass</span></span><br /><br /> <span data-ttu-id="1e947-352">Type.Attributes.UnicodeClass</span><span class="sxs-lookup"><span data-stu-id="1e947-352">Type.Attributes.UnicodeClass</span></span><br /><br /> <span data-ttu-id="1e947-353">Type.Attributes.AutoClass</span><span class="sxs-lookup"><span data-stu-id="1e947-353">Type.Attributes.AutoClass</span></span><br /><br /> <span data-ttu-id="1e947-354">Pas d’accesseur.</span><span class="sxs-lookup"><span data-stu-id="1e947-354">No accessor.</span></span>|  
|<span data-ttu-id="1e947-355">FieldOffsetAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-355">FieldOffsetAttribute</span></span>|<span data-ttu-id="1e947-356">Offset de champ.</span><span class="sxs-lookup"><span data-stu-id="1e947-356">Field offset.</span></span>|<span data-ttu-id="1e947-357">Pas d’accesseur.</span><span class="sxs-lookup"><span data-stu-id="1e947-357">No accessor.</span></span>|  
|<span data-ttu-id="1e947-358">AssemblyLoadAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-358">AssemblyLoadAttribute</span></span>|<span data-ttu-id="1e947-359">CorAssemblyFlags</span><span class="sxs-lookup"><span data-stu-id="1e947-359">CorAssemblyFlags</span></span>|<span data-ttu-id="1e947-360">Aucun accesseur ou l’énumérateur.</span><span class="sxs-lookup"><span data-stu-id="1e947-360">No accessor or enumerator.</span></span>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="1e947-361">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-361">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="1e947-362">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="1e947-362">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="1e947-363">Type pour lequel les attributs personnalisés doivent être retournés.</span><span class="sxs-lookup"><span data-stu-id="1e947-363">The type for which the custom attributes are to be returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="1e947-364">Cet argument est ignoré pour les objets de type <see cref="T:System.Reflection.Assembly" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-364">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span></span></param>
        <summary><span data-ttu-id="1e947-365">Obtient les attributs personnalisés pour cet assembly, tels qu'ils sont spécifiés par le type.</span><span class="sxs-lookup"><span data-stu-id="1e947-365">Gets the custom attributes for this assembly as specified by type.</span></span></summary>
        <returns><span data-ttu-id="1e947-366">Tableau qui contient les attributs personnalisés pour cet assembly, tels qu'ils sont spécifiés par <paramref name="attributeType" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-366">An array that contains the custom attributes for this assembly as specified by <paramref name="attributeType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-367">Cette méthode implémente correspondant <xref:System.Reflection.ICustomAttributeProvider> méthode d’interface.</span><span class="sxs-lookup"><span data-stu-id="1e947-367">This method implements the corresponding <xref:System.Reflection.ICustomAttributeProvider> interface method.</span></span> <span data-ttu-id="1e947-368">Par conséquent, le `inherit` paramètre doit être spécifié même s’il est ignoré.</span><span class="sxs-lookup"><span data-stu-id="1e947-368">Therefore, the `inherit` parameter must be specified even though it is ignored.</span></span>  
  
 <span data-ttu-id="1e947-369">Un attribut pseudo-aléatoire indique les bits des métadonnées de base qui doit être définie lorsque l’attribut est présent.</span><span class="sxs-lookup"><span data-stu-id="1e947-369">A pseudo-attribute indicates bits of the core metadata that must be set when the attribute is present.</span></span> <span data-ttu-id="1e947-370">Contrairement à un attribut personnalisé qui étend les métadonnées d’un type et est enregistré avec le type, un attribut pseudo-aléatoire modifie les métadonnées pour le type et qu’elle est ensuite ignoré.</span><span class="sxs-lookup"><span data-stu-id="1e947-370">Unlike a custom attribute that extends the metadata for a type and is saved along with the type, a pseudo-attribute modifies the metadata for the type and then is discarded.</span></span> <span data-ttu-id="1e947-371">Certains bits obtenus ne sont pas accessibles à l’aide des API de réflexion existantes.</span><span class="sxs-lookup"><span data-stu-id="1e947-371">Some of the resulting bits cannot be accessed using existing reflection APIs.</span></span>  
  
 <span data-ttu-id="1e947-372">Le tableau suivant résume les différents attributs de pseudo et les accesseurs pour les bits qui sont disponibles dans la réflexion.</span><span class="sxs-lookup"><span data-stu-id="1e947-372">The following table summarizes the different pseudo-attributes and the accessors for the bits that are available in reflection.</span></span>  
  
|<span data-ttu-id="1e947-373">Pseudo-Attribute</span><span class="sxs-lookup"><span data-stu-id="1e947-373">Pseudo-Attribute</span></span>|<span data-ttu-id="1e947-374">Bits de métadonnées</span><span class="sxs-lookup"><span data-stu-id="1e947-374">Metadata Bits</span></span>|<span data-ttu-id="1e947-375">Accesseur de réflexion</span><span class="sxs-lookup"><span data-stu-id="1e947-375">Reflection Accessor</span></span>|  
|-----------------------|-------------------|-------------------------|  
|<span data-ttu-id="1e947-376">DllImportAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-376">DllImportAttribute</span></span>|<span data-ttu-id="1e947-377">CorPInvokeMap</span><span class="sxs-lookup"><span data-stu-id="1e947-377">CorPInvokeMap</span></span><br /><br /> <span data-ttu-id="1e947-378">Nom de la DLL</span><span class="sxs-lookup"><span data-stu-id="1e947-378">DLL name</span></span>|<span data-ttu-id="1e947-379">Aucun accesseur pour PInvokeMap pour les attributs de méthode méthode/globale ordinaires.</span><span class="sxs-lookup"><span data-stu-id="1e947-379">No accessor for PInvokeMap for ordinary method/global method attributes.</span></span><br /><br /> <span data-ttu-id="1e947-380">Aucun accesseur pour le nom de la DLL.</span><span class="sxs-lookup"><span data-stu-id="1e947-380">No accessor for DLL name.</span></span>|  
|<span data-ttu-id="1e947-381">GuidAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-381">GuidAttribute</span></span>|<span data-ttu-id="1e947-382">Stocké comme un attribut personnalisé réel.</span><span class="sxs-lookup"><span data-stu-id="1e947-382">Stored as a real custom attribute.</span></span>|<span data-ttu-id="1e947-383">Accessible en tant qu’un attribut personnalisé réel.</span><span class="sxs-lookup"><span data-stu-id="1e947-383">Accessed as a real custom attribute.</span></span>|  
|<span data-ttu-id="1e947-384">ComImportAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-384">ComImportAttribute</span></span>|<span data-ttu-id="1e947-385">CorTypeAttr.tdImport</span><span class="sxs-lookup"><span data-stu-id="1e947-385">CorTypeAttr.tdImport</span></span>|<span data-ttu-id="1e947-386">Type.Attributes.Import</span><span class="sxs-lookup"><span data-stu-id="1e947-386">Type.Attributes.Import</span></span>|  
|<span data-ttu-id="1e947-387">SerializableAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-387">SerializableAttribute</span></span>|<span data-ttu-id="1e947-388">CorTypeAttr.tdSerializable</span><span class="sxs-lookup"><span data-stu-id="1e947-388">CorTypeAttr.tdSerializable</span></span>|<span data-ttu-id="1e947-389">Type.Attributes.Serializable</span><span class="sxs-lookup"><span data-stu-id="1e947-389">Type.Attributes.Serializable</span></span>|  
|<span data-ttu-id="1e947-390">NonSerializedAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-390">NonSerializedAttribute</span></span>|<span data-ttu-id="1e947-391">CorFieldAttr.fdNotSerialized</span><span class="sxs-lookup"><span data-stu-id="1e947-391">CorFieldAttr.fdNotSerialized</span></span>|<span data-ttu-id="1e947-392">FieldInfo.Attributes.NotSerialized</span><span class="sxs-lookup"><span data-stu-id="1e947-392">FieldInfo.Attributes.NotSerialized</span></span>|  
|<span data-ttu-id="1e947-393">MethodImplAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-393">MethodImplAttribute</span></span>|<span data-ttu-id="1e947-394">CorMethodImpl</span><span class="sxs-lookup"><span data-stu-id="1e947-394">CorMethodImpl</span></span>|<span data-ttu-id="1e947-395">MethodInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="1e947-395">MethodInfo.GetMethodImplementationFlags()</span></span><br /><br /> <span data-ttu-id="1e947-396">ConstructorInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="1e947-396">ConstructorInfo.GetMethodImplementationFlags()</span></span>|  
|<span data-ttu-id="1e947-397">MarshalAsAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-397">MarshalAsAttribute</span></span>|<span data-ttu-id="1e947-398">Divers bits.</span><span class="sxs-lookup"><span data-stu-id="1e947-398">Various bits.</span></span>|<span data-ttu-id="1e947-399">Pas d’accesseur.</span><span class="sxs-lookup"><span data-stu-id="1e947-399">No accessor.</span></span>|  
|<span data-ttu-id="1e947-400">PreserveSigAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-400">PreserveSigAttribute</span></span>|<span data-ttu-id="1e947-401">CorMethodImpl.miOLE</span><span class="sxs-lookup"><span data-stu-id="1e947-401">CorMethodImpl.miOLE</span></span>|<span data-ttu-id="1e947-402">MethodInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="1e947-402">MethodInfo.GetMethodImplementationFlags().OLE</span></span><br /><br /> <span data-ttu-id="1e947-403">ConstructorInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="1e947-403">ConstructorInfo.GetMethodImplementationFlags().OLE</span></span>|  
|<span data-ttu-id="1e947-404">InAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-404">InAttribute</span></span>|<span data-ttu-id="1e947-405">CorParamAttr.pdIn</span><span class="sxs-lookup"><span data-stu-id="1e947-405">CorParamAttr.pdIn</span></span>|<span data-ttu-id="1e947-406">ParameterInfo.Attributes.In</span><span class="sxs-lookup"><span data-stu-id="1e947-406">ParameterInfo.Attributes.In</span></span>|  
|<span data-ttu-id="1e947-407">OutAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-407">OutAttribute</span></span>|<span data-ttu-id="1e947-408">CorParamAttr.pdOut</span><span class="sxs-lookup"><span data-stu-id="1e947-408">CorParamAttr.pdOut</span></span>|<span data-ttu-id="1e947-409">ParameterInfo.Attributes.Out</span><span class="sxs-lookup"><span data-stu-id="1e947-409">ParameterInfo.Attributes.Out</span></span>|  
|<span data-ttu-id="1e947-410">StructLayoutAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-410">StructLayoutAttribute</span></span>|<span data-ttu-id="1e947-411">CorTypeAttr.tdLayoutSequential</span><span class="sxs-lookup"><span data-stu-id="1e947-411">CorTypeAttr.tdLayoutSequential</span></span><br /><br /> <span data-ttu-id="1e947-412">CorTypeAttr.tdExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="1e947-412">CorTypeAttr.tdExplicitLayout</span></span><br /><br /> <span data-ttu-id="1e947-413">CorTypeAttr.tdAnsiClass</span><span class="sxs-lookup"><span data-stu-id="1e947-413">CorTypeAttr.tdAnsiClass</span></span><br /><br /> <span data-ttu-id="1e947-414">CorTypeAttr.tdUnicodeClass</span><span class="sxs-lookup"><span data-stu-id="1e947-414">CorTypeAttr.tdUnicodeClass</span></span><br /><br /> <span data-ttu-id="1e947-415">CorTypeAttr.tdAutoClass</span><span class="sxs-lookup"><span data-stu-id="1e947-415">CorTypeAttr.tdAutoClass</span></span><br /><br /> <span data-ttu-id="1e947-416">Compression de la classe.</span><span class="sxs-lookup"><span data-stu-id="1e947-416">Class packing.</span></span>|<span data-ttu-id="1e947-417">Type.Attributes.LayoutSequential</span><span class="sxs-lookup"><span data-stu-id="1e947-417">Type.Attributes.LayoutSequential</span></span><br /><br /> <span data-ttu-id="1e947-418">Type.Attributes.ExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="1e947-418">Type.Attributes.ExplicitLayout</span></span><br /><br /> <span data-ttu-id="1e947-419">Type.Attributes.AnsiClass</span><span class="sxs-lookup"><span data-stu-id="1e947-419">Type.Attributes.AnsiClass</span></span><br /><br /> <span data-ttu-id="1e947-420">Type.Attributes.UnicodeClass</span><span class="sxs-lookup"><span data-stu-id="1e947-420">Type.Attributes.UnicodeClass</span></span><br /><br /> <span data-ttu-id="1e947-421">Type.Attributes.AutoClass</span><span class="sxs-lookup"><span data-stu-id="1e947-421">Type.Attributes.AutoClass</span></span><br /><br /> <span data-ttu-id="1e947-422">Pas d’accesseur.</span><span class="sxs-lookup"><span data-stu-id="1e947-422">No accessor.</span></span>|  
|<span data-ttu-id="1e947-423">FieldOffsetAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-423">FieldOffsetAttribute</span></span>|<span data-ttu-id="1e947-424">Offset de champ.</span><span class="sxs-lookup"><span data-stu-id="1e947-424">Field offset.</span></span>|<span data-ttu-id="1e947-425">Pas d’accesseur.</span><span class="sxs-lookup"><span data-stu-id="1e947-425">No accessor.</span></span>|  
|<span data-ttu-id="1e947-426">AssemblyLoadAttribute</span><span class="sxs-lookup"><span data-stu-id="1e947-426">AssemblyLoadAttribute</span></span>|<span data-ttu-id="1e947-427">CorAssemblyFlags</span><span class="sxs-lookup"><span data-stu-id="1e947-427">CorAssemblyFlags</span></span>|<span data-ttu-id="1e947-428">Aucun accesseur ou l’énumérateur.</span><span class="sxs-lookup"><span data-stu-id="1e947-428">No accessor or enumerator.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-429"><paramref name="attributeType" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-429"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e947-430"><paramref name="attributeType" /> n'est pas un type au moment de l'exécution.</span><span class="sxs-lookup"><span data-stu-id="1e947-430"><paramref name="attributeType" /> is not a runtime type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="1e947-431">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-431">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="1e947-432">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="1e947-432">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-433">Retourne des informations sur les attributs appliqués au <see cref="T:System.Reflection.Assembly" /> actuel, en tant qu'objets <see cref="T:System.Reflection.CustomAttributeData" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-433">Returns information about the attributes that have been applied to the current <see cref="T:System.Reflection.Assembly" />, expressed as <see cref="T:System.Reflection.CustomAttributeData" /> objects.</span></span></summary>
        <returns><span data-ttu-id="1e947-434">Liste générique d'objets <see cref="T:System.Reflection.CustomAttributeData" /> représentant des données relatives aux attributs qui ont été appliqués à l'assembly actuel.</span><span class="sxs-lookup"><span data-stu-id="1e947-434">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-435">Utilisez cette méthode pour examiner les attributs personnalisés du code dans le contexte de réflexion uniquement, dans les cas où les attributs personnalisés eux-mêmes sont définis dans le code qui est chargé dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="1e947-435">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="1e947-436">Méthodes, telles que <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> et <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> ne peut pas être utilisé dans ce cas, parce qu’elles créent des instances des attributs.</span><span class="sxs-lookup"><span data-stu-id="1e947-436">Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="1e947-437">Impossible d’exécuter le code dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="1e947-437">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="1e947-438">Pour plus d’informations et un par exemple de code, consultez la <xref:System.Reflection.CustomAttributeData> classe.</span><span class="sxs-lookup"><span data-stu-id="1e947-438">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntryAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetEntryAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetEntryAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetEntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEntryAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetEntryAssembly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-439">Obtient l'exécutable du processus dans le domaine d'application par défaut.</span><span class="sxs-lookup"><span data-stu-id="1e947-439">Gets the process executable in the default application domain.</span></span> <span data-ttu-id="1e947-440">Dans les autres domaines d'application, il s'agit du premier exécutable exécuté par <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-440">In other application domains, this is the first executable that was executed by <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="1e947-441">Assembly qui est l'exécutable du processus dans le domaine d'application par défaut, ou le premier exécutable exécuté par <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-441">The assembly that is the process executable in the default application domain, or the first executable that was executed by <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span></span> <span data-ttu-id="1e947-442">Peut retourner <see langword="null" /> quand il est appelé à partir de code non managé.</span><span class="sxs-lookup"><span data-stu-id="1e947-442">Can return <see langword="null" /> when called from unmanaged code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-443">Le <xref:System.Reflection.Assembly.GetEntryAssembly%2A> méthode peut retourner `null` lorsqu’un assembly managé a été chargé à partir d’une application non managée.</span><span class="sxs-lookup"><span data-stu-id="1e947-443">The <xref:System.Reflection.Assembly.GetEntryAssembly%2A> method can return `null` when a managed assembly has been loaded from an unmanaged application.</span></span> <span data-ttu-id="1e947-444">Par exemple, si une application non managée crée une instance d’un composant COM écrit en c#, un appel à la <xref:System.Reflection.Assembly.GetEntryAssembly%2A> méthode à partir du composant c# retourne la valeur null, car le point d’entrée pour le processus était du code non managé plutôt qu’un assembly managé.</span><span class="sxs-lookup"><span data-stu-id="1e947-444">For example, if an unmanaged application creates an instance of a COM component written in C#, a call to the <xref:System.Reflection.Assembly.GetEntryAssembly%2A> method from the C# component returns null, because the entry point for the process was unmanaged code rather than a managed assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExecutingAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetExecutingAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetExecutingAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetExecutingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExecutingAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetExecutingAssembly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-445">Obtient l'assembly qui contient le code en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="1e947-445">Gets the assembly that contains the code that is currently executing.</span></span></summary>
        <returns><span data-ttu-id="1e947-446">Assembly qui contient le code en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="1e947-446">The assembly that contains the code that is currently executing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-447">Pour des raisons de performances, vous devez appeler cette méthode uniquement lorsque vous ne connaissez pas au moment du design l’assembly en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="1e947-447">For performance reasons, you should call this method only when you do not know at design time what assembly is currently executing.</span></span> <span data-ttu-id="1e947-448">La méthode recommandée pour récupérer un <xref:System.Reflection.Assembly> objet qui représente l’assembly actuel est d’utiliser le <xref:System.Type.Assembly%2A?displayProperty=nameWithType> propriété d’un type trouvé dans l’assembly, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="1e947-448">The recommended way to retrieve an <xref:System.Reflection.Assembly> object that represents the current assembly is to use the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property of a type found in the assembly, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.GetExecutingAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cs/assembly1.cs#1)]
 [!code-vb[System.Reflection.Assembly.GetExecutingAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="1e947-449">Pour obtenir l’assembly qui contient la méthode qui a appelé le code en cours d’exécution, utilisez <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="1e947-449">To get the assembly that contains the method that called the currently executing code, use <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-450">L’exemple suivant utilise le <xref:System.Type.Assembly%2A?displayProperty=nameWithType> propriété à obtenir l’assembly en cours d’exécution basé sur un type de contenu dans cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-450">The following example uses the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property to get the currently executing assembly based on a type contained in that assembly.</span></span> <span data-ttu-id="1e947-451">Il appelle également la <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> méthode pour montrer qu’il retourne un <xref:System.Reflection.Assembly> objet qui représente le même assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-451">It also calls the <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> method to show that it returns an <xref:System.Reflection.Assembly> object that represents the same assembly.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cpp/getexecutingassembly1.cpp#5)]
 [!code-csharp[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cs/getexecutingassembly1.cs#5)]
 [!code-vb[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/vb/getexecutingassembly1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetExportedTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-452">Obtient les types publics définis dans cet assembly qui sont visibles à l'extérieur de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-452">Gets the public types defined in this assembly that are visible outside the assembly.</span></span></summary>
        <returns><span data-ttu-id="1e947-453">Tableau qui représente les types définis dans cet assembly qui sont visibles à l'extérieur de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-453">An array that represents the types defined in this assembly that are visible outside the assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-454">Les seuls types visibles en dehors d’un assembly sont les types publics et les types publics imbriqués dans d’autres types publics.</span><span class="sxs-lookup"><span data-stu-id="1e947-454">The only types visible outside an assembly are public types and public types nested within other public types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-455">L’exemple de code suivant définit plusieurs classes avec différents niveaux d’accès et appelle <xref:System.Reflection.Assembly.GetExportedTypes%2A> pour afficher celles qui sont visibles à l’extérieur de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-455">The following code sample defines a number of classes with various access levels, and calls <xref:System.Reflection.Assembly.GetExportedTypes%2A> to display the ones that are visible from outside the assembly.</span></span>  
  
 [!code-cpp[Assembly.GetExportedTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.GetExportedTypes/CPP/source.cpp#1)]
 [!code-csharp[Assembly.GetExportedTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.GetExportedTypes/CS/source.cs#1)]
 [!code-vb[Assembly.GetExportedTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.GetExportedTypes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1e947-456">L’assembly est un assembly dynamique.</span><span class="sxs-lookup"><span data-stu-id="1e947-456">The assembly is a dynamic assembly.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e947-457">Impossible de charger un assembly dépendant.</span><span class="sxs-lookup"><span data-stu-id="1e947-457">Unable to load a dependent assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFile(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1e947-458">Nom du fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-458">The name of the specified file.</span></span> <span data-ttu-id="1e947-459">N’incluez pas le chemin d’accès au fichier.</span><span class="sxs-lookup"><span data-stu-id="1e947-459">Do not include the path to the file.</span></span></param>
        <summary><span data-ttu-id="1e947-460">Obtient un <see cref="T:System.IO.FileStream" /> pour le fichier spécifié dans la table de fichiers du manifeste de cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-460">Gets a <see cref="T:System.IO.FileStream" /> for the specified file in the file table of the manifest of this assembly.</span></span></summary>
        <returns><span data-ttu-id="1e947-461">Flux qui contient le fichier spécifié, ou <see langword="null" /> si le fichier est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-461">A stream that contains the specified file, or <see langword="null" /> if the file is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-462">Cette méthode fonctionne sur les deux fichiers de ressources publics et privés.</span><span class="sxs-lookup"><span data-stu-id="1e947-462">This method works on both public and private resource files.</span></span>  
  
 <span data-ttu-id="1e947-463">Le `name` ne doit pas inclure le chemin d’accès au fichier.</span><span class="sxs-lookup"><span data-stu-id="1e947-463">The `name` should not include the path to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-464">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-464">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1e947-465">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-465">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e947-466">Le paramètre <paramref name="name" /> est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="1e947-466">The <paramref name="name" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-467"><paramref name="name" /> est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-467"><paramref name="name" /> was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-468"><paramref name="name" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-468"><paramref name="name" /> is not a valid assembly.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-469">Pour accéder au chemin d’accès et pour lire le fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-469">for access to the path and for reading the specified file.</span></span> <span data-ttu-id="1e947-470">Énumérations associées : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> et <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="1e947-470">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-471">Obtient les fichiers de la table de fichiers d'un manifeste d'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-471">Gets the files in the file table of an assembly manifest.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFiles () As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFiles</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-472">Obtient les fichiers de la table de fichiers d'un manifeste d'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-472">Gets the files in the file table of an assembly manifest.</span></span></summary>
        <returns><span data-ttu-id="1e947-473">Tableau des flux de données qui contiennent les fichiers.</span><span class="sxs-lookup"><span data-stu-id="1e947-473">An array of streams that contain the files.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-474">Cette méthode fonctionne sur les fichiers de ressources publics et privés.</span><span class="sxs-lookup"><span data-stu-id="1e947-474">This method works on public and private resource files.</span></span>  
  
 <span data-ttu-id="1e947-475">Cette surcharge revient à appeler la <xref:System.Reflection.Assembly.GetFiles%28System.Boolean%29> surcharge et en spécifiant `false`.</span><span class="sxs-lookup"><span data-stu-id="1e947-475">This overload is equivalent to calling the <xref:System.Reflection.Assembly.GetFiles%28System.Boolean%29> overload and specifying `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-476">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-476">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e947-477">Un fichier est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-477">A file was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="1e947-478">Un fichier n’était pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-478">A file was not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="1e947-479"><see langword="true" /> pour inclure des modules de ressources ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-479"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1e947-480">Obtient les fichiers de la table de fichiers d'un manifeste d'assembly, en spécifiant si des modules de ressources doivent être inclus.</span><span class="sxs-lookup"><span data-stu-id="1e947-480">Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span></span></summary>
        <returns><span data-ttu-id="1e947-481">Tableau des flux de données qui contiennent les fichiers.</span><span class="sxs-lookup"><span data-stu-id="1e947-481">An array of streams that contain the files.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-482">Cette méthode fonctionne sur les fichiers de ressources publics et privés.</span><span class="sxs-lookup"><span data-stu-id="1e947-482">This method works on public and private resource files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-483">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-483">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e947-484">Un fichier est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-484">A file was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="1e947-485">Un fichier n’était pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-485">A file was not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetForwardedTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetForwardedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetForwardedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetForwardedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetForwardedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetForwardedTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-486">Retourne le code de hachage de cette instance.</span><span class="sxs-lookup"><span data-stu-id="1e947-486">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="1e947-487">Code de hachage d'un entier signé 32 bits.</span><span class="sxs-lookup"><span data-stu-id="1e947-487">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLoadedModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-488">Obtient tous les modules chargés qui appartiennent à cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-488">Gets all the loaded modules that are part of this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetLoadedModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetLoadedModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetLoadedModules</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-489">Obtient tous les modules chargés qui appartiennent à cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-489">Gets all the loaded modules that are part of this assembly.</span></span></summary>
        <returns><span data-ttu-id="1e947-490">Tableau de modules.</span><span class="sxs-lookup"><span data-stu-id="1e947-490">An array of modules.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="1e947-491"><see langword="true" /> pour inclure des modules de ressources ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-491"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1e947-492">Obtient tous les modules chargés qui appartiennent à cet assembly, en spécifiant si des modules de ressources doivent être inclus.</span><span class="sxs-lookup"><span data-stu-id="1e947-492">Gets all the loaded modules that are part of this assembly, specifying whether to include resource modules.</span></span></summary>
        <returns><span data-ttu-id="1e947-493">Tableau de modules.</span><span class="sxs-lookup"><span data-stu-id="1e947-493">An array of modules.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName"><span data-ttu-id="1e947-494">Nom de la ressource respectant la casse.</span><span class="sxs-lookup"><span data-stu-id="1e947-494">The case-sensitive name of the resource.</span></span></param>
        <summary><span data-ttu-id="1e947-495">Retourne des informations sur la manière dont la ressource donnée a été persistante.</span><span class="sxs-lookup"><span data-stu-id="1e947-495">Returns information about how the given resource has been persisted.</span></span></summary>
        <returns><span data-ttu-id="1e947-496">Objet qui est rempli par des informations sur la topologie de la ressource, ou <see langword="null" /> si la ressource est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-496">An object that is populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-497">Informations sur la ressource sont renvoyées uniquement si la ressource est visible à l’appelant, ou l’appelant a <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="1e947-497">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-498"><paramref name="resourceName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-498"><paramref name="resourceName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e947-499">Le paramètre <paramref name="resourceName" /> est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="1e947-499">The <paramref name="resourceName" /> parameter is an empty string ("").</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="1e947-500">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-500">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="1e947-501">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="1e947-501">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public virtual string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-502">Retourne les noms de toutes les ressources de cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-502">Returns the names of all the resources in this assembly.</span></span></summary>
        <returns><span data-ttu-id="1e947-503">Tableau qui contient les noms de toutes les ressources.</span><span class="sxs-lookup"><span data-stu-id="1e947-503">An array that contains the names of all the resources.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-504">Vous pouvez utiliser le nom de chaque ressource dans le tableau retourné par cette méthode comme suit :</span><span class="sxs-lookup"><span data-stu-id="1e947-504">You can use each resource name in the array returned by this method as follows:</span></span>  
  
-   <span data-ttu-id="1e947-505">Vous pouvez passer le nom de ressource pour le <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> méthode pour obtenir des informations supplémentaires sur la ressource.</span><span class="sxs-lookup"><span data-stu-id="1e947-505">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> method to get additional information about the resource.</span></span>  
  
-   <span data-ttu-id="1e947-506">Si le nom identifie un fichier .resources binaire, vous pouvez supprimer son extension de fichier .resources et passer à la <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=nameWithType> constructeur pour instancier le Gestionnaire de ressources.</span><span class="sxs-lookup"><span data-stu-id="1e947-506">If the name identifies a binary .resources file, you can remove its .resources file extension and pass it to the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=nameWithType> constructor to instantiate the resource manager.</span></span>  
  
-   <span data-ttu-id="1e947-507">Vous pouvez passer le nom de ressource pour le <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> méthode pour récupérer un <xref:System.IO.Stream> objet que vous pouvez ensuite passer le <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> constructeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-507">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method to retrieve a <xref:System.IO.Stream> object that you can then pass to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> constructor.</span></span>  
  
-   <span data-ttu-id="1e947-508">Vous pouvez passer le nom de ressource pour le <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> méthode pour récupérer un <xref:System.IO.Stream> objet que vous pouvez ensuite passer le <xref:System.Resources.ResourceSet.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> constructeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-508">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method to retrieve a <xref:System.IO.Stream> object that you can then pass to the <xref:System.Resources.ResourceSet.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> constructor.</span></span>  
  
 <span data-ttu-id="1e947-509">Informations sur la ressource sont renvoyées uniquement si la ressource est visible à l’appelant, ou l’appelant a <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="1e947-509">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="1e947-510">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-510">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="1e947-511">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="1e947-511">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-512">Charge la ressource de manifeste spécifiée à partir de cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-512">Loads the specified manifest resource from this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1e947-513">Nom de la ressource de manifeste demandée respectant la casse.</span><span class="sxs-lookup"><span data-stu-id="1e947-513">The case-sensitive name of the manifest resource being requested.</span></span></param>
        <summary><span data-ttu-id="1e947-514">Charge la ressource de manifeste spécifiée à partir de cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-514">Loads the specified manifest resource from this assembly.</span></span></summary>
        <returns><span data-ttu-id="1e947-515">La ressource de manifeste ; ou <see langword="null" /> si aucune ressource n'a été spécifiée pendant la compilation, ou si la ressource n'est pas visible par l'appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-515">The manifest resource; or <see langword="null" /> if no resources were specified during compilation or if the resource is not visible to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-516">Une ressource de manifeste est une ressource (par exemple, un fichier image) qui est incorporée dans l’assembly au moment de la compilation.</span><span class="sxs-lookup"><span data-stu-id="1e947-516">A manifest resource is a resource (such as an image file) that is embedded in the assembly at compile time.</span></span> <span data-ttu-id="1e947-517">Pour plus d’informations sur les ressources de manifeste, consultez [Microsoft .NET Framework Resource Basics](http://go.microsoft.com/fwlink/?LinkId=204554) dans MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="1e947-517">For more information about manifest resources, see [Microsoft .NET Framework Resource Basics](http://go.microsoft.com/fwlink/?LinkId=204554) in the MSDN Library.</span></span>  
  
 <span data-ttu-id="1e947-518">Informations sur la ressource sont renvoyées uniquement si la ressource est visible à l’appelant, ou l’appelant a <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="1e947-518">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-519">Cette méthode retourne `null` si une ressource privée dans un autre assembly est accessible et que l’appelant n’a pas <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="1e947-519">This method returns `null` if a private resource in another assembly is accessed and the caller does not have <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="1e947-520">Si le manifeste d’assembly répertorie un fichier de ressources <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> retourne un <xref:System.IO.Stream> même si le fichier de ressources est introuvable sur le disque au moment de l’objet.</span><span class="sxs-lookup"><span data-stu-id="1e947-520">If the assembly manifest lists a resource file, <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> returns a <xref:System.IO.Stream> object even if the resource file cannot be found on disk at the time.</span></span> <span data-ttu-id="1e947-521">Si le fichier de ressources est introuvable, le passage résultant <xref:System.IO.Stream> de l’objet à la <xref:System.Resources.ResourceReader> constructeur entraîne une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="1e947-521">If the resource file is not found, passing the resulting <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader> constructor causes an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1e947-522">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-522">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e947-523">Le paramètre <paramref name="name" /> est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="1e947-523">The <paramref name="name" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="1e947-524">Dans [.NET pour les applications du Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) ou la [Bibliothèque de classes portable](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), interceptez l’exception de la classe de base, <see cref="T:System.IO.IOException" />, à la place.</span><span class="sxs-lookup"><span data-stu-id="1e947-524">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="1e947-525">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-525">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-526"><paramref name="name" /> est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-526"><paramref name="name" /> was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-527"><paramref name="name" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-527"><paramref name="name" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="1e947-528">La longueur de la ressource est supérieure à <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-528">Resource length is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="1e947-529">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-529">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="1e947-530">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="1e947-530">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1e947-531">Type dont l'espace de noms définit la portée du nom de la ressource de manifeste.</span><span class="sxs-lookup"><span data-stu-id="1e947-531">The type whose namespace is used to scope the manifest resource name.</span></span></param>
        <param name="name"><span data-ttu-id="1e947-532">Nom de la ressource de manifeste demandée respectant la casse.</span><span class="sxs-lookup"><span data-stu-id="1e947-532">The case-sensitive name of the manifest resource being requested.</span></span></param>
        <summary><span data-ttu-id="1e947-533">Charge la ressource de manifeste spécifiée, dont la portée est définie par l'espace de noms du type déterminé, à partir de cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-533">Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span></span></summary>
        <returns><span data-ttu-id="1e947-534">La ressource de manifeste ; ou <see langword="null" /> si aucune ressource n'a été spécifiée pendant la compilation, ou si la ressource n'est pas visible par l'appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-534">The manifest resource; or <see langword="null" /> if no resources were specified during compilation or if the resource is not visible to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-535">Par exemple, si le nom complet spécifié pour `type` est « MyNameSpace.MyClasses » et `name` est « Net », cette méthode recherche une ressource nommée « MyNameSpace.Net » de surcharge.</span><span class="sxs-lookup"><span data-stu-id="1e947-535">For example, if the full name specified for `type` is "MyNameSpace.MyClasses" and `name` is "Net", this method overload searches for a resource named "MyNameSpace.Net".</span></span>  
  
 <span data-ttu-id="1e947-536">Une ressource de manifeste est une ressource (par exemple, un fichier image) qui est incorporée dans l’assembly au moment de la compilation.</span><span class="sxs-lookup"><span data-stu-id="1e947-536">A manifest resource is a resource (such as an image file) that is embedded in the assembly at compile time.</span></span> <span data-ttu-id="1e947-537">Pour plus d’informations sur les ressources de manifeste, consultez [Microsoft .NET Framework Resource Basics](http://go.microsoft.com/fwlink/?LinkId=204554) dans MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="1e947-537">For more information about manifest resources, see [Microsoft .NET Framework Resource Basics](http://go.microsoft.com/fwlink/?LinkId=204554) in the MSDN Library.</span></span>  
  
 <span data-ttu-id="1e947-538">Informations sur la ressource sont renvoyées uniquement si la ressource est visible à l’appelant, ou l’appelant a <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="1e947-538">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-539">Cette méthode retourne `null` si une ressource privée dans un autre assembly est accessible et que l’appelant n’a pas <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="1e947-539">This method returns `null` if a private resource in another assembly is accessed and the caller does not have <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="1e947-540">Si le manifeste d’assembly répertorie un fichier de ressources <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> retourne un <xref:System.IO.Stream> même si le fichier de ressources est introuvable sur le disque au moment de l’objet.</span><span class="sxs-lookup"><span data-stu-id="1e947-540">If the assembly manifest lists a resource file, <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> returns a <xref:System.IO.Stream> object even if the resource file cannot be found on disk at the time.</span></span> <span data-ttu-id="1e947-541">Si le fichier de ressources est introuvable, le passage résultant <xref:System.IO.Stream> de l’objet à la <xref:System.Resources.ResourceReader> constructeur entraîne une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="1e947-541">If the resource file is not found, passing the resulting <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader> constructor causes an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1e947-542">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-542">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e947-543">Le paramètre <paramref name="name" /> est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="1e947-543">The <paramref name="name" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-544">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-544">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-545"><paramref name="name" /> est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-545"><paramref name="name" /> was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-546"><paramref name="name" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-546"><paramref name="name" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="1e947-547">La longueur de la ressource est supérieure à <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-547">Resource length is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="1e947-548">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-548">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="1e947-549">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="1e947-549">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModule(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1e947-550">Nom du module demandé.</span><span class="sxs-lookup"><span data-stu-id="1e947-550">The name of the module being requested.</span></span></param>
        <summary><span data-ttu-id="1e947-551">Obtient le module spécifié dans cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-551">Gets the specified module in this assembly.</span></span></summary>
        <returns><span data-ttu-id="1e947-552">Module demandé, ou <see langword="null" /> si le module est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-552">The module being requested, or <see langword="null" /> if the module is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-553">Cette méthode fonctionne sur les noms de fichiers.</span><span class="sxs-lookup"><span data-stu-id="1e947-553">This method works on file names.</span></span>  
  
 <span data-ttu-id="1e947-554">Classes de la `Reflection.Emit` espace de noms émettent le nom de la portée d’un module dynamique.</span><span class="sxs-lookup"><span data-stu-id="1e947-554">Classes in the `Reflection.Emit` namespace emit the scope name for a dynamic module.</span></span> <span data-ttu-id="1e947-555">Nom de l’étendue peut être déterminé par le <xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="1e947-555">The scope name can be determined by the <xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="1e947-556">Passez le type de module que vous souhaitez `Assembly.GetModule`.</span><span class="sxs-lookup"><span data-stu-id="1e947-556">Pass the kind of module you want to `Assembly.GetModule`.</span></span> <span data-ttu-id="1e947-557">Par exemple, si vous souhaitez que le module qui contient le manifeste d’assembly, passez le nom de l’étendue du module à `GetModule`.</span><span class="sxs-lookup"><span data-stu-id="1e947-557">For example, if you want the module that contains the assembly manifest, pass the scope name of the module to `GetModule`.</span></span> <span data-ttu-id="1e947-558">Sinon, passez le nom de fichier du module.</span><span class="sxs-lookup"><span data-stu-id="1e947-558">Otherwise, pass the file name of the module.</span></span> <span data-ttu-id="1e947-559">Les assemblys chargés par un de le `Load` méthodes qui possèdent un paramètre byte [] disposent uniquement d’un module, et qui est le module du manifeste.</span><span class="sxs-lookup"><span data-stu-id="1e947-559">Assemblies loaded by one of the `Load` methods that have a byte[] parameter have only one module, and that is the manifest module.</span></span> <span data-ttu-id="1e947-560">Toujours demander ces modules à l’aide du nom de l’étendue.</span><span class="sxs-lookup"><span data-stu-id="1e947-560">Always seek these modules using the scope name.</span></span>  
  
 <span data-ttu-id="1e947-561">Un type peut être récupéré à partir d’un module spécifique à l’aide de <xref:System.Reflection.Module.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1e947-561">A type can be retrieved from a specific module using <xref:System.Reflection.Module.GetType%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1e947-562">Appel de `Module.GetType` sur le module contenant le manifeste ne sera pas lancer une recherche dans la totalité de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-562">Calling `Module.GetType` on the module containing the manifest will not initiate a search of the entire assembly.</span></span> <span data-ttu-id="1e947-563">Pour récupérer un type d’un assembly, quel que soit le module dans lequel il se trouve dans, vous devez appeler <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1e947-563">To retrieve a type from an assembly, regardless of which module it is in, you must call <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1e947-564">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-564">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e947-565">Le paramètre <paramref name="name" /> est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="1e947-565">The <paramref name="name" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-566">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-566">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-567"><paramref name="name" /> est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-567"><paramref name="name" /> was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-568"><paramref name="name" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-568"><paramref name="name" /> is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-569">Obtient tous les modules qui appartiennent à cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-569">Gets all the modules that are part of this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModules</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-570">Obtient tous les modules qui appartiennent à cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-570">Gets all the modules that are part of this assembly.</span></span></summary>
        <returns><span data-ttu-id="1e947-571">Tableau de modules.</span><span class="sxs-lookup"><span data-stu-id="1e947-571">An array of modules.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-572">Cette méthode fonctionne sur les fichiers de ressources publics et privés.</span><span class="sxs-lookup"><span data-stu-id="1e947-572">This method works on public and private resource files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-573">Les modules doivent être émises avec les extensions de nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="1e947-573">Modules must be emitted with file name extensions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-574">L’exemple suivant affiche le nom du module dans le tableau retourné qui contient le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-574">The following example displays the name of the module in the returned array that contains the assembly manifest.</span></span>  
  
 [!code-cpp[Classic Assembly.GetModules Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Assembly.GetModules Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/CS/source.cs#1)]
 [!code-vb[Classic Assembly.GetModules Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e947-575">Le module à charger ne spécifie pas une extension de nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="1e947-575">The module to be loaded does not specify a file name extension.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="1e947-576"><see langword="true" /> pour inclure des modules de ressources ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-576"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1e947-577">Obtient tous les modules qui appartiennent à cet assembly, en spécifiant si des modules de ressources doivent être inclus.</span><span class="sxs-lookup"><span data-stu-id="1e947-577">Gets all the modules that are part of this assembly, specifying whether to include resource modules.</span></span></summary>
        <returns><span data-ttu-id="1e947-578">Tableau de modules.</span><span class="sxs-lookup"><span data-stu-id="1e947-578">An array of modules.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-579">Cette méthode fonctionne sur les fichiers de ressources publics et privés.</span><span class="sxs-lookup"><span data-stu-id="1e947-579">This method works on public and private resource files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-580">Les modules doivent être émises avec les extensions de nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="1e947-580">Modules must be emitted with file name extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetName">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-581">Obtient <see cref="T:System.Reflection.AssemblyName" /> pour cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-581">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName GetName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetName () As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::AssemblyName ^ GetName();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-582">Obtient <see cref="T:System.Reflection.AssemblyName" /> pour cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-582">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span></span></summary>
        <returns><span data-ttu-id="1e947-583">Objet qui contient le nom complet analysé correspondant à cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-583">An object that contains the fully parsed display name for this assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-584">Pour accéder au chemin de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-584">for access to the path of the assembly.</span></span> <span data-ttu-id="1e947-585">Énumération associée : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="1e947-585">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="copiedName">
          <span data-ttu-id="1e947-586"><see langword="true" /> pour affecter à <see cref="P:System.Reflection.Assembly.CodeBase" /> l'emplacement de l'assembly une fois qu'il est devenu un cliché instantané ; <see langword="false" /> pour affecter un emplacement d'origine à <see cref="P:System.Reflection.Assembly.CodeBase" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-586"><see langword="true" /> to set the <see cref="P:System.Reflection.Assembly.CodeBase" /> to the location of the assembly after it was shadow copied; <see langword="false" /> to set <see cref="P:System.Reflection.Assembly.CodeBase" /> to the original location.</span></span></param>
        <summary><span data-ttu-id="1e947-587">Obtient un <see cref="T:System.Reflection.AssemblyName" /> pour cet assembly, en définissant le code base de la manière spécifiée par <paramref name="copiedName" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-587">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly, setting the codebase as specified by <paramref name="copiedName" />.</span></span></summary>
        <returns><span data-ttu-id="1e947-588">Objet qui contient le nom complet analysé correspondant à cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-588">An object that contains the fully parsed display name for this assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-589">Pour accéder au chemin de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-589">for access to the path of the assembly.</span></span> <span data-ttu-id="1e947-590">Énumération associée : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="1e947-590">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="1e947-591">Objet à remplir à l'aide des informations de sérialisation.</span><span class="sxs-lookup"><span data-stu-id="1e947-591">The object to be populated with serialization information.</span></span></param>
        <param name="context"><span data-ttu-id="1e947-592">Contexte de destination de la sérialisation.</span><span class="sxs-lookup"><span data-stu-id="1e947-592">The destination context of the serialization.</span></span></param>
        <summary><span data-ttu-id="1e947-593">Obtient les informations de sérialisation avec toutes les données nécessaires pour réinstancier cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-593">Gets serialization information with all of the data needed to reinstantiate this assembly.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-594"><paramref name="info" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-594"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="1e947-595">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="1e947-595">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="1e947-596">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="1e947-596">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-597">Obtient les objets <see cref="T:System.Reflection.AssemblyName" /> pour tous les assemblys référencés par cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-597">Gets the <see cref="T:System.Reflection.AssemblyName" /> objects for all the assemblies referenced by this assembly.</span></span></summary>
        <returns><span data-ttu-id="1e947-598">Tableau qui contient les noms complets analysés de tous les assemblys référencés par cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-598">An array that contains the fully parsed display names of all the assemblies referenced by this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e947-599">En commençant par le [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], le <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> propriété d’un <xref:System.Reflection.AssemblyName> objet qui est retourné par cette méthode est <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> s’il n’existe aucun algorithme de hachage pour l’assembly référencé, ou si l’algorithme de hachage de l’assembly référencé n’est pas identifié par le <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> énumération.</span><span class="sxs-lookup"><span data-stu-id="1e947-599">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by this method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumeration.</span></span> <span data-ttu-id="1e947-600">Dans les versions précédentes du .NET Framework, le <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> propriété retournée <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> dans cette situation.</span><span class="sxs-lookup"><span data-stu-id="1e947-600">In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in this situation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-601">L’exemple de code suivant montre l’appel du <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="1e947-601">The following code example demonstrates calling the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> method.</span></span> <span data-ttu-id="1e947-602">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Reflection.Assembly> classe.</span><span class="sxs-lookup"><span data-stu-id="1e947-602">This code example is part of a larger example provided for the <xref:System.Reflection.Assembly> class.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-603">Obtient l'assembly satellite.</span><span class="sxs-lookup"><span data-stu-id="1e947-603">Gets the satellite assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="1e947-604">Culture spécifiée.</span><span class="sxs-lookup"><span data-stu-id="1e947-604">The specified culture.</span></span></param>
        <summary><span data-ttu-id="1e947-605">Obtient l'assembly satellite pour la culture spécifiée.</span><span class="sxs-lookup"><span data-stu-id="1e947-605">Gets the satellite assembly for the specified culture.</span></span></summary>
        <returns><span data-ttu-id="1e947-606">Assembly satellite spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-606">The specified satellite assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-607">Les assemblys satellites contiennent des ressources localisées, comme les assemblys d’application principaux qui contiennent du code exécutable non localisables et des ressources pour une culture unique utilisée comme culture neutre ou par défaut.</span><span class="sxs-lookup"><span data-stu-id="1e947-607">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="1e947-608">Appelez cette méthode pour utiliser votre version actuelle de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-608">Call this method to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-609"><paramref name="culture" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-609"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e947-610">L’assembly est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-610">The assembly cannot be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-611">L'assembly satellite avec un nom de fichier correspondant a été trouvé, mais <see langword="CultureInfo" /> ne correspondait pas à celui spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-611">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> did not match the one specified.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="1e947-612">L’assembly satellite n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-612">The satellite assembly is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="1e947-613">Culture spécifiée.</span><span class="sxs-lookup"><span data-stu-id="1e947-613">The specified culture.</span></span></param>
        <param name="version"><span data-ttu-id="1e947-614">Version de l'assembly satellite.</span><span class="sxs-lookup"><span data-stu-id="1e947-614">The version of the satellite assembly.</span></span></param>
        <summary><span data-ttu-id="1e947-615">Obtient la version spécifiée de l'assembly satellite pour la culture donnée.</span><span class="sxs-lookup"><span data-stu-id="1e947-615">Gets the specified version of the satellite assembly for the specified culture.</span></span></summary>
        <returns><span data-ttu-id="1e947-616">Assembly satellite spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-616">The specified satellite assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-617">Les assemblys satellites contiennent des ressources localisées, comme les assemblys d’application principaux qui contiennent du code exécutable non localisables et des ressources pour une culture unique utilisée comme culture neutre ou par défaut.</span><span class="sxs-lookup"><span data-stu-id="1e947-617">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="1e947-618">Appelez le <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> surcharge à utiliser votre version actuelle de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-618">Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.</span></span>  
  
 <span data-ttu-id="1e947-619">Si `version` est `null`, la version actuelle de l’assembly est utilisée si la ressource et les assemblys principaux sont signés.</span><span class="sxs-lookup"><span data-stu-id="1e947-619">If `version` is `null`, the current assembly version is used if both the resource and main assemblies are signed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-620"><paramref name="culture" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-620"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-621">L'assembly satellite avec un nom de fichier correspondant a été trouvé, mais <see langword="CultureInfo" /> ou la version ne correspondait pas à celui spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-621">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> or the version did not match the one specified.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e947-622">L’assembly est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-622">The assembly cannot be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="1e947-623">L’assembly satellite n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-623">The satellite assembly is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-624">Obtient l'objet <see cref="T:System.Type" /> qui représente le type spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-624">Gets the <see cref="T:System.Type" /> object that represents the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1e947-625">Nom complet du type.</span><span class="sxs-lookup"><span data-stu-id="1e947-625">The full name of the type.</span></span></param>
        <summary><span data-ttu-id="1e947-626">Obtient l'objet <see cref="T:System.Type" /> avec le nom spécifié dans l'instance de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-626">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance.</span></span></summary>
        <returns><span data-ttu-id="1e947-627">Objet qui représente la classe spécifiée ou <see langword="null" /> si la classe est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-627">An object that represents the specified class, or <see langword="null" /> if the class is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-628">Cette méthode recherche uniquement l’instance actuelle de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-628">This method only searches the current assembly instance.</span></span> <span data-ttu-id="1e947-629">Le `name` paramètre inclut l’espace de noms mais pas l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-629">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="1e947-630">Pour rechercher d’autres assemblys pour un type, utilisez le <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> surcharge de méthode qui peut éventuellement inclure un nom complet d’assembly en tant que partie du nom de type.</span><span class="sxs-lookup"><span data-stu-id="1e947-630">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-631">Si le type a été transmis à un autre assembly, il est toujours retourné par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="1e947-631">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="1e947-632">Pour plus d’informations sur le transfert de type, consultez [transfert de Type dans le Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="1e947-632">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-633">L’exemple suivant définit abstraite `MeansOfTransportation` classe dans le `Transportation` espace de noms.</span><span class="sxs-lookup"><span data-stu-id="1e947-633">The following example defines an abstract `MeansOfTransportation` class in the `Transportation` namespace.</span></span> <span data-ttu-id="1e947-634">Il appelle le <xref:System.Reflection.Assembly.GetType%28System.String%29> pour récupérer son <xref:System.Type> objet, appelle le <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> méthode pour obtenir un tableau de <xref:System.Reflection.PropertyInfo> les objets qui représentent les propriétés du type, puis affiche des informations du type abstrait propriétés.</span><span class="sxs-lookup"><span data-stu-id="1e947-634">It calls the <xref:System.Reflection.Assembly.GetType%28System.String%29> method to retrieve its <xref:System.Type> object, calls the <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method to get an array of <xref:System.Reflection.PropertyInfo> objects that represent the type's properties, and then displays information on the type's abstract properties.</span></span> <span data-ttu-id="1e947-635">Notez que l’appel à la <xref:System.Reflection.Assembly.GetType%28System.String%29> méthode utilise le nom du type qualifié complet (autrement dit, son espace de noms, ainsi que son nom de type).</span><span class="sxs-lookup"><span data-stu-id="1e947-635">Note that the call to the <xref:System.Reflection.Assembly.GetType%28System.String%29> method uses the type's fully qualified name (that is, its namespace along with its type name).</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.GetType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.gettype/cs/gettype1.cs#1)]
 [!code-vb[System.Reflection.Assembly.GetType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.gettype/vb/gettype1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e947-636"><paramref name="name" /> n'est pas valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-636"><paramref name="name" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-637"><paramref name="name" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-637"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-638"><paramref name="name" /> requiert un assembly dépendant qui est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-638"><paramref name="name" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="1e947-639">Dans [.NET pour les applications du Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) ou la [Bibliothèque de classes portable](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), interceptez l’exception de la classe de base, <see cref="T:System.IO.IOException" />, à la place.</span><span class="sxs-lookup"><span data-stu-id="1e947-639">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
<span data-ttu-id="1e947-640"></para>
          </block>
          <paramref name="name" /> nécessite un assembly dépendant qui a été trouvé, mais qui n’a pas pu être chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-640"></para>
  </block>
 <paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
 <span data-ttu-id="1e947-641">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-641">-or-</span></span>  

<span data-ttu-id="1e947-642">L’assembly actuel a été chargé dans le contexte ReflectionOnly, et <paramref name="name" /> nécessite un assembly dépendant qui n’a pas été préchargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-642">The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-643"><paramref name="name" /> nécessite un assembly dépendant, mais le fichier n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-643"><paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-644">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-644">-or-</span></span>  
  
 <span data-ttu-id="1e947-645"><paramref name="name" /> nécessite un assembly dépendant qui a été compilé pour une version du runtime ultérieure à la version actuellement chargée.</span><span class="sxs-lookup"><span data-stu-id="1e947-645"><paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1e947-646">Nom complet du type.</span><span class="sxs-lookup"><span data-stu-id="1e947-646">The full name of the type.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="1e947-647"><see langword="true" /> pour lever une exception si le type est introuvable ; <see langword="false" /> pour retourner la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-647"><see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1e947-648">Obtient l'objet <see cref="T:System.Type" /> portant le nom spécifié dans l'instance de l'assembly et lève éventuellement une exception si le type est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-648">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance and optionally throws an exception if the type is not found.</span></span></summary>
        <returns><span data-ttu-id="1e947-649">Objet qui représente la classe spécifiée.</span><span class="sxs-lookup"><span data-stu-id="1e947-649">An object that represents the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-650">Cette méthode recherche uniquement l’instance actuelle de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-650">This method only searches the current assembly instance.</span></span> <span data-ttu-id="1e947-651">Le `name` paramètre inclut l’espace de noms mais pas l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-651">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="1e947-652">Pour rechercher d’autres assemblys pour un type, utilisez le <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> surcharge de méthode qui peut éventuellement inclure un nom complet d’assembly en tant que partie du nom de type.</span><span class="sxs-lookup"><span data-stu-id="1e947-652">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-653">Si le type a été transmis à un autre assembly, il est toujours retourné par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="1e947-653">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="1e947-654">Pour plus d’informations sur le transfert de type, consultez [transfert de Type dans le Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="1e947-654">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="1e947-655">Le `throwOnError` paramètre affecte uniquement ce qui se passe lorsque le type est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-655">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="1e947-656">Il n’affecte pas toutes les exceptions qui peuvent être levées.</span><span class="sxs-lookup"><span data-stu-id="1e947-656">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="1e947-657">En particulier, si le type est trouvé mais ne peut pas être chargé, <xref:System.TypeLoadException> peut être levée même si `throwOnError` est `false`.</span><span class="sxs-lookup"><span data-stu-id="1e947-657">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e947-658"><paramref name="name" /> n'est pas valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-658"><paramref name="name" /> is invalid.</span></span>  
  
 <span data-ttu-id="1e947-659">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-659">-or-</span></span>  
  
 <span data-ttu-id="1e947-660">La longueur de <paramref name="name" /> dépasse 1 024 caractères.</span><span class="sxs-lookup"><span data-stu-id="1e947-660">The length of <paramref name="name" /> exceeds 1024 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-661"><paramref name="name" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-661"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1e947-662"><paramref name="throwOnError" /> a la valeur <see langword="true" /> et le type est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-662"><paramref name="throwOnError" /> is <see langword="true" />, and the type cannot be found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-663"><paramref name="name" /> requiert un assembly dépendant qui est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-663"><paramref name="name" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1e947-664"><paramref name="name" /> nécessite un assembly dépendant qui a été trouvé, mais qui n’a pas pu être chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-664"><paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
 <span data-ttu-id="1e947-665">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-665">-or-</span></span>  
  
 <span data-ttu-id="1e947-666">L’assembly actuel a été chargé dans le contexte ReflectionOnly, et <paramref name="name" /> nécessite un assembly dépendant qui n’a pas été préchargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-666">The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-667"><paramref name="name" /> nécessite un assembly dépendant, mais le fichier n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-667"><paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-668">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-668">-or-</span></span>  
  
 <span data-ttu-id="1e947-669"><paramref name="name" /> nécessite un assembly dépendant qui a été compilé pour une version du runtime ultérieure à la version actuellement chargée.</span><span class="sxs-lookup"><span data-stu-id="1e947-669"><paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1e947-670">Nom complet du type.</span><span class="sxs-lookup"><span data-stu-id="1e947-670">The full name of the type.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="1e947-671"><see langword="true" /> pour lever une exception si le type est introuvable ; <see langword="false" /> pour retourner la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-671"><see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="1e947-672"><see langword="true" /> pour ignorer la casse du nom de type ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-672"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1e947-673">Obtient l'objet <see cref="T:System.Type" /> portant le nom spécifié dans l'instance de l'assembly et propose d'ignorer la casse et de lever une exception si le type est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-673">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance, with the options of ignoring the case, and of throwing an exception if the type is not found.</span></span></summary>
        <returns><span data-ttu-id="1e947-674">Objet qui représente la classe spécifiée.</span><span class="sxs-lookup"><span data-stu-id="1e947-674">An object that represents the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-675">Cette méthode recherche uniquement l’instance actuelle de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-675">This method only searches the current assembly instance.</span></span> <span data-ttu-id="1e947-676">Le `name` paramètre inclut l’espace de noms mais pas l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-676">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="1e947-677">Pour rechercher d’autres assemblys pour un type, utilisez le <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> surcharge de méthode qui peut éventuellement inclure un nom complet d’assembly en tant que partie du nom de type.</span><span class="sxs-lookup"><span data-stu-id="1e947-677">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-678">Si le type a été transmis à un autre assembly, il est toujours retourné par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="1e947-678">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="1e947-679">Pour plus d’informations sur le transfert de type, consultez [transfert de Type dans le Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="1e947-679">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="1e947-680">Le `throwOnError` paramètre affecte uniquement ce qui se passe lorsque le type est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-680">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="1e947-681">Il n’affecte pas toutes les exceptions qui peuvent être levées.</span><span class="sxs-lookup"><span data-stu-id="1e947-681">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="1e947-682">En particulier, si le type est trouvé mais ne peut pas être chargé, <xref:System.TypeLoadException> peut être levée même si `throwOnError` est `false`.</span><span class="sxs-lookup"><span data-stu-id="1e947-682">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e947-683"><paramref name="name" /> n'est pas valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-683"><paramref name="name" /> is invalid.</span></span>  
  
 <span data-ttu-id="1e947-684">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-684">-or-</span></span>  
  
 <span data-ttu-id="1e947-685">La longueur de <paramref name="name" /> dépasse 1 024 caractères.</span><span class="sxs-lookup"><span data-stu-id="1e947-685">The length of <paramref name="name" /> exceeds 1024 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-686"><paramref name="name" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-686"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1e947-687"><paramref name="throwOnError" /> a la valeur <see langword="true" /> et le type est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-687"><paramref name="throwOnError" /> is <see langword="true" />, and the type cannot be found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-688"><paramref name="name" /> requiert un assembly dépendant qui est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-688"><paramref name="name" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1e947-689"><paramref name="name" /> nécessite un assembly dépendant qui a été trouvé, mais qui n’a pas pu être chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-689"><paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
 <span data-ttu-id="1e947-690">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-690">-or-</span></span>  
  
 <span data-ttu-id="1e947-691">L’assembly actuel a été chargé dans le contexte ReflectionOnly, et <paramref name="name" /> nécessite un assembly dépendant qui n’a pas été préchargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-691">The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-692"><paramref name="name" /> nécessite un assembly dépendant, mais le fichier n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-692"><paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-693">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-693">-or-</span></span>  
  
 <span data-ttu-id="1e947-694"><paramref name="name" /> nécessite un assembly dépendant qui a été compilé pour une version du runtime ultérieure à la version actuellement chargée.</span><span class="sxs-lookup"><span data-stu-id="1e947-694"><paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-695">Obtient les types définis dans cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-695">Gets the types defined in this assembly.</span></span></summary>
        <returns><span data-ttu-id="1e947-696">Tableau qui contient tous les types définis dans cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-696">An array that contains all the types that are defined in this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-697">Le tableau retourné inclut des types imbriqués.</span><span class="sxs-lookup"><span data-stu-id="1e947-697">The returned array includes nested types.</span></span>  
  
 <span data-ttu-id="1e947-698">Si le <xref:System.Reflection.Assembly.GetTypes%2A> méthode est appelée sur un assembly et un type de cet assembly est dépendant d’un type dans un assembly qui n’a pas été chargé (par exemple, si elle dérive d’un type du second assembly), un <xref:System.Reflection.ReflectionTypeLoadException> est levée.</span><span class="sxs-lookup"><span data-stu-id="1e947-698">If the <xref:System.Reflection.Assembly.GetTypes%2A> method is called on an assembly and a type in that assembly is dependent on a type in an assembly that has not been loaded (for example, if it derives from a type in the second assembly), a <xref:System.Reflection.ReflectionTypeLoadException> is thrown.</span></span> <span data-ttu-id="1e947-699">Par exemple, cela peut se produire si le premier assembly a été chargé avec le <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> ou <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> méthodes et le second assembly n’a pas été chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-699">For example, this can happen if the first assembly was loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> or <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods, and the second assembly was not loaded.</span></span> <span data-ttu-id="1e947-700">Il peut également se produire avec les assemblys chargés à l’aide de la <xref:System.Reflection.Assembly.Load%2A> et <xref:System.Reflection.Assembly.LoadFile%2A> méthodes si le second assembly ne peut pas être localisé lorsque le <xref:System.Reflection.Assembly.GetTypes%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="1e947-700">It can also happen with assemblies loaded using the <xref:System.Reflection.Assembly.Load%2A> and <xref:System.Reflection.Assembly.LoadFile%2A> methods if the second assembly cannot be located when the <xref:System.Reflection.Assembly.GetTypes%2A> method is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-701">Si un type a été transmis à un autre assembly, il n’est pas inclus dans le tableau retourné.</span><span class="sxs-lookup"><span data-stu-id="1e947-701">If a type has been forwarded to another assembly, it is not included in the returned array.</span></span> <span data-ttu-id="1e947-702">Pour plus d’informations sur le transfert de type, consultez [transfert de Type dans le Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="1e947-702">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="1e947-703">Pour récupérer une collection de <xref:System.Reflection.TypeInfo> des objets au lieu d’un tableau de <xref:System.Type> objets, utilisez le <xref:System.Reflection.Assembly.DefinedTypes%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="1e947-703">To retrieve a collection of <xref:System.Reflection.TypeInfo> objects instead of an array of <xref:System.Type> objects, use the <xref:System.Reflection.Assembly.DefinedTypes%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-704">L’exemple suivant affiche les paramètres d’une méthode sur un type dans l’assembly spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-704">The following example displays parameters of one method on a type in the specified assembly.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#11)]
 [!code-csharp[System.Reflection.Assembly#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#11)]
 [!code-vb[System.Reflection.Assembly#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException"><span data-ttu-id="1e947-705">L’assembly contient un ou plusieurs types qui ne peuvent pas être chargés.</span><span class="sxs-lookup"><span data-stu-id="1e947-705">The assembly contains one or more types that cannot be loaded.</span></span> <span data-ttu-id="1e947-706">Le tableau retourné par la propriété <see cref="P:System.Reflection.ReflectionTypeLoadException.Types" /> de cette exception contient un objet <see cref="T:System.Type" /> pour chaque type qui a été chargé et <see langword="null" /> pour chaque type qui n’a pas pu être chargé, tandis que la propriété <see cref="P:System.Reflection.ReflectionTypeLoadException.LoaderExceptions" /> contient une exception pour chaque type qui n’a pas pu être chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-706">The array returned by the <see cref="P:System.Reflection.ReflectionTypeLoadException.Types" /> property of this exception contains a <see cref="T:System.Type" /> object for each type that was loaded and <see langword="null" /> for each type that could not be loaded, while the <see cref="P:System.Reflection.ReflectionTypeLoadException.LoaderExceptions" /> property contains an exception for each type that could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public virtual bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool GlobalAssemblyCache { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-707">Obtient une valeur indiquant si l'assembly a été chargé à partir du Global Assembly Cache.</span><span class="sxs-lookup"><span data-stu-id="1e947-707">Gets a value indicating whether the assembly was loaded from the global assembly cache.</span></span></summary>
        <value>
          <span data-ttu-id="1e947-708"><see langword="true" /> si l'assembly a été chargé à partir du Global Assembly Cache ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-708"><see langword="true" /> if the assembly was loaded from the global assembly cache; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public virtual long HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HostContext" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.HostContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostContext As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long HostContext { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-709">Obtient le contexte hôte avec lequel l'assembly a été chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-709">Gets the host context with which the assembly was loaded.</span></span></summary>
        <value><span data-ttu-id="1e947-710">Valeur <see cref="T:System.Int64" /> qui indique le contexte hôte avec lequel l'assembly a été chargé, le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="1e947-710">An <see cref="T:System.Int64" /> value that indicates the host context with which the assembly was loaded, if any.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRuntimeVersion">
      <MemberSignature Language="C#" Value="public virtual string ImageRuntimeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageRuntimeVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ImageRuntimeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImageRuntimeVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageRuntimeVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-711">Obtient une représentation sous forme de chaîne de la version du Common Language Runtime (CLR) enregistrée dans le fichier contenant le manifeste.</span><span class="sxs-lookup"><span data-stu-id="1e947-711">Gets a string representing the version of the common language runtime (CLR) saved in the file containing the manifest.</span></span></summary>
        <value><span data-ttu-id="1e947-712">Nom du dossier de la version CLR.</span><span class="sxs-lookup"><span data-stu-id="1e947-712">The CLR version folder name.</span></span> <span data-ttu-id="1e947-713">Il ne s’agit pas d’un chemin d’accès complet.</span><span class="sxs-lookup"><span data-stu-id="1e947-713">This is not a full path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-714">Par exemple, la valeur de la version 1.1 du .NET Framework serait v1.1.4322.</span><span class="sxs-lookup"><span data-stu-id="1e947-714">For example, the value for the .NET Framework version 1.1 would be v1.1.4322.</span></span> <span data-ttu-id="1e947-715">Les fichiers binaires pour cette version sont introuvable dans le chemin d’accès % windir%\Microsoft.NET\Framework\v1.1.4322.</span><span class="sxs-lookup"><span data-stu-id="1e947-715">The binary files for that version would be located in the path %windir%\Microsoft.NET\Framework\v1.1.4322.</span></span>  
  
 <span data-ttu-id="1e947-716">Par défaut, <xref:System.Reflection.Assembly.ImageRuntimeVersion%2A> est définie sur la version du CLR utilisée pour générer l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-716">By default, <xref:System.Reflection.Assembly.ImageRuntimeVersion%2A> is set to the version of the CLR used to build the assembly.</span></span> <span data-ttu-id="1e947-717">Toutefois, elle peut avoir été définie à une autre valeur au moment de la compilation.</span><span class="sxs-lookup"><span data-stu-id="1e947-717">However, it might have been set to another value at compile time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public virtual bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="1e947-718">Type de l'attribut à vérifier pour cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-718">The type of the attribute to be checked for this assembly.</span></span></param>
        <param name="inherit"><span data-ttu-id="1e947-719">Cet argument est ignoré pour les objets de ce type.</span><span class="sxs-lookup"><span data-stu-id="1e947-719">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="1e947-720">Indique si un attribut spécifié a été appliqué à l'assembly ou non.</span><span class="sxs-lookup"><span data-stu-id="1e947-720">Indicates whether or not a specified attribute has been applied to the assembly.</span></span></summary>
        <returns>
          <span data-ttu-id="1e947-721"><see langword="true" /> si l'attribut a été appliqué à l'assembly ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-721"><see langword="true" /> if the attribute has been applied to the assembly; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e947-722">L’exemple de code suivant applique la <xref:System.Reflection.AssemblyTitleAttribute> attribut à un assembly, puis utilise <xref:System.Reflection.Assembly.IsDefined%2A> pour indiquer s’il a été appliqué.</span><span class="sxs-lookup"><span data-stu-id="1e947-722">The following code example applies the <xref:System.Reflection.AssemblyTitleAttribute> attribute to an assembly and then uses <xref:System.Reflection.Assembly.IsDefined%2A> to indicate whether it was applied.</span></span> <span data-ttu-id="1e947-723">Il teste également un attribut qui n’a été appliqué.</span><span class="sxs-lookup"><span data-stu-id="1e947-723">It also tests an attribute that was not applied.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.isdefined/CS/isdefined.cs#1)]
 [!code-vb[System.Reflection.Assembly.IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.isdefined/VB/isdefined.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-724"><paramref name="attributeType" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-724"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e947-725"><paramref name="attributeType" /> utilise un type non valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-725"><paramref name="attributeType" /> uses an invalid type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C#" Value="public virtual bool IsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDynamic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-726">Obtient une valeur qui indique si l'assembly actuel a été généré dynamiquement dans le processus actuel à l'aide de l'émission de réflexion.</span><span class="sxs-lookup"><span data-stu-id="1e947-726">Gets a value that indicates whether the current assembly was generated dynamically in the current process by using reflection emit.</span></span></summary>
        <value>
          <span data-ttu-id="1e947-727"><see langword="true" /> si l'assembly actuel a été généré dynamiquement dans le processus actuel ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-727"><see langword="true" /> if the current assembly was generated dynamically in the current process; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-728">Assemblys dynamiques sont représentées par la classe dérivée <xref:System.Reflection.Emit.AssemblyBuilder>.</span><span class="sxs-lookup"><span data-stu-id="1e947-728">Dynamic assemblies are represented by the derived class <xref:System.Reflection.Emit.AssemblyBuilder>.</span></span>  
  
 <span data-ttu-id="1e947-729">Quand un assembly dynamique est enregistré sur le disque, l’assembly enregistré n’est pas dynamique.</span><span class="sxs-lookup"><span data-stu-id="1e947-729">When a dynamic assembly is saved to disk, the saved assembly is not dynamic.</span></span> <span data-ttu-id="1e947-730">Si l’assembly enregistré est chargé dans un autre domaine d’application ou processus, la <xref:System.Reflection.Assembly.IsDynamic%2A> propriété renvoie `false`.</span><span class="sxs-lookup"><span data-stu-id="1e947-730">If the saved assembly is loaded into another application domain or process, the <xref:System.Reflection.Assembly.IsDynamic%2A> property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFullyTrusted">
      <MemberSignature Language="C#" Value="public bool IsFullyTrusted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFullyTrusted" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.IsFullyTrusted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFullyTrusted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFullyTrusted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-731">Obtient une valeur qui indique si l'assembly actuel est chargé avec une confiance totale.</span><span class="sxs-lookup"><span data-stu-id="1e947-731">Gets a value that indicates whether the current assembly is loaded with full trust.</span></span></summary>
        <value>
          <span data-ttu-id="1e947-732"><see langword="true" /> si l'assembly actuel est chargé avec une confiance totale ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-732"><see langword="true" /> if the current assembly is loaded with full trust; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-733">Charge un assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-733">Loads an assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="1e947-734">Tableau d'octets qui est une image au format COFF contenant un assembly émis.</span><span class="sxs-lookup"><span data-stu-id="1e947-734">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <summary><span data-ttu-id="1e947-735">Charge l'assembly avec une image au format COFF (Common Object File Format) contenant un assembly émis.</span><span class="sxs-lookup"><span data-stu-id="1e947-735">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly.</span></span> <span data-ttu-id="1e947-736">L'assembly est chargé dans le domaine d'application de l'appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-736">The assembly is loaded into the application domain of the caller.</span></span></summary>
        <returns><span data-ttu-id="1e947-737">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-737">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-738">Le niveau de confiance d’un assembly est chargé à l’aide de cette méthode est le même que le niveau de confiance de l’assembly appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-738">The trust level of an assembly that is loaded by using this method is the same as the trust level of the calling assembly.</span></span> <span data-ttu-id="1e947-739">Pour charger un assembly à partir d’un tableau d’octets avec le niveau de confiance du domaine d’application, utilisez le <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="1e947-739">To load an assembly from a byte array with the trust level of the application domain, use the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> method overload.</span></span> <span data-ttu-id="1e947-740">Pour plus d’informations sur l’utilisation de la preuve avec les surcharges de la <xref:System.Reflection.Assembly.Load%2A> méthode qui acceptent les tableaux d’octets, consultez la <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="1e947-740">For more information about the use of evidence with overloads of the <xref:System.Reflection.Assembly.Load%2A> method that take byte arrays, see the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> method overload.</span></span>  
  
 <span data-ttu-id="1e947-741">La réflexion sur des fichiers exécutables C++ peut lever un <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="1e947-741">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="1e947-742">Cela est probablement provoqué par le compilateur C++ adresses de réadressage ou `.reloc` section à partir de votre fichier exécutable.</span><span class="sxs-lookup"><span data-stu-id="1e947-742">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="1e947-743">Pour conserver le `.reloc` l’adresse de votre fichier exécutable C++, spécifiez `/fixed:no` lors de la liaison.</span><span class="sxs-lookup"><span data-stu-id="1e947-743">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="1e947-744">Notez que cette surcharge de méthode crée toujours un nouveau <xref:System.Reflection.Assembly> objet avec son propre mappage.</span><span class="sxs-lookup"><span data-stu-id="1e947-744">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-745"><paramref name="rawAssembly" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-745"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-746"><paramref name="rawAssembly" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-746"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-747">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-747">-or-</span></span>  
  
 <span data-ttu-id="1e947-748">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="rawAssembly" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-748">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyRef As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyRef"><span data-ttu-id="1e947-749">Objet qui décrit l'assembly à charger.</span><span class="sxs-lookup"><span data-stu-id="1e947-749">The object that describes the assembly to be loaded.</span></span></param>
        <summary><span data-ttu-id="1e947-750">Charge un assembly en fonction de son <see cref="T:System.Reflection.AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-750">Loads an assembly given its <see cref="T:System.Reflection.AssemblyName" />.</span></span></summary>
        <returns><span data-ttu-id="1e947-751">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-751">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-752"><xref:System.IO.FileLoadException> est levée si `assemblyRef` Spécifie le nom complet de l’assembly et le premier assembly correspondant au nom simple a une version différente, la culture ou le jeton de clé publique.</span><span class="sxs-lookup"><span data-stu-id="1e947-752"><xref:System.IO.FileLoadException> is thrown if `assemblyRef` specifies the full assembly name and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="1e947-753">Le chargeur ne continue pas de détecter d’autres assemblys qui correspondent au nom simple.</span><span class="sxs-lookup"><span data-stu-id="1e947-753">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-754">N’utilisez pas un <xref:System.Reflection.AssemblyName> avec uniquement le <xref:System.Reflection.AssemblyName.CodeBase%2A> jeu de propriétés.</span><span class="sxs-lookup"><span data-stu-id="1e947-754">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="1e947-755">Le <xref:System.Reflection.AssemblyName.CodeBase%2A> propriété ne fournit pas tous les éléments de l’identité d’assembly (par exemple, le nom ou la version), ainsi le chargement ne se produit pas d’en fonction des règles de charge par identité, comme prévu à partir de la <xref:System.Reflection.Assembly.Load%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="1e947-755">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="1e947-756">Au lieu de cela, l’assembly est chargé à l’aide de règles de chargement.</span><span class="sxs-lookup"><span data-stu-id="1e947-756">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="1e947-757">Pour plus d’informations sur les inconvénients de l’utilisation du contexte de chargement, consultez la <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> surcharge de méthode ou [meilleures pratiques pour le chargement d’Assembly](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span><span class="sxs-lookup"><span data-stu-id="1e947-757">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
 <span data-ttu-id="1e947-758">L'octroi ou non de certaines autorisations à un assembly repose sur la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-758">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="1e947-759">Les règles d’assembly et la fusion de la preuve de sécurité sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="1e947-759">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="1e947-760">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode sans aucune <xref:System.Security.Policy.Evidence> paramètre, l’assembly est chargé avec la preuve fournie par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-760">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="1e947-761">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode avec un <xref:System.Security.Policy.Evidence> paramètre, les preuves sont fusionnées.</span><span class="sxs-lookup"><span data-stu-id="1e947-761">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="1e947-762">Preuves fournies en tant qu’argument à la <xref:System.Reflection.Assembly.Load%2A> méthode annulent et remplacent les preuves fournies par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-762">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="1e947-763">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> surcharge de méthode avec un `Byte[]` paramètre pour charger une image common object file format (COFF), la preuve est héritée de l’assembly appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-763">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="1e947-764">Cela s’applique à la version 1.1 du .NET Framework Service Pack 1 (SP1) et les versions ultérieures.</span><span class="sxs-lookup"><span data-stu-id="1e947-764">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e947-765">Dans le .NET Framework version 1.0 et dans la version 1.1 sans SP1, lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> surcharge de méthode avec un `Byte[]` paramètre pour charger une image COFF, la preuve est combinée.</span><span class="sxs-lookup"><span data-stu-id="1e947-765">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="1e947-766">`Zone`, `Url` et `Site` sont héritées de l’assembly appelant, et `Hash` et `StrongName` sont tirées de l’assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="1e947-766">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="1e947-767">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode avec un `Byte[]` paramètre et <xref:System.Security.Policy.Evidence> pour charger une image COFF, seule la preuve fournie est utilisée.</span><span class="sxs-lookup"><span data-stu-id="1e947-767">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="1e947-768">Preuve de l’assembly appelant et celle de l’image COFF sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="1e947-768">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="1e947-769">La réflexion sur des fichiers exécutables C++ peut lever un <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="1e947-769">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="1e947-770">Cela est probablement provoqué par le compilateur C++ adresses de réadressage ou `.reloc` section à partir de votre fichier exécutable.</span><span class="sxs-lookup"><span data-stu-id="1e947-770">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="1e947-771">Pour conserver le `.reloc` l’adresse de votre fichier exécutable C++, spécifiez `/fixed:no` lors de la liaison.</span><span class="sxs-lookup"><span data-stu-id="1e947-771">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-772">Si les deux le <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> propriété et la <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> sont définies, la première tentative de charger l’assembly utilise le nom complet (y compris la version, culture et ainsi de suite, tel que retourné par le <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> propriété).</span><span class="sxs-lookup"><span data-stu-id="1e947-772">If both the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property and the <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> property are set, the first attempt to load the assembly uses the display name (including version, culture, and so on, as returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property).</span></span> <span data-ttu-id="1e947-773">Si le fichier est introuvable, <xref:System.Reflection.AssemblyName.CodeBase%2A> est utilisé pour rechercher l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-773">If the file is not found, <xref:System.Reflection.AssemblyName.CodeBase%2A> is used to search for the assembly.</span></span> <span data-ttu-id="1e947-774">Si l’assembly se trouve à l’aide de <xref:System.Reflection.AssemblyName.CodeBase%2A>, le nom complet est comparé à l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-774">If the assembly is found using <xref:System.Reflection.AssemblyName.CodeBase%2A>, the display name is matched against the assembly.</span></span> <span data-ttu-id="1e947-775">Si la correspondance échoue, un <xref:System.IO.FileLoadException> est levée.</span><span class="sxs-lookup"><span data-stu-id="1e947-775">If the match fails, a <xref:System.IO.FileLoadException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-776">L’exemple suivant instancie un <xref:System.Reflection.AssemblyName> de l’objet et l’utilise pour charger le `sysglobal.dll` assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-776">The following example instantiates an <xref:System.Reflection.AssemblyName> object and uses it to load the `sysglobal.dll` assembly.</span></span> <span data-ttu-id="1e947-777">L’exemple affiche ensuite le nom complet de types publics de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-777">The example then displays the full name of the assembly's public types.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.Load#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.load/cs/Load2.cs#2)]
 [!code-vb[System.Reflection.Assembly.Load#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.load/vb/Load2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-778"><paramref name="assemblyRef" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-778"><paramref name="assemblyRef" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-779"><paramref name="assemblyRef" /> est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-779"><paramref name="assemblyRef" /> is not found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="1e947-780">Dans [.NET pour les applications du Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) ou la [Bibliothèque de classes portable](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), interceptez l’exception de la classe de base, <see cref="T:System.IO.IOException" />, à la place.</span><span class="sxs-lookup"><span data-stu-id="1e947-780">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="1e947-781">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-781">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-782"><paramref name="assemblyRef" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-782"><paramref name="assemblyRef" /> is not a valid assembly.</span></span> <span data-ttu-id="1e947-783">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-783">-or-</span></span>  
  
 <span data-ttu-id="1e947-784">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="assemblyRef" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-784">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-785">Pour accéder en lecture à partir d’un fichier ou un répertoire et pour l’accès aux informations dans le chemin d’accès lui-même.</span><span class="sxs-lookup"><span data-stu-id="1e947-785">for access to read from a file or directory, and for access to the information in the path itself.</span></span> <span data-ttu-id="1e947-786">Énumérations associées : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="1e947-786">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="1e947-787">pour lire un URI qui ne commence pas par « file:// ».</span><span class="sxs-lookup"><span data-stu-id="1e947-787">for reading a URI that does not begin with "file://".</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-788">pour charger un assembly avec la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-788">to load an assembly with evidence.</span></span> <span data-ttu-id="1e947-789">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1e947-789">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Reflection.AssemblyName" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (string assemblyString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(string assemblyString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyString As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::String ^ assemblyString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyString"><span data-ttu-id="1e947-790">Forme longue du nom d'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-790">The long form of the assembly name.</span></span></param>
        <summary><span data-ttu-id="1e947-791">Charge un assembly en fonction de la forme longue de son nom.</span><span class="sxs-lookup"><span data-stu-id="1e947-791">Loads an assembly given the long form of its name.</span></span></summary>
        <returns><span data-ttu-id="1e947-792">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-792">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-793">La forme longue du nom de l’assembly se compose de son nom simple (par exemple, « système » de l’assembly System.dll), ainsi que sa version, culture, jeton de clé publique et, éventuellement, son architecture de processeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-793">The long form of an assembly name consists of its simple name (such as "System" for the System.dll assembly) along with its version, culture, public key token, and optionally its processor architecture.</span></span> <span data-ttu-id="1e947-794">Il correspond à l’assembly <xref:System.Reflection.Assembly.FullName%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1e947-794">It corresponds to the assembly's <xref:System.Reflection.Assembly.FullName%2A> property.</span></span> <span data-ttu-id="1e947-795">L’exemple suivant illustre l’utilisation d’un nom de type long à charger l’assembly System.dll pour le .NET Framework 4.</span><span class="sxs-lookup"><span data-stu-id="1e947-795">The following example illustrates the use of a long name to load the System.dll assembly for the .NET Framework 4.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.Load#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.load/cs/load1.cs#1)]
 [!code-vb[System.Reflection.Assembly.Load#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.load/vb/load1.vb#1)]  
  
 <span data-ttu-id="1e947-796"><xref:System.IO.FileLoadException> est levée si `assemblyString` Spécifie le nom complet de l’assembly et le premier assembly correspondant au nom simple a une version différente, la culture ou le jeton de clé publique.</span><span class="sxs-lookup"><span data-stu-id="1e947-796"><xref:System.IO.FileLoadException> is thrown if `assemblyString` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="1e947-797">Le chargeur ne continue pas de détecter d’autres assemblys qui correspondent au nom simple.</span><span class="sxs-lookup"><span data-stu-id="1e947-797">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
 <span data-ttu-id="1e947-798">L'octroi ou non de certaines autorisations à un assembly repose sur la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-798">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="1e947-799">Les règles d’assembly et la fusion de la preuve de sécurité sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="1e947-799">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="1e947-800">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode sans aucune <xref:System.Security.Policy.Evidence> paramètre, l’assembly est chargé avec la preuve fournie par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-800">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="1e947-801">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode avec un <xref:System.Security.Policy.Evidence> paramètre, les preuves sont fusionnées.</span><span class="sxs-lookup"><span data-stu-id="1e947-801">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="1e947-802">Preuves fournies en tant qu’argument à la <xref:System.Reflection.Assembly.Load%2A> méthode annulent et remplacent les preuves fournies par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-802">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="1e947-803">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> surcharge de méthode avec un `Byte[]` paramètre pour charger une image common object file format (COFF), la preuve est héritée de l’assembly appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-803">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="1e947-804">Cela s’applique à la version 1.1 du .NET Framework Service Pack 1 (SP1) et les versions ultérieures.</span><span class="sxs-lookup"><span data-stu-id="1e947-804">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e947-805">Dans le .NET Framework version 1.0 et dans la version 1.1 sans SP1, lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> surcharge de méthode avec un `Byte[]` paramètre pour charger une image COFF, la preuve est combinée.</span><span class="sxs-lookup"><span data-stu-id="1e947-805">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="1e947-806">`Zone`, `Url` et `Site` sont héritées de l’assembly appelant, et `Hash` et `StrongName` sont tirées de l’assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="1e947-806">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="1e947-807">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode avec un `Byte[]` paramètre et <xref:System.Security.Policy.Evidence> pour charger une image COFF, seule la preuve fournie est utilisée.</span><span class="sxs-lookup"><span data-stu-id="1e947-807">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="1e947-808">Preuve de l’assembly appelant et celle de l’image COFF sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="1e947-808">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="1e947-809">La réflexion sur des fichiers exécutables C++ peut lever un <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="1e947-809">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="1e947-810">Cela est probablement provoqué par le compilateur C++ adresses de réadressage ou `.reloc` section à partir de votre fichier exécutable.</span><span class="sxs-lookup"><span data-stu-id="1e947-810">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="1e947-811">Pour conserver le `.reloc` l’adresse de votre fichier exécutable C++, spécifiez `/fixed:no` lors de la liaison.</span><span class="sxs-lookup"><span data-stu-id="1e947-811">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="1e947-812">Dans le .NET Framework version 2.0, architecture de processeur est ajoutée à l’identité de l’assembly et peut être spécifié en tant que partie de chaînes de nom d’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-812">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="1e947-813">Par exemple, « ProcessorArchitecture = msil ».</span><span class="sxs-lookup"><span data-stu-id="1e947-813">For example, "ProcessorArchitecture=msil".</span></span> <span data-ttu-id="1e947-814">Toutefois, la méthode recommandée pour spécifier un nom d’assembly consiste à créer un <xref:System.Reflection.AssemblyName> de l’objet et le passer à une surcharge appropriée de la <xref:System.Reflection.Assembly.Load%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="1e947-814">However, the recommended way to specify an assembly name is to create an <xref:System.Reflection.AssemblyName> object and pass it to an appropriate overload of the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="1e947-815">Consultez <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1e947-815">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-816">L’exemple suivant charge un assembly en fonction de son nom complet et répertorie tous les types contenus dans l’assembly spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-816">The following example loads an assembly given its fully qualified name, and lists all the types contained in the specified assembly.</span></span> <span data-ttu-id="1e947-817">Pour exécuter cet exemple de code, vous devez fournir le nom d’assembly qualifié complet.</span><span class="sxs-lookup"><span data-stu-id="1e947-817">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="1e947-818">Pour plus d’informations sur la façon d’obtenir le nom d’assembly qualifié complet, consultez [les noms d’assemblys](~/docs/framework/app-domains/assembly-names.md).</span><span class="sxs-lookup"><span data-stu-id="1e947-818">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[assembly.load1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.Load1/CPP/load1.cpp#1)]
 [!code-csharp[assembly.load1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.Load1/CS/load1.cs#1)]
 [!code-vb[assembly.load1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.Load1/VB/load1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-819"><paramref name="assemblyString" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-819"><paramref name="assemblyString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e947-820"><paramref name="assemblyString" /> est une chaîne de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="1e947-820"><paramref name="assemblyString" /> is a zero-length string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-821"><paramref name="assemblyString" /> est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-821"><paramref name="assemblyString" /> is not found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-822">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-822">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-823"><paramref name="assemblyString" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-823"><paramref name="assemblyString" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-824">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-824">-or-</span></span>  
  
 <span data-ttu-id="1e947-825">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="assemblyString" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-825">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-826">pour charger un assembly avec la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-826">to load an assembly with evidence.</span></span> <span data-ttu-id="1e947-827">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1e947-827">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Reflection.AssemblyName" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte(), rawSymbolStore As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="1e947-828">Tableau d'octets qui est une image au format COFF contenant un assembly émis.</span><span class="sxs-lookup"><span data-stu-id="1e947-828">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <param name="rawSymbolStore"><span data-ttu-id="1e947-829">Tableau d'octets qui contient les octets bruts représentant les symboles de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-829">A byte array that contains the raw bytes representing the symbols for the assembly.</span></span></param>
        <summary><span data-ttu-id="1e947-830">Charge l'assembly avec une image COFF (Common Object File Format) contenant un assembly émis qui inclut éventuellement des symboles de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-830">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols for the assembly.</span></span> <span data-ttu-id="1e947-831">L'assembly est chargé dans le domaine d'application de l'appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-831">The assembly is loaded into the application domain of the caller.</span></span></summary>
        <returns><span data-ttu-id="1e947-832">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-832">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-833">Le niveau de confiance d’un assembly est chargé à l’aide de cette méthode est le même que le niveau de confiance de l’assembly appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-833">The trust level of an assembly that is loaded by using this method is the same as the trust level of the calling assembly.</span></span> <span data-ttu-id="1e947-834">Pour charger un assembly à partir d’un tableau d’octets avec le niveau de confiance du domaine d’application, utilisez le <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="1e947-834">To load an assembly from a byte array with the trust level of the application domain, use the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> method overload.</span></span> <span data-ttu-id="1e947-835">Pour plus d’informations sur l’utilisation de la preuve avec les surcharges de la <xref:System.Reflection.Assembly.Load%2A> méthode qui acceptent les tableaux d’octets, consultez la <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="1e947-835">For more information about the use of evidence with overloads of the <xref:System.Reflection.Assembly.Load%2A> method that take byte arrays, see the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> method overload.</span></span>  
  
 <span data-ttu-id="1e947-836">La réflexion sur des fichiers exécutables C++ peut lever un <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="1e947-836">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="1e947-837">Cela est probablement provoqué par le compilateur C++ adresses de réadressage ou `.reloc` section à partir de votre fichier exécutable.</span><span class="sxs-lookup"><span data-stu-id="1e947-837">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="1e947-838">Pour conserver le `.reloc` l’adresse de votre fichier exécutable C++, spécifiez `/fixed:no` lors de la liaison.</span><span class="sxs-lookup"><span data-stu-id="1e947-838">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="1e947-839">Notez que cette surcharge de méthode crée toujours un nouveau <xref:System.Reflection.Assembly> objet avec son propre mappage.</span><span class="sxs-lookup"><span data-stu-id="1e947-839">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-840"><paramref name="rawAssembly" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-840"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-841"><paramref name="rawAssembly" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-841"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-842">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-842">-or-</span></span>  
  
 <span data-ttu-id="1e947-843">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="rawAssembly" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-843">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyRef As AssemblyName, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyRef"><span data-ttu-id="1e947-844">Objet qui décrit l'assembly à charger.</span><span class="sxs-lookup"><span data-stu-id="1e947-844">The object that describes the assembly to be loaded.</span></span></param>
        <param name="assemblySecurity"><span data-ttu-id="1e947-845">Preuve de chargement de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-845">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="1e947-846">Charge un assembly en fonction de son <see cref="T:System.Reflection.AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-846">Loads an assembly given its <see cref="T:System.Reflection.AssemblyName" />.</span></span> <span data-ttu-id="1e947-847">L'assembly est chargé dans le domaine de l'appelant à l'aide de la preuve fournie.</span><span class="sxs-lookup"><span data-stu-id="1e947-847">The assembly is loaded into the domain of the caller using the supplied evidence.</span></span></summary>
        <returns><span data-ttu-id="1e947-848">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-848">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-849"><xref:System.IO.FileLoadException> est levée si `assemblyRef` Spécifie le nom complet de l’assembly et le premier assembly correspondant au nom simple a une version différente, la culture ou le jeton de clé publique.</span><span class="sxs-lookup"><span data-stu-id="1e947-849"><xref:System.IO.FileLoadException> is thrown if `assemblyRef` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="1e947-850">Le chargeur ne continue pas de détecter d’autres assemblys qui correspondent au nom simple.</span><span class="sxs-lookup"><span data-stu-id="1e947-850">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-851">N’utilisez pas un <xref:System.Reflection.AssemblyName> avec uniquement le <xref:System.Reflection.AssemblyName.CodeBase%2A> jeu de propriétés.</span><span class="sxs-lookup"><span data-stu-id="1e947-851">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="1e947-852">Le <xref:System.Reflection.AssemblyName.CodeBase%2A> propriété ne fournit pas tous les éléments de l’identité d’assembly (par exemple, le nom ou la version), ainsi le chargement ne se produit pas d’en fonction des règles de charge par identité, comme prévu à partir de la <xref:System.Reflection.Assembly.Load%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="1e947-852">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="1e947-853">Au lieu de cela, l’assembly est chargé à l’aide de règles de chargement.</span><span class="sxs-lookup"><span data-stu-id="1e947-853">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="1e947-854">Pour plus d’informations sur les inconvénients de l’utilisation du contexte de chargement, consultez la <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> surcharge de méthode ou [meilleures pratiques pour le chargement d’Assembly](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span><span class="sxs-lookup"><span data-stu-id="1e947-854">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
 <span data-ttu-id="1e947-855">L'octroi ou non de certaines autorisations à un assembly repose sur la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-855">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="1e947-856">Les règles d’assembly et la fusion de la preuve de sécurité sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="1e947-856">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="1e947-857">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode sans aucune <xref:System.Security.Policy.Evidence> paramètre, l’assembly est chargé avec la preuve fournie par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-857">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="1e947-858">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode avec un <xref:System.Security.Policy.Evidence> paramètre, les preuves sont fusionnées.</span><span class="sxs-lookup"><span data-stu-id="1e947-858">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="1e947-859">Preuves fournies en tant qu’argument à la <xref:System.Reflection.Assembly.Load%2A> méthode annulent et remplacent les preuves fournies par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-859">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="1e947-860">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> surcharge de méthode avec un `Byte[]` paramètre pour charger une image common object file format (COFF), la preuve est héritée de l’assembly appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-860">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="1e947-861">Cela s’applique à la version 1.1 du .NET Framework Service Pack 1 (SP1) et les versions ultérieures.</span><span class="sxs-lookup"><span data-stu-id="1e947-861">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e947-862">Dans le .NET Framework version 1.0 et dans la version 1.1 sans SP1, lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> surcharge de méthode avec un `Byte[]` paramètre pour charger une image COFF, la preuve est combinée.</span><span class="sxs-lookup"><span data-stu-id="1e947-862">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="1e947-863">`Zone`, `Url` et `Site` sont héritées de l’assembly appelant, et `Hash` et `StrongName` sont tirées de l’assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="1e947-863">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="1e947-864">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode avec un `Byte[]` paramètre et <xref:System.Security.Policy.Evidence> pour charger une image COFF, seule la preuve fournie est utilisée.</span><span class="sxs-lookup"><span data-stu-id="1e947-864">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="1e947-865">Preuve de l’assembly appelant et celle de l’image COFF sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="1e947-865">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="1e947-866">La réflexion sur des fichiers exécutables C++ peut lever un <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="1e947-866">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="1e947-867">Cela est probablement provoqué par le compilateur C++ adresses de réadressage ou `.reloc` section à partir de votre fichier exécutable.</span><span class="sxs-lookup"><span data-stu-id="1e947-867">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="1e947-868">Pour conserver le `.reloc` l’adresse de votre fichier exécutable C++, spécifiez `/fixed:no` lors de la liaison.</span><span class="sxs-lookup"><span data-stu-id="1e947-868">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-869">Si les deux le <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> propriété et la <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> sont définies, la première tentative de charger l’assembly utilise le nom complet (y compris la version, culture et ainsi de suite, tel que retourné par le <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> propriété).</span><span class="sxs-lookup"><span data-stu-id="1e947-869">If both the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property and the <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> property are set, the first attempt to load the assembly uses the display name (including version, culture, and so on, as returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property).</span></span> <span data-ttu-id="1e947-870">Si le fichier est introuvable, <xref:System.Reflection.AssemblyName.CodeBase%2A> est utilisé pour rechercher l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-870">If the file is not found, <xref:System.Reflection.AssemblyName.CodeBase%2A> is used to search for the assembly.</span></span> <span data-ttu-id="1e947-871">Si l’assembly se trouve à l’aide de <xref:System.Reflection.AssemblyName.CodeBase%2A>, le nom complet est comparé à l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-871">If the assembly is found using <xref:System.Reflection.AssemblyName.CodeBase%2A>, the display name is matched against the assembly.</span></span> <span data-ttu-id="1e947-872">Si la correspondance échoue, un <xref:System.IO.FileLoadException> est levée.</span><span class="sxs-lookup"><span data-stu-id="1e947-872">If the match fails, a <xref:System.IO.FileLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="1e947-873">Si vous appelez le <xref:System.Reflection.Assembly.Load%2A> méthode plusieurs fois sur le même assembly, mais avec une preuve spécifiée différente, le common language runtime ne lève pas une <xref:System.IO.FileLoadException> , car l’égalité et l’intégrité des différentes spécifications de preuve ne peut pas être déterminé.</span><span class="sxs-lookup"><span data-stu-id="1e947-873">If you call the <xref:System.Reflection.Assembly.Load%2A> method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="1e947-874">La première preuve qui réussit est la preuve est utilisée.</span><span class="sxs-lookup"><span data-stu-id="1e947-874">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-875"><paramref name="assemblyRef" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-875"><paramref name="assemblyRef" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-876"><paramref name="assemblyRef" /> est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-876"><paramref name="assemblyRef" /> is not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-877"><paramref name="assemblyRef" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-877"><paramref name="assemblyRef" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-878">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-878">-or-</span></span>  
  
 <span data-ttu-id="1e947-879">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="assemblyRef" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-879">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-880">Un assembly ou un module a été chargé à deux reprises avec deux preuves différentes.</span><span class="sxs-lookup"><span data-stu-id="1e947-880">An assembly or module was loaded twice with two different evidences.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-881">Pour accéder en lecture à partir d’un fichier ou un répertoire et pour l’accès aux informations dans le chemin d’accès lui-même.</span><span class="sxs-lookup"><span data-stu-id="1e947-881">for access to read from a file or directory, and for access to the information in the path itself.</span></span> <span data-ttu-id="1e947-882">Énumérations associées : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="1e947-882">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="1e947-883">pour lire un URI qui ne commence pas par « file:// ».</span><span class="sxs-lookup"><span data-stu-id="1e947-883">for reading a URI that does not begin with "file://".</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-884">pour charger un assembly avec la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-884">to load an assembly with evidence.</span></span> <span data-ttu-id="1e947-885">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1e947-885">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(string assemblyString, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyString As String, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::String ^ assemblyString, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyString"><span data-ttu-id="1e947-886">Nom complet de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-886">The display name of the assembly.</span></span></param>
        <param name="assemblySecurity"><span data-ttu-id="1e947-887">Preuve de chargement de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-887">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="1e947-888">Charge un assembly en fonction de son nom complet, en le chargeant dans le domaine de l'appelant à l'aide de la preuve fournie.</span><span class="sxs-lookup"><span data-stu-id="1e947-888">Loads an assembly given its display name, loading the assembly into the domain of the caller using the supplied evidence.</span></span></summary>
        <returns><span data-ttu-id="1e947-889">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-889">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-890"><xref:System.IO.FileLoadException> est levée si `assemblyString` Spécifie le nom complet de l’assembly et le premier assembly correspondant au nom simple a une version différente, la culture ou le jeton de clé publique.</span><span class="sxs-lookup"><span data-stu-id="1e947-890"><xref:System.IO.FileLoadException> is thrown if `assemblyString` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="1e947-891">Le chargeur ne continue pas de détecter d’autres assemblys qui correspondent au nom simple.</span><span class="sxs-lookup"><span data-stu-id="1e947-891">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
 <span data-ttu-id="1e947-892">L'octroi ou non de certaines autorisations à un assembly repose sur la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-892">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="1e947-893">Les règles d’assembly et la fusion de la preuve de sécurité sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="1e947-893">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="1e947-894">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode sans aucune <xref:System.Security.Policy.Evidence> paramètre, l’assembly est chargé avec la preuve fournie par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-894">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="1e947-895">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode avec un <xref:System.Security.Policy.Evidence> paramètre, les preuves sont fusionnées.</span><span class="sxs-lookup"><span data-stu-id="1e947-895">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="1e947-896">Preuves fournies en tant qu’argument à la <xref:System.Reflection.Assembly.Load%2A> méthode annulent et remplacent les preuves fournies par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-896">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="1e947-897">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> surcharge de méthode avec un `Byte[]` paramètre pour charger une image common object file format (COFF), la preuve est héritée de l’assembly appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-897">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="1e947-898">Cela s’applique à la version 1.1 du .NET Framework Service Pack 1 (SP1) et les versions ultérieures.</span><span class="sxs-lookup"><span data-stu-id="1e947-898">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e947-899">Dans le .NET Framework version 1.0 et dans la version 1.1 sans SP1, lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> surcharge de méthode avec un `Byte[]` paramètre pour charger une image COFF, la preuve est combinée.</span><span class="sxs-lookup"><span data-stu-id="1e947-899">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="1e947-900">`Zone`, `Url` et `Site` sont héritées de l’assembly appelant, et `Hash` et `StrongName` sont tirées de l’assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="1e947-900">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="1e947-901">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode avec un `Byte[]` paramètre et <xref:System.Security.Policy.Evidence> pour charger une image COFF, seule la preuve fournie est utilisée.</span><span class="sxs-lookup"><span data-stu-id="1e947-901">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="1e947-902">Preuve de l’assembly appelant et celle de l’image COFF sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="1e947-902">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="1e947-903">La réflexion sur des fichiers exécutables C++ peut lever un <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="1e947-903">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="1e947-904">Cela est probablement provoqué par le compilateur C++ adresses de réadressage ou `.reloc` section à partir de votre fichier exécutable.</span><span class="sxs-lookup"><span data-stu-id="1e947-904">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="1e947-905">Pour conserver le `.reloc` l’adresse de votre fichier exécutable C++, spécifiez `/fixed:no` lors de la liaison.</span><span class="sxs-lookup"><span data-stu-id="1e947-905">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="1e947-906">Si vous appelez cette méthode plusieurs fois sur le même assembly, mais avec une preuve spécifiée différente, le common language runtime ne lève pas une <xref:System.IO.FileLoadException> , car il est impossible de déterminer l’égalité et l’intégrité des différentes spécifications de preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-906">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="1e947-907">La première preuve qui réussit est la preuve est utilisée.</span><span class="sxs-lookup"><span data-stu-id="1e947-907">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 <span data-ttu-id="1e947-908">Dans le .NET Framework version 2.0, architecture de processeur est ajoutée à l’identité de l’assembly et peut être spécifié en tant que partie de chaînes de nom d’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-908">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="1e947-909">Par exemple, « ProcessorArchitecture = msil ».</span><span class="sxs-lookup"><span data-stu-id="1e947-909">For example, "ProcessorArchitecture=msil".</span></span> <span data-ttu-id="1e947-910">Toutefois, la méthode recommandée pour spécifier un nom d’assembly consiste à créer un <xref:System.Reflection.AssemblyName> de l’objet et le passer à une surcharge appropriée de la <xref:System.Reflection.Assembly.Load%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="1e947-910">However, the recommended way to specify an assembly name is to create an <xref:System.Reflection.AssemblyName> object and pass it to an appropriate overload of the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="1e947-911">Consultez <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1e947-911">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-912"><paramref name="assemblyString" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-912"><paramref name="assemblyString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-913"><paramref name="assemblyString" /> est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-913"><paramref name="assemblyString" /> is not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-914"><paramref name="assemblyString" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-914"><paramref name="assemblyString" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-915">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-915">-or-</span></span>  
  
 <span data-ttu-id="1e947-916">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="assemblyString" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-916">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-917">Un fichier qui a été trouvé n’a pas pu être chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-917">A file that was found could not be loaded.</span></span>  
  
 <span data-ttu-id="1e947-918">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-918">-or-</span></span>  
  
 <span data-ttu-id="1e947-919">Un assembly ou un module a été chargé à deux reprises avec deux preuves différentes.</span><span class="sxs-lookup"><span data-stu-id="1e947-919">An assembly or module was loaded twice with two different evidences.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-920">pour charger un assembly avec la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-920">to load an assembly with evidence.</span></span> <span data-ttu-id="1e947-921">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1e947-921">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte(), rawSymbolStore As Byte(), securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="1e947-922">Tableau d'octets qui est une image au format COFF contenant un assembly émis.</span><span class="sxs-lookup"><span data-stu-id="1e947-922">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <param name="rawSymbolStore"><span data-ttu-id="1e947-923">Tableau d'octets qui contient les octets bruts représentant les symboles de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-923">A byte array that contains the raw bytes representing the symbols for the assembly.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="1e947-924">Preuve de chargement de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-924">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="1e947-925">Charge l'assembly avec une image COFF (Common Object File Format) contenant un assembly émis qui inclut éventuellement des symboles et des preuves de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-925">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols and evidence for the assembly.</span></span> <span data-ttu-id="1e947-926">L'assembly est chargé dans le domaine d'application de l'appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-926">The assembly is loaded into the application domain of the caller.</span></span></summary>
        <returns><span data-ttu-id="1e947-927">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-927">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-928">L'assembly est chargé dans le domaine de l'appelant à l'aide de la preuve fournie.</span><span class="sxs-lookup"><span data-stu-id="1e947-928">The assembly is loaded into the domain of the caller using the supplied evidence.</span></span> <span data-ttu-id="1e947-929">Les octets bruts représentant les symboles de l’assembly sont également chargés.</span><span class="sxs-lookup"><span data-stu-id="1e947-929">The raw bytes representing the symbols for the assembly are also loaded.</span></span>  
  
 <span data-ttu-id="1e947-930">L'octroi ou non de certaines autorisations à un assembly repose sur la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-930">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="1e947-931">Les règles d’assembly et la fusion de la preuve de sécurité sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="1e947-931">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="1e947-932">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode sans aucune <xref:System.Security.Policy.Evidence> paramètre, l’assembly est chargé avec la preuve fournie par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-932">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="1e947-933">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode avec un <xref:System.Security.Policy.Evidence> paramètre, les preuves sont fusionnées.</span><span class="sxs-lookup"><span data-stu-id="1e947-933">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="1e947-934">Preuves fournies en tant qu’argument à la <xref:System.Reflection.Assembly.Load%2A> méthode annulent et remplacent les preuves fournies par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-934">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="1e947-935">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> surcharge de méthode avec un `Byte[]` paramètre pour charger une image COFF, la preuve est héritée de l’assembly appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-935">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="1e947-936">Cela s’applique à la version 1.1 du .NET Framework Service Pack 1 (SP1) et les versions ultérieures.</span><span class="sxs-lookup"><span data-stu-id="1e947-936">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e947-937">Dans le .NET Framework version 1.0 et dans la version 1.1 sans SP1, lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> surcharge de méthode avec un `Byte[]` paramètre pour charger une image COFF, la preuve est combinée.</span><span class="sxs-lookup"><span data-stu-id="1e947-937">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="1e947-938">`Zone`, `Url` et `Site` sont héritées de l’assembly appelant, et `Hash` et `StrongName` sont tirées de l’assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="1e947-938">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="1e947-939">Lorsque vous utilisez un <xref:System.Reflection.Assembly.Load%2A> méthode avec un `Byte[]` paramètre et <xref:System.Security.Policy.Evidence> pour charger une image COFF, seule la preuve fournie est utilisée.</span><span class="sxs-lookup"><span data-stu-id="1e947-939">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="1e947-940">Preuve de l’assembly appelant et celle de l’image COFF sont ignorées.</span><span class="sxs-lookup"><span data-stu-id="1e947-940">Evidence of the calling assembly and evidence of the COFF image are ignored.</span></span>  
  
 <span data-ttu-id="1e947-941">La réflexion sur des fichiers exécutables C++ peut lever un <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="1e947-941">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="1e947-942">Cela est probablement provoqué par le compilateur C++ adresses de réadressage ou `.reloc` section à partir de votre fichier exécutable.</span><span class="sxs-lookup"><span data-stu-id="1e947-942">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="1e947-943">Pour conserver le `.reloc` l’adresse de votre fichier exécutable C++, spécifiez `/fixed:no` lors de la liaison.</span><span class="sxs-lookup"><span data-stu-id="1e947-943">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="1e947-944">Si vous appelez le [\], octet\<xref:System.Reflection.Assembly.Load%2A > méthode plusieurs fois sur le même assembly, mais avec une preuve spécifiée différente, le common language runtime ne lève pas une <xref:System.IO.FileLoadException> , car le Impossible de déterminer l’égalité et l’intégrité des différentes spécifications de preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-944">If you call the [\], Byte\<xref:System.Reflection.Assembly.Load%2A> method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="1e947-945">La première preuve qui réussit est la preuve est utilisée.</span><span class="sxs-lookup"><span data-stu-id="1e947-945">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 <span data-ttu-id="1e947-946">Notez que cette surcharge de méthode crée toujours un nouveau <xref:System.Reflection.Assembly> objet avec son propre mappage.</span><span class="sxs-lookup"><span data-stu-id="1e947-946">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-947"><paramref name="rawAssembly" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-947"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-948"><paramref name="rawAssembly" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-948"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-949">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-949">-or-</span></span>  
  
 <span data-ttu-id="1e947-950">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="rawAssembly" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-950">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-951">Un assembly ou un module a été chargé à deux reprises avec deux preuves différentes.</span><span class="sxs-lookup"><span data-stu-id="1e947-951">An assembly or module was loaded twice with two different evidences.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1e947-952"><paramref name="securityEvidence" /> n’est pas un <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-952"><paramref name="securityEvidence" /> is not <see langword="null" />.</span></span>  <span data-ttu-id="1e947-953">Par défaut, la stratégie CAS héritée n’est pas activée dans [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] ; quand elle n’est pas activée, <paramref name="securityEvidence" /> doit avoir la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-953">By default, legacy CAS policy is not enabled in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; when it is not enabled, <paramref name="securityEvidence" /> must be <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-954">pour la capacité à fournir une preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-954">for the ability to supply evidence.</span></span> <span data-ttu-id="1e947-955">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-955">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span></span> <span data-ttu-id="1e947-956">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-956">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.SecurityContextSource securityContextSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore, valuetype System.Security.SecurityContextSource securityContextSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore, System::Security::SecurityContextSource securityContextSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        <Parameter Name="securityContextSource" Type="System.Security.SecurityContextSource" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="1e947-957">Tableau d'octets qui est une image au format COFF contenant un assembly émis.</span><span class="sxs-lookup"><span data-stu-id="1e947-957">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <param name="rawSymbolStore"><span data-ttu-id="1e947-958">Tableau d'octets qui contient les octets bruts représentant les symboles de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-958">A byte array that contains the raw bytes representing the symbols for the assembly.</span></span></param>
        <param name="securityContextSource"><span data-ttu-id="1e947-959">Source du contexte de sécurité.</span><span class="sxs-lookup"><span data-stu-id="1e947-959">The source of the security context.</span></span></param>
        <summary><span data-ttu-id="1e947-960">Charge l'assembly avec une image COFF (Common Object File Format) contenant un assembly émis qui inclut éventuellement des symboles et qui spécifie la source du contexte de sécurité.</span><span class="sxs-lookup"><span data-stu-id="1e947-960">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols and specifying the source for the security context.</span></span> <span data-ttu-id="1e947-961">L'assembly est chargé dans le domaine d'application de l'appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-961">The assembly is loaded into the application domain of the caller.</span></span></summary>
        <returns><span data-ttu-id="1e947-962">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-962">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-963">L’assembly est chargé dans le domaine d’application de l’appelant à l’aide de la source spécifiée pour le contexte de sécurité.</span><span class="sxs-lookup"><span data-stu-id="1e947-963">The assembly is loaded into the application domain of the caller using the specified source for the security context.</span></span> <span data-ttu-id="1e947-964">Si `rawSymbolStore` a été spécifié, les octets bruts représentant les symboles de l’assembly sont également chargés.</span><span class="sxs-lookup"><span data-stu-id="1e947-964">If `rawSymbolStore` was specified, the raw bytes that represent the symbols for the assembly are also loaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-965"><paramref name="rawAssembly" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-965"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-966"><paramref name="rawAssembly" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-966"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-967">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-967">-or-</span></span>  
  
 <span data-ttu-id="1e947-968"><paramref name="rawAssembly" /> a été compilé avec une version du Common Language Runtime ultérieure à la version actuellement chargée.</span><span class="sxs-lookup"><span data-stu-id="1e947-968"><paramref name="rawAssembly" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1e947-969">La valeur de <paramref name="securityContextSource" />  n'est pas l'une des valeurs d'énumération.</span><span class="sxs-lookup"><span data-stu-id="1e947-969">The value of <paramref name="securityContextSource" /> is not one of the enumeration values.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFile">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-970">Charge le contenu d'un fichier d'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-970">Loads the contents of an assembly file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFile (path As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1e947-971">Chemin d’accès complet du fichier à charger.</span><span class="sxs-lookup"><span data-stu-id="1e947-971">The fully qualified path of the file to load.</span></span></param>
        <summary><span data-ttu-id="1e947-972">Charge le contenu d’un fichier d’assembly sur le chemin d’accès spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-972">Loads the contents of an assembly file on the specified path.</span></span></summary>
        <returns><span data-ttu-id="1e947-973">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-973">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-974">Utilisez la <xref:System.Reflection.Assembly.LoadFile%2A> méthode pour charger et examiner les assemblys qui ont la même identité, mais qui se trouvent dans des chemins d’accès.<xref:System.Reflection.Assembly.LoadFile%2A></span><span class="sxs-lookup"><span data-stu-id="1e947-974">Use the <xref:System.Reflection.Assembly.LoadFile%2A> method to load and examine assemblies that have the same identity, but are located in different paths.<xref:System.Reflection.Assembly.LoadFile%2A></span></span> <span data-ttu-id="1e947-975">ne pas charger des fichiers dans le contexte de chargement et ne résout pas les dépendances à l’aide du chemin de chargement, comme le <xref:System.Reflection.Assembly.LoadFrom%2A> méthode.</span><span class="sxs-lookup"><span data-stu-id="1e947-975">does not load files into the load-from  context, and does not resolve dependencies using the load path, as the <xref:System.Reflection.Assembly.LoadFrom%2A> method does.</span></span> <span data-ttu-id="1e947-976"><xref:System.Reflection.Assembly.LoadFile%2A> est utile dans ce scénario spécifique, car <xref:System.Reflection.Assembly.LoadFrom%2A> ne peut pas être utilisé pour charger les assemblys qui ont la même identité mais des chemins d’accès ; il chargera uniquement le premier tel assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-976"><xref:System.Reflection.Assembly.LoadFile%2A> is useful in this limited scenario because <xref:System.Reflection.Assembly.LoadFrom%2A> cannot be used to load assemblies that have the same identities but different paths; it will load only the first such assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e947-977">L’argument <paramref name="path" /> n’est pas un chemin absolu.</span><span class="sxs-lookup"><span data-stu-id="1e947-977">The <paramref name="path" /> argument is not an absolute path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1e947-978">Le paramètre <paramref name="path" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-978">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-979">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-979">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e947-980">Le paramètre <paramref name="path" /> est une chaîne vide ("") ou n'existe pas.</span><span class="sxs-lookup"><span data-stu-id="1e947-980">The <paramref name="path" /> parameter is an empty string ("") or does not exist.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-981"><paramref name="path" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-981"><paramref name="path" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-982">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-982">-or-</span></span>  
  
 <span data-ttu-id="1e947-983">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="path" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-983">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="path" /> was compiled with a later version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-984">Pour accéder en lecture à partir d’un fichier ou un répertoire et pour l’accès aux informations dans le chemin d’accès lui-même.</span><span class="sxs-lookup"><span data-stu-id="1e947-984">for access to read from a file or directory, and for access to the information in the path itself.</span></span> <span data-ttu-id="1e947-985">Énumérations associées : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="1e947-985">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-986">pour charger un assembly avec la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-986">to load an assembly with evidence.</span></span> <span data-ttu-id="1e947-987">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1e947-987">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFile (string path, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFile(string path, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFile (path As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFile(System::String ^ path, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1e947-988">Chemin complet du fichier d’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-988">The fully qualified path of the assembly file.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="1e947-989">Preuve de chargement de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-989">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="1e947-990">Charge un assembly en fonction de son chemin d’accès, en le chargeant dans le domaine de l’appelant à l’aide de la preuve fournie.</span><span class="sxs-lookup"><span data-stu-id="1e947-990">Loads an assembly given its path, loading the assembly into the domain of the caller using the supplied evidence.</span></span></summary>
        <returns><span data-ttu-id="1e947-991">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-991">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-992">Utilisez la <xref:System.Reflection.Assembly.LoadFile%2A> méthode pour charger et examiner les assemblys qui ont la même identité, mais qui se trouvent dans des chemins d’accès.</span><span class="sxs-lookup"><span data-stu-id="1e947-992">Use the <xref:System.Reflection.Assembly.LoadFile%2A> method to load and examine assemblies that have the same identity, but are located in different paths.</span></span> <span data-ttu-id="1e947-993"><xref:System.Reflection.Assembly.LoadFile%2A> ne pas charger des fichiers dans le <xref:System.Reflection.Assembly.LoadFrom%2A> contexte et ne résout pas les dépendances à l’aide du chemin de chargement, comme le <xref:System.Reflection.Assembly.LoadFrom%2A> méthode.</span><span class="sxs-lookup"><span data-stu-id="1e947-993"><xref:System.Reflection.Assembly.LoadFile%2A> does not load files into the <xref:System.Reflection.Assembly.LoadFrom%2A> context, and does not resolve dependencies using the load path, as the <xref:System.Reflection.Assembly.LoadFrom%2A> method does.</span></span> <span data-ttu-id="1e947-994"><xref:System.Reflection.Assembly.LoadFile%2A> est utile dans ce scénario spécifique, car <xref:System.Reflection.Assembly.LoadFrom%2A> ne peut pas être utilisé pour charger les assemblys qui ont la même identité mais des chemins d’accès ; il chargera uniquement le premier tel assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-994"><xref:System.Reflection.Assembly.LoadFile%2A> is useful in this limited scenario because <xref:System.Reflection.Assembly.LoadFrom%2A> cannot be used to load assemblies that have the same identities but different paths; it will load only the first such assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e947-995">L’argument <paramref name="path" /> n’est pas un chemin absolu.</span><span class="sxs-lookup"><span data-stu-id="1e947-995">The <paramref name="path" /> argument is not an absolute path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1e947-996">Le paramètre <paramref name="path" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-996">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1e947-997">Le paramètre <paramref name="path" /> est une chaîne vide ("") ou n'existe pas.</span><span class="sxs-lookup"><span data-stu-id="1e947-997">The <paramref name="path" /> parameter is an empty string ("") or does not exist.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-998">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-998">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-999"><paramref name="path" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-999"><paramref name="path" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-1000">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-1000">-or-</span></span>  
  
 <span data-ttu-id="1e947-1001">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="path" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-1001">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="path" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1e947-1002"><paramref name="securityEvidence" /> n’est pas un <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1002"><paramref name="securityEvidence" /> is not <see langword="null" />.</span></span> <span data-ttu-id="1e947-1003">Par défaut, la stratégie CAS héritée n’est pas activée dans [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] ; quand elle n’est pas activée, <paramref name="securityEvidence" /> doit avoir la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1003">By default, legacy CAS policy is not enabled in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; when it is not enabled, <paramref name="securityEvidence" /> must be <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-1004">Pour accéder en lecture à partir d’un fichier ou un répertoire et pour l’accès aux informations dans le chemin d’accès lui-même.</span><span class="sxs-lookup"><span data-stu-id="1e947-1004">for access to read from a file or directory, and for access to the information in the path itself.</span></span> <span data-ttu-id="1e947-1005">Énumérations associées : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="1e947-1005">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-1006">pour charger un assembly avec la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-1006">to load an assembly with evidence.</span></span> <span data-ttu-id="1e947-1007">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1e947-1007">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-1008">Charge un assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1008">Loads an assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="1e947-1009">Nom ou chemin d’accès du fichier qui contient le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1009">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <summary><span data-ttu-id="1e947-1010">Charge un assembly en fonction de son nom de fichier ou de son chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="1e947-1010">Loads an assembly given its file name or path.</span></span></summary>
        <returns><span data-ttu-id="1e947-1011">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1011">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-1012">Le `assemblyFile` paramètre doit faire référence à un URI sans caractères d’échappement.</span><span class="sxs-lookup"><span data-stu-id="1e947-1012">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="1e947-1013">Cette méthode fournit des caractères d’échappement pour tous les caractères non valides dans l’URI.</span><span class="sxs-lookup"><span data-stu-id="1e947-1013">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-1014">Protocole de transfert de fichiers (FTP) n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="1e947-1014">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="1e947-1015">Si l’URI fourni pour `assemblyFile` est une adresse FTP, l’assembly n’est pas chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1015">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="1e947-1016">Aucune exception n'est levée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1016">No exception is thrown.</span></span>  
  
 <span data-ttu-id="1e947-1017">`assemblyFile` peut être absolu ou relatif au répertoire en cours, et l’assembly est chargé dans le domaine de l’appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-1017">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="1e947-1018">Les assemblys peuvent être chargés dans un des trois contextes, ou peuvent être chargés sans contexte :</span><span class="sxs-lookup"><span data-stu-id="1e947-1018">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="1e947-1019">Le contexte de chargement contient des assemblys trouvés par la détection : dans le GAC, dans un assembly hôte stocker si le runtime est hébergé, ou dans le <xref:System.AppDomainSetup.ApplicationBase%2A> et <xref:System.AppDomainSetup.PrivateBinPath%2A> du domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="1e947-1019">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="1e947-1020">La plupart des surcharges de la méthode <xref:System.Reflection.Assembly.Load%2A> chargent les assemblys dans ce contexte.</span><span class="sxs-lookup"><span data-stu-id="1e947-1020">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="1e947-1021">Le contexte de chargement contient des assemblys pour lesquels l’utilisateur a fourni un chemin d’accès non inclus dans les répertoires de recherche par la détection.</span><span class="sxs-lookup"><span data-stu-id="1e947-1021">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="1e947-1022"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> et <xref:System.AppDomain.ExecuteAssembly%2A> sont des exemples de méthodes qui sont chargées via un chemin.</span><span class="sxs-lookup"><span data-stu-id="1e947-1022"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="1e947-1023">Le contexte de réflexion uniquement contient des assemblys chargés avec les <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> et <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> des méthodes, le code dans ces contextes ne peut pas être exécutées.</span><span class="sxs-lookup"><span data-stu-id="1e947-1023">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="1e947-1024">Si l’utilisateur a généré ou trouvé l’assembly, il n’est pas dans n’importe quel contexte.</span><span class="sxs-lookup"><span data-stu-id="1e947-1024">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="1e947-1025">Cela s’applique aux assemblys chargés à l’aide de surcharges de la <xref:System.Reflection.Assembly.Load%2A> méthode qui spécifient un tableau d’octets contenant un assembly et aux assemblys dynamiques transitoires créés avec la réflexion l’émission et pas enregistré sur le disque.</span><span class="sxs-lookup"><span data-stu-id="1e947-1025">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="1e947-1026">Le contexte de chargement permet à un assembly doit être chargé à partir d’un chemin d’accès non inclus dans la détection et permet cependant les dépendances sur ce chemin d’accès pour trouver et de charger, car les informations de chemin d’accès sont conservées par le contexte.</span><span class="sxs-lookup"><span data-stu-id="1e947-1026">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="1e947-1027">Le <xref:System.Reflection.Assembly.LoadFrom%2A> méthode présente les inconvénients suivants.</span><span class="sxs-lookup"><span data-stu-id="1e947-1027">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="1e947-1028">Utilisez <xref:System.Reflection.Assembly.Load%2A> à la place.</span><span class="sxs-lookup"><span data-stu-id="1e947-1028">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="1e947-1029">Si un assembly avec la même identité est déjà chargé, <xref:System.Reflection.Assembly.LoadFrom%2A> retourne l’assembly chargé même si un autre chemin a été spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-1029">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="1e947-1030">Si un assembly est chargé avec <xref:System.Reflection.Assembly.LoadFrom%2A>et ultérieurement un assembly dans le contexte de chargement essaie de charger le même assembly par nom complet, la tentative de chargement échoue.</span><span class="sxs-lookup"><span data-stu-id="1e947-1030">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="1e947-1031">Cela peut se produire lorsqu’un assembly est désérialisé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1031">This can occur when an assembly is de-serialized.</span></span>  
  
-   <span data-ttu-id="1e947-1032">Si un assembly est chargé avec <xref:System.Reflection.Assembly.LoadFrom%2A>, et le chemin d’accès de détection inclut un assembly avec la même identité mais un emplacement différent, un <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, ou tout autre comportement inattendu peut se produire.</span><span class="sxs-lookup"><span data-stu-id="1e947-1032">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="1e947-1033"><xref:System.Reflection.Assembly.LoadFrom%2A> demande <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> et <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, ou <xref:System.Net.WebPermission>, sur le chemin spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-1033"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="1e947-1034">S’il existe une image native pour `assemblyFile`, il n’est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1034">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="1e947-1035">L’assembly ne peut pas être chargé comme indépendant du domaine.</span><span class="sxs-lookup"><span data-stu-id="1e947-1035">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="1e947-1036">Dans la version 1.0 et 1.1 du .NET Framework, la stratégie n’est pas appliquée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1036">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-1037">L’exemple suivant charge un assembly en fonction de son nom de fichier ou le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="1e947-1037">The following example loads an assembly given its file name or path.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#11)]
 [!code-csharp[System.Reflection.Assembly#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#11)]
 [!code-vb[System.Reflection.Assembly#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-1038"><paramref name="assemblyFile" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1038"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-1039"><paramref name="assemblyFile" /> est introuvable ou le module que vous tentez de charger ne spécifie pas d'extension de nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="1e947-1039"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-1040">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-1040">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-1041"><paramref name="assemblyFile" /> n'est pas un assembly valide ; par exemple, un assembly 32 bits dans un processus 64 bits.</span><span class="sxs-lookup"><span data-stu-id="1e947-1041"><paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span></span> <span data-ttu-id="1e947-1042">Pour plus d’informations, consultez la rubrique sur les exceptions.</span><span class="sxs-lookup"><span data-stu-id="1e947-1042">See the exception topic for more information.</span></span>  
  
 <span data-ttu-id="1e947-1043">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-1043">-or-</span></span>  
  
 <span data-ttu-id="1e947-1044">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="assemblyFile" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-1044">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e947-1045">Un code base qui ne commence pas par "file://" a été spécifié sans le <see cref="T:System.Net.WebPermission" /> requis.</span><span class="sxs-lookup"><span data-stu-id="1e947-1045">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e947-1046">Le paramètre <paramref name="assemblyFile" /> est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="1e947-1046">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="1e947-1047">Le nom de l’assembly comprend plus de MAX_PATH caractères.</span><span class="sxs-lookup"><span data-stu-id="1e947-1047">The assembly name is longer than MAX_PATH characters.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-1048">pour lire un URI qui commence par « file:// ».</span><span class="sxs-lookup"><span data-stu-id="1e947-1048">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="1e947-1049">Énumération associée : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="1e947-1049">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="1e947-1050">pour lire un URI qui ne commence pas par « file:// ».</span><span class="sxs-lookup"><span data-stu-id="1e947-1050">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="1e947-1051">Nom ou chemin d’accès du fichier qui contient le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1051">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="1e947-1052">Preuve de chargement de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1052">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="1e947-1053">Charge un assembly en fonction de son nom de fichier ou de son chemin d’accès et en fournissant la preuve de sécurité.</span><span class="sxs-lookup"><span data-stu-id="1e947-1053">Loads an assembly given its file name or path and supplying security evidence.</span></span></summary>
        <returns><span data-ttu-id="1e947-1054">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1054">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-1055">Le `assemblyFile` paramètre doit faire référence à un URI sans caractères d’échappement.</span><span class="sxs-lookup"><span data-stu-id="1e947-1055">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="1e947-1056">Cette méthode fournit des caractères d’échappement pour tous les caractères non valides dans l’URI.</span><span class="sxs-lookup"><span data-stu-id="1e947-1056">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-1057">Protocole de transfert de fichiers (FTP) n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="1e947-1057">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="1e947-1058">Si l’URI fourni pour `assemblyFile` est une adresse FTP, l’assembly n’est pas chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1058">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="1e947-1059">Aucune exception n'est levée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1059">No exception is thrown.</span></span>  
  
 <span data-ttu-id="1e947-1060">`assemblyFile` peut être absolu ou relatif au répertoire en cours, et l’assembly est chargé dans le domaine de l’appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-1060">`assemblyFile` may be absolute or  relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="1e947-1061">Les assemblys peuvent être chargés dans un des trois contextes, ou peuvent être chargés sans contexte :</span><span class="sxs-lookup"><span data-stu-id="1e947-1061">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="1e947-1062">Le contexte de chargement contient des assemblys trouvés par la détection : dans le GAC, dans un assembly hôte stocker si le runtime est hébergé, ou dans le <xref:System.AppDomainSetup.ApplicationBase%2A> et <xref:System.AppDomainSetup.PrivateBinPath%2A> du domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="1e947-1062">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="1e947-1063">La plupart des surcharges de la méthode <xref:System.Reflection.Assembly.Load%2A> chargent les assemblys dans ce contexte.</span><span class="sxs-lookup"><span data-stu-id="1e947-1063">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="1e947-1064">Le contexte de chargement contient des assemblys pour lesquels l’utilisateur a fourni un chemin d’accès non inclus dans les répertoires de recherche par la détection.</span><span class="sxs-lookup"><span data-stu-id="1e947-1064">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="1e947-1065"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> et <xref:System.AppDomain.ExecuteAssembly%2A> sont des exemples de méthodes qui sont chargées via un chemin.</span><span class="sxs-lookup"><span data-stu-id="1e947-1065"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="1e947-1066">Le contexte de réflexion uniquement contient des assemblys chargés avec les <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> et <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> des méthodes, le code dans ces contextes ne peut pas être exécutées.</span><span class="sxs-lookup"><span data-stu-id="1e947-1066">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="1e947-1067">Si l’utilisateur a généré ou trouvé l’assembly, il n’est pas dans n’importe quel contexte.</span><span class="sxs-lookup"><span data-stu-id="1e947-1067">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="1e947-1068">Cela s’applique aux assemblys chargés à l’aide de surcharges de la <xref:System.Reflection.Assembly.Load%2A> méthode qui spécifient un tableau d’octets contenant un assembly et aux assemblys dynamiques transitoires créés avec la réflexion l’émission et pas enregistré sur le disque.</span><span class="sxs-lookup"><span data-stu-id="1e947-1068">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="1e947-1069">Le contexte de chargement permet à un assembly doit être chargé à partir d’un chemin d’accès non inclus dans la détection et permet cependant les dépendances sur ce chemin d’accès pour trouver et de charger, car les informations de chemin d’accès sont conservées par le contexte.</span><span class="sxs-lookup"><span data-stu-id="1e947-1069">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="1e947-1070">Le <xref:System.Reflection.Assembly.LoadFrom%2A> méthode présente les inconvénients suivants.</span><span class="sxs-lookup"><span data-stu-id="1e947-1070">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="1e947-1071">Utilisez <xref:System.Reflection.Assembly.Load%2A> à la place.</span><span class="sxs-lookup"><span data-stu-id="1e947-1071">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="1e947-1072">Si un assembly avec la même identité est déjà chargé, <xref:System.Reflection.Assembly.LoadFrom%2A> retourne l’assembly chargé même si un autre chemin a été spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-1072">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="1e947-1073">Si un assembly est chargé avec <xref:System.Reflection.Assembly.LoadFrom%2A>et ultérieurement un assembly dans le contexte de chargement essaie de charger le même assembly par nom complet, la tentative de chargement échoue.</span><span class="sxs-lookup"><span data-stu-id="1e947-1073">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="1e947-1074">Ceci peut se produire quand un assembly est désérialisé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1074">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="1e947-1075">Si un assembly est chargé avec <xref:System.Reflection.Assembly.LoadFrom%2A>, et le chemin d’accès de détection inclut un assembly avec la même identité mais un emplacement différent, un <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, ou tout autre comportement inattendu peut se produire.</span><span class="sxs-lookup"><span data-stu-id="1e947-1075">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="1e947-1076"><xref:System.Reflection.Assembly.LoadFrom%2A> demande <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> et <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, ou <xref:System.Net.WebPermission>, sur le chemin spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-1076"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="1e947-1077">S’il existe une image native pour `assemblyFile`, il n’est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1077">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="1e947-1078">L’assembly ne peut pas être chargé comme indépendant du domaine.</span><span class="sxs-lookup"><span data-stu-id="1e947-1078">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="1e947-1079">Dans la version 1.0 et 1.1 du .NET Framework, la stratégie n’est pas appliquée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1079">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
 <span data-ttu-id="1e947-1080">L'octroi ou non de certaines autorisations à un assembly repose sur la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-1080">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="1e947-1081">Les règles d’assembly et la fusion de la preuve de sécurité sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="1e947-1081">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="1e947-1082">Lorsque vous utilisez un <xref:System.Reflection.Assembly.LoadFrom%2A> méthode sans aucune <xref:System.Security.Policy.Evidence> paramètre, l’assembly est chargé avec la preuve fournie par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-1082">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="1e947-1083">Lorsque vous utilisez un <xref:System.Reflection.Assembly.LoadFrom%2A> méthode avec un <xref:System.Security.Policy.Evidence> paramètre, les preuves sont fusionnées.</span><span class="sxs-lookup"><span data-stu-id="1e947-1083">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="1e947-1084">Preuves fournies en tant qu’argument à la <xref:System.Reflection.Assembly.LoadFrom%2A> méthode annulent et remplacent les preuves fournies par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-1084">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.LoadFrom%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="1e947-1085">Si vous appelez cette méthode plusieurs fois sur le même assembly, mais avec une preuve spécifiée différente, le common language runtime ne lève pas une <xref:System.IO.FileLoadException> , car il est impossible de déterminer l’égalité et l’intégrité des différentes spécifications de preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-1085">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="1e947-1086">La première preuve qui réussit est la preuve est utilisée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1086">The evidence that first succeeds is the evidence that is used.</span></span>  
  
-   <span data-ttu-id="1e947-1087">Lorsque vous utilisez un <xref:System.Reflection.Assembly.LoadFrom%2A> méthode avec un `Byte[]` paramètre pour charger une image common object file format (COFF), la preuve est combinée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1087">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is combined.</span></span> <span data-ttu-id="1e947-1088">`Zone`, `Url` et `Site` sont héritées de l’assembly appelant, et `Hash` et `StrongName` sont tirées de l’assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="1e947-1088">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="1e947-1089">Lorsque vous utilisez un <xref:System.Reflection.Assembly.LoadFrom%2A> méthode avec un `Byte[]` paramètre et <xref:System.Security.Policy.Evidence> pour charger une image COFF, seule la preuve fournie est utilisée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1089">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="1e947-1090">Preuve de l’assembly appelant et celle de l’image COFF sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="1e947-1090">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-1091"><paramref name="assemblyFile" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1091"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-1092"><paramref name="assemblyFile" /> est introuvable ou le module que vous tentez de charger ne spécifie pas d'extension de nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="1e947-1092"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-1093">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-1093">A file that was found could not be loaded.</span></span>  
  
 <span data-ttu-id="1e947-1094">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-1094">-or-</span></span>  
  
 <span data-ttu-id="1e947-1095"><paramref name="securityEvidence" /> n'est pas ambigu et est considéré comme étant non valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-1095">The <paramref name="securityEvidence" /> is not ambiguous and is determined to be invalid.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-1096"><paramref name="assemblyFile" /> n'est pas un assembly valide ; par exemple, un assembly 32 bits dans un processus 64 bits.</span><span class="sxs-lookup"><span data-stu-id="1e947-1096"><paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span></span> <span data-ttu-id="1e947-1097">Pour plus d’informations, consultez la rubrique sur les exceptions.</span><span class="sxs-lookup"><span data-stu-id="1e947-1097">See the exception topic for more information.</span></span>  
  
 <span data-ttu-id="1e947-1098">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-1098">-or-</span></span>  
  
 <span data-ttu-id="1e947-1099">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="assemblyFile" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-1099">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e947-1100">Un code base qui ne commence pas par "file://" a été spécifié sans le <see cref="T:System.Net.WebPermission" /> requis.</span><span class="sxs-lookup"><span data-stu-id="1e947-1100">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e947-1101">Le paramètre <paramref name="assemblyFile" /> est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="1e947-1101">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="1e947-1102">Le nom de l’assembly comprend plus de MAX_PATH caractères.</span><span class="sxs-lookup"><span data-stu-id="1e947-1102">The assembly name is longer than MAX_PATH characters.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-1103">pour charger un assembly avec la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-1103">to load an assembly with evidence.</span></span> <span data-ttu-id="1e947-1104">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1e947-1104">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-1105">pour lire un URI qui commence par « file:// ».</span><span class="sxs-lookup"><span data-stu-id="1e947-1105">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="1e947-1106">Énumération associée : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="1e947-1106">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="1e947-1107">pour lire un URI qui ne commence pas par « file:// ».</span><span class="sxs-lookup"><span data-stu-id="1e947-1107">for reading a URI that does not begin with "file://".</span></span></permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="1e947-1108">Nom ou chemin d’accès du fichier qui contient le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1108">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <param name="hashValue"><span data-ttu-id="1e947-1109">Valeur du code de hachage calculé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1109">The value of the computed hash code.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="1e947-1110">Algorithme de hachage utilisé pour hacher les fichiers et pour générer le nom fort.</span><span class="sxs-lookup"><span data-stu-id="1e947-1110">The hash algorithm used for hashing files and for generating the strong name.</span></span></param>
        <summary><span data-ttu-id="1e947-1111">Charge un assembly en fonction de son nom de fichier ou de son chemin d’accès, de la valeur de hachage et de l’algorithme de hachage.</span><span class="sxs-lookup"><span data-stu-id="1e947-1111">Loads an assembly given its file name or path, hash value, and hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="1e947-1112">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1112">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-1113">Le `assemblyFile` paramètre doit faire référence à un URI sans caractères d’échappement.</span><span class="sxs-lookup"><span data-stu-id="1e947-1113">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="1e947-1114">Cette méthode fournit des caractères d’échappement pour tous les caractères non valides dans l’URI.</span><span class="sxs-lookup"><span data-stu-id="1e947-1114">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-1115">Protocole de transfert de fichiers (FTP) n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="1e947-1115">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="1e947-1116">Si l’URI fourni pour `assemblyFile` est une adresse FTP, l’assembly n’est pas chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1116">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="1e947-1117">Aucune exception n'est levée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1117">No exception is thrown.</span></span>  
  
 <span data-ttu-id="1e947-1118">`assemblyFile` peut être absolu ou relatif au répertoire en cours, et l’assembly est chargé dans le domaine de l’appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-1118">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="1e947-1119">Les assemblys peuvent être chargés dans un des trois contextes, ou peuvent être chargés sans contexte :</span><span class="sxs-lookup"><span data-stu-id="1e947-1119">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="1e947-1120">Le contexte de chargement contient des assemblys trouvés par la détection : dans le global assembly cache, dans un assembly hôte stocker si le runtime est hébergé, ou dans le <xref:System.AppDomainSetup.ApplicationBase%2A> et <xref:System.AppDomainSetup.PrivateBinPath%2A> du domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="1e947-1120">The load context contains assemblies found by probing: in the global assembly cache, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="1e947-1121">La plupart des surcharges de la méthode <xref:System.Reflection.Assembly.Load%2A> chargent les assemblys dans ce contexte.</span><span class="sxs-lookup"><span data-stu-id="1e947-1121">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="1e947-1122">Le contexte de chargement contient des assemblys pour lesquels l’utilisateur a fourni un chemin d’accès n’est pas inclus dans la détection.</span><span class="sxs-lookup"><span data-stu-id="1e947-1122">The load-from context contains assemblies for which the user provided a path that is not included in probing.</span></span> <span data-ttu-id="1e947-1123"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> et <xref:System.AppDomain.ExecuteAssembly%2A> sont des exemples de méthodes qui sont chargées via un chemin.</span><span class="sxs-lookup"><span data-stu-id="1e947-1123"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="1e947-1124">Le contexte de réflexion uniquement contient des assemblys chargés avec les <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> et <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> des méthodes, le code dans ces contextes ne peut pas être exécutées.</span><span class="sxs-lookup"><span data-stu-id="1e947-1124">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="1e947-1125">Si l’utilisateur a généré ou trouvé l’assembly, il n’est pas dans n’importe quel contexte.</span><span class="sxs-lookup"><span data-stu-id="1e947-1125">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="1e947-1126">Cela s’applique aux assemblys chargés à l’aide de surcharges de la <xref:System.Reflection.Assembly.Load%2A> méthode qui spécifient un tableau d’octets contenant un assembly et aux assemblys dynamiques transitoires créés avec la réflexion l’émission et pas enregistré sur le disque.</span><span class="sxs-lookup"><span data-stu-id="1e947-1126">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="1e947-1127">Le contexte de chargement permet à un assembly doit être chargé à partir d’un chemin d’accès n’est pas inclus dans la détection et permet cependant les dépendances sur ce chemin d’accès pour trouver et de charger, car les informations de chemin d’accès sont conservées par le contexte.</span><span class="sxs-lookup"><span data-stu-id="1e947-1127">The load-from context allows an assembly to be loaded from a path that is not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="1e947-1128">Le <xref:System.Reflection.Assembly.LoadFrom%2A> méthode présente les inconvénients suivants.</span><span class="sxs-lookup"><span data-stu-id="1e947-1128">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="1e947-1129">Utilisez <xref:System.Reflection.Assembly.Load%2A> à la place.</span><span class="sxs-lookup"><span data-stu-id="1e947-1129">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="1e947-1130">Si un assembly avec la même identité est déjà chargé, <xref:System.Reflection.Assembly.LoadFrom%2A> retourne l’assembly chargé même si un autre chemin a été spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-1130">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="1e947-1131">Si un assembly est chargé avec <xref:System.Reflection.Assembly.LoadFrom%2A>et ultérieurement un assembly dans le contexte de chargement essaie de charger le même assembly par nom complet, la tentative de chargement échoue.</span><span class="sxs-lookup"><span data-stu-id="1e947-1131">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="1e947-1132">Ceci peut se produire quand un assembly est désérialisé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1132">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="1e947-1133">Si un assembly est chargé avec <xref:System.Reflection.Assembly.LoadFrom%2A>, et le chemin d’accès de détection inclut un assembly avec la même identité mais un emplacement différent, un <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, ou tout autre comportement inattendu peut se produire.</span><span class="sxs-lookup"><span data-stu-id="1e947-1133">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="1e947-1134"><xref:System.Reflection.Assembly.LoadFrom%2A> demande <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> et <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, ou <xref:System.Net.WebPermission>, sur le chemin spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-1134"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="1e947-1135">S’il existe une image native pour `assemblyFile`, il n’est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1135">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="1e947-1136">L’assembly ne peut pas être chargé comme étant indépendant du domaine.</span><span class="sxs-lookup"><span data-stu-id="1e947-1136">The assembly cannot be loaded as domain-neutral.</span></span>  
  
 <span data-ttu-id="1e947-1137">L’assembly est chargé avec la preuve fournie par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-1137">The assembly is loaded with the evidence that the loader supplies.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-1138"><paramref name="assemblyFile" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1138"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-1139"><paramref name="assemblyFile" /> est introuvable ou le module que vous essayez de charger ne spécifie pas une extension de nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="1e947-1139"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-1140">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-1140">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-1141"><paramref name="assemblyFile" /> n'est pas un assembly valide ; par exemple, un assembly 32 bits dans un processus 64 bits.</span><span class="sxs-lookup"><span data-stu-id="1e947-1141"><paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span></span> <span data-ttu-id="1e947-1142">Pour plus d’informations, consultez la rubrique sur les exceptions.</span><span class="sxs-lookup"><span data-stu-id="1e947-1142">See the exception topic for more information.</span></span>  
  
 <span data-ttu-id="1e947-1143">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-1143">-or-</span></span>  
  
 <span data-ttu-id="1e947-1144"><paramref name="assemblyFile" /> a été compilé avec une version du Common Language Runtime ultérieure à la version actuellement chargée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1144"><paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e947-1145">Un code base qui ne commence pas par "file://" a été spécifié sans le <see cref="T:System.Net.WebPermission" /> requis.</span><span class="sxs-lookup"><span data-stu-id="1e947-1145">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e947-1146">Le paramètre <paramref name="assemblyFile" /> est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="1e947-1146">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="1e947-1147">Le nom de l’assembly comprend plus de MAX_PATH caractères.</span><span class="sxs-lookup"><span data-stu-id="1e947-1147">The assembly name is longer than MAX_PATH characters.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-1148">pour charger un assembly avec la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-1148">to load an assembly with evidence.</span></span> <span data-ttu-id="1e947-1149">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1e947-1149">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-1150">pour lire un URI qui commence par « file:// ».</span><span class="sxs-lookup"><span data-stu-id="1e947-1150">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="1e947-1151">Énumération associée : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="1e947-1151">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="1e947-1152">pour lire un URI qui ne commence pas par « file:// ».</span><span class="sxs-lookup"><span data-stu-id="1e947-1152">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, class System.Security.Policy.Evidence securityEvidence, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, securityEvidence As Evidence, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ securityEvidence, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="1e947-1153">Nom ou chemin d’accès du fichier qui contient le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1153">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="1e947-1154">Preuve de chargement de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1154">Evidence for loading the assembly.</span></span></param>
        <param name="hashValue"><span data-ttu-id="1e947-1155">Valeur du code de hachage calculé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1155">The value of the computed hash code.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="1e947-1156">Algorithme de hachage utilisé pour hacher les fichiers et pour générer le nom fort.</span><span class="sxs-lookup"><span data-stu-id="1e947-1156">The hash algorithm used for hashing files and for generating the strong name.</span></span></param>
        <summary><span data-ttu-id="1e947-1157">Charge un assembly en fonction de son nom de fichier ou de son chemin d’accès, de la preuve de sécurité, de la valeur de hachage et de l’algorithme de hachage.</span><span class="sxs-lookup"><span data-stu-id="1e947-1157">Loads an assembly given its file name or path, security evidence, hash value, and hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="1e947-1158">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1158">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-1159">Le `assemblyFile` paramètre doit faire référence à un URI sans caractères d’échappement.</span><span class="sxs-lookup"><span data-stu-id="1e947-1159">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="1e947-1160">Cette méthode fournit des caractères d’échappement pour tous les caractères non valides dans l’URI.</span><span class="sxs-lookup"><span data-stu-id="1e947-1160">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-1161">Protocole de transfert de fichiers (FTP) n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="1e947-1161">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="1e947-1162">Si l’URI fourni pour `assemblyFile` est une adresse FTP, l’assembly n’est pas chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1162">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="1e947-1163">Aucune exception n'est levée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1163">No exception is thrown.</span></span>  
  
 <span data-ttu-id="1e947-1164">`assemblyFile` peut être absolu ou relatif au répertoire en cours, et l’assembly est chargé dans le domaine de l’appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-1164">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="1e947-1165">Les assemblys peuvent être chargés dans un des trois contextes, ou peuvent être chargés sans contexte :</span><span class="sxs-lookup"><span data-stu-id="1e947-1165">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="1e947-1166">Le contexte de chargement contient des assemblys trouvés par la détection : dans le GAC, dans un assembly hôte stocker si le runtime est hébergé, ou dans le <xref:System.AppDomainSetup.ApplicationBase%2A> et <xref:System.AppDomainSetup.PrivateBinPath%2A> du domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="1e947-1166">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="1e947-1167">La plupart des surcharges de la méthode <xref:System.Reflection.Assembly.Load%2A> chargent les assemblys dans ce contexte.</span><span class="sxs-lookup"><span data-stu-id="1e947-1167">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="1e947-1168">Le contexte de chargement contient des assemblys pour lesquels l’utilisateur a fourni un chemin d’accès non inclus dans les répertoires de recherche par la détection.</span><span class="sxs-lookup"><span data-stu-id="1e947-1168">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="1e947-1169"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> et <xref:System.AppDomain.ExecuteAssembly%2A> sont des exemples de méthodes qui sont chargées via un chemin.</span><span class="sxs-lookup"><span data-stu-id="1e947-1169"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="1e947-1170">Le contexte de réflexion uniquement contient des assemblys chargés avec les <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> et <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> des méthodes, le code dans ces contextes ne peut pas être exécutées.</span><span class="sxs-lookup"><span data-stu-id="1e947-1170">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="1e947-1171">Si l’utilisateur a généré ou trouvé l’assembly, il n’est pas dans n’importe quel contexte.</span><span class="sxs-lookup"><span data-stu-id="1e947-1171">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="1e947-1172">Cela s’applique aux assemblys chargés à l’aide de surcharges de la <xref:System.Reflection.Assembly.Load%2A> méthode qui spécifient un tableau d’octets contenant un assembly et aux assemblys dynamiques transitoires créés avec la réflexion l’émission et pas enregistré sur le disque.</span><span class="sxs-lookup"><span data-stu-id="1e947-1172">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="1e947-1173">Le contexte de chargement permet à un assembly doit être chargé à partir d’un chemin d’accès non inclus dans la détection et permet cependant les dépendances sur ce chemin d’accès pour trouver et de charger, car les informations de chemin d’accès sont conservées par le contexte.</span><span class="sxs-lookup"><span data-stu-id="1e947-1173">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="1e947-1174">Le <xref:System.Reflection.Assembly.LoadFrom%2A> méthode présente les inconvénients suivants.</span><span class="sxs-lookup"><span data-stu-id="1e947-1174">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="1e947-1175">Utilisez <xref:System.Reflection.Assembly.Load%2A> à la place.</span><span class="sxs-lookup"><span data-stu-id="1e947-1175">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="1e947-1176">Si un assembly avec la même identité est déjà chargé, <xref:System.Reflection.Assembly.LoadFrom%2A> retourne l’assembly chargé même si un autre chemin a été spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-1176">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="1e947-1177">Si un assembly est chargé avec <xref:System.Reflection.Assembly.LoadFrom%2A>et ultérieurement un assembly dans le contexte de chargement essaie de charger le même assembly par nom complet, la tentative de chargement échoue.</span><span class="sxs-lookup"><span data-stu-id="1e947-1177">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="1e947-1178">Ceci peut se produire quand un assembly est désérialisé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1178">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="1e947-1179">Si un assembly est chargé avec <xref:System.Reflection.Assembly.LoadFrom%2A>, et le chemin d’accès de détection inclut un assembly avec la même identité mais un emplacement différent, un <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, ou tout autre comportement inattendu peut se produire.</span><span class="sxs-lookup"><span data-stu-id="1e947-1179">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="1e947-1180"><xref:System.Reflection.Assembly.LoadFrom%2A> demande <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> et <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, ou <xref:System.Net.WebPermission>, sur le chemin spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e947-1180"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="1e947-1181">S’il existe une image native pour `assemblyFile`, il n’est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1181">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="1e947-1182">L’assembly ne peut pas être chargé comme indépendant du domaine.</span><span class="sxs-lookup"><span data-stu-id="1e947-1182">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="1e947-1183">Dans la version 1.0 et 1.1 du .NET Framework, la stratégie n’est pas appliquée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1183">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
 <span data-ttu-id="1e947-1184">L'octroi ou non de certaines autorisations à un assembly repose sur la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-1184">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="1e947-1185">Les règles d’assembly et la fusion de la preuve de sécurité sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="1e947-1185">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="1e947-1186">Lorsque vous utilisez un <xref:System.Reflection.Assembly.LoadFrom%2A> méthode sans aucune <xref:System.Security.Policy.Evidence> paramètre, l’assembly est chargé avec la preuve fournie par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-1186">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="1e947-1187">Lorsque vous utilisez un <xref:System.Reflection.Assembly.LoadFrom%2A> méthode avec un <xref:System.Security.Policy.Evidence> paramètre, les preuves sont fusionnées.</span><span class="sxs-lookup"><span data-stu-id="1e947-1187">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="1e947-1188">Preuves fournies en tant qu’argument à la <xref:System.Reflection.Assembly.LoadFrom%2A> méthode annulent et remplacent les preuves fournies par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="1e947-1188">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.LoadFrom%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="1e947-1189">Si vous appelez cette méthode plusieurs fois sur le même assembly, mais avec une preuve spécifiée différente, le common language runtime ne lève pas une <xref:System.IO.FileLoadException> , car il est impossible de déterminer l’égalité et l’intégrité des différentes spécifications de preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-1189">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="1e947-1190">La première preuve qui réussit est la preuve est utilisée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1190">The evidence that first succeeds is the evidence that is used.</span></span>  
  
-   <span data-ttu-id="1e947-1191">Lorsque vous utilisez un <xref:System.Reflection.Assembly.LoadFrom%2A> méthode avec un `Byte[]` paramètre pour charger une image common object file format (COFF), la preuve est combinée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1191">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is combined.</span></span> <span data-ttu-id="1e947-1192">`Zone`, `Url` et `Site` sont héritées de l’assembly appelant, et `Hash` et `StrongName` sont tirées de l’assembly COFF.</span><span class="sxs-lookup"><span data-stu-id="1e947-1192">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="1e947-1193">Lorsque vous utilisez un <xref:System.Reflection.Assembly.LoadFrom%2A> méthode avec un `Byte[]` paramètre et <xref:System.Security.Policy.Evidence> pour charger une image COFF, seule la preuve fournie est utilisée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1193">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="1e947-1194">Preuve de l’assembly appelant et celle de l’image COFF sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="1e947-1194">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-1195"><paramref name="assemblyFile" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1195"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-1196"><paramref name="assemblyFile" /> est introuvable ou le module que vous tentez de charger ne spécifie pas d'extension de nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="1e947-1196"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-1197">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-1197">A file that was found could not be loaded.</span></span>  
  
 <span data-ttu-id="1e947-1198">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-1198">-or-</span></span>  
  
 <span data-ttu-id="1e947-1199"><paramref name="securityEvidence" /> n'est pas ambigu et est considéré comme étant non valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-1199">The <paramref name="securityEvidence" /> is not ambiguous and is determined to be invalid.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-1200"><paramref name="assemblyFile" /> n'est pas un assembly valide ; par exemple, un assembly 32 bits dans un processus 64 bits.</span><span class="sxs-lookup"><span data-stu-id="1e947-1200"><paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span></span> <span data-ttu-id="1e947-1201">Pour plus d’informations, consultez la rubrique sur les exceptions.</span><span class="sxs-lookup"><span data-stu-id="1e947-1201">See the exception topic for more information.</span></span>  
  
 <span data-ttu-id="1e947-1202">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-1202">-or-</span></span>  
  
 <span data-ttu-id="1e947-1203">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="assemblyFile" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-1203">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e947-1204">Un code base qui ne commence pas par "file://" a été spécifié sans le <see cref="T:System.Net.WebPermission" /> requis.</span><span class="sxs-lookup"><span data-stu-id="1e947-1204">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e947-1205">Le paramètre <paramref name="assemblyFile" /> est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="1e947-1205">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="1e947-1206">Le nom de l’assembly comprend plus de MAX_PATH caractères.</span><span class="sxs-lookup"><span data-stu-id="1e947-1206">The assembly name is longer than MAX_PATH characters.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-1207">pour charger un assembly avec la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-1207">to load an assembly with evidence.</span></span> <span data-ttu-id="1e947-1208">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1e947-1208">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-1209">pour lire un URI qui commence par « file:// ».</span><span class="sxs-lookup"><span data-stu-id="1e947-1209">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="1e947-1210">Énumération associée : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="1e947-1210">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="1e947-1211">pour lire un URI qui ne commence pas par « file:// ».</span><span class="sxs-lookup"><span data-stu-id="1e947-1211">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadModule">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-1212">Charge le module interne à cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1212">Loads the module internal to this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadModule (moduleName As String, rawModule As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName"><span data-ttu-id="1e947-1213">Nom du module.</span><span class="sxs-lookup"><span data-stu-id="1e947-1213">The name of the module.</span></span> <span data-ttu-id="1e947-1214">Cette chaîne doit correspondre à un nom de fichier du manifeste de cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1214">This string must correspond to a file name in this assembly's manifest.</span></span></param>
        <param name="rawModule"><span data-ttu-id="1e947-1215">Tableau d'octets qui est une image COFF contenant un module émis ou une ressource.</span><span class="sxs-lookup"><span data-stu-id="1e947-1215">A byte array that is a COFF-based image containing an emitted module, or a resource.</span></span></param>
        <summary><span data-ttu-id="1e947-1216">Charge le module, interne à cet assembly, avec une image COFF (Common Object File Format) contenant un module émis ou un fichier de ressources.</span><span class="sxs-lookup"><span data-stu-id="1e947-1216">Loads the module, internal to this assembly, with a common object file format (COFF)-based image containing an emitted module, or a resource file.</span></span></summary>
        <returns><span data-ttu-id="1e947-1217">Module chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1217">The loaded module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-1218"><paramref name="moduleName" /> ou <paramref name="rawModule" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1218"><paramref name="moduleName" /> or <paramref name="rawModule" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e947-1219"><paramref name="moduleName" /> ne correspond pas à une entrée de fichier du manifeste de cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1219"><paramref name="moduleName" /> does not match a file entry in this assembly's manifest.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-1220"><paramref name="rawModule" /> n'est pas un module valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-1220"><paramref name="rawModule" /> is not a valid module.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-1221">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-1221">A file that was found could not be loaded.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-1222">pour fournir la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-1222">to provide evidence.</span></span> <span data-ttu-id="1e947-1223">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1e947-1223">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module LoadModule (string moduleName, byte[] rawModule, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadModule (moduleName As String, rawModule As Byte(), rawSymbolStore As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName"><span data-ttu-id="1e947-1224">Nom du module.</span><span class="sxs-lookup"><span data-stu-id="1e947-1224">The name of the module.</span></span> <span data-ttu-id="1e947-1225">Cette chaîne doit correspondre à un nom de fichier du manifeste de cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1225">This string must correspond to a file name in this assembly's manifest.</span></span></param>
        <param name="rawModule"><span data-ttu-id="1e947-1226">Tableau d'octets qui est une image COFF contenant un module émis ou une ressource.</span><span class="sxs-lookup"><span data-stu-id="1e947-1226">A byte array that is a COFF-based image containing an emitted module, or a resource.</span></span></param>
        <param name="rawSymbolStore"><span data-ttu-id="1e947-1227">Tableau d'octets contenant les octets bruts représentant les symboles du module.</span><span class="sxs-lookup"><span data-stu-id="1e947-1227">A byte array containing the raw bytes representing the symbols for the module.</span></span> <span data-ttu-id="1e947-1228">Doit avoir la valeur <see langword="null" /> s'il s'agit d'un fichier de ressources.</span><span class="sxs-lookup"><span data-stu-id="1e947-1228">Must be <see langword="null" /> if this is a resource file.</span></span></param>
        <summary><span data-ttu-id="1e947-1229">Charge le module, interne à cet assembly, avec une image COFF (Common Object File Format) contenant un module émis ou un fichier de ressources.</span><span class="sxs-lookup"><span data-stu-id="1e947-1229">Loads the module, internal to this assembly, with a common object file format (COFF)-based image containing an emitted module, or a resource file.</span></span> <span data-ttu-id="1e947-1230">Les octets bruts représentant les symboles du module sont également chargés.</span><span class="sxs-lookup"><span data-stu-id="1e947-1230">The raw bytes representing the symbols for the module are also loaded.</span></span></summary>
        <returns><span data-ttu-id="1e947-1231">Module chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1231">The loaded module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-1232"><paramref name="moduleName" /> ou <paramref name="rawModule" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1232"><paramref name="moduleName" /> or <paramref name="rawModule" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e947-1233"><paramref name="moduleName" /> ne correspond pas à une entrée de fichier du manifeste de cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1233"><paramref name="moduleName" /> does not match a file entry in this assembly's manifest.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-1234"><paramref name="rawModule" /> n'est pas un module valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-1234"><paramref name="rawModule" /> is not a valid module.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-1235">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-1235">A file that was found could not be loaded.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-1236">pour fournir la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-1236">to provide evidence.</span></span> <span data-ttu-id="1e947-1237">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1e947-1237">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadWithPartialName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-1238">Charge un assembly à partir du répertoire de l'application ou du Global Assembly Cache en utilisant un nom partiel.</span><span class="sxs-lookup"><span data-stu-id="1e947-1238">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e947-1239">Les surcharges de la <xref:System.Reflection.Assembly.LoadWithPartialName%2A?displayProperty=nameWithType> méthode sont obsolète et ont été conservés pour la compatibilité descendante.</span><span class="sxs-lookup"><span data-stu-id="1e947-1239">The overloads of the <xref:System.Reflection.Assembly.LoadWithPartialName%2A?displayProperty=nameWithType> method are obsolete and have been retained for backward compatibility.</span></span> <span data-ttu-id="1e947-1240">L'alternative non obsolète est <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1e947-1240">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadWithPartialName">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadWithPartialName (string partialName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadWithPartialName(string partialName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadWithPartialName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadWithPartialName (partialName As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadWithPartialName(System::String ^ partialName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partialName"><span data-ttu-id="1e947-1241">Nom complet de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1241">The display name of the assembly.</span></span></param>
        <summary><span data-ttu-id="1e947-1242">Charge un assembly à partir du répertoire de l'application ou du Global Assembly Cache en utilisant un nom partiel.</span><span class="sxs-lookup"><span data-stu-id="1e947-1242">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span></span></summary>
        <returns><span data-ttu-id="1e947-1243">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1243">The loaded assembly.</span></span> <span data-ttu-id="1e947-1244">Si <paramref name="partialName" /> est introuvable, cette méthode retourne <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1244">If <paramref name="partialName" /> is not found, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e947-1245">Le <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%29> méthode est obsolète et a été conservée pour la compatibilité descendante.</span><span class="sxs-lookup"><span data-stu-id="1e947-1245">The <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%29> method is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="1e947-1246">L'alternative non obsolète est <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1e947-1246">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1e947-1247">Les applications qui chargent des assemblys avec cette méthode seront affectées par les mises à niveau de ces assemblys.</span><span class="sxs-lookup"><span data-stu-id="1e947-1247">Applications that load assemblies with this method will be affected by upgrades of those assemblies.</span></span> <span data-ttu-id="1e947-1248">Par conséquent, n’utilisez pas de cette méthode ; reconcevez l’application pour utiliser le <xref:System.Reflection.Assembly.Load%28System.String%29> surcharge de méthode ou la <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="1e947-1248">Therefore, do not use this method; redesign the application to use the <xref:System.Reflection.Assembly.Load%28System.String%29> method overload or the <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> method overload.</span></span>  
  
 <span data-ttu-id="1e947-1249">Cette méthode appelle d’abord <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="1e947-1249">This method first calls <xref:System.Reflection.Assembly.Load%2A>.</span></span> <span data-ttu-id="1e947-1250">Si l’assembly est introuvable, cette méthode retourne l’assembly dans le global assembly cache qui a le même nom simple et le numéro de version le plus élevé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1250">If the assembly is not found, this method returns the assembly from the global assembly cache that has the same simple name, and the highest version number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1e947-1251">Le paramètre <paramref name="partialName" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1251">The <paramref name="partialName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-1252"><paramref name="assemblyFile" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-1252"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-1253">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-1253">-or-</span></span>  
  
 <span data-ttu-id="1e947-1254">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="partialName" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-1254">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="partialName" /> was compiled with a later version.</span></span></exception>
        <altmember cref="M:System.Reflection.Assembly.Load(System.String)" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LoadWithPartialName">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadWithPartialName (string partialName, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadWithPartialName(string partialName, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadWithPartialName (partialName As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadWithPartialName(System::String ^ partialName, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialName" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="partialName"><span data-ttu-id="1e947-1255">Nom complet de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1255">The display name of the assembly.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="1e947-1256">Preuve de chargement de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1256">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="1e947-1257">Charge un assembly à partir du répertoire de l'application ou du Global Assembly Cache en utilisant un nom partiel.</span><span class="sxs-lookup"><span data-stu-id="1e947-1257">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span></span> <span data-ttu-id="1e947-1258">L'assembly est chargé dans le domaine de l'appelant à l'aide de la preuve fournie.</span><span class="sxs-lookup"><span data-stu-id="1e947-1258">The assembly is loaded into the domain of the caller using the supplied evidence.</span></span></summary>
        <returns><span data-ttu-id="1e947-1259">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1259">The loaded assembly.</span></span> <span data-ttu-id="1e947-1260">Si <paramref name="partialName" /> est introuvable, cette méthode retourne <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1260">If <paramref name="partialName" /> is not found, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e947-1261">Le <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%2CSystem.Security.Policy.Evidence%29> méthode est obsolète et a été conservée pour la compatibilité descendante.</span><span class="sxs-lookup"><span data-stu-id="1e947-1261">The <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%2CSystem.Security.Policy.Evidence%29> method is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="1e947-1262">L'alternative non obsolète est <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1e947-1262">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1e947-1263">La preuve est le jeu d'informations qui alimente les décisions de stratégie de sécurité, telles que les autorisations qui peuvent être accordées au code.</span><span class="sxs-lookup"><span data-stu-id="1e947-1263">Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code.</span></span>  
  
 <span data-ttu-id="1e947-1264">Les applications qui chargent des assemblys avec cette méthode seront affectées par les mises à niveau de ces assemblys.</span><span class="sxs-lookup"><span data-stu-id="1e947-1264">Applications that load assemblies with this method will be affected by upgrades of those assemblies.</span></span> <span data-ttu-id="1e947-1265">Par conséquent, n’utilisez pas de cette méthode ; reconcevez l’application pour utiliser le <xref:System.Reflection.Assembly.Load%2A> méthode ou la <xref:System.Reflection.Assembly.LoadFrom%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="1e947-1265">Therefore, do not use this method; redesign the application to use the <xref:System.Reflection.Assembly.Load%2A> method or the <xref:System.Reflection.Assembly.LoadFrom%2A> method.</span></span>  
  
 <span data-ttu-id="1e947-1266">Cette méthode appelle d’abord <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="1e947-1266">This method first calls <xref:System.Reflection.Assembly.Load%2A>.</span></span> <span data-ttu-id="1e947-1267">Si l’assembly est introuvable, cette méthode retourne l’assembly dans le global assembly cache qui a le même nom simple et le numéro de version le plus élevé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1267">If the assembly is not found, this method returns the assembly from the global assembly cache that has the same simple name, and the highest version number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-1268">Un assembly ou un module a été chargé à deux reprises avec deux ensembles de preuves différents.</span><span class="sxs-lookup"><span data-stu-id="1e947-1268">An assembly or module was loaded twice with two different sets of evidence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1e947-1269">Le paramètre <paramref name="partialName" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1269">The <paramref name="partialName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-1270"><paramref name="assemblyFile" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-1270"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-1271">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-1271">-or-</span></span>  
  
 <span data-ttu-id="1e947-1272">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="partialName" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-1272">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="partialName" /> was compiled with a later version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e947-1273">pour appeler du code non managé et charger un assembly avec la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-1273">for calling unmanaged code and to load an assembly with evidence.</span></span> <span data-ttu-id="1e947-1274">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1e947-1274">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.Load(System.String)" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.Location</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-1275">Obtient le chemin d’accès complet ou l’emplacement UNC du fichier chargé qui contient le manifeste.</span><span class="sxs-lookup"><span data-stu-id="1e947-1275">Gets the full path or UNC location of the loaded file that contains the manifest.</span></span></summary>
        <value><span data-ttu-id="1e947-1276">Emplacement du fichier chargé qui contient le manifeste.</span><span class="sxs-lookup"><span data-stu-id="1e947-1276">The location of the loaded file that contains the manifest.</span></span> <span data-ttu-id="1e947-1277">Si le fichier chargé était une copie fantôme, l'emplacement est celui du fichier après qu'il soit une copie fantôme.</span><span class="sxs-lookup"><span data-stu-id="1e947-1277">If the loaded file was shadow-copied, the location is that of the file after being shadow-copied.</span></span> <span data-ttu-id="1e947-1278">Si l'assembly est chargé à partir d'un tableau d'octets, par exemple lors de l'utilisation de la surcharge de méthode <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" />, la valeur retournée est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="1e947-1278">If the assembly is loaded from a byte array, such as when using the <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /> method overload, the value returned is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-1279">Pour obtenir l’emplacement avant que le fichier a été copié de clichés instantanés, utilisez le <xref:System.Reflection.Assembly.CodeBase%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1e947-1279">To get the location before the file has been shadow-copied, use the <xref:System.Reflection.Assembly.CodeBase%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e947-1280">L’exemple suivant affiche l’emplacement du fichier chargé qui contient le manifeste.</span><span class="sxs-lookup"><span data-stu-id="1e947-1280">The following example displays the location of the loaded file that contains the manifest.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#3)]
 [!code-csharp[System.Reflection.Assembly#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#3)]
 [!code-vb[System.Reflection.Assembly#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1e947-1281">L’assembly actuel est un assembly dynamique représenté par un objet <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1281">The current assembly is a dynamic assembly, represented by an <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-1282">Pour accéder au chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="1e947-1282">for access to the path.</span></span> <span data-ttu-id="1e947-1283">Énumération associée : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="1e947-1283">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ManifestModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module ManifestModule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module ManifestModule" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ManifestModule" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ManifestModule As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ ManifestModule { System::Reflection::Module ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-1284">Obtient le module qui contient le manifeste de l'assembly actuel.</span><span class="sxs-lookup"><span data-stu-id="1e947-1284">Gets the module that contains the manifest for the current assembly.</span></span></summary>
        <value><span data-ttu-id="1e947-1285">Module qui contient le manifeste d'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1285">The module that contains the manifest for the assembly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleResolve">
      <MemberSignature Language="C#" Value="public virtual event System.Reflection.ModuleResolveEventHandler ModuleResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Reflection.ModuleResolveEventHandler ModuleResolve" />
      <MemberSignature Language="DocId" Value="E:System.Reflection.Assembly.ModuleResolve" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Custom Event ModuleResolve As ModuleResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Reflection::ModuleResolveEventHandler ^ ModuleResolve;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Runtime.InteropServices._Assembly.ModuleResolve</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ModuleResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-1286">Se produit si le chargeur de classes du Common Language Runtime ne peut pas résoudre une référence à un module interne d'un assembly à l'aide des moyens normaux.</span><span class="sxs-lookup"><span data-stu-id="1e947-1286">Occurs when the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-1287">Cet événement permet le rappel pour trouver et charger le module lui-même et la retourner.</span><span class="sxs-lookup"><span data-stu-id="1e947-1287">This event gives the callback a chance to find and load the module itself and return it.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="1e947-1288">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="1e947-1288">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="1e947-1289">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="1e947-1289">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt; Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Module&gt; Modules" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Modules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Modules As IEnumerable(Of Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ Modules { System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-1290">Obtient une collection qui contient les modules dans cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1290">Gets a collection that contains the modules in this assembly.</span></span></summary>
        <value><span data-ttu-id="1e947-1291">Collection qui contient les modules dans cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1291">A collection that contains the modules in this assembly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.Assembly left, System.Reflection.Assembly right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.Assembly left, class System.Reflection.Assembly right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Assembly, right As Assembly) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::Assembly ^ left, System::Reflection::Assembly ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.Assembly" />
        <Parameter Name="right" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="1e947-1292">Assembly à comparer à <c>right</c>.</span><span class="sxs-lookup"><span data-stu-id="1e947-1292">The assembly to compare to <c>right</c>.</span></span></param>
        <param name="right"><span data-ttu-id="1e947-1293">Assembly à comparer à <c>left</c>.</span><span class="sxs-lookup"><span data-stu-id="1e947-1293">The assembly to compare to <c>left</c>.</span></span></param>
        <summary><span data-ttu-id="1e947-1294">Indique si deux objets <see cref="T:System.Reflection.Assembly" /> sont égaux.</span><span class="sxs-lookup"><span data-stu-id="1e947-1294">Indicates whether two <see cref="T:System.Reflection.Assembly" /> objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="1e947-1295"><see langword="true" /> si <paramref name="left" /> est égal à <paramref name="right" /> ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1295"><see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.Assembly left, System.Reflection.Assembly right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.Assembly left, class System.Reflection.Assembly right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Assembly, right As Assembly) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::Assembly ^ left, System::Reflection::Assembly ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.Assembly" />
        <Parameter Name="right" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="1e947-1296">Assembly à comparer à <c>right</c>.</span><span class="sxs-lookup"><span data-stu-id="1e947-1296">The assembly to compare to <c>right</c>.</span></span></param>
        <param name="right"><span data-ttu-id="1e947-1297">Assembly à comparer à <c>left</c>.</span><span class="sxs-lookup"><span data-stu-id="1e947-1297">The assembly to compare to <c>left</c>.</span></span></param>
        <summary><span data-ttu-id="1e947-1298">Indique si deux objets <see cref="T:System.Reflection.Assembly" /> ne sont pas égaux.</span><span class="sxs-lookup"><span data-stu-id="1e947-1298">Indicates whether two <see cref="T:System.Reflection.Assembly" /> objects are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="1e947-1299"><see langword="true" /> si <paramref name="left" /> n'est pas égal à <paramref name="right" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1299"><see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSet">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet PermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet PermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.PermissionSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::PermissionSet ^ PermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-1300">Obtient le jeu accordé de l'assembly actuel.</span><span class="sxs-lookup"><span data-stu-id="1e947-1300">Gets the grant set of the current assembly.</span></span></summary>
        <value><span data-ttu-id="1e947-1301">Jeu accordé de l'assembly actuel.</span><span class="sxs-lookup"><span data-stu-id="1e947-1301">The grant set of the current assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-1302"><xref:System.Security.PermissionSet> les objets peuvent contenir des informations sensibles telles que les chemins d’accès.</span><span class="sxs-lookup"><span data-stu-id="1e947-1302"><xref:System.Security.PermissionSet> objects can contain sensitive information such as paths.</span></span> <span data-ttu-id="1e947-1303">Par conséquent, la confiance totale est requise pour accéder à ces objets.</span><span class="sxs-lookup"><span data-stu-id="1e947-1303">Therefore, full trust is required to access these objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="1e947-1304">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="1e947-1304">requires full trust for the immediate caller.</span></span> <span data-ttu-id="1e947-1305">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="1e947-1305">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReflectionOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReflectionOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ReflectionOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ReflectionOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReflectionOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-1306">Obtient une valeur <see cref="T:System.Boolean" /> indiquant si cet assembly a été chargé dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="1e947-1306">Gets a <see cref="T:System.Boolean" /> value indicating whether this assembly was loaded into the reflection-only context.</span></span></summary>
        <value>
          <span data-ttu-id="1e947-1307"><see langword="true" /> si l'assembly a été chargé dans le contexte de réflexion uniquement, plutôt que dans le contexte d'exécution ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1307"><see langword="true" /> if the assembly was loaded into the reflection-only context, rather than the execution context; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-1308">Si un assembly a été chargé dans le contexte de réflexion uniquement, à l’aide du <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> (méthode), vous ne pouvez pas exécuter du code dans l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1308">If an assembly has been loaded into the reflection-only context, using the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> method, you cannot execute code in the assembly.</span></span> <span data-ttu-id="1e947-1309">Pour exécuter du code, l’assembly doit être chargé dans le contexte d’exécution.</span><span class="sxs-lookup"><span data-stu-id="1e947-1309">To execute code, the assembly must be loaded into the execution context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReflectionOnlyLoad">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e947-1310">Charge un assembly dans le contexte de réflexion uniquement, où il peut être examiné mais pas exécuté.</span><span class="sxs-lookup"><span data-stu-id="1e947-1310">Loads an assembly into the reflection-only context, where it can be examined but not executed.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReflectionOnlyLoad">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoad (byte[] rawAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoad(unsigned int8[] rawAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoad (rawAssembly As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoad(cli::array &lt;System::Byte&gt; ^ rawAssembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="1e947-1311">Tableau d'octets qui est une image au format COFF contenant un assembly émis.</span><span class="sxs-lookup"><span data-stu-id="1e947-1311">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <summary><span data-ttu-id="1e947-1312">Charge l'assembly à partir d'une image au format COFF (Common Object File Format) contenant un assembly émis.</span><span class="sxs-lookup"><span data-stu-id="1e947-1312">Loads the assembly from a common object file format (COFF)-based image containing an emitted assembly.</span></span> <span data-ttu-id="1e947-1313">L'assembly est chargé dans le contexte de réflexion uniquement du domaine d'application de l'appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-1313">The assembly is loaded into the reflection-only context of the caller's application domain.</span></span></summary>
        <returns><span data-ttu-id="1e947-1314">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1314">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-1315">Vous ne pouvez pas exécuter du code à partir d’un assembly chargé dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="1e947-1315">You cannot execute code from an assembly loaded into the reflection-only context.</span></span> <span data-ttu-id="1e947-1316">Pour exécuter du code, l’assembly doit être chargé dans le contexte d’exécution, à l’aide de la <xref:System.Reflection.Assembly.Load%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="1e947-1316">To execute code, the assembly must be loaded into the execution context as well, using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
 <span data-ttu-id="1e947-1317">Le contexte de réflexion uniquement n’est pas différent des autres contextes.</span><span class="sxs-lookup"><span data-stu-id="1e947-1317">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="1e947-1318">Les assemblys sont chargés dans le contexte peuvent être déchargés qu’en déchargeant le domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="1e947-1318">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-1319"><paramref name="rawAssembly" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1319"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-1320"><paramref name="rawAssembly" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-1320"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-1321">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-1321">-or-</span></span>  
  
 <span data-ttu-id="1e947-1322">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="rawAssembly" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-1322">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1e947-1323"><paramref name="rawAssembly" /> ne peut pas être chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1323"><paramref name="rawAssembly" /> cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnlyLoad">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoad (string assemblyString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoad(string assemblyString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoad (assemblyString As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoad(System::String ^ assemblyString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyString"><span data-ttu-id="1e947-1324">Nom complet de l'assembly, tel que retourné par la propriété <see cref="P:System.Reflection.AssemblyName.FullName" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1324">The display name of the assembly, as returned by the <see cref="P:System.Reflection.AssemblyName.FullName" /> property.</span></span></param>
        <summary><span data-ttu-id="1e947-1325">Charge un assembly dans le contexte de réflexion uniquement, étant donné son nom complet.</span><span class="sxs-lookup"><span data-stu-id="1e947-1325">Loads an assembly into the reflection-only context, given its display name.</span></span></summary>
        <returns><span data-ttu-id="1e947-1326">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1326">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-1327">Dépendances ne sont pas chargés automatiquement dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="1e947-1327">Dependencies are not automatically loaded into the reflection-only context.</span></span>  
  
 <span data-ttu-id="1e947-1328">Vous ne pouvez pas exécuter du code à partir d’un assembly chargé dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="1e947-1328">You cannot execute code from an assembly loaded into the reflection-only context.</span></span> <span data-ttu-id="1e947-1329">Pour exécuter du code, l’assembly doit être chargé dans le contexte d’exécution, à l’aide de la <xref:System.Reflection.Assembly.Load%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="1e947-1329">To execute code, the assembly must be loaded into the execution context as well, using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
 <span data-ttu-id="1e947-1330">L'octroi ou non de certaines autorisations à un assembly repose sur la preuve.</span><span class="sxs-lookup"><span data-stu-id="1e947-1330">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="1e947-1331">Les règles d’assembly et la fusion de la preuve de sécurité sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="1e947-1331">The rules for assembly and security evidence merging are as follows:</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e947-1332">La réflexion sur des fichiers exécutables compilés en C++ peut lever un <xref:System.IO.FileLoadException>.</span><span class="sxs-lookup"><span data-stu-id="1e947-1332">Reflecting on executable files compiled in C++ might throw a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="1e947-1333">Cela est probablement provoqué par le compilateur C++ suppression des adresses de réadressage ou de la section .reloc de votre fichier exécutable.</span><span class="sxs-lookup"><span data-stu-id="1e947-1333">This is most likely caused by the C++ compiler stripping the relocation addresses or the .reloc section from your executable file.</span></span> <span data-ttu-id="1e947-1334">Pour conserver l’adresse .reloc, spécifiez `/fixed:no` lors de la liaison.</span><span class="sxs-lookup"><span data-stu-id="1e947-1334">To preserve the .reloc address, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="1e947-1335">Le contexte de réflexion uniquement n’est pas différent des autres contextes.</span><span class="sxs-lookup"><span data-stu-id="1e947-1335">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="1e947-1336">Les assemblys sont chargés dans le contexte peuvent être déchargés qu’en déchargeant le domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="1e947-1336">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-1337"><paramref name="assemblyString" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1337"><paramref name="assemblyString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e947-1338">Le <paramref name="assemblyString" /> est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="1e947-1338"><paramref name="assemblyString" /> is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-1339"><paramref name="assemblyString" /> est introuvable.</span><span class="sxs-lookup"><span data-stu-id="1e947-1339"><paramref name="assemblyString" /> is not found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1e947-1340"><paramref name="assemblyString" /> a été trouvé, mais ne peut pas être chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1340"><paramref name="assemblyString" /> is found, but cannot be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-1341"><paramref name="assemblyString" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-1341"><paramref name="assemblyString" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-1342">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-1342">-or-</span></span>  
  
 <span data-ttu-id="1e947-1343">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="assemblyString" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-1343">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnlyLoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoadFrom(System::String ^ assemblyFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="1e947-1344">Chemin d’accès du fichier qui contient le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1344">The path of the file that contains the manifest of the assembly.</span></span></param>
        <summary><span data-ttu-id="1e947-1345">Charge un assembly dans le contexte de réflexion uniquement, étant donné son chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="1e947-1345">Loads an assembly into the reflection-only context, given its path.</span></span></summary>
        <returns><span data-ttu-id="1e947-1346">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1346">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-1347">Dépendances ne sont pas chargés automatiquement dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="1e947-1347">Dependencies are not automatically loaded into the reflection-only context.</span></span> <span data-ttu-id="1e947-1348">Pour charger automatiquement les dépendances, gérer le <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> événement et chargez la dépendance dans le Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="1e947-1348">To automatically load dependencies, handle the <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> event and load the dependency in the event handler.</span></span>  
  
 <span data-ttu-id="1e947-1349">Vous ne pouvez pas exécuter du code à partir d’un assembly qui a été chargé dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="1e947-1349">You cannot execute code from an assembly that has been loaded into the reflection-only context.</span></span> <span data-ttu-id="1e947-1350">Pour exécuter le code, chargez l’assembly avec le <xref:System.Reflection.Assembly.LoadFile%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="1e947-1350">To execute the code, load the assembly with the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span>  
  
 <span data-ttu-id="1e947-1351">Le `assemblyFile` paramètre doit faire référence à un URI sans caractères d’échappement.</span><span class="sxs-lookup"><span data-stu-id="1e947-1351">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="1e947-1352">Cette méthode fournit des caractères d’échappement pour tous les caractères non valides dans l’URI.</span><span class="sxs-lookup"><span data-stu-id="1e947-1352">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
 <span data-ttu-id="1e947-1353">Le chemin d’accès spécifié pour `assemblyFile` est relatif au répertoire en cours.</span><span class="sxs-lookup"><span data-stu-id="1e947-1353">The path specified for `assemblyFile` is relative to the current directory.</span></span> <span data-ttu-id="1e947-1354">L’assembly est chargé dans le domaine de l’appelant.</span><span class="sxs-lookup"><span data-stu-id="1e947-1354">The assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="1e947-1355">Le contexte de réflexion uniquement n’est pas différent des autres contextes.</span><span class="sxs-lookup"><span data-stu-id="1e947-1355">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="1e947-1356">Les assemblys sont chargés dans le contexte peuvent être déchargés qu’en déchargeant le domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="1e947-1356">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-1357"><paramref name="assemblyFile" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1357"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-1358"><paramref name="assemblyFile" /> est introuvable ou le module que vous essayez de charger ne spécifie pas une extension de nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="1e947-1358"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1e947-1359"><paramref name="assemblyFile" /> a été trouvé, mais n'a pas pu être chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1359"><paramref name="assemblyFile" /> is found, but could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-1360"><paramref name="assemblyFile" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-1360"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-1361">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-1361">-or-</span></span>  
  
 <span data-ttu-id="1e947-1362">La version 2.0 ou ultérieure du Common Language Runtime est actuellement chargée et <paramref name="assemblyFile" /> a été compilé avec une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="1e947-1362">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e947-1363">Un code base qui ne commence pas par "file://" a été spécifié sans le <see cref="T:System.Net.WebPermission" /> requis.</span><span class="sxs-lookup"><span data-stu-id="1e947-1363">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="1e947-1364">Le nom de l’assembly est plus long que MAX_PATH caractères.</span><span class="sxs-lookup"><span data-stu-id="1e947-1364">The assembly name is longer than MAX_PATH characters.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e947-1365">Le <paramref name="assemblyFile" /> est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="1e947-1365"><paramref name="assemblyFile" /> is an empty string ("").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="1e947-1366">pour lire un URI qui commence par « file:// ».</span><span class="sxs-lookup"><span data-stu-id="1e947-1366">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="1e947-1367">Énumérations associées : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="1e947-1367">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="1e947-1368">pour lire un URI qui ne commence pas par « file:// ».</span><span class="sxs-lookup"><span data-stu-id="1e947-1368">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SecurityRuleSet">
      <MemberSignature Language="C#" Value="public virtual System.Security.SecurityRuleSet SecurityRuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityRuleSet SecurityRuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.SecurityRuleSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SecurityRuleSet As SecurityRuleSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::SecurityRuleSet SecurityRuleSet { System::Security::SecurityRuleSet get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityRuleSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e947-1369">Obtient une valeur qui indique quel ensemble de règles de sécurité le Common Language Runtime (CLR) applique pour cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1369">Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.</span></span></summary>
        <value><span data-ttu-id="1e947-1370">Ensemble de règles de sécurité que le CLR applique pour cet assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1370">The security rule set that the CLR enforces for this assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-1371">Par défaut, les assemblys que vous compilez avec le [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] ont une transparence, bien que vous puissiez utiliser explicitement à la place.</span><span class="sxs-lookup"><span data-stu-id="1e947-1371">By default, assemblies that you compile with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] have  transparency, although you can explicitly make them  instead.</span></span> <span data-ttu-id="1e947-1372">Les assemblys qui ont été compilés avec les versions antérieures du .NET Framework ont la transparence de niveau 1.</span><span class="sxs-lookup"><span data-stu-id="1e947-1372">Assemblies that were compiled with earlier versions of the .NET Framework have level 1 transparency.</span></span>  
  
 <span data-ttu-id="1e947-1373">Consultez [Changements en matière de sécurité](~/docs/framework/security/security-changes.md).</span><span class="sxs-lookup"><span data-stu-id="1e947-1373">See [Security Changes](~/docs/framework/security/security-changes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.IsDefined">
      <MemberSignature Language="C#" Value="bool ICustomAttributeProvider.IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Reflection.ICustomAttributeProvider.IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean Implements ICustomAttributeProvider.IsDefined" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Reflection.ICustomAttributeProvider.IsDefined(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::IsDefined;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Assembly.GetType">
      <MemberSignature Language="C#" Value="Type _Assembly.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._Assembly.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _Assembly.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._Assembly.GetType() = System::Runtime::InteropServices::_Assembly::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-1374">Retourne le type de l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="1e947-1374">Returns the type of the current instance.</span></span></summary>
        <returns><span data-ttu-id="1e947-1375">Objet qui représente le type <see cref="T:System.Reflection.Assembly" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1375">An object that represents the <see cref="T:System.Reflection.Assembly" /> type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e947-1376">Retourne le nom complet de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1376">Returns the full name of the assembly, also known as the display name.</span></span></summary>
        <returns><span data-ttu-id="1e947-1377">Nom complet de l'assembly, ou nom de la classe si le nom complet de l'assembly ne peut pas être déterminé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1377">The full name of the assembly, or the class name if the full name of the assembly cannot be determined.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeLoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly UnsafeLoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly UnsafeLoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.UnsafeLoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeLoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ UnsafeLoadFrom(System::String ^ assemblyFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="1e947-1378">Nom ou chemin d’accès du fichier qui contient le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="1e947-1378">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <summary><span data-ttu-id="1e947-1379">Charge un assembly dans le contexte de chargement, en ignorant des vérifications de sécurité.</span><span class="sxs-lookup"><span data-stu-id="1e947-1379">Loads an assembly into the load-from context, bypassing some security checks.</span></span></summary>
        <returns><span data-ttu-id="1e947-1380">Assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="1e947-1380">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e947-1381">Utilisez cette méthode pour charger un assembly local que le système d’exploitation a signalé comme ayant été chargé à partir du Web (par exemple, un fichier temporaire a été téléchargé depuis Internet ou intranet).</span><span class="sxs-lookup"><span data-stu-id="1e947-1381">Use this method to load a local assembly that the operating system has flagged as having been loaded from the Web (for example, a temporary file that was downloaded from the Internet or intranet).</span></span> <span data-ttu-id="1e947-1382">Avant du [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], ces assemblys ont été chargés automatiquement dans un domaine d’application sandbox.</span><span class="sxs-lookup"><span data-stu-id="1e947-1382">Before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], such assemblies were automatically loaded into a sandboxed application domain.</span></span> <span data-ttu-id="1e947-1383">En commençant par le [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], elles sont chargées avec une confiance totale.</span><span class="sxs-lookup"><span data-stu-id="1e947-1383">Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], they are loaded with full trust.</span></span>  
  
 <span data-ttu-id="1e947-1384">Comme alternative à l’utilisation de cette méthode, vous pouvez appliquer la [ &lt;NetFx40_LegacySecurityPolicy&gt; élément](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) dans votre fichier de configuration d’application.</span><span class="sxs-lookup"><span data-stu-id="1e947-1384">As an alternative to using this method, you can apply the [&lt;NetFx40_LegacySecurityPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) in your application configuration file.</span></span> <span data-ttu-id="1e947-1385">Cela entraîne le common language runtime rétablir la stratégie de sécurité de le [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span><span class="sxs-lookup"><span data-stu-id="1e947-1385">This causes the common language runtime to revert to the security policy of the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1e947-1386">Si vous utilisez une de ces solutions, vous devez être certain qu’elle est sécurisée pour charger `assemblyFile` avec une confiance totale.</span><span class="sxs-lookup"><span data-stu-id="1e947-1386">If you use either of these solutions, you must be certain that it is safe to load `assemblyFile` with full trust.</span></span>  
  
 <span data-ttu-id="1e947-1387">Pour en savoir plus sur les contextes de chargement, y compris le contexte de chargement, consultez la <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="1e947-1387">For a discussion of load contexts, including the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e947-1388"><paramref name="assemblyFile" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e947-1388"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1e947-1389"><paramref name="assemblyFile" /> est introuvable ou le module que vous tentez de charger ne spécifie pas d'extension de nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="1e947-1389"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="1e947-1390">Impossible de charger l’un des fichiers trouvés.</span><span class="sxs-lookup"><span data-stu-id="1e947-1390">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1e947-1391"><paramref name="assemblyFile" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="1e947-1391"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="1e947-1392">- ou -</span><span class="sxs-lookup"><span data-stu-id="1e947-1392">-or-</span></span>  
  
 <span data-ttu-id="1e947-1393"><paramref name="assemblyFile" /> a été compilé avec une version du Common Language Runtime ultérieure à la version actuellement chargée.</span><span class="sxs-lookup"><span data-stu-id="1e947-1393"><paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e947-1394">Un code base qui ne commence pas par "file://" a été spécifié sans le <see cref="T:System.Net.WebPermission" /> requis.</span><span class="sxs-lookup"><span data-stu-id="1e947-1394">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e947-1395">Le paramètre <paramref name="assemblyFile" /> est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="1e947-1395">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="1e947-1396">Le nom de l’assembly comprend plus de MAX_PATH caractères.</span><span class="sxs-lookup"><span data-stu-id="1e947-1396">The assembly name is longer than MAX_PATH characters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="1e947-1397">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="1e947-1397">requires full trust for the immediate caller.</span></span> <span data-ttu-id="1e947-1398">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="1e947-1398">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>