<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MemberTypes.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55bc02333dd4cb372c64a25debfecb2ca44559771.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bc02333dd4cb372c64a25debfecb2ca44559771</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.MemberTypes">
          <source>Marks each type of member that is defined as a derived class of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>.</source>
          <target state="translated">Marque chaque type de membre qui est défini comme une classe dérivée de <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source>These enumeration values are returned by the following properties:</source>
          <target state="translated">Ces valeurs d’énumération sont retournés par les propriétés suivantes :</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source><ph id="ph1">&lt;xref:System.Type.MemberType%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Type.MemberType%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source><ph id="ph1">&lt;xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source><ph id="ph1">&lt;xref:System.Reflection.ConstructorInfo?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.ConstructorInfo?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source><ph id="ph1">&lt;xref:System.Reflection.EventInfo?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.EventInfo?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source><ph id="ph1">&lt;xref:System.Reflection.FieldInfo?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.FieldInfo?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source><ph id="ph1">&lt;xref:System.Reflection.MethodInfo?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodInfo?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source><ph id="ph1">&lt;xref:System.Reflection.PropertyInfo?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.PropertyInfo?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source>To obtain the <ph id="ph1">&lt;xref:System.Reflection.MemberTypes&gt;</ph> value for a type:</source>
          <target state="translated">Pour obtenir le <ph id="ph1">&lt;xref:System.Reflection.MemberTypes&gt;</ph> valeur pour un type :</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source>Get a <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents that type.</source>
          <target state="translated">Obtenir un <ph id="ph1">&lt;xref:System.Type&gt;</ph> objet qui représente ce type.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source>Retrieve the value of the <ph id="ph1">&lt;xref:System.Type.MemberType%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Récupérer la valeur de la <ph id="ph1">&lt;xref:System.Type.MemberType%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source>To get the <ph id="ph1">&lt;xref:System.Reflection.MemberTypes&gt;</ph> values for the members of a type.:</source>
          <target state="translated">Pour obtenir le <ph id="ph1">&lt;xref:System.Reflection.MemberTypes&gt;</ph> valeurs pour les membres d’un type. :</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source>Get a <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents that type.</source>
          <target state="translated">Obtenir un <ph id="ph1">&lt;xref:System.Type&gt;</ph> objet qui représente ce type.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source>Retrieve the <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> array that represents the members of that type by calling the <ph id="ph2">&lt;xref:System.Type.GetMembers%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Récupérer le <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> tableau qui représente les membres de ce type en appelant le <ph id="ph2">&lt;xref:System.Type.GetMembers%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source>Retrieve the value of the From the <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=nameWithType&gt;</ph> property for each member in the array.</source>
          <target state="translated">Récupérer la valeur de la <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=nameWithType&gt;</ph> propriété pour chaque membre du tableau.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source>A <ph id="ph1">`switch`</ph> statement in C# or <ph id="ph2">`Select Case`</ph> statement in Visual Basic is typically used to process member types.</source>
          <target state="translated">A <ph id="ph1">`switch`</ph> instruction en c# ou <ph id="ph2">`Select Case`</ph> instruction en Visual Basic est généralement utilisée pour traiter les types de membres.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source><ph id="ph1">&lt;xref:System.Reflection.MemberTypes&gt;</ph> matches CorTypeAttr as defined in the corhdr.h file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MemberTypes&gt;</ph> correspond à CorTypeAttr tel que défini dans le fichier corhdr.h.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MemberTypes">
          <source>The following example displays the names of the members of the <ph id="ph1">&lt;xref:System.Reflection.ReflectionTypeLoadException&gt;</ph> class and their associated member types.</source>
          <target state="translated">L’exemple suivant affiche les noms des membres de la <ph id="ph1">&lt;xref:System.Reflection.ReflectionTypeLoadException&gt;</ph> classe et leurs types de membre associé.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Reflection.MemberTypes.All">
          <source>Specifies all member types.</source>
          <target state="translated">Spécifie tous les types de membres.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Reflection.MemberTypes.Constructor">
          <source>Specifies that the member is a constructor</source>
          <target state="translated">Spécifie que le membre est un constructeur.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Reflection.MemberTypes.Custom">
          <source>Specifies that the member is a custom member type.</source>
          <target state="translated">Spécifie que le membre est un type de membre personnalisé.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Reflection.MemberTypes.Event">
          <source>Specifies that the member is an event.</source>
          <target state="translated">Spécifie que le membre est un événement.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Reflection.MemberTypes.Field">
          <source>Specifies that the member is a field.</source>
          <target state="translated">Spécifie que le membre est un champ.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Reflection.MemberTypes.Method">
          <source>Specifies that the member is a method.</source>
          <target state="translated">Spécifie que le membre est une méthode.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Reflection.MemberTypes.NestedType">
          <source>Specifies that the member is a nested type.</source>
          <target state="translated">Spécifie que le membre est un type imbriqué.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Reflection.MemberTypes.Property">
          <source>Specifies that the member is a property.</source>
          <target state="translated">Spécifie que le membre est une propriété.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Reflection.MemberTypes.TypeInfo">
          <source>Specifies that the member is a type.</source>
          <target state="translated">Spécifie que le membre est un type.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>