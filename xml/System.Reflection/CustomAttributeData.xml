<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b81fc715a47a4fd76280f78c4364218e82b0390c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30480153" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomAttributeData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d4970-101">Fournit un accès aux données d'attribut personnalisé pour les assemblys, les modules, les types, les membres et les paramètres qui sont chargés dans le contexte de réflexion uniquement.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4970-101">Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4970-102">Code qui est examiné dans le contexte de réflexion uniquement ne peut pas être exécuté, elle n’est pas toujours possible d’examiner des attributs personnalisés en créant des instances de leur et puis examiner leurs propriétés, à l’aide des méthodes, telles que <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, etc. .</span><span class="sxs-lookup"><span data-stu-id="d4970-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="d4970-103">Si le code du type d’attribut lui-même est chargé dans le contexte de réflexion uniquement, elle ne peut pas être exécutée.</span><span class="sxs-lookup"><span data-stu-id="d4970-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="d4970-104">La <xref:System.Reflection.CustomAttributeData> classe permet l’examen des attributs personnalisés dans le contexte de réflexion uniquement en fournissant une abstraction pour les attributs.</span><span class="sxs-lookup"><span data-stu-id="d4970-104">The <xref:System.Reflection.CustomAttributeData> class allows examination of custom attributes in the reflection-only context by providing an abstraction for attributes.</span></span> <span data-ttu-id="d4970-105">Les membres de cette classe peuvent être utilisés pour obtenir les arguments de position et arguments nommés de l’attribut.</span><span class="sxs-lookup"><span data-stu-id="d4970-105">The members of this class can be used to obtain the positional arguments and named arguments of the attribute.</span></span> <span data-ttu-id="d4970-106">Utiliser le <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> propriété pour obtenir une liste de <xref:System.Reflection.CustomAttributeTypedArgument> des structures qui représentent les arguments de position et utilisent la <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> propriété pour obtenir une liste de <xref:System.Reflection.CustomAttributeNamedArgument> des structures qui représentent les arguments nommés.</span><span class="sxs-lookup"><span data-stu-id="d4970-106">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeTypedArgument> structures that represent the positional arguments, and use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeNamedArgument> structures that represent the named arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4970-107">Le <xref:System.Reflection.CustomAttributeNamedArgument> structure fournit uniquement des informations sur la propriété d’attribut utilisée pour obtenir et définir la valeur d’argument.</span><span class="sxs-lookup"><span data-stu-id="d4970-107">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only provides information about the attribute property used to get and set the argument value.</span></span> <span data-ttu-id="d4970-108">Pour obtenir le type et la valeur de l’argument, utilisez le <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> propriété pour obtenir un <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span><span class="sxs-lookup"><span data-stu-id="d4970-108">To obtain the type and value of the argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="d4970-109">Lorsque vous avez un <xref:System.Reflection.CustomAttributeTypedArgument> structure pour un argument, si nommés ou positionnels, utiliser le <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> propriété pour obtenir le type et le <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> pour obtenir la valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="d4970-109">When you have a <xref:System.Reflection.CustomAttributeTypedArgument> structure for an argument, whether named or positional, use the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> property to get the type and the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property to get the value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4970-110">Pour un argument de tableau, le <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> propriété retourne une collection générique <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> de <xref:System.Reflection.CustomAttributeTypedArgument> objets.</span><span class="sxs-lookup"><span data-stu-id="d4970-110">For an array argument, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="d4970-111">Chaque <xref:System.Reflection.CustomAttributeTypedArgument> objet dans la collection représente l’élément correspondant du tableau.</span><span class="sxs-lookup"><span data-stu-id="d4970-111">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="d4970-112"><xref:System.Reflection.CustomAttributeData> peut être utilisé dans le contexte d’exécution, ainsi que dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="d4970-112"><xref:System.Reflection.CustomAttributeData> can be used in the execution context as well as in the reflection-only context.</span></span> <span data-ttu-id="d4970-113">Par exemple, vous pouvez souhaiter éviter de charger l’assembly qui contient le code pour un attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="d4970-113">For example, you might want to avoid loading the assembly that contains the code for a custom attribute.</span></span> <span data-ttu-id="d4970-114">À l’aide de la <xref:System.Reflection.CustomAttributeData> classe diffère de l’aide des méthodes comme <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="d4970-114">Using the <xref:System.Reflection.CustomAttributeData> class is different from using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span></span>  
  
-   <span data-ttu-id="d4970-115">Les propriétés et méthodes de <xref:System.Reflection.CustomAttributeData> fournissent uniquement avec les valeurs qui ont été spécifiés pour l’instance d’attribut, pas la sémantique du constructeur.</span><span class="sxs-lookup"><span data-stu-id="d4970-115">The properties and methods of <xref:System.Reflection.CustomAttributeData> only provide you with the values that were specified for the attribute instance, not the semantics of the constructor.</span></span> <span data-ttu-id="d4970-116">Par exemple, un argument de chaîne d’un attribut peut être converti en interne en une autre représentation et retourné sous forme canonique ; ou une propriété peut avoir des effets secondaires lorsque le code d’attribut réel est exécuté.</span><span class="sxs-lookup"><span data-stu-id="d4970-116">For example, a string argument of an attribute might be converted internally to some other representation, and returned in a canonical form; or a property might have side effects when the actual attribute code is executed.</span></span>  
  
-   <span data-ttu-id="d4970-117">Les propriétés et méthodes de <xref:System.Reflection.CustomAttributeData> ne vous permettent pas de récupérer les attributs personnalisés hérités de classes de base.</span><span class="sxs-lookup"><span data-stu-id="d4970-117">The properties and methods of <xref:System.Reflection.CustomAttributeData> do not allow you to retrieve the custom attributes inherited from base classes.</span></span>  
  
 <span data-ttu-id="d4970-118">Pour créer des instances de la <xref:System.Reflection.CustomAttributeData> de classe, utilisez le `static` (`Shared` en Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> méthodes de fabrique.</span><span class="sxs-lookup"><span data-stu-id="d4970-118">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4970-119">L’exemple suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</span><span class="sxs-lookup"><span data-stu-id="d4970-119">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="d4970-120">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</span><span class="sxs-lookup"><span data-stu-id="d4970-120">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="d4970-121">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</span><span class="sxs-lookup"><span data-stu-id="d4970-121">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="d4970-122">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</span><span class="sxs-lookup"><span data-stu-id="d4970-122">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="d4970-123">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</span><span class="sxs-lookup"><span data-stu-id="d4970-123">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="d4970-124">Constructeurs différents sont utilisés pour ces cas.</span><span class="sxs-lookup"><span data-stu-id="d4970-124">Different constructors are used for these cases.</span></span> <span data-ttu-id="d4970-125">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche des informations sur les attributs personnalisés qui ont été appliquées à ce dernier et le type et les membres qu’il contient.</span><span class="sxs-lookup"><span data-stu-id="d4970-125">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="d4970-126">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</span><span class="sxs-lookup"><span data-stu-id="d4970-126">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4970-127">Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-127">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4970-128">Ce constructeur est appelé par les classes dérivées lors de la construction de <xref:System.Reflection.CustomAttributeData> objets.</span><span class="sxs-lookup"><span data-stu-id="d4970-128">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.CustomAttributeData> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="d4970-129">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-129">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d4970-130">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-130">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4970-131">Obtient le type de l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-131">Gets the type of the attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4970-132">Type de l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-132">The type of the attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4970-133">Obtient un objet <see cref="T:System.Reflection.ConstructorInfo" /> qui représente le constructeur qui aurait initialisé l’attribut personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-133">Gets a <see cref="T:System.Reflection.ConstructorInfo" /> object that represents the constructor that would have initialized the custom attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4970-134">Un objet qui représente le constructeur qui aurait initialisé l’attribut personnalisé représenté par l’instance actuelle de la classe <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-134">An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4970-135">Si un type d’attribut a plusieurs constructeurs, cette propriété retourne uniquement le constructeur spécifique qui aurait initialisé l’instance d’attribut représenté par les <xref:System.Reflection.CustomAttributeData> objet.</span><span class="sxs-lookup"><span data-stu-id="d4970-135">If an attribute type has multiple constructors, this property returns only the particular constructor that would have initialized the attribute instance represented by the current <xref:System.Reflection.CustomAttributeData> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4970-136">L’exemple suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</span><span class="sxs-lookup"><span data-stu-id="d4970-136">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="d4970-137">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</span><span class="sxs-lookup"><span data-stu-id="d4970-137">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="d4970-138">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</span><span class="sxs-lookup"><span data-stu-id="d4970-138">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="d4970-139">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</span><span class="sxs-lookup"><span data-stu-id="d4970-139">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="d4970-140">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</span><span class="sxs-lookup"><span data-stu-id="d4970-140">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="d4970-141">Constructeurs différents sont utilisés pour ces cas.</span><span class="sxs-lookup"><span data-stu-id="d4970-141">Different constructors are used for these cases.</span></span> <span data-ttu-id="d4970-142">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche les attributs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="d4970-142">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="d4970-143">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</span><span class="sxs-lookup"><span data-stu-id="d4970-143">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="d4970-144">Le <xref:System.Reflection.CustomAttributeData.Constructor%2A> propriété est utilisée dans le `ShowAttributeData` méthode qui affiche des données d’attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="d4970-144">The <xref:System.Reflection.CustomAttributeData.Constructor%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="d4970-145">Dans cet exemple de code, le <xref:System.Reflection.ConstructorInfo> retourné par cette propriété est utilisée pour afficher une chaîne de texte qui décrit le constructeur, démontrant que la propriété retourne le constructeur qui initialise l’attribut.</span><span class="sxs-lookup"><span data-stu-id="d4970-145">In this code example, the <xref:System.Reflection.ConstructorInfo> returned by this property is used to display a text string that describes the constructor, demonstrating that the property returns the constructor that would initialize the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4970-146">Obtient la liste d'arguments de position spécifiés pour l'instance d'attribut représentée par l'objet <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-146">Gets the list of positional arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4970-147">Collection de structures représentant les arguments de position spécifiés pour l'instance d'attribut personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-147">A collection of structures that represent the positional arguments specified for the custom attribute instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4970-148">Cette méthode obtient les arguments de position qui ont été spécifiées pour l’instance d’attribut personnalisé sans exécuter de code d’attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="d4970-148">This method gets the positional arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="d4970-149">Par conséquent, il peut être utilisé dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="d4970-149">Thus, it can be used in the reflection-only context.</span></span>  
  
 <span data-ttu-id="d4970-150">Utilisez la <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> méthode pour obtenir les arguments nommés spécifiés pour l’instance d’attribut.</span><span class="sxs-lookup"><span data-stu-id="d4970-150">Use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> method to get the named arguments specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4970-151">L’exemple suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</span><span class="sxs-lookup"><span data-stu-id="d4970-151">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="d4970-152">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</span><span class="sxs-lookup"><span data-stu-id="d4970-152">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="d4970-153">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</span><span class="sxs-lookup"><span data-stu-id="d4970-153">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="d4970-154">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</span><span class="sxs-lookup"><span data-stu-id="d4970-154">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="d4970-155">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</span><span class="sxs-lookup"><span data-stu-id="d4970-155">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="d4970-156">Constructeurs différents sont utilisés pour ces cas.</span><span class="sxs-lookup"><span data-stu-id="d4970-156">Different constructors are used for these cases.</span></span> <span data-ttu-id="d4970-157">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche les attributs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="d4970-157">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="d4970-158">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</span><span class="sxs-lookup"><span data-stu-id="d4970-158">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="d4970-159">Le <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> propriété est utilisée dans le `ShowAttributeData` méthode qui affiche des données d’attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="d4970-159">The <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="d4970-160">Dans cet exemple de code, cette propriété est utilisée pour afficher la liste d’arguments passés au constructeur qui a initialisé l’attribut.</span><span class="sxs-lookup"><span data-stu-id="d4970-160">In this code example, this property is used to display the list of arguments passed to the constructor that initialized the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="d4970-161">Objet à comparer à cette instance ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-161">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4970-162">Retourne une valeur qui indique si cette instance est égale à un objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-162">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4970-163">
            <see langword="true" /> si l’objet <paramref name="obj" /> est égal à l’instance actuelle ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-163">
              <see langword="true" /> if <paramref name="obj" /> is equal to the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4970-164">Retourne une liste d'objets <see cref="T:System.Reflection.CustomAttributeData" /> représentant des données relatives aux attributs qui ont été appliqués à la cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-164">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d4970-165">L’assembly dont les données d’attribut personnalisé doivent être récupérées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-165">The assembly whose custom attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4970-166">Renvoie une liste d’objets <see cref="T:System.Reflection.CustomAttributeData" /> représentant des données sur les attributs qui ont été appliqués à l’assembly cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-166">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4970-167">Liste d’objets représentant des données sur les attributs qui ont été appliqués à l’assembly cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-167">A list of objects that represent data about the attributes that have been applied to the target assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4970-168">Cette méthode fournit une alternative à la <xref:System.Reflection.Assembly.GetCustomAttributes%2A> méthode peut toujours être utilisée dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="d4970-168">This method provides an alternative to the <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4970-169">L’exemple suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</span><span class="sxs-lookup"><span data-stu-id="d4970-169">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="d4970-170">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</span><span class="sxs-lookup"><span data-stu-id="d4970-170">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="d4970-171">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</span><span class="sxs-lookup"><span data-stu-id="d4970-171">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="d4970-172">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</span><span class="sxs-lookup"><span data-stu-id="d4970-172">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="d4970-173">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</span><span class="sxs-lookup"><span data-stu-id="d4970-173">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="d4970-174">Constructeurs différents sont utilisés pour ces cas.</span><span class="sxs-lookup"><span data-stu-id="d4970-174">Different constructors are used for these cases.</span></span> <span data-ttu-id="d4970-175">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche les attributs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="d4970-175">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="d4970-176">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</span><span class="sxs-lookup"><span data-stu-id="d4970-176">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="d4970-177">Le <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> méthode est utilisée dans `Main()` pour obtenir les attributs personnalisés appliqués à l’assembly.</span><span class="sxs-lookup"><span data-stu-id="d4970-177">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes applied to the assembly.</span></span> <span data-ttu-id="d4970-178">La valeur de retour de la méthode est passée à la `ShowAttributeData` (méthode).</span><span class="sxs-lookup"><span data-stu-id="d4970-178">The return value of the method is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d4970-179">
            <paramref name="target" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-179">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d4970-180">Le membre dont les données d’attribut doivent être récupérées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-180">The member whose attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4970-181">Renvoie une liste d’objets <see cref="T:System.Reflection.CustomAttributeData" /> représentant des données sur les attributs qui ont été appliqués au membre cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-181">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4970-182">Liste d’objets représentant des données sur les attributs qui ont été appliqués au membre cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-182">A list of objects that represent data about the attributes that have been applied to the target member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4970-183">Cette surcharge de méthode obtient des données d’attribut personnalisé pour les types, les types imbriqués et les membres de type, car le <xref:System.Type> classe et les classes dans le <xref:System.Reflection> espace de noms qui représentent les membres de type dérivent toutes de <xref:System.Reflection.MemberInfo>.</span><span class="sxs-lookup"><span data-stu-id="d4970-183">This method overload gets custom attribute data for types, nested types, and type members, because the <xref:System.Type> class and the classes in the <xref:System.Reflection> namespace that represent type members all derive from <xref:System.Reflection.MemberInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4970-184">L’exemple suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</span><span class="sxs-lookup"><span data-stu-id="d4970-184">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="d4970-185">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</span><span class="sxs-lookup"><span data-stu-id="d4970-185">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="d4970-186">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</span><span class="sxs-lookup"><span data-stu-id="d4970-186">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="d4970-187">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</span><span class="sxs-lookup"><span data-stu-id="d4970-187">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="d4970-188">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</span><span class="sxs-lookup"><span data-stu-id="d4970-188">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="d4970-189">Constructeurs différents sont utilisés pour ces cas.</span><span class="sxs-lookup"><span data-stu-id="d4970-189">Different constructors are used for these cases.</span></span> <span data-ttu-id="d4970-190">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche les attributs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="d4970-190">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="d4970-191">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</span><span class="sxs-lookup"><span data-stu-id="d4970-191">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="d4970-192">Le <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> méthode est utilisée dans `Main()` pour obtenir les attributs personnalisés qui ont été appliqués à un type et à une méthode de test (<xref:System.Type> dérive <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="d4970-192">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes that were applied to a type and to a test method (<xref:System.Type> derives from <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="d4970-193">La valeur de retour de <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> est passé à la `ShowAttributeData` (méthode).</span><span class="sxs-lookup"><span data-stu-id="d4970-193">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d4970-194">
            <paramref name="target" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-194">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d4970-195">Le module dont les données d’attribut personnalisé doivent être récupérées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-195">The module whose custom attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4970-196">Renvoie une liste d’objets <see cref="T:System.Reflection.CustomAttributeData" /> représentant des données sur les attributs qui ont été appliqués au module cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-196">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4970-197">Une liste d’objets représentant des données sur les attributs qui ont été appliqués au module cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-197">A list of objects that represent data about the attributes that have been applied to the target module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d4970-198">
            <paramref name="target" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-198">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d4970-199">Le paramètre dont les données d’attribut doivent être récupérées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-199">The parameter whose attribute data is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4970-200">Retourne une liste d’objets <see cref="T:System.Reflection.CustomAttributeData" /> représentant des données sur les attributs qui ont été appliqués au paramètre cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-200">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4970-201">Une liste d’objets représentant des données sur les attributs qui ont été appliqués au paramètre cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-201">A list of objects that represent data about the attributes that have been applied to the target parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4970-202">Cette méthode fournit une alternative à la <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> méthode peut toujours être utilisée dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="d4970-202">This method provides an alternative to the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4970-203">L’exemple suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</span><span class="sxs-lookup"><span data-stu-id="d4970-203">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="d4970-204">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</span><span class="sxs-lookup"><span data-stu-id="d4970-204">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="d4970-205">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</span><span class="sxs-lookup"><span data-stu-id="d4970-205">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="d4970-206">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</span><span class="sxs-lookup"><span data-stu-id="d4970-206">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="d4970-207">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</span><span class="sxs-lookup"><span data-stu-id="d4970-207">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="d4970-208">Constructeurs différents sont utilisés pour ces cas.</span><span class="sxs-lookup"><span data-stu-id="d4970-208">Different constructors are used for these cases.</span></span> <span data-ttu-id="d4970-209">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche les attributs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="d4970-209">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="d4970-210">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</span><span class="sxs-lookup"><span data-stu-id="d4970-210">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="d4970-211">Le <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> méthode est utilisée dans `Main()` pour récupérer les attributs personnalisés appliqués à un paramètre d’une méthode de test.</span><span class="sxs-lookup"><span data-stu-id="d4970-211">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to retrieve the custom attributes applied to a parameter of a test method.</span></span> <span data-ttu-id="d4970-212">La valeur de retour de <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> est passé à la `ShowAttributeData` (méthode).</span><span class="sxs-lookup"><span data-stu-id="d4970-212">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d4970-213">
            <paramref name="target" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-213">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4970-214">Sert de fonction de hachage pour un type particulier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-214">Serves as a hash function for a particular type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4970-215">Code de hachage du <see cref="T:System.Object" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-215">A hash code for the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4970-216">Obtient la liste d'arguments nommés spécifiés pour l'instance d'attribut représentée par l'objet <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-216">Gets the list of named arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4970-217">Collection de structures représentant les arguments nommés spécifiés pour l'instance d'attribut personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-217">A collection of structures that represent the named arguments specified for the custom attribute instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4970-218">Cette méthode obtient les arguments nommés qui ont été spécifiées pour l’instance d’attribut personnalisé sans exécuter de code d’attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="d4970-218">This method gets the named arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="d4970-219">Par conséquent, il peut être utilisé dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="d4970-219">Thus, it can be used in the Reflection-only context.</span></span>  
  
 <span data-ttu-id="d4970-220">La liste retournée contient uniquement les arguments nommés qui ont été spécifiés pour l’instance d’attribut.</span><span class="sxs-lookup"><span data-stu-id="d4970-220">The list that is returned contains only the named arguments that were specified for the attribute instance.</span></span>  
  
 <span data-ttu-id="d4970-221">Utilisez la <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> méthode pour obtenir les arguments de position qui ont été spécifiés pour l’instance d’attribut.</span><span class="sxs-lookup"><span data-stu-id="d4970-221">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> method to get the positional arguments that were specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4970-222">L’exemple suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</span><span class="sxs-lookup"><span data-stu-id="d4970-222">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="d4970-223">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</span><span class="sxs-lookup"><span data-stu-id="d4970-223">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="d4970-224">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</span><span class="sxs-lookup"><span data-stu-id="d4970-224">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="d4970-225">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</span><span class="sxs-lookup"><span data-stu-id="d4970-225">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="d4970-226">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</span><span class="sxs-lookup"><span data-stu-id="d4970-226">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="d4970-227">Constructeurs différents sont utilisés pour ces cas.</span><span class="sxs-lookup"><span data-stu-id="d4970-227">Different constructors are used for these cases.</span></span> <span data-ttu-id="d4970-228">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche les attributs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="d4970-228">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="d4970-229">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</span><span class="sxs-lookup"><span data-stu-id="d4970-229">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="d4970-230">Le <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> propriété est utilisée dans le `ShowAttributeData` méthode qui affiche des données d’attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="d4970-230">The <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="d4970-231">Dans cet exemple de code, cette propriété est utilisée pour afficher la liste d’arguments nommés spécifiés pour l’attribut.</span><span class="sxs-lookup"><span data-stu-id="d4970-231">In this code example, this property is used to display the list of named arguments specified for the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4970-232">Retourne une représentation sous forme de chaîne de l'attribut personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-232">Returns a string representation of the custom attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4970-233">Valeur de chaîne qui représente l'attribut personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4970-233">A string value that represents the custom attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4970-234">La valeur de chaîne inclut le type d’attribut, les paramètres d’attribut et les paramètres nommés.</span><span class="sxs-lookup"><span data-stu-id="d4970-234">The string value includes the attribute type, the attribute parameters, and the named parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4970-235">L’exemple suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</span><span class="sxs-lookup"><span data-stu-id="d4970-235">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="d4970-236">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</span><span class="sxs-lookup"><span data-stu-id="d4970-236">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="d4970-237">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</span><span class="sxs-lookup"><span data-stu-id="d4970-237">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="d4970-238">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</span><span class="sxs-lookup"><span data-stu-id="d4970-238">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="d4970-239">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</span><span class="sxs-lookup"><span data-stu-id="d4970-239">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="d4970-240">Constructeurs différents sont utilisés pour ces cas.</span><span class="sxs-lookup"><span data-stu-id="d4970-240">Different constructors are used for these cases.</span></span> <span data-ttu-id="d4970-241">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche les attributs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="d4970-241">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="d4970-242">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</span><span class="sxs-lookup"><span data-stu-id="d4970-242">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="d4970-243">Dans cet exemple, le <xref:System.Reflection.CustomAttributeData.ToString%2A> méthode est utilisée dans le `ShowAttributeData` (méthode), pour identifier l’attribut dont les données sont affichées.</span><span class="sxs-lookup"><span data-stu-id="d4970-243">In this example, the <xref:System.Reflection.CustomAttributeData.ToString%2A> method is used in the `ShowAttributeData` method, to identify the attribute whose data is being displayed.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>