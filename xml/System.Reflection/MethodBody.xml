<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MethodBody.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54e22a412d8fff91a7c65aaaab079f7f7bbfbbed6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e22a412d8fff91a7c65aaaab079f7f7bbfbbed6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.MethodBody">
          <source>Provides access to the metadata and MSIL for the body of a method.</source>
          <target state="translated">Fournit un accès aux métadonnées et MSIL pour le corps d'une méthode.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class provides access to information about the local variables and exception-handling clauses in a method body, and to the Microsoft intermediate language (MSIL) that makes up the method body.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> classe fournit l’accès aux informations sur les variables locales et les clauses de gestion des exceptions dans un corps de méthode et au langage intermédiaire Microsoft (MSIL) qui compose le corps de la méthode.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>You can use the token-resolution methods of the module class, such as <ph id="ph1">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, to resolve the tokens in the method body to <ph id="ph4">&lt;xref:System.Type&gt;</ph> objects, <ph id="ph5">&lt;xref:System.Reflection.MethodInfo&gt;</ph> objects, and <ph id="ph6">&lt;xref:System.Reflection.FieldInfo&gt;</ph> objects that provide detailed information about the types, methods, and fields accessed by the MSIL in the method body.</source>
          <target state="translated">Vous pouvez utiliser les méthodes de résolution de jeton de la classe de module, tel que <ph id="ph1">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, pour résoudre les jetons dans le corps de méthode pour <ph id="ph4">&lt;xref:System.Type&gt;</ph> objets, <ph id="ph5">&lt;xref:System.Reflection.MethodInfo&gt;</ph> objets, et <ph id="ph6">&lt;xref:System.Reflection.FieldInfo&gt;</ph> des objets qui fournissent obtenir des informations détaillées sur les types, méthodes et champs auxquels accède le langage MSIL dans le corps de méthode.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>Parsing method bodies requires a thorough understanding of metadata and MSIL instruction formats.</source>
          <target state="translated">L’analyse du corps de méthode requiert une connaissance approfondie des métadonnées et des formats d’instructions MSIL.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">Vous trouverez des informations dans la documentation du Common Language Infrastructure (CLI), en particulier « Partition II : Metadata Definition et Semantics » et « Partition III : CIL Instruction Set ».</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">La documentation est disponible en ligne. Consultez <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> sur MSDN et <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> sur le site web d’Ecma International.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>To obtain a <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for a given method, first obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodInfo&gt;</ph> object for the method, then call the <ph id="ph3">&lt;xref:System.Reflection.MethodInfo&gt;</ph> object's <ph id="ph4">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A&gt;</ph> method.</source>
          <target state="translated">Pour obtenir un <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> de l’objet d’une méthode donnée, d’abord obtenir un <ph id="ph2">&lt;xref:System.Reflection.MethodInfo&gt;</ph> objet pour la méthode, puis appelez le <ph id="ph3">&lt;xref:System.Reflection.MethodInfo&gt;</ph> l’objet <ph id="ph4">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays its local variable information and exception-handling clauses.</source>
          <target state="translated">L’exemple de code suivant définit une méthode de test nommée <ph id="ph1">`MethodBodyExample`</ph> et affiche ses informations de variable locale et les clauses de gestion des exceptions.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> méthode est utilisée pour obtenir un <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> objet pour la méthode de test.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> property to obtain a list of <ph id="ph2">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph> objects and then displays their types and index order.</source>
          <target state="translated">L’exemple utilise le <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> propriété pour obtenir une liste de <ph id="ph2">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph> objets, puis affiche leurs types et leur ordre d’index.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> property is used to obtain a list of exception-handling clauses.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> propriété est utilisée pour obtenir une liste des clauses de gestion des exceptions.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>Not all computer languages can generate <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType&gt;</ph> clauses.</source>
          <target state="translated">Pas de tous les langages de programmation peuvent générer <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType&gt;</ph> clauses.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodBody">
          <source>The Visual Basic example shows a filter clause, using a Visual Basic <ph id="ph1">`When`</ph> expression, which is omitted from the examples for other languages.</source>
          <target state="translated">L’exemple Visual Basic montre une clause de filtre, l’aide de Visual Basic <ph id="ph1">`When`</ph> expression, qui est omise dans les exemples pour d’autres langues.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Reflection.MethodBody.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.MethodBody" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Reflection.MethodBody" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.#ctor">
          <source>This constructor is invoked by derived classes during the construction of <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> objects.</source>
          <target state="translated">Ce constructeur est appelé par les classes dérivées lors de la construction de <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Gets a list that includes all the exception-handling clauses in the method body.</source>
          <target state="translated">Obtient une liste qui inclut toutes les clauses de gestion des exceptions dans le corps de la méthode.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Reflection.ExceptionHandlingClause" /&gt;</ph> objects representing the exception-handling clauses in the body of the method.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Reflection.ExceptionHandlingClause" /&gt;</ph> objets représentant les clauses de gestion des exceptions dans le corps de la méthode.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The list includes all clauses from all try blocks in the method body.</source>
          <target state="translated">La liste inclut toutes les clauses de tous les blocs try dans le corps de méthode.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Each <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> object contains information that identifies the try block with which it is associated.</source>
          <target state="translated">Chaque <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> objet contient des informations qui identifient le bloc try auquel il est associé.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Working with exception-handling clauses requires a thorough understanding of metadata and MSIL instruction formats.</source>
          <target state="translated">L’utilisation des clauses de gestion des exceptions requiert une connaissance approfondie des métadonnées et des formats d’instructions MSIL.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">Vous trouverez des informations dans la documentation du Common Language Infrastructure (CLI), en particulier « Partition II : Metadata Definition et Semantics » et « Partition III : CIL Instruction Set ».</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">La documentation est disponible en ligne. Consultez <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> sur MSDN et <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> sur le site web d’Ecma International.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays information about its exception-handling clauses.</source>
          <target state="translated">L’exemple de code suivant définit une méthode de test nommée <ph id="ph1">`MethodBodyExample`</ph> et affiche des informations sur ses clauses de gestion des exceptions.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> méthode est utilisée pour obtenir un <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> objet pour la méthode de test.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> property is used to obtain a list of <ph id="ph2">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> objects.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> propriété est utilisée pour obtenir une liste de <ph id="ph2">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>Not all computer languages can generate <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType&gt;</ph> clauses.</source>
          <target state="translated">Pas de tous les langages de programmation peuvent générer <ph id="ph1">&lt;xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType&gt;</ph> clauses.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>The Visual Basic example shows a filter clause, using a Visual Basic <ph id="ph1">`When`</ph> expression, which is omitted from the examples for other languages.</source>
          <target state="translated">L’exemple Visual Basic montre une clause de filtre, l’aide de Visual Basic <ph id="ph1">`When`</ph> expression, qui est omise dans les exemples pour d’autres langues.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>Returns the MSIL for the method body, as an array of bytes.</source>
          <target state="translated">Retourne le MSIL pour le corps de méthode, sous forme de tableau d'octets.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the MSIL for the method body.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> qui contient le MSIL pour le corps de méthode.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>You can use the token-resolution methods of the module class, such as <ph id="ph1">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Reflection.Module.ResolveMember%2A&gt;</ph>, to resolve the tokens in the method body to <ph id="ph4">&lt;xref:System.Type&gt;</ph> objects, <ph id="ph5">&lt;xref:System.Reflection.MethodInfo&gt;</ph> objects, and <ph id="ph6">&lt;xref:System.Reflection.FieldInfo&gt;</ph> objects that provide detailed information about the types, methods, and fields accessed by the MSIL in the method body.</source>
          <target state="translated">Vous pouvez utiliser les méthodes de résolution de jeton de la classe de module, tel que <ph id="ph1">&lt;xref:System.Reflection.Module.ResolveType%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.Module.ResolveMethod%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Reflection.Module.ResolveMember%2A&gt;</ph>, pour résoudre les jetons dans le corps de méthode pour <ph id="ph4">&lt;xref:System.Type&gt;</ph> objets, <ph id="ph5">&lt;xref:System.Reflection.MethodInfo&gt;</ph> objets, et <ph id="ph6">&lt;xref:System.Reflection.FieldInfo&gt;</ph> des objets qui fournissent obtenir des informations détaillées sur les types, méthodes et champs auxquels accède le langage MSIL dans le corps de méthode.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>Parsing method bodies requires a thorough understanding of metadata and MSIL instruction formats.</source>
          <target state="translated">L’analyse du corps de méthode requiert une connaissance approfondie des métadonnées et des formats d’instructions MSIL.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">Vous trouverez des informations dans la documentation du Common Language Infrastructure (CLI), en particulier « Partition II : Metadata Definition et Semantics » et « Partition III : CIL Instruction Set ».</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.MethodBody.GetILAsByteArray">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">La documentation est disponible en ligne. Consultez <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> sur MSDN et <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> sur le site web d’Ecma International.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>Gets a value indicating whether local variables in the method body are initialized to the default values for their types.</source>
          <target state="translated">Obtient une valeur indiquant si les variables locales du corps de méthode sont initialisées aux valeurs par défaut pour leurs types.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the method body contains code to initialize local variables to <ph id="ph2">&lt;see langword="null" /&gt;</ph> for reference types, or to the zero-initialized value for value types; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le corps de méthode contient du code pour affecter aux variables locales la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph> pour les types référence, ou la valeur initialisée à zéro pour les types valeur ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> property refers to variables that are not explicitly initialized; that is, variables that are declared with syntax such as <ph id="ph2">`int x;`</ph> in C# or <ph id="ph3">`Dim x As Integer`</ph> in Visual Basic.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> propriété fait référence à des variables qui ne sont pas explicitement initialisées, c'est-à-dire, les variables déclarées avec la syntaxe comme <ph id="ph2">`int x;`</ph> en c# ou <ph id="ph3">`Dim x As Integer`</ph> en Visual Basic.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>Reference variables are initialized to <ph id="ph1">`null`</ph> by default.</source>
          <target state="translated">Variables de référence sont initialisés à <ph id="ph1">`null`</ph> par défaut.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>Numeric variables are initialized to zero.</source>
          <target state="translated">Les variables numériques sont initialisées à zéro.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays its local variable information and exception-handling clauses.</source>
          <target state="translated">L’exemple de code suivant définit une méthode de test nommée <ph id="ph1">`MethodBodyExample`</ph> et affiche ses informations de variable locale et les clauses de gestion des exceptions.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> méthode est utilisée pour obtenir un <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> objet pour la méthode de test.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.MaxStackSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> properties are displayed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.MethodBody.MaxStackSize%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> propriétés sont affichées.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.InitLocals">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>Gets a metadata token for the signature that describes the local variables for the method in metadata.</source>
          <target state="translated">Obtient un jeton de métadonnées pour la signature qui décrit les variables locales pour la méthode dans les métadonnées.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>An integer that represents the metadata token.</source>
          <target state="translated">Entier qui représente le jeton de métadonnées.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>Use the <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> property to obtain information about the method's local variables.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> propriété pour obtenir des informations sur les variables locales de la méthode.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>Information about local variable signatures can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</source>
          <target state="translated">Vous trouverez plus d’informations sur les signatures de variables locales dans la documentation du Common Language Infrastructure (CLI), en particulier « Partition II : Metadata Definition et Semantics ».</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalSignatureMetadataToken">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">La documentation est disponible en ligne. Consultez <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> sur MSDN et <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> sur le site web d’Ecma International.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>Gets the list of local variables declared in the method body.</source>
          <target state="translated">Obtient la liste des variables locales déclarées dans le corps de méthode.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Reflection.LocalVariableInfo" /&gt;</ph> objects that describe the local variables declared in the method body.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> d'objets <ph id="ph2">&lt;see cref="T:System.Reflection.LocalVariableInfo" /&gt;</ph> qui décrivent les variables locales déclarées dans le corps de méthode.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>You do not need the metadata token for the local variable signature provided by the <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalSignatureMetadataToken%2A&gt;</ph> property.</source>
          <target state="translated">Vous n’avez pas besoin du jeton de métadonnées pour la signature de variable locale fournie par le <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalSignatureMetadataToken%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays its local variable information.</source>
          <target state="translated">L’exemple de code suivant définit une méthode de test nommée <ph id="ph1">`MethodBodyExample`</ph> et affiche ses informations de variable locale.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> méthode est utilisée pour obtenir un <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> objet pour la méthode de test.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> property is used to obtain a list of <ph id="ph2">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph> objects.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> propriété est utilisée pour obtenir une liste de <ph id="ph2">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.LocalVariables">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>Gets the maximum number of items on the operand stack when the method is executing.</source>
          <target state="translated">Obtient le nombre maximal d'éléments sur le tas d'opérandes lorsque la méthode s'exécute.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The maximum number of items on the operand stack when the method is executing.</source>
          <target state="translated">Nombre maximal d'éléments sur le tas d'opérandes lorsque la méthode s'exécute.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>For more information, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">Pour plus d’informations, consultez la documentation du Common Language Infrastructure (CLI), en particulier « Partition II : Metadata Definition et Semantics » et « Partition III : CIL Instruction Set ».</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">La documentation est disponible en ligne. Consultez <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> sur MSDN et <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> sur le site web d’Ecma International.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph> and displays its local variable information and exception-handling clauses.</source>
          <target state="translated">L’exemple de code suivant définit une méthode de test nommée <ph id="ph1">`MethodBodyExample`</ph> et affiche ses informations de variable locale et les clauses de gestion des exceptions.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> méthode est utilisée pour obtenir un <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> objet pour la méthode de test.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.MaxStackSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> properties are displayed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.MethodBody.MaxStackSize%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Reflection.MethodBody.InitLocals%2A&gt;</ph> propriétés sont affichées.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.MethodBody.MaxStackSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> classe.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>