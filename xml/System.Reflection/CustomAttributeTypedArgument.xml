<Type Name="CustomAttributeTypedArgument" FullName="System.Reflection.CustomAttributeTypedArgument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5d1ec529757045ee60974de7538e486877eb0ff" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30479823" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CustomAttributeTypedArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CustomAttributeTypedArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeTypedArgument" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomAttributeTypedArgument" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomAttributeTypedArgument" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="02c6a-101">Représente un argument d’un attribut personnalisé dans le contexte de réflexion uniquement, ou un élément d’un argument de tableau.</span>
      <span class="sxs-lookup">
        <span data-stu-id="02c6a-101">Represents an argument of a custom attribute in the reflection-only context, or an element of an array argument.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02c6a-102">Code qui est examiné dans le contexte de réflexion uniquement ne peut pas être exécuté, elle n’est pas toujours possible d’examiner des attributs personnalisés en créant des instances de leur et puis examiner leurs propriétés, à l’aide des méthodes, telles que <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, etc. .</span><span class="sxs-lookup"><span data-stu-id="02c6a-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="02c6a-103">Si le code du type d’attribut lui-même est chargé dans le contexte de réflexion uniquement, elle ne peut pas être exécutée.</span><span class="sxs-lookup"><span data-stu-id="02c6a-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="02c6a-104">Le <xref:System.Reflection.CustomAttributeNamedArgument> structure est utilisée par la <xref:System.Reflection.CustomAttributeData> classe pour fournir l’accès au type et valeur d’un argument de position spécifié pour une instance de l’attribut personnalisé, sans exécuter le constructeur d’attribut.</span><span class="sxs-lookup"><span data-stu-id="02c6a-104">The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor.</span></span> <span data-ttu-id="02c6a-105">Il fournit également l’accès pour le type et la valeur d’un argument nommé sans exécuter le code de la propriété correspondante du type d’attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="02c6a-105">It also provides access to the type and value of a named argument without executing the code of the corresponding property of the custom attribute type.</span></span>  
  
 <span data-ttu-id="02c6a-106">Les types et les valeurs de tous les arguments nommés et positionnels d’une instance d’attribut sont fournis par <xref:System.Reflection.CustomAttributeTypedArgument> structures.</span><span class="sxs-lookup"><span data-stu-id="02c6a-106">The types and values of all the positional and named arguments of an attribute instance are provided by <xref:System.Reflection.CustomAttributeTypedArgument> structures.</span></span> <span data-ttu-id="02c6a-107">Les attributs de position retournés par la <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType> propriété sont représentés directement par <xref:System.Reflection.CustomAttributeTypedArgument> structures, mais les arguments nommés retournés par la <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType> propriété sont représentées par <xref:System.Reflection.CustomAttributeNamedArgument> structures ; pour obtenir le <xref:System.Reflection.CustomAttributeTypedArgument> structure pour un argument nommé, utilisez la <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="02c6a-107">The positional attributes returned by the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType> property are directly represented by <xref:System.Reflection.CustomAttributeTypedArgument> structures, but the named arguments returned by the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType> property are represented by <xref:System.Reflection.CustomAttributeNamedArgument> structures; to get the <xref:System.Reflection.CustomAttributeTypedArgument> structure for a named argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="02c6a-108">Si un argument est un tableau de valeurs, le <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propriété de la <xref:System.Reflection.CustomAttributeTypedArgument> que représente l’argument retourne une collection générique <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> de <xref:System.Reflection.CustomAttributeTypedArgument> objets.</span><span class="sxs-lookup"><span data-stu-id="02c6a-108">If an argument is an array of values, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property of the <xref:System.Reflection.CustomAttributeTypedArgument> that represents the argument returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="02c6a-109">Chaque <xref:System.Reflection.CustomAttributeTypedArgument> objet dans la collection représente l’élément correspondant du tableau.</span><span class="sxs-lookup"><span data-stu-id="02c6a-109">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="02c6a-110">Pour créer des instances de la <xref:System.Reflection.CustomAttributeData> de classe, utilisez le `static` <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> méthode de fabrique.</span><span class="sxs-lookup"><span data-stu-id="02c6a-110">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02c6a-111">L’exemple suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</span><span class="sxs-lookup"><span data-stu-id="02c6a-111">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="02c6a-112">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</span><span class="sxs-lookup"><span data-stu-id="02c6a-112">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="02c6a-113">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</span><span class="sxs-lookup"><span data-stu-id="02c6a-113">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="02c6a-114">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</span><span class="sxs-lookup"><span data-stu-id="02c6a-114">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="02c6a-115">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</span><span class="sxs-lookup"><span data-stu-id="02c6a-115">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="02c6a-116">Constructeurs différents sont utilisés pour ces cas.</span><span class="sxs-lookup"><span data-stu-id="02c6a-116">Different constructors are used for these cases.</span></span> <span data-ttu-id="02c6a-117">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche les attributs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="02c6a-117">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="02c6a-118">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</span><span class="sxs-lookup"><span data-stu-id="02c6a-118">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.CustomAttributeData" />
    <altmember cref="T:System.Reflection.CustomAttributeNamedArgument" />
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="02c6a-119">Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.CustomAttributeTypedArgument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-119">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="02c6a-120">Valeur de l'argument d'attribut personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-120">The value of the custom attribute argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02c6a-121">Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> avec la valeur spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-121">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class with the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02c6a-122">Le `value` paramètre ne peut pas être `null` pour ce constructeur, car le type d’argument est déduit du type de `value`.</span><span class="sxs-lookup"><span data-stu-id="02c6a-122">The `value` parameter cannot be `null` for this constructor, because the argument type is inferred from the type of `value`.</span></span> <span data-ttu-id="02c6a-123">Pour spécifier un `null` , utilisez le <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> constructeur.</span><span class="sxs-lookup"><span data-stu-id="02c6a-123">To specify a `null` value, use the <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> constructor.</span></span>  
  
 <span data-ttu-id="02c6a-124">Ce constructeur est utilisé par les héritiers de la <xref:System.Reflection.CustomAttributeTypedArgument> classe.</span><span class="sxs-lookup"><span data-stu-id="02c6a-124">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class.</span></span> <span data-ttu-id="02c6a-125">Il n’est pas destinée à être utilisée dans du code d’application.</span><span class="sxs-lookup"><span data-stu-id="02c6a-125">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02c6a-126">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-126">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (Type argumentType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type argumentType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (argumentType As Type, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(Type ^ argumentType, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="argumentType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argumentType">
          <span data-ttu-id="02c6a-127">Type de l'argument d'attribut personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-127">The type of the custom attribute argument.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="02c6a-128">Valeur de l'argument d'attribut personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-128">The value of the custom attribute argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02c6a-129">Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> avec le type et la valeur spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-129">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class with the specified type and value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02c6a-130">Ce constructeur est utilisé par les héritiers de la <xref:System.Reflection.CustomAttributeTypedArgument> classe.</span><span class="sxs-lookup"><span data-stu-id="02c6a-130">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class.</span></span> <span data-ttu-id="02c6a-131">Il n’est pas destinée à être utilisée dans du code d’application.</span><span class="sxs-lookup"><span data-stu-id="02c6a-131">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="02c6a-132">
            <paramref name="argumentType" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-132">
              <paramref name="argumentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ArgumentType">
      <MemberSignature Language="C#" Value="public Type ArgumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ArgumentType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ArgumentType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02c6a-133">Obtient le type de l'argument ou de l'élément d'argument de tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-133">Gets the type of the argument or of the array argument element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02c6a-134">Objet <see cref="T:System.Type" /> représentant le type de l'argument ou de l'élément de tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-134">A <see cref="T:System.Type" /> object representing the type of the argument or of the array element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02c6a-135">Pour les arguments simples ou pour les éléments d’arguments de tableau, cette propriété identifie le type réel de la valeur retournée par la <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="02c6a-135">For simple arguments or for elements of array arguments, this property identifies the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property.</span></span> <span data-ttu-id="02c6a-136">Pour les arguments de tableau, cette propriété retourne le type de tableau, mais la <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propriété retourne un `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` en Visual Basic) dans lequel chaque élément de la collection représente l’élément correspondant de l’argument de tableau.</span><span class="sxs-lookup"><span data-stu-id="02c6a-136">For array arguments, this property returns the array type, but the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic) in which each element of the collection represents the corresponding element of the array argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02c6a-137">L’exemple suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</span><span class="sxs-lookup"><span data-stu-id="02c6a-137">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="02c6a-138">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</span><span class="sxs-lookup"><span data-stu-id="02c6a-138">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="02c6a-139">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</span><span class="sxs-lookup"><span data-stu-id="02c6a-139">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="02c6a-140">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</span><span class="sxs-lookup"><span data-stu-id="02c6a-140">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="02c6a-141">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</span><span class="sxs-lookup"><span data-stu-id="02c6a-141">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="02c6a-142">Constructeurs différents sont utilisés pour ces cas.</span><span class="sxs-lookup"><span data-stu-id="02c6a-142">Different constructors are used for these cases.</span></span> <span data-ttu-id="02c6a-143">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche les attributs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="02c6a-143">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="02c6a-144">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</span><span class="sxs-lookup"><span data-stu-id="02c6a-144">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="02c6a-145">Le <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> propriété est utilisée dans le `ShowValueOrArray` méthode qui affiche des données d’attribut personnalisé, pour afficher les types d’attributs.</span><span class="sxs-lookup"><span data-stu-id="02c6a-145">The <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property is used in the `ShowValueOrArray` method that displays custom attribute data, to display the types of attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeTypedArgument.Value" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="02c6a-146">Autre objet de comparaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-146">Another object to compare to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02c6a-147">Indique si cette instance et un objet spécifié sont égaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-147">Indicates whether this instance and a specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02c6a-148">
            <see langword="true" /> si <paramref name="obj" /> et cette instance sont du même type et représentent la même valeur ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-148">
              <see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="02c6a-149">Retourne le code de hachage de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-149">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02c6a-150">Entier signé 32 bits qui est le code de hachage pour cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-150">A 32-bit signed integer that is the hash code for this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="02c6a-151">La structure <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> qui se trouve à gauche de l'opérateur d'égalité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-151">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the left of the equality operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="02c6a-152">La structure <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> qui se trouve à droite de l'opérateur d'égalité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-152">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the right of the equality operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02c6a-153">Vérifie si deux structures <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> sont équivalentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-153">Tests whether two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02c6a-154">
            <see langword="true" /> si les deux structures <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> sont égales ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-154">
              <see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="02c6a-155">La méthode équivalente pour cet opérateur est <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="02c6a-155">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="02c6a-156">Structure <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> qui se trouve à gauche de l’opérateur d’inégalité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-156">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the left of the inequality operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="02c6a-157">Structure <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> qui se trouve à droite de l’opérateur d’inégalité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-157">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the right of the inequality operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02c6a-158">Vérifie si deux structures <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> sont différentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-158">Tests whether two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are different.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02c6a-159">
            <see langword="true" /> si les deux structures <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> sont différentes ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-159">
              <see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are different; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="02c6a-160">La méthode équivalente pour cet opérateur est <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="02c6a-160">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="02c6a-161">Retourne une chaîne composée du nom d’argument, du signe égal et d’une représentation de chaîne de la valeur de l’argument .</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-161">Returns a string consisting of the argument name, the equal sign, and a string representation of the argument value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02c6a-162">Chaîne composée du nom d’argument, du signe égal et d’une représentation de chaîne de la valeur de l’argument .</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-162">A string consisting of the argument name, the equal sign, and a string representation of the argument value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02c6a-163">Obtient la valeur de l'argument pour un argument simple ou pour un élément d'un argument de tableau ; obtient une collection de valeurs pour un argument de tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-163">Gets the value of the argument for a simple argument or for an element of an array argument; gets a collection of values for an array argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02c6a-164">Objet qui représente la valeur de l'argument ou de l'élément ou <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> générique d'objets <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> qui représentent les valeurs d'un argument de type tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02c6a-164">An object that represents the value of the argument or element, or a generic <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> objects that represent the values of an array-type argument.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02c6a-165">Si le <xref:System.Reflection.CustomAttributeTypedArgument> représente un argument de tableau, cette propriété retourne un `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="02c6a-165">If the <xref:System.Reflection.CustomAttributeTypedArgument> represents an array argument, this property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic).</span></span> <span data-ttu-id="02c6a-166">Chaque élément de la collection représente l’élément correspondant de l’argument de tableau.</span><span class="sxs-lookup"><span data-stu-id="02c6a-166">Each element of the collection represents the corresponding element of the array argument.</span></span>  
  
 <span data-ttu-id="02c6a-167">Le type de la valeur peut être obtenu à l’aide de la <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="02c6a-167">The type of the value can be obtained by using the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property.</span></span> <span data-ttu-id="02c6a-168"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> Obtient le type réel de la valeur retournée par la <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propriété pour les arguments simples ou pour les éléments d’arguments de tableau.</span><span class="sxs-lookup"><span data-stu-id="02c6a-168"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> gets the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property for simple arguments or for elements of array arguments.</span></span> <span data-ttu-id="02c6a-169">Il retourne le type de tableau pour les arguments de tableau.</span><span class="sxs-lookup"><span data-stu-id="02c6a-169">It returns the array type for array arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02c6a-170">L’exemple suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</span><span class="sxs-lookup"><span data-stu-id="02c6a-170">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="02c6a-171">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</span><span class="sxs-lookup"><span data-stu-id="02c6a-171">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="02c6a-172">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</span><span class="sxs-lookup"><span data-stu-id="02c6a-172">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="02c6a-173">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</span><span class="sxs-lookup"><span data-stu-id="02c6a-173">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="02c6a-174">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</span><span class="sxs-lookup"><span data-stu-id="02c6a-174">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="02c6a-175">Constructeurs différents sont utilisés pour ces cas.</span><span class="sxs-lookup"><span data-stu-id="02c6a-175">Different constructors are used for these cases.</span></span> <span data-ttu-id="02c6a-176">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche les attributs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="02c6a-176">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="02c6a-177">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</span><span class="sxs-lookup"><span data-stu-id="02c6a-177">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="02c6a-178">Le <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propriété est utilisée dans le `ShowValueOrArray` méthode qui affiche des données d’attribut personnalisé, pour afficher les valeurs d’attributs.</span><span class="sxs-lookup"><span data-stu-id="02c6a-178">The <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property is used in the `ShowValueOrArray` method that displays custom attribute data, to display the values of attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 <span data-ttu-id="02c6a-179"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A></span><span class="sxs-lookup"><span data-stu-id="02c6a-179"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>