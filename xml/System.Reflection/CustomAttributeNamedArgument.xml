<Type Name="CustomAttributeNamedArgument" FullName="System.Reflection.CustomAttributeNamedArgument">
  <TypeSignature Language="C#" Value="public struct CustomAttributeNamedArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CustomAttributeNamedArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeNamedArgument" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomAttributeNamedArgument" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomAttributeNamedArgument" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e5d72-101">Représente un argument nommé d’un attribut personnalisé dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="e5d72-101">Represents a named argument of a custom attribute in the reflection-only context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d72-102">Code qui est examiné dans le contexte de réflexion uniquement ne peut pas être exécuté, elle n’est pas toujours possible d’examiner des attributs personnalisés en créant des instances de leur et puis examiner leurs propriétés, à l’aide des méthodes, telles que <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, etc. .</span><span class="sxs-lookup"><span data-stu-id="e5d72-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="e5d72-103">Si le code du type d’attribut lui-même est chargé dans le contexte de réflexion uniquement, elle ne peut pas être exécutée.</span><span class="sxs-lookup"><span data-stu-id="e5d72-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="e5d72-104">Le <xref:System.Reflection.CustomAttributeNamedArgument> structure est utilisée par la <xref:System.Reflection.CustomAttributeData> classe pour fournir l’accès à un argument nommé spécifié pour une instance de l’attribut personnalisé, sans exécuter le code de la propriété correspondante du type d’attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="e5d72-104">The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to a named argument specified for a custom attribute instance, without executing the code of the corresponding property of the custom attribute type.</span></span> <span data-ttu-id="e5d72-105">Le <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> propriété retourne un <xref:System.Reflection.CustomAttributeTypedArgument> structure qui contient le type et la valeur de l’argument nommé.</span><span class="sxs-lookup"><span data-stu-id="e5d72-105">The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property returns a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value of the named argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e5d72-106">Si un argument nommé ou positionnel, vous devez accéder à son type et sa valeur à l’aide de la <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span><span class="sxs-lookup"><span data-stu-id="e5d72-106">Whether an argument is named or positional, you must access its type and value by using the <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="e5d72-107">Pour créer des instances de la <xref:System.Reflection.CustomAttributeData> de classe, utilisez le `static` <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> méthode de fabrique.</span><span class="sxs-lookup"><span data-stu-id="e5d72-107">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5d72-108">L’exemple suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</span><span class="sxs-lookup"><span data-stu-id="e5d72-108">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="e5d72-109">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</span><span class="sxs-lookup"><span data-stu-id="e5d72-109">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="e5d72-110">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</span><span class="sxs-lookup"><span data-stu-id="e5d72-110">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="e5d72-111">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</span><span class="sxs-lookup"><span data-stu-id="e5d72-111">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="e5d72-112">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</span><span class="sxs-lookup"><span data-stu-id="e5d72-112">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="e5d72-113">Constructeurs différents sont utilisés pour ces cas.</span><span class="sxs-lookup"><span data-stu-id="e5d72-113">Different constructors are used for these cases.</span></span> <span data-ttu-id="e5d72-114">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche des informations sur les attributs personnalisés qui ont été appliquées à ce dernier et le type et les membres qu’il contient.</span><span class="sxs-lookup"><span data-stu-id="e5d72-114">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="e5d72-115">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</span><span class="sxs-lookup"><span data-stu-id="e5d72-115">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.CustomAttributeData" />
    <altmember cref="T:System.Reflection.CustomAttributeTypedArgument" />
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e5d72-116">Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.CustomAttributeNamedArgument" />.</span><span class="sxs-lookup"><span data-stu-id="e5d72-116">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeNamedArgument (System.Reflection.MemberInfo memberInfo, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo memberInfo, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeNamedArgument(System::Reflection::MemberInfo ^ memberInfo, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="memberInfo"><span data-ttu-id="e5d72-117">Champ ou propriété de l'attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="e5d72-117">A field or property of the custom attribute.</span></span> <span data-ttu-id="e5d72-118">Le nouvel objet <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> représente ce membre et sa valeur.</span><span class="sxs-lookup"><span data-stu-id="e5d72-118">The new <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> object represents this member and its value.</span></span></param>
        <param name="value"><span data-ttu-id="e5d72-119">Valeur du champ ou de la propriété de l'attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="e5d72-119">The value of the field or property of the custom attribute.</span></span></param>
        <summary><span data-ttu-id="e5d72-120">Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.CustomAttributeNamedArgument" />, qui représente le champ ou la propriété spécifique de l'attribut personnalisé, et spécifie la valeur du champ ou de la propriété.</span><span class="sxs-lookup"><span data-stu-id="e5d72-120">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class, which represents the specified field or property of the custom attribute, and specifies the value of the field or property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d72-121">Ce constructeur est utilisé par les héritiers de la <xref:System.Reflection.CustomAttributeNamedArgument> classe.</span><span class="sxs-lookup"><span data-stu-id="e5d72-121">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class.</span></span> <span data-ttu-id="e5d72-122">Il n’est pas destinée à être utilisée dans du code d’application.</span><span class="sxs-lookup"><span data-stu-id="e5d72-122">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5d72-123"><paramref name="memberInfo" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e5d72-123"><paramref name="memberInfo" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e5d72-124"><paramref name="memberInfo" /> n'est pas un champ ou une propriété de l'attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="e5d72-124"><paramref name="memberInfo" /> is not a field or property of the custom attribute.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeNamedArgument (System.Reflection.MemberInfo memberInfo, System.Reflection.CustomAttributeTypedArgument typedArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo memberInfo, valuetype System.Reflection.CustomAttributeTypedArgument typedArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeNamedArgument(System::Reflection::MemberInfo ^ memberInfo, System::Reflection::CustomAttributeTypedArgument typedArgument);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="typedArgument" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="memberInfo"><span data-ttu-id="e5d72-125">Champ ou propriété de l'attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="e5d72-125">A field or property of the custom attribute.</span></span> <span data-ttu-id="e5d72-126">Le nouvel objet <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> représente ce membre et sa valeur.</span><span class="sxs-lookup"><span data-stu-id="e5d72-126">The new <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> object represents this member and its value.</span></span></param>
        <param name="typedArgument"><span data-ttu-id="e5d72-127">Objet qui décrit le type et la valeur du champ ou de la propriété.</span><span class="sxs-lookup"><span data-stu-id="e5d72-127">An object that describes the type and value of the field or property.</span></span></param>
        <summary><span data-ttu-id="e5d72-128">Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.CustomAttributeNamedArgument" />, qui représente le champ ou la propriété spécifique de l'attribut personnalisé, et spécifie un objet <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> qui décrit le type et la valeur du champ ou de la propriété.</span><span class="sxs-lookup"><span data-stu-id="e5d72-128">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class, which represents the specified field or property of the custom attribute, and specifies a <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> object that describes the type and value of the field or property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d72-129">Ce constructeur est utilisé par les héritiers de la <xref:System.Reflection.CustomAttributeNamedArgument> classe.</span><span class="sxs-lookup"><span data-stu-id="e5d72-129">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class.</span></span> <span data-ttu-id="e5d72-130">Il n’est pas destinée à être utilisée dans du code d’application.</span><span class="sxs-lookup"><span data-stu-id="e5d72-130">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5d72-131"><paramref name="memberInfo" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e5d72-131"><paramref name="memberInfo" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e5d72-132">Objet à comparer à cette instance ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e5d72-132">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e5d72-133">Retourne une valeur qui indique si cette instance est égale à un objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="e5d72-133">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="e5d72-134"><see langword="true" /> si <paramref name="obj" /> est égal au type et à la valeur de cette instance ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e5d72-134"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5d72-135">Retourne le code de hachage de cette instance.</span><span class="sxs-lookup"><span data-stu-id="e5d72-135">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="e5d72-136">Code de hachage d'un entier signé 32 bits.</span><span class="sxs-lookup"><span data-stu-id="e5d72-136">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsField">
      <MemberSignature Language="C#" Value="public bool IsField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsField" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.IsField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsField As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsField { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5d72-137">Obtient une valeur qui indique si l'argument nommé est un champ.</span><span class="sxs-lookup"><span data-stu-id="e5d72-137">Gets a value that indicates whether the named argument is a field.</span></span></summary>
        <value>
          <span data-ttu-id="e5d72-138"><see langword="true" /> si l'argument nommé est un champ ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e5d72-138"><see langword="true" /> if the named argument is a field; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo MemberInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo MemberInfo" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.MemberInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberInfo As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ MemberInfo { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5d72-139">Obtient le membre d'attribut qui serait utilisé pour définir l'argument nommé.</span><span class="sxs-lookup"><span data-stu-id="e5d72-139">Gets the attribute member that would be used to set the named argument.</span></span></summary>
        <value><span data-ttu-id="e5d72-140">Membre d'attribut qui serait utilisé pour définir l'argument nommé.</span><span class="sxs-lookup"><span data-stu-id="e5d72-140">The attribute member that would be used to set the named argument.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d72-141">Dans la plupart des cas, le membre est une propriété.</span><span class="sxs-lookup"><span data-stu-id="e5d72-141">In most cases, the member is a property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MemberName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5d72-142">Obtient le nom du membre d'attribut qui serait utilisé pour définir l'argument nommé.</span><span class="sxs-lookup"><span data-stu-id="e5d72-142">Gets the name of the attribute member that would be used to set the named argument.</span></span></summary>
        <value><span data-ttu-id="e5d72-143">Nom du membre d'attribut qui serait utilisé pour définir l'argument nommé.</span><span class="sxs-lookup"><span data-stu-id="e5d72-143">The name of the attribute member that would be used to set the named argument.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.CustomAttributeNamedArgument left, valuetype System.Reflection.CustomAttributeNamedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CustomAttributeNamedArgument, right As CustomAttributeNamedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::CustomAttributeNamedArgument left, System::Reflection::CustomAttributeNamedArgument right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeNamedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeNamedArgument" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e5d72-144">La structure qui se trouve à gauche de l'opérateur d'égalité.</span><span class="sxs-lookup"><span data-stu-id="e5d72-144">The structure to the left of the equality operator.</span></span></param>
        <param name="right"><span data-ttu-id="e5d72-145">La structure qui se trouve à droite de l'opérateur d'égalité.</span><span class="sxs-lookup"><span data-stu-id="e5d72-145">The structure to the right of the equality operator.</span></span></param>
        <summary><span data-ttu-id="e5d72-146">Vérifie si deux structures <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> sont équivalentes.</span><span class="sxs-lookup"><span data-stu-id="e5d72-146">Tests whether two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are equivalent.</span></span></summary>
        <returns>
          <span data-ttu-id="e5d72-147"><see langword="true" /> si les deux structures <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> sont égales ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e5d72-147"><see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="e5d72-148">La méthode équivalente pour cet opérateur est <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e5d72-148">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.CustomAttributeNamedArgument left, valuetype System.Reflection.CustomAttributeNamedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CustomAttributeNamedArgument, right As CustomAttributeNamedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::CustomAttributeNamedArgument left, System::Reflection::CustomAttributeNamedArgument right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeNamedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeNamedArgument" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e5d72-149">La structure qui se trouve à gauche de l'opérateur d'inégalité.</span><span class="sxs-lookup"><span data-stu-id="e5d72-149">The structure to the left of the inequality operator.</span></span></param>
        <param name="right"><span data-ttu-id="e5d72-150">La structure qui se trouve à droite de l'opérateur d'inégalité.</span><span class="sxs-lookup"><span data-stu-id="e5d72-150">The structure to the right of the inequality operator.</span></span></param>
        <summary><span data-ttu-id="e5d72-151">Vérifie si deux structures <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> sont différentes.</span><span class="sxs-lookup"><span data-stu-id="e5d72-151">Tests whether two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are different.</span></span></summary>
        <returns>
          <span data-ttu-id="e5d72-152"><see langword="true" /> si les deux structures <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> sont différentes ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e5d72-152"><see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are different; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="e5d72-153">La méthode équivalente pour cet opérateur est <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e5d72-153">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5d72-154">Renvoie une chaîne composée du nom d’argument, du signe égal et d’une représentation de chaîne de la valeur de l’argument.</span><span class="sxs-lookup"><span data-stu-id="e5d72-154">Returns a string that consists of the argument name, the equal sign, and a string representation of the argument value.</span></span></summary>
        <returns><span data-ttu-id="e5d72-155">Chaîne composée du nom d’argument, du signe égal et d’une représentation de chaîne de la valeur de l’argument.</span><span class="sxs-lookup"><span data-stu-id="e5d72-155">A string that consists of the argument name, the equal sign, and a string representation of the argument value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypedValue">
      <MemberSignature Language="C#" Value="public System.Reflection.CustomAttributeTypedArgument TypedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CustomAttributeTypedArgument TypedValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.TypedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypedValue As CustomAttributeTypedArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::CustomAttributeTypedArgument TypedValue { System::Reflection::CustomAttributeTypedArgument get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CustomAttributeTypedArgument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5d72-156">Obtient une structure <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> qui peut être utilisée pour obtenir le type et la valeur de l'argument nommé actuel.</span><span class="sxs-lookup"><span data-stu-id="e5d72-156">Gets a <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure that can be used to obtain the type and value of the current named argument.</span></span></summary>
        <value><span data-ttu-id="e5d72-157">Structure qui peut être utilisée pour obtenir le type et la valeur de l'argument nommé actuel.</span><span class="sxs-lookup"><span data-stu-id="e5d72-157">A structure that can be used to obtain the type and value of the current named argument.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d72-158">Le <xref:System.Reflection.CustomAttributeNamedArgument> structure contient uniquement des informations sur la façon dont la valeur d’argument a été définie.</span><span class="sxs-lookup"><span data-stu-id="e5d72-158">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only contains information about how the argument value was set.</span></span> <span data-ttu-id="e5d72-159">Cette propriété permet d’obtenir un <xref:System.Reflection.CustomAttributeTypedArgument> structure qui contient le type et la valeur.</span><span class="sxs-lookup"><span data-stu-id="e5d72-159">Use this property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5d72-160">L’exemple de code suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</span><span class="sxs-lookup"><span data-stu-id="e5d72-160">The following code example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="e5d72-161">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</span><span class="sxs-lookup"><span data-stu-id="e5d72-161">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="e5d72-162">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</span><span class="sxs-lookup"><span data-stu-id="e5d72-162">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="e5d72-163">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</span><span class="sxs-lookup"><span data-stu-id="e5d72-163">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="e5d72-164">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</span><span class="sxs-lookup"><span data-stu-id="e5d72-164">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="e5d72-165">Constructeurs différents sont utilisés pour ces cas.</span><span class="sxs-lookup"><span data-stu-id="e5d72-165">Different constructors are used for these cases.</span></span> <span data-ttu-id="e5d72-166">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche les attributs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="e5d72-166">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="e5d72-167">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</span><span class="sxs-lookup"><span data-stu-id="e5d72-167">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="e5d72-168">Le <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> propriété est utilisée dans le `ShowAttributeData` méthode qui affiche des données d’attribut personnalisé, afin d’obtenir les types et valeurs des attributs nommés.</span><span class="sxs-lookup"><span data-stu-id="e5d72-168">The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property is used in the `ShowAttributeData` method that displays custom attribute data, to obtain the types and values of named attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.CustomAttributeData" />
        <altmember cref="T:System.Reflection.CustomAttributeTypedArgument" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
  </Members>
</Type>