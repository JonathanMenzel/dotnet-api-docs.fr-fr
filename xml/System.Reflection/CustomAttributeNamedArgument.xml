<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CustomAttributeNamedArgument.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cb5683beef3de443e9a5df3d7cf110331a07a5fe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb5683beef3de443e9a5df3d7cf110331a07a5fe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>Represents a named argument of a custom attribute in the reflection-only context.</source>
          <target state="translated">Représente un argument nommé d’un attribut personnalisé dans le contexte de réflexion uniquement.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, and so on.</source>
          <target state="translated">Code qui est examiné dans le contexte de réflexion uniquement ne peut pas être exécuté, elle n’est pas toujours possible d’examiner des attributs personnalisés en créant des instances de leur et puis examiner leurs propriétés, à l’aide des méthodes, telles que <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, etc. .</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</source>
          <target state="translated">Si le code du type d’attribut lui-même est chargé dans le contexte de réflexion uniquement, elle ne peut pas être exécutée.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structure is used by the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class to provide access to a named argument specified for a custom attribute instance, without executing the code of the corresponding property of the custom attribute type.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structure est utilisée par la <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> classe pour fournir l’accès à un argument nommé spécifié pour une instance de l’attribut personnalisé, sans exécuter le code de la propriété correspondante du type d’attribut personnalisé.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure that contains the type and value of the named argument.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A&gt;</ph> propriété retourne un <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure qui contient le type et la valeur de l’argument nommé.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>Whether an argument is named or positional, you must access its type and value by using the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure.</source>
          <target state="translated">Si un argument nommé ou positionnel, vous devez accéder à son type et sa valeur à l’aide de la <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>To create instances of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class, use the <ph id="ph2">`static`</ph><ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> factory method.</source>
          <target state="translated">Pour créer des instances de la <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> de classe, utilisez le <ph id="ph2">`static`</ph> <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> méthode de fabrique.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">L’exemple suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Constructeurs différents sont utilisés pour ces cas.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</source>
          <target state="translated">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche des informations sur les attributs personnalisés qui ont été appliquées à ce dernier et le type et les membres qu’il contient.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source>A field or property of the custom attribute.</source>
          <target state="translated">Champ ou propriété de l'attribut personnalisé.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> object represents this member and its value.</source>
          <target state="translated">Le nouvel objet <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> représente ce membre et sa valeur.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source>The value of the field or property of the custom attribute.</source>
          <target state="translated">Valeur du champ ou de la propriété de l'attribut personnalisé.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> class, which represents the specified field or property of the custom attribute, and specifies the value of the field or property.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph>, qui représente le champ ou la propriété spécifique de l'attribut personnalisé, et spécifie la valeur du champ ou de la propriété.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source>This constructor is for use by inheritors of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> class.</source>
          <target state="translated">Ce constructeur est utilisé par les héritiers de la <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source>It is not intended for use in application code.</source>
          <target state="translated">Il n’est pas destinée à être utilisée dans du code d’application.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source><ph id="ph1">&lt;paramref name="memberInfo" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="memberInfo" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source><ph id="ph1">&lt;paramref name="memberInfo" /&gt;</ph> is not a field or property of the custom attribute.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="memberInfo" /&gt;</ph> n'est pas un champ ou une propriété de l'attribut personnalisé.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
          <source>A field or property of the custom attribute.</source>
          <target state="translated">Champ ou propriété de l'attribut personnalisé.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> object represents this member and its value.</source>
          <target state="translated">Le nouvel objet <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> représente ce membre et sa valeur.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
          <source>An object that describes the type and value of the field or property.</source>
          <target state="translated">Objet qui décrit le type et la valeur du champ ou de la propriété.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> class, which represents the specified field or property of the custom attribute, and specifies a <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> object that describes the type and value of the field or property.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph>, qui représente le champ ou la propriété spécifique de l'attribut personnalisé, et spécifie un objet <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> qui décrit le type et la valeur du champ ou de la propriété.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
          <source>This constructor is for use by inheritors of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> class.</source>
          <target state="translated">Ce constructeur est utilisé par les héritiers de la <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
          <source>It is not intended for use in application code.</source>
          <target state="translated">Il n’est pas destinée à être utilisée dans du code d’application.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
          <source><ph id="ph1">&lt;paramref name="memberInfo" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="memberInfo" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)">
          <source>An object to compare with this instance, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objet à comparer à cette instance ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">Retourne une valeur qui indique si cette instance est égale à un objet spécifié.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> equals the type and value of this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> est égal au type et à la valeur de cette instance ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Retourne le code de hachage de cette instance.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Code de hachage d'un entier signé 32 bits.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeNamedArgument.IsField">
          <source>Gets a value that indicates whether the named argument is a field.</source>
          <target state="translated">Obtient une valeur qui indique si l'argument nommé est un champ.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.IsField">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the named argument is a field; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'argument nommé est un champ ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeNamedArgument.MemberInfo">
          <source>Gets the attribute member that would be used to set the named argument.</source>
          <target state="translated">Obtient le membre d'attribut qui serait utilisé pour définir l'argument nommé.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.MemberInfo">
          <source>The attribute member that would be used to set the named argument.</source>
          <target state="translated">Membre d'attribut qui serait utilisé pour définir l'argument nommé.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.MemberInfo">
          <source>In most cases, the member is a property.</source>
          <target state="translated">Dans la plupart des cas, le membre est une propriété.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeNamedArgument.MemberName">
          <source>Gets the name of the attribute member that would be used to set the named argument.</source>
          <target state="translated">Obtient le nom du membre d'attribut qui serait utilisé pour définir l'argument nommé.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.MemberName">
          <source>The name of the attribute member that would be used to set the named argument.</source>
          <target state="translated">Nom du membre d'attribut qui serait utilisé pour définir l'argument nommé.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>The structure to the left of the equality operator.</source>
          <target state="translated">La structure qui se trouve à gauche de l'opérateur d'égalité.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>The structure to the right of the equality operator.</source>
          <target state="translated">La structure qui se trouve à droite de l'opérateur d'égalité.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>Tests whether two <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> structures are equivalent.</source>
          <target state="translated">Vérifie si deux structures <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> sont équivalentes.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> structures are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les deux structures <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> sont égales ; sinon <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>The structure to the left of the inequality operator.</source>
          <target state="translated">La structure qui se trouve à gauche de l'opérateur d'inégalité.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>The structure to the right of the inequality operator.</source>
          <target state="translated">La structure qui se trouve à droite de l'opérateur d'inégalité.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>Tests whether two <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> structures are different.</source>
          <target state="translated">Vérifie si deux structures <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> sont différentes.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> structures are different; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les deux structures <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> sont différentes ; sinon <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.ToString">
          <source>Returns a string that consists of the argument name, the equal sign, and a string representation of the argument value.</source>
          <target state="translated">Renvoie une chaîne composée du nom d’argument, du signe égal et d’une représentation de chaîne de la valeur de l’argument.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.ToString">
          <source>A string that consists of the argument name, the equal sign, and a string representation of the argument value.</source>
          <target state="translated">Chaîne composée du nom d’argument, du signe égal et d’une représentation de chaîne de la valeur de l’argument.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structure that can be used to obtain the type and value of the current named argument.</source>
          <target state="translated">Obtient une structure <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> qui peut être utilisée pour obtenir le type et la valeur de l'argument nommé actuel.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>A structure that can be used to obtain the type and value of the current named argument.</source>
          <target state="translated">Structure qui peut être utilisée pour obtenir le type et la valeur de l'argument nommé actuel.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structure only contains information about how the argument value was set.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structure contient uniquement des informations sur la façon dont la valeur d’argument a été définie.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>Use this property to obtain a <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure that contains the type and value.</source>
          <target state="translated">Cette propriété permet d’obtenir un <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure qui contient le type et la valeur.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>The following code example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">L’exemple de code suivant définit un attribut personnalisé avec quatre constructeurs et quatre propriétés.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Deux des propriétés sont en lecture seule et sont définies à l’aide des paramètres positionnels des constructeurs.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Les deux propriétés sont en lecture/écriture, et peut être définie uniquement par l’utilisation des arguments nommé.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Une propriété positionnelle est un tableau de chaînes, et une propriété nommée est un tableau d’entiers.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">L’attribut est appliqué à l’assembly, à un type déclaré dans l’assembly, à une méthode du type, et à un paramètre de la méthode.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Constructeurs différents sont utilisés pour ces cas.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">Lors de l’exécution, l’assembly se charge dans le contexte de réflexion uniquement et affiche les attributs personnalisés.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">L’attribut est appliqué au type montre les propriétés de tableau, avec des arguments nommés et positionnels.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A&gt;</ph> property is used in the <ph id="ph2">`ShowAttributeData`</ph> method that displays custom attribute data, to obtain the types and values of named attributes.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A&gt;</ph> propriété est utilisée dans le <ph id="ph2">`ShowAttributeData`</ph> méthode qui affiche des données d’attribut personnalisé, afin d’obtenir les types et valeurs des attributs nommés.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>