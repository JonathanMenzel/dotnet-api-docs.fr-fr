<Type Name="AssemblyName" FullName="System.Reflection.AssemblyName">
  <TypeSignature Language="C#" Value="public sealed class AssemblyName : ICloneable, System.Runtime.InteropServices._AssemblyName, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit AssemblyName extends System.Object implements class System.ICloneable, class System.Runtime.InteropServices._AssemblyName, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AssemblyName" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyName&#xA;Implements _AssemblyName, ICloneable, IDeserializationCallback, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyName sealed : ICloneable, System::Runtime::InteropServices::_AssemblyName, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._AssemblyName</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._AssemblyName))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0eaaa-101">Décrit entièrement l'identité unique d'un assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-101">Describes an assembly's unique identity in full.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-102">Le <xref:System.Reflection.AssemblyName> objet contient des informations sur un assembly, vous pouvez utiliser pour lier à cet assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-102">The <xref:System.Reflection.AssemblyName> object contains information about an assembly, which you can use to bind to that assembly.</span></span> <span data-ttu-id="0eaaa-103">Identité d’un assembly se compose des éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="0eaaa-103">An assembly's identity consists of the following:</span></span>  
  
-   <span data-ttu-id="0eaaa-104">Nom simple.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-104">Simple name.</span></span>  
  
-   <span data-ttu-id="0eaaa-105">Numéro de version.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-105">Version number.</span></span>  
  
-   <span data-ttu-id="0eaaa-106">Paire de clés de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-106">Cryptographic key pair.</span></span>  
  
-   <span data-ttu-id="0eaaa-107">Culture prise en charge.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-107">Supported culture.</span></span>  
  
 <span data-ttu-id="0eaaa-108">Le nom simple est généralement le nom de fichier pour le fichier manifeste sans son extension.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-108">The simple name is typically the file name for the manifest file without its extension.</span></span> <span data-ttu-id="0eaaa-109">La paire de clés inclut une clé publique et privée, permet de créer des signatures avec nom fort pour les assemblys.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-109">The key pair includes a public and private key, used to create strong-name signatures for assemblies.</span></span>  
  
 <span data-ttu-id="0eaaa-110">Tous les compilateurs qui prennent en charge le common language runtime émettront le nom simple d’une classe imbriquée et la réflexion construit un nom tronqué interrogé, conformément aux conventions suivantes.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-110">All compilers that support the common language runtime will emit the simple name of a nested class, and reflection constructs a mangled name when queried, in accordance with the following conventions.</span></span>  
  
|<span data-ttu-id="0eaaa-111">Délimiteur</span><span class="sxs-lookup"><span data-stu-id="0eaaa-111">Delimiter</span></span>|<span data-ttu-id="0eaaa-112">Signification</span><span class="sxs-lookup"><span data-stu-id="0eaaa-112">Meaning</span></span>|  
|---------------|-------------|  
|<span data-ttu-id="0eaaa-113">Barre oblique inverse (\\)</span><span class="sxs-lookup"><span data-stu-id="0eaaa-113">Backslash (\\)</span></span>|<span data-ttu-id="0eaaa-114">Caractère d’échappement.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-114">Escape character.</span></span>|  
|<span data-ttu-id="0eaaa-115">Comma (,)</span><span class="sxs-lookup"><span data-stu-id="0eaaa-115">Comma (,)</span></span>|<span data-ttu-id="0eaaa-116">Précède le nom de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-116">Precedes the assembly name.</span></span>|  
|<span data-ttu-id="0eaaa-117">Signe plus (+)</span><span class="sxs-lookup"><span data-stu-id="0eaaa-117">Plus sign (+)</span></span>|<span data-ttu-id="0eaaa-118">Précède une classe imbriquée.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-118">Precedes a nested class.</span></span>|  
  
 <span data-ttu-id="0eaaa-119">Par exemple, le nom qualifié complet d’une classe peut ressembler à ceci :</span><span class="sxs-lookup"><span data-stu-id="0eaaa-119">For example, the fully qualified name for a class might look like this:</span></span>  
  
 <span data-ttu-id="0eaaa-120">ContainingClass ne + NestedClass, MyAssembly</span><span class="sxs-lookup"><span data-stu-id="0eaaa-120">ContainingClass+NestedClass,MyAssembly</span></span>  
  
 <span data-ttu-id="0eaaa-121">Un « ++ » devient «\\+\\+ » et un «\\« devient »\\\\».</span><span class="sxs-lookup"><span data-stu-id="0eaaa-121">A "++" becomes "\\+\\+", and a "\\" becomes "\\\\".</span></span>  
  
 <span data-ttu-id="0eaaa-122">Ce nom qualifié peut être persistant et utilisé ultérieurement pour charger le <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-122">This qualified name can be persisted and later used to load the <xref:System.Type>.</span></span> <span data-ttu-id="0eaaa-123">Pour rechercher et charger un <xref:System.Type>, utilisez <xref:System.Type.GetType%2A> avec le type de nom uniquement ou avec le nom de type qualifié d’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-123">To search for and load a <xref:System.Type>, use <xref:System.Type.GetType%2A> either with the type name only or with the assembly qualified type name.</span></span> <span data-ttu-id="0eaaa-124"><xref:System.Type.GetType%2A> avec le type de nom uniquement recherchera le <xref:System.Type> dans l’assembly de l’appelant, puis dans l’assembly système.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-124"><xref:System.Type.GetType%2A> with the type name only will look for the <xref:System.Type> in the caller's assembly and then in the System assembly.</span></span> <span data-ttu-id="0eaaa-125"><xref:System.Type.GetType%2A> avec l’assembly de nom de type qualifié recherchera le <xref:System.Type> dans n’importe quel assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-125"><xref:System.Type.GetType%2A> with the assembly qualified type name will look for the <xref:System.Type> in any assembly.</span></span>  
  
 <span data-ttu-id="0eaaa-126">Complètement spécifiée <xref:System.Reflection.AssemblyName> doit avoir le nom, de culture, clé publique ou jeton de clé publique, les principales de la version, version secondaire, numéro de build et paramètres de numéro de révision.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-126">A fully specified <xref:System.Reflection.AssemblyName> must have the name, culture, public key or public key token, major version, minor version, build number, and revision number parameters.</span></span> <span data-ttu-id="0eaaa-127">Les quatre derniers sont empaquetées dans le <xref:System.Version> type.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-127">The last four are packaged in the <xref:System.Version> type.</span></span>  
  
 <span data-ttu-id="0eaaa-128">Pour créer un nom simple, créez un <xref:System.Reflection.AssemblyName> de l’objet à l’aide du constructeur par défaut et définir le <xref:System.Reflection.AssemblyName.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-128">To create a simple name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A>.</span></span> <span data-ttu-id="0eaaa-129">Les autres propriétés sont facultatives.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-129">The other properties are optional.</span></span>  
  
 <span data-ttu-id="0eaaa-130">Pour créer un nom fort complet, créez un <xref:System.Reflection.AssemblyName> à l’aide du constructeur par défaut de l’objet et définissez la <xref:System.Reflection.AssemblyName.Name%2A> et <xref:System.Reflection.AssemblyName.KeyPair%2A>.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-130">To create a full strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A> and <xref:System.Reflection.AssemblyName.KeyPair%2A>.</span></span> <span data-ttu-id="0eaaa-131">Les autres propriétés sont facultatives.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-131">The other properties are optional.</span></span> <span data-ttu-id="0eaaa-132">Utilisez <xref:System.Reflection.AssemblyName.SetPublicKey%2A> et <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> pour définir la clé publique et le nom fort.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-132">Use <xref:System.Reflection.AssemblyName.SetPublicKey%2A> and <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> to set the public key and the strong name.</span></span> <span data-ttu-id="0eaaa-133">Le nom fort de signature toujours utilise le <xref:System.Security.Cryptography.SHA1> algorithme de hachage.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-133">The strong name signing always uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 <span data-ttu-id="0eaaa-134">Pour vous assurer que les noms sont construits correctement, utilisez les propriétés suivantes :</span><span class="sxs-lookup"><span data-stu-id="0eaaa-134">To ensure that the names are constructed correctly, use the following properties:</span></span>  
  
-   <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>  
  
-   <xref:System.Reflection.AssemblyName.FullName%2A?displayProperty=nameWithType>  
  
-   <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="0eaaa-135">Vous pouvez également obtenir le nom à l’aide de la `/l` option avec la [Gacutil.exe (outil Global Assembly Cache)](~/docs/framework/tools/gacutil-exe-gac-tool.md)</span><span class="sxs-lookup"><span data-stu-id="0eaaa-135">You can also get the name by using the `/l` option with the [Gacutil.exe (Global Assembly Cache Tool)](~/docs/framework/tools/gacutil-exe-gac-tool.md)</span></span>  
  
 <span data-ttu-id="0eaaa-136">Pour un nom fort partiel, créez un <xref:System.Reflection.AssemblyName> à l’aide du constructeur par défaut de l’objet et de définir le nom et la clé publique.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-136">For a partially specified strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the name and public key.</span></span> <span data-ttu-id="0eaaa-137">Un assembly créé à l’aide de ces un <xref:System.Reflection.AssemblyName> peut être signée ultérieurement à l’aide de l’utilitaire Assembly Linker (Al.exe).</span><span class="sxs-lookup"><span data-stu-id="0eaaa-137">An assembly created using such an <xref:System.Reflection.AssemblyName> can be signed later using the Assembly Linker (Al.exe).</span></span>  
  
 <span data-ttu-id="0eaaa-138">Il est possible de spécifier une clé publique et un <xref:System.Reflection.AssemblyName.KeyPair%2A> avec des valeurs incohérentes.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-138">It is possible to specify a public key and a <xref:System.Reflection.AssemblyName.KeyPair%2A> with inconsistent values.</span></span> <span data-ttu-id="0eaaa-139">Cela peut être utile dans les scénarios de développement.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-139">This can be useful in developer scenarios.</span></span> <span data-ttu-id="0eaaa-140">Dans ce cas, la clé publique récupérés avec <xref:System.Reflection.AssemblyName.GetPublicKey%2A> Spécifie le correct publique clé, alors que le <xref:System.Reflection.AssemblyName.KeyPair%2A> spécifie les clés publiques et privées utilisées pendant le développement.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-140">In this case, the public key retrieved with <xref:System.Reflection.AssemblyName.GetPublicKey%2A> specifies the correct public key, while the <xref:System.Reflection.AssemblyName.KeyPair%2A> specifies the public and private keys used during development.</span></span> <span data-ttu-id="0eaaa-141">Lorsque le runtime détecte une incompatibilité entre le <xref:System.Reflection.AssemblyName.KeyPair%2A> et la clé publique, il recherche dans le Registre la clé correspondant à la clé publique.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-141">When the runtime detects a mismatch between the <xref:System.Reflection.AssemblyName.KeyPair%2A> and the public key, it looks up in the registry the correct key that matches the public key.</span></span>  
  
 <span data-ttu-id="0eaaa-142">Le format du nom d’affichage d’un <xref:System.Reflection.AssemblyName> est une chaîne Unicode délimité par des virgules qui commence par le nom, comme suit :</span><span class="sxs-lookup"><span data-stu-id="0eaaa-142">The format of the display name of an <xref:System.Reflection.AssemblyName> is a comma-delimited Unicode string that begins with the name, as follows:</span></span>  
  
 `Name <,Culture = CultureInfo> <,Version = Major.Minor.Build.Revision> <, StrongName> <,PublicKeyToken> '\0'`  
  
 <span data-ttu-id="0eaaa-143">`Name` est le nom textuel de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-143">`Name` is the textual name of the assembly.</span></span> <span data-ttu-id="0eaaa-144">`CultureInfo` est la culture définie par le format RFC1766.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-144">`CultureInfo` is the RFC1766-format-defined culture.</span></span> <span data-ttu-id="0eaaa-145">`Major`, `Minor`, `Build`, et `Revision` sont la version principale, version secondaire, numéro de build et numéro de révision de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-145">`Major`, `Minor`, `Build`, and `Revision` are the major version, minor version, build number, and revision number of the assembly.</span></span> <span data-ttu-id="0eaaa-146">`StrongName` est les codé en hexadécimal 64 bits de poids faible de la valeur de hachage de la clé publique générée à l’aide de l’algorithme de hachage SHA-1 et la clé publique spécifiée par <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-146">`StrongName` is the hexadecimal-encoded low-order 64 bits of the hash value of the public key generated using the SHA-1 hashing algorithm and the public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span></span> <span data-ttu-id="0eaaa-147">`PublicKeyToken` est la clé publique codé en hexadécimal spécifiée par <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-147">`PublicKeyToken` is the hexadecimal-encoded public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span></span>  
  
 <span data-ttu-id="0eaaa-148">Encodage hexadécimal est défini en tant que la conversion de chaque octet d’un objet binaire en deux caractères hexadécimaux, allant de moins à l’octet le plus significatif.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-148">Hexadecimal encoding is defined as the conversion of each byte of a binary object to two hexadecimal characters, progressing from least to most significant byte.</span></span> <span data-ttu-id="0eaaa-149">Valeurs d’affichage supplémentaires seront ajoutées si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-149">Additional display values will be added as deemed necessary.</span></span>  
  
 <span data-ttu-id="0eaaa-150">Si la clé publique complète est connue, PublicKey peut se substituer à StrongName.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-150">If the full public key is known, then PublicKey may be substituted for StrongName.</span></span>  
  
 <span data-ttu-id="0eaaa-151">Notez également que, à l’exception de `Name`, qui doit être placée tout d’abord, l’ordre lexical des paramètres est sans importance.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-151">Also note that except for `Name`, which must come first, the lexical order of parameters is unimportant.</span></span> <span data-ttu-id="0eaaa-152">Toutefois, n’importe quel paramètre (`Version`, `Culture`, `StrongName` ou `PublicKey`) ne sont pas spécifiquement jeu est considéré comme manquant et le <xref:System.Reflection.AssemblyName> est alors considéré comme partiel.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-152">However, any parameter (`Version`, `Culture`, `StrongName` or `PublicKey`) not specifically set is considered to be omitted, and the <xref:System.Reflection.AssemblyName> is then considered partial.</span></span> <span data-ttu-id="0eaaa-153">Lorsque vous spécifiez des informations partielles, les paramètres de nom doivent être spécifiés dans l’ordre décrit ci-dessus.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-153">When specifying partial information, Name parameters must be specified in the order described above.</span></span>  
  
 <span data-ttu-id="0eaaa-154">Lorsque vous fournissez un nom d’affichage, la convention `StrongName =null` ou `PublicKey= null` indique que la liaison et la mise en correspondance par rapport à un assembly nommé simplement sont obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-154">When supplying a display name, the convention `StrongName =null` or `PublicKey= null` indicates that binding and matching against a simply named assembly is required.</span></span> <span data-ttu-id="0eaaa-155">En outre, la convention `Culture= ""` (guillemet double qui représente une chaîne vide) indique une correspondance avec la culture par défaut.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-155">Additionally, the convention `Culture= ""` (double quote representing an empty string) indicates matching against the default culture.</span></span>  
  
 <span data-ttu-id="0eaaa-156">L’exemple suivant montre une <xref:System.Reflection.AssemblyName> pour un assembly nommé simplement avec la culture par défaut.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-156">The following example shows an <xref:System.Reflection.AssemblyName> for a simply named assembly with default culture.</span></span>  
  
```  
ExampleAssembly, Culture=""  
```  
  
 <span data-ttu-id="0eaaa-157">L’exemple suivant illustre une référence complète pour un assembly utilisant un nom fort et la culture « en ».</span><span class="sxs-lookup"><span data-stu-id="0eaaa-157">The following example shows a fully specified reference for a strongly named assembly with culture "en".</span></span>  
  
```  
ExampleAssembly, Version=1.0.0.0, Culture=en, PublicKeyToken=a5d015c7d5a0b012  
```  
  
   
  
## Examples  
 <span data-ttu-id="0eaaa-158">Cet exemple montre comment utiliser différentes classes de réflexion pour analyser les métadonnées contenues dans un assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-158">This example shows how to use various reflection classes to analyze the metadata contained in an assembly.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Version" />
    <altmember cref="M:System.Reflection.AssemblyName.GetPublicKey" />
    <altmember cref="M:System.Reflection.AssemblyName.GetPublicKeyToken" />
    <altmember cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />
    <altmember cref="M:System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])" />
    <altmember cref="P:System.Type.FullName" />
    <altmember cref="M:System.Type.GetType" />
    <altmember cref="P:System.Type.AssemblyQualifiedName" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0eaaa-159">Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-159">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyName();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0eaaa-160">Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-160">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0eaaa-161">L’exemple suivant crée un assembly dynamique nommé `MyAssembly.exe` et l’enregistre sur votre disque dur.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-161">The following example creates a dynamic assembly named `MyAssembly.exe` and saves it to your hard disk.</span></span> <span data-ttu-id="0eaaa-162">Après avoir exécuté l’exemple, vous pouvez utiliser la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) pour examiner les métadonnées de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-162">After running the example, you can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the assembly metadata.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#1)]
 [!code-csharp[AssemblyName_Constructor#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#1)]
 [!code-vb[AssemblyName_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyName (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyName(System::String ^ assemblyName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="0eaaa-163">Nom complet de l'assembly, tel que retourné par la propriété <see cref="P:System.Reflection.AssemblyName.FullName" />.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-163">The display name of the assembly, as returned by the <see cref="P:System.Reflection.AssemblyName.FullName" /> property.</span></span></param>
        <summary><span data-ttu-id="0eaaa-164">Initialise une nouvelle instance de la classe <see cref="T:System.Reflection.AssemblyName" /> avec le nom d’affichage spécifié.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-164">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class with the specified display name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-165">Fourni `assemblyName` est analysé et les champs appropriés du nouveau <xref:System.Reflection.AssemblyName> sont initialisées avec les valeurs du nom d’affichage.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-165">The supplied `assemblyName` is parsed, and the appropriate fields of the new <xref:System.Reflection.AssemblyName> are initialized with values from the display name.</span></span> <span data-ttu-id="0eaaa-166">Il s’agit de la méthode recommandée de l’analyse des noms d’affichage.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-166">This is the recommended way of parsing display names.</span></span> <span data-ttu-id="0eaaa-167">L’écriture de votre propre code pour analyser les noms d’affichage n’est pas recommandée.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-167">Writing your own code to parse display names is not recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eaaa-168">L’exemple suivant crée une instance de <xref:System.Reflection.AssemblyName> à partir d’un nom d’affichage.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-168">The following example creates an instance of <xref:System.Reflection.AssemblyName> from a display name.</span></span> <span data-ttu-id="0eaaa-169">Les éléments individuels du nom d’affichage sont affichent dans la console en tant que propriétés de la <xref:System.Reflection.AssemblyName> objet.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-169">The individual elements of the display name are output to the console as properties of the <xref:System.Reflection.AssemblyName> object.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor_2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor_2/CPP/source.cpp#1)]
 [!code-csharp[AssemblyName_Constructor_2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor_2/CS/source.cs#1)]
 [!code-vb[AssemblyName_Constructor_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0eaaa-170"><paramref name="assemblyName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-170"><paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0eaaa-171"><paramref name="assemblyName" /> est une chaîne de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-171"><paramref name="assemblyName" /> is a zero length string.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="0eaaa-172">Dans [.NET pour les applications du Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) ou la [Bibliothèque de classes portable](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), interceptez l’exception de la classe de base, <see cref="T:System.IO.IOException" />, à la place.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-172">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="0eaaa-173">L’assembly référencé est introuvable ou ne peut pas être chargé.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-173">The referenced assembly could not be found, or could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0eaaa-174">Exécute une copie de cet objet <see cref="T:System.Reflection.AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-174">Makes a copy of this <see cref="T:System.Reflection.AssemblyName" /> object.</span></span></summary>
        <returns><span data-ttu-id="0eaaa-175">Objet représentant une copie de cet objet <see cref="T:System.Reflection.AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-175">An object that is a copy of this <see cref="T:System.Reflection.AssemblyName" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-176">Un nouvel objet est créé, identique à l’original.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-176">A new object is created, identical to the original.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public string CodeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeBase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eaaa-177">Obtient ou définit l'emplacement de l'assembly sous forme d'URL.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-177">Gets or sets the location of the assembly as a URL.</span></span></summary>
        <value><span data-ttu-id="0eaaa-178">Une chaîne correspondant à l'URL de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-178">A string that is the URL location of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-179">Lorsqu’un assembly est chargé, cette valeur peut également être obtenue à l’aide de la <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-179">When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="0eaaa-180">Si l’assembly a été chargé comme un tableau d’octets, cette propriété retourne l’emplacement de l’appelant de la <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> la surcharge de méthode, pas l’emplacement de l’assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-180">If the assembly was loaded as a byte array, this property returns the location of the caller of the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> method overload, not the location of the loaded assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0eaaa-181">N’utilisez pas un <xref:System.Reflection.AssemblyName> avec uniquement le <xref:System.Reflection.AssemblyName.CodeBase%2A> jeu de propriétés.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-181">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="0eaaa-182">Le <xref:System.Reflection.AssemblyName.CodeBase%2A> propriété ne fournit pas tous les éléments de l’identité d’assembly (par exemple, le nom ou la version), ainsi le chargement ne se produit pas d’en fonction des règles de charge par identité, comme prévu à partir de la <xref:System.Reflection.Assembly.Load%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0eaaa-182">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="0eaaa-183">Au lieu de cela, l’assembly est chargé à l’aide de règles de chargement.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-183">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="0eaaa-184">Pour plus d’informations sur les inconvénients de l’utilisation du contexte de chargement, consultez la <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> surcharge de méthode ou [meilleures pratiques pour le chargement d’Assembly](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span><span class="sxs-lookup"><span data-stu-id="0eaaa-184">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eaaa-185">L’exemple suivant émet un assembly dynamique et l’enregistre dans le répertoire actif.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-185">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="0eaaa-186">Lorsque l’assembly est créé, le <xref:System.Reflection.AssemblyName.CodeBase%2A> propriété est utilisée pour spécifier le répertoire dans lequel l’assembly est enregistré.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-186">When the assembly is created, the <xref:System.Reflection.AssemblyName.CodeBase%2A> property is used to specify the directory where the assembly is saved.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#1)]
 [!code-csharp[AssemblyName_CodeBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#1)]
 [!code-vb[AssemblyName_CodeBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyContentType ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.AssemblyContentType ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As AssemblyContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyContentType ContentType { System::Reflection::AssemblyContentType get(); void set(System::Reflection::AssemblyContentType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyContentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eaaa-187">Obtient ou définit une valeur qui indique le type de contenu que l'assembly contient.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-187">Gets or sets a value that indicates what type of content the assembly contains.</span></span></summary>
        <value><span data-ttu-id="0eaaa-188">Valeur qui indique le type de contenu que l'assembly contient.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-188">A value that indicates what type of content the assembly contains.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo CultureInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo CultureInfo" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CultureInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureInfo As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ CultureInfo { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eaaa-189">Obtient ou définit la culture prise en charge par l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-189">Gets or sets the culture supported by the assembly.</span></span></summary>
        <value><span data-ttu-id="0eaaa-190">Objet qui représente la culture prise en charge par l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-190">An object that represents the culture supported by the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0eaaa-191">L’exemple suivant émet un assembly dynamique et l’enregistre dans le répertoire actif.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-191">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="0eaaa-192">Lorsque l’assembly est créé, le <xref:System.Reflection.AssemblyName.CultureInfo%2A> propriété est utilisée pour spécifier la culture, qui fait partie du nom d’affichage de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-192">When the assembly is created, the <xref:System.Reflection.AssemblyName.CultureInfo%2A> property is used to specify the culture, which is part of the assembly's display name.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#2)]
 [!code-csharp[AssemblyName_CodeBase#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#2)]
 [!code-vb[AssemblyName_CodeBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureName">
      <MemberSignature Language="C#" Value="public string CultureName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CultureName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eaaa-193">Obtient ou définit le nom de la culture associée à l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-193">Gets or sets the name of the culture associated with the assembly.</span></span></summary>
        <value><span data-ttu-id="0eaaa-194">Nom de la culture,</span><span class="sxs-lookup"><span data-stu-id="0eaaa-194">The culture name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eaaa-195">Obtient l'URI, y compris les caractères d'espacement, qui représente le code base.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-195">Gets the URI, including escape characters, that represents the codebase.</span></span></summary>
        <value><span data-ttu-id="0eaaa-196">Un URI avec des caractères d'espacement.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-196">A URI with escape characters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyNameFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.AssemblyNameFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As AssemblyNameFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyNameFlags Flags { System::Reflection::AssemblyNameFlags get(); void set(System::Reflection::AssemblyNameFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyNameFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eaaa-197">Obtient ou définit les attributs de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-197">Gets or sets the attributes of the assembly.</span></span></summary>
        <value><span data-ttu-id="0eaaa-198">Valeur qui représente les attributs de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-198">A value that represents the attributes of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0eaaa-199">L’exemple suivant émet un assembly dynamique et l’enregistre dans le répertoire actif.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-199">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="0eaaa-200">Lorsque l’assembly est créé, le <xref:System.Reflection.AssemblyName.Flags%2A> propriété est utilisée pour spécifier que l’assembly possède une clé publique.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-200">When the assembly is created, the <xref:System.Reflection.AssemblyName.Flags%2A> property is used to specify that the assembly has a public key.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#4](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#4)]
 [!code-csharp[AssemblyName_KeyPair#4](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#4)]
 [!code-vb[AssemblyName_KeyPair#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eaaa-201">Obtient le nom complet de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-201">Gets the full name of the assembly, also known as the display name.</span></span></summary>
        <value><span data-ttu-id="0eaaa-202">Chaîne qui correspond au nom complet de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-202">A string that is the full name of the assembly, also known as the display name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-203">Le nom d’affichage comprend généralement le nom simple, un numéro de version, une culture prise en charge et une clé publique.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-203">The display name typically consists of the simple name, version number, supported culture, and public key.</span></span> <span data-ttu-id="0eaaa-204">Exemple :</span><span class="sxs-lookup"><span data-stu-id="0eaaa-204">For example:</span></span>  
  
```  
mylib, Version=1.2.1900.0, Culture=neutral, PublicKeyToken=a14f3033def15840  
```  
  
 <span data-ttu-id="0eaaa-205">L’écriture de votre propre code pour analyser les noms d’affichage n’est pas recommandée.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-205">Writing your own code to parse display names is not recommended.</span></span> <span data-ttu-id="0eaaa-206">Au lieu de cela, passez le nom complet à la <xref:System.Reflection.AssemblyName.%23ctor%2A> constructeur, qui analyse et remplit les champs appropriés du nouveau <xref:System.Reflection.AssemblyName>.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-206">Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.</span></span>  
  
 <span data-ttu-id="0eaaa-207">Lorsqu’un assembly est chargé, cette valeur peut également être obtenue à l’aide de la <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-207">When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eaaa-208">L’exemple suivant émet un assembly dynamique et l’enregistre dans le répertoire actif.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-208">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="0eaaa-209">Lorsque l’assembly est créé, l’exemple de code définit la <xref:System.Reflection.AssemblyName.Name%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, <xref:System.Reflection.AssemblyName.CultureInfo%2A>, et <xref:System.Reflection.AssemblyName.KeyPair%2A> propriétés, qui forment le nom complet d’un assembly, le nom d’affichage.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-209">When the assembly is created, the code example sets the <xref:System.Reflection.AssemblyName.Name%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, <xref:System.Reflection.AssemblyName.CultureInfo%2A>, and <xref:System.Reflection.AssemblyName.KeyPair%2A> properties, which together comprise an assembly's full name, or display name.</span></span> <span data-ttu-id="0eaaa-210">Le <xref:System.Reflection.AssemblyName.FullName%2A> propriété est ensuite utilisée pour récupérer le nom d’affichage.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-210">The <xref:System.Reflection.AssemblyName.FullName%2A> property is then used to retrieve the display name.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#4](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#4)]
 [!code-csharp[AssemblyName_CodeBase#4](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#4)]
 [!code-vb[AssemblyName_CodeBase#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyName">
      <MemberSignature Language="C#" Value="public static System.Reflection.AssemblyName GetAssemblyName (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.AssemblyName GetAssemblyName(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetAssemblyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAssemblyName (assemblyFile As String) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::AssemblyName ^ GetAssemblyName(System::String ^ assemblyFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="0eaaa-211">Chemin d'accès pour l'assembly dont <see cref="T:System.Reflection.AssemblyName" /> doit être retourné.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-211">The path for the assembly whose <see cref="T:System.Reflection.AssemblyName" /> is to be returned.</span></span></param>
        <summary><span data-ttu-id="0eaaa-212">Obtient le <see cref="T:System.Reflection.AssemblyName" /> d'un fichier donné.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-212">Gets the <see cref="T:System.Reflection.AssemblyName" /> for a given file.</span></span></summary>
        <returns><span data-ttu-id="0eaaa-213">Objet qui représente le fichier d'assembly donné.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-213">An object that represents the given assembly file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-214">Cela fonctionne uniquement si le fichier contient un manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-214">This will only work if the file contains an assembly manifest.</span></span> <span data-ttu-id="0eaaa-215">Cette méthode, le fichier est ouvert et fermé, mais l’assembly n’est pas ajouté à ce domaine.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-215">This method causes the file to be opened and closed, but the assembly is not added to this domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eaaa-216">L’exemple suivant obtient le <xref:System.Reflection.AssemblyName> pour un assembly sur le disque.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-216">The following example gets the <xref:System.Reflection.AssemblyName> for an assembly on disk.</span></span> <span data-ttu-id="0eaaa-217">Il s’exécutera pas, sauf si vous remplacez la chaîne « MyAssembly.exe » avec le nom de fichier d’un assembly (y compris le chemin d’accès, si nécessaire) sur votre disque dur.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-217">It will not run unless you replace the string "MyAssembly.exe" with the file name of an assembly (including the path, if necessary) on your hard disk.</span></span> <span data-ttu-id="0eaaa-218">Ou bien, vous pouvez compiler cet exemple en tant que « MyAssembly.exe ».</span><span class="sxs-lookup"><span data-stu-id="0eaaa-218">Alternatively, you can compile this example as "MyAssembly.exe".</span></span>  
  
 [!code-cpp[AssemblyName_GetAssemblyName#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CPP/assemblyname_getassemblyname.cpp#1)]
 [!code-csharp[AssemblyName_GetAssemblyName#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CS/assemblyname_getassemblyname.cs#1)]
 [!code-vb[AssemblyName_GetAssemblyName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_GetAssemblyName/VB/assemblyname_getassemblyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0eaaa-219"><paramref name="assemblyFile" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-219"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0eaaa-220"><paramref name="assemblyFile" /> n'est pas valide, par exemple un assembly avec une culture non valide.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-220"><paramref name="assemblyFile" /> is invalid, such as an assembly with an invalid culture.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="0eaaa-221"><paramref name="assemblyFile" /> est introuvable.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-221"><paramref name="assemblyFile" /> is not found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="0eaaa-222">L’appelant n’a pas d’autorisation de découverte de chemin.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-222">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="0eaaa-223"><paramref name="assemblyFile" /> n’est pas un assembly valide.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-223"><paramref name="assemblyFile" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="0eaaa-224">Un assembly ou un module a été chargé à deux reprises avec deux ensembles de preuves différents.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-224">An assembly or module was loaded twice with two different sets of evidence.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="0eaaa-225">Pour accéder aux informations contenues dans le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-225">for access to information in the path.</span></span> <span data-ttu-id="0eaaa-226">Énumération associée : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-226">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="0eaaa-227">Objet à remplir à l'aide des informations de sérialisation.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-227">The object to be populated with serialization information.</span></span></param>
        <param name="context"><span data-ttu-id="0eaaa-228">Contexte de destination de la sérialisation.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-228">The destination context of the serialization.</span></span></param>
        <summary><span data-ttu-id="0eaaa-229">Obtient les informations de sérialisation avec toutes les données nécessaires à la recréation d'une instance de ce <see langword="AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-229">Gets serialization information with all the data needed to recreate an instance of this <see langword="AssemblyName" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0eaaa-230"><paramref name="info" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-230"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0eaaa-231">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-231">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="0eaaa-232">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-232">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="public byte[] GetPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetPublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPublicKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetPublicKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0eaaa-233">Obtient la clé publique de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-233">Gets the public key of the assembly.</span></span></summary>
        <returns><span data-ttu-id="0eaaa-234">Tableau d'octets contenant la clé publique de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-234">A byte array that contains the public key of the assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0eaaa-235">L’exemple suivant émet un assembly dynamique et l’enregistre dans le répertoire actif.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-235">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="0eaaa-236">Lorsque l’assembly est créé, le <xref:System.Reflection.AssemblyName.SetPublicKey%2A> méthode est utilisée pour donner une clé publique à l’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-236">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method is used to give the assembly a public key.</span></span> <span data-ttu-id="0eaaa-237">Le <xref:System.Reflection.AssemblyName.GetPublicKey%2A> méthode est ensuite utilisée pour récupérer la clé publique, qui est affichée dans la console.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-237">The <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is then used to retrieve the public key, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#2)]
 [!code-csharp[AssemblyName_KeyPair#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#2)]
 [!code-vb[AssemblyName_KeyPair#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="0eaaa-238">Une clé publique a été fournie (par exemple, à l'aide de la méthode <see cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />), alors qu'aucun jeton de clé publique n'a été fourni.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-238">A public key was provided (for example, by using the <see cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" /> method), but no public key token was provided.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKeyToken">
      <MemberSignature Language="C#" Value="public byte[] GetPublicKeyToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPublicKeyToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetPublicKeyToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPublicKeyToken () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetPublicKeyToken();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0eaaa-239">Obtient le jeton de clé publique qui correspond aux 8 derniers octets du hachage SHA-1 de la clé publique sous laquelle est signé l'application ou l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-239">Gets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.</span></span></summary>
        <returns><span data-ttu-id="0eaaa-240">Tableau d'octets contenant le jeton de clé publique.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-240">A byte array that contains the public key token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0eaaa-241">L’exemple suivant émet un assembly dynamique et l’enregistre dans le répertoire actif.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-241">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="0eaaa-242">Lorsque l’assembly est créé, le <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> méthode est utilisée pour définir le jeton de clé publique de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-242">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method is used to set the assembly's public key token.</span></span> <span data-ttu-id="0eaaa-243">Le <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> méthode est ensuite utilisée pour récupérer le jeton de clé publique est affiché dans la console.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-243">The <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> method is then used to retrieve the public key token, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#3)]
 [!code-csharp[AssemblyName_KeyPair#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#3)]
 [!code-vb[AssemblyName_KeyPair#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Configuration.Assemblies.AssemblyHashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As AssemblyHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Assemblies::AssemblyHashAlgorithm HashAlgorithm { System::Configuration::Assemblies::AssemblyHashAlgorithm get(); void set(System::Configuration::Assemblies::AssemblyHashAlgorithm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyHashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eaaa-244">Obtient ou définit l'algorithme de hachage utilisé par le manifeste d'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-244">Gets or sets the hash algorithm used by the assembly manifest.</span></span></summary>
        <value><span data-ttu-id="0eaaa-245">Algorithme de hachage utilisé par le manifeste d'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-245">The hash algorithm used by the assembly manifest.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="0eaaa-246">En commençant par le [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], le <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> propriété d’un <xref:System.Reflection.AssemblyName> objet qui est retourné par la <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> méthode est <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> s’il n’existe aucun algorithme de hachage pour l’assembly référencé, ou si l’algorithme de hachage de l’élément référencé assembly n’est pas identifié par le <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> énumération.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-246">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumeration.</span></span> <span data-ttu-id="0eaaa-247">Dans les versions précédentes du .NET Framework, le <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> propriété retournée <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> dans cette situation.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-247">In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in this situation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eaaa-248">L’exemple suivant émet un assembly dynamique et l’enregistre dans le répertoire actif.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-248">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="0eaaa-249">Lorsque l’assembly est créé, le <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> propriété est utilisée pour définir l’algorithme de hachage pour le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-249">When the assembly is created, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property is used to set the hash algorithm for the assembly manifest.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#3)]
 [!code-csharp[AssemblyName_CodeBase#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#3)]
 [!code-vb[AssemblyName_CodeBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPair">
      <MemberSignature Language="C#" Value="public System.Reflection.StrongNameKeyPair KeyPair { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.StrongNameKeyPair KeyPair" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.KeyPair" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPair As StrongNameKeyPair" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::StrongNameKeyPair ^ KeyPair { System::Reflection::StrongNameKeyPair ^ get(); void set(System::Reflection::StrongNameKeyPair ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.StrongNameKeyPair</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eaaa-250">Obtient ou définit la paire de clés de chiffrement publique et privée qui est utilisée pour créer une signature de nom fort pour l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-250">Gets or sets the public and private cryptographic key pair that is used to create a strong name signature for the assembly.</span></span></summary>
        <value><span data-ttu-id="0eaaa-251">Paire de clés de chiffrement publique et privée à utiliser pour créer un nom fort pour l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-251">The public and private cryptographic key pair to be used to create a strong name for the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-252">Lorsque le runtime charge un assembly, il ne définit pas le <xref:System.Reflection.AssemblyName.KeyPair%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-252">When the runtime loads an assembly, it does not set the <xref:System.Reflection.AssemblyName.KeyPair%2A> property.</span></span> <span data-ttu-id="0eaaa-253">L’accesseur Get de la propriété est utile uniquement si l’utilisateur a défini la propriété avant d’utiliser le <xref:System.Reflection.AssemblyName> de l’objet pour créer un assembly dynamique et souhaite ensuite récupérer la paire de clés.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-253">The getter for the property is only useful if the user set the property before using the <xref:System.Reflection.AssemblyName> object to create a dynamic assembly, and subsequently wants to retrieve the key pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eaaa-254">L’exemple suivant émet un assembly dynamique et l’enregistre dans le répertoire actif.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-254">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="0eaaa-255">Lorsque l’assembly est créé, le <xref:System.Reflection.AssemblyName.KeyPair%2A> propriété est utilisée pour définir les clés de l’assembly chiffrement publiques et privées.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-255">When the assembly is created, the <xref:System.Reflection.AssemblyName.KeyPair%2A> property is used to set the assembly's public and private cryptographic keys.</span></span> <span data-ttu-id="0eaaa-256">.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-256">.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#1)]
 [!code-csharp[AssemblyName_KeyPair#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#1)]
 [!code-vb[AssemblyName_KeyPair#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eaaa-257">Obtient ou définit le nom simple de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-257">Gets or sets the simple name of the assembly.</span></span> <span data-ttu-id="0eaaa-258">Il s'agit généralement, mais pas nécessairement, du nom de fichier du fichier manifeste d'assembly, sans son extension.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-258">This is usually, but not necessarily, the file name of the manifest file of the assembly, minus its extension.</span></span></summary>
        <value><span data-ttu-id="0eaaa-259">Nom simple de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-259">The simple name of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-260">Le fichier manifest est le fichier qui contient le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-260">The manifest file is the file that contains the assembly manifest.</span></span>  
  
 <span data-ttu-id="0eaaa-261">Par exemple, le nom simple d’un assembly à fichier unique nommé « MyAssembly.dll » est « MyAssembly ».</span><span class="sxs-lookup"><span data-stu-id="0eaaa-261">For example, the simple name of a single-file assembly named "MyAssembly.dll" is "MyAssembly".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eaaa-262">L’exemple suivant émet un assembly dynamique et l’enregistre dans le répertoire actif.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-262">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="0eaaa-263">Lorsque l’assembly est créé, le <xref:System.Reflection.AssemblyName.Name%2A> propriété est utilisée pour définir le nom simple de l’assembly dynamique.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-263">When the assembly is created, the <xref:System.Reflection.AssemblyName.Name%2A> property is used to set the simple name of the dynamic assembly.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#2)]
 [!code-csharp[AssemblyName_Constructor#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#2)]
 [!code-vb[AssemblyName_Constructor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="0eaaa-264">Source de l’événement de désérialisation.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-264">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="0eaaa-265">Implémente l'interface <see cref="T:System.Runtime.Serialization.ISerializable" /> et est rappelé par l'événement de désérialisation quand la désérialisation est terminée.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-265">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and is called back by the deserialization event when deserialization is complete.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="M:System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessorArchitecture">
      <MemberSignature Language="C#" Value="public System.Reflection.ProcessorArchitecture ProcessorArchitecture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.ProcessorArchitecture ProcessorArchitecture" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.ProcessorArchitecture" />
      <MemberSignature Language="VB.NET" Value="Public Property ProcessorArchitecture As ProcessorArchitecture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ProcessorArchitecture ProcessorArchitecture { System::Reflection::ProcessorArchitecture get(); void set(System::Reflection::ProcessorArchitecture value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ProcessorArchitecture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eaaa-266">Obtient ou définit une valeur qui identifie le processeur et les bits par mot de la plateforme ciblée par un fichier exécutable.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-266">Gets or sets a value that identifies the processor and bits-per-word of the platform targeted by an executable.</span></span></summary>
        <value><span data-ttu-id="0eaaa-267">Une des valeurs d'énumération qui identifie le processeur et les bits par mot de la plateforme ciblée par un fichier exécutable.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-267">One of the enumeration values that identifies the processor and bits-per-word of the platform targeted by an executable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-268">Compter les [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], cette propriété retourne toujours <xref:System.Reflection.ProcessorArchitecture.None?displayProperty=nameWithType> des assemblys de référence.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-268">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this property always returns <xref:System.Reflection.ProcessorArchitecture.None?displayProperty=nameWithType> for reference assemblies.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)" />
      </Docs>
    </Member>
    <Member MemberName="ReferenceMatchesDefinition">
      <MemberSignature Language="C#" Value="public static bool ReferenceMatchesDefinition (System.Reflection.AssemblyName reference, System.Reflection.AssemblyName definition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ReferenceMatchesDefinition(class System.Reflection.AssemblyName reference, class System.Reflection.AssemblyName definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceMatchesDefinition (reference As AssemblyName, definition As AssemblyName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ReferenceMatchesDefinition(System::Reflection::AssemblyName ^ reference, System::Reflection::AssemblyName ^ definition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Reflection.AssemblyName" />
        <Parameter Name="definition" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="0eaaa-269">Nom de l'assembly de référence.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-269">The reference assembly name.</span></span></param>
        <param name="definition"><span data-ttu-id="0eaaa-270">Nom de l'assembly qui est comparé à l'assembly de référence.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-270">The assembly name that is compared to the reference assembly.</span></span></param>
        <summary><span data-ttu-id="0eaaa-271">Retourne une valeur indiquant si deux noms d'assembly sont identiques.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-271">Returns a value indicating whether two assembly names are the same.</span></span> <span data-ttu-id="0eaaa-272">La comparaison est basée sur les noms d'assembly simples.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-272">The comparison is based on the simple assembly names.</span></span></summary>
        <returns>
          <span data-ttu-id="0eaaa-273"><see langword="true" /> si les noms d'assembly simples sont identiques ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-273"><see langword="true" /> if the simple assembly names are the same; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-274">La comparaison dépend uniquement le nom simple d’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-274">The comparison depends only on the simple assembly name.</span></span> <span data-ttu-id="0eaaa-275">Il ignore la version, culture et jeton de clé publique.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-275">It ignores version, culture, and public key token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPublicKey">
      <MemberSignature Language="C#" Value="public void SetPublicKey (byte[] publicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPublicKey(unsigned int8[] publicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPublicKey (publicKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPublicKey(cli::array &lt;System::Byte&gt; ^ publicKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="publicKey"><span data-ttu-id="0eaaa-276">Tableau d'octets contenant la clé publique de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-276">A byte array containing the public key of the assembly.</span></span></param>
        <summary><span data-ttu-id="0eaaa-277">Définit la clé publique identifiant l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-277">Sets the public key identifying the assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-278">Vous devez également utiliser le <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> méthode pour fournir un jeton de clé publique.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-278">You must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token.</span></span> <span data-ttu-id="0eaaa-279">Sinon, un <xref:System.Security.SecurityException> est levée lorsque la <xref:System.Reflection.AssemblyName.GetPublicKey%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-279">Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eaaa-280">L’exemple suivant émet un assembly dynamique et l’enregistre dans le répertoire actif.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-280">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="0eaaa-281">Lorsque l’assembly est créé, le <xref:System.Reflection.AssemblyName.SetPublicKey%2A> méthode est utilisée pour donner une clé publique à l’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-281">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method is used to give the assembly a public key.</span></span> <span data-ttu-id="0eaaa-282">Le <xref:System.Reflection.AssemblyName.GetPublicKey%2A> méthode est ensuite utilisée pour récupérer la clé publique, qui est affichée dans la console.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-282">The <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is then used to retrieve the public key, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_SetPublicKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CPP/assemblyname_setpublickey.cpp#1)]
 [!code-csharp[AssemblyName_SetPublicKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CS/assemblyname_setpublickey.cs#1)]
 [!code-vb[AssemblyName_SetPublicKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_SetPublicKey/VB/assemblyname_setpublickey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPublicKeyToken">
      <MemberSignature Language="C#" Value="public void SetPublicKeyToken (byte[] publicKeyToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPublicKeyToken(unsigned int8[] publicKeyToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPublicKeyToken (publicKeyToken As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPublicKeyToken(cli::array &lt;System::Byte&gt; ^ publicKeyToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKeyToken" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="publicKeyToken"><span data-ttu-id="0eaaa-283">Tableau d'octets contenant le jeton de clé publique de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-283">A byte array containing the public key token of the assembly.</span></span></param>
        <summary><span data-ttu-id="0eaaa-284">Définit le jeton de clé publique, qui correspond aux 8 derniers octets du hachage SHA-1 de la clé publique sous laquelle est signé l'application ou l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-284">Sets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-285">Lorsque vous définissez la clé publique en appelant le <xref:System.Reflection.AssemblyName.SetPublicKey%2A> (méthode), vous devez également utiliser le <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> méthode pour fournir un jeton de clé publique.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-285">When you set the public key by calling the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method, you must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token.</span></span> <span data-ttu-id="0eaaa-286">Sinon, un <xref:System.Security.SecurityException> est levée lorsque la <xref:System.Reflection.AssemblyName.GetPublicKey%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-286">Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eaaa-287">L’exemple suivant émet un assembly dynamique et l’enregistre dans le répertoire actif.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-287">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="0eaaa-288">Lorsque l’assembly est créé, le <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> méthode est utilisée pour définir le jeton de clé publique de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-288">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method is used to set the assembly's public key token.</span></span> <span data-ttu-id="0eaaa-289">Le <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> méthode est ensuite utilisée pour récupérer le jeton de clé publique est affiché dans la console.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-289">The <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> method is then used to retrieve the public key token, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_SetPublicKey#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CPP/assemblyname_setpublickey.cpp#2)]
 [!code-csharp[AssemblyName_SetPublicKey#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CS/assemblyname_setpublickey.cs#2)]
 [!code-vb[AssemblyName_SetPublicKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_SetPublicKey/VB/assemblyname_setpublickey.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _AssemblyName.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_AssemblyName::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="0eaaa-290">Réservé à un usage ultérieur.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-290">Reserved for future use.</span></span> <span data-ttu-id="0eaaa-291">Doit être IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-291">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="0eaaa-292">Tableau passé des noms à mapper.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-292">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="0eaaa-293">Compte des noms à mapper.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-293">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="0eaaa-294">Contexte des paramètres régionaux dans lequel interpréter les noms.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-294">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="0eaaa-295">Tableau, alloué par l'appelant, qui reçoit les ID correspondant aux noms.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-295">Caller-allocated array that receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="0eaaa-296">Mappe un jeu de noms avec un jeu correspondant d'identificateurs de dispatch.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-296">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-297">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-297">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="0eaaa-298">Pour plus d’informations sur `IDispatch::GetIDsOfNames`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-298">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="0eaaa-299">L’accès à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-299">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _AssemblyName.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_AssemblyName::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="0eaaa-300">Informations de type à retourner.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-300">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="0eaaa-301">Identificateur des paramètres régionaux pour les informations de type.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-301">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="0eaaa-302">Reçoit un pointeur vers l'objet d'informations de type demandé.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-302">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="0eaaa-303">Récupère les informations de type pour un objet, qui peuvent être utilisées ensuite pour obtenir les informations de type d'une interface.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-303">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-304">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-304">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="0eaaa-305">Pour plus d’informations sur `IDispatch::GetTypeInfo`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-305">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="0eaaa-306">L’accès à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-306">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _AssemblyName.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_AssemblyName::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="0eaaa-307">Pointe vers un emplacement qui reçoit le nombre d'interfaces d'informations de type fourni par l'objet.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-307">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="0eaaa-308">Récupère le nombre d'interfaces d'informations de type fourni par un objet (0 ou 1).</span><span class="sxs-lookup"><span data-stu-id="0eaaa-308">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-309">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-309">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="0eaaa-310">Pour plus d’informations sur `IDispatch::GetTypeInfoCount`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-310">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="0eaaa-311">L’accès à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-311">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.Invoke">
      <MemberSignature Language="C#" Value="void _AssemblyName.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _AssemblyName.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_AssemblyName::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="0eaaa-312">Identifie le membre.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-312">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="0eaaa-313">Réservé à un usage ultérieur.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-313">Reserved for future use.</span></span> <span data-ttu-id="0eaaa-314">Doit être IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-314">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="0eaaa-315">Contexte des paramètres régionaux dans lequel interpréter les arguments.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-315">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="0eaaa-316">Indicateurs décrivant le contexte de l'appel.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-316">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="0eaaa-317">Pointeur vers une structure qui contient un tableau d’arguments, un tableau d’arguments DISPID pour les arguments nommés et le nombre d’éléments de chaque tableau.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-317">Pointer to a structure containing an array of arguments, an array of argument DispIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="0eaaa-318">Pointeur vers l'emplacement où le résultat doit être stocké.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-318">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="0eaaa-319">Pointeur vers une structure qui contient les informations sur les exceptions.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-319">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="0eaaa-320">Index du premier argument comportant une erreur.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-320">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="0eaaa-321">Fournit l'accès aux propriétés et aux méthodes exposées par un objet.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-321">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-322">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-322">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="0eaaa-323">Pour plus d’informations sur `IDispatch::Invoke`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-323">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="0eaaa-324">L’accès à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-324">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0eaaa-325">Retourne le nom complet de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-325">Returns the full name of the assembly, also known as the display name.</span></span></summary>
        <returns><span data-ttu-id="0eaaa-326">Nom complet de l'assembly, ou nom de la classe si le nom complet ne peut pas être déterminé.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-326">The full name of the assembly, or the class name if the full name cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-327">Consultez la description de <xref:System.Reflection.AssemblyName> pour le format de la chaîne retournée.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-327">See the description of <xref:System.Reflection.AssemblyName> for the format of the returned string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eaaa-328">L’exemple suivant obtient une <xref:System.Reflection.AssemblyName> objet pour un hypothétique `MyAssembly.exe` assembly, puis utilise la <xref:System.Reflection.AssemblyName.ToString%2A> méthode pour récupérer le nom complet de l’assembly ou le nom d’affichage.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-328">The following example gets an <xref:System.Reflection.AssemblyName> object for a hypothetical `MyAssembly.exe` assembly, and then uses the <xref:System.Reflection.AssemblyName.ToString%2A> method to retrieve the full assembly name, or display name.</span></span>  
  
 [!code-cpp[AssemblyName_GetAssemblyName#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CPP/assemblyname_getassemblyname.cpp#2)]
 [!code-csharp[AssemblyName_GetAssemblyName#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CS/assemblyname_getassemblyname.cs#2)]
 [!code-vb[AssemblyName_GetAssemblyName#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_GetAssemblyName/VB/assemblyname_getassemblyname.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); void set(Version ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eaaa-329">Obtient ou définit les numéros principal, secondaire, de build et de révision de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-329">Gets or sets the major, minor, build, and revision numbers of the assembly.</span></span></summary>
        <value><span data-ttu-id="0eaaa-330">Objet qui représente les numéros principal, secondaire, de build et de révision de l'assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-330">An object that represents the major, minor, build, and revision numbers of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-331">Tous les composants de la version doivent être des entiers supérieurs ou égaux à zéro.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-331">All components of the version must be integers greater than or equal to zero.</span></span> <span data-ttu-id="0eaaa-332">Métadonnées restreignent major, minor, build et révision des composants pour un assembly à une valeur maximale de <xref:System.UInt16.MaxValue?displayProperty=nameWithType> - 1.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-332">Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=nameWithType> - 1.</span></span> <span data-ttu-id="0eaaa-333">Si un composant dépasse cette valeur, aucune erreur n’est levée ; Toutefois, dans un assembly dynamique, ce composant est nul.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-333">If a component exceeds this value, no error is thrown; however, in a dynamic assembly, that component is zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eaaa-334">Cette section contient deux exemples.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-334">This section contains two examples.</span></span> <span data-ttu-id="0eaaa-335">Le premier exemple montre comment récupérer la version de l’assembly en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-335">The first example shows how to retrieve the version of the currently executing assembly.</span></span> <span data-ttu-id="0eaaa-336">Le deuxième exemple montre comment utiliser le <xref:System.Reflection.AssemblyName.Version%2A> propriété pour spécifier la version d’assembly lors de l’émission d’un assembly dynamique.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-336">The second example shows how to use the <xref:System.Reflection.AssemblyName.Version%2A> property to specify the assembly version when you emit a dynamic assembly.</span></span>  
  
 <span data-ttu-id="0eaaa-337">**Exemple 1**</span><span class="sxs-lookup"><span data-stu-id="0eaaa-337">**Example 1**</span></span>  
  
 <span data-ttu-id="0eaaa-338">L’exemple suivant récupère et affiche les numéros de version de l’assembly en cours d’exécution et de l’assembly qui contient la <xref:System.String> classe.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-338">The following example retrieves and displays the version numbers of the currently executing assembly and the assembly that contains the <xref:System.String> class.</span></span>  
  
 [!code-cpp[AssemblyName.Version#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName.Version/cpp/Example.cpp#1)]
 [!code-csharp[AssemblyName.Version#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName.Version/cs/Example.cs#1)]
 [!code-vb[AssemblyName.Version#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName.Version/vb/Example.vb#1)]  
  
 <span data-ttu-id="0eaaa-339">**Exemple 2**</span><span class="sxs-lookup"><span data-stu-id="0eaaa-339">**Example 2**</span></span>  
  
 <span data-ttu-id="0eaaa-340">L’exemple suivant émet un assembly dynamique et l’enregistre dans le répertoire actif.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-340">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="0eaaa-341">Lorsque l’assembly est créé, le <xref:System.Reflection.AssemblyName.Version%2A> propriété est utilisée pour spécifier les informations de version de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-341">When the assembly is created, the <xref:System.Reflection.AssemblyName.Version%2A> property is used to specify version information for the assembly.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#3)]
 [!code-csharp[AssemblyName_Constructor#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#3)]
 [!code-vb[AssemblyName_Constructor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VersionCompatibility">
      <MemberSignature Language="C#" Value="public System.Configuration.Assemblies.AssemblyVersionCompatibility VersionCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Assemblies.AssemblyVersionCompatibility VersionCompatibility" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.VersionCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VersionCompatibility As AssemblyVersionCompatibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Assemblies::AssemblyVersionCompatibility VersionCompatibility { System::Configuration::Assemblies::AssemblyVersionCompatibility get(); void set(System::Configuration::Assemblies::AssemblyVersionCompatibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyVersionCompatibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eaaa-342">Obtient ou définit des informations sur la compatibilité de l'assembly avec d'autres assemblys.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-342">Gets or sets the information related to the assembly's compatibility with other assemblies.</span></span></summary>
        <value><span data-ttu-id="0eaaa-343">Valeur représentant des informations sur la compatibilité de l'assembly avec d'autres assemblys.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-343">A value that represents information about the assembly's compatibility with other assemblies.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eaaa-344"><xref:System.Reflection.AssemblyName.VersionCompatibility%2A> par exemple, pour plus d’informations indique que l’assembly ne peut pas s’exécuter côte à côte avec d’autres versions en raison de conflits sur un pilote de périphérique.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-344"><xref:System.Reflection.AssemblyName.VersionCompatibility%2A> information indicates, for example, that the assembly cannot execute side-by-side with other versions due to conflicts over a device driver.</span></span>  
  
 <span data-ttu-id="0eaaa-345">Actuellement, <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> retourne toujours <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility.SameMachine?displayProperty=nameWithType>et n’est pas utilisé par le chargeur.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-345">Currently, <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> always returns <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility.SameMachine?displayProperty=nameWithType>, and is not used by the loader.</span></span> <span data-ttu-id="0eaaa-346">Cette propriété est réservée à une fonctionnalité ultérieure.</span><span class="sxs-lookup"><span data-stu-id="0eaaa-346">This property is reserved for a future feature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>