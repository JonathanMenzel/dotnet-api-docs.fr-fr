<Type Name="ImmutableList" FullName="System.Collections.Immutable.ImmutableList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="638c481319d79aed144c3a8bdcad02e7af7a1fa7" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53228841" /></Metadata><TypeSignature Language="C#" Value="public static class ImmutableList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableList" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableList abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableList = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="504ac-101">Fournit un ensemble de méthodes d’initialisation pour les instances de la classe <see cref="T:System.Collections.Immutable.ImmutableList`1" />.</span><span class="sxs-lookup"><span data-stu-id="504ac-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableList`1" /> class.</span></span>  
  
 <span data-ttu-id="504ac-102">**Package NuGet** : <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">à propos des collections immuables et de leur installation</see>)</span><span class="sxs-lookup"><span data-stu-id="504ac-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="504ac-103">Ce type est thread-safe.</span><span class="sxs-lookup"><span data-stu-id="504ac-103">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-104">Type des éléments à stocker dans le .</span><span class="sxs-lookup"><span data-stu-id="504ac-104">The type of items to be stored in the .</span></span></typeparam>
        <summary><span data-ttu-id="504ac-105">Crée une liste immuable vide.</span><span class="sxs-lookup"><span data-stu-id="504ac-105">Creates an empty immutable list.</span></span></summary>
        <returns><span data-ttu-id="504ac-106">Vide .</span><span class="sxs-lookup"><span data-stu-id="504ac-106">An empty .</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create(T item);" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-107">Type des éléments dans le .</span><span class="sxs-lookup"><span data-stu-id="504ac-107">The type of items in the .</span></span></typeparam>
        <param name="item"><span data-ttu-id="504ac-108">Élément avec lequel préremplir la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-108">The item to prepopulate the list with.</span></span></param>
        <summary><span data-ttu-id="504ac-109">Crée une liste immuable qui contient l’élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="504ac-109">Creates a new immutable list that contains the specified item.</span></span></summary>
        <returns><span data-ttu-id="504ac-110">Nouvelle liste qui contient l’élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="504ac-110">A new  that contains the specified item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-111">Type des éléments dans le .</span><span class="sxs-lookup"><span data-stu-id="504ac-111">The type of items in the .</span></span></typeparam>
        <param name="items"><span data-ttu-id="504ac-112">Tableau qui contient les éléments avec lesquels préremplir la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-112">An array that contains the items to prepopulate the list with.</span></span></param>
        <summary><span data-ttu-id="504ac-113">Crée une liste immuable qui contient le tableau spécifié d’éléments.</span><span class="sxs-lookup"><span data-stu-id="504ac-113">Creates a new immutable list that contains the specified array of items.</span></span></summary>
        <returns><span data-ttu-id="504ac-114">Nouvelle liste immuable qui contient les éléments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="504ac-114">A new immutable list that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableList(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableList.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-115">Type des éléments stockés dans la collection.</span><span class="sxs-lookup"><span data-stu-id="504ac-115">The type of items stored by the collection.</span></span></typeparam>
        <summary><span data-ttu-id="504ac-116">Crée un générateur de listes immuables.</span><span class="sxs-lookup"><span data-stu-id="504ac-116">Creates a new immutable list builder.</span></span></summary>
        <returns><span data-ttu-id="504ac-117">Générateur de collections immuables.</span><span class="sxs-lookup"><span data-stu-id="504ac-117">The immutable collection builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-118">Type des éléments dans le .</span><span class="sxs-lookup"><span data-stu-id="504ac-118">The type of items in the .</span></span></typeparam>
        <param name="items"><span data-ttu-id="504ac-119">Éléments à ajouter à la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-119">The items to add to the list.</span></span></param>
        <summary><span data-ttu-id="504ac-120">Crée une liste immuable qui contient les éléments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="504ac-120">Creates a new immutable list that contains the specified items.</span></span></summary>
        <returns><span data-ttu-id="504ac-121">Retourne une liste immuable qui contient les éléments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="504ac-121">Returns an immutable list that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-122">Type des éléments de la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-122">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="504ac-123">Liste à rechercher.</span><span class="sxs-lookup"><span data-stu-id="504ac-123">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="504ac-124">Objet à localiser dans la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-124">The object to locate in the list.</span></span> <span data-ttu-id="504ac-125">La valeur peut être null pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="504ac-125">The value can be null for reference types.</span></span></param>
        <summary><span data-ttu-id="504ac-126">Recherche l’objet spécifié et retourne l’index de base zéro de la première occurrence trouvée dans la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-126">Searches for the specified object and returns the zero-based index of the first occurrence within the list.</span></span></summary>
        <returns><span data-ttu-id="504ac-127">Index de base zéro de la première occurrence de l’élément dans la plage d’éléments de la liste qui s’étend de l’index au dernier élément, si elle est trouvée ; sinon, -1.</span><span class="sxs-lookup"><span data-stu-id="504ac-127">The zero-based index of the first occurrence of item within the range of elements in the list that extends from index to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-128">Type des éléments de la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-128">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="504ac-129">Liste à rechercher.</span><span class="sxs-lookup"><span data-stu-id="504ac-129">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="504ac-130">Objet à localiser dans la liste immuable.</span><span class="sxs-lookup"><span data-stu-id="504ac-130">The object to locate in the Immutable list.</span></span> <span data-ttu-id="504ac-131">La valeur peut être null pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="504ac-131">The value can be null for reference types.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="504ac-132">Comparateur d’égalité à utiliser dans la recherche.</span><span class="sxs-lookup"><span data-stu-id="504ac-132">The equality comparer to use in the search.</span></span></param>
        <summary><span data-ttu-id="504ac-133">Recherche l’objet spécifié et retourne l’index de base zéro de la première occurrence trouvée dans la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-133">Searches for the specified object and returns the zero-based index of the first occurrence within the list.</span></span></summary>
        <returns><span data-ttu-id="504ac-134">Index de base zéro de la première occurrence de l’élément dans la plage d’éléments de la liste immuable qui s’étend de l’index au dernier élément, si elle est trouvée ; sinon, -1.</span><span class="sxs-lookup"><span data-stu-id="504ac-134">The zero-based index of the first occurrence of item within the range of elements in the immutable list that extends from index to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-135">Type des éléments de la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-135">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="504ac-136">Liste à rechercher.</span><span class="sxs-lookup"><span data-stu-id="504ac-136">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="504ac-137">Objet à localiser dans la liste immuable.</span><span class="sxs-lookup"><span data-stu-id="504ac-137">The object to locate in the Immutable list.</span></span> <span data-ttu-id="504ac-138">La valeur peut être null pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="504ac-138">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="504ac-139">Index de début de base zéro de la recherche.</span><span class="sxs-lookup"><span data-stu-id="504ac-139">The zero-based starting index of the search.</span></span> <span data-ttu-id="504ac-140">0 (zéro) est valide dans une liste vide.</span><span class="sxs-lookup"><span data-stu-id="504ac-140">0 (zero) is valid in an empty list.</span></span></param>
        <summary><span data-ttu-id="504ac-141">Recherche l’objet spécifié et retourne l’index de base zéro de la première occurrence trouvée dans la plage d’éléments de la liste immuable qui s’étend de l’index spécifié au dernier élément.</span><span class="sxs-lookup"><span data-stu-id="504ac-141">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="504ac-142">Index de base zéro de la première occurrence de l’élément dans la plage d’éléments de la liste immuable qui s’étend de l’index au dernier élément, si elle est trouvée ; sinon, -1.</span><span class="sxs-lookup"><span data-stu-id="504ac-142">The zero-based index of the first occurrence of item within the range of elements in the Immutable list that extends from index to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-143">Type des éléments de la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-143">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="504ac-144">Liste à rechercher.</span><span class="sxs-lookup"><span data-stu-id="504ac-144">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="504ac-145">Objet à localiser dans la liste immuable.</span><span class="sxs-lookup"><span data-stu-id="504ac-145">The object to locate in the Immutable list.</span></span> <span data-ttu-id="504ac-146">La valeur peut être null pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="504ac-146">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="504ac-147">Index de début de base zéro de la recherche.</span><span class="sxs-lookup"><span data-stu-id="504ac-147">The zero-based starting index of the search.</span></span> <span data-ttu-id="504ac-148">0 (zéro) est valide dans une liste vide.</span><span class="sxs-lookup"><span data-stu-id="504ac-148">0 (zero) is valid in an empty list.</span></span></param>
        <param name="count"><span data-ttu-id="504ac-149">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</span><span class="sxs-lookup"><span data-stu-id="504ac-149">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="504ac-150">Recherche l’objet spécifié et retourne l’index de base zéro de la première occurrence trouvée dans la plage d’éléments de la liste immuable qui s’étend de l’index spécifié au dernier élément.</span><span class="sxs-lookup"><span data-stu-id="504ac-150">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="504ac-151">Index de base zéro de la première occurrence de l’élément dans la plage d’éléments de la liste immuable qui s’étend de l’index au dernier élément, si elle est trouvée ; sinon, -1.</span><span class="sxs-lookup"><span data-stu-id="504ac-151">The zero-based index of the first occurrence of item within the range of elements in the Immutable list that extends from index to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-152">Type des éléments de la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-152">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="504ac-153">Liste à rechercher.</span><span class="sxs-lookup"><span data-stu-id="504ac-153">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="504ac-154">Objet à localiser dans la liste immuable.</span><span class="sxs-lookup"><span data-stu-id="504ac-154">The object to locate in the Immutable list.</span></span> <span data-ttu-id="504ac-155">La valeur peut être null pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="504ac-155">The value can be null for reference types.</span></span></param>
        <summary><span data-ttu-id="504ac-156">Recherche l’objet spécifié et retourne l’index de base zéro de la dernière occurrence trouvée dans l’intégralité de la liste immuable.</span><span class="sxs-lookup"><span data-stu-id="504ac-156">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span></span></summary>
        <returns><span data-ttu-id="504ac-157">Index de base zéro de la dernière occurrence de l’élément dans la liste immuable entière, si elle est trouvée ; sinon, -1.</span><span class="sxs-lookup"><span data-stu-id="504ac-157">The zero-based index of the last occurrence of item within the entire the Immutable list, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-158">Type des éléments de la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-158">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="504ac-159">Liste à rechercher.</span><span class="sxs-lookup"><span data-stu-id="504ac-159">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="504ac-160">Objet à localiser dans la liste immuable.</span><span class="sxs-lookup"><span data-stu-id="504ac-160">The object to locate in the Immutable list.</span></span> <span data-ttu-id="504ac-161">La valeur peut être null pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="504ac-161">The value can be null for reference types.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="504ac-162">Comparateur d’égalité à utiliser dans la recherche.</span><span class="sxs-lookup"><span data-stu-id="504ac-162">The equality comparer to use in the search.</span></span></param>
        <summary><span data-ttu-id="504ac-163">Recherche l’objet spécifié et retourne l’index de base zéro de la dernière occurrence trouvée dans l’intégralité de la liste immuable.</span><span class="sxs-lookup"><span data-stu-id="504ac-163">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span></span></summary>
        <returns><span data-ttu-id="504ac-164">Index de base zéro de la dernière occurrence de l’élément dans la liste immuable entière, si elle est trouvée ; sinon, -1.</span><span class="sxs-lookup"><span data-stu-id="504ac-164">The zero-based index of the last occurrence of item within the entire the Immutable list, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-165">Type des éléments de la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-165">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="504ac-166">Liste à rechercher.</span><span class="sxs-lookup"><span data-stu-id="504ac-166">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="504ac-167">Objet à localiser dans la liste immuable.</span><span class="sxs-lookup"><span data-stu-id="504ac-167">The object to locate in the Immutable list.</span></span> <span data-ttu-id="504ac-168">La valeur peut être null pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="504ac-168">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="504ac-169">Index de début de base zéro de la recherche vers le haut.</span><span class="sxs-lookup"><span data-stu-id="504ac-169">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="504ac-170">Recherche l’objet spécifié et retourne l’index de base zéro de la dernière occurrence dans la plage d’éléments de la liste immuable qui s’étend du premier élément à l’index spécifié.</span><span class="sxs-lookup"><span data-stu-id="504ac-170">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="504ac-171">Index de base zéro de la dernière occurrence de l’élément dans la plage d’éléments de la liste immuable qui s’étend du premier élément à l’index, si elle est trouvée ; sinon, -1.</span><span class="sxs-lookup"><span data-stu-id="504ac-171">The zero-based index of the last occurrence of item within the range of elements in the Immutable list that extends from the first element to index, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-172">Type des éléments de la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-172">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="504ac-173">Liste à rechercher.</span><span class="sxs-lookup"><span data-stu-id="504ac-173">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="504ac-174">Objet à localiser dans la liste immuable.</span><span class="sxs-lookup"><span data-stu-id="504ac-174">The object to locate in the Immutable list.</span></span> <span data-ttu-id="504ac-175">La valeur peut être null pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="504ac-175">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="504ac-176">Index de début de base zéro de la recherche vers le haut.</span><span class="sxs-lookup"><span data-stu-id="504ac-176">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="504ac-177">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</span><span class="sxs-lookup"><span data-stu-id="504ac-177">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="504ac-178">Recherche l’objet spécifié et retourne l’index de base zéro de la dernière occurrence dans la plage d’éléments de la liste immuable qui s’étend du premier élément à l’index spécifié.</span><span class="sxs-lookup"><span data-stu-id="504ac-178">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="504ac-179">Index de base zéro de la dernière occurrence de l’élément dans la plage d’éléments de la liste immuable qui s’étend du premier élément à l’index, si elle est trouvée ; sinon, -1.</span><span class="sxs-lookup"><span data-stu-id="504ac-179">The zero-based index of the last occurrence of item within the range of elements in the Immutable list that extends from the first element to index, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; Remove&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; Remove&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Remove(Of T) (list As IImmutableList(Of T), value As T) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ Remove(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T value);" />
      <MemberSignature Language="F#" Value="static member Remove : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Remove (list, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-180">Type des éléments de la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-180">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="504ac-181">Liste à rechercher.</span><span class="sxs-lookup"><span data-stu-id="504ac-181">The list to search.</span></span></param>
        <param name="value"><span data-ttu-id="504ac-182">Valeur à supprimer.</span><span class="sxs-lookup"><span data-stu-id="504ac-182">The value to remove.</span></span></param>
        <summary><span data-ttu-id="504ac-183">Supprime la valeur spécifiée dans cette liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-183">Removes the specified value from this list.</span></span></summary>
        <returns><span data-ttu-id="504ac-184">Nouvelle liste immuable avec l’élément supprimé, ou cette liste si l’élément n’est pas dans cette liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-184">A new immutable list with the element removed, or this list if the element is not in this list.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; RemoveRange&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; RemoveRange&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveRange(Of T) (list As IImmutableList(Of T), items As IEnumerable(Of T)) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ RemoveRange(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member RemoveRange : System.Collections.Immutable.IImmutableList&lt;'T&gt; * seq&lt;'T&gt; -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.RemoveRange (list, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-185">Type des éléments de la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-185">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="504ac-186">Liste à rechercher.</span><span class="sxs-lookup"><span data-stu-id="504ac-186">The list to search.</span></span></param>
        <param name="items"><span data-ttu-id="504ac-187">Éléments à supprimer si des correspondances sont trouvées dans cette liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-187">The items to remove if matches are found in this list.</span></span></param>
        <summary><span data-ttu-id="504ac-188">Supprime les valeurs spécifiées de cette liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-188">Removes the specified values from this list.</span></span></summary>
        <returns><span data-ttu-id="504ac-189">Nouvelle liste immuable avec les éléments supprimés.</span><span class="sxs-lookup"><span data-stu-id="504ac-189">A new immutable list with the elements removed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; Replace&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T oldValue, T newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; Replace&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T oldValue, !!T newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace(Of T) (list As IImmutableList(Of T), oldValue As T, newValue As T) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ Replace(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T oldValue, T newValue);" />
      <MemberSignature Language="F#" Value="static member Replace : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * 'T -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Replace (list, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="504ac-190">Type des éléments de la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-190">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="504ac-191">Liste à rechercher.</span><span class="sxs-lookup"><span data-stu-id="504ac-191">The list to search.</span></span></param>
        <param name="oldValue"><span data-ttu-id="504ac-192">Élément à remplacer.</span><span class="sxs-lookup"><span data-stu-id="504ac-192">The element to replace.</span></span></param>
        <param name="newValue"><span data-ttu-id="504ac-193">Élément avec lequel remplacer l’ancien élément.</span><span class="sxs-lookup"><span data-stu-id="504ac-193">The element to replace the old element with.</span></span></param>
        <summary><span data-ttu-id="504ac-194">Remplace le premier élément égal dans la liste par l’élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="504ac-194">Replaces the first equal element in the list with the specified element.</span></span></summary>
        <returns><span data-ttu-id="504ac-195">Nouvelle liste, même si la valeur en cours de remplacement est égale à la nouvelle valeur de cette position.</span><span class="sxs-lookup"><span data-stu-id="504ac-195">The new list -- even if the value being replaced is equal to the new value for that position.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="504ac-196">Levé quand l’ancienne valeur n’existe pas dans la liste.</span><span class="sxs-lookup"><span data-stu-id="504ac-196">Thrown when the old value does not exist in the list.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableList&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;TSource&gt; ToImmutableList&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!TSource&gt; ToImmutableList&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableList(Of TSource) (source As IEnumerable(Of TSource)) As ImmutableList(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableList&lt;TSource&gt; ^ ToImmutableList(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToImmutableList : seq&lt;'Source&gt; -&gt; System.Collections.Immutable.ImmutableList&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableList.ToImmutableList source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="504ac-197">Type des éléments de la séquence.</span><span class="sxs-lookup"><span data-stu-id="504ac-197">The type of the elements in the sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="504ac-198">Séquence à énumérer.</span><span class="sxs-lookup"><span data-stu-id="504ac-198">The sequence to enumerate.</span></span></param>
        <summary><span data-ttu-id="504ac-199">Énumère une séquence et produit une liste immuable de son contenu.</span><span class="sxs-lookup"><span data-stu-id="504ac-199">Enumerates a sequence and produces an immutable list of its contents.</span></span></summary>
        <returns><span data-ttu-id="504ac-200">Liste immuable qui contient les éléments dans l’ordre spécifié.</span><span class="sxs-lookup"><span data-stu-id="504ac-200">An immutable list that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>