<Type Name="ImmutableDictionary" FullName="System.Collections.Immutable.ImmutableDictionary">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0fcec0d9451309799c303102b574cf5324993520" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369813" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableDictionary extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableDictionary abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0f0d3-101">Fournit un ensemble de méthodes d’initialisation pour les instances de la classe <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f0d3-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /> class.</span>
      </span>
      <span data-ttu-id="0f0d3-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">à propos des collections immuables et de leur installation</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f0d3-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="0f0d3-103">Ce type est thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f0d3-103">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Contains&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; map, TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; map, !!TKey key, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TKey, TValue) (map As IImmutableDictionary(Of TKey, TValue), key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ map, TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="map" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-104">Type des clés dans le dictionnaire immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-104">The type of the keys in the immutable dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-105">Type des valeurs dans le dictionnaire immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-105">The type of the values in the immutable dictionary.</span>
          </span>
        </typeparam>
        <param name="map">
          <span data-ttu-id="0f0d3-106">Dictionnaire immuable à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-106">The immutable dictionary to search.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="0f0d3-107">Clé à rechercher dans le dictionnaire immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-107">The key to locate in the immutable dictionary.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0f0d3-108">Valeur à localiser sur la clé spécifiée, si la clé est trouvée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-108">The value to locate on the specified key, if the key is found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-109">Détermine si le dictionnaire immuable spécifié contient la paire clé/valeur spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-109">Determines whether the specified immutable dictionary contains the specified key/value pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-110">
            <see langword="true" /> si ce mappage contient la paire clé/valeur spécifiée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-110">
              <see langword="true" /> if this map contains the specified key/value pair; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-111">Type des clés stockées par le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-111">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-112">Type des valeurs stockées par le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-112">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="0f0d3-113">Crée un dictionnaire immuable vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-113">Creates an empty immutable dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-114">Dictionnaire vide immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-114">An empty immutable dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-115">Type des clés stockées par le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-115">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-116">Type des valeurs stockées par le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-116">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="0f0d3-117">Implémentation à utiliser pour déterminer l’égalité des clés dans le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-117">The implementation to use to determine the equality of keys in the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-118">Crée un dictionnaire immuable vide qui utilise le comparateur de clé spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-118">Creates an empty immutable dictionary that uses the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-119">Dictionnaire vide immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-119">An empty immutable dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-120">Type des clés stockées par le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-120">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-121">Type des valeurs stockées par le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-121">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="0f0d3-122">Implémentation à utiliser pour déterminer l’égalité des clés dans le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-122">The implementation to use to determine the equality of keys in the dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="0f0d3-123">Implémentation à utiliser pour déterminer l’égalité des valeurs dans le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-123">The implementation to use to determine the equality of values in the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-124">Crée un dictionnaire immuable vide qui utilise les comparateurs de clé et de valeur spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-124">Creates an empty immutable dictionary that uses the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-125">Dictionnaire vide immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-125">An empty immutable dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-126">Type des clés stockées par le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-126">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-127">Type des valeurs stockées par le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-127">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="0f0d3-128">Crée un générateur de dictionnaire immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-128">Creates a new immutable dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-129">Nouveau générateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-129">The new builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-130">Type des clés stockées par le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-130">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-131">Type des valeurs stockées par le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-131">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="0f0d3-132">Comparateur de clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-132">The key comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-133">Crée un générateur de dictionnaire immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-133">Creates a new immutable dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-134">Nouveau générateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-134">The new builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-135">Type des clés stockées par le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-135">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-136">Type des valeurs stockées par le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-136">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="0f0d3-137">Comparateur de clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-137">The key comparer.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="0f0d3-138">Comparateur de valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-138">The value comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-139">Crée un générateur de dictionnaire immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-139">Creates a new immutable dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-140">Nouveau générateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-140">The new builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-141">Type des clés du dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-141">The type of keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-142">Type des valeurs du dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-142">The type of values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="0f0d3-143">Éléments utilisés pour remplir le dictionnaire avant qu’il soit immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-143">The items used to populate the dictionary before it’s immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-144">Crée un dictionnaire immuable qui contient les éléments spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-144">Creates a new immutable dictionary that contains the specified items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-145">Nouveau dictionnaire immuable qui contient les éléments spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-145">A new immutable dictionary that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-146">Type des clés du dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-146">The type of keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-147">Type des valeurs du dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-147">The type of values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="0f0d3-148">Implémentation du comparateur à utiliser pour comparer des clés pour l’égalité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-148">The comparer implementation to use to compare keys for equality.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="0f0d3-149">Éléments à ajouter au dictionnaire avant qu’il soit immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-149">The items to add to the dictionary before it’s immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-150">Crée un dictionnaire immuable qui contient les éléments spécifiés et utilise le comparateur de clé spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-150">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-151">Nouveau dictionnaire immuable qui contient les éléments spécifiés et utilise le comparateur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-151">A new immutable dictionary that contains the specified items and uses the specified comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-152">Type des clés du dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-152">The type of keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-153">Type des valeurs du dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-153">The type of values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="0f0d3-154">Implémentation du comparateur à utiliser pour comparer des clés pour l’égalité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-154">The comparer implementation to use to compare keys for equality.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="0f0d3-155">Implémentation du comparateur à utiliser pour comparer l’égalité des valeurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-155">The comparer implementation to use to compare values for equality.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="0f0d3-156">Éléments à ajouter au dictionnaire avant qu’il soit immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-156">The items to add to the dictionary before it’s immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-157">Crée un dictionnaire immuable qui contient les éléments spécifiés et utilise le comparateur de clé spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-157">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-158">Nouveau dictionnaire immuable qui contient les éléments spécifiés et utilise le comparateur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-158">A new immutable dictionary that contains the specified items and uses the specified comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-159">Type de la clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-159">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-160">Type de la valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-160">The type of the value.</span>
          </span>
        </typeparam>
        <param name="dictionary">
          <span data-ttu-id="0f0d3-161">Dictionnaire permettant de récupérer la valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-161">The dictionary to retrieve the value from.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="0f0d3-162">Clé à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-162">The key to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-163">Obtient la valeur d’une clé spécifique, si une clé correspondante existe dans le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-163">Gets the value for a given key if a matching key exists in the dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-164">Valeur de la clé, ou <c>default(TValue)</c> si aucune clé correspondante n’a été trouvée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-164">The value for the key, or <c>default(TValue)</c> if no matching key was found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key, TValue defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key, !!TValue defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey, defaultValue As TValue) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key, TValue defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="defaultValue" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-165">Type de la clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-165">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-166">Type de la valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-166">The type of the value.</span>
          </span>
        </typeparam>
        <param name="dictionary">
          <span data-ttu-id="0f0d3-167">Dictionnaire permettant de récupérer la valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-167">The dictionary to retrieve the value from.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="0f0d3-168">Clé à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-168">The key to search for.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="0f0d3-169">Valeur par défaut à retourner si aucune clé correspondante n’est trouvée dans le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-169">The default value to return if no matching key is found in the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-170">Obtient la valeur d’une clé spécifique, si une clé correspondante existe dans le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-170">Gets the value for a given key if a matching key exists in the dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-171">La valeur de la clé, ou <paramref name="defaultValue" /> si aucune clé n’a été trouvée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-171">The value for the key, or <paramref name="defaultValue" /> if no matching key was found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-172">Type des clés dans le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-172">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-173">Type des valeurs dans le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-173">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="0f0d3-174">Séquence de paires clé/valeur à énumérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-174">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-175">Énumère une séquence de paires clé/valeur et produit un dictionnaire immuable de son contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-175">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-176">Dictionnaire immuable qui contient les paires clé/valeur dans l’ordre spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-176">An immutable dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-177">Type des clés dans le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-177">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-178">Type des valeurs dans le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-178">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="0f0d3-179">Séquence de paires clé/valeur à énumérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-179">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="0f0d3-180">Comparateur de clés à utiliser lors de la création du dictionnaire immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-180">The key comparer to use when building the immutable dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-181">Énumère une séquence de paires clé/valeur et produit un dictionnaire immuable de son contenu à l’aide du comparateur de clé spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-181">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-182">Dictionnaire immuable qui contient les paires clé/valeur dans l’ordre spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-182">An immutable dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-183">Type des clés dans le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-183">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-184">Type des valeurs dans le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-184">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="0f0d3-185">Séquence de paires clé/valeur à énumérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-185">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="0f0d3-186">Comparateur de clés à utiliser lors de la création du dictionnaire immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-186">The key comparer to use when building the immutable dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="0f0d3-187">Comparateur de valeur à utiliser pour le dictionnaire immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-187">The value comparer to use for the immutable dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-188">Énumère une séquence de paires clé/valeur et produit un dictionnaire immuable de son contenu à l’aide de la des comparateurs de clé et de valeur spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-188">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-189">Dictionnaire immuable qui contient les paires clé/valeur dans l’ordre spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-189">An immutable dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="0f0d3-190">Type d’élément de la collection source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-190">The type of element in the source collection.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-191">Type de clé dans le dictionnaire immuable qui en résulte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-191">The type of key in the resulting immutable dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="0f0d3-192">Collection source utilisée pour générer le dictionnaire immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-192">The source collection used to generate the immutable dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="0f0d3-193">Fonction utilisée pour transformer des clés pour le dictionnaire immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-193">The function used to transform keys for the immutable dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-194">Construit un dictionnaire immuable à partir de la collection d’éléments existante, en appliquant une fonction de transformation aux clés source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-194">Constructs an immutable dictionary from an existing collection of elements, applying a transformation function to the source keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-195">Dictionnaire immuable qui contient les éléments de <paramref name="source" />, avec des clés transformés en appliquant <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-195">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="0f0d3-196">Type d’élément de la collection source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-196">The type of element in the source collection.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-197">Type de clé dans le dictionnaire immuable qui en résulte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-197">The type of key in the resulting immutable dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="0f0d3-198">Collection source utilisée pour générer le dictionnaire immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-198">The source collection used to generate the immutable dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="0f0d3-199">Fonction utilisée pour transformer des clés pour le dictionnaire immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-199">The function used to transform keys for the immutable dictionary.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="0f0d3-200">Comparateur de clé à utiliser pour le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-200">The key comparer to use for the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-201">Construit un dictionnaire immuable basé sur une transformation d’une séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-201">Constructs an immutable dictionary based on some transformation of a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-202">Dictionnaire immuable qui contient les éléments de <paramref name="source" />, avec des clés transformés en appliquant <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-202">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="0f0d3-203">Type des éléments de la séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-203">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-204">Type des clés dans le dictionnaire qui en résulte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-204">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-205">Type des valeurs dans le dictionnaire qui en résulte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-205">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="0f0d3-206">Séquence à énumérer pour générer le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-206">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="0f0d3-207">Fonction qui génère la clé de dictionnaire à partir de chaque élément de la séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-207">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="0f0d3-208">Fonction qui génère la valeur de dictionnaire à partir de chaque élément de la séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-208">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-209">Énumère et transforme une séquence et produit un dictionnaire immuable de son contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-209">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-210">Dictionnaire immuable qui contient les éléments dans l’ordre spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-210">An immutable dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="0f0d3-211">Type des éléments de la séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-211">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-212">Type des clés dans le dictionnaire qui en résulte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-212">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-213">Type des valeurs dans le dictionnaire qui en résulte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-213">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="0f0d3-214">Séquence à énumérer pour générer le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-214">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="0f0d3-215">Fonction qui génère la clé de dictionnaire à partir de chaque élément de la séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-215">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="0f0d3-216">Fonction qui génère la valeur de dictionnaire à partir de chaque élément de la séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-216">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="0f0d3-217">Comparateur de clé à utiliser pour le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-217">The key comparer to use for the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-218">Énumère et transforme une séquence et produit un dictionnaire immuable de son contenu à l’aide du comparateur de clé spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-218">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-219">Dictionnaire immuable qui contient les éléments dans l’ordre spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-219">An immutable dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="0f0d3-220">Type des éléments de la séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-220">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="0f0d3-221">Type des clés dans le dictionnaire qui en résulte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-221">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0f0d3-222">Type des valeurs dans le dictionnaire qui en résulte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-222">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="0f0d3-223">Séquence à énumérer pour générer le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-223">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="0f0d3-224">Fonction qui génère la clé de dictionnaire à partir de chaque élément de la séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-224">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="0f0d3-225">Fonction qui génère la valeur de dictionnaire à partir de chaque élément de la séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-225">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="0f0d3-226">Comparateur de clé à utiliser pour le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-226">The key comparer to use for the dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="0f0d3-227">Comparateur de valeur à utiliser pour le dictionnaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-227">The value comparer to use for the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0d3-228">Énumère et transforme une séquence et produit un dictionnaire immuable de son contenu à l’aide des comparateurs de clé et de valeur spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-228">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0d3-229">Dictionnaire immuable qui contient les éléments dans l’ordre spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0d3-229">An immutable dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>