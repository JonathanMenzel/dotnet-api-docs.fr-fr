<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImmutableList`1+Builder.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5306457b56ab4b2273eb07eecea5c4f9fbc8b4028.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">306457b56ab4b2273eb07eecea5c4f9fbc8b4028</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableList`1.Builder">
          <source>Represents a list that mutates with little or no memory allocations and that can produce or build on immutable list instances very efficiently.</source>
          <target state="translated">Représente une liste qui mute, avec peu ou pas d’allocations de mémoire, et qui peut produire ou créer très efficacement sur les instances de liste immuable.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableList`1.Builder">
          <source><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>about immutable collections and how to install<ept id="p3">&lt;/see&gt;</ept>)</source>
          <target state="translated"><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>à propos des collections immuables et de leur installation<ept id="p3">&lt;/see&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableList`1.Builder">
          <source>Although <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A?displayProperty=nameWithType&gt;</ph> and other methods already provide fast bulk change operations on the list, the <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> class allows multiple combinations of changes to be made to a list with equal efficiency.</source>
          <target state="translated">Bien que <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A?displayProperty=nameWithType&gt;</ph> et d’autres méthodes fournissent déjà les opérations de modification en bloc rapide dans la liste, la <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> classe permet à plusieurs combinaisons de modifications à apporter à une liste avec une efficacité égale.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Add(`0)">
          <source>The item to add to the list.</source>
          <target state="translated">Élément à ajouter à la liste.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Add(`0)">
          <source>Adds an item to the immutable list.</source>
          <target state="translated">Ajoute un élément à la liste immuable.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements to add to the end of the list.</source>
          <target state="translated">Éléments à ajouter à la fin de la liste.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>Adds a series of elements to the end of this list.</source>
          <target state="translated">Ajoute une série d’éléments à la fin de cette liste.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>The object to locate.</source>
          <target state="translated">Objet à trouver.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>The value can be null for reference types.</source>
          <target state="translated">La valeur peut être null pour les types référence.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>Searches the entire <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> for an element using the default comparer and returns the zero-based index of the element.</source>
          <target state="translated">Recherche l’ensemble de la <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> pour un élément en utilisant le comparateur par défaut et retourne l’index de base zéro de l’élément.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>The zero-based index of item in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated">Index de base zéro de l’élément dans le <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, si l’élément est trouvé ; sinon, un nombre négatif qui est le complément de bits de l’index de l’élément suivant est supérieur à <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Vous pouvez appliquer l’opération de bits (~) à cet entier négatif pour obtenir l’index du premier élément supérieur à la valeur de recherche.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Lors de l’insertion de la valeur dans la <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, cet index doit être utilisé en tant que le point d’insertion pour conserver l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The object to locate.</source>
          <target state="translated">Objet à trouver.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>This value can be null for reference types.</source>
          <target state="translated">Cette valeur peut être null pour les types référence.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> for the default comparer.</source>
          <target state="translated">Implémentation à utiliser lors de la comparaison d’éléments, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour le comparateur par défaut.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>Searches the entire <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">Recherche dans l’ensemble de la <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> d’un élément à l’aide du comparateur spécifié et retourne l’index de base zéro de l’élément.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based index of item in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated">Index de base zéro de l’élément dans le <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, si l’élément est trouvé ; sinon, un nombre négatif qui est le complément de bits de l’index de l’élément suivant est supérieur à <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Vous pouvez appliquer l’opération de bits (~) à cet entier négatif pour obtenir l’index du premier élément supérieur à la valeur de recherche.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Lors de l’insertion de la valeur dans la <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, cet index doit être utilisé en tant que le point d’insertion pour conserver l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based starting index of the range to search.</source>
          <target state="translated">Index de début de base zéro de la plage dans laquelle effectuer la recherche.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The length of the range to search.</source>
          <target state="translated">Longueur de la plage dans laquelle effectuer la recherche.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The object to locate.</source>
          <target state="translated">Objet à trouver.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>This value can be null for reference types.</source>
          <target state="translated">Cette valeur peut être null pour les types référence.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> for the default comparer.</source>
          <target state="translated">Implémentation à utiliser lors de la comparaison d’éléments, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour le comparateur par défaut.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>Searches the specified range of the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">Recherche dans la plage spécifiée de la <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> d’un élément à l’aide du comparateur spécifié et retourne l’index de base zéro de l’élément.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based index of item in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated">Index de base zéro de l’élément dans le <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, si l’élément est trouvé ; sinon, un nombre négatif qui est le complément de bits de l’index de l’élément suivant est supérieur à <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Vous pouvez appliquer l’opération de bits (~) à cet entier négatif pour obtenir l’index du premier élément supérieur à la valeur de recherche.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Lors de l’insertion de la valeur dans la <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, cet index doit être utilisé en tant que le point d’insertion pour conserver l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Clear">
          <source>Removes all items from the immutable list.</source>
          <target state="translated">Supprime tous les éléments de la liste immuable.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)">
          <source>The object to locate in the list.</source>
          <target state="translated">Objet à localiser dans la liste.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)">
          <source>Determines whether the immutable list contains a specific value.</source>
          <target state="translated">Détermine si la liste immuable contient une valeur spécifique.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item is found in the list; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l’élément est trouvé dans la liste ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>The type of the output of the delegate converter function.</source>
          <target state="translated">Type de la sortie de la fonction de conversion déléguée.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>The converter function.</source>
          <target state="translated">Fonction de convertisseur.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>Creates a new immutable list from the list represented by this builder by using the converter function.</source>
          <target state="translated">Crée une nouvelle liste immuable à partir de la liste représentée par ce générateur à l’aide de la fonction de convertisseur.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>A new immutable list from the list represented by this builder.</source>
          <target state="translated">Nouvelle liste immuable provenant de la liste représentée par ce générateur.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])">
          <source>The one-dimensional array that is the destination of the elements copied from the immutable list.</source>
          <target state="translated">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir de la liste immuable.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Ce tableau doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])">
          <source>Copies the entire immutable list to a compatible one-dimensional array, starting at the beginning of the target array.</source>
          <target state="translated">Copie l’intégralité de la liste immuable dans un tableau unidimensionnel compatible, en commençant au début du tableau cible.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the immutable list.</source>
          <target state="translated">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir de la liste immuable.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Ce tableau doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in array at which copying begins.</source>
          <target state="translated">Index de base zéro dans un tableau au niveau duquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>Copies the entire immutable list to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">Copie l’intégralité de la liste immuable dans un tableau unidimensionnel compatible, en commençant à l’index spécifié du tableau cible.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The zero-based index in the source immutable list at which copying begins.</source>
          <target state="translated">Index de base zéro dans la liste immuable source auquel la copie commence.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the immutable list.</source>
          <target state="translated">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir de la liste immuable.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Ce tableau doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Index de base zéro dans un <bpt id="p1">&lt;c&gt;</bpt>tableau<ept id="p1">&lt;/c&gt;</ept> auquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The number of elements to copy.</source>
          <target state="translated">Nombre d'éléments à copier.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>Copies the entire immutable list to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">Copie l’intégralité de la liste immuable dans un tableau unidimensionnel compatible, en commençant à l’index spécifié du tableau cible.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Count">
          <source>Gets the number of elements in this immutable list.</source>
          <target state="translated">Obtient le nombre d’éléments dans cette liste immuable.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Count">
          <source>The number of elements in this list.</source>
          <target state="translated">Nombre d’éléments dans cette liste.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to search for.</source>
          <target state="translated">Délégué qui définit les conditions des éléments à rechercher.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})">
          <source>Determines whether the immutable list contains elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">Détermine si la liste immuable contient des éléments qui correspondent aux conditions définies par le prédicat spécifié.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the immutable list contains one or more elements that match the conditions defined by the specified predicate; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la liste immuable contient un ou plusieurs éléments qui correspondent aux conditions définies par le prédicat spécifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Délégué qui définit les conditions de l’élément à rechercher.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire immutable list.</source>
          <target state="translated">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne la première occurrence de l’intégralité de la liste immuable.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})">
          <source>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">Premier élément qui correspond aux conditions définies par le prédicat spécifié, s'il est trouvé ; sinon, valeur par défaut du type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to search for.</source>
          <target state="translated">Délégué qui définit les conditions des éléments à rechercher.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})">
          <source>Retrieves all the elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">Récupère tous les éléments qui correspondent aux conditions définies par le prédicat spécifié.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})">
          <source>An immutable list containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty immutable list.</source>
          <target state="translated">Liste immuable contenant tous les éléments qui correspondent aux conditions définies par le prédicat spécifié, le cas échéant ; sinon, une liste immuable vide.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Délégué qui définit les conditions de l’élément à rechercher.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire immutable list.</source>
          <target state="translated">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l’index de base zéro de la première occurrence de l’intégralité de la liste immuable.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Index de base zéro de la première occurrence d'un élément qui répond aux conditions définies par <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, si cette occurrence est trouvée ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Index de début de base zéro de la recherche.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Délégué qui définit les conditions de l’élément à rechercher.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</source>
          <target state="translated">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l’index de base zéro de la première occurrence trouvée dans la plage d’éléments de la liste immuable qui s’étend de l’index spécifié au dernier élément.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Index de base zéro de la première occurrence d'un élément qui répond aux conditions définies par <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, si cette occurrence est trouvée ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Index de début de base zéro de la recherche.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Délégué qui définit les conditions de l’élément à rechercher.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the immutable list that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l’index de base zéro de la première occurrence trouvée dans la plage d’éléments de la liste immuable qui commence à l’index spécifié et contient le nombre spécifié d’éléments.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Index de base zéro de la première occurrence d'un élément qui répond aux conditions définies par <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, si cette occurrence est trouvée ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Délégué qui définit les conditions de l’élément à rechercher.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire immutable list.</source>
          <target state="translated">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne la dernière occurrence de l’intégralité de la liste immuable</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})">
          <source>The last element that matches the conditions defined by the specified predicate, found; otherwise, the default value for type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">Dernier élément qui correspond aux conditions définies par le prédicat spécifié, s’il est trouvé ; sinon, valeur par défaut du type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Délégué qui définit les conditions de l’élément à rechercher.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire immutable list.</source>
          <target state="translated">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l’index de base zéro de la dernière occurrence de l’intégralité de la liste immuable.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Index de base zéro de la dernière occurrence d'un élément qui correspond aux conditions définies par <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, si cette occurrence est trouvée ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">Index de début de base zéro de la recherche vers le haut.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Délégué qui définit les conditions de l’élément à rechercher.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</source>
          <target state="translated">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l’index de base zéro de la dernière occurrence dans la plage d’éléments de la liste immuable qui s’étend du premier élément à l’index spécifié.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Index de base zéro de la dernière occurrence d'un élément qui correspond aux conditions définies par <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, si cette occurrence est trouvée ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">Index de début de base zéro de la recherche vers le haut.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Délégué qui définit les conditions de l’élément à rechercher.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Recherche un élément qui correspond aux conditions définies par le prédicat spécifié et retourne l’index de base zéro de la dernière occurrence trouvée dans la plage d’éléments de la liste immuable qui contient le nombre d’éléments spécifié et se termine à l’index spécifié.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Index de base zéro de la dernière occurrence d'un élément qui correspond aux conditions définies par <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, si cette occurrence est trouvée ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ForEach(System.Action{`0})">
          <source>The delegate to perform on each element of the list.</source>
          <target state="translated">Délégué à exécuter sur chaque élément de la liste.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ForEach(System.Action{`0})">
          <source>Performs the specified action on each element of the list.</source>
          <target state="translated">Exécute l’action spécifiée sur chaque élément de la liste.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein de la collection.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator">
          <source>An enumerator that can be used to iterate through the list.</source>
          <target state="translated">Énumérateur permettant d’effectuer une itération au sein de la liste.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>The zero-based index at which the range starts.</source>
          <target state="translated">Index de base zéro auquel la plage commence.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>The number of elements in the range.</source>
          <target state="translated">Nombre d'éléments dans la plage.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>Creates a shallow copy of a range of elements in the source immutable list.</source>
          <target state="translated">Crée une copie superficielle d’une plage d’éléments dans la liste immuable source.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>A shallow copy of a range of elements in the source immutable list.</source>
          <target state="translated">Copie superficielle d’une plage d’éléments dans la liste immuable source.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objet à localiser dans la liste immuable.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour les types référence.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list.</source>
          <target state="translated">Recherche l’objet spécifié et retourne l’index de base zéro de la première occurrence dans la plage d’éléments de la liste immuable.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the immutable list, if found; otherwise, –1.</source>
          <target state="translated">Index de base zéro de la première occurrence de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> dans la plage d’éléments de la liste immuable, le cas échéant ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objet à localiser dans la liste immuable.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour les types référence.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Index de début de base zéro de la recherche.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (zéro) est valide dans une liste vide.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</source>
          <target state="translated">Recherche l’objet spécifié et retourne l’index de base zéro de la première occurrence trouvée dans la plage d’éléments de la liste immuable qui s’étend de l’index spécifié au dernier élément.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that extends from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the last element, if found; otherwise, –1.</source>
          <target state="translated">Index de base zéro de la première occurrence de l’élément dans la plage d’éléments de la liste immuable qui s’étend de <ph id="ph1">&lt;paramref name="index" /&gt;</ph> jusqu’au dernier élément, le cas échéant ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objet à localiser dans la liste immuable.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour les types référence.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Index de début de base zéro de la recherche.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (zéro) est valide dans une liste vide.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Recherche l’objet spécifié et retourne l’index de base zéro de la première occurrence trouvée dans la plage d’éléments de la liste immuable qui commence à l’index spécifié et qui contient le nombre spécifié d’éléments.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements, if found; otherwise, –1.</source>
          <target state="translated">Index de base zéro de la première occurrence de l’élément dans la plage d’éléments de la liste immuable qui commence à <ph id="ph1">&lt;paramref name="index" /&gt;</ph> et contient le nombre <ph id="ph2">&lt;paramref name="count" /&gt;</ph> d’éléments, le cas échéant ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objet à localiser dans la liste immuable.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour les types référence.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Index de début de base zéro de la recherche.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (zéro) est valide dans une liste vide.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The number of elements to search.</source>
          <target state="translated">Nombre d'éléments à explorer.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value comparer to use for comparing elements for equality.</source>
          <target state="translated">Comparateur de valeur à utiliser pour comparer les éléments en termes d’égalité.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Recherche l'objet spécifié et retourne l'index de base zéro de la première occurrence trouvée dans la plage d'éléments de <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> qui commence à l'index spécifié et qui contient le nombre d'éléments spécifié.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements, if found; otherwise, –1</source>
          <target state="translated">Index de base zéro de la première occurrence de l’élément dans la plage d’éléments de la liste immuable qui commence à <ph id="ph1">&lt;paramref name="index" /&gt;</ph> et contient le nombre <ph id="ph2">&lt;paramref name="count" /&gt;</ph> d’éléments, le cas échéant ; sinon, -1</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Index de base zéro auquel <bpt id="p1">&lt;c&gt;</bpt>l’élément<ept id="p1">&lt;/c&gt;</ept> doit être inséré.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)">
          <source>The object to insert into the immutable list.</source>
          <target state="translated">Objet à insérer dans la liste immuable.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)">
          <source>Inserts an item to the immutable list at the specified index.</source>
          <target state="translated">Insère un élément dans la liste immuable à l’index spécifié.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The zero-based index at which the new elements should be inserted.</source>
          <target state="translated">Index de base zéro au niveau duquel les nouveaux éléments devraient être insérés.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The collection whose elements should be inserted into the immutable list.</source>
          <target state="translated">Collection dont les éléments doivent être insérés dans la liste immuable.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The collection itself cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, but it can contain elements that are null, if type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> is a reference type.</source>
          <target state="translated">La collection elle-même ne peut pas avoir la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph>, mais elle peut contenir des éléments qui sont null, si le type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> est un type référence.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>Inserts the elements of a collection into the immutable list at the specified index.</source>
          <target state="translated">Insère les éléments d’une collection dans la liste immuable à l’index spécifié.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)">
          <source>The index of the item to get or set.</source>
          <target state="translated">Index de l’élément à obtenir ou à définir.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)">
          <source>Gets or sets the value for a given index in the list.</source>
          <target state="translated">Obtient ou définit la valeur d’un index donné dans la liste.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)">
          <source>The value at the specified index.</source>
          <target state="translated">Valeur à l’index spécifié.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objet à localiser dans la liste immuable.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour les types référence.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</source>
          <target state="translated">Recherche l’objet spécifié et retourne l’index de base zéro de la dernière occurrence trouvée dans l’intégralité de la liste immuable.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the entire immutable list, if found; otherwise, –1.</source>
          <target state="translated">Index de base zéro de la dernière occurrence de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> dans l’intégralité de la liste immuable, le cas échéant ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objet à localiser dans la liste immuable.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour les types référence.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">Index de début de base zéro de la recherche vers le haut.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</source>
          <target state="translated">Recherche l’objet spécifié et retourne l’index de base zéro de la dernière occurrence dans la plage d’éléments de la liste immuable qui s’étend du premier élément à l’index spécifié.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the immutable list that extends from the first element to <ph id="ph2">&lt;paramref name="index" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Index de base zéro de la dernière occurrence de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> trouvée dans la plage d’éléments de la liste immuable qui s’étend du premier élément à <ph id="ph2">&lt;paramref name="index" /&gt;</ph>, le cas échéant ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objet à localiser dans la liste immuable.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour les types référence.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">Index de début de base zéro de la recherche vers le haut.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Recherche l’objet spécifié et retourne l’index de base zéro de la dernière occurrence trouvée dans la plage d’éléments de la liste immuable qui contient le nombre spécifié d’éléments et se termine à l’index spécifié.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the immutable list that contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements and ends at <ph id="ph3">&lt;paramref name="index" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">Index de base zéro de la dernière occurrence de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> trouvée dans la plage d’éléments de la liste immuable qui contient le nombre d’éléments <ph id="ph2">&lt;paramref name="count" /&gt;</ph> et se termine à <ph id="ph3">&lt;paramref name="index" /&gt;</ph>, le cas échéant ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">Objet à localiser dans la liste immuable.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour les types référence.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Index de début de base zéro de la recherche.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (zéro) est valide dans une liste vide.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The number of elements to search.</source>
          <target state="translated">Nombre d'éléments à explorer.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value comparer to use for comparing elements for equality.</source>
          <target state="translated">Comparateur de valeur à utiliser pour comparer les éléments en termes d’égalité.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Recherche l’objet spécifié et retourne l’index de base zéro de la dernière occurrence trouvée dans la plage d’éléments de la liste immuable qui contient le nombre spécifié d’éléments et se termine à l’index spécifié.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements, if found; otherwise, –1</source>
          <target state="translated">Index de base zéro de la première occurrence de l’élément dans la plage d’éléments de la liste immuable qui commence à <ph id="ph1">&lt;paramref name="index" /&gt;</ph> et contient le nombre <ph id="ph2">&lt;paramref name="count" /&gt;</ph> d’éléments, le cas échéant ; sinon, -1</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source>The object to remove from the list.</source>
          <target state="translated">Objet à supprimer de la liste.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source>Removes the first occurrence of a specific object from the immutable list.</source>
          <target state="translated">Supprime la première occurrence d’un objet spécifique de la liste immuable.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item was successfully removed from the list; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l’élément a été correctement supprimé de la liste ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if item is not found in the list.</source>
          <target state="translated">Cette méthode retourne également <ph id="ph1">&lt;see langword="false" /&gt;</ph> si l’élément est introuvable dans la liste.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to remove.</source>
          <target state="translated">Délégué qui définit les conditions des éléments à supprimer.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})">
          <source>Removes all the elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">Supprime tous les éléments qui correspondent aux conditions définies par le prédicat spécifié.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})">
          <source>The number of elements removed from the immutable list.</source>
          <target state="translated">Nombre d’éléments supprimés de la liste immuable.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt(System.Int32)">
          <source>The zero-based index of the item to remove from the list.</source>
          <target state="translated">Index de base zéro de l’élément à supprimer de la liste.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt(System.Int32)">
          <source>Removes the item at the specified index of the immutable list.</source>
          <target state="translated">Supprime l’élément à l’index spécifié de la liste immuable.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse">
          <source>Reverses the order of the elements in the entire immutable list.</source>
          <target state="translated">Inverse l’ordre des éléments dans l’intégralité de la liste immuable.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)">
          <source>The zero-based starting index of the range to reverse.</source>
          <target state="translated">Index de début de base zéro de la plage à inverser.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)">
          <source>The number of elements in the range to reverse.</source>
          <target state="translated">Nombre d'éléments à inverser dans la plage.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)">
          <source>Reverses the order of the elements in the specified range of the immutable list.</source>
          <target state="translated">Inverse l’ordre des éléments dans la plage spécifiée de la liste immuable.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort">
          <source>Sorts the elements in the entire immutable list by using the default comparer.</source>
          <target state="translated">Trie les éléments dans l’intégralité de la liste immuable à l’aide du comparateur par défaut.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>).</source>
          <target state="translated">L’implémentation à utiliser lors de la comparaison d’éléments, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour utiliser le comparateur par défaut (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Collections.Generic.IComparer{`0})">
          <source>Sorts the elements in the entire immutable list by using the specified comparer.</source>
          <target state="translated">Trie les éléments dans l’intégralité de la liste immuable à l’aide du comparateur spécifié.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Comparison{`0})">
          <source>The object to use when comparing elements.</source>
          <target state="translated">Objet à utiliser lors de la comparaison d’éléments.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Comparison{`0})">
          <source>Sorts the elements in the entire immutable list by using the specified comparison object.</source>
          <target state="translated">Trie les éléments dans l’intégralité de la liste immuable à l’aide de l’objet de comparaison spécifié.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based starting index of the range to sort.</source>
          <target state="translated">Index de début de base zéro de la plage à trier.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The length of the range to sort.</source>
          <target state="translated">Longueur de la plage à trier.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>).</source>
          <target state="translated">L’implémentation à utiliser lors de la comparaison d’éléments, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour utiliser le comparateur par défaut (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>Sorts the elements in a range of elements in the immutable list  by using the specified comparer.</source>
          <target state="translated">Trie les éléments dans une plage d’éléments de la liste immuable à l’aide du comparateur spécifié.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value indicating whether this instance is read-only.</source>
          <target state="translated">Obtient une valeur indiquant si cette instance est en lecture seule.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Always <bpt id="p1">&lt;c&gt;</bpt>false<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Toujours <bpt id="p1">&lt;c&gt;</bpt>false<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein de la collection.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Énumérateur permettant d'effectuer une itération au sein de la collection.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the list.</source>
          <target state="translated">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir de la liste.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Ce tableau doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Index de base zéro dans un <bpt id="p1">&lt;c&gt;</bpt>tableau<ept id="p1">&lt;/c&gt;</ept> auquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the list to an array, starting at a particular array index.</source>
          <target state="translated">Copie les éléments de la liste dans un tableau, en commençant à un index de tableau particulier.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtient une valeur indiquant si l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> est synchronisé (thread-safe).</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#IsSynchronized">
          <source>true if access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, false.</source>
          <target state="translated">True si l'accès au <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> est synchronisé (thread-safe) ; sinon, False.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Objet qui peut être utilisé pour synchroniser l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein de la collection.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Énumérateur permettant d'effectuer une itération au sein de la collection.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>The object to add to the list.</source>
          <target state="translated">Objet à ajouter à la liste.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>Adds an item to the list.</source>
          <target state="translated">Ajoute un élément à la liste.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</source>
          <target state="translated">Position à laquelle le nouvel élément a été inséré, ou -1 pour indiquer que l’élément n’a pas été inséré dans la collection.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Clear">
          <source>Removes all items from the list.</source>
          <target state="translated">Supprime tous les éléments de la liste.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Clear">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Clear">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>The object to locate in the list.</source>
          <target state="translated">Objet à localiser dans la liste.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>Determines whether the list contains a specific value.</source>
          <target state="translated">Détermine si la liste contient une valeur spécifique.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> is found in the list; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l’<ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> se trouve dans la liste ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>The object to locate in the list.</source>
          <target state="translated">Objet à localiser dans la liste.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>Determines the index of a specific item in the list.</source>
          <target state="translated">Détermine l’index d’un élément spécifique de la liste.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>The index of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> if found in the list; otherwise, -1.</source>
          <target state="translated">Index de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> s'il figure dans la liste ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Index de base zéro auquel la <bpt id="p1">&lt;c&gt;</bpt>valeur<ept id="p1">&lt;/c&gt;</ept> doit être insérée.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The object to insert into the list.</source>
          <target state="translated">Objet à insérer dans la liste.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>Inserts an item to the list at the specified index.</source>
          <target state="translated">Insère un élément dans la liste à l’index spécifié.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Obtient une valeur indiquant si <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> est de taille fixe.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsFixedSize">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size; otherwise, false.</source>
          <target state="translated">True si <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> est de taille fixe ; sinon False.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtient une valeur indiquant si <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> est en lecture seule.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsReadOnly">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only; otherwise, false.</source>
          <target state="translated">True si <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> est en lecture seule ; sinon, False.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Item(System.Int32)">
          <source>The index.</source>
          <target state="translated">Index.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Item(System.Int32)">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> at the specified index.</source>
          <target state="translated">Obtient ou définit le <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> à l'index spécifié.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>The object to remove from the list.</source>
          <target state="translated">Objet à supprimer de la liste.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>Removes the first occurrence of a specific object from the list.</source>
          <target state="translated">Supprime la première occurrence d’un objet spécifique de la liste.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable">
          <source>Creates an immutable list based on the contents of this instance.</source>
          <target state="translated">Crée une liste immuable en fonction du contenu de cette instance.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable">
          <source>An immutable list.</source>
          <target state="translated">Liste immuable.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable">
          <source>This method is an O(n) operation and approaches O(1) time as the number of actual mutations to the set since the last call to this method approaches 0.</source>
          <target state="translated">Cette méthode est une opération o (n) et est proche d’o (1) fois en tant que le nombre de l’application en mode réel au jeu depuis le dernier appel à cette méthode d’approches 0.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions to check against the elements.</source>
          <target state="translated">Délégué qui définit les conditions à vérifier par rapport aux éléments.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source>Determines whether every element in the immutable list matches the conditions defined by the specified predicate.</source>
          <target state="translated">Détermine si chaque élément de la liste immuable correspond aux conditions définies par le prédicat spécifié.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if every element in the immutable list matches the conditions defined by the specified predicate; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si chaque élément de la liste immuable correspond aux conditions définies par le prédicat spécifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source>If the list has no elements, the return value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Si la liste ne comporte pas d'éléments, la valeur de retour est <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>