<Type Name="XmlSchemaValidator" FullName="System.Xml.Schema.XmlSchemaValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dfd5b1e880b5497520109f2817246a6601619512" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51936091" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaValidator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaValidator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaValidator sealed" />
  <TypeSignature Language="F#" Value="type XmlSchemaValidator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un moteur de validation de schéma en langage XSD (XML Schema Definition). La classe <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  -   N’utilisez pas de schémas à partir de sources inconnues ou non approuvés ou des emplacements. Cela compromettra la sécurité de votre code.  
> -   Schémas XML (y compris les schémas inline) sont par nature vulnérables aux attaques refus de service ; ne les acceptez pas dans les scénarios non fiables.  
> -   Exceptions et messages d’erreur de validation de schéma peuvent exposer des informations sensibles sur le modèle de contenu ou les chemins d’accès de l’URI pour le fichier de schéma. Veillez à ne pas exposer ces informations aux appelants non approuvés.  
  
 La classe <xref:System.Xml.Schema.XmlSchemaValidator> fournit un mécanisme efficace et performant de validation des données XML par rapport aux schémas XML selon le modèle push. Par exemple, la classe <xref:System.Xml.Schema.XmlSchemaValidator> permet de valider un jeu d'informations XML sur place sans devoir le sérialiser dans un document XML et réanalyser ensuite le document à l'aide d'un lecteur XML de validation. Le <xref:System.Xml.Schema.XmlSchemaValidator> classe peut également être utilisée pour construire des moteurs de validation sur des sources de données XML personnalisées ou un moyen de générer un writer XML de validation.  
  
 Pour plus d’informations sur la <xref:System.Xml.Schema.XmlSchemaValidator> de classe, consultez le [XmlSchemaValidator Validation selon le modèle Push](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md) rubrique.  
  
> [!IMPORTANT]
>  Le <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> et <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> indicateurs de validation d’une <xref:System.Xml.Schema.XmlSchemaValidator> objet ne sont pas ensemble soit par défaut. En outre, le <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> propriété d’un <xref:System.Xml.Schema.XmlSchemaValidator> objet est `null` par défaut. Par conséquent, les schémas externes référencées dans incluent, imports ou redefine éléments ne sont pas résolus par défaut.  
  
   
  
## Examples  
 L’exemple suivant valide le `contosoBooks.xml` de fichiers par rapport à la `contosoBooks.xsd` schéma. Cet exemple utilise la classe <xref:System.Xml.Serialization.XmlSerializer> pour désérialiser le fichier `contosoBooks.xml` et transmettre la valeur des nœuds aux méthodes de la classe <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 L'exemple prend le fichier `contosoBooks.xml` comme entrée.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 L'exemple prend également le fichier `contosoBooks.xsd` comme entrée.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="https://msdn.microsoft.com/library/911d4460-dd91-4958-85b2-2ca3299f9ec6">Validation XmlSchemaValidator de type push</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaValidator (System.Xml.XmlNameTable nameTable, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.IXmlNamespaceResolver namespaceResolver, System.Xml.Schema.XmlSchemaValidationFlags validationFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable, class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.IXmlNamespaceResolver namespaceResolver, valuetype System.Xml.Schema.XmlSchemaValidationFlags validationFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable, schemas As XmlSchemaSet, namespaceResolver As IXmlNamespaceResolver, validationFlags As XmlSchemaValidationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaValidator(System::Xml::XmlNameTable ^ nameTable, System::Xml::Schema::XmlSchemaSet ^ schemas, System::Xml::IXmlNamespaceResolver ^ namespaceResolver, System::Xml::Schema::XmlSchemaValidationFlags validationFlags);" />
      <MemberSignature Language="F#" Value="new System.Xml.Schema.XmlSchemaValidator : System.Xml.XmlNameTable * System.Xml.Schema.XmlSchemaSet * System.Xml.IXmlNamespaceResolver * System.Xml.Schema.XmlSchemaValidationFlags -&gt; System.Xml.Schema.XmlSchemaValidator" Usage="new System.Xml.Schema.XmlSchemaValidator (nameTable, schemas, namespaceResolver, validationFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
        <Parameter Name="validationFlags" Type="System.Xml.Schema.XmlSchemaValidationFlags" />
      </Parameters>
      <Docs>
        <param name="nameTable">Objet <see cref="T:System.Xml.XmlNameTable" /> contenant les noms d'éléments et d'attributs sous la forme de chaînes atomisées.</param>
        <param name="schemas">Objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant les schémas XSD (XML Schema Definition) utilisés pour la validation.</param>
        <param name="namespaceResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant la résolution des espaces de noms trouvés pendant la validation.</param>
        <param name="validationFlags">Valeur <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /> spécifiant les options de validation du schéma.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les remarques suivantes sont importantes à prendre en compte lorsque vous utilisez le <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> constructeur.  
  
-   Le contenu de la <xref:System.Xml.Schema.XmlSchemaSet> paramètre sont copiées dans une liste interne <xref:System.Xml.Schema.XmlSchemaSet> objet lorsque le <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> ou le <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> définir des options de validation. Par conséquent, les modifications à l’entrée <xref:System.Xml.Schema.XmlSchemaSet> objet lors de la validation n’affectent pas le résultat de validation.  
  
-   Si le <xref:System.Xml.Schema.XmlSchemaSet> paramètre spécifié n’est pas compilé, sa <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> méthode est appelée.  
  
-   Le <xref:System.Xml.IXmlNamespaceResolver> paramètre est particulièrement important pour la validation `xs:QName` types. Le <xref:System.Xml.Schema.XmlSchemaValidator> classe ne copie pas les espaces de noms dans la portée de la <xref:System.Xml.IXmlNamespaceResolver> de l’objet, mais elle au lieu de cela contient une référence à celui-ci. Ainsi, les nouveaux espaces de noms à ajouter à la <xref:System.Xml.IXmlNamespaceResolver> objet pendant le processus de validation.  
  
> [!IMPORTANT]
>  Le <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> et <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> indicateurs de validation d’une <xref:System.Xml.Schema.XmlSchemaValidator> objet ne sont pas ensemble soit par défaut. En outre, le <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> propriété d’un <xref:System.Xml.Schema.XmlSchemaValidator> objet est `null` par défaut. Par conséquent, les schémas externes référencées dans incluent, imports ou redefine éléments ne sont pas résolus par défaut.  
  
   
  
## Examples  
 Pour obtenir un exemple de la <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> constructeur, consultez la <xref:System.Xml.Schema.XmlSchemaValidator> rubrique de référence de classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Un ou plusieurs des paramètres spécifiés sont <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaException">Une erreur s'est produite lors de la compilation des schémas dans le paramètre <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaSet" />
        <altmember cref="T:System.Xml.IXmlNamespaceResolver" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="AddSchema">
      <MemberSignature Language="C#" Value="public void AddSchema (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSchema(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSchema (schema As XmlSchema)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSchema(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.AddSchema : System.Xml.Schema.XmlSchema -&gt; unit" Usage="xmlSchemaValidator.AddSchema schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à ajouter au jeu de schémas utilisé pour la validation.</param>
        <summary>Ajoute un schéma en langage XSD (XML Schema Definition) à l’ensemble de schémas utilisé pour la validation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les remarques suivantes sont importantes à prendre en compte lorsque vous utilisez le <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> (méthode).  
  
-   Le <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> méthode peut être utilisée pour simuler l’effet de la localisation d’un schéma XML d’inline dans le document XML en cours de validation.  
  
-   L'espace de noms cible du paramètre <xref:System.Xml.Schema.XmlSchema> ne peut pas correspondre à celui d'un élément ou attribut déjà rencontré par l'objet <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
-   Si le <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> option de validation n’est pas définie, la <xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A> méthode ne fait rien.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <see cref="T:System.Xml.Schema.XmlSchema" /> spécifié est <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">L'espace de noms cible du paramètre <see cref="T:System.Xml.Schema.XmlSchema" /> correspond à celui de tout élément ou attribut déjà trouvé par l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaException">Le paramètre <see cref="T:System.Xml.Schema.XmlSchema" /> n'est pas valide.</exception>
        <altmember cref="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
        <altmember cref="T:System.Xml.Schema.XmlSchema" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="EndValidation">
      <MemberSignature Language="C#" Value="public void EndValidation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndValidation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndValidation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndValidation();" />
      <MemberSignature Language="F#" Value="member this.EndValidation : unit -&gt; unit" Usage="xmlSchemaValidator.EndValidation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Termine la validation et vérifie les contraintes d’identité pour l’ensemble du document XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A> méthode termine la validation et vérifie les contraintes d’identité pour le document XML entier si le <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> option de validation est définie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Une erreur de contrainte d'identité a été trouvée dans le document XML.</exception>
        <altmember cref="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetExpectedAttributes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpectedAttributes () As XmlSchemaAttribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Xml::Schema::XmlSchemaAttribute ^&gt; ^ GetExpectedAttributes();" />
      <MemberSignature Language="F#" Value="member this.GetExpectedAttributes : unit -&gt; System.Xml.Schema.XmlSchemaAttribute[]" Usage="xmlSchemaValidator.GetExpectedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaAttribute[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne les attributs attendus pour le contexte d'élément actuel.</summary>
        <returns>Un tableau d'objets <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ou un tableau vide s'il n'y a pas d'attributs attendus.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les remarques suivantes sont importantes à prendre en compte lorsque vous utilisez le <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> (méthode).  
  
-   Si le <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> méthode est appelée immédiatement après le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> (méthode), tous les attributs qui peuvent apparaître dans le document XML sont retournés.  
  
-   Si le <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A> méthode est appelée après un ou plusieurs appels à la <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> (méthode), les attributs qui n’ont pas encore été validés pour l’élément actuel sont retournées.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpectedParticles">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpectedParticles () As XmlSchemaParticle()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Xml::Schema::XmlSchemaParticle ^&gt; ^ GetExpectedParticles();" />
      <MemberSignature Language="F#" Value="member this.GetExpectedParticles : unit -&gt; System.Xml.Schema.XmlSchemaParticle[]" Usage="xmlSchemaValidator.GetExpectedParticles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaParticle[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne les particules attendues dans le contexte d'élément actuel.</summary>
        <returns>Un tableau d'objets <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> ou un tableau vide s'il n'y a pas de particules attendues.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les particules valides qui peuvent être retournées par la méthode <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> sont des instances des classes <xref:System.Xml.Schema.XmlSchemaElement> et <xref:System.Xml.Schema.XmlSchemaAny>.  
  
 Lorsque le constructeur du modèle de contenu est `xs:sequence`, seule la particule suivante dans la séquence est retournée. Si le constructeur du modèle de contenu est `xs:all` ou `xs:choice`, toutes les particules valides pouvant suivre dans le contexte de l'élément actuel sont retournées.  
  
 Par exemple, dans le schéma de langage XSD (XML Schema Definition) et le document XML qui suivent, après la validation de l'élément `book`, l'élément `book` est le contexte d'élément actuel. La méthode <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> retourne un tableau contenant un seul objet <xref:System.Xml.Schema.XmlSchemaElement> représentant l'élément `title`. Lorsque le contexte de validation est l'élément `title`, la méthode <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> retourne un tableau vide. Si la méthode <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> est appelée après que l'élément `title` a été validé mais avant que l'élément `description` soit validé, elle retourne un tableau contenant un seul objet <xref:System.Xml.Schema.XmlSchemaElement> représentant l'élément `description`. Si la méthode <xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A> est appelée après que l'élément `description` a été validé, elle retourne un tableau contenant un seul objet <xref:System.Xml.Schema.XmlSchemaAny> représentant le caractère générique.  
  
```vb  
Dim reader As XmlReader =  XmlReader.Create("input.xml")   
  
Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()   
schemaSet.Add(Nothing, "schema.xsd")  
Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)   
  
Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)  
validator.Initialize()  
  
validator.ValidateElement("book", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
  
validator.ValidateElement("title", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
validator.ValidateEndElement(Nothing)  
  
For Each element As XmlSchemaElement In validator.GetExpectedParticles()  
    Console.WriteLine(element.Name)  
Next  
  
validator.ValidateElement("description", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateEndElement(Nothing)  
  
For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()  
    Console.WriteLine(particle.GetType())  
Next  
  
validator.ValidateElement("namespace", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateEndElement(Nothing)  
  
validator.ValidateEndElement(Nothing)  
```  
  
```csharp  
XmlReader reader = XmlReader.Create("input.xml");  
  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "schema.xsd");  
XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);  
  
XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  
validator.Initialize();  
  
validator.ValidateElement("book", "", null);  
  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
  
validator.ValidateElement("title", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
validator.ValidateEndElement(null);  
  
foreach (XmlSchemaElement element in validator.GetExpectedParticles())  
{  
    Console.WriteLine(element.Name);  
}  
  
validator.ValidateElement("description", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateEndElement(null);  
  
foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())  
{  
    Console.WriteLine(particle.GetType());  
}  
  
validator.ValidateElement("namespace", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateEndElement(null);  
  
validator.ValidateEndElement(null);  
```  
  
 L'exemple prend le code XML suivant comme entrée.  
  
 `<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">`  
  
 `<xs:element name="book">`  
  
 `<xs:complexType>`  
  
 `<xs:sequence>`  
  
 `<xs:element name="title" type="xs:string" />`  
  
 `<xs:element name="description" type="xs:string" />`  
  
 `<xs:any processContents ="lax"/>`  
  
 `</xs:sequence>`  
  
 `</xs:complexType>`  
  
 `</xs:element>`  
  
 `</xs:schema>`  
  
 L'exemple prend le schéma XSD suivant comme entrée.  
  
 `<book>`  
  
 `<title>My Book</title>`  
  
 `<description>My Book's Description</description>`  
  
 `<namespace>System.Xml.Schema</namespace>`  
  
 `</book>`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaParticle" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaElement" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAny" />
      </Docs>
    </Member>
    <Member MemberName="GetUnspecifiedDefaultAttributes">
      <MemberSignature Language="C#" Value="public void GetUnspecifiedDefaultAttributes (System.Collections.ArrayList defaultAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetUnspecifiedDefaultAttributes(class System.Collections.ArrayList defaultAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetUnspecifiedDefaultAttributes (defaultAttributes As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetUnspecifiedDefaultAttributes(System::Collections::ArrayList ^ defaultAttributes);" />
      <MemberSignature Language="F#" Value="member this.GetUnspecifiedDefaultAttributes : System.Collections.ArrayList -&gt; unit" Usage="xmlSchemaValidator.GetUnspecifiedDefaultAttributes defaultAttributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultAttributes" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="defaultAttributes">
          <see cref="T:System.Collections.ArrayList" /> à remplir pas avec les objets <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> pour tous attributs non trouvés lors de la validation dans le contexte d'élément.</param>
        <summary>Valide les contraintes d'identité sur les attributs par défaut et remplit la <see cref="T:System.Collections.ArrayList" /> spécifiée avec les objets <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> pour tous les attributs avec les valeurs par défaut qui n'ont pas été déjà validés à l'aide de la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> dans le contexte d'élément.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> méthode doit être appelée après avoir vérifié tous les attributs de l’élément actuel avec le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> (méthode). La méthode <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> doit être utilisée pour déterminer les attributs par défaut à insérer dans le document XML en cours de validation.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ArrayList" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise l'état de l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize();" />
      <MemberSignature Language="F#" Value="member this.Initialize : unit -&gt; unit" Usage="xmlSchemaValidator.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialise l'état de l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> méthode est uniquement valide si elle est appelée immédiatement après la construction d’un <xref:System.Xml.Schema.XmlSchemaValidator> objet ou après un appel à <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>.  
  
   
  
## Examples  
 L’exemple suivant valide le `contosoBooks.xml` de fichiers par rapport à la `contosoBooks.xsd` schéma. Cet exemple utilise la classe <xref:System.Xml.Serialization.XmlSerializer> pour désérialiser le fichier `contosoBooks.xml` et transmettre la valeur des nœuds aux méthodes de la classe <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 L'exemple prend le fichier `contosoBooks.xml` comme entrée.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 L'exemple prend également le fichier `contosoBooks.xsd` comme entrée.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'appel de la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> est immédiatement valide après la construction d'un objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> ou après un appel à <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> uniquement.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Xml.Schema.XmlSchemaObject partialValidationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(class System.Xml.Schema.XmlSchemaObject partialValidationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (partialValidationType As XmlSchemaObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::Xml::Schema::XmlSchemaObject ^ partialValidationType);" />
      <MemberSignature Language="F#" Value="member this.Initialize : System.Xml.Schema.XmlSchemaObject -&gt; unit" Usage="xmlSchemaValidator.Initialize partialValidationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialValidationType" Type="System.Xml.Schema.XmlSchemaObject" />
      </Parameters>
      <Docs>
        <param name="partialValidationType">Objet <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ou  <see cref="T:System.Xml.Schema.XmlSchemaType" /> permettant d'initialiser le contexte de validation de l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> pour la validation partielle.</param>
        <summary>Initialise l'état de l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> à l'aide du <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié pour la validation partielle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>, qui prend un objet <xref:System.Xml.Schema.XmlSchemaObject> comme paramètre, initialise un objet <xref:System.Xml.Schema.XmlSchemaValidator> à son état de départ pour une validation partielle.  
  
   
  
## Examples  
 Dans l'exemple suivant, un objet <xref:System.Xml.Schema.XmlSchemaObject> est initialisé en vue d'une validation partielle à l'aide de la méthode <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>. L'élément de schéma `orderNumber` est transmis lorsque l'objet <xref:System.Xml.XmlQualifiedName> sélectionne l'élément de schéma dans la collection <xref:System.Xml.Schema.XmlSchemaObjectTable> retournée par la propriété <xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A> de l'objet <xref:System.Xml.Schema.XmlSchemaSet>. L'objet <xref:System.Xml.Schema.XmlSchemaValidator> valide ensuite cet élément spécifique.  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add(Nothing, "schema.xsd")  
schemaSet.Compile()  
Dim nameTable As NameTable = New NameTable()  
Dim manager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
  
Dim validator As XmlSchemaValidator = New XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None)  
validator.Initialize(schemaSet.GlobalElements.Item(New XmlQualifiedName("orderNumber")))  
  
validator.ValidateElement("orderNumber", "", Nothing)  
validator.GetUnspecifiedDefaultAttributes(New ArrayList())  
validator.ValidateEndOfAttributes(Nothing)  
validator.ValidateText("123")  
validator.ValidateEndElement(Nothing)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "schema.xsd");  
schemaSet.Compile();  
NameTable nameTable = new NameTable();  
XmlNamespaceManager manager = new XmlNamespaceManager(nameTable);  
  
XmlSchemaValidator validator = new XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  
validator.Initialize(schemaSet.GlobalElements[new XmlQualifiedName("orderNumber")]);  
  
validator.ValidateElement("orderNumber", "", null);  
validator.GetUnspecifiedDefaultAttributes(new ArrayList());  
validator.ValidateEndOfAttributes(null);  
validator.ValidateText("123");  
validator.ValidateEndElement(null);  
```  
  
 L'exemple prend le schéma XML suivant comme entrée.  
  
 `<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">`  
  
 `<xs:element name="orderNumber" type="xs:int" />`  
  
 `</xs:schema>`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'appel de la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> est immédiatement valide après la construction d'un objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> ou après un appel à <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> uniquement.</exception>
        <exception cref="T:System.ArgumentException">Le paramètre <see cref="T:System.Xml.Schema.XmlSchemaObject" /> n'est pas un objet <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ou <see cref="T:System.Xml.Schema.XmlSchemaType" />.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre <see cref="T:System.Xml.Schema.XmlSchemaObject" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaObject" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaElement" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaAttribute" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaType" />
      </Docs>
    </Member>
    <Member MemberName="LineInfoProvider">
      <MemberSignature Language="C#" Value="public System.Xml.IXmlLineInfo LineInfoProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.IXmlLineInfo LineInfoProvider" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property LineInfoProvider As IXmlLineInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::IXmlLineInfo ^ LineInfoProvider { System::Xml::IXmlLineInfo ^ get(); void set(System::Xml::IXmlLineInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LineInfoProvider : System.Xml.IXmlLineInfo with get, set" Usage="System.Xml.Schema.XmlSchemaValidator.LineInfoProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.IXmlLineInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les informations de numéro de ligne pour le nœud XML en cours de validation.</summary>
        <value>Objet <see cref="T:System.Xml.IXmlLineInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   Informations de ligne sont signalées par les <xref:System.Xml.Schema.XmlSchemaValidationException> levée pendant le processus de validation.  
  
-   La valeur par défaut <xref:System.Xml.IXmlLineInfo> objet retourné par la <xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A> propriété retourne 0 pour le <xref:System.Xml.IXmlLineInfo.LineNumber%2A> et <xref:System.Xml.IXmlLineInfo.LinePosition%2A> propriétés.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.IXmlLineInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <Member MemberName="SkipToEndElement">
      <MemberSignature Language="C#" Value="public void SkipToEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToEndElement (schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.SkipToEndElement : System.Xml.Schema.XmlSchemaInfo -&gt; unit" Usage="xmlSchemaValidator.SkipToEndElement schemaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies si le contenu d'élément actuel est ignoré avec succès. Ce paramètre peut être <see langword="null" />.</param>
        <summary>Ignore la validation du contenu de l'élément actuel et prépare l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> à la validation du contenu dans le contexte de l'élément parent.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les remarques suivantes sont importantes à prendre en compte lorsque vous utilisez le <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A> (méthode).  
  
-   Le <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A> méthode ignore la validation du contenu d’élément actuel et prépare le <xref:System.Xml.Schema.XmlSchemaValidator> pour valider le contenu dans le contexte de l’élément parent de l’objet ; elle est équivalente à ignorer la validation pour tous les enfants de l’élément actuel, puis appel de la <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> (méthode).  
  
-   Si le contenu de l’élément actuel est ignoré avec succès, le <xref:System.Xml.Schema.XmlSchemaInfo> (si spécifié) de l’objet <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> propriété est définie sur <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>.  
  
> [!NOTE]
>  Aucune erreur de validation n’est signalés sur le contenu ignoré.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La méthode <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> n'a pas été appelée dans la séquence appropriée. Par exemple, appeler <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceUri : Uri with get, set" Usage="System.Xml.Schema.XmlSchemaValidator.SourceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'URI source pour le nœud XML en cours de validation.</summary>
        <value>Un objet <see cref="T:System.Uri" /> représentant l'URI source pour le nœud XML en cours de validation ; la valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   La source URI est signalé par les <xref:System.Xml.Schema.XmlSchemaValidationException> levée pendant le processus de validation.  
  
-   Si le <xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A> propriété n’est pas définie, le nom de fichier pour le document XML est <xref:System.String.Empty> dans les messages d’erreur de validation.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Valide l'attribut dans le contexte d'élément actuel.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateAttribute">
      <MemberSignature Language="C#" Value="public object ValidateAttribute (string localName, string namespaceUri, string attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateAttribute(string localName, string namespaceUri, string attributeValue, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateAttribute (localName As String, namespaceUri As String, attributeValue As String, schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateAttribute(System::String ^ localName, System::String ^ namespaceUri, System::String ^ attributeValue, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateAttribute : string * string * string * System.Xml.Schema.XmlSchemaInfo -&gt; obj" Usage="xmlSchemaValidator.ValidateAttribute (localName, namespaceUri, attributeValue, schemaInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName">Nom local de l'attribut à valider.</param>
        <param name="namespaceUri">URI de l'espace de noms de l'attribut à valider.</param>
        <param name="attributeValue">Valeur de l'attribut à valider.</param>
        <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie de l'attribut. Ce paramètre peut être <see langword="null" />.</param>
        <summary>Valide le nom de l'attribut, l'URI de l'espace de noms et la valeur dans le contexte d'élément actuel.</summary>
        <returns>Valeur de l'attribut validé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les remarques suivantes sont importantes à prendre en compte lorsque vous utilisez le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> (méthode).  
  
-   Le <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> méthode doit être appelée après avoir vérifié tous les attributs de l’élément actuel avec le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> (méthode).  
  
-   Si un <xref:System.Xml.Schema.XmlSchemaAttribute> objet a été passé à la <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> (méthode), le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> méthode valide l’attribut par rapport à la <xref:System.Xml.Schema.XmlSchemaAttribute> objet.  
  
-   Si l’attribut est validé avec succès dans le contexte d’élément actuel, le <xref:System.Xml.Schema.XmlSchemaInfo> (si spécifié) de l’objet <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, et <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> propriétés sont définies avec les résultats de la validation.  
  
   
  
## Examples  
 L’exemple suivant valide le `contosoBooks.xml` de fichiers par rapport à la `contosoBooks.xsd` schéma. Cet exemple utilise la classe <xref:System.Xml.Serialization.XmlSerializer> pour désérialiser le fichier `contosoBooks.xml` et transmettre la valeur des nœuds aux méthodes de la classe <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 L'exemple prend le fichier `contosoBooks.xml` comme entrée.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 L'exemple prend également le fichier `contosoBooks.xsd` comme entrée.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">L'attribut n'est pas valide dans le contexte d'élément actuel.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> n'a pas été appelée dans la séquence appropriée. Par exemple, appeler <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
        <exception cref="T:System.ArgumentNullException">Un ou plusieurs des paramètres spécifiés sont <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateAttribute">
      <MemberSignature Language="C#" Value="public object ValidateAttribute (string localName, string namespaceUri, System.Xml.Schema.XmlValueGetter attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateAttribute(string localName, string namespaceUri, class System.Xml.Schema.XmlValueGetter attributeValue, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateAttribute (localName As String, namespaceUri As String, attributeValue As XmlValueGetter, schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateAttribute(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlValueGetter ^ attributeValue, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateAttribute : string * string * System.Xml.Schema.XmlValueGetter * System.Xml.Schema.XmlSchemaInfo -&gt; obj" Usage="xmlSchemaValidator.ValidateAttribute (localName, namespaceUri, attributeValue, schemaInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.Xml.Schema.XmlValueGetter" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName">Nom local de l'attribut à valider.</param>
        <param name="namespaceUri">URI de l'espace de noms de l'attribut à valider.</param>
        <param name="attributeValue">
          <see cref="T:System.Xml.Schema.XmlValueGetter" />
          <see langword="delegate" /> permettant de passer la valeur de l’attribut en tant que type CLR compatible avec le type de langage XSD (XML Schema Definition) de l’attribut.</param>
        <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie de l'attribut. Ce paramètre peut être <see langword="null" />.</param>
        <summary>Valide le nom de l'attribut, l'URI de l'espace de noms et la valeur dans le contexte d'élément actuel.</summary>
        <returns>Valeur de l'attribut validé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les remarques suivantes sont importantes à prendre en compte lorsque vous utilisez le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> (méthode).  
  
-   Le <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> méthode doit être appelée après avoir vérifié tous les attributs de l’élément actuel avec le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> (méthode).  
  
-   Si un <xref:System.Xml.Schema.XmlSchemaAttribute> objet a été passé à la <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> (méthode), le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> méthode valide l’attribut par rapport à la <xref:System.Xml.Schema.XmlSchemaAttribute> objet.  
  
-   Si l’attribut est validé avec succès dans le contexte d’élément actuel, le <xref:System.Xml.Schema.XmlSchemaInfo> (si spécifié) de l’objet <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, et <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> propriétés sont définies avec les résultats de la validation.  
  
   
  
## Examples  
 L’exemple suivant valide le `contosoBooks.xml` de fichiers par rapport à la `contosoBooks.xsd` schéma. Cet exemple utilise la classe <xref:System.Xml.Serialization.XmlSerializer> pour désérialiser le fichier `contosoBooks.xml` et transmettre la valeur des nœuds aux méthodes de la classe <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 L'exemple prend le fichier `contosoBooks.xml` comme entrée.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 L'exemple prend également le fichier `contosoBooks.xsd` comme entrée.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">L'attribut n'est pas valide dans le contexte d'élément actuel.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> n'a pas été appelée dans la séquence appropriée. Par exemple, appeler <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
        <exception cref="T:System.ArgumentNullException">Un ou plusieurs des paramètres spécifiés sont <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Valide l'élément dans le contexte actuel.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateElement">
      <MemberSignature Language="C#" Value="public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateElement(string localName, string namespaceUri, class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateElement (localName As String, namespaceUri As String, schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateElement(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateElement : string * string * System.Xml.Schema.XmlSchemaInfo -&gt; unit" Usage="xmlSchemaValidator.ValidateElement (localName, namespaceUri, schemaInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="localName">Nom local de l'élément à valider.</param>
        <param name="namespaceUri">URI de l'espace de noms de l'élément à valider.</param>
        <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie du nom de l'élément. Ce paramètre peut être <see langword="null" />.</param>
        <summary>Valide l'élément dans le contexte actuel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les remarques suivantes sont importantes à prendre en compte lorsque vous utilisez le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> (méthode).  
  
-   Si le nom d’élément est validé avec succès dans le contexte actuel, le <xref:System.Xml.Schema.XmlSchemaInfo> (si spécifié) de l’objet <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, et <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> propriétés sont définies avec les résultats de la validation.  
  
-   Si le nom d’élément ou l’un de ses attributs ne sont pas valide du contexte actuel, le <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> propriété est définie sur <xref:System.Xml.Schema.XmlSchemaValidity.Invalid>; sinon la <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> propriété est définie sur <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>.  
  
   
  
## Examples  
 L’exemple suivant valide le `contosoBooks.xml` de fichiers par rapport à la `contosoBooks.xsd` schéma. Cet exemple utilise la classe <xref:System.Xml.Serialization.XmlSerializer> pour désérialiser le fichier `contosoBooks.xml` et transmettre la valeur des nœuds aux méthodes de la classe <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 L'exemple prend le fichier `contosoBooks.xml` comme entrée.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 L'exemple prend également le fichier `contosoBooks.xsd` comme entrée.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Le nom de l'élément n'est pas valide dans le contexte actuel.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
      </Docs>
    </Member>
    <Member MemberName="ValidateElement">
      <MemberSignature Language="C#" Value="public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateElement(string localName, string namespaceUri, class System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateElement (localName As String, namespaceUri As String, schemaInfo As XmlSchemaInfo, xsiType As String, xsiNil As String, xsiSchemaLocation As String, xsiNoNamespaceSchemaLocation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateElement(System::String ^ localName, System::String ^ namespaceUri, System::Xml::Schema::XmlSchemaInfo ^ schemaInfo, System::String ^ xsiType, System::String ^ xsiNil, System::String ^ xsiSchemaLocation, System::String ^ xsiNoNamespaceSchemaLocation);" />
      <MemberSignature Language="F#" Value="member this.ValidateElement : string * string * System.Xml.Schema.XmlSchemaInfo * string * string * string * string -&gt; unit" Usage="xmlSchemaValidator.ValidateElement (localName, namespaceUri, schemaInfo, xsiType, xsiNil, xsiSchemaLocation, xsiNoNamespaceSchemaLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
        <Parameter Name="xsiType" Type="System.String" />
        <Parameter Name="xsiNil" Type="System.String" />
        <Parameter Name="xsiSchemaLocation" Type="System.String" />
        <Parameter Name="xsiNoNamespaceSchemaLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Nom local de l'élément à valider.</param>
        <param name="namespaceUri">URI de l'espace de noms de l'élément à valider.</param>
        <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie du nom de l'élément. Ce paramètre peut être <see langword="null" />.</param>
        <param name="xsiType">Valeur de l’attribut <c>xsi:Type</c> de l’élément. Ce paramètre peut être <see langword="null" />.</param>
        <param name="xsiNil">Valeur de l’attribut <c>xsi:Nil</c> de l’élément. Ce paramètre peut être <see langword="null" />.</param>
        <param name="xsiSchemaLocation">Valeur de l’attribut <c>xsi:SchemaLocation</c> de l’élément. Ce paramètre peut être <see langword="null" />.</param>
        <param name="xsiNoNamespaceSchemaLocation">Valeur de l’attribut <c>xsi:NoNamespaceSchemaLocation</c> de l’élément. Ce paramètre peut être <see langword="null" />.</param>
        <summary>Valide l’élément dans le contexte actuel dont les valeurs d’attribut <c>xsi:Type</c>, <c>xsi:Nil</c>, <c>xsi:SchemaLocation</c> et <c>xsi:NoNamespaceSchemaLocation</c> sont spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les remarques suivantes sont importantes à prendre en compte lorsque vous utilisez le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A> (méthode).  
  
-   Si le nom d’élément est validé avec succès dans le contexte actuel, le <xref:System.Xml.Schema.XmlSchemaInfo> (si spécifié) de l’objet <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, et <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> propriétés sont définies avec les résultats de la validation.  
  
-   Si le nom d’élément ou l’un de ses attributs ne sont pas valide dans le contexte actuel, le <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> propriété est définie sur <xref:System.Xml.Schema.XmlSchemaValidity.Invalid>; sinon la <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> propriété est définie sur <xref:System.Xml.Schema.XmlSchemaValidity.NotKnown>.  
  
-   Si le <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> valeur n’a pas été transmise en tant que paramètre à la <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> constructeur, `xsi:SchemaLocation` et `xsi:NoNamespaceSchemaLocation` les valeurs d’attribut sont ignorées.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Le nom de l'élément n'est pas valide dans le contexte actuel.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEndElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Vérifie si le texte de l'élément est valide d'après son type de données pour les éléments dont le contenu est simple et vérifie si le contenu de l'élément actuel est complet pour les éléments dont le contenu est complexe.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEndElement">
      <MemberSignature Language="C#" Value="public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateEndElement (schemaInfo As XmlSchemaInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateEndElement : System.Xml.Schema.XmlSchemaInfo -&gt; obj" Usage="xmlSchemaValidator.ValidateEndElement schemaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie de l'élément. Ce paramètre peut être <see langword="null" />.</param>
        <summary>Vérifie si le texte de l'élément est valide d'après son type de données pour les éléments dont le contenu est simple et vérifie si le contenu de l'élément actuel est complet pour les éléments dont le contenu est complexe.</summary>
        <returns>Valeur de texte typée analysée de l'élément si le contenu de celui-ci est simple.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les remarques suivantes sont importantes à prendre en compte lorsque vous utilisez le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> (méthode).  
  
-   Pour les éléments avec un contenu simple, la <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> méthode vérifie que le contenu de texte de l’élément est valide selon son type de données et retourne la valeur typée analysée. Le contenu de texte de l’élément est obtenu à partir des résultats d’appels précédents à <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>.  
  
-   Pour les éléments avec un contenu complexe, la <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> méthode vérifie si le contenu de l’élément actuel est complet.  
  
-   Si l’élément a une valeur par défaut, la valeur retournée à partir de la <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> méthode est la valeur par défaut pour l’élément.  
  
-   Si le <xref:System.Xml.Schema.XmlSchemaValidator> objet a été construit avec la <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> valeur en tant que paramètre, la <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> méthode vérifie les règles de la contrainte d’identité (le cas échéant) qui s’appliquent à l’élément.  
  
-   Si l’élément est validé avec succès dans le contexte actuel, le <xref:System.Xml.Schema.XmlSchemaInfo> (si spécifié) de l’objet <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, et <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> propriétés sont définies avec les résultats de la validation.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Le contenu de l'élément n'est pas valide.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> est appelée après l'appel de <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEndElement">
      <MemberSignature Language="C#" Value="public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateEndElement(class System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateEndElement (schemaInfo As XmlSchemaInfo, typedValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateEndElement(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo, System::Object ^ typedValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateEndElement : System.Xml.Schema.XmlSchemaInfo * obj -&gt; obj" Usage="xmlSchemaValidator.ValidateEndElement (schemaInfo, typedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
        <Parameter Name="typedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie du contenu de texte de l'élément. Ce paramètre peut être <see langword="null" />.</param>
        <param name="typedValue">Texte typé de l'élément.</param>
        <summary>Vérifie si le texte de l'élément spécifié est valide d'après son type de données.</summary>
        <returns>Contenu simple typé analysé de l'élément.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Si vous validez le `xs:key`, `xs:keyref`, ou `xs:unique` contraintes d’identité, n’utilisez pas le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> surcharge de méthode. Au lieu de cela, appelez le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> (méthode) et lui passer la valeur de l’élément. Appelez ensuite la <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> surcharge de méthode qui prend <xref:System.Xml.Schema.XmlSchemaInfo> en tant qu’argument, pour vérifier que le contenu de texte de l’élément est valide selon son type de données.  
  
 Les remarques suivantes sont importantes à prendre en compte lorsque vous utilisez le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> (méthode).  
  
-   Pour les éléments avec un contenu simple, la <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType> méthode vérifie que le contenu de texte de l’élément est valide selon son type de données et retourne la valeur typée analysée. Le contenu de texte de l’élément est obtenu à partir du contenu typé passé comme paramètre.  
  
-   Si les appels à la <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> méthode ont été apportées précédemment, un <xref:System.InvalidOperationException> est levée.  
  
-   Si l’élément a un contenu complexe un <xref:System.InvalidOperationException> est levée.  
  
-   Si le <xref:System.Xml.Schema.XmlSchemaValidator> objet a été construit avec la <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> valeur en tant que paramètre, la <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> méthode vérifie les règles de la contrainte d’identité (le cas échéant) qui s’appliquent à l’élément.  
  
-   Si l’élément est validé avec succès dans le contexte actuel, le <xref:System.Xml.Schema.XmlSchemaInfo> (si spécifié) de l’objet <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, et <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> propriétés sont définies avec les résultats de la validation.  
  
   
  
## Examples  
 L’exemple suivant valide le `contosoBooks.xml` de fichiers par rapport à la `contosoBooks.xsd` schéma. Cet exemple utilise la classe <xref:System.Xml.Serialization.XmlSerializer> pour désérialiser le fichier `contosoBooks.xml` et transmettre la valeur des nœuds aux méthodes de la classe <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 L'exemple prend le fichier `contosoBooks.xml` comme entrée.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 L'exemple prend également le fichier `contosoBooks.xsd` comme entrée.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Le contenu de texte de l'élément n'est pas valide.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> n'a pas été appelée dans la séquence correcte (par exemple, si la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> est appelée après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />), les appels à la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> ont déjà été faits ou l'élément a un contenu complexe.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre de contenu de texte typé ne peut pas être <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEndOfAttributes">
      <MemberSignature Language="C#" Value="public void ValidateEndOfAttributes (System.Xml.Schema.XmlSchemaInfo schemaInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEndOfAttributes(class System.Xml.Schema.XmlSchemaInfo schemaInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEndOfAttributes (schemaInfo As XmlSchemaInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEndOfAttributes(System::Xml::Schema::XmlSchemaInfo ^ schemaInfo);" />
      <MemberSignature Language="F#" Value="member this.ValidateEndOfAttributes : System.Xml.Schema.XmlSchemaInfo -&gt; unit" Usage="xmlSchemaValidator.ValidateEndOfAttributes schemaInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaInfo" Type="System.Xml.Schema.XmlSchemaInfo" />
      </Parameters>
      <Docs>
        <param name="schemaInfo">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la vérification réussie de la présence de tous les attributs requis dans le contexte d'élément. Ce paramètre peut être <see langword="null" />.</param>
        <summary>Vérifie si tous les attributs obligatoires dans le contexte de l'élément sont présents et prépare l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> à la validation du contenu enfant de l'élément.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les remarques suivantes sont importantes à prendre en compte lorsque vous utilisez le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> (méthode).  
  
-   Le <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A> méthode doit toujours être appelée avant <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A>.  
  
-   Le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A> méthode doit être appelée avant de procéder à la validation du contenu d’un élément.  
  
-   Si tous les attributs requis dans le contexte d’élément sont présents, le <xref:System.Xml.Schema.XmlSchemaInfo> (si spécifié) de l’objet <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> propriété est définie sur <xref:System.Xml.Schema.XmlSchemaValidity.Valid>.  
  
   
  
## Examples  
 L’exemple suivant valide le `contosoBooks.xml` de fichiers par rapport à la `contosoBooks.xsd` schéma. Cet exemple utilise la classe <xref:System.Xml.Serialization.XmlSerializer> pour désérialiser le fichier `contosoBooks.xml` et transmettre la valeur des nœuds aux méthodes de la classe <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 L'exemple prend le fichier `contosoBooks.xml` comme entrée.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 L'exemple prend également le fichier `contosoBooks.xsd` comme entrée.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Un ou plusieurs des attributs requis dans le contexte d'élément actuel sont introuvables.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> n'a pas été appelée dans la séquence appropriée. Par exemple, appeler <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
        <exception cref="T:System.ArgumentNullException">Un ou plusieurs des paramètres spécifiés sont <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateText">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Vérifie si du texte est autorisé dans le contexte de l’élément actuel et accumule le texte pour une validation si l’élément actuel a un contenu simple.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateText">
      <MemberSignature Language="C#" Value="public void ValidateText (string elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateText(string elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateText (elementValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateText(System::String ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateText : string -&gt; unit" Usage="xmlSchemaValidator.ValidateText elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementValue">
          <see langword="string" /> de texte à valider dans le contexte d'élément actuel.</param>
        <summary>Valide si la <see langword="string" /> de texte spécifié est autorisée dans le contexte d'élément actuel et accumule le texte pour la validation si l'élément actuel a du contenu simple.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les remarques suivantes sont importantes à prendre en compte lorsque vous utilisez le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> (méthode).  
  
-   Si l’élément a un contenu simple, le texte `string` spécifiée est concaténée sur chaque appel à la <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> méthode jusqu'à ce que le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> méthode est appelée. Lorsque le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> est appelée, tout le texte est validé.  
  
-   Si l’élément a un contenu complexe, aucune concaténation de texte se produit.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">La <see langword="string" /> de texte spécifiée n'est pas autorisée dans le contexte d'élément actuel.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre <see langword="string" /> de texte ne peut pas être <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateText">
      <MemberSignature Language="C#" Value="public void ValidateText (System.Xml.Schema.XmlValueGetter elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateText(class System.Xml.Schema.XmlValueGetter elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateText (elementValue As XmlValueGetter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateText(System::Xml::Schema::XmlValueGetter ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateText : System.Xml.Schema.XmlValueGetter -&gt; unit" Usage="xmlSchemaValidator.ValidateText elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.Xml.Schema.XmlValueGetter" />
      </Parameters>
      <Docs>
        <param name="elementValue">
          <see cref="T:System.Xml.Schema.XmlValueGetter" />
          <see langword="delegate" /> permettant de passer la valeur de texte en tant que type CLR compatible avec le type de langage XSD (XML Schema Definition) de l’attribut.</param>
        <summary>Valide si le texte retourné par l'objet <see cref="T:System.Xml.Schema.XmlValueGetter" /> spécifié est autorisé dans le contexte d'élément actuel et accumule le texte pour la validation si l'élément actuel a du contenu simple.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les remarques suivantes sont importantes à prendre en compte lorsque vous utilisez le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> (méthode).  
  
-   Si l’élément a un contenu simple, le texte `string` spécifiée est concaténée sur chaque appel à la <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> méthode jusqu'à ce que le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> méthode est appelée. Lorsque le <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> est appelée, tout le texte est validé.  
  
-   Si l’élément a un contenu complexe, aucune concaténation de texte se produit.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">La <see langword="string" /> de texte spécifiée n'est pas autorisée dans le contexte d'élément actuel.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
        <exception cref="T:System.ArgumentNullException">Le paramètre <see langword="string" /> de texte ne peut pas être <see langword="null" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateWhitespace">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Valide si un espace blanc est autorisé dans le contexte d’élément actuel et accumule l’espace blanc pour la validation si le contenu de l’élément actuel est simple.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateWhitespace">
      <MemberSignature Language="C#" Value="public void ValidateWhitespace (string elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateWhitespace(string elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateWhitespace (elementValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateWhitespace(System::String ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateWhitespace : string -&gt; unit" Usage="xmlSchemaValidator.ValidateWhitespace elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementValue">
          <see langword="string" /> espace blanc à valider dans le contexte d'élément actuel.</param>
        <summary>Valide si un espace blanc dans la <see langword="string" /> spécifiée est autorisé dans le contexte d'élément actuel et accumule l'espace blanc pour la validation si l'élément actuel a du contenu simple.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">L'espace blanc n'est pas autorisé dans le contexte d'élément actuel.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateWhitespace">
      <MemberSignature Language="C#" Value="public void ValidateWhitespace (System.Xml.Schema.XmlValueGetter elementValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateWhitespace(class System.Xml.Schema.XmlValueGetter elementValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateWhitespace (elementValue As XmlValueGetter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateWhitespace(System::Xml::Schema::XmlValueGetter ^ elementValue);" />
      <MemberSignature Language="F#" Value="member this.ValidateWhitespace : System.Xml.Schema.XmlValueGetter -&gt; unit" Usage="xmlSchemaValidator.ValidateWhitespace elementValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementValue" Type="System.Xml.Schema.XmlValueGetter" />
      </Parameters>
      <Docs>
        <param name="elementValue">
          <see cref="T:System.Xml.Schema.XmlValueGetter" />
          <see langword="delegate" /> permettant de passer la valeur d’espace blanc en tant que type CLR compatible avec le type de langage XSD (XML Schema Definition) de l’attribut.</param>
        <summary>Valide si l'espace blanc retourné par l'objet <see cref="T:System.Xml.Schema.XmlValueGetter" /> spécifié est autorisé dans le contexte d'élément actuel et accumule l'espace blanc pour la validation si l'élément actuel a du contenu simple.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">L'espace blanc n'est pas autorisé dans le contexte d'élément actuel.</exception>
        <exception cref="T:System.InvalidOperationException">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
        <altmember cref="T:System.Xml.Schema.XmlValueGetter" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Schema.ValidationEventHandler" /> qui reçoit des avertissements et des erreurs de validation du schéma trouvés lors de la validation du schéma.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si aucun <xref:System.Xml.Schema.ValidationEventHandler> est spécifié, un <xref:System.Xml.Schema.XmlSchemaValidationException> est levée pour toutes les erreurs de validation de schéma avec un <xref:System.Xml.Schema.XmlSeverityType> valeur <xref:System.Xml.Schema.XmlSeverityType.Error>. Un <xref:System.Xml.Schema.XmlSchemaValidationException> n’est pas levée pour les avertissements de validation avec un <xref:System.Xml.Schema.XmlSeverityType> valeur <xref:System.Xml.Schema.XmlSeverityType.Warning>.  
  
   
  
## Examples  
 L’exemple suivant valide le `contosoBooks.xml` de fichiers par rapport à la `contosoBooks.xsd` schéma. Cet exemple utilise la classe <xref:System.Xml.Serialization.XmlSerializer> pour désérialiser le fichier `contosoBooks.xml` et transmettre la valeur des nœuds aux méthodes de la classe <xref:System.Xml.Schema.XmlSchemaValidator>.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 L'exemple prend le fichier `contosoBooks.xml` comme entrée.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 L'exemple prend également le fichier `contosoBooks.xsd` comme entrée.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationException" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventSender">
      <MemberSignature Language="C#" Value="public object ValidationEventSender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ValidationEventSender" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationEventSender As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ValidationEventSender { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationEventSender : obj with get, set" Usage="System.Xml.Schema.XmlSchemaValidator.ValidationEventSender" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’objet envoyé comme objet expéditeur d’un événement de validation.</summary>
        <value>
          <see cref="T:System.Object" /> ; la valeur par défaut est cet objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple d’événement de validation, consultez le <xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler> événement.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Schema.XmlSchemaValidator.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Définit l’objet <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre les éléments <c>xs:import</c> et <c>xs:include</c>, ainsi que les attributs <c>xsi:schemaLocation</c> et <c>xsi:noNamespaceSchemaLocation</c>.</summary>
        <value>Objet <see cref="T:System.Xml.XmlResolver" /> ; la valeur par défaut est un objet <see cref="T:System.Xml.XmlUrlResolver" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Le <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> et <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> indicateurs de validation d’une <xref:System.Xml.Schema.XmlSchemaValidator> objet ne sont pas ensemble soit par défaut. En outre, le <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> propriété d’un <xref:System.Xml.Schema.XmlSchemaValidator> objet est `null` par défaut. Par conséquent, les schémas externes référencées dans incluent, imports ou redefine éléments ne sont pas résolus par défaut.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlResolver" />
      </Docs>
    </Member>
  </Members>
</Type>