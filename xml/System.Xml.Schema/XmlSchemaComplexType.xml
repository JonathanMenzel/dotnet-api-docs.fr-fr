<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaComplexType.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e4b6d7d189b4930cc56db67904a5e681baa25713.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4b6d7d189b4930cc56db67904a5e681baa25713</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaComplexType">
          <source>Represents the <ph id="ph1">&lt;see langword="complexType" /&gt;</ph> element from XML Schema as specified by the World Wide Web Consortium (W3C).</source>
          <target state="translated">Représente l'élément <ph id="ph1">&lt;see langword="complexType" /&gt;</ph> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaComplexType">
          <source>This class defines a complex type that determines the set of attributes and content of an element.</source>
          <target state="translated">Cette classe définit un type complexe qui détermine l'ensemble des attributs et du contenu d'un élément.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaComplexType">
          <source>An element can be declared with a type attribute that refers to a <ph id="ph1">`complexType`</ph> element that defines the structure, content, and attributes of that element.</source>
          <target state="translated">Un élément peut être déclaré avec un attribut de type qui fait référence à un <ph id="ph1">`complexType`</ph> élément qui définit la structure et des attributs de cet élément.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaComplexType">
          <source>The following example creates a <ph id="ph1">`complexType`</ph> element.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">`complexType`</ph> élément.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaComplexType">
          <source>The following XML file is used for the preceding code example.</source>
          <target state="translated">Le fichier XML suivant est utilisé pour l’exemple de code précédent.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaComplexType.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexType" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute">
          <source>Gets or sets the value for the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /&gt;</ph> component of the complex type.</source>
          <target state="translated">Obtient ou définit la valeur du composant <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /&gt;</ph> de type complexe.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /&gt;</ph> component of the complex type.</source>
          <target state="translated">Composant <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /&gt;</ph> de type complexe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute">
          <source>If this property is not null, the complex type can contain any attributes from the namespaces specified in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAnyAttribute&gt;</ph>.</source>
          <target state="translated">Si cette propriété n’est pas null, le type complexe peut contenir tous les attributs des espaces de noms spécifiés dans le <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAnyAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaComplexType.Attributes">
          <source>Gets the collection of attributes for the complex type.</source>
          <target state="translated">Obtient la collection d’attributs pour le type complexe.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Attributes">
          <source>Contains <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /&gt;</ph> classes.</source>
          <target state="translated">Contient les classes <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> et <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
          <source>Gets the collection of all the complied attributes of this complex type and its base types.</source>
          <target state="translated">Obtient la collection de tous les attributs compilés de ce type complexe et de ses types de base.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
          <source>The collection of all the attributes from this complex type and its base types.</source>
          <target state="translated">Collection de tous les attributs de ce type complexe et de ses types de base.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
          <source>The post-compilation value of the <ph id="ph1">&lt;see langword="AttributeUses" /&gt;</ph> property.</source>
          <target state="translated">Valeur de post-compilation de la propriété <ph id="ph1">&lt;see langword="AttributeUses" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
          <source>For example, a combination of all the attributes from the <ph id="ph1">`Attributes`</ph> property from each type in the hierarchy.</source>
          <target state="translated">Par exemple, une combinaison de tous les attributs de la <ph id="ph1">`Attributes`</ph> propriété à partir de chaque type dans la hiérarchie.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
          <source>The value of this property is read-only.</source>
          <target state="translated">La valeur de cette propriété est en lecture seule.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
          <source>This property has the value after the schema has been successfully compiled to determine the complete attribute set that is allowed in an instance document.</source>
          <target state="translated">Cette propriété a la valeur une fois que le schéma a été compilé avec succès pour déterminer l’ensemble complet d’attributs qui est autorisée dans une instance de document.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
          <source>Gets the post-compilation value for <ph id="ph1">&lt;see langword="anyAttribute" /&gt;</ph> for this complex type and its base type(s).</source>
          <target state="translated">Obtient la valeur postérieure à la compilation pour <ph id="ph1">&lt;see langword="anyAttribute" /&gt;</ph> pour ce type complexe et son ou ses types de base.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
          <source>The post-compilation value of the <ph id="ph1">&lt;see langword="anyAttribute" /&gt;</ph> element.</source>
          <target state="translated">Valeur de post-compilation de l'élément <ph id="ph1">&lt;see langword="anyAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
          <source>The value of this property is read-only.</source>
          <target state="translated">La valeur de cette propriété est en lecture seule.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
          <source>This property has values after the schema has been successfully compiled to determine the complete attribute set of the complex type.</source>
          <target state="translated">Cette propriété a les valeurs une fois que le schéma a été compilé avec succès pour déterminer l’ensemble complet d’attributs du type complexe.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
          <source>For example, it might be the <ph id="ph1">`anyAttribute`</ph> element from one of the base types.</source>
          <target state="translated">Par exemple, il peut être le <ph id="ph1">`anyAttribute`</ph> élément à partir d’un des types de base.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaComplexType.Block">
          <source>Gets or sets the <ph id="ph1">&lt;see langword="block" /&gt;</ph> attribute.</source>
          <target state="translated">Obtient ou définit l'attribut <ph id="ph1">&lt;see langword="block" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Block">
          <source>The <ph id="ph1">&lt;see langword="block" /&gt;</ph> attribute prevents a complex type from being used in the specified type of derivation.</source>
          <target state="translated">L'attribut <ph id="ph1">&lt;see langword="block" /&gt;</ph> empêche l'utilisation d'un type complexe dans le type de dérivation spécifié.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Block">
          <source>The default is <ph id="ph1">&lt;see langword="XmlSchemaDerivationMethod.None" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="XmlSchemaDerivationMethod.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Block">
          <source>Optional.</source>
          <target state="translated">Optionnel.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Block">
          <source>Indicates the type of derivation.</source>
          <target state="translated">Indique le type de dérivation.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Block">
          <source>This attribute can contain the following values:</source>
          <target state="translated">Cet attribut peut contenir les valeurs suivantes :</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Block">
          <source>Enum</source>
          <target state="translated">Enum</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Block">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Block">
          <source>Use the derivation restriction defined by the <ph id="ph1">`BlockDefault`</ph> property of the schema, if it exists.</source>
          <target state="translated">Utilisez la restriction de dérivation définie par le <ph id="ph1">`BlockDefault`</ph> propriété du schéma, si elle existe.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Block">
          <source>This element cannot be replaced by a type derived by Extension.</source>
          <target state="translated">Cet élément ne peut pas être remplacé par un type dérivé par Extension.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Block">
          <source>This element cannot be replaced by a type derived by Restriction.</source>
          <target state="translated">Cet élément ne peut pas être remplacé par un type dérivé par Restriction.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Block">
          <source><ph id="ph1">`#all`</ph>.</source>
          <target state="translated"><ph id="ph1">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Block">
          <source>This element cannot be replaced by any type regardless of derivation method.</source>
          <target state="translated">Cet élément ne peut pas être remplacé par n’importe quel type, quelle que soit la méthode de dérivation.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Block">
          <source>The <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, and <ph id="ph3">`Union`</ph> derivation methods are not supported by this property.</source>
          <target state="translated">Le <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, et <ph id="ph3">`Union`</ph> les méthodes de dérivation ne sont pas pris en charge par cette propriété.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source>Gets the value after the type has been compiled to the post-schema-validation information set (infoset).</source>
          <target state="translated">Obtient la valeur après la compilation du type dans le jeu d'informations (infoset) postérieur à la validation du schéma.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source>This value indicates how the type is enforced when <ph id="ph1">&lt;see langword="xsi:type" /&gt;</ph> is used in the instance document.</source>
          <target state="translated">Cette valeur indique comment le type est appliqué lorsque <ph id="ph1">&lt;see langword="xsi:type" /&gt;</ph> est utilisé dans une instance de document.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source>The post-schema-validated infoset value.</source>
          <target state="translated">Valeur de l'infoset postérieur à la validation du schéma.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source>The default is <ph id="ph1">&lt;see langword="BlockDefault" /&gt;</ph> value on the <ph id="ph2">&lt;see langword="schema" /&gt;</ph> element.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="BlockDefault" /&gt;</ph> pour l'élément <ph id="ph2">&lt;see langword="schema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source>This value is taken either from the type itself or, if not defined at the type level, it is taken from the <ph id="ph1">`schema`</ph> element.</source>
          <target state="translated">Cette valeur provient soit du type lui-même ou, si ne pas définie au niveau du type, elle est récupérée de la <ph id="ph1">`schema`</ph> élément.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source>For example, if the value is restricted, only the specifically defined type can be used, not types derived from the specifically defined type.</source>
          <target state="translated">Par exemple, si la valeur est restreinte, seul le type défini spécifiquement utilisable, pas les types dérivés du type spécifiquement défini.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source>This attribute can contain the following values:</source>
          <target state="translated">Cet attribut peut contenir les valeurs suivantes :</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source>Enum</source>
          <target state="translated">Enum</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source>Use the derivation restriction defined by the <ph id="ph1">`BlockDefault`</ph> property of the schema, if it exists.</source>
          <target state="translated">Utilisez la restriction de dérivation définie par le <ph id="ph1">`BlockDefault`</ph> propriété du schéma, si elle existe.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source>This element cannot be replaced by a type derived by Extension.</source>
          <target state="translated">Cet élément ne peut pas être remplacé par un type dérivé par Extension.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source>This element cannot be replaced by a type derived by Restriction.</source>
          <target state="translated">Cet élément ne peut pas être remplacé par un type dérivé par Restriction.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source><ph id="ph1">`#all`</ph>.</source>
          <target state="translated"><ph id="ph1">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source>This element cannot be replaced by any type regardless of derivation method.</source>
          <target state="translated">Cet élément ne peut pas être remplacé par n’importe quel type, quelle que soit la méthode de dérivation.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
          <source>The <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, and <ph id="ph3">`Union`</ph> derivation methods are not supported by this property.</source>
          <target state="translated">Le <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, et <ph id="ph3">`Union`</ph> les méthodes de dérivation ne sont pas pris en charge par cette propriété.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel">
          <source>Gets or sets the post-compilation <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaContentModel" /&gt;</ph> of this complex type.</source>
          <target state="translated">Obtient ou définit le <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaContentModel" /&gt;</ph> postérieur à la compilation de ce type complexe.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel">
          <source>The content model type that is one of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexContent" /&gt;</ph> classes.</source>
          <target state="translated">Type de modèle de contenu qui est une des classes <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexContent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel">
          <source>This is mutually exclusive with the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A&gt;</ph> property.</source>
          <target state="translated">Cela est incompatible avec le <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
          <source>Gets the content model of the complex type which holds the post-compilation value.</source>
          <target state="translated">Obtient le modèle de contenu du type complexe qui contient la valeur postérieure à la compilation.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
          <source>The post-compilation value of the content model for the complex type.</source>
          <target state="translated">Valeur postérieure à la compilation du modèle de contenu du type complexe.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
          <source>This is the content in the post-schema-validation infoset.</source>
          <target state="translated">Il s’agit du contenu dans le jeu d’informations postérieur à la validation du schéma.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
          <source>If the <ph id="ph1">`IsMixed`</ph> property is set to <ph id="ph2">`true`</ph> on the <ph id="ph3">`ContentModel`</ph> property that has the type <ph id="ph4">`XmlSchemaComplexContent`</ph>, the value returned is <ph id="ph5">`Mixed`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">`IsMixed`</ph> est définie sur <ph id="ph2">`true`</ph> sur la <ph id="ph3">`ContentModel`</ph> propriété qui a le type <ph id="ph4">`XmlSchemaComplexContent`</ph>, la valeur retournée est <ph id="ph5">`Mixed`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
          <source>If the <ph id="ph1">`IsMixed`</ph> property is <ph id="ph2">`false`</ph>, the value is either <ph id="ph3">`Empty`</ph> or <ph id="ph4">`ElementOnly`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">`IsMixed`</ph> propriété <ph id="ph2">`false`</ph>, la valeur est soit <ph id="ph3">`Empty`</ph> ou <ph id="ph4">`ElementOnly`</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
          <source>If the type on the <ph id="ph1">`ContentModel`</ph> property has the type <ph id="ph2">`XmlSchemaSimpleContent`</ph>, then this value is always <ph id="ph3">`TextOnly`</ph>.</source>
          <target state="translated">Si le type sur le <ph id="ph1">`ContentModel`</ph> type de propriété est <ph id="ph2">`XmlSchemaSimpleContent`</ph>, cette valeur est toujours <ph id="ph3">`TextOnly`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
          <source>The <ph id="ph1">`ContentType`</ph> property must have one of the values shown in the following table.</source>
          <target state="translated">Le <ph id="ph1">`ContentType`</ph> propriété doit avoir l’une des valeurs indiquées dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
          <source>Enum</source>
          <target state="translated">Enum</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
          <source>Text-only content.</source>
          <target state="translated">Contenu limité à du texte.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
          <source>Empty content.</source>
          <target state="translated">Contenu vide.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
          <source>Element-only content.</source>
          <target state="translated">Contenu limité à des éléments.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
          <source>Mixed content model.</source>
          <target state="translated">Modèle de contenu mixte.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
          <source>Gets the particle that holds the post-compilation value of the <ph id="ph1">&lt;see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /&gt;</ph> particle.</source>
          <target state="translated">Obtient la partie qui contient la valeur de post-compilation de la particule <ph id="ph1">&lt;see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
          <source>The particle for the content type.</source>
          <target state="translated">Particule du type de contenu.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
          <source>The post-compilation value of the <ph id="ph1">&lt;see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /&gt;</ph> particle.</source>
          <target state="translated">Valeur de post-compilation de la particule <ph id="ph1">&lt;see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
          <source>This <ph id="ph1">`ContentTypeParticle`</ph> is determined after the content models of the most derived types and the base complex type have been resolved according to the rules defined in the W3C XML Schema definition language (XSD) specification.</source>
          <target state="translated">Cela <ph id="ph1">`ContentTypeParticle`</ph> est déterminé d’après les modèles de contenu des types les plus dérivés et le type complexe de base ont été résolus conformément aux règles définies dans la spécification de langage (XSD XML) W3C XML Schema definition.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
          <source>Gets or sets the information that determines if the <ph id="ph1">&lt;see langword="complexType" /&gt;</ph> element can be used in the instance document.</source>
          <target state="translated">Obtient ou définit les informations qui déterminent si l'élément <ph id="ph1">&lt;see langword="complexType" /&gt;</ph> peut être utilisé dans l'instance de document.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, an element cannot use this <ph id="ph2">&lt;see langword="complexType" /&gt;</ph> element directly and must use a complex type that is derived from this <ph id="ph3">&lt;see langword="complexType" /&gt;</ph> element.</source>
          <target state="translated">Si la valeur est <ph id="ph1">&lt;see langword="true" /&gt;</ph>, un élément ne peut pas utiliser cet élément <ph id="ph2">&lt;see langword="complexType" /&gt;</ph> directement et doit utiliser un type complexe dérivé de cet élément <ph id="ph3">&lt;see langword="complexType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
          <source>Optional.</source>
          <target state="translated">Optionnel.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
          <source>Gets or sets information that determines if the complex type has a mixed content model (markup within the content).</source>
          <target state="translated">Obtient ou définit des informations qui déterminent si le type complexe possède un modèle de contenu mixte (balisage à l'intérieur du contenu).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if character data can appear between child elements of this complex type; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, si des données de caractères peuvent apparaître entre les éléments enfants de ce type complexe ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
          <source>Optional.</source>
          <target state="translated">Optionnel.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
          <source>Indicates if character data can appear between the child elements of this <ph id="ph1">`complexType`</ph>.</source>
          <target state="translated">Indique si les données de caractères peuvent apparaître entre les éléments enfants de ce <ph id="ph1">`complexType`</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
          <source>If the <ph id="ph1">`simpleContent`</ph> element is a child element, the <ph id="ph2">`mixed`</ph> attribute is not allowed (<ph id="ph3">`false`</ph>).</source>
          <target state="translated">Si le <ph id="ph1">`simpleContent`</ph> élément est un élément enfant, le <ph id="ph2">`mixed`</ph> attribut n’est pas autorisé (<ph id="ph3">`false`</ph>).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
          <source>If the <ph id="ph1">`complexContent`</ph> element is a child element, the <ph id="ph2">`mixed`</ph> attribute can be overridden by the <ph id="ph3">`mixed`</ph> attribute on the <ph id="ph4">`complexContent`</ph> element.</source>
          <target state="translated">Si le <ph id="ph1">`complexContent`</ph> élément est un élément enfant, le <ph id="ph2">`mixed`</ph> attribut peut être remplacé par la <ph id="ph3">`mixed`</ph> de l’attribut le <ph id="ph4">`complexContent`</ph> élément.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
          <source>Gets or sets the compositor type as one of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaGroupRef" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaChoice" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaAll" /&gt;</ph>, or <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaSequence" /&gt;</ph> classes.</source>
          <target state="translated">Obtient ou définit le type de compositeur comme l'une des classes <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaGroupRef" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaChoice" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaAll" /&gt;</ph> ou <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaSequence" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
          <source>The compositor type.</source>
          <target state="translated">Type de compositeur.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
          <source>Particles must be one of the following compositors:</source>
          <target state="translated">Doivent appartenir aux compositeurs suivants :</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
          <source>Element</source>
          <target state="translated">Élément</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
          <source>The complex type contains the elements defined in the referenced group.</source>
          <target state="translated">Le type complexe contient les éléments définis dans le groupe référencé.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
          <source>The complex type contains the elements defined in the specified sequence.</source>
          <target state="translated">Le type complexe contient les éléments définis dans la séquence spécifiée.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
          <source>The complex type allows one of the elements specified in the <ph id="ph1">`choice`</ph> element.</source>
          <target state="translated">Le type complex autorise un des éléments spécifiés dans le <ph id="ph1">`choice`</ph> élément.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
          <source>The complex type allows all of the elements specified in the <ph id="ph1">`all`</ph> element to appear once or not at all.</source>
          <target state="translated">Le type complexe permet à tous les éléments spécifiés dans le <ph id="ph1">`all`</ph> élément apparaissent une fois ou pas du tout.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
          <source>This is mutually exclusive with the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A&gt;</ph> property.</source>
          <target state="translated">Cela est incompatible avec le <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A&gt;</ph> propriété.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>