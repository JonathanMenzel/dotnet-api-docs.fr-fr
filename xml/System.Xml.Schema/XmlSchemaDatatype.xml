<Type Name="XmlSchemaDatatype" FullName="System.Xml.Schema.XmlSchemaDatatype">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd74f89cbe9b2982b49752ff9b6b16016e220713" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52589579" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlSchemaDatatype" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlSchemaDatatype extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaDatatype" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlSchemaDatatype" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaDatatype abstract" />
  <TypeSignature Language="F#" Value="type XmlSchemaDatatype = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>La classe <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> est une classe abstraite destinée au mappage de types XSD (XML Schema Definition) sur des types CLR (Common Language Runtime).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant illustre l’utilisation de la <xref:System.Xml.Schema.XmlSchemaDatatype> classe.  
  
 [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CPP/datatype.cpp#1)]
 [!code-csharp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CS/datatype.cs#1)]
 [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/VB/datatype.vb#1)]  
  
 Le fichier XML suivant est utilisé pour l’exemple de code précédent.  
  
 [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/XML/example.xsd#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlSchemaDatatype ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlSchemaDatatype();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est appelé par les constructeurs de classes dérivées pour initialiser un état dans ce type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangeType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Convertit la valeur spécifiée, dont le type est l'une des représentations CLR valides du type de schéma XML représenté par <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, en une autre représentation CLR valide de la même valeur.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public virtual object ChangeType (object value, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeType (value As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ChangeType(System::Object ^ value, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type -&gt; obj&#xA;override this.ChangeType : obj * Type -&gt; obj" Usage="xmlSchemaDatatype.ChangeType (value, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">Valeur d'entrée à convertir dans le type spécifié.</param>
        <param name="targetType">Type cible vers lequel convertir la valeur d'entrée.</param>
        <summary>Convertit la valeur spécifiée, dont le type est l'une des représentations CLR valides du type de schéma XML  représenté par <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, au type CLR spécifié.</summary>
        <returns>Valeur d'entrée convertie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur le type de prise en charge dans les <xref:System.Xml?displayProperty=nameWithType> classes et conversion des types de données XML, consultez le [Type prend en charge dans les Classes System.Xml](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) rubrique.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <see cref="T:System.Object" /> ou <see cref="T:System.Type" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidCastException">Le type représenté par <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> ne prend pas en charge la conversion du type de valeur spécifié au type spécifié.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public virtual object ChangeType (object value, Type targetType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type targetType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeType (value As Object, targetType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ChangeType(System::Object ^ value, Type ^ targetType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type * System.Xml.IXmlNamespaceResolver -&gt; obj&#xA;override this.ChangeType : obj * Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlSchemaDatatype.ChangeType (value, targetType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="value">Valeur d'entrée à convertir dans le type spécifié.</param>
        <param name="targetType">Type cible vers lequel convertir la valeur d'entrée.</param>
        <param name="namespaceResolver">
          <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilisé pour trouver les préfixes d'espaces de noms. Cela est utile uniquement si <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> représente le type xs:QName ou un type dérivé.</param>
        <summary>Convertit la valeur spécifiée, dont le type est l'une des représentations CLR valides du type de schéma XML représenté par <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, au type CLR spécifié à l'aide de <see cref="T:System.Xml.IXmlNamespaceResolver" /> si <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> représente le type xs:QName ou un type dérivé.</summary>
        <returns>Valeur d'entrée convertie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur le type de prise en charge dans les <xref:System.Xml?displayProperty=nameWithType> classes et conversion des types de données XML, consultez le [Type prend en charge dans les Classes System.Xml](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) rubrique.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <see cref="T:System.Object" /> ou <see cref="T:System.Type" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidCastException">Le type représenté par <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> ne prend pas en charge la conversion du type de valeur spécifié au type spécifié.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDerivedFrom">
      <MemberSignature Language="C#" Value="public virtual bool IsDerivedFrom (System.Xml.Schema.XmlSchemaDatatype datatype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDerivedFrom(class System.Xml.Schema.XmlSchemaDatatype datatype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDerivedFrom (datatype As XmlSchemaDatatype) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDerivedFrom(System::Xml::Schema::XmlSchemaDatatype ^ datatype);" />
      <MemberSignature Language="F#" Value="abstract member IsDerivedFrom : System.Xml.Schema.XmlSchemaDatatype -&gt; bool&#xA;override this.IsDerivedFrom : System.Xml.Schema.XmlSchemaDatatype -&gt; bool" Usage="xmlSchemaDatatype.IsDerivedFrom datatype" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datatype" Type="System.Xml.Schema.XmlSchemaDatatype" />
      </Parameters>
      <Docs>
        <param name="datatype">
          <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</param>
        <summary>La méthode <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> retourne toujours <see langword="false" />.</summary>
        <returns>Retourne toujours <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.IXmlNamespaceResolver nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseValue(string s, class System.Xml.XmlNameTable nameTable, class System.Xml.IXmlNamespaceResolver nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ParseValue (s As String, nameTable As XmlNameTable, nsmgr As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ParseValue(System::String ^ s, System::Xml::XmlNameTable ^ nameTable, System::Xml::IXmlNamespaceResolver ^ nsmgr);" />
      <MemberSignature Language="F#" Value="abstract member ParseValue : string * System.Xml.XmlNameTable * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlSchemaDatatype.ParseValue (s, nameTable, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        <Parameter Name="nsmgr" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="s">
          <see langword="string" /> à valider par rapport au type simple.</param>
        <param name="nameTable">
          <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour l'atomisation lors de l'analyse de <see langword="string" /> si cet objet <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> représente le type xs:NCName.</param>
        <param name="nsmgr">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> à utiliser lors de l'analyse de <see langword="string" /> si cet objet <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> représente le type xs:QName.</param>
        <summary>En cas de substitution dans une classe dérivée, valide la <see langword="string" /> spécifiée par rapport à un type simple intégré ou défini par l'utilisateur.</summary>
        <returns>
          <see cref="T:System.Object" /> qui peut être casté en toute sécurité en type retourné par la propriété <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> méthode valide le `string` spécifiée par rapport à un type simple intégré ou défini par l’utilisateur. Par exemple, si cette <xref:System.Xml.Schema.XmlSchemaDatatype> représente le type xs : date, puis une instance de <xref:System.DateTime> est retourné.  
  
 Voici les étapes effectuées lors de la <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> processus de validation de la méthode.  
  
1.  Convertir la valeur spécifiée comme un `string` tapez à son correspondant Common Language Runtime (CLR).  
  
2.  Vérifiez que la valeur ne viole pas toutes les facettes définies pour le type simple.  
  
 La valeur convertie est ensuite retournée comme un <xref:System.Object> et peut être casté en toute sécurité pour le type retourné par la <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> propriété.  
  
 Lorsque le <xref:System.Xml.Schema.XmlSchemaDatatype> objet représente un type de liste, l’entrée `string` valeur est convertie en une liste d’un ou plusieurs objets. Lorsque le <xref:System.Xml.Schema.XmlSchemaDatatype> objet représente un type de liste, une tentative est effectuée pour analyser la valeur d’entrée comme un type de membre de l’union. Si la tentative d’analyse échoue, la conversion est tentée avec le membre suivant de l’union jusqu'à ce que l’analyse est réussie ou aucun autre type de membre à analyser. Si l’analyse échoue, une exception est levée.  
  
   
  
## Examples  
 L’exemple suivant récupère la `LotteryNumber` type simple à partir du fichier example.xsd en tant qu’un <xref:System.Xml.Schema.XmlSchemaSimpleType> , puis valide la `string` valeur de `5` à l’aide de la <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> (méthode).  
  
 [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CPP/datatype.cpp#1)]
 [!code-csharp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CS/datatype.cs#1)]
 [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/VB/datatype.vb#1)]  
  
 Le fichier XML suivant est utilisé pour l’exemple de code précédent.  
  
 [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/XML/example.xsd#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">La valeur d'entrée n'est pas une instance valide de ce type de schéma XML W3C.</exception>
        <exception cref="T:System.ArgumentNullException">La valeur à analyser ne peut pas être <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseValue(string s, class System.Xml.XmlNameTable nameTable, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ParseValue (s As String, nameTable As XmlNameTable, nsmgr As XmlNamespaceManager) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ParseValue(System::String ^ s, System::Xml::XmlNameTable ^ nameTable, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="abstract member ParseValue : string * System.Xml.XmlNameTable * System.Xml.XmlNamespaceManager -&gt; obj" Usage="xmlSchemaDatatype.ParseValue (s, nameTable, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="s">Chaîne à valider par rapport au type simple.</param>
        <param name="nameTable">
          <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour l’atomisation durant l’analyse de la chaîne si cet objet <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> représente le type xs:NCName.</param>
        <param name="nsmgr">Objet <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser durant l’analyse de la chaîne si cet objet <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> représente le type xs:QName.</param>
        <summary>En cas de substitution dans une classe dérivée, valide la chaîne spécifiée par rapport à un type simple intégré ou défini par l’utilisateur.</summary>
        <returns>
          <see cref="T:System.Object" /> qui peut être casté en toute sécurité en type retourné par la propriété <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Le <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> méthode valide la chaîne spécifiée par rapport à un type simple intégré ou défini par l’utilisateur. Par exemple, si cette <xref:System.Xml.Schema.XmlSchemaDatatype> représente le type xs : date, puis une instance de <xref:System.DateTime> est retourné.

Voici les étapes effectuées lors de la <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> processus de validation de la méthode.

1. Convertir la chaîne spécifiée en son type de Common Language Runtime (CLR) correspondant.

2. Vérifiez que la valeur ne viole pas toutes les facettes sont définies pour le type simple.

La valeur convertie est ensuite retournée comme un <xref:System.Object> et peut être casté en toute sécurité pour le type qui est retourné par la <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType> propriété.

Lorsque le <xref:System.Xml.Schema.XmlSchemaDatatype> objet représente un type de liste, la valeur de chaîne d’entrée est convertie en une liste d’un ou plusieurs objets. Lorsque le <xref:System.Xml.Schema.XmlSchemaDatatype> objet représente un type de liste, une tentative est effectuée pour analyser la valeur d’entrée comme un type de membre de l’union. Si la tentative d’analyse échoue, la conversion est tentée avec le membre suivant de l’union jusqu'à ce que l’analyse est réussie ou aucun autre type de membre à analyser. Si l’analyse échoue, une exception est levée.

]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">La valeur d'entrée n'est pas une instance valide de ce type de schéma XML W3C.</exception>
        <exception cref="T:System.ArgumentNullException">La valeur à analyser ne doit pas avoir une valeur null (Nothing en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="TokenizedType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlTokenizedType TokenizedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlTokenizedType TokenizedType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenizedType As XmlTokenizedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlTokenizedType TokenizedType { System::Xml::XmlTokenizedType get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenizedType : System.Xml.XmlTokenizedType" Usage="System.Xml.Schema.XmlSchemaDatatype.TokenizedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlTokenizedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, elle obtient le type correspondant à <see langword="string" /> spécifié dans la définition XML 1.0 du World Wide Web Consortium (W3C).</summary>
        <value>Valeur <see cref="T:System.Xml.XmlTokenizedType" /> correspondant au <see langword="string" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Permet le `string` à être lu comme un type XML particulier, par exemple, un type de section CDATA.  
  
 Le tableau suivant présente les types de jetons.  
  
|XmlTokenizedType|Description |  
|----------------------|-----------------|  
|`CDATA`|Type CDATA|  
|`ID`|Type d’ID|  
|`IDREF`|Type IDREF|  
|`IDREFS`|Type IDREFS|  
|`ENTITY`|Type d’entité|  
|`ENTITIES`|Type des entités|  
|`NMTOKEN`|Type NMTOKEN|  
|`NMTOKENS`|Type NMTOKENS|  
|`NOTATION`|Type NOTATION|  
|`ENUMERATION`|Type d’énumération|  
|`QName`|Type QName|  
|`NCName`|Type NCName|  
|`None`|Aucun type|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.XmlTypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlTypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeCode As XmlTypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlTypeCode TypeCode { System::Xml::Schema::XmlTypeCode get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeCode : System.Xml.Schema.XmlTypeCode" Usage="System.Xml.Schema.XmlSchemaDatatype.TypeCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlTypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur <see cref="T:System.Xml.Schema.XmlTypeCode" /> de ce type simple.</summary>
        <value>Valeur <see cref="T:System.Xml.Schema.XmlTypeCode" /> de ce type simple.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les types de liste de schéma XML de W3C tels que xs : Entities, xs : NMTOKENS et xs : IDREFS ne sont pas représentées par la <xref:System.Xml.Schema.XmlTypeCode> énumération. Au lieu de cela, ils sont représentés par le <xref:System.Xml.Schema.XmlTypeCode> valeurs pour les types xs : Entity, xs : NMTOKEN et xs : IDREF avec la <xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A> propriété de la <xref:System.Xml.Schema.XmlSchemaDatatype> objet valeur <xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List>.  
  
> [!NOTE]
>  Les types xs : anySimpleType et xs : anyType ne sont pas représentées par <xref:System.Xml.Schema.XmlTypeCode> énumération. Ils sont représentés dans un <xref:System.Xml.Schema.XmlSchemaDatatype> de l’objet avec un <xref:System.Xml.Schema.XmlTypeCode> dont la valeur est <xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic> pour xs : anySimpleType ou <xref:System.Xml.Schema.XmlTypeCode.Item> pour xs : anyType.  
  
   
  
## Examples  
 Pour obtenir un exemple de la <xref:System.Xml.Schema.XmlSchemaDatatype.TypeCode%2A> propriété, consultez <xref:System.Xml.Schema.XmlSchemaDatatype>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlTypeCode" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public abstract Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.Xml.Schema.XmlSchemaDatatype.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, obtient le type Common Language Runtime (CLR) de l'élément.</summary>
        <value>Type CLR de l'élément.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> propriété obtient le type CLR de l’élément. Par exemple, un élément de type `xs:int` aurait un <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> de <xref:System.Int32> par défaut. Toutefois, le <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> peut être l’un des types valides qui peuvent être mappés aux `xs:int`, tel que <xref:System.Int16> ou <xref:System.Double>.  
  
 Pour plus d’informations sur le type de prise en charge dans les <xref:System.Xml?displayProperty=nameWithType> espace de noms, consultez [Type prend en charge dans les Classes System.Xml](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).  
  
   
  
## Examples  
 Pour obtenir un exemple de la <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> propriété, consultez <xref:System.Xml.Schema.XmlSchemaDatatype>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Variety">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.XmlSchemaDatatypeVariety Variety { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaDatatypeVariety Variety" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.Variety" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Variety As XmlSchemaDatatypeVariety" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlSchemaDatatypeVariety Variety { System::Xml::Schema::XmlSchemaDatatypeVariety get(); };" />
      <MemberSignature Language="F#" Value="member this.Variety : System.Xml.Schema.XmlSchemaDatatypeVariety" Usage="System.Xml.Schema.XmlSchemaDatatype.Variety" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDatatypeVariety</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> de ce type simple.</summary>
        <value>Valeur <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> de ce type simple.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" />
      </Docs>
    </Member>
  </Members>
</Type>