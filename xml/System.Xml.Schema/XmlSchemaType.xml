<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaType.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac585bac839dd366a43eb786976e61e86cdc516f147.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85bac839dd366a43eb786976e61e86cdc516f147</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaType">
          <source>The base class for all simple types and complex types.</source>
          <target state="translated">La classe de base de tous les types simples et complexes.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaType">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt;</ph> class and the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaComplexType&gt;</ph> class for an example using this class.</source>
          <target state="translated">Consultez le <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt;</ph> classe et la <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaComplexType&gt;</ph> classe pour obtenir un exemple à l’aide de cette classe.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
          <source>Gets the post-compilation object type or the built-in XML Schema Definition Language (XSD) data type, simpleType element, or complexType element.</source>
          <target state="translated">Obtient le type d'objet de post-compilation ou le type de données en langage XSD (XML Schema Definition) intégré, l'élément simpleType ou l'élément complexType.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
          <source>This is a post-schema-compilation infoset property.</source>
          <target state="translated">Il s'agit d'une propriété de jeu d'informations postérieure à la compilation du schéma.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
          <source>The built-in XSD data type, simpleType element, or complexType element.</source>
          <target state="translated">Type de données XSD intégré, d'élément simpleType ou d'élément complexType.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
          <source>The complexType is derived from the type specified by the base value.</source>
          <target state="translated">Le complexType est dérivé du type spécifié par la valeur de base.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
          <source>The base value must be a QName.</source>
          <target state="translated">La valeur de base doit être de type QName.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaType.BaseSchemaType%2A&gt;</ph> property is obsolete and has been replaced by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType%2A&gt;</ph> property.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaType.BaseSchemaType%2A&gt;</ph> propriété est obsolète et a été remplacée par le <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType">
          <source>Gets the post-compilation value for the base type of this schema type.</source>
          <target state="translated">Obtient la valeur de post-compilation pour le type de base de ce type de schéma.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> object representing the base type of this schema type.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> représentant le type de base de ce type de schéma.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType%2A&gt;</ph> property always has a value, because all schema types have a base type.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType%2A&gt;</ph> propriété a toujours une valeur, car tous les types de schéma ont un type de base.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType">
          <source>This value is set upon schema compilation, making it a part of the post-schema-compilation infoset.</source>
          <target state="translated">Cette valeur est définie à la compilation du schéma, rendant une partie du jeu d’informations postérieures à la compilation du schéma.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaType.Datatype">
          <source>Gets the post-compilation value for the data type of the complex type.</source>
          <target state="translated">Obtient la valeur de post-compilation pour le type de données du type complexe.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Datatype">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> post-schema-compilation value.</source>
          <target state="translated">Valeur postérieure à la compilation du schéma <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
          <source>Gets the post-compilation information on how this element was derived from its base type.</source>
          <target state="translated">Obtient les informations de post-compilation sur la dérivation de cet élément à partir de son type de base.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
          <source>One of the valid <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /&gt;</ph> valides.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
          <source>The following table shows the values that this property can contain.</source>
          <target state="translated">Le tableau suivant montre les valeurs que cette propriété peut contenir.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDerivationMethod&gt;</ph> value</source>
          <target state="translated">Valeur <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDerivationMethod&gt;</ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
          <source>No derivation method specified.</source>
          <target state="translated">Aucune méthode de dérivation spécifié.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
          <source>Derived by Substitution.</source>
          <target state="translated">Dérivé par Substitution.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
          <source>Derived by Extension.</source>
          <target state="translated">Dérivé par Extension.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
          <source>Derived by Restriction.</source>
          <target state="translated">Dérivé par Restriction.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
          <source>Derived by List.</source>
          <target state="translated">Dérivé par liste.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
          <source>Derived by Union.</source>
          <target state="translated">Dérivé par Union.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Gets or sets the final attribute of the type derivation that indicates if further derivations are allowed.</source>
          <target state="translated">Obtient ou définit le dernier attribut de la dérivation de type qui indique si des dérivations supplémentaires sont autorisées.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>One of the valid <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /&gt;</ph> valides.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaDerivationMethod.None" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaDerivationMethod.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>The following table shows the values that this property can contain for simple type.</source>
          <target state="translated">Le tableau suivant montre les valeurs que cette propriété peut contenir pour un type simple.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDerivationMethod&gt;</ph> value</source>
          <target state="translated">Valeur <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDerivationMethod&gt;</ph></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Overrides the schema <ph id="ph1">`blockDefault`</ph> setting allowing any derivations by restriction, extension, or substitution to take place.</source>
          <target state="translated">Remplace le schéma <ph id="ph1">`blockDefault`</ph> paramètre permettant les dérivations par restriction, extension ou de substitution se déroulent.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>No derivation method is specified.</source>
          <target state="translated">Aucune méthode de dérivation n’est spécifié.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>This is the default.</source>
          <target state="translated">Il s'agit de la valeur par défaut.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Derivation rules are taken from the schema blockDefault setting.</source>
          <target state="translated">Les règles de dérivation proviennent du paramètre du schéma blockDefault.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Cannot be replaced by a type derived by Substitution.</source>
          <target state="translated">Ne peut pas être remplacé par un type dérivé par Substitution.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Cannot be replaced by a type derived by Extension.</source>
          <target state="translated">Ne peut pas être remplacé par un type dérivé par Extension.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Cannot be replaced by a type derived by Restriction.</source>
          <target state="translated">Ne peut pas être remplacé par un type dérivé par Restriction.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source><ph id="ph1">`#all`</ph>.</source>
          <target state="translated"><ph id="ph1">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Cannot be replaced by a type derived by any derivation method.</source>
          <target state="translated">Ne peut pas être remplacé par un type dérivé par n’importe quelle méthode de dérivation.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>The following table shows the values that this property can contain for complex type.</source>
          <target state="translated">Le tableau suivant montre les valeurs que cette propriété peut contenir pour un type complexe.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDerivationMethod&gt;</ph> value</source>
          <target state="translated">Valeur <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDerivationMethod&gt;</ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Overrides the schema <ph id="ph1">`blockDefault`</ph> setting allowing any derivations by restriction, extension, or substitution to take place.</source>
          <target state="translated">Remplace le schéma <ph id="ph1">`blockDefault`</ph> paramètre permettant les dérivations par restriction, extension ou de substitution se déroulent.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>No derivation method is specified.</source>
          <target state="translated">Aucune méthode de dérivation n’est spécifié.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>This is the default.</source>
          <target state="translated">Il s'agit de la valeur par défaut.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Derivation rules are taken from the schema <ph id="ph1">`blockDefault`</ph> setting.</source>
          <target state="translated">Les règles de dérivation sont effectuées à partir du schéma <ph id="ph1">`blockDefault`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Cannot be replaced by a type derived by Substitution.</source>
          <target state="translated">Ne peut pas être remplacé par un type dérivé par Substitution.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Cannot be replaced by a type derived by Extension.</source>
          <target state="translated">Ne peut pas être remplacé par un type dérivé par Extension.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Cannot be replaced by a type derived by Restriction.</source>
          <target state="translated">Ne peut pas être remplacé par un type dérivé par Restriction.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source><ph id="ph1">`#all`</ph>.</source>
          <target state="translated"><ph id="ph1">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Final">
          <source>Cannot be replaced by a type derived by any derivation method.</source>
          <target state="translated">Ne peut pas être remplacé par un type dérivé par n’importe quelle méthode de dérivation.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
          <source>Gets the post-compilation value of the <ph id="ph1">&lt;see cref="P:System.Xml.Schema.XmlSchemaType.Final" /&gt;</ph> property.</source>
          <target state="translated">Obtient la valeur de post-compilation de la propriété <ph id="ph1">&lt;see cref="P:System.Xml.Schema.XmlSchemaType.Final" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
          <source>The post-compilation value of the <ph id="ph1">&lt;see cref="P:System.Xml.Schema.XmlSchemaType.Final" /&gt;</ph> property.</source>
          <target state="translated">Valeur de post-compilation de la propriété <ph id="ph1">&lt;see cref="P:System.Xml.Schema.XmlSchemaType.Final" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
          <source>The default is the <ph id="ph1">&lt;see langword="finalDefault" /&gt;</ph> attribute value of the <ph id="ph2">&lt;see langword="schema" /&gt;</ph> element.</source>
          <target state="translated">La valeur par défaut est la valeur de l'attribut <ph id="ph1">&lt;see langword="finalDefault" /&gt;</ph> sur l'élément <ph id="ph2">&lt;see langword="schema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
          <source>This value indicates how the type is restricted when the type is extended through restriction.</source>
          <target state="translated">Cette valeur indique la façon dont le type est restreint lorsque le type est étendu par restriction.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
          <source>If the type is marked as <ph id="ph1">`final`</ph>, this type cannot be extended.</source>
          <target state="translated">Si le type est marqué comme <ph id="ph1">`final`</ph>, il ne peut pas être étendu.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaType">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexType" /&gt;</ph> that represents the built-in complex type of the complex type specified.</source>
          <target state="translated">Retourne un <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexType" /&gt;</ph> qui représente le type complexe intégré du type complexe spécifié.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> values representing the complex type.</source>
          <target state="translated">L'une des valeurs <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> représentant le type complexe.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexType" /&gt;</ph> that represents the built-in complex type of the complex type specified.</source>
          <target state="translated">Retourne un <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexType" /&gt;</ph> qui représente le type complexe intégré du type complexe spécifié.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexType" /&gt;</ph> that represents the built-in complex type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexType" /&gt;</ph> qui représente le type complexe intégré.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> of the complex type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> du type complexe.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexType" /&gt;</ph> that represents the built-in complex type of the complex type specified by qualified name.</source>
          <target state="translated">Retourne un <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexType" /&gt;</ph> qui représente le type complexe intégré du type complexe spécifié par le nom qualifié.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexType" /&gt;</ph> that represents the built-in complex type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexType" /&gt;</ph> qui représente le type complexe intégré.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaType">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /&gt;</ph> that represents the built-in simple type of the specified simple type.</source>
          <target state="translated">Retourne un <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /&gt;</ph> qui représente le type simple intégré du type simple spécifié.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> values representing the simple type.</source>
          <target state="translated">L'une des valeurs <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> représentant le type simple.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /&gt;</ph> that represents the built-in simple type of the specified simple type.</source>
          <target state="translated">Retourne un <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /&gt;</ph> qui représente le type simple intégré du type simple spécifié.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /&gt;</ph> that represents the built-in simple type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /&gt;</ph> qui représente le type simple intégré.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
          <source>You cannot directly serialize the built-in type.</source>
          <target state="translated">Vous ne pouvez pas directement sérialiser le type intégré.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
          <source>If you need to serialize the type, create a new simple type which derives from the built-in type and serialize the simple type.</source>
          <target state="translated">Si vous avez besoin sérialiser le type, créez un nouveau type simple qui dérive du type intégré et sérialise le type simple.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
          <source>The following example shows how to create the type and add it to the schema.</source>
          <target state="translated">L’exemple suivant montre comment créer le type et l’ajouter au schéma.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> of the simple type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> du type simple.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /&gt;</ph> that represents the built-in simple type of the simple type that is specified by the qualified name.</source>
          <target state="translated">Retourne un <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /&gt;</ph> qui représente le type simple intégré du type simple spécifié par le nom qualifié.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /&gt;</ph> that represents the built-in simple type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /&gt;</ph> qui représente le type simple intégré.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
          <source>You cannot directly serialize the built-in type.</source>
          <target state="translated">Vous ne pouvez pas directement sérialiser le type intégré.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
          <source>If you need to serialize the type, create a new simple type which derives from the built-in type and serialize the simple type.</source>
          <target state="translated">Si vous avez besoin sérialiser le type, créez un nouveau type simple qui dérive du type intégré et sérialise le type simple.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
          <source>The following example shows how to create the type and add it to the schema.</source>
          <target state="translated">L’exemple suivant montre comment créer le type et l’ajouter au schéma.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
          <source>The derived <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> dérivé à tester.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
          <source>The base <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> to test the derived <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> against.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> de base par rapport auquel tester le <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> dérivé.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /&gt;</ph> values representing a type derivation method to exclude from testing.</source>
          <target state="translated">Une des valeurs <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /&gt;</ph> représentant une méthode de dérivation du type à exclure du test.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
          <source>Returns a value indicating if the derived schema type specified is derived from the base schema type specified</source>
          <target state="translated">Retourne une valeur indiquant si le type de schéma dérivé spécifié est dérivé du type de schéma de base spécifié.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the derived type is derived from the base type; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le type dérivé est dérivé du type de base ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
          <source>The following is an example of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaType.IsDerivedFrom%2A&gt;</ph> method.</source>
          <target state="translated">Voici un exemple de la <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaType.IsDerivedFrom%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaType.IsMixed">
          <source>Gets or sets a value indicating if this type has a mixed content model.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si le type possède un modèle de contenu mixte.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaType.IsMixed">
          <source>This property is only valid in a complex type.</source>
          <target state="translated">Cette propriété n'est valide que pour un type complexe.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.IsMixed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the type has a mixed content model; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le type possède un modèle de contenu mixte ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.IsMixed">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.IsMixed">
          <source>This virtual method is overridden in derived classes.</source>
          <target state="translated">Cette méthode virtuelle est substituée dans les classes dérivées.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaType.Name">
          <source>Gets or sets the name of the type.</source>
          <target state="translated">Obtient ou définit le nom du type.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Name">
          <source>The name of the type.</source>
          <target state="translated">Nom du type.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Name">
          <source>The name must be an no-colon name (NCName) as defined in the World Wide Web Consortium (W3C) XML Namespaces specification.</source>
          <target state="translated">Le nom doit être un nom de l’absence de caractère deux-points (NCName) comme défini dans la spécification d’espaces de noms XML World Wide Web Consortium (W3C).</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.Name">
          <source>If specified, the name must be unique among all <ph id="ph1">`simpleType`</ph> and <ph id="ph2">`complexType`</ph> elements.</source>
          <target state="translated">Si spécifié, le nom doit être unique parmi tous les <ph id="ph1">`simpleType`</ph> et <ph id="ph2">`complexType`</ph> éléments.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaType.QualifiedName">
          <source>Gets the qualified name for the type built from the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> attribute of this type.</source>
          <target state="translated">Obtient le nom qualifié du type construit à partir de l'attribut <ph id="ph1">&lt;see langword="Name" /&gt;</ph> de ce type.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaType.QualifiedName">
          <source>This is a post-schema-compilation property.</source>
          <target state="translated">Il s'agit d'une propriété postérieure à la compilation du schéma.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.QualifiedName">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> for the type built from the <ph id="ph2">&lt;see langword="Name" /&gt;</ph> attribute of this type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> du type construit à partir de l'attribut <ph id="ph2">&lt;see langword="Name" /&gt;</ph> de ce type.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaType.TypeCode">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> of the type.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> du type.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaType.TypeCode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>